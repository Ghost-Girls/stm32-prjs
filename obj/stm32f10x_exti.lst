ARM GAS  /tmp/cckH6qNJ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_exti.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	EXTI_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	EXTI_DeInit, %function
  22              	EXTI_DeInit:
  23              	.LFB63:
  24              		.file 1 "common/stm32f10x_exti.c"
   1:common/stm32f10x_exti.c **** /**
   2:common/stm32f10x_exti.c ****   ******************************************************************************
   3:common/stm32f10x_exti.c ****   * @file    stm32f10x_exti.c
   4:common/stm32f10x_exti.c ****   * @author  MCD Application Team
   5:common/stm32f10x_exti.c ****   * @version V3.5.0
   6:common/stm32f10x_exti.c ****   * @date    11-March-2011
   7:common/stm32f10x_exti.c ****   * @brief   This file provides all the EXTI firmware functions.
   8:common/stm32f10x_exti.c ****   ******************************************************************************
   9:common/stm32f10x_exti.c ****   * @attention
  10:common/stm32f10x_exti.c ****   *
  11:common/stm32f10x_exti.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:common/stm32f10x_exti.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:common/stm32f10x_exti.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:common/stm32f10x_exti.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:common/stm32f10x_exti.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:common/stm32f10x_exti.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:common/stm32f10x_exti.c ****   *
  18:common/stm32f10x_exti.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:common/stm32f10x_exti.c ****   ******************************************************************************
  20:common/stm32f10x_exti.c ****   */
  21:common/stm32f10x_exti.c **** 
  22:common/stm32f10x_exti.c **** /* Includes ------------------------------------------------------------------*/
  23:common/stm32f10x_exti.c **** #include "stm32f10x_exti.h"
  24:common/stm32f10x_exti.c **** #include "stm32f10x_conf.h"
  25:common/stm32f10x_exti.c **** 
  26:common/stm32f10x_exti.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:common/stm32f10x_exti.c ****   * @{
  28:common/stm32f10x_exti.c ****   */
  29:common/stm32f10x_exti.c **** 
  30:common/stm32f10x_exti.c **** /** @defgroup EXTI 
  31:common/stm32f10x_exti.c ****   * @brief EXTI driver modules
  32:common/stm32f10x_exti.c ****   * @{
  33:common/stm32f10x_exti.c ****   */
ARM GAS  /tmp/cckH6qNJ.s 			page 2


  34:common/stm32f10x_exti.c **** 
  35:common/stm32f10x_exti.c **** /** @defgroup EXTI_Private_TypesDefinitions
  36:common/stm32f10x_exti.c ****   * @{
  37:common/stm32f10x_exti.c ****   */
  38:common/stm32f10x_exti.c **** 
  39:common/stm32f10x_exti.c **** /**
  40:common/stm32f10x_exti.c ****   * @}
  41:common/stm32f10x_exti.c ****   */
  42:common/stm32f10x_exti.c **** 
  43:common/stm32f10x_exti.c **** /** @defgroup EXTI_Private_Defines
  44:common/stm32f10x_exti.c ****   * @{
  45:common/stm32f10x_exti.c ****   */
  46:common/stm32f10x_exti.c **** 
  47:common/stm32f10x_exti.c **** #define EXTI_LINENONE    ((uint32_t)0x00000)  /* No interrupt selected */
  48:common/stm32f10x_exti.c **** 
  49:common/stm32f10x_exti.c **** /**
  50:common/stm32f10x_exti.c ****   * @}
  51:common/stm32f10x_exti.c ****   */
  52:common/stm32f10x_exti.c **** 
  53:common/stm32f10x_exti.c **** /** @defgroup EXTI_Private_Macros
  54:common/stm32f10x_exti.c ****   * @{
  55:common/stm32f10x_exti.c ****   */
  56:common/stm32f10x_exti.c **** 
  57:common/stm32f10x_exti.c **** /**
  58:common/stm32f10x_exti.c ****   * @}
  59:common/stm32f10x_exti.c ****   */
  60:common/stm32f10x_exti.c **** 
  61:common/stm32f10x_exti.c **** /** @defgroup EXTI_Private_Variables
  62:common/stm32f10x_exti.c ****   * @{
  63:common/stm32f10x_exti.c ****   */
  64:common/stm32f10x_exti.c **** 
  65:common/stm32f10x_exti.c **** /**
  66:common/stm32f10x_exti.c ****   * @}
  67:common/stm32f10x_exti.c ****   */
  68:common/stm32f10x_exti.c **** 
  69:common/stm32f10x_exti.c **** /** @defgroup EXTI_Private_FunctionPrototypes
  70:common/stm32f10x_exti.c ****   * @{
  71:common/stm32f10x_exti.c ****   */
  72:common/stm32f10x_exti.c **** 
  73:common/stm32f10x_exti.c **** /**
  74:common/stm32f10x_exti.c ****   * @}
  75:common/stm32f10x_exti.c ****   */
  76:common/stm32f10x_exti.c **** 
  77:common/stm32f10x_exti.c **** /** @defgroup EXTI_Private_Functions
  78:common/stm32f10x_exti.c ****   * @{
  79:common/stm32f10x_exti.c ****   */
  80:common/stm32f10x_exti.c **** 
  81:common/stm32f10x_exti.c **** /**
  82:common/stm32f10x_exti.c ****   * @brief  Deinitializes the EXTI peripheral registers to their default reset values.
  83:common/stm32f10x_exti.c ****   * @param  None
  84:common/stm32f10x_exti.c ****   * @retval None
  85:common/stm32f10x_exti.c ****   */
  86:common/stm32f10x_exti.c **** void EXTI_DeInit(void)
  87:common/stm32f10x_exti.c **** {
  25              		.loc 1 87 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cckH6qNJ.s 			page 3


  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 80B4     		push	{r7}
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 7, -4
  33 0002 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  88:common/stm32f10x_exti.c ****   EXTI->IMR = 0x00000000;
  35              		.loc 1 88 0
  36 0004 094B     		ldr	r3, .L2
  37 0006 0022     		movs	r2, #0
  38 0008 1A60     		str	r2, [r3]
  89:common/stm32f10x_exti.c ****   EXTI->EMR = 0x00000000;
  39              		.loc 1 89 0
  40 000a 084B     		ldr	r3, .L2
  41 000c 0022     		movs	r2, #0
  42 000e 5A60     		str	r2, [r3, #4]
  90:common/stm32f10x_exti.c ****   EXTI->RTSR = 0x00000000; 
  43              		.loc 1 90 0
  44 0010 064B     		ldr	r3, .L2
  45 0012 0022     		movs	r2, #0
  46 0014 9A60     		str	r2, [r3, #8]
  91:common/stm32f10x_exti.c ****   EXTI->FTSR = 0x00000000; 
  47              		.loc 1 91 0
  48 0016 054B     		ldr	r3, .L2
  49 0018 0022     		movs	r2, #0
  50 001a DA60     		str	r2, [r3, #12]
  92:common/stm32f10x_exti.c ****   EXTI->PR = 0x000FFFFF;
  51              		.loc 1 92 0
  52 001c 034B     		ldr	r3, .L2
  53 001e 044A     		ldr	r2, .L2+4
  54 0020 5A61     		str	r2, [r3, #20]
  93:common/stm32f10x_exti.c **** }
  55              		.loc 1 93 0
  56 0022 00BF     		nop
  57 0024 BD46     		mov	sp, r7
  58              		.cfi_def_cfa_register 13
  59              		@ sp needed
  60 0026 80BC     		pop	{r7}
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 0028 7047     		bx	lr
  64              	.L3:
  65 002a 00BF     		.align	2
  66              	.L2:
  67 002c 00040140 		.word	1073808384
  68 0030 FFFF0F00 		.word	1048575
  69              		.cfi_endproc
  70              	.LFE63:
  71              		.size	EXTI_DeInit, .-EXTI_DeInit
  72              		.align	1
  73              		.global	EXTI_Init
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu softvfp
  78              		.type	EXTI_Init, %function
ARM GAS  /tmp/cckH6qNJ.s 			page 4


  79              	EXTI_Init:
  80              	.LFB64:
  94:common/stm32f10x_exti.c **** 
  95:common/stm32f10x_exti.c **** /**
  96:common/stm32f10x_exti.c ****   * @brief  Initializes the EXTI peripheral according to the specified
  97:common/stm32f10x_exti.c ****   *         parameters in the EXTI_InitStruct.
  98:common/stm32f10x_exti.c ****   * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure
  99:common/stm32f10x_exti.c ****   *         that contains the configuration information for the EXTI peripheral.
 100:common/stm32f10x_exti.c ****   * @retval None
 101:common/stm32f10x_exti.c ****   */
 102:common/stm32f10x_exti.c **** void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
 103:common/stm32f10x_exti.c **** {
  81              		.loc 1 103 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 16
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0034 80B4     		push	{r7}
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 7, -4
  89 0036 85B0     		sub	sp, sp, #20
  90              		.cfi_def_cfa_offset 24
  91 0038 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  93 003a 7860     		str	r0, [r7, #4]
 104:common/stm32f10x_exti.c ****   uint32_t tmp = 0;
  94              		.loc 1 104 0
  95 003c 0023     		movs	r3, #0
  96 003e FB60     		str	r3, [r7, #12]
 105:common/stm32f10x_exti.c **** 
 106:common/stm32f10x_exti.c ****   /* Check the parameters */
 107:common/stm32f10x_exti.c ****   assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
 108:common/stm32f10x_exti.c ****   assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
 109:common/stm32f10x_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
 110:common/stm32f10x_exti.c ****   assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
 111:common/stm32f10x_exti.c **** 
 112:common/stm32f10x_exti.c ****   tmp = (uint32_t)EXTI_BASE;
  97              		.loc 1 112 0
  98 0040 344B     		ldr	r3, .L10
  99 0042 FB60     		str	r3, [r7, #12]
 113:common/stm32f10x_exti.c ****      
 114:common/stm32f10x_exti.c ****   if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
 100              		.loc 1 114 0
 101 0044 7B68     		ldr	r3, [r7, #4]
 102 0046 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 103 0048 002B     		cmp	r3, #0
 104 004a 4FD0     		beq	.L5
 115:common/stm32f10x_exti.c ****   {
 116:common/stm32f10x_exti.c ****     /* Clear EXTI line configuration */
 117:common/stm32f10x_exti.c ****     EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
 105              		.loc 1 117 0
 106 004c 3149     		ldr	r1, .L10
 107 004e 314B     		ldr	r3, .L10
 108 0050 1A68     		ldr	r2, [r3]
 109 0052 7B68     		ldr	r3, [r7, #4]
 110 0054 1B68     		ldr	r3, [r3]
 111 0056 DB43     		mvns	r3, r3
ARM GAS  /tmp/cckH6qNJ.s 			page 5


 112 0058 1340     		ands	r3, r3, r2
 113 005a 0B60     		str	r3, [r1]
 118:common/stm32f10x_exti.c ****     EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
 114              		.loc 1 118 0
 115 005c 2D49     		ldr	r1, .L10
 116 005e 2D4B     		ldr	r3, .L10
 117 0060 5A68     		ldr	r2, [r3, #4]
 118 0062 7B68     		ldr	r3, [r7, #4]
 119 0064 1B68     		ldr	r3, [r3]
 120 0066 DB43     		mvns	r3, r3
 121 0068 1340     		ands	r3, r3, r2
 122 006a 4B60     		str	r3, [r1, #4]
 119:common/stm32f10x_exti.c ****     
 120:common/stm32f10x_exti.c ****     tmp += EXTI_InitStruct->EXTI_Mode;
 123              		.loc 1 120 0
 124 006c 7B68     		ldr	r3, [r7, #4]
 125 006e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 126 0070 1A46     		mov	r2, r3
 127 0072 FB68     		ldr	r3, [r7, #12]
 128 0074 1344     		add	r3, r3, r2
 129 0076 FB60     		str	r3, [r7, #12]
 121:common/stm32f10x_exti.c **** 
 122:common/stm32f10x_exti.c ****     *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
 130              		.loc 1 122 0
 131 0078 FB68     		ldr	r3, [r7, #12]
 132 007a FA68     		ldr	r2, [r7, #12]
 133 007c 1168     		ldr	r1, [r2]
 134 007e 7A68     		ldr	r2, [r7, #4]
 135 0080 1268     		ldr	r2, [r2]
 136 0082 0A43     		orrs	r2, r2, r1
 137 0084 1A60     		str	r2, [r3]
 123:common/stm32f10x_exti.c **** 
 124:common/stm32f10x_exti.c ****     /* Clear Rising Falling edge configuration */
 125:common/stm32f10x_exti.c ****     EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
 138              		.loc 1 125 0
 139 0086 2349     		ldr	r1, .L10
 140 0088 224B     		ldr	r3, .L10
 141 008a 9A68     		ldr	r2, [r3, #8]
 142 008c 7B68     		ldr	r3, [r7, #4]
 143 008e 1B68     		ldr	r3, [r3]
 144 0090 DB43     		mvns	r3, r3
 145 0092 1340     		ands	r3, r3, r2
 146 0094 8B60     		str	r3, [r1, #8]
 126:common/stm32f10x_exti.c ****     EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
 147              		.loc 1 126 0
 148 0096 1F49     		ldr	r1, .L10
 149 0098 1E4B     		ldr	r3, .L10
 150 009a DA68     		ldr	r2, [r3, #12]
 151 009c 7B68     		ldr	r3, [r7, #4]
 152 009e 1B68     		ldr	r3, [r3]
 153 00a0 DB43     		mvns	r3, r3
 154 00a2 1340     		ands	r3, r3, r2
 155 00a4 CB60     		str	r3, [r1, #12]
 127:common/stm32f10x_exti.c ****     
 128:common/stm32f10x_exti.c ****     /* Select the trigger for the selected external interrupts */
 129:common/stm32f10x_exti.c ****     if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
 156              		.loc 1 129 0
ARM GAS  /tmp/cckH6qNJ.s 			page 6


 157 00a6 7B68     		ldr	r3, [r7, #4]
 158 00a8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 159 00aa 102B     		cmp	r3, #16
 160 00ac 0ED1     		bne	.L6
 130:common/stm32f10x_exti.c ****     {
 131:common/stm32f10x_exti.c ****       /* Rising Falling edge */
 132:common/stm32f10x_exti.c ****       EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
 161              		.loc 1 132 0
 162 00ae 1949     		ldr	r1, .L10
 163 00b0 184B     		ldr	r3, .L10
 164 00b2 9A68     		ldr	r2, [r3, #8]
 165 00b4 7B68     		ldr	r3, [r7, #4]
 166 00b6 1B68     		ldr	r3, [r3]
 167 00b8 1343     		orrs	r3, r3, r2
 168 00ba 8B60     		str	r3, [r1, #8]
 133:common/stm32f10x_exti.c ****       EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
 169              		.loc 1 133 0
 170 00bc 1549     		ldr	r1, .L10
 171 00be 154B     		ldr	r3, .L10
 172 00c0 DA68     		ldr	r2, [r3, #12]
 173 00c2 7B68     		ldr	r3, [r7, #4]
 174 00c4 1B68     		ldr	r3, [r3]
 175 00c6 1343     		orrs	r3, r3, r2
 176 00c8 CB60     		str	r3, [r1, #12]
 134:common/stm32f10x_exti.c ****     }
 135:common/stm32f10x_exti.c ****     else
 136:common/stm32f10x_exti.c ****     {
 137:common/stm32f10x_exti.c ****       tmp = (uint32_t)EXTI_BASE;
 138:common/stm32f10x_exti.c ****       tmp += EXTI_InitStruct->EXTI_Trigger;
 139:common/stm32f10x_exti.c **** 
 140:common/stm32f10x_exti.c ****       *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
 141:common/stm32f10x_exti.c ****     }
 142:common/stm32f10x_exti.c ****   }
 143:common/stm32f10x_exti.c ****   else
 144:common/stm32f10x_exti.c ****   {
 145:common/stm32f10x_exti.c ****     tmp += EXTI_InitStruct->EXTI_Mode;
 146:common/stm32f10x_exti.c **** 
 147:common/stm32f10x_exti.c ****     /* Disable the selected external lines */
 148:common/stm32f10x_exti.c ****     *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
 149:common/stm32f10x_exti.c ****   }
 150:common/stm32f10x_exti.c **** }
 177              		.loc 1 150 0
 178 00ca 1DE0     		b	.L9
 179              	.L6:
 137:common/stm32f10x_exti.c ****       tmp += EXTI_InitStruct->EXTI_Trigger;
 180              		.loc 1 137 0
 181 00cc 114B     		ldr	r3, .L10
 182 00ce FB60     		str	r3, [r7, #12]
 138:common/stm32f10x_exti.c **** 
 183              		.loc 1 138 0
 184 00d0 7B68     		ldr	r3, [r7, #4]
 185 00d2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 186 00d4 1A46     		mov	r2, r3
 187 00d6 FB68     		ldr	r3, [r7, #12]
 188 00d8 1344     		add	r3, r3, r2
 189 00da FB60     		str	r3, [r7, #12]
 140:common/stm32f10x_exti.c ****     }
ARM GAS  /tmp/cckH6qNJ.s 			page 7


 190              		.loc 1 140 0
 191 00dc FB68     		ldr	r3, [r7, #12]
 192 00de FA68     		ldr	r2, [r7, #12]
 193 00e0 1168     		ldr	r1, [r2]
 194 00e2 7A68     		ldr	r2, [r7, #4]
 195 00e4 1268     		ldr	r2, [r2]
 196 00e6 0A43     		orrs	r2, r2, r1
 197 00e8 1A60     		str	r2, [r3]
 198              		.loc 1 150 0
 199 00ea 0DE0     		b	.L9
 200              	.L5:
 145:common/stm32f10x_exti.c **** 
 201              		.loc 1 145 0
 202 00ec 7B68     		ldr	r3, [r7, #4]
 203 00ee 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 204 00f0 1A46     		mov	r2, r3
 205 00f2 FB68     		ldr	r3, [r7, #12]
 206 00f4 1344     		add	r3, r3, r2
 207 00f6 FB60     		str	r3, [r7, #12]
 148:common/stm32f10x_exti.c ****   }
 208              		.loc 1 148 0
 209 00f8 FB68     		ldr	r3, [r7, #12]
 210 00fa FA68     		ldr	r2, [r7, #12]
 211 00fc 1168     		ldr	r1, [r2]
 212 00fe 7A68     		ldr	r2, [r7, #4]
 213 0100 1268     		ldr	r2, [r2]
 214 0102 D243     		mvns	r2, r2
 215 0104 0A40     		ands	r2, r2, r1
 216 0106 1A60     		str	r2, [r3]
 217              	.L9:
 218              		.loc 1 150 0
 219 0108 00BF     		nop
 220 010a 1437     		adds	r7, r7, #20
 221              		.cfi_def_cfa_offset 4
 222 010c BD46     		mov	sp, r7
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 010e 80BC     		pop	{r7}
 226              		.cfi_restore 7
 227              		.cfi_def_cfa_offset 0
 228 0110 7047     		bx	lr
 229              	.L11:
 230 0112 00BF     		.align	2
 231              	.L10:
 232 0114 00040140 		.word	1073808384
 233              		.cfi_endproc
 234              	.LFE64:
 235              		.size	EXTI_Init, .-EXTI_Init
 236              		.align	1
 237              		.global	EXTI_StructInit
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 242              		.type	EXTI_StructInit, %function
 243              	EXTI_StructInit:
 244              	.LFB65:
ARM GAS  /tmp/cckH6qNJ.s 			page 8


 151:common/stm32f10x_exti.c **** 
 152:common/stm32f10x_exti.c **** /**
 153:common/stm32f10x_exti.c ****   * @brief  Fills each EXTI_InitStruct member with its reset value.
 154:common/stm32f10x_exti.c ****   * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure which will
 155:common/stm32f10x_exti.c ****   *         be initialized.
 156:common/stm32f10x_exti.c ****   * @retval None
 157:common/stm32f10x_exti.c ****   */
 158:common/stm32f10x_exti.c **** void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
 159:common/stm32f10x_exti.c **** {
 245              		.loc 1 159 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0118 80B4     		push	{r7}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 011a 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 16
 255 011c 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 011e 7860     		str	r0, [r7, #4]
 160:common/stm32f10x_exti.c ****   EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
 258              		.loc 1 160 0
 259 0120 7B68     		ldr	r3, [r7, #4]
 260 0122 0022     		movs	r2, #0
 261 0124 1A60     		str	r2, [r3]
 161:common/stm32f10x_exti.c ****   EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
 262              		.loc 1 161 0
 263 0126 7B68     		ldr	r3, [r7, #4]
 264 0128 0022     		movs	r2, #0
 265 012a 1A71     		strb	r2, [r3, #4]
 162:common/stm32f10x_exti.c ****   EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
 266              		.loc 1 162 0
 267 012c 7B68     		ldr	r3, [r7, #4]
 268 012e 0C22     		movs	r2, #12
 269 0130 5A71     		strb	r2, [r3, #5]
 163:common/stm32f10x_exti.c ****   EXTI_InitStruct->EXTI_LineCmd = DISABLE;
 270              		.loc 1 163 0
 271 0132 7B68     		ldr	r3, [r7, #4]
 272 0134 0022     		movs	r2, #0
 273 0136 9A71     		strb	r2, [r3, #6]
 164:common/stm32f10x_exti.c **** }
 274              		.loc 1 164 0
 275 0138 00BF     		nop
 276 013a 0C37     		adds	r7, r7, #12
 277              		.cfi_def_cfa_offset 4
 278 013c BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 013e 80BC     		pop	{r7}
 282              		.cfi_restore 7
 283              		.cfi_def_cfa_offset 0
 284 0140 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE65:
 287              		.size	EXTI_StructInit, .-EXTI_StructInit
ARM GAS  /tmp/cckH6qNJ.s 			page 9


 288              		.align	1
 289              		.global	EXTI_GenerateSWInterrupt
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu softvfp
 294              		.type	EXTI_GenerateSWInterrupt, %function
 295              	EXTI_GenerateSWInterrupt:
 296              	.LFB66:
 165:common/stm32f10x_exti.c **** 
 166:common/stm32f10x_exti.c **** /**
 167:common/stm32f10x_exti.c ****   * @brief  Generates a Software interrupt.
 168:common/stm32f10x_exti.c ****   * @param  EXTI_Line: specifies the EXTI lines to be enabled or disabled.
 169:common/stm32f10x_exti.c ****   *   This parameter can be any combination of EXTI_Linex where x can be (0..19).
 170:common/stm32f10x_exti.c ****   * @retval None
 171:common/stm32f10x_exti.c ****   */
 172:common/stm32f10x_exti.c **** void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
 173:common/stm32f10x_exti.c **** {
 297              		.loc 1 173 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0142 80B4     		push	{r7}
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 7, -4
 305 0144 83B0     		sub	sp, sp, #12
 306              		.cfi_def_cfa_offset 16
 307 0146 00AF     		add	r7, sp, #0
 308              		.cfi_def_cfa_register 7
 309 0148 7860     		str	r0, [r7, #4]
 174:common/stm32f10x_exti.c ****   /* Check the parameters */
 175:common/stm32f10x_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_Line));
 176:common/stm32f10x_exti.c ****   
 177:common/stm32f10x_exti.c ****   EXTI->SWIER |= EXTI_Line;
 310              		.loc 1 177 0
 311 014a 0549     		ldr	r1, .L14
 312 014c 044B     		ldr	r3, .L14
 313 014e 1A69     		ldr	r2, [r3, #16]
 314 0150 7B68     		ldr	r3, [r7, #4]
 315 0152 1343     		orrs	r3, r3, r2
 316 0154 0B61     		str	r3, [r1, #16]
 178:common/stm32f10x_exti.c **** }
 317              		.loc 1 178 0
 318 0156 00BF     		nop
 319 0158 0C37     		adds	r7, r7, #12
 320              		.cfi_def_cfa_offset 4
 321 015a BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 015c 80BC     		pop	{r7}
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 015e 7047     		bx	lr
 328              	.L15:
 329              		.align	2
 330              	.L14:
ARM GAS  /tmp/cckH6qNJ.s 			page 10


 331 0160 00040140 		.word	1073808384
 332              		.cfi_endproc
 333              	.LFE66:
 334              		.size	EXTI_GenerateSWInterrupt, .-EXTI_GenerateSWInterrupt
 335              		.align	1
 336              		.global	EXTI_GetFlagStatus
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu softvfp
 341              		.type	EXTI_GetFlagStatus, %function
 342              	EXTI_GetFlagStatus:
 343              	.LFB67:
 179:common/stm32f10x_exti.c **** 
 180:common/stm32f10x_exti.c **** /**
 181:common/stm32f10x_exti.c ****   * @brief  Checks whether the specified EXTI line flag is set or not.
 182:common/stm32f10x_exti.c ****   * @param  EXTI_Line: specifies the EXTI line flag to check.
 183:common/stm32f10x_exti.c ****   *   This parameter can be:
 184:common/stm32f10x_exti.c ****   *     @arg EXTI_Linex: External interrupt line x where x(0..19)
 185:common/stm32f10x_exti.c ****   * @retval The new state of EXTI_Line (SET or RESET).
 186:common/stm32f10x_exti.c ****   */
 187:common/stm32f10x_exti.c **** FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
 188:common/stm32f10x_exti.c **** {
 344              		.loc 1 188 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 16
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0164 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0166 85B0     		sub	sp, sp, #20
 353              		.cfi_def_cfa_offset 24
 354 0168 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 016a 7860     		str	r0, [r7, #4]
 189:common/stm32f10x_exti.c ****   FlagStatus bitstatus = RESET;
 357              		.loc 1 189 0
 358 016c 0023     		movs	r3, #0
 359 016e FB73     		strb	r3, [r7, #15]
 190:common/stm32f10x_exti.c ****   /* Check the parameters */
 191:common/stm32f10x_exti.c ****   assert_param(IS_GET_EXTI_LINE(EXTI_Line));
 192:common/stm32f10x_exti.c ****   
 193:common/stm32f10x_exti.c ****   if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
 360              		.loc 1 193 0
 361 0170 084B     		ldr	r3, .L20
 362 0172 5A69     		ldr	r2, [r3, #20]
 363 0174 7B68     		ldr	r3, [r7, #4]
 364 0176 1340     		ands	r3, r3, r2
 365 0178 002B     		cmp	r3, #0
 366 017a 02D0     		beq	.L17
 194:common/stm32f10x_exti.c ****   {
 195:common/stm32f10x_exti.c ****     bitstatus = SET;
 367              		.loc 1 195 0
 368 017c 0123     		movs	r3, #1
 369 017e FB73     		strb	r3, [r7, #15]
 370 0180 01E0     		b	.L18
ARM GAS  /tmp/cckH6qNJ.s 			page 11


 371              	.L17:
 196:common/stm32f10x_exti.c ****   }
 197:common/stm32f10x_exti.c ****   else
 198:common/stm32f10x_exti.c ****   {
 199:common/stm32f10x_exti.c ****     bitstatus = RESET;
 372              		.loc 1 199 0
 373 0182 0023     		movs	r3, #0
 374 0184 FB73     		strb	r3, [r7, #15]
 375              	.L18:
 200:common/stm32f10x_exti.c ****   }
 201:common/stm32f10x_exti.c ****   return bitstatus;
 376              		.loc 1 201 0
 377 0186 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 202:common/stm32f10x_exti.c **** }
 378              		.loc 1 202 0
 379 0188 1846     		mov	r0, r3
 380 018a 1437     		adds	r7, r7, #20
 381              		.cfi_def_cfa_offset 4
 382 018c BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 018e 80BC     		pop	{r7}
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0190 7047     		bx	lr
 389              	.L21:
 390 0192 00BF     		.align	2
 391              	.L20:
 392 0194 00040140 		.word	1073808384
 393              		.cfi_endproc
 394              	.LFE67:
 395              		.size	EXTI_GetFlagStatus, .-EXTI_GetFlagStatus
 396              		.align	1
 397              		.global	EXTI_ClearFlag
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu softvfp
 402              		.type	EXTI_ClearFlag, %function
 403              	EXTI_ClearFlag:
 404              	.LFB68:
 203:common/stm32f10x_exti.c **** 
 204:common/stm32f10x_exti.c **** /**
 205:common/stm32f10x_exti.c ****   * @brief  Clears the EXTI's line pending flags.
 206:common/stm32f10x_exti.c ****   * @param  EXTI_Line: specifies the EXTI lines flags to clear.
 207:common/stm32f10x_exti.c ****   *   This parameter can be any combination of EXTI_Linex where x can be (0..19).
 208:common/stm32f10x_exti.c ****   * @retval None
 209:common/stm32f10x_exti.c ****   */
 210:common/stm32f10x_exti.c **** void EXTI_ClearFlag(uint32_t EXTI_Line)
 211:common/stm32f10x_exti.c **** {
 405              		.loc 1 211 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 8
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410 0198 80B4     		push	{r7}
 411              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cckH6qNJ.s 			page 12


 412              		.cfi_offset 7, -4
 413 019a 83B0     		sub	sp, sp, #12
 414              		.cfi_def_cfa_offset 16
 415 019c 00AF     		add	r7, sp, #0
 416              		.cfi_def_cfa_register 7
 417 019e 7860     		str	r0, [r7, #4]
 212:common/stm32f10x_exti.c ****   /* Check the parameters */
 213:common/stm32f10x_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_Line));
 214:common/stm32f10x_exti.c ****   
 215:common/stm32f10x_exti.c ****   EXTI->PR = EXTI_Line;
 418              		.loc 1 215 0
 419 01a0 034A     		ldr	r2, .L23
 420 01a2 7B68     		ldr	r3, [r7, #4]
 421 01a4 5361     		str	r3, [r2, #20]
 216:common/stm32f10x_exti.c **** }
 422              		.loc 1 216 0
 423 01a6 00BF     		nop
 424 01a8 0C37     		adds	r7, r7, #12
 425              		.cfi_def_cfa_offset 4
 426 01aa BD46     		mov	sp, r7
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 01ac 80BC     		pop	{r7}
 430              		.cfi_restore 7
 431              		.cfi_def_cfa_offset 0
 432 01ae 7047     		bx	lr
 433              	.L24:
 434              		.align	2
 435              	.L23:
 436 01b0 00040140 		.word	1073808384
 437              		.cfi_endproc
 438              	.LFE68:
 439              		.size	EXTI_ClearFlag, .-EXTI_ClearFlag
 440              		.align	1
 441              		.global	EXTI_GetITStatus
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu softvfp
 446              		.type	EXTI_GetITStatus, %function
 447              	EXTI_GetITStatus:
 448              	.LFB69:
 217:common/stm32f10x_exti.c **** 
 218:common/stm32f10x_exti.c **** /**
 219:common/stm32f10x_exti.c ****   * @brief  Checks whether the specified EXTI line is asserted or not.
 220:common/stm32f10x_exti.c ****   * @param  EXTI_Line: specifies the EXTI line to check.
 221:common/stm32f10x_exti.c ****   *   This parameter can be:
 222:common/stm32f10x_exti.c ****   *     @arg EXTI_Linex: External interrupt line x where x(0..19)
 223:common/stm32f10x_exti.c ****   * @retval The new state of EXTI_Line (SET or RESET).
 224:common/stm32f10x_exti.c ****   */
 225:common/stm32f10x_exti.c **** ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
 226:common/stm32f10x_exti.c **** {
 449              		.loc 1 226 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
ARM GAS  /tmp/cckH6qNJ.s 			page 13


 454 01b4 80B4     		push	{r7}
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 01b6 85B0     		sub	sp, sp, #20
 458              		.cfi_def_cfa_offset 24
 459 01b8 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 461 01ba 7860     		str	r0, [r7, #4]
 227:common/stm32f10x_exti.c ****   ITStatus bitstatus = RESET;
 462              		.loc 1 227 0
 463 01bc 0023     		movs	r3, #0
 464 01be FB73     		strb	r3, [r7, #15]
 228:common/stm32f10x_exti.c ****   uint32_t enablestatus = 0;
 465              		.loc 1 228 0
 466 01c0 0023     		movs	r3, #0
 467 01c2 BB60     		str	r3, [r7, #8]
 229:common/stm32f10x_exti.c ****   /* Check the parameters */
 230:common/stm32f10x_exti.c ****   assert_param(IS_GET_EXTI_LINE(EXTI_Line));
 231:common/stm32f10x_exti.c ****   
 232:common/stm32f10x_exti.c ****   enablestatus =  EXTI->IMR & EXTI_Line;
 468              		.loc 1 232 0
 469 01c4 0C4B     		ldr	r3, .L29
 470 01c6 1A68     		ldr	r2, [r3]
 471 01c8 7B68     		ldr	r3, [r7, #4]
 472 01ca 1340     		ands	r3, r3, r2
 473 01cc BB60     		str	r3, [r7, #8]
 233:common/stm32f10x_exti.c ****   if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 474              		.loc 1 233 0
 475 01ce 0A4B     		ldr	r3, .L29
 476 01d0 5A69     		ldr	r2, [r3, #20]
 477 01d2 7B68     		ldr	r3, [r7, #4]
 478 01d4 1340     		ands	r3, r3, r2
 479 01d6 002B     		cmp	r3, #0
 480 01d8 05D0     		beq	.L26
 481              		.loc 1 233 0 is_stmt 0 discriminator 1
 482 01da BB68     		ldr	r3, [r7, #8]
 483 01dc 002B     		cmp	r3, #0
 484 01de 02D0     		beq	.L26
 234:common/stm32f10x_exti.c ****   {
 235:common/stm32f10x_exti.c ****     bitstatus = SET;
 485              		.loc 1 235 0 is_stmt 1
 486 01e0 0123     		movs	r3, #1
 487 01e2 FB73     		strb	r3, [r7, #15]
 488 01e4 01E0     		b	.L27
 489              	.L26:
 236:common/stm32f10x_exti.c ****   }
 237:common/stm32f10x_exti.c ****   else
 238:common/stm32f10x_exti.c ****   {
 239:common/stm32f10x_exti.c ****     bitstatus = RESET;
 490              		.loc 1 239 0
 491 01e6 0023     		movs	r3, #0
 492 01e8 FB73     		strb	r3, [r7, #15]
 493              	.L27:
 240:common/stm32f10x_exti.c ****   }
 241:common/stm32f10x_exti.c ****   return bitstatus;
 494              		.loc 1 241 0
 495 01ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/cckH6qNJ.s 			page 14


 242:common/stm32f10x_exti.c **** }
 496              		.loc 1 242 0
 497 01ec 1846     		mov	r0, r3
 498 01ee 1437     		adds	r7, r7, #20
 499              		.cfi_def_cfa_offset 4
 500 01f0 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 01f2 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 01f4 7047     		bx	lr
 507              	.L30:
 508 01f6 00BF     		.align	2
 509              	.L29:
 510 01f8 00040140 		.word	1073808384
 511              		.cfi_endproc
 512              	.LFE69:
 513              		.size	EXTI_GetITStatus, .-EXTI_GetITStatus
 514              		.align	1
 515              		.global	EXTI_ClearITPendingBit
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu softvfp
 520              		.type	EXTI_ClearITPendingBit, %function
 521              	EXTI_ClearITPendingBit:
 522              	.LFB70:
 243:common/stm32f10x_exti.c **** 
 244:common/stm32f10x_exti.c **** /**
 245:common/stm32f10x_exti.c ****   * @brief  Clears the EXTI's line pending bits.
 246:common/stm32f10x_exti.c ****   * @param  EXTI_Line: specifies the EXTI lines to clear.
 247:common/stm32f10x_exti.c ****   *   This parameter can be any combination of EXTI_Linex where x can be (0..19).
 248:common/stm32f10x_exti.c ****   * @retval None
 249:common/stm32f10x_exti.c ****   */
 250:common/stm32f10x_exti.c **** void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
 251:common/stm32f10x_exti.c **** {
 523              		.loc 1 251 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 01fc 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 01fe 83B0     		sub	sp, sp, #12
 532              		.cfi_def_cfa_offset 16
 533 0200 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0202 7860     		str	r0, [r7, #4]
 252:common/stm32f10x_exti.c ****   /* Check the parameters */
 253:common/stm32f10x_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_Line));
 254:common/stm32f10x_exti.c ****   
 255:common/stm32f10x_exti.c ****   EXTI->PR = EXTI_Line;
 536              		.loc 1 255 0
 537 0204 034A     		ldr	r2, .L32
 538 0206 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckH6qNJ.s 			page 15


 539 0208 5361     		str	r3, [r2, #20]
 256:common/stm32f10x_exti.c **** }
 540              		.loc 1 256 0
 541 020a 00BF     		nop
 542 020c 0C37     		adds	r7, r7, #12
 543              		.cfi_def_cfa_offset 4
 544 020e BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0210 80BC     		pop	{r7}
 548              		.cfi_restore 7
 549              		.cfi_def_cfa_offset 0
 550 0212 7047     		bx	lr
 551              	.L33:
 552              		.align	2
 553              	.L32:
 554 0214 00040140 		.word	1073808384
 555              		.cfi_endproc
 556              	.LFE70:
 557              		.size	EXTI_ClearITPendingBit, .-EXTI_ClearITPendingBit
 558              	.Letext0:
 559              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 560              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 561              		.file 4 "include/core_cm3.h"
 562              		.file 5 "include/system_stm32f10x.h"
 563              		.file 6 "include/stm32f10x.h"
 564              		.file 7 "include/stm32f10x_exti.h"
 565              		.section	.debug_info,"",%progbits
 566              	.Ldebug_info0:
 567 0000 5C030000 		.4byte	0x35c
 568 0004 0400     		.2byte	0x4
 569 0006 00000000 		.4byte	.Ldebug_abbrev0
 570 000a 04       		.byte	0x4
 571 000b 01       		.uleb128 0x1
 572 000c C5010000 		.4byte	.LASF48
 573 0010 0C       		.byte	0xc
 574 0011 6E000000 		.4byte	.LASF49
 575 0015 65010000 		.4byte	.LASF50
 576 0019 00000000 		.4byte	.Ltext0
 577 001d 18020000 		.4byte	.Letext0-.Ltext0
 578 0021 00000000 		.4byte	.Ldebug_line0
 579 0025 02       		.uleb128 0x2
 580 0026 01       		.byte	0x1
 581 0027 06       		.byte	0x6
 582 0028 44020000 		.4byte	.LASF0
 583 002c 02       		.uleb128 0x2
 584 002d 01       		.byte	0x1
 585 002e 08       		.byte	0x8
 586 002f F5000000 		.4byte	.LASF1
 587 0033 02       		.uleb128 0x2
 588 0034 02       		.byte	0x2
 589 0035 05       		.byte	0x5
 590 0036 BC020000 		.4byte	.LASF2
 591 003a 02       		.uleb128 0x2
 592 003b 02       		.byte	0x2
 593 003c 07       		.byte	0x7
 594 003d E0020000 		.4byte	.LASF3
ARM GAS  /tmp/cckH6qNJ.s 			page 16


 595 0041 03       		.uleb128 0x3
 596 0042 44000000 		.4byte	.LASF5
 597 0046 02       		.byte	0x2
 598 0047 3F       		.byte	0x3f
 599 0048 4C000000 		.4byte	0x4c
 600 004c 02       		.uleb128 0x2
 601 004d 04       		.byte	0x4
 602 004e 05       		.byte	0x5
 603 004f CF020000 		.4byte	.LASF4
 604 0053 03       		.uleb128 0x3
 605 0054 8A010000 		.4byte	.LASF6
 606 0058 02       		.byte	0x2
 607 0059 41       		.byte	0x41
 608 005a 5E000000 		.4byte	0x5e
 609 005e 02       		.uleb128 0x2
 610 005f 04       		.byte	0x4
 611 0060 07       		.byte	0x7
 612 0061 1D010000 		.4byte	.LASF7
 613 0065 02       		.uleb128 0x2
 614 0066 08       		.byte	0x8
 615 0067 05       		.byte	0x5
 616 0068 76020000 		.4byte	.LASF8
 617 006c 02       		.uleb128 0x2
 618 006d 08       		.byte	0x8
 619 006e 07       		.byte	0x7
 620 006f 2D020000 		.4byte	.LASF9
 621 0073 04       		.uleb128 0x4
 622 0074 04       		.byte	0x4
 623 0075 05       		.byte	0x5
 624 0076 696E7400 		.ascii	"int\000"
 625 007a 02       		.uleb128 0x2
 626 007b 04       		.byte	0x4
 627 007c 07       		.byte	0x7
 628 007d 03020000 		.4byte	.LASF10
 629 0081 03       		.uleb128 0x3
 630 0082 65020000 		.4byte	.LASF11
 631 0086 03       		.byte	0x3
 632 0087 2C       		.byte	0x2c
 633 0088 41000000 		.4byte	0x41
 634 008c 05       		.uleb128 0x5
 635 008d 81000000 		.4byte	0x81
 636 0091 03       		.uleb128 0x3
 637 0092 C6020000 		.4byte	.LASF12
 638 0096 03       		.byte	0x3
 639 0097 30       		.byte	0x30
 640 0098 53000000 		.4byte	0x53
 641 009c 05       		.uleb128 0x5
 642 009d 91000000 		.4byte	0x91
 643 00a1 02       		.uleb128 0x2
 644 00a2 04       		.byte	0x4
 645 00a3 07       		.byte	0x7
 646 00a4 6D020000 		.4byte	.LASF13
 647 00a8 06       		.uleb128 0x6
 648 00a9 53010000 		.4byte	.LASF14
 649 00ad 04       		.byte	0x4
 650 00ae 9606     		.2byte	0x696
 651 00b0 8C000000 		.4byte	0x8c
ARM GAS  /tmp/cckH6qNJ.s 			page 17


 652 00b4 07       		.uleb128 0x7
 653 00b5 84020000 		.4byte	.LASF15
 654 00b9 05       		.byte	0x5
 655 00ba 35       		.byte	0x35
 656 00bb 91000000 		.4byte	0x91
 657 00bf 08       		.uleb128 0x8
 658 00c0 01       		.byte	0x1
 659 00c1 2C000000 		.4byte	0x2c
 660 00c5 06       		.byte	0x6
 661 00c6 0702     		.2byte	0x207
 662 00c8 D9000000 		.4byte	0xd9
 663 00cc 09       		.uleb128 0x9
 664 00cd 2F010000 		.4byte	.LASF16
 665 00d1 00       		.byte	0
 666 00d2 0A       		.uleb128 0xa
 667 00d3 53455400 		.ascii	"SET\000"
 668 00d7 01       		.byte	0x1
 669 00d8 00       		.byte	0
 670 00d9 0B       		.uleb128 0xb
 671 00da 03010000 		.4byte	.LASF17
 672 00de 06       		.byte	0x6
 673 00df 0702     		.2byte	0x207
 674 00e1 BF000000 		.4byte	0xbf
 675 00e5 0B       		.uleb128 0xb
 676 00e6 14000000 		.4byte	.LASF18
 677 00ea 06       		.byte	0x6
 678 00eb 0702     		.2byte	0x207
 679 00ed BF000000 		.4byte	0xbf
 680 00f1 08       		.uleb128 0x8
 681 00f2 01       		.byte	0x1
 682 00f3 2C000000 		.4byte	0x2c
 683 00f7 06       		.byte	0x6
 684 00f8 0902     		.2byte	0x209
 685 00fa 0B010000 		.4byte	0x10b
 686 00fe 09       		.uleb128 0x9
 687 00ff D8020000 		.4byte	.LASF19
 688 0103 00       		.byte	0
 689 0104 09       		.uleb128 0x9
 690 0105 DA000000 		.4byte	.LASF20
 691 0109 01       		.byte	0x1
 692 010a 00       		.byte	0
 693 010b 0B       		.uleb128 0xb
 694 010c 86000000 		.4byte	.LASF21
 695 0110 06       		.byte	0x6
 696 0111 0902     		.2byte	0x209
 697 0113 F1000000 		.4byte	0xf1
 698 0117 0C       		.uleb128 0xc
 699 0118 18       		.byte	0x18
 700 0119 06       		.byte	0x6
 701 011a 7703     		.2byte	0x377
 702 011c 6E010000 		.4byte	0x16e
 703 0120 0D       		.uleb128 0xd
 704 0121 494D5200 		.ascii	"IMR\000"
 705 0125 06       		.byte	0x6
 706 0126 7903     		.2byte	0x379
 707 0128 9C000000 		.4byte	0x9c
 708 012c 00       		.byte	0
ARM GAS  /tmp/cckH6qNJ.s 			page 18


 709 012d 0D       		.uleb128 0xd
 710 012e 454D5200 		.ascii	"EMR\000"
 711 0132 06       		.byte	0x6
 712 0133 7A03     		.2byte	0x37a
 713 0135 9C000000 		.4byte	0x9c
 714 0139 04       		.byte	0x4
 715 013a 0E       		.uleb128 0xe
 716 013b 60010000 		.4byte	.LASF22
 717 013f 06       		.byte	0x6
 718 0140 7B03     		.2byte	0x37b
 719 0142 9C000000 		.4byte	0x9c
 720 0146 08       		.byte	0x8
 721 0147 0E       		.uleb128 0xe
 722 0148 19030000 		.4byte	.LASF23
 723 014c 06       		.byte	0x6
 724 014d 7C03     		.2byte	0x37c
 725 014f 9C000000 		.4byte	0x9c
 726 0153 0C       		.byte	0xc
 727 0154 0E       		.uleb128 0xe
 728 0155 07030000 		.4byte	.LASF24
 729 0159 06       		.byte	0x6
 730 015a 7D03     		.2byte	0x37d
 731 015c 9C000000 		.4byte	0x9c
 732 0160 10       		.byte	0x10
 733 0161 0D       		.uleb128 0xd
 734 0162 505200   		.ascii	"PR\000"
 735 0165 06       		.byte	0x6
 736 0166 7E03     		.2byte	0x37e
 737 0168 9C000000 		.4byte	0x9c
 738 016c 14       		.byte	0x14
 739 016d 00       		.byte	0
 740 016e 0B       		.uleb128 0xb
 741 016f 46010000 		.4byte	.LASF25
 742 0173 06       		.byte	0x6
 743 0174 7F03     		.2byte	0x37f
 744 0176 17010000 		.4byte	0x117
 745 017a 0F       		.uleb128 0xf
 746 017b 01       		.byte	0x1
 747 017c 2C000000 		.4byte	0x2c
 748 0180 07       		.byte	0x7
 749 0181 33       		.byte	0x33
 750 0182 93010000 		.4byte	0x193
 751 0186 09       		.uleb128 0x9
 752 0187 E1000000 		.4byte	.LASF26
 753 018b 00       		.byte	0
 754 018c 09       		.uleb128 0x9
 755 018d 5E000000 		.4byte	.LASF27
 756 0191 04       		.byte	0x4
 757 0192 00       		.byte	0
 758 0193 03       		.uleb128 0x3
 759 0194 35010000 		.4byte	.LASF28
 760 0198 07       		.byte	0x7
 761 0199 36       		.byte	0x36
 762 019a 7A010000 		.4byte	0x17a
 763 019e 0F       		.uleb128 0xf
 764 019f 01       		.byte	0x1
 765 01a0 2C000000 		.4byte	0x2c
ARM GAS  /tmp/cckH6qNJ.s 			page 19


 766 01a4 07       		.byte	0x7
 767 01a5 3F       		.byte	0x3f
 768 01a6 BD010000 		.4byte	0x1bd
 769 01aa 09       		.uleb128 0x9
 770 01ab 95010000 		.4byte	.LASF29
 771 01af 08       		.byte	0x8
 772 01b0 09       		.uleb128 0x9
 773 01b1 50020000 		.4byte	.LASF30
 774 01b5 0C       		.byte	0xc
 775 01b6 09       		.uleb128 0x9
 776 01b7 A9010000 		.4byte	.LASF31
 777 01bb 10       		.byte	0x10
 778 01bc 00       		.byte	0
 779 01bd 03       		.uleb128 0x3
 780 01be F3020000 		.4byte	.LASF32
 781 01c2 07       		.byte	0x7
 782 01c3 43       		.byte	0x43
 783 01c4 9E010000 		.4byte	0x19e
 784 01c8 10       		.uleb128 0x10
 785 01c9 08       		.byte	0x8
 786 01ca 07       		.byte	0x7
 787 01cb 4C       		.byte	0x4c
 788 01cc 01020000 		.4byte	0x201
 789 01d0 11       		.uleb128 0x11
 790 01d1 00000000 		.4byte	.LASF33
 791 01d5 07       		.byte	0x7
 792 01d6 4E       		.byte	0x4e
 793 01d7 91000000 		.4byte	0x91
 794 01db 00       		.byte	0
 795 01dc 11       		.uleb128 0x11
 796 01dd 0A000000 		.4byte	.LASF34
 797 01e1 07       		.byte	0x7
 798 01e2 51       		.byte	0x51
 799 01e3 93010000 		.4byte	0x193
 800 01e7 04       		.byte	0x4
 801 01e8 11       		.uleb128 0x11
 802 01e9 37000000 		.4byte	.LASF35
 803 01ed 07       		.byte	0x7
 804 01ee 54       		.byte	0x54
 805 01ef BD010000 		.4byte	0x1bd
 806 01f3 05       		.byte	0x5
 807 01f4 11       		.uleb128 0x11
 808 01f5 2A000000 		.4byte	.LASF36
 809 01f9 07       		.byte	0x7
 810 01fa 57       		.byte	0x57
 811 01fb 0B010000 		.4byte	0x10b
 812 01ff 06       		.byte	0x6
 813 0200 00       		.byte	0
 814 0201 03       		.uleb128 0x3
 815 0202 B9000000 		.4byte	.LASF37
 816 0206 07       		.byte	0x7
 817 0207 59       		.byte	0x59
 818 0208 C8010000 		.4byte	0x1c8
 819 020c 12       		.uleb128 0x12
 820 020d A5020000 		.4byte	.LASF40
 821 0211 01       		.byte	0x1
 822 0212 FA       		.byte	0xfa
ARM GAS  /tmp/cckH6qNJ.s 			page 20


 823 0213 FC010000 		.4byte	.LFB70
 824 0217 1C000000 		.4byte	.LFE70-.LFB70
 825 021b 01       		.uleb128 0x1
 826 021c 9C       		.byte	0x9c
 827 021d 30020000 		.4byte	0x230
 828 0221 13       		.uleb128 0x13
 829 0222 00000000 		.4byte	.LASF33
 830 0226 01       		.byte	0x1
 831 0227 FA       		.byte	0xfa
 832 0228 91000000 		.4byte	0x91
 833 022c 02       		.uleb128 0x2
 834 022d 91       		.byte	0x91
 835 022e 74       		.sleb128 -12
 836 022f 00       		.byte	0
 837 0230 14       		.uleb128 0x14
 838 0231 94020000 		.4byte	.LASF42
 839 0235 01       		.byte	0x1
 840 0236 E1       		.byte	0xe1
 841 0237 E5000000 		.4byte	0xe5
 842 023b B4010000 		.4byte	.LFB69
 843 023f 48000000 		.4byte	.LFE69-.LFB69
 844 0243 01       		.uleb128 0x1
 845 0244 9C       		.byte	0x9c
 846 0245 74020000 		.4byte	0x274
 847 0249 13       		.uleb128 0x13
 848 024a 00000000 		.4byte	.LASF33
 849 024e 01       		.byte	0x1
 850 024f E1       		.byte	0xe1
 851 0250 91000000 		.4byte	0x91
 852 0254 02       		.uleb128 0x2
 853 0255 91       		.byte	0x91
 854 0256 6C       		.sleb128 -20
 855 0257 15       		.uleb128 0x15
 856 0258 96000000 		.4byte	.LASF38
 857 025c 01       		.byte	0x1
 858 025d E3       		.byte	0xe3
 859 025e E5000000 		.4byte	0xe5
 860 0262 02       		.uleb128 0x2
 861 0263 91       		.byte	0x91
 862 0264 77       		.sleb128 -9
 863 0265 15       		.uleb128 0x15
 864 0266 1D000000 		.4byte	.LASF39
 865 026a 01       		.byte	0x1
 866 026b E4       		.byte	0xe4
 867 026c 91000000 		.4byte	0x91
 868 0270 02       		.uleb128 0x2
 869 0271 91       		.byte	0x91
 870 0272 70       		.sleb128 -16
 871 0273 00       		.byte	0
 872 0274 12       		.uleb128 0x12
 873 0275 0E010000 		.4byte	.LASF41
 874 0279 01       		.byte	0x1
 875 027a D2       		.byte	0xd2
 876 027b 98010000 		.4byte	.LFB68
 877 027f 1C000000 		.4byte	.LFE68-.LFB68
 878 0283 01       		.uleb128 0x1
 879 0284 9C       		.byte	0x9c
ARM GAS  /tmp/cckH6qNJ.s 			page 21


 880 0285 98020000 		.4byte	0x298
 881 0289 13       		.uleb128 0x13
 882 028a 00000000 		.4byte	.LASF33
 883 028e 01       		.byte	0x1
 884 028f D2       		.byte	0xd2
 885 0290 91000000 		.4byte	0x91
 886 0294 02       		.uleb128 0x2
 887 0295 91       		.byte	0x91
 888 0296 74       		.sleb128 -12
 889 0297 00       		.byte	0
 890 0298 14       		.uleb128 0x14
 891 0299 1A020000 		.4byte	.LASF43
 892 029d 01       		.byte	0x1
 893 029e BB       		.byte	0xbb
 894 029f D9000000 		.4byte	0xd9
 895 02a3 64010000 		.4byte	.LFB67
 896 02a7 34000000 		.4byte	.LFE67-.LFB67
 897 02ab 01       		.uleb128 0x1
 898 02ac 9C       		.byte	0x9c
 899 02ad CE020000 		.4byte	0x2ce
 900 02b1 13       		.uleb128 0x13
 901 02b2 00000000 		.4byte	.LASF33
 902 02b6 01       		.byte	0x1
 903 02b7 BB       		.byte	0xbb
 904 02b8 91000000 		.4byte	0x91
 905 02bc 02       		.uleb128 0x2
 906 02bd 91       		.byte	0x91
 907 02be 6C       		.sleb128 -20
 908 02bf 15       		.uleb128 0x15
 909 02c0 96000000 		.4byte	.LASF38
 910 02c4 01       		.byte	0x1
 911 02c5 BD       		.byte	0xbd
 912 02c6 D9000000 		.4byte	0xd9
 913 02ca 02       		.uleb128 0x2
 914 02cb 91       		.byte	0x91
 915 02cc 77       		.sleb128 -9
 916 02cd 00       		.byte	0
 917 02ce 12       		.uleb128 0x12
 918 02cf A0000000 		.4byte	.LASF44
 919 02d3 01       		.byte	0x1
 920 02d4 AC       		.byte	0xac
 921 02d5 42010000 		.4byte	.LFB66
 922 02d9 22000000 		.4byte	.LFE66-.LFB66
 923 02dd 01       		.uleb128 0x1
 924 02de 9C       		.byte	0x9c
 925 02df F2020000 		.4byte	0x2f2
 926 02e3 13       		.uleb128 0x13
 927 02e4 00000000 		.4byte	.LASF33
 928 02e8 01       		.byte	0x1
 929 02e9 AC       		.byte	0xac
 930 02ea 91000000 		.4byte	0x91
 931 02ee 02       		.uleb128 0x2
 932 02ef 91       		.byte	0x91
 933 02f0 74       		.sleb128 -12
 934 02f1 00       		.byte	0
 935 02f2 12       		.uleb128 0x12
 936 02f3 4E000000 		.4byte	.LASF45
ARM GAS  /tmp/cckH6qNJ.s 			page 22


 937 02f7 01       		.byte	0x1
 938 02f8 9E       		.byte	0x9e
 939 02f9 18010000 		.4byte	.LFB65
 940 02fd 2A000000 		.4byte	.LFE65-.LFB65
 941 0301 01       		.uleb128 0x1
 942 0302 9C       		.byte	0x9c
 943 0303 16030000 		.4byte	0x316
 944 0307 13       		.uleb128 0x13
 945 0308 CA000000 		.4byte	.LASF46
 946 030c 01       		.byte	0x1
 947 030d 9E       		.byte	0x9e
 948 030e 16030000 		.4byte	0x316
 949 0312 02       		.uleb128 0x2
 950 0313 91       		.byte	0x91
 951 0314 74       		.sleb128 -12
 952 0315 00       		.byte	0
 953 0316 16       		.uleb128 0x16
 954 0317 04       		.byte	0x4
 955 0318 01020000 		.4byte	0x201
 956 031c 12       		.uleb128 0x12
 957 031d 10020000 		.4byte	.LASF47
 958 0321 01       		.byte	0x1
 959 0322 66       		.byte	0x66
 960 0323 34000000 		.4byte	.LFB64
 961 0327 E4000000 		.4byte	.LFE64-.LFB64
 962 032b 01       		.uleb128 0x1
 963 032c 9C       		.byte	0x9c
 964 032d 4E030000 		.4byte	0x34e
 965 0331 13       		.uleb128 0x13
 966 0332 CA000000 		.4byte	.LASF46
 967 0336 01       		.byte	0x1
 968 0337 66       		.byte	0x66
 969 0338 16030000 		.4byte	0x316
 970 033c 02       		.uleb128 0x2
 971 033d 91       		.byte	0x91
 972 033e 6C       		.sleb128 -20
 973 033f 17       		.uleb128 0x17
 974 0340 746D7000 		.ascii	"tmp\000"
 975 0344 01       		.byte	0x1
 976 0345 68       		.byte	0x68
 977 0346 91000000 		.4byte	0x91
 978 034a 02       		.uleb128 0x2
 979 034b 91       		.byte	0x91
 980 034c 74       		.sleb128 -12
 981 034d 00       		.byte	0
 982 034e 18       		.uleb128 0x18
 983 034f 0D030000 		.4byte	.LASF51
 984 0353 01       		.byte	0x1
 985 0354 56       		.byte	0x56
 986 0355 00000000 		.4byte	.LFB63
 987 0359 34000000 		.4byte	.LFE63-.LFB63
 988 035d 01       		.uleb128 0x1
 989 035e 9C       		.byte	0x9c
 990 035f 00       		.byte	0
 991              		.section	.debug_abbrev,"",%progbits
 992              	.Ldebug_abbrev0:
 993 0000 01       		.uleb128 0x1
ARM GAS  /tmp/cckH6qNJ.s 			page 23


 994 0001 11       		.uleb128 0x11
 995 0002 01       		.byte	0x1
 996 0003 25       		.uleb128 0x25
 997 0004 0E       		.uleb128 0xe
 998 0005 13       		.uleb128 0x13
 999 0006 0B       		.uleb128 0xb
 1000 0007 03       		.uleb128 0x3
 1001 0008 0E       		.uleb128 0xe
 1002 0009 1B       		.uleb128 0x1b
 1003 000a 0E       		.uleb128 0xe
 1004 000b 11       		.uleb128 0x11
 1005 000c 01       		.uleb128 0x1
 1006 000d 12       		.uleb128 0x12
 1007 000e 06       		.uleb128 0x6
 1008 000f 10       		.uleb128 0x10
 1009 0010 17       		.uleb128 0x17
 1010 0011 00       		.byte	0
 1011 0012 00       		.byte	0
 1012 0013 02       		.uleb128 0x2
 1013 0014 24       		.uleb128 0x24
 1014 0015 00       		.byte	0
 1015 0016 0B       		.uleb128 0xb
 1016 0017 0B       		.uleb128 0xb
 1017 0018 3E       		.uleb128 0x3e
 1018 0019 0B       		.uleb128 0xb
 1019 001a 03       		.uleb128 0x3
 1020 001b 0E       		.uleb128 0xe
 1021 001c 00       		.byte	0
 1022 001d 00       		.byte	0
 1023 001e 03       		.uleb128 0x3
 1024 001f 16       		.uleb128 0x16
 1025 0020 00       		.byte	0
 1026 0021 03       		.uleb128 0x3
 1027 0022 0E       		.uleb128 0xe
 1028 0023 3A       		.uleb128 0x3a
 1029 0024 0B       		.uleb128 0xb
 1030 0025 3B       		.uleb128 0x3b
 1031 0026 0B       		.uleb128 0xb
 1032 0027 49       		.uleb128 0x49
 1033 0028 13       		.uleb128 0x13
 1034 0029 00       		.byte	0
 1035 002a 00       		.byte	0
 1036 002b 04       		.uleb128 0x4
 1037 002c 24       		.uleb128 0x24
 1038 002d 00       		.byte	0
 1039 002e 0B       		.uleb128 0xb
 1040 002f 0B       		.uleb128 0xb
 1041 0030 3E       		.uleb128 0x3e
 1042 0031 0B       		.uleb128 0xb
 1043 0032 03       		.uleb128 0x3
 1044 0033 08       		.uleb128 0x8
 1045 0034 00       		.byte	0
 1046 0035 00       		.byte	0
 1047 0036 05       		.uleb128 0x5
 1048 0037 35       		.uleb128 0x35
 1049 0038 00       		.byte	0
 1050 0039 49       		.uleb128 0x49
ARM GAS  /tmp/cckH6qNJ.s 			page 24


 1051 003a 13       		.uleb128 0x13
 1052 003b 00       		.byte	0
 1053 003c 00       		.byte	0
 1054 003d 06       		.uleb128 0x6
 1055 003e 34       		.uleb128 0x34
 1056 003f 00       		.byte	0
 1057 0040 03       		.uleb128 0x3
 1058 0041 0E       		.uleb128 0xe
 1059 0042 3A       		.uleb128 0x3a
 1060 0043 0B       		.uleb128 0xb
 1061 0044 3B       		.uleb128 0x3b
 1062 0045 05       		.uleb128 0x5
 1063 0046 49       		.uleb128 0x49
 1064 0047 13       		.uleb128 0x13
 1065 0048 3F       		.uleb128 0x3f
 1066 0049 19       		.uleb128 0x19
 1067 004a 3C       		.uleb128 0x3c
 1068 004b 19       		.uleb128 0x19
 1069 004c 00       		.byte	0
 1070 004d 00       		.byte	0
 1071 004e 07       		.uleb128 0x7
 1072 004f 34       		.uleb128 0x34
 1073 0050 00       		.byte	0
 1074 0051 03       		.uleb128 0x3
 1075 0052 0E       		.uleb128 0xe
 1076 0053 3A       		.uleb128 0x3a
 1077 0054 0B       		.uleb128 0xb
 1078 0055 3B       		.uleb128 0x3b
 1079 0056 0B       		.uleb128 0xb
 1080 0057 49       		.uleb128 0x49
 1081 0058 13       		.uleb128 0x13
 1082 0059 3F       		.uleb128 0x3f
 1083 005a 19       		.uleb128 0x19
 1084 005b 3C       		.uleb128 0x3c
 1085 005c 19       		.uleb128 0x19
 1086 005d 00       		.byte	0
 1087 005e 00       		.byte	0
 1088 005f 08       		.uleb128 0x8
 1089 0060 04       		.uleb128 0x4
 1090 0061 01       		.byte	0x1
 1091 0062 0B       		.uleb128 0xb
 1092 0063 0B       		.uleb128 0xb
 1093 0064 49       		.uleb128 0x49
 1094 0065 13       		.uleb128 0x13
 1095 0066 3A       		.uleb128 0x3a
 1096 0067 0B       		.uleb128 0xb
 1097 0068 3B       		.uleb128 0x3b
 1098 0069 05       		.uleb128 0x5
 1099 006a 01       		.uleb128 0x1
 1100 006b 13       		.uleb128 0x13
 1101 006c 00       		.byte	0
 1102 006d 00       		.byte	0
 1103 006e 09       		.uleb128 0x9
 1104 006f 28       		.uleb128 0x28
 1105 0070 00       		.byte	0
 1106 0071 03       		.uleb128 0x3
 1107 0072 0E       		.uleb128 0xe
ARM GAS  /tmp/cckH6qNJ.s 			page 25


 1108 0073 1C       		.uleb128 0x1c
 1109 0074 0B       		.uleb128 0xb
 1110 0075 00       		.byte	0
 1111 0076 00       		.byte	0
 1112 0077 0A       		.uleb128 0xa
 1113 0078 28       		.uleb128 0x28
 1114 0079 00       		.byte	0
 1115 007a 03       		.uleb128 0x3
 1116 007b 08       		.uleb128 0x8
 1117 007c 1C       		.uleb128 0x1c
 1118 007d 0B       		.uleb128 0xb
 1119 007e 00       		.byte	0
 1120 007f 00       		.byte	0
 1121 0080 0B       		.uleb128 0xb
 1122 0081 16       		.uleb128 0x16
 1123 0082 00       		.byte	0
 1124 0083 03       		.uleb128 0x3
 1125 0084 0E       		.uleb128 0xe
 1126 0085 3A       		.uleb128 0x3a
 1127 0086 0B       		.uleb128 0xb
 1128 0087 3B       		.uleb128 0x3b
 1129 0088 05       		.uleb128 0x5
 1130 0089 49       		.uleb128 0x49
 1131 008a 13       		.uleb128 0x13
 1132 008b 00       		.byte	0
 1133 008c 00       		.byte	0
 1134 008d 0C       		.uleb128 0xc
 1135 008e 13       		.uleb128 0x13
 1136 008f 01       		.byte	0x1
 1137 0090 0B       		.uleb128 0xb
 1138 0091 0B       		.uleb128 0xb
 1139 0092 3A       		.uleb128 0x3a
 1140 0093 0B       		.uleb128 0xb
 1141 0094 3B       		.uleb128 0x3b
 1142 0095 05       		.uleb128 0x5
 1143 0096 01       		.uleb128 0x1
 1144 0097 13       		.uleb128 0x13
 1145 0098 00       		.byte	0
 1146 0099 00       		.byte	0
 1147 009a 0D       		.uleb128 0xd
 1148 009b 0D       		.uleb128 0xd
 1149 009c 00       		.byte	0
 1150 009d 03       		.uleb128 0x3
 1151 009e 08       		.uleb128 0x8
 1152 009f 3A       		.uleb128 0x3a
 1153 00a0 0B       		.uleb128 0xb
 1154 00a1 3B       		.uleb128 0x3b
 1155 00a2 05       		.uleb128 0x5
 1156 00a3 49       		.uleb128 0x49
 1157 00a4 13       		.uleb128 0x13
 1158 00a5 38       		.uleb128 0x38
 1159 00a6 0B       		.uleb128 0xb
 1160 00a7 00       		.byte	0
 1161 00a8 00       		.byte	0
 1162 00a9 0E       		.uleb128 0xe
 1163 00aa 0D       		.uleb128 0xd
 1164 00ab 00       		.byte	0
ARM GAS  /tmp/cckH6qNJ.s 			page 26


 1165 00ac 03       		.uleb128 0x3
 1166 00ad 0E       		.uleb128 0xe
 1167 00ae 3A       		.uleb128 0x3a
 1168 00af 0B       		.uleb128 0xb
 1169 00b0 3B       		.uleb128 0x3b
 1170 00b1 05       		.uleb128 0x5
 1171 00b2 49       		.uleb128 0x49
 1172 00b3 13       		.uleb128 0x13
 1173 00b4 38       		.uleb128 0x38
 1174 00b5 0B       		.uleb128 0xb
 1175 00b6 00       		.byte	0
 1176 00b7 00       		.byte	0
 1177 00b8 0F       		.uleb128 0xf
 1178 00b9 04       		.uleb128 0x4
 1179 00ba 01       		.byte	0x1
 1180 00bb 0B       		.uleb128 0xb
 1181 00bc 0B       		.uleb128 0xb
 1182 00bd 49       		.uleb128 0x49
 1183 00be 13       		.uleb128 0x13
 1184 00bf 3A       		.uleb128 0x3a
 1185 00c0 0B       		.uleb128 0xb
 1186 00c1 3B       		.uleb128 0x3b
 1187 00c2 0B       		.uleb128 0xb
 1188 00c3 01       		.uleb128 0x1
 1189 00c4 13       		.uleb128 0x13
 1190 00c5 00       		.byte	0
 1191 00c6 00       		.byte	0
 1192 00c7 10       		.uleb128 0x10
 1193 00c8 13       		.uleb128 0x13
 1194 00c9 01       		.byte	0x1
 1195 00ca 0B       		.uleb128 0xb
 1196 00cb 0B       		.uleb128 0xb
 1197 00cc 3A       		.uleb128 0x3a
 1198 00cd 0B       		.uleb128 0xb
 1199 00ce 3B       		.uleb128 0x3b
 1200 00cf 0B       		.uleb128 0xb
 1201 00d0 01       		.uleb128 0x1
 1202 00d1 13       		.uleb128 0x13
 1203 00d2 00       		.byte	0
 1204 00d3 00       		.byte	0
 1205 00d4 11       		.uleb128 0x11
 1206 00d5 0D       		.uleb128 0xd
 1207 00d6 00       		.byte	0
 1208 00d7 03       		.uleb128 0x3
 1209 00d8 0E       		.uleb128 0xe
 1210 00d9 3A       		.uleb128 0x3a
 1211 00da 0B       		.uleb128 0xb
 1212 00db 3B       		.uleb128 0x3b
 1213 00dc 0B       		.uleb128 0xb
 1214 00dd 49       		.uleb128 0x49
 1215 00de 13       		.uleb128 0x13
 1216 00df 38       		.uleb128 0x38
 1217 00e0 0B       		.uleb128 0xb
 1218 00e1 00       		.byte	0
 1219 00e2 00       		.byte	0
 1220 00e3 12       		.uleb128 0x12
 1221 00e4 2E       		.uleb128 0x2e
ARM GAS  /tmp/cckH6qNJ.s 			page 27


 1222 00e5 01       		.byte	0x1
 1223 00e6 3F       		.uleb128 0x3f
 1224 00e7 19       		.uleb128 0x19
 1225 00e8 03       		.uleb128 0x3
 1226 00e9 0E       		.uleb128 0xe
 1227 00ea 3A       		.uleb128 0x3a
 1228 00eb 0B       		.uleb128 0xb
 1229 00ec 3B       		.uleb128 0x3b
 1230 00ed 0B       		.uleb128 0xb
 1231 00ee 27       		.uleb128 0x27
 1232 00ef 19       		.uleb128 0x19
 1233 00f0 11       		.uleb128 0x11
 1234 00f1 01       		.uleb128 0x1
 1235 00f2 12       		.uleb128 0x12
 1236 00f3 06       		.uleb128 0x6
 1237 00f4 40       		.uleb128 0x40
 1238 00f5 18       		.uleb128 0x18
 1239 00f6 9742     		.uleb128 0x2117
 1240 00f8 19       		.uleb128 0x19
 1241 00f9 01       		.uleb128 0x1
 1242 00fa 13       		.uleb128 0x13
 1243 00fb 00       		.byte	0
 1244 00fc 00       		.byte	0
 1245 00fd 13       		.uleb128 0x13
 1246 00fe 05       		.uleb128 0x5
 1247 00ff 00       		.byte	0
 1248 0100 03       		.uleb128 0x3
 1249 0101 0E       		.uleb128 0xe
 1250 0102 3A       		.uleb128 0x3a
 1251 0103 0B       		.uleb128 0xb
 1252 0104 3B       		.uleb128 0x3b
 1253 0105 0B       		.uleb128 0xb
 1254 0106 49       		.uleb128 0x49
 1255 0107 13       		.uleb128 0x13
 1256 0108 02       		.uleb128 0x2
 1257 0109 18       		.uleb128 0x18
 1258 010a 00       		.byte	0
 1259 010b 00       		.byte	0
 1260 010c 14       		.uleb128 0x14
 1261 010d 2E       		.uleb128 0x2e
 1262 010e 01       		.byte	0x1
 1263 010f 3F       		.uleb128 0x3f
 1264 0110 19       		.uleb128 0x19
 1265 0111 03       		.uleb128 0x3
 1266 0112 0E       		.uleb128 0xe
 1267 0113 3A       		.uleb128 0x3a
 1268 0114 0B       		.uleb128 0xb
 1269 0115 3B       		.uleb128 0x3b
 1270 0116 0B       		.uleb128 0xb
 1271 0117 27       		.uleb128 0x27
 1272 0118 19       		.uleb128 0x19
 1273 0119 49       		.uleb128 0x49
 1274 011a 13       		.uleb128 0x13
 1275 011b 11       		.uleb128 0x11
 1276 011c 01       		.uleb128 0x1
 1277 011d 12       		.uleb128 0x12
 1278 011e 06       		.uleb128 0x6
ARM GAS  /tmp/cckH6qNJ.s 			page 28


 1279 011f 40       		.uleb128 0x40
 1280 0120 18       		.uleb128 0x18
 1281 0121 9742     		.uleb128 0x2117
 1282 0123 19       		.uleb128 0x19
 1283 0124 01       		.uleb128 0x1
 1284 0125 13       		.uleb128 0x13
 1285 0126 00       		.byte	0
 1286 0127 00       		.byte	0
 1287 0128 15       		.uleb128 0x15
 1288 0129 34       		.uleb128 0x34
 1289 012a 00       		.byte	0
 1290 012b 03       		.uleb128 0x3
 1291 012c 0E       		.uleb128 0xe
 1292 012d 3A       		.uleb128 0x3a
 1293 012e 0B       		.uleb128 0xb
 1294 012f 3B       		.uleb128 0x3b
 1295 0130 0B       		.uleb128 0xb
 1296 0131 49       		.uleb128 0x49
 1297 0132 13       		.uleb128 0x13
 1298 0133 02       		.uleb128 0x2
 1299 0134 18       		.uleb128 0x18
 1300 0135 00       		.byte	0
 1301 0136 00       		.byte	0
 1302 0137 16       		.uleb128 0x16
 1303 0138 0F       		.uleb128 0xf
 1304 0139 00       		.byte	0
 1305 013a 0B       		.uleb128 0xb
 1306 013b 0B       		.uleb128 0xb
 1307 013c 49       		.uleb128 0x49
 1308 013d 13       		.uleb128 0x13
 1309 013e 00       		.byte	0
 1310 013f 00       		.byte	0
 1311 0140 17       		.uleb128 0x17
 1312 0141 34       		.uleb128 0x34
 1313 0142 00       		.byte	0
 1314 0143 03       		.uleb128 0x3
 1315 0144 08       		.uleb128 0x8
 1316 0145 3A       		.uleb128 0x3a
 1317 0146 0B       		.uleb128 0xb
 1318 0147 3B       		.uleb128 0x3b
 1319 0148 0B       		.uleb128 0xb
 1320 0149 49       		.uleb128 0x49
 1321 014a 13       		.uleb128 0x13
 1322 014b 02       		.uleb128 0x2
 1323 014c 18       		.uleb128 0x18
 1324 014d 00       		.byte	0
 1325 014e 00       		.byte	0
 1326 014f 18       		.uleb128 0x18
 1327 0150 2E       		.uleb128 0x2e
 1328 0151 00       		.byte	0
 1329 0152 3F       		.uleb128 0x3f
 1330 0153 19       		.uleb128 0x19
 1331 0154 03       		.uleb128 0x3
 1332 0155 0E       		.uleb128 0xe
 1333 0156 3A       		.uleb128 0x3a
 1334 0157 0B       		.uleb128 0xb
 1335 0158 3B       		.uleb128 0x3b
ARM GAS  /tmp/cckH6qNJ.s 			page 29


 1336 0159 0B       		.uleb128 0xb
 1337 015a 27       		.uleb128 0x27
 1338 015b 19       		.uleb128 0x19
 1339 015c 11       		.uleb128 0x11
 1340 015d 01       		.uleb128 0x1
 1341 015e 12       		.uleb128 0x12
 1342 015f 06       		.uleb128 0x6
 1343 0160 40       		.uleb128 0x40
 1344 0161 18       		.uleb128 0x18
 1345 0162 9742     		.uleb128 0x2117
 1346 0164 19       		.uleb128 0x19
 1347 0165 00       		.byte	0
 1348 0166 00       		.byte	0
 1349 0167 00       		.byte	0
 1350              		.section	.debug_aranges,"",%progbits
 1351 0000 1C000000 		.4byte	0x1c
 1352 0004 0200     		.2byte	0x2
 1353 0006 00000000 		.4byte	.Ldebug_info0
 1354 000a 04       		.byte	0x4
 1355 000b 00       		.byte	0
 1356 000c 0000     		.2byte	0
 1357 000e 0000     		.2byte	0
 1358 0010 00000000 		.4byte	.Ltext0
 1359 0014 18020000 		.4byte	.Letext0-.Ltext0
 1360 0018 00000000 		.4byte	0
 1361 001c 00000000 		.4byte	0
 1362              		.section	.debug_line,"",%progbits
 1363              	.Ldebug_line0:
 1364 0000 4B010000 		.section	.debug_str,"MS",%progbits,1
 1364      0200E000 
 1364      00000201 
 1364      FB0E0D00 
 1364      01010101 
 1365              	.LASF33:
 1366 0000 45585449 		.ascii	"EXTI_Line\000"
 1366      5F4C696E 
 1366      6500
 1367              	.LASF34:
 1368 000a 45585449 		.ascii	"EXTI_Mode\000"
 1368      5F4D6F64 
 1368      6500
 1369              	.LASF18:
 1370 0014 49545374 		.ascii	"ITStatus\000"
 1370      61747573 
 1370      00
 1371              	.LASF39:
 1372 001d 656E6162 		.ascii	"enablestatus\000"
 1372      6C657374 
 1372      61747573 
 1372      00
 1373              	.LASF36:
 1374 002a 45585449 		.ascii	"EXTI_LineCmd\000"
 1374      5F4C696E 
 1374      65436D64 
 1374      00
 1375              	.LASF35:
 1376 0037 45585449 		.ascii	"EXTI_Trigger\000"
ARM GAS  /tmp/cckH6qNJ.s 			page 30


 1376      5F547269 
 1376      67676572 
 1376      00
 1377              	.LASF5:
 1378 0044 5F5F696E 		.ascii	"__int32_t\000"
 1378      7433325F 
 1378      7400
 1379              	.LASF45:
 1380 004e 45585449 		.ascii	"EXTI_StructInit\000"
 1380      5F537472 
 1380      75637449 
 1380      6E697400 
 1381              	.LASF27:
 1382 005e 45585449 		.ascii	"EXTI_Mode_Event\000"
 1382      5F4D6F64 
 1382      655F4576 
 1382      656E7400 
 1383              	.LASF49:
 1384 006e 636F6D6D 		.ascii	"common/stm32f10x_exti.c\000"
 1384      6F6E2F73 
 1384      746D3332 
 1384      66313078 
 1384      5F657874 
 1385              	.LASF21:
 1386 0086 46756E63 		.ascii	"FunctionalState\000"
 1386      74696F6E 
 1386      616C5374 
 1386      61746500 
 1387              	.LASF38:
 1388 0096 62697473 		.ascii	"bitstatus\000"
 1388      74617475 
 1388      7300
 1389              	.LASF44:
 1390 00a0 45585449 		.ascii	"EXTI_GenerateSWInterrupt\000"
 1390      5F47656E 
 1390      65726174 
 1390      65535749 
 1390      6E746572 
 1391              	.LASF37:
 1392 00b9 45585449 		.ascii	"EXTI_InitTypeDef\000"
 1392      5F496E69 
 1392      74547970 
 1392      65446566 
 1392      00
 1393              	.LASF46:
 1394 00ca 45585449 		.ascii	"EXTI_InitStruct\000"
 1394      5F496E69 
 1394      74537472 
 1394      75637400 
 1395              	.LASF20:
 1396 00da 454E4142 		.ascii	"ENABLE\000"
 1396      4C4500
 1397              	.LASF26:
 1398 00e1 45585449 		.ascii	"EXTI_Mode_Interrupt\000"
 1398      5F4D6F64 
 1398      655F496E 
 1398      74657272 
ARM GAS  /tmp/cckH6qNJ.s 			page 31


 1398      75707400 
 1399              	.LASF1:
 1400 00f5 756E7369 		.ascii	"unsigned char\000"
 1400      676E6564 
 1400      20636861 
 1400      7200
 1401              	.LASF17:
 1402 0103 466C6167 		.ascii	"FlagStatus\000"
 1402      53746174 
 1402      757300
 1403              	.LASF41:
 1404 010e 45585449 		.ascii	"EXTI_ClearFlag\000"
 1404      5F436C65 
 1404      6172466C 
 1404      616700
 1405              	.LASF7:
 1406 011d 6C6F6E67 		.ascii	"long unsigned int\000"
 1406      20756E73 
 1406      69676E65 
 1406      6420696E 
 1406      7400
 1407              	.LASF16:
 1408 012f 52455345 		.ascii	"RESET\000"
 1408      5400
 1409              	.LASF28:
 1410 0135 45585449 		.ascii	"EXTIMode_TypeDef\000"
 1410      4D6F6465 
 1410      5F547970 
 1410      65446566 
 1410      00
 1411              	.LASF25:
 1412 0146 45585449 		.ascii	"EXTI_TypeDef\000"
 1412      5F547970 
 1412      65446566 
 1412      00
 1413              	.LASF14:
 1414 0153 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1414      52784275 
 1414      66666572 
 1414      00
 1415              	.LASF22:
 1416 0160 52545352 		.ascii	"RTSR\000"
 1416      00
 1417              	.LASF50:
 1418 0165 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/usart\000"
 1418      652F656E 
 1418      62696E2F 
 1418      446F6375 
 1418      6D656E74 
 1419              	.LASF6:
 1420 018a 5F5F7569 		.ascii	"__uint32_t\000"
 1420      6E743332 
 1420      5F7400
 1421              	.LASF29:
 1422 0195 45585449 		.ascii	"EXTI_Trigger_Rising\000"
 1422      5F547269 
 1422      67676572 
ARM GAS  /tmp/cckH6qNJ.s 			page 32


 1422      5F526973 
 1422      696E6700 
 1423              	.LASF31:
 1424 01a9 45585449 		.ascii	"EXTI_Trigger_Rising_Falling\000"
 1424      5F547269 
 1424      67676572 
 1424      5F526973 
 1424      696E675F 
 1425              	.LASF48:
 1426 01c5 474E5520 		.ascii	"GNU C11 6.1.1 20160526 -mthumb -mcpu=cortex-m3 -g -"
 1426      43313120 
 1426      362E312E 
 1426      31203230 
 1426      31363035 
 1427 01f8 666E6F2D 		.ascii	"fno-common\000"
 1427      636F6D6D 
 1427      6F6E00
 1428              	.LASF10:
 1429 0203 756E7369 		.ascii	"unsigned int\000"
 1429      676E6564 
 1429      20696E74 
 1429      00
 1430              	.LASF47:
 1431 0210 45585449 		.ascii	"EXTI_Init\000"
 1431      5F496E69 
 1431      7400
 1432              	.LASF43:
 1433 021a 45585449 		.ascii	"EXTI_GetFlagStatus\000"
 1433      5F476574 
 1433      466C6167 
 1433      53746174 
 1433      757300
 1434              	.LASF9:
 1435 022d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1435      206C6F6E 
 1435      6720756E 
 1435      7369676E 
 1435      65642069 
 1436              	.LASF0:
 1437 0244 7369676E 		.ascii	"signed char\000"
 1437      65642063 
 1437      68617200 
 1438              	.LASF30:
 1439 0250 45585449 		.ascii	"EXTI_Trigger_Falling\000"
 1439      5F547269 
 1439      67676572 
 1439      5F46616C 
 1439      6C696E67 
 1440              	.LASF11:
 1441 0265 696E7433 		.ascii	"int32_t\000"
 1441      325F7400 
 1442              	.LASF13:
 1443 026d 73697A65 		.ascii	"sizetype\000"
 1443      74797065 
 1443      00
 1444              	.LASF8:
 1445 0276 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  /tmp/cckH6qNJ.s 			page 33


 1445      206C6F6E 
 1445      6720696E 
 1445      7400
 1446              	.LASF15:
 1447 0284 53797374 		.ascii	"SystemCoreClock\000"
 1447      656D436F 
 1447      7265436C 
 1447      6F636B00 
 1448              	.LASF42:
 1449 0294 45585449 		.ascii	"EXTI_GetITStatus\000"
 1449      5F476574 
 1449      49545374 
 1449      61747573 
 1449      00
 1450              	.LASF40:
 1451 02a5 45585449 		.ascii	"EXTI_ClearITPendingBit\000"
 1451      5F436C65 
 1451      61724954 
 1451      50656E64 
 1451      696E6742 
 1452              	.LASF2:
 1453 02bc 73686F72 		.ascii	"short int\000"
 1453      7420696E 
 1453      7400
 1454              	.LASF12:
 1455 02c6 75696E74 		.ascii	"uint32_t\000"
 1455      33325F74 
 1455      00
 1456              	.LASF4:
 1457 02cf 6C6F6E67 		.ascii	"long int\000"
 1457      20696E74 
 1457      00
 1458              	.LASF19:
 1459 02d8 44495341 		.ascii	"DISABLE\000"
 1459      424C4500 
 1460              	.LASF3:
 1461 02e0 73686F72 		.ascii	"short unsigned int\000"
 1461      7420756E 
 1461      7369676E 
 1461      65642069 
 1461      6E7400
 1462              	.LASF32:
 1463 02f3 45585449 		.ascii	"EXTITrigger_TypeDef\000"
 1463      54726967 
 1463      6765725F 
 1463      54797065 
 1463      44656600 
 1464              	.LASF24:
 1465 0307 53574945 		.ascii	"SWIER\000"
 1465      5200
 1466              	.LASF51:
 1467 030d 45585449 		.ascii	"EXTI_DeInit\000"
 1467      5F446549 
 1467      6E697400 
 1468              	.LASF23:
 1469 0319 46545352 		.ascii	"FTSR\000"
 1469      00
ARM GAS  /tmp/cckH6qNJ.s 			page 34


 1470              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/cckH6qNJ.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_exti.c
     /tmp/cckH6qNJ.s:15     .text:0000000000000000 $t
     /tmp/cckH6qNJ.s:22     .text:0000000000000000 EXTI_DeInit
     /tmp/cckH6qNJ.s:67     .text:000000000000002c $d
     /tmp/cckH6qNJ.s:72     .text:0000000000000034 $t
     /tmp/cckH6qNJ.s:79     .text:0000000000000034 EXTI_Init
     /tmp/cckH6qNJ.s:232    .text:0000000000000114 $d
     /tmp/cckH6qNJ.s:236    .text:0000000000000118 $t
     /tmp/cckH6qNJ.s:243    .text:0000000000000118 EXTI_StructInit
     /tmp/cckH6qNJ.s:295    .text:0000000000000142 EXTI_GenerateSWInterrupt
     /tmp/cckH6qNJ.s:331    .text:0000000000000160 $d
     /tmp/cckH6qNJ.s:335    .text:0000000000000164 $t
     /tmp/cckH6qNJ.s:342    .text:0000000000000164 EXTI_GetFlagStatus
     /tmp/cckH6qNJ.s:392    .text:0000000000000194 $d
     /tmp/cckH6qNJ.s:396    .text:0000000000000198 $t
     /tmp/cckH6qNJ.s:403    .text:0000000000000198 EXTI_ClearFlag
     /tmp/cckH6qNJ.s:436    .text:00000000000001b0 $d
     /tmp/cckH6qNJ.s:440    .text:00000000000001b4 $t
     /tmp/cckH6qNJ.s:447    .text:00000000000001b4 EXTI_GetITStatus
     /tmp/cckH6qNJ.s:510    .text:00000000000001f8 $d
     /tmp/cckH6qNJ.s:514    .text:00000000000001fc $t
     /tmp/cckH6qNJ.s:521    .text:00000000000001fc EXTI_ClearITPendingBit
     /tmp/cckH6qNJ.s:554    .text:0000000000000214 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
