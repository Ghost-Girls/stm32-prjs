ARM GAS  /tmp/cc1cfAaD.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_gpio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	GPIO_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	GPIO_DeInit, %function
  22              	GPIO_DeInit:
  23              	.LFB63:
  24              		.file 1 "common/stm32f10x_gpio.c"
   1:common/stm32f10x_gpio.c **** /**
   2:common/stm32f10x_gpio.c ****   ******************************************************************************
   3:common/stm32f10x_gpio.c ****   * @file    stm32f10x_gpio.c
   4:common/stm32f10x_gpio.c ****   * @author  MCD Application Team
   5:common/stm32f10x_gpio.c ****   * @version V3.5.0
   6:common/stm32f10x_gpio.c ****   * @date    11-March-2011
   7:common/stm32f10x_gpio.c ****   * @brief   This file provides all the GPIO firmware functions.
   8:common/stm32f10x_gpio.c ****   ******************************************************************************
   9:common/stm32f10x_gpio.c ****   * @attention
  10:common/stm32f10x_gpio.c ****   *
  11:common/stm32f10x_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:common/stm32f10x_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:common/stm32f10x_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:common/stm32f10x_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:common/stm32f10x_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:common/stm32f10x_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:common/stm32f10x_gpio.c ****   *
  18:common/stm32f10x_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:common/stm32f10x_gpio.c ****   ******************************************************************************
  20:common/stm32f10x_gpio.c ****   */
  21:common/stm32f10x_gpio.c **** 
  22:common/stm32f10x_gpio.c **** /* Includes ------------------------------------------------------------------*/
  23:common/stm32f10x_gpio.c **** #include "stm32f10x_gpio.h"
  24:common/stm32f10x_gpio.c **** #include "stm32f10x_rcc.h"
  25:common/stm32f10x_gpio.c **** #include "stm32f10x_conf.h"
  26:common/stm32f10x_gpio.c **** 
  27:common/stm32f10x_gpio.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  28:common/stm32f10x_gpio.c ****   * @{
  29:common/stm32f10x_gpio.c ****   */
  30:common/stm32f10x_gpio.c **** 
  31:common/stm32f10x_gpio.c **** /** @defgroup GPIO 
  32:common/stm32f10x_gpio.c ****   * @brief GPIO driver modules
  33:common/stm32f10x_gpio.c ****   * @{
ARM GAS  /tmp/cc1cfAaD.s 			page 2


  34:common/stm32f10x_gpio.c ****   */ 
  35:common/stm32f10x_gpio.c **** 
  36:common/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_TypesDefinitions
  37:common/stm32f10x_gpio.c ****   * @{
  38:common/stm32f10x_gpio.c ****   */
  39:common/stm32f10x_gpio.c **** 
  40:common/stm32f10x_gpio.c **** /**
  41:common/stm32f10x_gpio.c ****   * @}
  42:common/stm32f10x_gpio.c ****   */
  43:common/stm32f10x_gpio.c **** 
  44:common/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Defines
  45:common/stm32f10x_gpio.c ****   * @{
  46:common/stm32f10x_gpio.c ****   */
  47:common/stm32f10x_gpio.c **** 
  48:common/stm32f10x_gpio.c **** /* ------------ RCC registers bit address in the alias region ----------------*/
  49:common/stm32f10x_gpio.c **** #define AFIO_OFFSET                 (AFIO_BASE - PERIPH_BASE)
  50:common/stm32f10x_gpio.c **** 
  51:common/stm32f10x_gpio.c **** /* --- EVENTCR Register -----*/
  52:common/stm32f10x_gpio.c **** 
  53:common/stm32f10x_gpio.c **** /* Alias word address of EVOE bit */
  54:common/stm32f10x_gpio.c **** #define EVCR_OFFSET                 (AFIO_OFFSET + 0x00)
  55:common/stm32f10x_gpio.c **** #define EVOE_BitNumber              ((uint8_t)0x07)
  56:common/stm32f10x_gpio.c **** #define EVCR_EVOE_BB                (PERIPH_BB_BASE + (EVCR_OFFSET * 32) + (EVOE_BitNumber * 4))
  57:common/stm32f10x_gpio.c **** 
  58:common/stm32f10x_gpio.c **** 
  59:common/stm32f10x_gpio.c **** /* ---  MAPR Register ---*/ 
  60:common/stm32f10x_gpio.c **** /* Alias word address of MII_RMII_SEL bit */ 
  61:common/stm32f10x_gpio.c **** #define MAPR_OFFSET                 (AFIO_OFFSET + 0x04) 
  62:common/stm32f10x_gpio.c **** #define MII_RMII_SEL_BitNumber      ((u8)0x17) 
  63:common/stm32f10x_gpio.c **** #define MAPR_MII_RMII_SEL_BB        (PERIPH_BB_BASE + (MAPR_OFFSET * 32) + (MII_RMII_SEL_BitNumber 
  64:common/stm32f10x_gpio.c **** 
  65:common/stm32f10x_gpio.c **** 
  66:common/stm32f10x_gpio.c **** #define EVCR_PORTPINCONFIG_MASK     ((uint16_t)0xFF80)
  67:common/stm32f10x_gpio.c **** #define LSB_MASK                    ((uint16_t)0xFFFF)
  68:common/stm32f10x_gpio.c **** #define DBGAFR_POSITION_MASK        ((uint32_t)0x000F0000)
  69:common/stm32f10x_gpio.c **** #define DBGAFR_SWJCFG_MASK          ((uint32_t)0xF0FFFFFF)
  70:common/stm32f10x_gpio.c **** #define DBGAFR_LOCATION_MASK        ((uint32_t)0x00200000)
  71:common/stm32f10x_gpio.c **** #define DBGAFR_NUMBITS_MASK         ((uint32_t)0x00100000)
  72:common/stm32f10x_gpio.c **** /**
  73:common/stm32f10x_gpio.c ****   * @}
  74:common/stm32f10x_gpio.c ****   */
  75:common/stm32f10x_gpio.c **** 
  76:common/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Macros
  77:common/stm32f10x_gpio.c ****   * @{
  78:common/stm32f10x_gpio.c ****   */
  79:common/stm32f10x_gpio.c **** 
  80:common/stm32f10x_gpio.c **** /**
  81:common/stm32f10x_gpio.c ****   * @}
  82:common/stm32f10x_gpio.c ****   */
  83:common/stm32f10x_gpio.c **** 
  84:common/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Variables
  85:common/stm32f10x_gpio.c ****   * @{
  86:common/stm32f10x_gpio.c ****   */
  87:common/stm32f10x_gpio.c **** 
  88:common/stm32f10x_gpio.c **** /**
  89:common/stm32f10x_gpio.c ****   * @}
  90:common/stm32f10x_gpio.c ****   */
ARM GAS  /tmp/cc1cfAaD.s 			page 3


  91:common/stm32f10x_gpio.c **** 
  92:common/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_FunctionPrototypes
  93:common/stm32f10x_gpio.c ****   * @{
  94:common/stm32f10x_gpio.c ****   */
  95:common/stm32f10x_gpio.c **** 
  96:common/stm32f10x_gpio.c **** /**
  97:common/stm32f10x_gpio.c ****   * @}
  98:common/stm32f10x_gpio.c ****   */
  99:common/stm32f10x_gpio.c **** 
 100:common/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Functions
 101:common/stm32f10x_gpio.c ****   * @{
 102:common/stm32f10x_gpio.c ****   */
 103:common/stm32f10x_gpio.c **** 
 104:common/stm32f10x_gpio.c **** /**
 105:common/stm32f10x_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 106:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 107:common/stm32f10x_gpio.c ****   * @retval None
 108:common/stm32f10x_gpio.c ****   */
 109:common/stm32f10x_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 110:common/stm32f10x_gpio.c **** {
  25              		.loc 1 110 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 16
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 7860     		str	r0, [r7, #4]
 111:common/stm32f10x_gpio.c ****   /* Check the parameters */
 112:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 113:common/stm32f10x_gpio.c ****   
 114:common/stm32f10x_gpio.c ****   if (GPIOx == GPIOA)
  38              		.loc 1 114 0
  39 0008 7B68     		ldr	r3, [r7, #4]
  40 000a 2F4A     		ldr	r2, .L10
  41 000c 9342     		cmp	r3, r2
  42 000e 08D1     		bne	.L2
 115:common/stm32f10x_gpio.c ****   {
 116:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
  43              		.loc 1 116 0
  44 0010 0121     		movs	r1, #1
  45 0012 0420     		movs	r0, #4
  46 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 117:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
  47              		.loc 1 117 0
  48 0018 0021     		movs	r1, #0
  49 001a 0420     		movs	r0, #4
  50 001c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 118:common/stm32f10x_gpio.c ****   }
 119:common/stm32f10x_gpio.c ****   else if (GPIOx == GPIOB)
 120:common/stm32f10x_gpio.c ****   {
 121:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
ARM GAS  /tmp/cc1cfAaD.s 			page 4


 122:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
 123:common/stm32f10x_gpio.c ****   }
 124:common/stm32f10x_gpio.c ****   else if (GPIOx == GPIOC)
 125:common/stm32f10x_gpio.c ****   {
 126:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
 127:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
 128:common/stm32f10x_gpio.c ****   }
 129:common/stm32f10x_gpio.c ****   else if (GPIOx == GPIOD)
 130:common/stm32f10x_gpio.c ****   {
 131:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
 132:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
 133:common/stm32f10x_gpio.c ****   }    
 134:common/stm32f10x_gpio.c ****   else if (GPIOx == GPIOE)
 135:common/stm32f10x_gpio.c ****   {
 136:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
 137:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
 138:common/stm32f10x_gpio.c ****   } 
 139:common/stm32f10x_gpio.c ****   else if (GPIOx == GPIOF)
 140:common/stm32f10x_gpio.c ****   {
 141:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, ENABLE);
 142:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
 143:common/stm32f10x_gpio.c ****   }
 144:common/stm32f10x_gpio.c ****   else
 145:common/stm32f10x_gpio.c ****   {
 146:common/stm32f10x_gpio.c ****     if (GPIOx == GPIOG)
 147:common/stm32f10x_gpio.c ****     {
 148:common/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
 149:common/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
 150:common/stm32f10x_gpio.c ****     }
 151:common/stm32f10x_gpio.c ****   }
 152:common/stm32f10x_gpio.c **** }
  51              		.loc 1 152 0
  52 0020 4EE0     		b	.L9
  53              	.L2:
 119:common/stm32f10x_gpio.c ****   {
  54              		.loc 1 119 0
  55 0022 7B68     		ldr	r3, [r7, #4]
  56 0024 294A     		ldr	r2, .L10+4
  57 0026 9342     		cmp	r3, r2
  58 0028 08D1     		bne	.L4
 121:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
  59              		.loc 1 121 0
  60 002a 0121     		movs	r1, #1
  61 002c 0820     		movs	r0, #8
  62 002e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 122:common/stm32f10x_gpio.c ****   }
  63              		.loc 1 122 0
  64 0032 0021     		movs	r1, #0
  65 0034 0820     		movs	r0, #8
  66 0036 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  67              		.loc 1 152 0
  68 003a 41E0     		b	.L9
  69              	.L4:
 124:common/stm32f10x_gpio.c ****   {
  70              		.loc 1 124 0
  71 003c 7B68     		ldr	r3, [r7, #4]
  72 003e 244A     		ldr	r2, .L10+8
ARM GAS  /tmp/cc1cfAaD.s 			page 5


  73 0040 9342     		cmp	r3, r2
  74 0042 08D1     		bne	.L5
 126:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
  75              		.loc 1 126 0
  76 0044 0121     		movs	r1, #1
  77 0046 1020     		movs	r0, #16
  78 0048 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 127:common/stm32f10x_gpio.c ****   }
  79              		.loc 1 127 0
  80 004c 0021     		movs	r1, #0
  81 004e 1020     		movs	r0, #16
  82 0050 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  83              		.loc 1 152 0
  84 0054 34E0     		b	.L9
  85              	.L5:
 129:common/stm32f10x_gpio.c ****   {
  86              		.loc 1 129 0
  87 0056 7B68     		ldr	r3, [r7, #4]
  88 0058 1E4A     		ldr	r2, .L10+12
  89 005a 9342     		cmp	r3, r2
  90 005c 08D1     		bne	.L6
 131:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
  91              		.loc 1 131 0
  92 005e 0121     		movs	r1, #1
  93 0060 2020     		movs	r0, #32
  94 0062 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 132:common/stm32f10x_gpio.c ****   }    
  95              		.loc 1 132 0
  96 0066 0021     		movs	r1, #0
  97 0068 2020     		movs	r0, #32
  98 006a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  99              		.loc 1 152 0
 100 006e 27E0     		b	.L9
 101              	.L6:
 134:common/stm32f10x_gpio.c ****   {
 102              		.loc 1 134 0
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 194A     		ldr	r2, .L10+16
 105 0074 9342     		cmp	r3, r2
 106 0076 08D1     		bne	.L7
 136:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
 107              		.loc 1 136 0
 108 0078 0121     		movs	r1, #1
 109 007a 4020     		movs	r0, #64
 110 007c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 137:common/stm32f10x_gpio.c ****   } 
 111              		.loc 1 137 0
 112 0080 0021     		movs	r1, #0
 113 0082 4020     		movs	r0, #64
 114 0084 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 115              		.loc 1 152 0
 116 0088 1AE0     		b	.L9
 117              	.L7:
 139:common/stm32f10x_gpio.c ****   {
 118              		.loc 1 139 0
 119 008a 7B68     		ldr	r3, [r7, #4]
 120 008c 134A     		ldr	r2, .L10+20
ARM GAS  /tmp/cc1cfAaD.s 			page 6


 121 008e 9342     		cmp	r3, r2
 122 0090 08D1     		bne	.L8
 141:common/stm32f10x_gpio.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
 123              		.loc 1 141 0
 124 0092 0121     		movs	r1, #1
 125 0094 8020     		movs	r0, #128
 126 0096 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 142:common/stm32f10x_gpio.c ****   }
 127              		.loc 1 142 0
 128 009a 0021     		movs	r1, #0
 129 009c 8020     		movs	r0, #128
 130 009e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 131              		.loc 1 152 0
 132 00a2 0DE0     		b	.L9
 133              	.L8:
 146:common/stm32f10x_gpio.c ****     {
 134              		.loc 1 146 0
 135 00a4 7B68     		ldr	r3, [r7, #4]
 136 00a6 0E4A     		ldr	r2, .L10+24
 137 00a8 9342     		cmp	r3, r2
 138 00aa 09D1     		bne	.L9
 148:common/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
 139              		.loc 1 148 0
 140 00ac 0121     		movs	r1, #1
 141 00ae 4FF48070 		mov	r0, #256
 142 00b2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 149:common/stm32f10x_gpio.c ****     }
 143              		.loc 1 149 0
 144 00b6 0021     		movs	r1, #0
 145 00b8 4FF48070 		mov	r0, #256
 146 00bc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 147              	.L9:
 148              		.loc 1 152 0
 149 00c0 00BF     		nop
 150 00c2 0837     		adds	r7, r7, #8
 151              		.cfi_def_cfa_offset 8
 152 00c4 BD46     		mov	sp, r7
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 00c6 80BD     		pop	{r7, pc}
 156              	.L11:
 157              		.align	2
 158              	.L10:
 159 00c8 00080140 		.word	1073809408
 160 00cc 000C0140 		.word	1073810432
 161 00d0 00100140 		.word	1073811456
 162 00d4 00140140 		.word	1073812480
 163 00d8 00180140 		.word	1073813504
 164 00dc 001C0140 		.word	1073814528
 165 00e0 00200140 		.word	1073815552
 166              		.cfi_endproc
 167              	.LFE63:
 168              		.size	GPIO_DeInit, .-GPIO_DeInit
 169              		.align	1
 170              		.global	GPIO_AFIODeInit
 171              		.syntax unified
 172              		.thumb
ARM GAS  /tmp/cc1cfAaD.s 			page 7


 173              		.thumb_func
 174              		.fpu softvfp
 175              		.type	GPIO_AFIODeInit, %function
 176              	GPIO_AFIODeInit:
 177              	.LFB64:
 153:common/stm32f10x_gpio.c **** 
 154:common/stm32f10x_gpio.c **** /**
 155:common/stm32f10x_gpio.c ****   * @brief  Deinitializes the Alternate Functions (remap, event control
 156:common/stm32f10x_gpio.c ****   *   and EXTI configuration) registers to their default reset values.
 157:common/stm32f10x_gpio.c ****   * @param  None
 158:common/stm32f10x_gpio.c ****   * @retval None
 159:common/stm32f10x_gpio.c ****   */
 160:common/stm32f10x_gpio.c **** void GPIO_AFIODeInit(void)
 161:common/stm32f10x_gpio.c **** {
 178              		.loc 1 161 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 00e4 80B5     		push	{r7, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 00e6 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 162:common/stm32f10x_gpio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
 188              		.loc 1 162 0
 189 00e8 0121     		movs	r1, #1
 190 00ea 0120     		movs	r0, #1
 191 00ec FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 163:common/stm32f10x_gpio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
 192              		.loc 1 163 0
 193 00f0 0021     		movs	r1, #0
 194 00f2 0120     		movs	r0, #1
 195 00f4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 164:common/stm32f10x_gpio.c **** }
 196              		.loc 1 164 0
 197 00f8 00BF     		nop
 198 00fa 80BD     		pop	{r7, pc}
 199              		.cfi_endproc
 200              	.LFE64:
 201              		.size	GPIO_AFIODeInit, .-GPIO_AFIODeInit
 202              		.align	1
 203              		.global	GPIO_Init
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 208              		.type	GPIO_Init, %function
 209              	GPIO_Init:
 210              	.LFB65:
 165:common/stm32f10x_gpio.c **** 
 166:common/stm32f10x_gpio.c **** /**
 167:common/stm32f10x_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified
 168:common/stm32f10x_gpio.c ****   *         parameters in the GPIO_InitStruct.
 169:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 170:common/stm32f10x_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
 171:common/stm32f10x_gpio.c ****   *         contains the configuration information for the specified GPIO peripheral.
ARM GAS  /tmp/cc1cfAaD.s 			page 8


 172:common/stm32f10x_gpio.c ****   * @retval None
 173:common/stm32f10x_gpio.c ****   */
 174:common/stm32f10x_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 175:common/stm32f10x_gpio.c **** {
 211              		.loc 1 175 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 32
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216 00fc 80B4     		push	{r7}
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 00fe 89B0     		sub	sp, sp, #36
 220              		.cfi_def_cfa_offset 40
 221 0100 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
 223 0102 7860     		str	r0, [r7, #4]
 224 0104 3960     		str	r1, [r7]
 176:common/stm32f10x_gpio.c ****   uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
 225              		.loc 1 176 0
 226 0106 0023     		movs	r3, #0
 227 0108 FB61     		str	r3, [r7, #28]
 228 010a 0023     		movs	r3, #0
 229 010c 3B61     		str	r3, [r7, #16]
 230 010e 0023     		movs	r3, #0
 231 0110 BB61     		str	r3, [r7, #24]
 232 0112 0023     		movs	r3, #0
 233 0114 FB60     		str	r3, [r7, #12]
 177:common/stm32f10x_gpio.c ****   uint32_t tmpreg = 0x00, pinmask = 0x00;
 234              		.loc 1 177 0
 235 0116 0023     		movs	r3, #0
 236 0118 7B61     		str	r3, [r7, #20]
 237 011a 0023     		movs	r3, #0
 238 011c BB60     		str	r3, [r7, #8]
 178:common/stm32f10x_gpio.c ****   /* Check the parameters */
 179:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 180:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 181:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 182:common/stm32f10x_gpio.c ****   
 183:common/stm32f10x_gpio.c **** /*---------------------------- GPIO Mode Configuration -----------------------*/
 184:common/stm32f10x_gpio.c ****   currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
 239              		.loc 1 184 0
 240 011e 3B68     		ldr	r3, [r7]
 241 0120 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 242 0122 03F00F03 		and	r3, r3, #15
 243 0126 FB61     		str	r3, [r7, #28]
 185:common/stm32f10x_gpio.c ****   if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
 244              		.loc 1 185 0
 245 0128 3B68     		ldr	r3, [r7]
 246 012a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 247 012c 03F01003 		and	r3, r3, #16
 248 0130 002B     		cmp	r3, #0
 249 0132 05D0     		beq	.L14
 186:common/stm32f10x_gpio.c ****   { 
 187:common/stm32f10x_gpio.c ****     /* Check the parameters */
 188:common/stm32f10x_gpio.c ****     assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 189:common/stm32f10x_gpio.c ****     /* Output mode */
ARM GAS  /tmp/cc1cfAaD.s 			page 9


 190:common/stm32f10x_gpio.c ****     currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
 250              		.loc 1 190 0
 251 0134 3B68     		ldr	r3, [r7]
 252 0136 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 253 0138 1A46     		mov	r2, r3
 254 013a FB69     		ldr	r3, [r7, #28]
 255 013c 1343     		orrs	r3, r3, r2
 256 013e FB61     		str	r3, [r7, #28]
 257              	.L14:
 191:common/stm32f10x_gpio.c ****   }
 192:common/stm32f10x_gpio.c **** /*---------------------------- GPIO CRL Configuration ------------------------*/
 193:common/stm32f10x_gpio.c ****   /* Configure the eight low port pins */
 194:common/stm32f10x_gpio.c ****   if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
 258              		.loc 1 194 0
 259 0140 3B68     		ldr	r3, [r7]
 260 0142 1B88     		ldrh	r3, [r3]
 261 0144 DBB2     		uxtb	r3, r3
 262 0146 002B     		cmp	r3, #0
 263 0148 44D0     		beq	.L15
 195:common/stm32f10x_gpio.c ****   {
 196:common/stm32f10x_gpio.c ****     tmpreg = GPIOx->CRL;
 264              		.loc 1 196 0
 265 014a 7B68     		ldr	r3, [r7, #4]
 266 014c 1B68     		ldr	r3, [r3]
 267 014e 7B61     		str	r3, [r7, #20]
 197:common/stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 268              		.loc 1 197 0
 269 0150 0023     		movs	r3, #0
 270 0152 BB61     		str	r3, [r7, #24]
 271 0154 38E0     		b	.L16
 272              	.L19:
 198:common/stm32f10x_gpio.c ****     {
 199:common/stm32f10x_gpio.c ****       pos = ((uint32_t)0x01) << pinpos;
 273              		.loc 1 199 0
 274 0156 0122     		movs	r2, #1
 275 0158 BB69     		ldr	r3, [r7, #24]
 276 015a 02FA03F3 		lsl	r3, r2, r3
 277 015e FB60     		str	r3, [r7, #12]
 200:common/stm32f10x_gpio.c ****       /* Get the port pins position */
 201:common/stm32f10x_gpio.c ****       currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 278              		.loc 1 201 0
 279 0160 3B68     		ldr	r3, [r7]
 280 0162 1B88     		ldrh	r3, [r3]
 281 0164 1A46     		mov	r2, r3
 282 0166 FB68     		ldr	r3, [r7, #12]
 283 0168 1340     		ands	r3, r3, r2
 284 016a 3B61     		str	r3, [r7, #16]
 202:common/stm32f10x_gpio.c ****       if (currentpin == pos)
 285              		.loc 1 202 0
 286 016c 3A69     		ldr	r2, [r7, #16]
 287 016e FB68     		ldr	r3, [r7, #12]
 288 0170 9A42     		cmp	r2, r3
 289 0172 26D1     		bne	.L17
 203:common/stm32f10x_gpio.c ****       {
 204:common/stm32f10x_gpio.c ****         pos = pinpos << 2;
 290              		.loc 1 204 0
 291 0174 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc1cfAaD.s 			page 10


 292 0176 9B00     		lsls	r3, r3, #2
 293 0178 FB60     		str	r3, [r7, #12]
 205:common/stm32f10x_gpio.c ****         /* Clear the corresponding low control register bits */
 206:common/stm32f10x_gpio.c ****         pinmask = ((uint32_t)0x0F) << pos;
 294              		.loc 1 206 0
 295 017a 0F22     		movs	r2, #15
 296 017c FB68     		ldr	r3, [r7, #12]
 297 017e 02FA03F3 		lsl	r3, r2, r3
 298 0182 BB60     		str	r3, [r7, #8]
 207:common/stm32f10x_gpio.c ****         tmpreg &= ~pinmask;
 299              		.loc 1 207 0
 300 0184 BB68     		ldr	r3, [r7, #8]
 301 0186 DB43     		mvns	r3, r3
 302 0188 7A69     		ldr	r2, [r7, #20]
 303 018a 1340     		ands	r3, r3, r2
 304 018c 7B61     		str	r3, [r7, #20]
 208:common/stm32f10x_gpio.c ****         /* Write the mode configuration in the corresponding bits */
 209:common/stm32f10x_gpio.c ****         tmpreg |= (currentmode << pos);
 305              		.loc 1 209 0
 306 018e FA69     		ldr	r2, [r7, #28]
 307 0190 FB68     		ldr	r3, [r7, #12]
 308 0192 02FA03F3 		lsl	r3, r2, r3
 309 0196 7A69     		ldr	r2, [r7, #20]
 310 0198 1343     		orrs	r3, r3, r2
 311 019a 7B61     		str	r3, [r7, #20]
 210:common/stm32f10x_gpio.c ****         /* Reset the corresponding ODR bit */
 211:common/stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 312              		.loc 1 211 0
 313 019c 3B68     		ldr	r3, [r7]
 314 019e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 315 01a0 282B     		cmp	r3, #40
 316 01a2 05D1     		bne	.L18
 212:common/stm32f10x_gpio.c ****         {
 213:common/stm32f10x_gpio.c ****           GPIOx->BRR = (((uint32_t)0x01) << pinpos);
 317              		.loc 1 213 0
 318 01a4 0122     		movs	r2, #1
 319 01a6 BB69     		ldr	r3, [r7, #24]
 320 01a8 9A40     		lsls	r2, r2, r3
 321 01aa 7B68     		ldr	r3, [r7, #4]
 322 01ac 5A61     		str	r2, [r3, #20]
 323 01ae 08E0     		b	.L17
 324              	.L18:
 214:common/stm32f10x_gpio.c ****         }
 215:common/stm32f10x_gpio.c ****         else
 216:common/stm32f10x_gpio.c ****         {
 217:common/stm32f10x_gpio.c ****           /* Set the corresponding ODR bit */
 218:common/stm32f10x_gpio.c ****           if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 325              		.loc 1 218 0
 326 01b0 3B68     		ldr	r3, [r7]
 327 01b2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 328 01b4 482B     		cmp	r3, #72
 329 01b6 04D1     		bne	.L17
 219:common/stm32f10x_gpio.c ****           {
 220:common/stm32f10x_gpio.c ****             GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
 330              		.loc 1 220 0
 331 01b8 0122     		movs	r2, #1
 332 01ba BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc1cfAaD.s 			page 11


 333 01bc 9A40     		lsls	r2, r2, r3
 334 01be 7B68     		ldr	r3, [r7, #4]
 335 01c0 1A61     		str	r2, [r3, #16]
 336              	.L17:
 197:common/stm32f10x_gpio.c ****     {
 337              		.loc 1 197 0 discriminator 2
 338 01c2 BB69     		ldr	r3, [r7, #24]
 339 01c4 0133     		adds	r3, r3, #1
 340 01c6 BB61     		str	r3, [r7, #24]
 341              	.L16:
 197:common/stm32f10x_gpio.c ****     {
 342              		.loc 1 197 0 is_stmt 0 discriminator 1
 343 01c8 BB69     		ldr	r3, [r7, #24]
 344 01ca 072B     		cmp	r3, #7
 345 01cc C3D9     		bls	.L19
 221:common/stm32f10x_gpio.c ****           }
 222:common/stm32f10x_gpio.c ****         }
 223:common/stm32f10x_gpio.c ****       }
 224:common/stm32f10x_gpio.c ****     }
 225:common/stm32f10x_gpio.c ****     GPIOx->CRL = tmpreg;
 346              		.loc 1 225 0 is_stmt 1
 347 01ce 7B68     		ldr	r3, [r7, #4]
 348 01d0 7A69     		ldr	r2, [r7, #20]
 349 01d2 1A60     		str	r2, [r3]
 350              	.L15:
 226:common/stm32f10x_gpio.c ****   }
 227:common/stm32f10x_gpio.c **** /*---------------------------- GPIO CRH Configuration ------------------------*/
 228:common/stm32f10x_gpio.c ****   /* Configure the eight high port pins */
 229:common/stm32f10x_gpio.c ****   if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 351              		.loc 1 229 0
 352 01d4 3B68     		ldr	r3, [r7]
 353 01d6 1B88     		ldrh	r3, [r3]
 354 01d8 FF2B     		cmp	r3, #255
 355 01da 46D9     		bls	.L25
 230:common/stm32f10x_gpio.c ****   {
 231:common/stm32f10x_gpio.c ****     tmpreg = GPIOx->CRH;
 356              		.loc 1 231 0
 357 01dc 7B68     		ldr	r3, [r7, #4]
 358 01de 5B68     		ldr	r3, [r3, #4]
 359 01e0 7B61     		str	r3, [r7, #20]
 232:common/stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 360              		.loc 1 232 0
 361 01e2 0023     		movs	r3, #0
 362 01e4 BB61     		str	r3, [r7, #24]
 363 01e6 3AE0     		b	.L21
 364              	.L24:
 233:common/stm32f10x_gpio.c ****     {
 234:common/stm32f10x_gpio.c ****       pos = (((uint32_t)0x01) << (pinpos + 0x08));
 365              		.loc 1 234 0
 366 01e8 BB69     		ldr	r3, [r7, #24]
 367 01ea 0833     		adds	r3, r3, #8
 368 01ec 0122     		movs	r2, #1
 369 01ee 02FA03F3 		lsl	r3, r2, r3
 370 01f2 FB60     		str	r3, [r7, #12]
 235:common/stm32f10x_gpio.c ****       /* Get the port pins position */
 236:common/stm32f10x_gpio.c ****       currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 371              		.loc 1 236 0
ARM GAS  /tmp/cc1cfAaD.s 			page 12


 372 01f4 3B68     		ldr	r3, [r7]
 373 01f6 1B88     		ldrh	r3, [r3]
 374 01f8 1A46     		mov	r2, r3
 375 01fa FB68     		ldr	r3, [r7, #12]
 376 01fc 1340     		ands	r3, r3, r2
 377 01fe 3B61     		str	r3, [r7, #16]
 237:common/stm32f10x_gpio.c ****       if (currentpin == pos)
 378              		.loc 1 237 0
 379 0200 3A69     		ldr	r2, [r7, #16]
 380 0202 FB68     		ldr	r3, [r7, #12]
 381 0204 9A42     		cmp	r2, r3
 382 0206 27D1     		bne	.L22
 238:common/stm32f10x_gpio.c ****       {
 239:common/stm32f10x_gpio.c ****         pos = pinpos << 2;
 383              		.loc 1 239 0
 384 0208 BB69     		ldr	r3, [r7, #24]
 385 020a 9B00     		lsls	r3, r3, #2
 386 020c FB60     		str	r3, [r7, #12]
 240:common/stm32f10x_gpio.c ****         /* Clear the corresponding high control register bits */
 241:common/stm32f10x_gpio.c ****         pinmask = ((uint32_t)0x0F) << pos;
 387              		.loc 1 241 0
 388 020e 0F22     		movs	r2, #15
 389 0210 FB68     		ldr	r3, [r7, #12]
 390 0212 02FA03F3 		lsl	r3, r2, r3
 391 0216 BB60     		str	r3, [r7, #8]
 242:common/stm32f10x_gpio.c ****         tmpreg &= ~pinmask;
 392              		.loc 1 242 0
 393 0218 BB68     		ldr	r3, [r7, #8]
 394 021a DB43     		mvns	r3, r3
 395 021c 7A69     		ldr	r2, [r7, #20]
 396 021e 1340     		ands	r3, r3, r2
 397 0220 7B61     		str	r3, [r7, #20]
 243:common/stm32f10x_gpio.c ****         /* Write the mode configuration in the corresponding bits */
 244:common/stm32f10x_gpio.c ****         tmpreg |= (currentmode << pos);
 398              		.loc 1 244 0
 399 0222 FA69     		ldr	r2, [r7, #28]
 400 0224 FB68     		ldr	r3, [r7, #12]
 401 0226 02FA03F3 		lsl	r3, r2, r3
 402 022a 7A69     		ldr	r2, [r7, #20]
 403 022c 1343     		orrs	r3, r3, r2
 404 022e 7B61     		str	r3, [r7, #20]
 245:common/stm32f10x_gpio.c ****         /* Reset the corresponding ODR bit */
 246:common/stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 405              		.loc 1 246 0
 406 0230 3B68     		ldr	r3, [r7]
 407 0232 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 408 0234 282B     		cmp	r3, #40
 409 0236 05D1     		bne	.L23
 247:common/stm32f10x_gpio.c ****         {
 248:common/stm32f10x_gpio.c ****           GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
 410              		.loc 1 248 0
 411 0238 BB69     		ldr	r3, [r7, #24]
 412 023a 0833     		adds	r3, r3, #8
 413 023c 0122     		movs	r2, #1
 414 023e 9A40     		lsls	r2, r2, r3
 415 0240 7B68     		ldr	r3, [r7, #4]
 416 0242 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/cc1cfAaD.s 			page 13


 417              	.L23:
 249:common/stm32f10x_gpio.c ****         }
 250:common/stm32f10x_gpio.c ****         /* Set the corresponding ODR bit */
 251:common/stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 418              		.loc 1 251 0
 419 0244 3B68     		ldr	r3, [r7]
 420 0246 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 421 0248 482B     		cmp	r3, #72
 422 024a 05D1     		bne	.L22
 252:common/stm32f10x_gpio.c ****         {
 253:common/stm32f10x_gpio.c ****           GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
 423              		.loc 1 253 0
 424 024c BB69     		ldr	r3, [r7, #24]
 425 024e 0833     		adds	r3, r3, #8
 426 0250 0122     		movs	r2, #1
 427 0252 9A40     		lsls	r2, r2, r3
 428 0254 7B68     		ldr	r3, [r7, #4]
 429 0256 1A61     		str	r2, [r3, #16]
 430              	.L22:
 232:common/stm32f10x_gpio.c ****     {
 431              		.loc 1 232 0 discriminator 2
 432 0258 BB69     		ldr	r3, [r7, #24]
 433 025a 0133     		adds	r3, r3, #1
 434 025c BB61     		str	r3, [r7, #24]
 435              	.L21:
 232:common/stm32f10x_gpio.c ****     {
 436              		.loc 1 232 0 is_stmt 0 discriminator 1
 437 025e BB69     		ldr	r3, [r7, #24]
 438 0260 072B     		cmp	r3, #7
 439 0262 C1D9     		bls	.L24
 254:common/stm32f10x_gpio.c ****         }
 255:common/stm32f10x_gpio.c ****       }
 256:common/stm32f10x_gpio.c ****     }
 257:common/stm32f10x_gpio.c ****     GPIOx->CRH = tmpreg;
 440              		.loc 1 257 0 is_stmt 1
 441 0264 7B68     		ldr	r3, [r7, #4]
 442 0266 7A69     		ldr	r2, [r7, #20]
 443 0268 5A60     		str	r2, [r3, #4]
 444              	.L25:
 258:common/stm32f10x_gpio.c ****   }
 259:common/stm32f10x_gpio.c **** }
 445              		.loc 1 259 0
 446 026a 00BF     		nop
 447 026c 2437     		adds	r7, r7, #36
 448              		.cfi_def_cfa_offset 4
 449 026e BD46     		mov	sp, r7
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 0270 80BC     		pop	{r7}
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0272 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE65:
 458              		.size	GPIO_Init, .-GPIO_Init
 459              		.align	1
 460              		.global	GPIO_StructInit
ARM GAS  /tmp/cc1cfAaD.s 			page 14


 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu softvfp
 465              		.type	GPIO_StructInit, %function
 466              	GPIO_StructInit:
 467              	.LFB66:
 260:common/stm32f10x_gpio.c **** 
 261:common/stm32f10x_gpio.c **** /**
 262:common/stm32f10x_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 263:common/stm32f10x_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will
 264:common/stm32f10x_gpio.c ****   *         be initialized.
 265:common/stm32f10x_gpio.c ****   * @retval None
 266:common/stm32f10x_gpio.c ****   */
 267:common/stm32f10x_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 268:common/stm32f10x_gpio.c **** {
 468              		.loc 1 268 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 8
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0274 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0276 83B0     		sub	sp, sp, #12
 477              		.cfi_def_cfa_offset 16
 478 0278 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 480 027a 7860     		str	r0, [r7, #4]
 269:common/stm32f10x_gpio.c ****   /* Reset GPIO init structure parameters values */
 270:common/stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 481              		.loc 1 270 0
 482 027c 7B68     		ldr	r3, [r7, #4]
 483 027e 4FF6FF72 		movw	r2, #65535
 484 0282 1A80     		strh	r2, [r3]	@ movhi
 271:common/stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 485              		.loc 1 271 0
 486 0284 7B68     		ldr	r3, [r7, #4]
 487 0286 0222     		movs	r2, #2
 488 0288 9A70     		strb	r2, [r3, #2]
 272:common/stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
 489              		.loc 1 272 0
 490 028a 7B68     		ldr	r3, [r7, #4]
 491 028c 0422     		movs	r2, #4
 492 028e DA70     		strb	r2, [r3, #3]
 273:common/stm32f10x_gpio.c **** }
 493              		.loc 1 273 0
 494 0290 00BF     		nop
 495 0292 0C37     		adds	r7, r7, #12
 496              		.cfi_def_cfa_offset 4
 497 0294 BD46     		mov	sp, r7
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0296 80BC     		pop	{r7}
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 0298 7047     		bx	lr
ARM GAS  /tmp/cc1cfAaD.s 			page 15


 504              		.cfi_endproc
 505              	.LFE66:
 506              		.size	GPIO_StructInit, .-GPIO_StructInit
 507              		.align	1
 508              		.global	GPIO_ReadInputDataBit
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu softvfp
 513              		.type	GPIO_ReadInputDataBit, %function
 514              	GPIO_ReadInputDataBit:
 515              	.LFB67:
 274:common/stm32f10x_gpio.c **** 
 275:common/stm32f10x_gpio.c **** /**
 276:common/stm32f10x_gpio.c ****   * @brief  Reads the specified input port pin.
 277:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 278:common/stm32f10x_gpio.c ****   * @param  GPIO_Pin:  specifies the port bit to read.
 279:common/stm32f10x_gpio.c ****   *   This parameter can be GPIO_Pin_x where x can be (0..15).
 280:common/stm32f10x_gpio.c ****   * @retval The input port pin value.
 281:common/stm32f10x_gpio.c ****   */
 282:common/stm32f10x_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 283:common/stm32f10x_gpio.c **** {
 516              		.loc 1 283 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 029a 80B4     		push	{r7}
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
 524 029c 85B0     		sub	sp, sp, #20
 525              		.cfi_def_cfa_offset 24
 526 029e 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 02a0 7860     		str	r0, [r7, #4]
 529 02a2 0B46     		mov	r3, r1
 530 02a4 7B80     		strh	r3, [r7, #2]	@ movhi
 284:common/stm32f10x_gpio.c ****   uint8_t bitstatus = 0x00;
 531              		.loc 1 284 0
 532 02a6 0023     		movs	r3, #0
 533 02a8 FB73     		strb	r3, [r7, #15]
 285:common/stm32f10x_gpio.c ****   
 286:common/stm32f10x_gpio.c ****   /* Check the parameters */
 287:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 288:common/stm32f10x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
 289:common/stm32f10x_gpio.c ****   
 290:common/stm32f10x_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 534              		.loc 1 290 0
 535 02aa 7B68     		ldr	r3, [r7, #4]
 536 02ac 9A68     		ldr	r2, [r3, #8]
 537 02ae 7B88     		ldrh	r3, [r7, #2]
 538 02b0 1340     		ands	r3, r3, r2
 539 02b2 002B     		cmp	r3, #0
 540 02b4 02D0     		beq	.L28
 291:common/stm32f10x_gpio.c ****   {
 292:common/stm32f10x_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 541              		.loc 1 292 0
ARM GAS  /tmp/cc1cfAaD.s 			page 16


 542 02b6 0123     		movs	r3, #1
 543 02b8 FB73     		strb	r3, [r7, #15]
 544 02ba 01E0     		b	.L29
 545              	.L28:
 293:common/stm32f10x_gpio.c ****   }
 294:common/stm32f10x_gpio.c ****   else
 295:common/stm32f10x_gpio.c ****   {
 296:common/stm32f10x_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 546              		.loc 1 296 0
 547 02bc 0023     		movs	r3, #0
 548 02be FB73     		strb	r3, [r7, #15]
 549              	.L29:
 297:common/stm32f10x_gpio.c ****   }
 298:common/stm32f10x_gpio.c ****   return bitstatus;
 550              		.loc 1 298 0
 551 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 299:common/stm32f10x_gpio.c **** }
 552              		.loc 1 299 0
 553 02c2 1846     		mov	r0, r3
 554 02c4 1437     		adds	r7, r7, #20
 555              		.cfi_def_cfa_offset 4
 556 02c6 BD46     		mov	sp, r7
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 02c8 80BC     		pop	{r7}
 560              		.cfi_restore 7
 561              		.cfi_def_cfa_offset 0
 562 02ca 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE67:
 565              		.size	GPIO_ReadInputDataBit, .-GPIO_ReadInputDataBit
 566              		.align	1
 567              		.global	GPIO_ReadInputData
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu softvfp
 572              		.type	GPIO_ReadInputData, %function
 573              	GPIO_ReadInputData:
 574              	.LFB68:
 300:common/stm32f10x_gpio.c **** 
 301:common/stm32f10x_gpio.c **** /**
 302:common/stm32f10x_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 303:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 304:common/stm32f10x_gpio.c ****   * @retval GPIO input data port value.
 305:common/stm32f10x_gpio.c ****   */
 306:common/stm32f10x_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 307:common/stm32f10x_gpio.c **** {
 575              		.loc 1 307 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 8
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 02cc 80B4     		push	{r7}
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 02ce 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc1cfAaD.s 			page 17


 584              		.cfi_def_cfa_offset 16
 585 02d0 00AF     		add	r7, sp, #0
 586              		.cfi_def_cfa_register 7
 587 02d2 7860     		str	r0, [r7, #4]
 308:common/stm32f10x_gpio.c ****   /* Check the parameters */
 309:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 310:common/stm32f10x_gpio.c ****   
 311:common/stm32f10x_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 588              		.loc 1 311 0
 589 02d4 7B68     		ldr	r3, [r7, #4]
 590 02d6 9B68     		ldr	r3, [r3, #8]
 591 02d8 9BB2     		uxth	r3, r3
 312:common/stm32f10x_gpio.c **** }
 592              		.loc 1 312 0
 593 02da 1846     		mov	r0, r3
 594 02dc 0C37     		adds	r7, r7, #12
 595              		.cfi_def_cfa_offset 4
 596 02de BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 02e0 80BC     		pop	{r7}
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 02e2 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE68:
 605              		.size	GPIO_ReadInputData, .-GPIO_ReadInputData
 606              		.align	1
 607              		.global	GPIO_ReadOutputDataBit
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu softvfp
 612              		.type	GPIO_ReadOutputDataBit, %function
 613              	GPIO_ReadOutputDataBit:
 614              	.LFB69:
 313:common/stm32f10x_gpio.c **** 
 314:common/stm32f10x_gpio.c **** /**
 315:common/stm32f10x_gpio.c ****   * @brief  Reads the specified output data port bit.
 316:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 317:common/stm32f10x_gpio.c ****   * @param  GPIO_Pin:  specifies the port bit to read.
 318:common/stm32f10x_gpio.c ****   *   This parameter can be GPIO_Pin_x where x can be (0..15).
 319:common/stm32f10x_gpio.c ****   * @retval The output port pin value.
 320:common/stm32f10x_gpio.c ****   */
 321:common/stm32f10x_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 322:common/stm32f10x_gpio.c **** {
 615              		.loc 1 322 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 16
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620 02e4 80B4     		push	{r7}
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 7, -4
 623 02e6 85B0     		sub	sp, sp, #20
 624              		.cfi_def_cfa_offset 24
 625 02e8 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc1cfAaD.s 			page 18


 626              		.cfi_def_cfa_register 7
 627 02ea 7860     		str	r0, [r7, #4]
 628 02ec 0B46     		mov	r3, r1
 629 02ee 7B80     		strh	r3, [r7, #2]	@ movhi
 323:common/stm32f10x_gpio.c ****   uint8_t bitstatus = 0x00;
 630              		.loc 1 323 0
 631 02f0 0023     		movs	r3, #0
 632 02f2 FB73     		strb	r3, [r7, #15]
 324:common/stm32f10x_gpio.c ****   /* Check the parameters */
 325:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 326:common/stm32f10x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
 327:common/stm32f10x_gpio.c ****   
 328:common/stm32f10x_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 633              		.loc 1 328 0
 634 02f4 7B68     		ldr	r3, [r7, #4]
 635 02f6 DA68     		ldr	r2, [r3, #12]
 636 02f8 7B88     		ldrh	r3, [r7, #2]
 637 02fa 1340     		ands	r3, r3, r2
 638 02fc 002B     		cmp	r3, #0
 639 02fe 02D0     		beq	.L34
 329:common/stm32f10x_gpio.c ****   {
 330:common/stm32f10x_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 640              		.loc 1 330 0
 641 0300 0123     		movs	r3, #1
 642 0302 FB73     		strb	r3, [r7, #15]
 643 0304 01E0     		b	.L35
 644              	.L34:
 331:common/stm32f10x_gpio.c ****   }
 332:common/stm32f10x_gpio.c ****   else
 333:common/stm32f10x_gpio.c ****   {
 334:common/stm32f10x_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 645              		.loc 1 334 0
 646 0306 0023     		movs	r3, #0
 647 0308 FB73     		strb	r3, [r7, #15]
 648              	.L35:
 335:common/stm32f10x_gpio.c ****   }
 336:common/stm32f10x_gpio.c ****   return bitstatus;
 649              		.loc 1 336 0
 650 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 337:common/stm32f10x_gpio.c **** }
 651              		.loc 1 337 0
 652 030c 1846     		mov	r0, r3
 653 030e 1437     		adds	r7, r7, #20
 654              		.cfi_def_cfa_offset 4
 655 0310 BD46     		mov	sp, r7
 656              		.cfi_def_cfa_register 13
 657              		@ sp needed
 658 0312 80BC     		pop	{r7}
 659              		.cfi_restore 7
 660              		.cfi_def_cfa_offset 0
 661 0314 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE69:
 664              		.size	GPIO_ReadOutputDataBit, .-GPIO_ReadOutputDataBit
 665              		.align	1
 666              		.global	GPIO_ReadOutputData
 667              		.syntax unified
ARM GAS  /tmp/cc1cfAaD.s 			page 19


 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 671              		.type	GPIO_ReadOutputData, %function
 672              	GPIO_ReadOutputData:
 673              	.LFB70:
 338:common/stm32f10x_gpio.c **** 
 339:common/stm32f10x_gpio.c **** /**
 340:common/stm32f10x_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 341:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 342:common/stm32f10x_gpio.c ****   * @retval GPIO output data port value.
 343:common/stm32f10x_gpio.c ****   */
 344:common/stm32f10x_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 345:common/stm32f10x_gpio.c **** {
 674              		.loc 1 345 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679 0316 80B4     		push	{r7}
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0318 83B0     		sub	sp, sp, #12
 683              		.cfi_def_cfa_offset 16
 684 031a 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 686 031c 7860     		str	r0, [r7, #4]
 346:common/stm32f10x_gpio.c ****   /* Check the parameters */
 347:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 348:common/stm32f10x_gpio.c ****     
 349:common/stm32f10x_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 687              		.loc 1 349 0
 688 031e 7B68     		ldr	r3, [r7, #4]
 689 0320 DB68     		ldr	r3, [r3, #12]
 690 0322 9BB2     		uxth	r3, r3
 350:common/stm32f10x_gpio.c **** }
 691              		.loc 1 350 0
 692 0324 1846     		mov	r0, r3
 693 0326 0C37     		adds	r7, r7, #12
 694              		.cfi_def_cfa_offset 4
 695 0328 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 032a 80BC     		pop	{r7}
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 032c 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE70:
 704              		.size	GPIO_ReadOutputData, .-GPIO_ReadOutputData
 705              		.align	1
 706              		.global	GPIO_SetBits
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
 711              		.type	GPIO_SetBits, %function
ARM GAS  /tmp/cc1cfAaD.s 			page 20


 712              	GPIO_SetBits:
 713              	.LFB71:
 351:common/stm32f10x_gpio.c **** 
 352:common/stm32f10x_gpio.c **** /**
 353:common/stm32f10x_gpio.c ****   * @brief  Sets the selected data port bits.
 354:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 355:common/stm32f10x_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 356:common/stm32f10x_gpio.c ****   *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 357:common/stm32f10x_gpio.c ****   * @retval None
 358:common/stm32f10x_gpio.c ****   */
 359:common/stm32f10x_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 360:common/stm32f10x_gpio.c **** {
 714              		.loc 1 360 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 8
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 032e 80B4     		push	{r7}
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 7, -4
 722 0330 83B0     		sub	sp, sp, #12
 723              		.cfi_def_cfa_offset 16
 724 0332 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 726 0334 7860     		str	r0, [r7, #4]
 727 0336 0B46     		mov	r3, r1
 728 0338 7B80     		strh	r3, [r7, #2]	@ movhi
 361:common/stm32f10x_gpio.c ****   /* Check the parameters */
 362:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 363:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 364:common/stm32f10x_gpio.c ****   
 365:common/stm32f10x_gpio.c ****   GPIOx->BSRR = GPIO_Pin;
 729              		.loc 1 365 0
 730 033a 7A88     		ldrh	r2, [r7, #2]
 731 033c 7B68     		ldr	r3, [r7, #4]
 732 033e 1A61     		str	r2, [r3, #16]
 366:common/stm32f10x_gpio.c **** }
 733              		.loc 1 366 0
 734 0340 00BF     		nop
 735 0342 0C37     		adds	r7, r7, #12
 736              		.cfi_def_cfa_offset 4
 737 0344 BD46     		mov	sp, r7
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0346 80BC     		pop	{r7}
 741              		.cfi_restore 7
 742              		.cfi_def_cfa_offset 0
 743 0348 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE71:
 746              		.size	GPIO_SetBits, .-GPIO_SetBits
 747              		.align	1
 748              		.global	GPIO_ResetBits
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu softvfp
ARM GAS  /tmp/cc1cfAaD.s 			page 21


 753              		.type	GPIO_ResetBits, %function
 754              	GPIO_ResetBits:
 755              	.LFB72:
 367:common/stm32f10x_gpio.c **** 
 368:common/stm32f10x_gpio.c **** /**
 369:common/stm32f10x_gpio.c ****   * @brief  Clears the selected data port bits.
 370:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 371:common/stm32f10x_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 372:common/stm32f10x_gpio.c ****   *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 373:common/stm32f10x_gpio.c ****   * @retval None
 374:common/stm32f10x_gpio.c ****   */
 375:common/stm32f10x_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 376:common/stm32f10x_gpio.c **** {
 756              		.loc 1 376 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 034a 80B4     		push	{r7}
 762              		.cfi_def_cfa_offset 4
 763              		.cfi_offset 7, -4
 764 034c 83B0     		sub	sp, sp, #12
 765              		.cfi_def_cfa_offset 16
 766 034e 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 768 0350 7860     		str	r0, [r7, #4]
 769 0352 0B46     		mov	r3, r1
 770 0354 7B80     		strh	r3, [r7, #2]	@ movhi
 377:common/stm32f10x_gpio.c ****   /* Check the parameters */
 378:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 379:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 380:common/stm32f10x_gpio.c ****   
 381:common/stm32f10x_gpio.c ****   GPIOx->BRR = GPIO_Pin;
 771              		.loc 1 381 0
 772 0356 7A88     		ldrh	r2, [r7, #2]
 773 0358 7B68     		ldr	r3, [r7, #4]
 774 035a 5A61     		str	r2, [r3, #20]
 382:common/stm32f10x_gpio.c **** }
 775              		.loc 1 382 0
 776 035c 00BF     		nop
 777 035e 0C37     		adds	r7, r7, #12
 778              		.cfi_def_cfa_offset 4
 779 0360 BD46     		mov	sp, r7
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 0362 80BC     		pop	{r7}
 783              		.cfi_restore 7
 784              		.cfi_def_cfa_offset 0
 785 0364 7047     		bx	lr
 786              		.cfi_endproc
 787              	.LFE72:
 788              		.size	GPIO_ResetBits, .-GPIO_ResetBits
 789              		.align	1
 790              		.global	GPIO_WriteBit
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
ARM GAS  /tmp/cc1cfAaD.s 			page 22


 794              		.fpu softvfp
 795              		.type	GPIO_WriteBit, %function
 796              	GPIO_WriteBit:
 797              	.LFB73:
 383:common/stm32f10x_gpio.c **** 
 384:common/stm32f10x_gpio.c **** /**
 385:common/stm32f10x_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 386:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 387:common/stm32f10x_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 388:common/stm32f10x_gpio.c ****   *   This parameter can be one of GPIO_Pin_x where x can be (0..15).
 389:common/stm32f10x_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 390:common/stm32f10x_gpio.c ****   *   This parameter can be one of the BitAction enum values:
 391:common/stm32f10x_gpio.c ****   *     @arg Bit_RESET: to clear the port pin
 392:common/stm32f10x_gpio.c ****   *     @arg Bit_SET: to set the port pin
 393:common/stm32f10x_gpio.c ****   * @retval None
 394:common/stm32f10x_gpio.c ****   */
 395:common/stm32f10x_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 396:common/stm32f10x_gpio.c **** {
 798              		.loc 1 396 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803 0366 80B4     		push	{r7}
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 7, -4
 806 0368 83B0     		sub	sp, sp, #12
 807              		.cfi_def_cfa_offset 16
 808 036a 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 036c 7860     		str	r0, [r7, #4]
 811 036e 0B46     		mov	r3, r1
 812 0370 7B80     		strh	r3, [r7, #2]	@ movhi
 813 0372 1346     		mov	r3, r2
 814 0374 7B70     		strb	r3, [r7, #1]
 397:common/stm32f10x_gpio.c ****   /* Check the parameters */
 398:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 399:common/stm32f10x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 400:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
 401:common/stm32f10x_gpio.c ****   
 402:common/stm32f10x_gpio.c ****   if (BitVal != Bit_RESET)
 815              		.loc 1 402 0
 816 0376 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 817 0378 002B     		cmp	r3, #0
 818 037a 03D0     		beq	.L42
 403:common/stm32f10x_gpio.c ****   {
 404:common/stm32f10x_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 819              		.loc 1 404 0
 820 037c 7A88     		ldrh	r2, [r7, #2]
 821 037e 7B68     		ldr	r3, [r7, #4]
 822 0380 1A61     		str	r2, [r3, #16]
 405:common/stm32f10x_gpio.c ****   }
 406:common/stm32f10x_gpio.c ****   else
 407:common/stm32f10x_gpio.c ****   {
 408:common/stm32f10x_gpio.c ****     GPIOx->BRR = GPIO_Pin;
 409:common/stm32f10x_gpio.c ****   }
 410:common/stm32f10x_gpio.c **** }
ARM GAS  /tmp/cc1cfAaD.s 			page 23


 823              		.loc 1 410 0
 824 0382 02E0     		b	.L44
 825              	.L42:
 408:common/stm32f10x_gpio.c ****   }
 826              		.loc 1 408 0
 827 0384 7A88     		ldrh	r2, [r7, #2]
 828 0386 7B68     		ldr	r3, [r7, #4]
 829 0388 5A61     		str	r2, [r3, #20]
 830              	.L44:
 831              		.loc 1 410 0
 832 038a 00BF     		nop
 833 038c 0C37     		adds	r7, r7, #12
 834              		.cfi_def_cfa_offset 4
 835 038e BD46     		mov	sp, r7
 836              		.cfi_def_cfa_register 13
 837              		@ sp needed
 838 0390 80BC     		pop	{r7}
 839              		.cfi_restore 7
 840              		.cfi_def_cfa_offset 0
 841 0392 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE73:
 844              		.size	GPIO_WriteBit, .-GPIO_WriteBit
 845              		.align	1
 846              		.global	GPIO_Write
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu softvfp
 851              		.type	GPIO_Write, %function
 852              	GPIO_Write:
 853              	.LFB74:
 411:common/stm32f10x_gpio.c **** 
 412:common/stm32f10x_gpio.c **** /**
 413:common/stm32f10x_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 414:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 415:common/stm32f10x_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 416:common/stm32f10x_gpio.c ****   * @retval None
 417:common/stm32f10x_gpio.c ****   */
 418:common/stm32f10x_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 419:common/stm32f10x_gpio.c **** {
 854              		.loc 1 419 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 8
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0394 80B4     		push	{r7}
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 7, -4
 862 0396 83B0     		sub	sp, sp, #12
 863              		.cfi_def_cfa_offset 16
 864 0398 00AF     		add	r7, sp, #0
 865              		.cfi_def_cfa_register 7
 866 039a 7860     		str	r0, [r7, #4]
 867 039c 0B46     		mov	r3, r1
 868 039e 7B80     		strh	r3, [r7, #2]	@ movhi
 420:common/stm32f10x_gpio.c ****   /* Check the parameters */
ARM GAS  /tmp/cc1cfAaD.s 			page 24


 421:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 422:common/stm32f10x_gpio.c ****   
 423:common/stm32f10x_gpio.c ****   GPIOx->ODR = PortVal;
 869              		.loc 1 423 0
 870 03a0 7A88     		ldrh	r2, [r7, #2]
 871 03a2 7B68     		ldr	r3, [r7, #4]
 872 03a4 DA60     		str	r2, [r3, #12]
 424:common/stm32f10x_gpio.c **** }
 873              		.loc 1 424 0
 874 03a6 00BF     		nop
 875 03a8 0C37     		adds	r7, r7, #12
 876              		.cfi_def_cfa_offset 4
 877 03aa BD46     		mov	sp, r7
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 03ac 80BC     		pop	{r7}
 881              		.cfi_restore 7
 882              		.cfi_def_cfa_offset 0
 883 03ae 7047     		bx	lr
 884              		.cfi_endproc
 885              	.LFE74:
 886              		.size	GPIO_Write, .-GPIO_Write
 887              		.align	1
 888              		.global	GPIO_PinLockConfig
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu softvfp
 893              		.type	GPIO_PinLockConfig, %function
 894              	GPIO_PinLockConfig:
 895              	.LFB75:
 425:common/stm32f10x_gpio.c **** 
 426:common/stm32f10x_gpio.c **** /**
 427:common/stm32f10x_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 428:common/stm32f10x_gpio.c ****   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 429:common/stm32f10x_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 430:common/stm32f10x_gpio.c ****   *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 431:common/stm32f10x_gpio.c ****   * @retval None
 432:common/stm32f10x_gpio.c ****   */
 433:common/stm32f10x_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 434:common/stm32f10x_gpio.c **** {
 896              		.loc 1 434 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 16
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 03b0 80B4     		push	{r7}
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 03b2 85B0     		sub	sp, sp, #20
 905              		.cfi_def_cfa_offset 24
 906 03b4 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 03b6 7860     		str	r0, [r7, #4]
 909 03b8 0B46     		mov	r3, r1
 910 03ba 7B80     		strh	r3, [r7, #2]	@ movhi
 435:common/stm32f10x_gpio.c ****   uint32_t tmp = 0x00010000;
ARM GAS  /tmp/cc1cfAaD.s 			page 25


 911              		.loc 1 435 0
 912 03bc 4FF48033 		mov	r3, #65536
 913 03c0 FB60     		str	r3, [r7, #12]
 436:common/stm32f10x_gpio.c ****   
 437:common/stm32f10x_gpio.c ****   /* Check the parameters */
 438:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 439:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 440:common/stm32f10x_gpio.c ****   
 441:common/stm32f10x_gpio.c ****   tmp |= GPIO_Pin;
 914              		.loc 1 441 0
 915 03c2 7B88     		ldrh	r3, [r7, #2]
 916 03c4 FA68     		ldr	r2, [r7, #12]
 917 03c6 1343     		orrs	r3, r3, r2
 918 03c8 FB60     		str	r3, [r7, #12]
 442:common/stm32f10x_gpio.c ****   /* Set LCKK bit */
 443:common/stm32f10x_gpio.c ****   GPIOx->LCKR = tmp;
 919              		.loc 1 443 0
 920 03ca 7B68     		ldr	r3, [r7, #4]
 921 03cc FA68     		ldr	r2, [r7, #12]
 922 03ce 9A61     		str	r2, [r3, #24]
 444:common/stm32f10x_gpio.c ****   /* Reset LCKK bit */
 445:common/stm32f10x_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 923              		.loc 1 445 0
 924 03d0 7A88     		ldrh	r2, [r7, #2]
 925 03d2 7B68     		ldr	r3, [r7, #4]
 926 03d4 9A61     		str	r2, [r3, #24]
 446:common/stm32f10x_gpio.c ****   /* Set LCKK bit */
 447:common/stm32f10x_gpio.c ****   GPIOx->LCKR = tmp;
 927              		.loc 1 447 0
 928 03d6 7B68     		ldr	r3, [r7, #4]
 929 03d8 FA68     		ldr	r2, [r7, #12]
 930 03da 9A61     		str	r2, [r3, #24]
 448:common/stm32f10x_gpio.c ****   /* Read LCKK bit*/
 449:common/stm32f10x_gpio.c ****   tmp = GPIOx->LCKR;
 931              		.loc 1 449 0
 932 03dc 7B68     		ldr	r3, [r7, #4]
 933 03de 9B69     		ldr	r3, [r3, #24]
 934 03e0 FB60     		str	r3, [r7, #12]
 450:common/stm32f10x_gpio.c ****   /* Read LCKK bit*/
 451:common/stm32f10x_gpio.c ****   tmp = GPIOx->LCKR;
 935              		.loc 1 451 0
 936 03e2 7B68     		ldr	r3, [r7, #4]
 937 03e4 9B69     		ldr	r3, [r3, #24]
 938 03e6 FB60     		str	r3, [r7, #12]
 452:common/stm32f10x_gpio.c **** }
 939              		.loc 1 452 0
 940 03e8 00BF     		nop
 941 03ea 1437     		adds	r7, r7, #20
 942              		.cfi_def_cfa_offset 4
 943 03ec BD46     		mov	sp, r7
 944              		.cfi_def_cfa_register 13
 945              		@ sp needed
 946 03ee 80BC     		pop	{r7}
 947              		.cfi_restore 7
 948              		.cfi_def_cfa_offset 0
 949 03f0 7047     		bx	lr
 950              		.cfi_endproc
ARM GAS  /tmp/cc1cfAaD.s 			page 26


 951              	.LFE75:
 952              		.size	GPIO_PinLockConfig, .-GPIO_PinLockConfig
 953              		.align	1
 954              		.global	GPIO_EventOutputConfig
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu softvfp
 959              		.type	GPIO_EventOutputConfig, %function
 960              	GPIO_EventOutputConfig:
 961              	.LFB76:
 453:common/stm32f10x_gpio.c **** 
 454:common/stm32f10x_gpio.c **** /**
 455:common/stm32f10x_gpio.c ****   * @brief  Selects the GPIO pin used as Event output.
 456:common/stm32f10x_gpio.c ****   * @param  GPIO_PortSource: selects the GPIO port to be used as source
 457:common/stm32f10x_gpio.c ****   *   for Event output.
 458:common/stm32f10x_gpio.c ****   *   This parameter can be GPIO_PortSourceGPIOx where x can be (A..E).
 459:common/stm32f10x_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Event output.
 460:common/stm32f10x_gpio.c ****   *   This parameter can be GPIO_PinSourcex where x can be (0..15).
 461:common/stm32f10x_gpio.c ****   * @retval None
 462:common/stm32f10x_gpio.c ****   */
 463:common/stm32f10x_gpio.c **** void GPIO_EventOutputConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
 464:common/stm32f10x_gpio.c **** {
 962              		.loc 1 464 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 16
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967 03f2 80B4     		push	{r7}
 968              		.cfi_def_cfa_offset 4
 969              		.cfi_offset 7, -4
 970 03f4 85B0     		sub	sp, sp, #20
 971              		.cfi_def_cfa_offset 24
 972 03f6 00AF     		add	r7, sp, #0
 973              		.cfi_def_cfa_register 7
 974 03f8 0346     		mov	r3, r0
 975 03fa 0A46     		mov	r2, r1
 976 03fc FB71     		strb	r3, [r7, #7]
 977 03fe 1346     		mov	r3, r2
 978 0400 BB71     		strb	r3, [r7, #6]
 465:common/stm32f10x_gpio.c ****   uint32_t tmpreg = 0x00;
 979              		.loc 1 465 0
 980 0402 0023     		movs	r3, #0
 981 0404 FB60     		str	r3, [r7, #12]
 466:common/stm32f10x_gpio.c ****   /* Check the parameters */
 467:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
 468:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 469:common/stm32f10x_gpio.c ****     
 470:common/stm32f10x_gpio.c ****   tmpreg = AFIO->EVCR;
 982              		.loc 1 470 0
 983 0406 0C4B     		ldr	r3, .L48
 984 0408 1B68     		ldr	r3, [r3]
 985 040a FB60     		str	r3, [r7, #12]
 471:common/stm32f10x_gpio.c ****   /* Clear the PORT[6:4] and PIN[3:0] bits */
 472:common/stm32f10x_gpio.c ****   tmpreg &= EVCR_PORTPINCONFIG_MASK;
 986              		.loc 1 472 0
 987 040c FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/cc1cfAaD.s 			page 27


 988 040e 4FF68073 		movw	r3, #65408
 989 0412 1340     		ands	r3, r3, r2
 990 0414 FB60     		str	r3, [r7, #12]
 473:common/stm32f10x_gpio.c ****   tmpreg |= (uint32_t)GPIO_PortSource << 0x04;
 991              		.loc 1 473 0
 992 0416 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 993 0418 1B01     		lsls	r3, r3, #4
 994 041a FA68     		ldr	r2, [r7, #12]
 995 041c 1343     		orrs	r3, r3, r2
 996 041e FB60     		str	r3, [r7, #12]
 474:common/stm32f10x_gpio.c ****   tmpreg |= GPIO_PinSource;
 997              		.loc 1 474 0
 998 0420 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 999 0422 FA68     		ldr	r2, [r7, #12]
 1000 0424 1343     		orrs	r3, r3, r2
 1001 0426 FB60     		str	r3, [r7, #12]
 475:common/stm32f10x_gpio.c ****   AFIO->EVCR = tmpreg;
 1002              		.loc 1 475 0
 1003 0428 034A     		ldr	r2, .L48
 1004 042a FB68     		ldr	r3, [r7, #12]
 1005 042c 1360     		str	r3, [r2]
 476:common/stm32f10x_gpio.c **** }
 1006              		.loc 1 476 0
 1007 042e 00BF     		nop
 1008 0430 1437     		adds	r7, r7, #20
 1009              		.cfi_def_cfa_offset 4
 1010 0432 BD46     		mov	sp, r7
 1011              		.cfi_def_cfa_register 13
 1012              		@ sp needed
 1013 0434 80BC     		pop	{r7}
 1014              		.cfi_restore 7
 1015              		.cfi_def_cfa_offset 0
 1016 0436 7047     		bx	lr
 1017              	.L49:
 1018              		.align	2
 1019              	.L48:
 1020 0438 00000140 		.word	1073807360
 1021              		.cfi_endproc
 1022              	.LFE76:
 1023              		.size	GPIO_EventOutputConfig, .-GPIO_EventOutputConfig
 1024              		.align	1
 1025              		.global	GPIO_EventOutputCmd
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1029              		.fpu softvfp
 1030              		.type	GPIO_EventOutputCmd, %function
 1031              	GPIO_EventOutputCmd:
 1032              	.LFB77:
 477:common/stm32f10x_gpio.c **** 
 478:common/stm32f10x_gpio.c **** /**
 479:common/stm32f10x_gpio.c ****   * @brief  Enables or disables the Event Output.
 480:common/stm32f10x_gpio.c ****   * @param  NewState: new state of the Event output.
 481:common/stm32f10x_gpio.c ****   *   This parameter can be: ENABLE or DISABLE.
 482:common/stm32f10x_gpio.c ****   * @retval None
 483:common/stm32f10x_gpio.c ****   */
 484:common/stm32f10x_gpio.c **** void GPIO_EventOutputCmd(FunctionalState NewState)
ARM GAS  /tmp/cc1cfAaD.s 			page 28


 485:common/stm32f10x_gpio.c **** {
 1033              		.loc 1 485 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 8
 1036              		@ frame_needed = 1, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 1038 043c 80B4     		push	{r7}
 1039              		.cfi_def_cfa_offset 4
 1040              		.cfi_offset 7, -4
 1041 043e 83B0     		sub	sp, sp, #12
 1042              		.cfi_def_cfa_offset 16
 1043 0440 00AF     		add	r7, sp, #0
 1044              		.cfi_def_cfa_register 7
 1045 0442 0346     		mov	r3, r0
 1046 0444 FB71     		strb	r3, [r7, #7]
 486:common/stm32f10x_gpio.c ****   /* Check the parameters */
 487:common/stm32f10x_gpio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 488:common/stm32f10x_gpio.c ****   
 489:common/stm32f10x_gpio.c ****   *(__IO uint32_t *) EVCR_EVOE_BB = (uint32_t)NewState;
 1047              		.loc 1 489 0
 1048 0446 044A     		ldr	r2, .L51
 1049 0448 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1050 044a 1360     		str	r3, [r2]
 490:common/stm32f10x_gpio.c **** }
 1051              		.loc 1 490 0
 1052 044c 00BF     		nop
 1053 044e 0C37     		adds	r7, r7, #12
 1054              		.cfi_def_cfa_offset 4
 1055 0450 BD46     		mov	sp, r7
 1056              		.cfi_def_cfa_register 13
 1057              		@ sp needed
 1058 0452 80BC     		pop	{r7}
 1059              		.cfi_restore 7
 1060              		.cfi_def_cfa_offset 0
 1061 0454 7047     		bx	lr
 1062              	.L52:
 1063 0456 00BF     		.align	2
 1064              	.L51:
 1065 0458 1C002042 		.word	1109393436
 1066              		.cfi_endproc
 1067              	.LFE77:
 1068              		.size	GPIO_EventOutputCmd, .-GPIO_EventOutputCmd
 1069              		.align	1
 1070              		.global	GPIO_PinRemapConfig
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu softvfp
 1075              		.type	GPIO_PinRemapConfig, %function
 1076              	GPIO_PinRemapConfig:
 1077              	.LFB78:
 491:common/stm32f10x_gpio.c **** 
 492:common/stm32f10x_gpio.c **** /**
 493:common/stm32f10x_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 494:common/stm32f10x_gpio.c ****   * @param  GPIO_Remap: selects the pin to remap.
 495:common/stm32f10x_gpio.c ****   *   This parameter can be one of the following values:
 496:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_SPI1             : SPI1 Alternate Function mapping
ARM GAS  /tmp/cc1cfAaD.s 			page 29


 497:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_I2C1             : I2C1 Alternate Function mapping
 498:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_USART1           : USART1 Alternate Function mapping
 499:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_USART2           : USART2 Alternate Function mapping
 500:common/stm32f10x_gpio.c ****   *     @arg GPIO_PartialRemap_USART3    : USART3 Partial Alternate Function mapping
 501:common/stm32f10x_gpio.c ****   *     @arg GPIO_FullRemap_USART3       : USART3 Full Alternate Function mapping
 502:common/stm32f10x_gpio.c ****   *     @arg GPIO_PartialRemap_TIM1      : TIM1 Partial Alternate Function mapping
 503:common/stm32f10x_gpio.c ****   *     @arg GPIO_FullRemap_TIM1         : TIM1 Full Alternate Function mapping
 504:common/stm32f10x_gpio.c ****   *     @arg GPIO_PartialRemap1_TIM2     : TIM2 Partial1 Alternate Function mapping
 505:common/stm32f10x_gpio.c ****   *     @arg GPIO_PartialRemap2_TIM2     : TIM2 Partial2 Alternate Function mapping
 506:common/stm32f10x_gpio.c ****   *     @arg GPIO_FullRemap_TIM2         : TIM2 Full Alternate Function mapping
 507:common/stm32f10x_gpio.c ****   *     @arg GPIO_PartialRemap_TIM3      : TIM3 Partial Alternate Function mapping
 508:common/stm32f10x_gpio.c ****   *     @arg GPIO_FullRemap_TIM3         : TIM3 Full Alternate Function mapping
 509:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM4             : TIM4 Alternate Function mapping
 510:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap1_CAN1            : CAN1 Alternate Function mapping
 511:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap2_CAN1            : CAN1 Alternate Function mapping
 512:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_PD01             : PD01 Alternate Function mapping
 513:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM5CH4_LSI      : LSI connected to TIM5 Channel4 input capture for calibra
 514:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_ADC1_ETRGINJ     : ADC1 External Trigger Injected Conversion remapping
 515:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_ADC1_ETRGREG     : ADC1 External Trigger Regular Conversion remapping
 516:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_ADC2_ETRGINJ     : ADC2 External Trigger Injected Conversion remapping
 517:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_ADC2_ETRGREG     : ADC2 External Trigger Regular Conversion remapping
 518:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_ETH              : Ethernet remapping (only for Connectivity line devices)
 519:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_CAN2             : CAN2 remapping (only for Connectivity line devices)
 520:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_SWJ_NoJTRST      : Full SWJ Enabled (JTAG-DP + SW-DP) but without JTRST
 521:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_SWJ_JTAGDisable  : JTAG-DP Disabled and SW-DP Enabled
 522:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_SWJ_Disable      : Full SWJ Disabled (JTAG-DP + SW-DP)
 523:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_SPI3             : SPI3/I2S3 Alternate Function mapping (only for Connectiv
 524:common/stm32f10x_gpio.c ****   *                                        When the SPI3/I2S3 is remapped using this function, the 
 525:common/stm32f10x_gpio.c ****   *                                        to Full SWJ Enabled (JTAG-DP + SW-DP) but without JTRST.
 526:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM2ITR1_PTP_SOF : Ethernet PTP output or USB OTG SOF (Start of Frame) conn
 527:common/stm32f10x_gpio.c ****   *                                        to TIM2 Internal Trigger 1 for calibration (only for Con
 528:common/stm32f10x_gpio.c ****   *                                        If the GPIO_Remap_TIM2ITR1_PTP_SOF is enabled the TIM2 I
 529:common/stm32f10x_gpio.c ****   *                                        Ethernet PTP output. When Reset TIM2 ITR1 is connected t
 530:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_PTP_PPS          : Ethernet MAC PPS_PTS output on PB05 (only for Connectivi
 531:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM15            : TIM15 Alternate Function mapping (only for Value line de
 532:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM16            : TIM16 Alternate Function mapping (only for Value line de
 533:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM17            : TIM17 Alternate Function mapping (only for Value line de
 534:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_CEC              : CEC Alternate Function mapping (only for Value line devi
 535:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM1_DMA         : TIM1 DMA requests mapping (only for Value line devices)
 536:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM9             : TIM9 Alternate Function mapping (only for XL-density dev
 537:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM10            : TIM10 Alternate Function mapping (only for XL-density de
 538:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM11            : TIM11 Alternate Function mapping (only for XL-density de
 539:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM13            : TIM13 Alternate Function mapping (only for High density 
 540:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM14            : TIM14 Alternate Function mapping (only for High density 
 541:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_FSMC_NADV        : FSMC_NADV Alternate Function mapping (only for High dens
 542:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM67_DAC_DMA    : TIM6/TIM7 and DAC DMA requests remapping (only for High 
 543:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_TIM12            : TIM12 Alternate Function mapping (only for High density 
 544:common/stm32f10x_gpio.c ****   *     @arg GPIO_Remap_MISC             : Miscellaneous Remap (DMA2 Channel5 Position and DAC Trig
 545:common/stm32f10x_gpio.c ****   *                                        only for High density Value line devices)     
 546:common/stm32f10x_gpio.c ****   * @param  NewState: new state of the port pin remapping.
 547:common/stm32f10x_gpio.c ****   *   This parameter can be: ENABLE or DISABLE.
 548:common/stm32f10x_gpio.c ****   * @retval None
 549:common/stm32f10x_gpio.c ****   */
 550:common/stm32f10x_gpio.c **** void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState)
 551:common/stm32f10x_gpio.c **** {
 1078              		.loc 1 551 0
 1079              		.cfi_startproc
ARM GAS  /tmp/cc1cfAaD.s 			page 30


 1080              		@ args = 0, pretend = 0, frame = 24
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
 1083 045c 80B4     		push	{r7}
 1084              		.cfi_def_cfa_offset 4
 1085              		.cfi_offset 7, -4
 1086 045e 87B0     		sub	sp, sp, #28
 1087              		.cfi_def_cfa_offset 32
 1088 0460 00AF     		add	r7, sp, #0
 1089              		.cfi_def_cfa_register 7
 1090 0462 7860     		str	r0, [r7, #4]
 1091 0464 0B46     		mov	r3, r1
 1092 0466 FB70     		strb	r3, [r7, #3]
 552:common/stm32f10x_gpio.c ****   uint32_t tmp = 0x00, tmp1 = 0x00, tmpreg = 0x00, tmpmask = 0x00;
 1093              		.loc 1 552 0
 1094 0468 0023     		movs	r3, #0
 1095 046a 3B61     		str	r3, [r7, #16]
 1096 046c 0023     		movs	r3, #0
 1097 046e FB60     		str	r3, [r7, #12]
 1098 0470 0023     		movs	r3, #0
 1099 0472 7B61     		str	r3, [r7, #20]
 1100 0474 0023     		movs	r3, #0
 1101 0476 BB60     		str	r3, [r7, #8]
 553:common/stm32f10x_gpio.c **** 
 554:common/stm32f10x_gpio.c ****   /* Check the parameters */
 555:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_REMAP(GPIO_Remap));
 556:common/stm32f10x_gpio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 557:common/stm32f10x_gpio.c ****   
 558:common/stm32f10x_gpio.c ****   if((GPIO_Remap & 0x80000000) == 0x80000000)
 1102              		.loc 1 558 0
 1103 0478 7B68     		ldr	r3, [r7, #4]
 1104 047a 002B     		cmp	r3, #0
 1105 047c 03DA     		bge	.L54
 559:common/stm32f10x_gpio.c ****   {
 560:common/stm32f10x_gpio.c ****     tmpreg = AFIO->MAPR2;
 1106              		.loc 1 560 0
 1107 047e 2E4B     		ldr	r3, .L63
 1108 0480 DB69     		ldr	r3, [r3, #28]
 1109 0482 7B61     		str	r3, [r7, #20]
 1110 0484 02E0     		b	.L55
 1111              	.L54:
 561:common/stm32f10x_gpio.c ****   }
 562:common/stm32f10x_gpio.c ****   else
 563:common/stm32f10x_gpio.c ****   {
 564:common/stm32f10x_gpio.c ****     tmpreg = AFIO->MAPR;
 1112              		.loc 1 564 0
 1113 0486 2C4B     		ldr	r3, .L63
 1114 0488 5B68     		ldr	r3, [r3, #4]
 1115 048a 7B61     		str	r3, [r7, #20]
 1116              	.L55:
 565:common/stm32f10x_gpio.c ****   }
 566:common/stm32f10x_gpio.c **** 
 567:common/stm32f10x_gpio.c ****   tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
 1117              		.loc 1 567 0
 1118 048c 7B68     		ldr	r3, [r7, #4]
 1119 048e 1B0C     		lsrs	r3, r3, #16
 1120 0490 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/cc1cfAaD.s 			page 31


 1121 0494 BB60     		str	r3, [r7, #8]
 568:common/stm32f10x_gpio.c ****   tmp = GPIO_Remap & LSB_MASK;
 1122              		.loc 1 568 0
 1123 0496 7B68     		ldr	r3, [r7, #4]
 1124 0498 9BB2     		uxth	r3, r3
 1125 049a 3B61     		str	r3, [r7, #16]
 569:common/stm32f10x_gpio.c **** 
 570:common/stm32f10x_gpio.c ****   if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR
 1126              		.loc 1 570 0
 1127 049c 7B68     		ldr	r3, [r7, #4]
 1128 049e 03F44013 		and	r3, r3, #3145728
 1129 04a2 B3F5401F 		cmp	r3, #3145728
 1130 04a6 0AD1     		bne	.L56
 571:common/stm32f10x_gpio.c ****   {
 572:common/stm32f10x_gpio.c ****     tmpreg &= DBGAFR_SWJCFG_MASK;
 1131              		.loc 1 572 0
 1132 04a8 7B69     		ldr	r3, [r7, #20]
 1133 04aa 23F07063 		bic	r3, r3, #251658240
 1134 04ae 7B61     		str	r3, [r7, #20]
 573:common/stm32f10x_gpio.c ****     AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
 1135              		.loc 1 573 0
 1136 04b0 214A     		ldr	r2, .L63
 1137 04b2 214B     		ldr	r3, .L63
 1138 04b4 5B68     		ldr	r3, [r3, #4]
 1139 04b6 23F07063 		bic	r3, r3, #251658240
 1140 04ba 5360     		str	r3, [r2, #4]
 1141 04bc 21E0     		b	.L57
 1142              	.L56:
 574:common/stm32f10x_gpio.c ****   }
 575:common/stm32f10x_gpio.c ****   else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
 1143              		.loc 1 575 0
 1144 04be 7B68     		ldr	r3, [r7, #4]
 1145 04c0 03F48013 		and	r3, r3, #1048576
 1146 04c4 002B     		cmp	r3, #0
 1147 04c6 0ED0     		beq	.L58
 576:common/stm32f10x_gpio.c ****   {
 577:common/stm32f10x_gpio.c ****     tmp1 = ((uint32_t)0x03) << tmpmask;
 1148              		.loc 1 577 0
 1149 04c8 0322     		movs	r2, #3
 1150 04ca BB68     		ldr	r3, [r7, #8]
 1151 04cc 02FA03F3 		lsl	r3, r2, r3
 1152 04d0 FB60     		str	r3, [r7, #12]
 578:common/stm32f10x_gpio.c ****     tmpreg &= ~tmp1;
 1153              		.loc 1 578 0
 1154 04d2 FB68     		ldr	r3, [r7, #12]
 1155 04d4 DB43     		mvns	r3, r3
 1156 04d6 7A69     		ldr	r2, [r7, #20]
 1157 04d8 1340     		ands	r3, r3, r2
 1158 04da 7B61     		str	r3, [r7, #20]
 579:common/stm32f10x_gpio.c ****     tmpreg |= ~DBGAFR_SWJCFG_MASK;
 1159              		.loc 1 579 0
 1160 04dc 7B69     		ldr	r3, [r7, #20]
 1161 04de 43F07063 		orr	r3, r3, #251658240
 1162 04e2 7B61     		str	r3, [r7, #20]
 1163 04e4 0DE0     		b	.L57
 1164              	.L58:
 580:common/stm32f10x_gpio.c ****   }
ARM GAS  /tmp/cc1cfAaD.s 			page 32


 581:common/stm32f10x_gpio.c ****   else
 582:common/stm32f10x_gpio.c ****   {
 583:common/stm32f10x_gpio.c ****     tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
 1165              		.loc 1 583 0
 1166 04e6 7B68     		ldr	r3, [r7, #4]
 1167 04e8 5B0D     		lsrs	r3, r3, #21
 1168 04ea 1B01     		lsls	r3, r3, #4
 1169 04ec 3A69     		ldr	r2, [r7, #16]
 1170 04ee 02FA03F3 		lsl	r3, r2, r3
 1171 04f2 DB43     		mvns	r3, r3
 1172 04f4 7A69     		ldr	r2, [r7, #20]
 1173 04f6 1340     		ands	r3, r3, r2
 1174 04f8 7B61     		str	r3, [r7, #20]
 584:common/stm32f10x_gpio.c ****     tmpreg |= ~DBGAFR_SWJCFG_MASK;
 1175              		.loc 1 584 0
 1176 04fa 7B69     		ldr	r3, [r7, #20]
 1177 04fc 43F07063 		orr	r3, r3, #251658240
 1178 0500 7B61     		str	r3, [r7, #20]
 1179              	.L57:
 585:common/stm32f10x_gpio.c ****   }
 586:common/stm32f10x_gpio.c **** 
 587:common/stm32f10x_gpio.c ****   if (NewState != DISABLE)
 1180              		.loc 1 587 0
 1181 0502 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1182 0504 002B     		cmp	r3, #0
 1183 0506 08D0     		beq	.L59
 588:common/stm32f10x_gpio.c ****   {
 589:common/stm32f10x_gpio.c ****     tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
 1184              		.loc 1 589 0
 1185 0508 7B68     		ldr	r3, [r7, #4]
 1186 050a 5B0D     		lsrs	r3, r3, #21
 1187 050c 1B01     		lsls	r3, r3, #4
 1188 050e 3A69     		ldr	r2, [r7, #16]
 1189 0510 02FA03F3 		lsl	r3, r2, r3
 1190 0514 7A69     		ldr	r2, [r7, #20]
 1191 0516 1343     		orrs	r3, r3, r2
 1192 0518 7B61     		str	r3, [r7, #20]
 1193              	.L59:
 590:common/stm32f10x_gpio.c ****   }
 591:common/stm32f10x_gpio.c **** 
 592:common/stm32f10x_gpio.c ****   if((GPIO_Remap & 0x80000000) == 0x80000000)
 1194              		.loc 1 592 0
 1195 051a 7B68     		ldr	r3, [r7, #4]
 1196 051c 002B     		cmp	r3, #0
 1197 051e 03DA     		bge	.L60
 593:common/stm32f10x_gpio.c ****   {
 594:common/stm32f10x_gpio.c ****     AFIO->MAPR2 = tmpreg;
 1198              		.loc 1 594 0
 1199 0520 054A     		ldr	r2, .L63
 1200 0522 7B69     		ldr	r3, [r7, #20]
 1201 0524 D361     		str	r3, [r2, #28]
 595:common/stm32f10x_gpio.c ****   }
 596:common/stm32f10x_gpio.c ****   else
 597:common/stm32f10x_gpio.c ****   {
 598:common/stm32f10x_gpio.c ****     AFIO->MAPR = tmpreg;
 599:common/stm32f10x_gpio.c ****   }  
 600:common/stm32f10x_gpio.c **** }
ARM GAS  /tmp/cc1cfAaD.s 			page 33


 1202              		.loc 1 600 0
 1203 0526 02E0     		b	.L62
 1204              	.L60:
 598:common/stm32f10x_gpio.c ****   }  
 1205              		.loc 1 598 0
 1206 0528 034A     		ldr	r2, .L63
 1207 052a 7B69     		ldr	r3, [r7, #20]
 1208 052c 5360     		str	r3, [r2, #4]
 1209              	.L62:
 1210              		.loc 1 600 0
 1211 052e 00BF     		nop
 1212 0530 1C37     		adds	r7, r7, #28
 1213              		.cfi_def_cfa_offset 4
 1214 0532 BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 0534 80BC     		pop	{r7}
 1218              		.cfi_restore 7
 1219              		.cfi_def_cfa_offset 0
 1220 0536 7047     		bx	lr
 1221              	.L64:
 1222              		.align	2
 1223              	.L63:
 1224 0538 00000140 		.word	1073807360
 1225              		.cfi_endproc
 1226              	.LFE78:
 1227              		.size	GPIO_PinRemapConfig, .-GPIO_PinRemapConfig
 1228              		.align	1
 1229              		.global	GPIO_EXTILineConfig
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu softvfp
 1234              		.type	GPIO_EXTILineConfig, %function
 1235              	GPIO_EXTILineConfig:
 1236              	.LFB79:
 601:common/stm32f10x_gpio.c **** 
 602:common/stm32f10x_gpio.c **** /**
 603:common/stm32f10x_gpio.c ****   * @brief  Selects the GPIO pin used as EXTI Line.
 604:common/stm32f10x_gpio.c ****   * @param  GPIO_PortSource: selects the GPIO port to be used as source for EXTI lines.
 605:common/stm32f10x_gpio.c ****   *   This parameter can be GPIO_PortSourceGPIOx where x can be (A..G).
 606:common/stm32f10x_gpio.c ****   * @param  GPIO_PinSource: specifies the EXTI line to be configured.
 607:common/stm32f10x_gpio.c ****   *   This parameter can be GPIO_PinSourcex where x can be (0..15).
 608:common/stm32f10x_gpio.c ****   * @retval None
 609:common/stm32f10x_gpio.c ****   */
 610:common/stm32f10x_gpio.c **** void GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
 611:common/stm32f10x_gpio.c **** {
 1237              		.loc 1 611 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 16
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242 053c 90B4     		push	{r4, r7}
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 4, -8
 1245              		.cfi_offset 7, -4
 1246 053e 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/cc1cfAaD.s 			page 34


 1247              		.cfi_def_cfa_offset 24
 1248 0540 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 1250 0542 0346     		mov	r3, r0
 1251 0544 0A46     		mov	r2, r1
 1252 0546 FB71     		strb	r3, [r7, #7]
 1253 0548 1346     		mov	r3, r2
 1254 054a BB71     		strb	r3, [r7, #6]
 612:common/stm32f10x_gpio.c ****   uint32_t tmp = 0x00;
 1255              		.loc 1 612 0
 1256 054c 0023     		movs	r3, #0
 1257 054e FB60     		str	r3, [r7, #12]
 613:common/stm32f10x_gpio.c ****   /* Check the parameters */
 614:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
 615:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 616:common/stm32f10x_gpio.c ****   
 617:common/stm32f10x_gpio.c ****   tmp = ((uint32_t)0x0F) << (0x04 * (GPIO_PinSource & (uint8_t)0x03));
 1258              		.loc 1 617 0
 1259 0550 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1260 0552 03F00303 		and	r3, r3, #3
 1261 0556 9B00     		lsls	r3, r3, #2
 1262 0558 0F22     		movs	r2, #15
 1263 055a 02FA03F3 		lsl	r3, r2, r3
 1264 055e FB60     		str	r3, [r7, #12]
 618:common/stm32f10x_gpio.c ****   AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
 1265              		.loc 1 618 0
 1266 0560 1649     		ldr	r1, .L66
 1267 0562 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1268 0564 9B08     		lsrs	r3, r3, #2
 1269 0566 DBB2     		uxtb	r3, r3
 1270 0568 1846     		mov	r0, r3
 1271 056a 144A     		ldr	r2, .L66
 1272 056c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1273 056e 9B08     		lsrs	r3, r3, #2
 1274 0570 DBB2     		uxtb	r3, r3
 1275 0572 0233     		adds	r3, r3, #2
 1276 0574 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1277 0578 FB68     		ldr	r3, [r7, #12]
 1278 057a DB43     		mvns	r3, r3
 1279 057c 1A40     		ands	r2, r2, r3
 1280 057e 831C     		adds	r3, r0, #2
 1281 0580 41F82320 		str	r2, [r1, r3, lsl #2]
 619:common/stm32f10x_gpio.c ****   AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((uint32_t)GPIO_PortSource) << (0x04 * (GPIO_PinSource &
 1282              		.loc 1 619 0
 1283 0584 0D48     		ldr	r0, .L66
 1284 0586 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1285 0588 9B08     		lsrs	r3, r3, #2
 1286 058a DBB2     		uxtb	r3, r3
 1287 058c 1C46     		mov	r4, r3
 1288 058e 0B4A     		ldr	r2, .L66
 1289 0590 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1290 0592 9B08     		lsrs	r3, r3, #2
 1291 0594 DBB2     		uxtb	r3, r3
 1292 0596 0233     		adds	r3, r3, #2
 1293 0598 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1294 059c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1295 059e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc1cfAaD.s 			page 35


 1296 05a0 03F00303 		and	r3, r3, #3
 1297 05a4 9B00     		lsls	r3, r3, #2
 1298 05a6 01FA03F3 		lsl	r3, r1, r3
 1299 05aa 1A43     		orrs	r2, r2, r3
 1300 05ac A31C     		adds	r3, r4, #2
 1301 05ae 40F82320 		str	r2, [r0, r3, lsl #2]
 620:common/stm32f10x_gpio.c **** }
 1302              		.loc 1 620 0
 1303 05b2 00BF     		nop
 1304 05b4 1037     		adds	r7, r7, #16
 1305              		.cfi_def_cfa_offset 8
 1306 05b6 BD46     		mov	sp, r7
 1307              		.cfi_def_cfa_register 13
 1308              		@ sp needed
 1309 05b8 90BC     		pop	{r4, r7}
 1310              		.cfi_restore 7
 1311              		.cfi_restore 4
 1312              		.cfi_def_cfa_offset 0
 1313 05ba 7047     		bx	lr
 1314              	.L67:
 1315              		.align	2
 1316              	.L66:
 1317 05bc 00000140 		.word	1073807360
 1318              		.cfi_endproc
 1319              	.LFE79:
 1320              		.size	GPIO_EXTILineConfig, .-GPIO_EXTILineConfig
 1321              		.align	1
 1322              		.global	GPIO_ETH_MediaInterfaceConfig
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1326              		.fpu softvfp
 1327              		.type	GPIO_ETH_MediaInterfaceConfig, %function
 1328              	GPIO_ETH_MediaInterfaceConfig:
 1329              	.LFB80:
 621:common/stm32f10x_gpio.c **** 
 622:common/stm32f10x_gpio.c **** /**
 623:common/stm32f10x_gpio.c ****   * @brief  Selects the Ethernet media interface.
 624:common/stm32f10x_gpio.c ****   * @note   This function applies only to STM32 Connectivity line devices.  
 625:common/stm32f10x_gpio.c ****   * @param  GPIO_ETH_MediaInterface: specifies the Media Interface mode.
 626:common/stm32f10x_gpio.c ****   *   This parameter can be one of the following values:
 627:common/stm32f10x_gpio.c ****   *     @arg GPIO_ETH_MediaInterface_MII: MII mode
 628:common/stm32f10x_gpio.c ****   *     @arg GPIO_ETH_MediaInterface_RMII: RMII mode    
 629:common/stm32f10x_gpio.c ****   * @retval None
 630:common/stm32f10x_gpio.c ****   */
 631:common/stm32f10x_gpio.c **** void GPIO_ETH_MediaInterfaceConfig(uint32_t GPIO_ETH_MediaInterface) 
 632:common/stm32f10x_gpio.c **** { 
 1330              		.loc 1 632 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 8
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335 05c0 80B4     		push	{r7}
 1336              		.cfi_def_cfa_offset 4
 1337              		.cfi_offset 7, -4
 1338 05c2 83B0     		sub	sp, sp, #12
 1339              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc1cfAaD.s 			page 36


 1340 05c4 00AF     		add	r7, sp, #0
 1341              		.cfi_def_cfa_register 7
 1342 05c6 7860     		str	r0, [r7, #4]
 633:common/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ETH_MEDIA_INTERFACE(GPIO_ETH_MediaInterface)); 
 634:common/stm32f10x_gpio.c **** 
 635:common/stm32f10x_gpio.c ****   /* Configure MII_RMII selection bit */ 
 636:common/stm32f10x_gpio.c ****   *(__IO uint32_t *) MAPR_MII_RMII_SEL_BB = GPIO_ETH_MediaInterface; 
 1343              		.loc 1 636 0
 1344 05c8 034A     		ldr	r2, .L69
 1345 05ca 7B68     		ldr	r3, [r7, #4]
 1346 05cc 1360     		str	r3, [r2]
 637:common/stm32f10x_gpio.c **** }
 1347              		.loc 1 637 0
 1348 05ce 00BF     		nop
 1349 05d0 0C37     		adds	r7, r7, #12
 1350              		.cfi_def_cfa_offset 4
 1351 05d2 BD46     		mov	sp, r7
 1352              		.cfi_def_cfa_register 13
 1353              		@ sp needed
 1354 05d4 80BC     		pop	{r7}
 1355              		.cfi_restore 7
 1356              		.cfi_def_cfa_offset 0
 1357 05d6 7047     		bx	lr
 1358              	.L70:
 1359              		.align	2
 1360              	.L69:
 1361 05d8 DC002042 		.word	1109393628
 1362              		.cfi_endproc
 1363              	.LFE80:
 1364              		.size	GPIO_ETH_MediaInterfaceConfig, .-GPIO_ETH_MediaInterfaceConfig
 1365              	.Letext0:
 1366              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1367              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1368              		.file 4 "include/core_cm3.h"
 1369              		.file 5 "include/system_stm32f10x.h"
 1370              		.file 6 "include/stm32f10x.h"
 1371              		.file 7 "include/stm32f10x_gpio.h"
 1372              		.section	.debug_info,"",%progbits
 1373              	.Ldebug_info0:
 1374 0000 FD060000 		.4byte	0x6fd
 1375 0004 0400     		.2byte	0x4
 1376 0006 00000000 		.4byte	.Ldebug_abbrev0
 1377 000a 04       		.byte	0x4
 1378 000b 01       		.uleb128 0x1
 1379 000c 57020000 		.4byte	.LASF85
 1380 0010 0C       		.byte	0xc
 1381 0011 BC030000 		.4byte	.LASF86
 1382 0015 31040000 		.4byte	.LASF87
 1383 0019 00000000 		.4byte	.Ltext0
 1384 001d DC050000 		.4byte	.Letext0-.Ltext0
 1385 0021 00000000 		.4byte	.Ldebug_line0
 1386 0025 02       		.uleb128 0x2
 1387 0026 01       		.byte	0x1
 1388 0027 06       		.byte	0x6
 1389 0028 30010000 		.4byte	.LASF0
 1390 002c 03       		.uleb128 0x3
 1391 002d 8B010000 		.4byte	.LASF3
ARM GAS  /tmp/cc1cfAaD.s 			page 37


 1392 0031 02       		.byte	0x2
 1393 0032 1D       		.byte	0x1d
 1394 0033 37000000 		.4byte	0x37
 1395 0037 02       		.uleb128 0x2
 1396 0038 01       		.byte	0x1
 1397 0039 08       		.byte	0x8
 1398 003a CD010000 		.4byte	.LASF1
 1399 003e 02       		.uleb128 0x2
 1400 003f 02       		.byte	0x2
 1401 0040 05       		.byte	0x5
 1402 0041 5D000000 		.4byte	.LASF2
 1403 0045 03       		.uleb128 0x3
 1404 0046 AA000000 		.4byte	.LASF4
 1405 004a 02       		.byte	0x2
 1406 004b 2B       		.byte	0x2b
 1407 004c 50000000 		.4byte	0x50
 1408 0050 02       		.uleb128 0x2
 1409 0051 02       		.byte	0x2
 1410 0052 07       		.byte	0x7
 1411 0053 26030000 		.4byte	.LASF5
 1412 0057 03       		.uleb128 0x3
 1413 0058 27040000 		.4byte	.LASF6
 1414 005c 02       		.byte	0x2
 1415 005d 3F       		.byte	0x3f
 1416 005e 62000000 		.4byte	0x62
 1417 0062 02       		.uleb128 0x2
 1418 0063 04       		.byte	0x4
 1419 0064 05       		.byte	0x5
 1420 0065 5A010000 		.4byte	.LASF7
 1421 0069 03       		.uleb128 0x3
 1422 006a 9F000000 		.4byte	.LASF8
 1423 006e 02       		.byte	0x2
 1424 006f 41       		.byte	0x41
 1425 0070 74000000 		.4byte	0x74
 1426 0074 02       		.uleb128 0x2
 1427 0075 04       		.byte	0x4
 1428 0076 07       		.byte	0x7
 1429 0077 CD000000 		.4byte	.LASF9
 1430 007b 02       		.uleb128 0x2
 1431 007c 08       		.byte	0x8
 1432 007d 05       		.byte	0x5
 1433 007e 4C010000 		.4byte	.LASF10
 1434 0082 02       		.uleb128 0x2
 1435 0083 08       		.byte	0x8
 1436 0084 07       		.byte	0x7
 1437 0085 10020000 		.4byte	.LASF11
 1438 0089 04       		.uleb128 0x4
 1439 008a 04       		.byte	0x4
 1440 008b 05       		.byte	0x5
 1441 008c 696E7400 		.ascii	"int\000"
 1442 0090 02       		.uleb128 0x2
 1443 0091 04       		.byte	0x4
 1444 0092 07       		.byte	0x7
 1445 0093 41020000 		.4byte	.LASF12
 1446 0097 03       		.uleb128 0x3
 1447 0098 08010000 		.4byte	.LASF13
 1448 009c 03       		.byte	0x3
ARM GAS  /tmp/cc1cfAaD.s 			page 38


 1449 009d 18       		.byte	0x18
 1450 009e 2C000000 		.4byte	0x2c
 1451 00a2 03       		.uleb128 0x3
 1452 00a3 4E020000 		.4byte	.LASF14
 1453 00a7 03       		.byte	0x3
 1454 00a8 24       		.byte	0x24
 1455 00a9 45000000 		.4byte	0x45
 1456 00ad 03       		.uleb128 0x3
 1457 00ae 0B030000 		.4byte	.LASF15
 1458 00b2 03       		.byte	0x3
 1459 00b3 2C       		.byte	0x2c
 1460 00b4 57000000 		.4byte	0x57
 1461 00b8 05       		.uleb128 0x5
 1462 00b9 AD000000 		.4byte	0xad
 1463 00bd 03       		.uleb128 0x3
 1464 00be 27020000 		.4byte	.LASF16
 1465 00c2 03       		.byte	0x3
 1466 00c3 30       		.byte	0x30
 1467 00c4 69000000 		.4byte	0x69
 1468 00c8 05       		.uleb128 0x5
 1469 00c9 BD000000 		.4byte	0xbd
 1470 00cd 02       		.uleb128 0x2
 1471 00ce 04       		.byte	0x4
 1472 00cf 07       		.byte	0x7
 1473 00d0 77000000 		.4byte	.LASF17
 1474 00d4 06       		.uleb128 0x6
 1475 00d5 8C040000 		.4byte	.LASF18
 1476 00d9 04       		.byte	0x4
 1477 00da 9606     		.2byte	0x696
 1478 00dc B8000000 		.4byte	0xb8
 1479 00e0 07       		.uleb128 0x7
 1480 00e1 4F030000 		.4byte	.LASF19
 1481 00e5 05       		.byte	0x5
 1482 00e6 35       		.byte	0x35
 1483 00e7 BD000000 		.4byte	0xbd
 1484 00eb 08       		.uleb128 0x8
 1485 00ec 753800   		.ascii	"u8\000"
 1486 00ef 06       		.byte	0x6
 1487 00f0 F901     		.2byte	0x1f9
 1488 00f2 97000000 		.4byte	0x97
 1489 00f6 09       		.uleb128 0x9
 1490 00f7 01       		.byte	0x1
 1491 00f8 37000000 		.4byte	0x37
 1492 00fc 06       		.byte	0x6
 1493 00fd 0902     		.2byte	0x209
 1494 00ff 10010000 		.4byte	0x110
 1495 0103 0A       		.uleb128 0xa
 1496 0104 28010000 		.4byte	.LASF20
 1497 0108 00       		.byte	0
 1498 0109 0A       		.uleb128 0xa
 1499 010a EC000000 		.4byte	.LASF21
 1500 010e 01       		.byte	0x1
 1501 010f 00       		.byte	0
 1502 0110 0B       		.uleb128 0xb
 1503 0111 E6030000 		.4byte	.LASF22
 1504 0115 06       		.byte	0x6
 1505 0116 0902     		.2byte	0x209
ARM GAS  /tmp/cc1cfAaD.s 			page 39


 1506 0118 F6000000 		.4byte	0xf6
 1507 011c 0C       		.uleb128 0xc
 1508 011d 1C       		.byte	0x1c
 1509 011e 06       		.byte	0x6
 1510 011f E903     		.2byte	0x3e9
 1511 0121 81010000 		.4byte	0x181
 1512 0125 0D       		.uleb128 0xd
 1513 0126 43524C00 		.ascii	"CRL\000"
 1514 012a 06       		.byte	0x6
 1515 012b EB03     		.2byte	0x3eb
 1516 012d C8000000 		.4byte	0xc8
 1517 0131 00       		.byte	0
 1518 0132 0D       		.uleb128 0xd
 1519 0133 43524800 		.ascii	"CRH\000"
 1520 0137 06       		.byte	0x6
 1521 0138 EC03     		.2byte	0x3ec
 1522 013a C8000000 		.4byte	0xc8
 1523 013e 04       		.byte	0x4
 1524 013f 0D       		.uleb128 0xd
 1525 0140 49445200 		.ascii	"IDR\000"
 1526 0144 06       		.byte	0x6
 1527 0145 ED03     		.2byte	0x3ed
 1528 0147 C8000000 		.4byte	0xc8
 1529 014b 08       		.byte	0x8
 1530 014c 0D       		.uleb128 0xd
 1531 014d 4F445200 		.ascii	"ODR\000"
 1532 0151 06       		.byte	0x6
 1533 0152 EE03     		.2byte	0x3ee
 1534 0154 C8000000 		.4byte	0xc8
 1535 0158 0C       		.byte	0xc
 1536 0159 0E       		.uleb128 0xe
 1537 015a 86010000 		.4byte	.LASF23
 1538 015e 06       		.byte	0x6
 1539 015f EF03     		.2byte	0x3ef
 1540 0161 C8000000 		.4byte	0xc8
 1541 0165 10       		.byte	0x10
 1542 0166 0D       		.uleb128 0xd
 1543 0167 42525200 		.ascii	"BRR\000"
 1544 016b 06       		.byte	0x6
 1545 016c F003     		.2byte	0x3f0
 1546 016e C8000000 		.4byte	0xc8
 1547 0172 14       		.byte	0x14
 1548 0173 0E       		.uleb128 0xe
 1549 0174 BD020000 		.4byte	.LASF24
 1550 0178 06       		.byte	0x6
 1551 0179 F103     		.2byte	0x3f1
 1552 017b C8000000 		.4byte	0xc8
 1553 017f 18       		.byte	0x18
 1554 0180 00       		.byte	0
 1555 0181 0B       		.uleb128 0xb
 1556 0182 00000000 		.4byte	.LASF25
 1557 0186 06       		.byte	0x6
 1558 0187 F203     		.2byte	0x3f2
 1559 0189 1C010000 		.4byte	0x11c
 1560 018d 0C       		.uleb128 0xc
 1561 018e 20       		.byte	0x20
 1562 018f 06       		.byte	0x6
ARM GAS  /tmp/cc1cfAaD.s 			page 40


 1563 0190 F803     		.2byte	0x3f8
 1564 0192 D8010000 		.4byte	0x1d8
 1565 0196 0E       		.uleb128 0xe
 1566 0197 22040000 		.4byte	.LASF26
 1567 019b 06       		.byte	0x6
 1568 019c FA03     		.2byte	0x3fa
 1569 019e C8000000 		.4byte	0xc8
 1570 01a2 00       		.byte	0
 1571 01a3 0E       		.uleb128 0xe
 1572 01a4 F6030000 		.4byte	.LASF27
 1573 01a8 06       		.byte	0x6
 1574 01a9 FB03     		.2byte	0x3fb
 1575 01ab C8000000 		.4byte	0xc8
 1576 01af 04       		.byte	0x4
 1577 01b0 0E       		.uleb128 0xe
 1578 01b1 10010000 		.4byte	.LASF28
 1579 01b5 06       		.byte	0x6
 1580 01b6 FC03     		.2byte	0x3fc
 1581 01b8 E8010000 		.4byte	0x1e8
 1582 01bc 08       		.byte	0x8
 1583 01bd 0E       		.uleb128 0xe
 1584 01be 78030000 		.4byte	.LASF29
 1585 01c2 06       		.byte	0x6
 1586 01c3 FD03     		.2byte	0x3fd
 1587 01c5 BD000000 		.4byte	0xbd
 1588 01c9 18       		.byte	0x18
 1589 01ca 0E       		.uleb128 0xe
 1590 01cb 72030000 		.4byte	.LASF30
 1591 01cf 06       		.byte	0x6
 1592 01d0 FE03     		.2byte	0x3fe
 1593 01d2 C8000000 		.4byte	0xc8
 1594 01d6 1C       		.byte	0x1c
 1595 01d7 00       		.byte	0
 1596 01d8 0F       		.uleb128 0xf
 1597 01d9 C8000000 		.4byte	0xc8
 1598 01dd E8010000 		.4byte	0x1e8
 1599 01e1 10       		.uleb128 0x10
 1600 01e2 CD000000 		.4byte	0xcd
 1601 01e6 03       		.byte	0x3
 1602 01e7 00       		.byte	0
 1603 01e8 05       		.uleb128 0x5
 1604 01e9 D8010000 		.4byte	0x1d8
 1605 01ed 0B       		.uleb128 0xb
 1606 01ee A5030000 		.4byte	.LASF31
 1607 01f2 06       		.byte	0x6
 1608 01f3 FF03     		.2byte	0x3ff
 1609 01f5 8D010000 		.4byte	0x18d
 1610 01f9 11       		.uleb128 0x11
 1611 01fa 01       		.byte	0x1
 1612 01fb 37000000 		.4byte	0x37
 1613 01ff 07       		.byte	0x7
 1614 0200 3B       		.byte	0x3b
 1615 0201 18020000 		.4byte	0x218
 1616 0205 0A       		.uleb128 0xa
 1617 0206 AB010000 		.4byte	.LASF32
 1618 020a 01       		.byte	0x1
 1619 020b 0A       		.uleb128 0xa
ARM GAS  /tmp/cc1cfAaD.s 			page 41


 1620 020c 00020000 		.4byte	.LASF33
 1621 0210 02       		.byte	0x2
 1622 0211 0A       		.uleb128 0xa
 1623 0212 FA020000 		.4byte	.LASF34
 1624 0216 03       		.byte	0x3
 1625 0217 00       		.byte	0
 1626 0218 03       		.uleb128 0x3
 1627 0219 D4030000 		.4byte	.LASF35
 1628 021d 07       		.byte	0x7
 1629 021e 3F       		.byte	0x3f
 1630 021f F9010000 		.4byte	0x1f9
 1631 0223 11       		.uleb128 0x11
 1632 0224 01       		.byte	0x1
 1633 0225 37000000 		.4byte	0x37
 1634 0229 07       		.byte	0x7
 1635 022a 48       		.byte	0x48
 1636 022b 60020000 		.4byte	0x260
 1637 022f 0A       		.uleb128 0xa
 1638 0230 82030000 		.4byte	.LASF36
 1639 0234 00       		.byte	0
 1640 0235 0A       		.uleb128 0xa
 1641 0236 76040000 		.4byte	.LASF37
 1642 023a 04       		.byte	0x4
 1643 023b 0A       		.uleb128 0xa
 1644 023c EC020000 		.4byte	.LASF38
 1645 0240 28       		.byte	0x28
 1646 0241 0A       		.uleb128 0xa
 1647 0242 5F030000 		.4byte	.LASF39
 1648 0246 48       		.byte	0x48
 1649 0247 0A       		.uleb128 0xa
 1650 0248 DB010000 		.4byte	.LASF40
 1651 024c 14       		.byte	0x14
 1652 024d 0A       		.uleb128 0xa
 1653 024e 11040000 		.4byte	.LASF41
 1654 0252 10       		.byte	0x10
 1655 0253 0A       		.uleb128 0xa
 1656 0254 C0040000 		.4byte	.LASF42
 1657 0258 1C       		.byte	0x1c
 1658 0259 0A       		.uleb128 0xa
 1659 025a 39000000 		.4byte	.LASF43
 1660 025e 18       		.byte	0x18
 1661 025f 00       		.byte	0
 1662 0260 03       		.uleb128 0x3
 1663 0261 56040000 		.4byte	.LASF44
 1664 0265 07       		.byte	0x7
 1665 0266 50       		.byte	0x50
 1666 0267 23020000 		.4byte	0x223
 1667 026b 12       		.uleb128 0x12
 1668 026c 04       		.byte	0x4
 1669 026d 07       		.byte	0x7
 1670 026e 5B       		.byte	0x5b
 1671 026f 98020000 		.4byte	0x298
 1672 0273 13       		.uleb128 0x13
 1673 0274 14000000 		.4byte	.LASF45
 1674 0278 07       		.byte	0x7
 1675 0279 5D       		.byte	0x5d
 1676 027a A2000000 		.4byte	0xa2
ARM GAS  /tmp/cc1cfAaD.s 			page 42


 1677 027e 00       		.byte	0
 1678 027f 13       		.uleb128 0x13
 1679 0280 F3000000 		.4byte	.LASF46
 1680 0284 07       		.byte	0x7
 1681 0285 60       		.byte	0x60
 1682 0286 18020000 		.4byte	0x218
 1683 028a 02       		.byte	0x2
 1684 028b 13       		.uleb128 0x13
 1685 028c 9B030000 		.4byte	.LASF47
 1686 0290 07       		.byte	0x7
 1687 0291 63       		.byte	0x63
 1688 0292 60020000 		.4byte	0x260
 1689 0296 03       		.byte	0x3
 1690 0297 00       		.byte	0
 1691 0298 03       		.uleb128 0x3
 1692 0299 30020000 		.4byte	.LASF48
 1693 029d 07       		.byte	0x7
 1694 029e 65       		.byte	0x65
 1695 029f 6B020000 		.4byte	0x26b
 1696 02a3 11       		.uleb128 0x11
 1697 02a4 01       		.byte	0x1
 1698 02a5 37000000 		.4byte	0x37
 1699 02a9 07       		.byte	0x7
 1700 02aa 6D       		.byte	0x6d
 1701 02ab BC020000 		.4byte	0x2bc
 1702 02af 0A       		.uleb128 0xa
 1703 02b0 87000000 		.4byte	.LASF49
 1704 02b4 00       		.byte	0
 1705 02b5 0A       		.uleb128 0xa
 1706 02b6 1D000000 		.4byte	.LASF50
 1707 02ba 01       		.byte	0x1
 1708 02bb 00       		.byte	0
 1709 02bc 03       		.uleb128 0x3
 1710 02bd B2030000 		.4byte	.LASF51
 1711 02c1 07       		.byte	0x7
 1712 02c2 6F       		.byte	0x6f
 1713 02c3 A3020000 		.4byte	0x2a3
 1714 02c7 14       		.uleb128 0x14
 1715 02c8 D0040000 		.4byte	.LASF52
 1716 02cc 01       		.byte	0x1
 1717 02cd 7702     		.2byte	0x277
 1718 02cf C0050000 		.4byte	.LFB80
 1719 02d3 1C000000 		.4byte	.LFE80-.LFB80
 1720 02d7 01       		.uleb128 0x1
 1721 02d8 9C       		.byte	0x9c
 1722 02d9 ED020000 		.4byte	0x2ed
 1723 02dd 15       		.uleb128 0x15
 1724 02de B5000000 		.4byte	.LASF54
 1725 02e2 01       		.byte	0x1
 1726 02e3 7702     		.2byte	0x277
 1727 02e5 BD000000 		.4byte	0xbd
 1728 02e9 02       		.uleb128 0x2
 1729 02ea 91       		.byte	0x91
 1730 02eb 74       		.sleb128 -12
 1731 02ec 00       		.byte	0
 1732 02ed 14       		.uleb128 0x14
 1733 02ee EC010000 		.4byte	.LASF53
ARM GAS  /tmp/cc1cfAaD.s 			page 43


 1734 02f2 01       		.byte	0x1
 1735 02f3 6202     		.2byte	0x262
 1736 02f5 3C050000 		.4byte	.LFB79
 1737 02f9 84000000 		.4byte	.LFE79-.LFB79
 1738 02fd 01       		.uleb128 0x1
 1739 02fe 9C       		.byte	0x9c
 1740 02ff 31030000 		.4byte	0x331
 1741 0303 15       		.uleb128 0x15
 1742 0304 3C010000 		.4byte	.LASF55
 1743 0308 01       		.byte	0x1
 1744 0309 6202     		.2byte	0x262
 1745 030b 97000000 		.4byte	0x97
 1746 030f 02       		.uleb128 0x2
 1747 0310 91       		.byte	0x91
 1748 0311 6F       		.sleb128 -17
 1749 0312 15       		.uleb128 0x15
 1750 0313 C2020000 		.4byte	.LASF56
 1751 0317 01       		.byte	0x1
 1752 0318 6202     		.2byte	0x262
 1753 031a 97000000 		.4byte	0x97
 1754 031e 02       		.uleb128 0x2
 1755 031f 91       		.byte	0x91
 1756 0320 6E       		.sleb128 -18
 1757 0321 16       		.uleb128 0x16
 1758 0322 746D7000 		.ascii	"tmp\000"
 1759 0326 01       		.byte	0x1
 1760 0327 6402     		.2byte	0x264
 1761 0329 BD000000 		.4byte	0xbd
 1762 032d 02       		.uleb128 0x2
 1763 032e 91       		.byte	0x91
 1764 032f 74       		.sleb128 -12
 1765 0330 00       		.byte	0
 1766 0331 14       		.uleb128 0x14
 1767 0332 A9020000 		.4byte	.LASF57
 1768 0336 01       		.byte	0x1
 1769 0337 2602     		.2byte	0x226
 1770 0339 5C040000 		.4byte	.LFB78
 1771 033d E0000000 		.4byte	.LFE78-.LFB78
 1772 0341 01       		.uleb128 0x1
 1773 0342 9C       		.byte	0x9c
 1774 0343 A2030000 		.4byte	0x3a2
 1775 0347 15       		.uleb128 0x15
 1776 0348 90030000 		.4byte	.LASF58
 1777 034c 01       		.byte	0x1
 1778 034d 2602     		.2byte	0x226
 1779 034f BD000000 		.4byte	0xbd
 1780 0353 02       		.uleb128 0x2
 1781 0354 91       		.byte	0x91
 1782 0355 64       		.sleb128 -28
 1783 0356 15       		.uleb128 0x15
 1784 0357 17010000 		.4byte	.LASF59
 1785 035b 01       		.byte	0x1
 1786 035c 2602     		.2byte	0x226
 1787 035e 10010000 		.4byte	0x110
 1788 0362 02       		.uleb128 0x2
 1789 0363 91       		.byte	0x91
 1790 0364 63       		.sleb128 -29
ARM GAS  /tmp/cc1cfAaD.s 			page 44


 1791 0365 16       		.uleb128 0x16
 1792 0366 746D7000 		.ascii	"tmp\000"
 1793 036a 01       		.byte	0x1
 1794 036b 2802     		.2byte	0x228
 1795 036d BD000000 		.4byte	0xbd
 1796 0371 02       		.uleb128 0x2
 1797 0372 91       		.byte	0x91
 1798 0373 70       		.sleb128 -16
 1799 0374 17       		.uleb128 0x17
 1800 0375 6D030000 		.4byte	.LASF60
 1801 0379 01       		.byte	0x1
 1802 037a 2802     		.2byte	0x228
 1803 037c BD000000 		.4byte	0xbd
 1804 0380 02       		.uleb128 0x2
 1805 0381 91       		.byte	0x91
 1806 0382 6C       		.sleb128 -20
 1807 0383 17       		.uleb128 0x17
 1808 0384 BC010000 		.4byte	.LASF61
 1809 0388 01       		.byte	0x1
 1810 0389 2802     		.2byte	0x228
 1811 038b BD000000 		.4byte	0xbd
 1812 038f 02       		.uleb128 0x2
 1813 0390 91       		.byte	0x91
 1814 0391 74       		.sleb128 -12
 1815 0392 17       		.uleb128 0x17
 1816 0393 E4020000 		.4byte	.LASF62
 1817 0397 01       		.byte	0x1
 1818 0398 2802     		.2byte	0x228
 1819 039a BD000000 		.4byte	0xbd
 1820 039e 02       		.uleb128 0x2
 1821 039f 91       		.byte	0x91
 1822 03a0 68       		.sleb128 -24
 1823 03a1 00       		.byte	0
 1824 03a2 14       		.uleb128 0x14
 1825 03a3 49000000 		.4byte	.LASF63
 1826 03a7 01       		.byte	0x1
 1827 03a8 E401     		.2byte	0x1e4
 1828 03aa 3C040000 		.4byte	.LFB77
 1829 03ae 20000000 		.4byte	.LFE77-.LFB77
 1830 03b2 01       		.uleb128 0x1
 1831 03b3 9C       		.byte	0x9c
 1832 03b4 C8030000 		.4byte	0x3c8
 1833 03b8 15       		.uleb128 0x15
 1834 03b9 17010000 		.4byte	.LASF59
 1835 03bd 01       		.byte	0x1
 1836 03be E401     		.2byte	0x1e4
 1837 03c0 10010000 		.4byte	0x110
 1838 03c4 02       		.uleb128 0x2
 1839 03c5 91       		.byte	0x91
 1840 03c6 77       		.sleb128 -9
 1841 03c7 00       		.byte	0
 1842 03c8 14       		.uleb128 0x14
 1843 03c9 6F010000 		.4byte	.LASF64
 1844 03cd 01       		.byte	0x1
 1845 03ce CF01     		.2byte	0x1cf
 1846 03d0 F2030000 		.4byte	.LFB76
 1847 03d4 4A000000 		.4byte	.LFE76-.LFB76
ARM GAS  /tmp/cc1cfAaD.s 			page 45


 1848 03d8 01       		.uleb128 0x1
 1849 03d9 9C       		.byte	0x9c
 1850 03da 0C040000 		.4byte	0x40c
 1851 03de 15       		.uleb128 0x15
 1852 03df 3C010000 		.4byte	.LASF55
 1853 03e3 01       		.byte	0x1
 1854 03e4 CF01     		.2byte	0x1cf
 1855 03e6 97000000 		.4byte	0x97
 1856 03ea 02       		.uleb128 0x2
 1857 03eb 91       		.byte	0x91
 1858 03ec 6F       		.sleb128 -17
 1859 03ed 15       		.uleb128 0x15
 1860 03ee C2020000 		.4byte	.LASF56
 1861 03f2 01       		.byte	0x1
 1862 03f3 CF01     		.2byte	0x1cf
 1863 03f5 97000000 		.4byte	0x97
 1864 03f9 02       		.uleb128 0x2
 1865 03fa 91       		.byte	0x91
 1866 03fb 6E       		.sleb128 -18
 1867 03fc 17       		.uleb128 0x17
 1868 03fd BC010000 		.4byte	.LASF61
 1869 0401 01       		.byte	0x1
 1870 0402 D101     		.2byte	0x1d1
 1871 0404 BD000000 		.4byte	0xbd
 1872 0408 02       		.uleb128 0x2
 1873 0409 91       		.byte	0x91
 1874 040a 74       		.sleb128 -12
 1875 040b 00       		.byte	0
 1876 040c 14       		.uleb128 0x14
 1877 040d 13030000 		.4byte	.LASF65
 1878 0411 01       		.byte	0x1
 1879 0412 B101     		.2byte	0x1b1
 1880 0414 B0030000 		.4byte	.LFB75
 1881 0418 42000000 		.4byte	.LFE75-.LFB75
 1882 041c 01       		.uleb128 0x1
 1883 041d 9C       		.byte	0x9c
 1884 041e 50040000 		.4byte	0x450
 1885 0422 15       		.uleb128 0x15
 1886 0423 FB030000 		.4byte	.LASF66
 1887 0427 01       		.byte	0x1
 1888 0428 B101     		.2byte	0x1b1
 1889 042a 50040000 		.4byte	0x450
 1890 042e 02       		.uleb128 0x2
 1891 042f 91       		.byte	0x91
 1892 0430 6C       		.sleb128 -20
 1893 0431 15       		.uleb128 0x15
 1894 0432 14000000 		.4byte	.LASF45
 1895 0436 01       		.byte	0x1
 1896 0437 B101     		.2byte	0x1b1
 1897 0439 A2000000 		.4byte	0xa2
 1898 043d 02       		.uleb128 0x2
 1899 043e 91       		.byte	0x91
 1900 043f 6A       		.sleb128 -22
 1901 0440 16       		.uleb128 0x16
 1902 0441 746D7000 		.ascii	"tmp\000"
 1903 0445 01       		.byte	0x1
 1904 0446 B301     		.2byte	0x1b3
ARM GAS  /tmp/cc1cfAaD.s 			page 46


 1905 0448 BD000000 		.4byte	0xbd
 1906 044c 02       		.uleb128 0x2
 1907 044d 91       		.byte	0x91
 1908 044e 74       		.sleb128 -12
 1909 044f 00       		.byte	0
 1910 0450 18       		.uleb128 0x18
 1911 0451 04       		.byte	0x4
 1912 0452 81010000 		.4byte	0x181
 1913 0456 14       		.uleb128 0x14
 1914 0457 44030000 		.4byte	.LASF67
 1915 045b 01       		.byte	0x1
 1916 045c A201     		.2byte	0x1a2
 1917 045e 94030000 		.4byte	.LFB74
 1918 0462 1C000000 		.4byte	.LFE74-.LFB74
 1919 0466 01       		.uleb128 0x1
 1920 0467 9C       		.byte	0x9c
 1921 0468 8B040000 		.4byte	0x48b
 1922 046c 15       		.uleb128 0x15
 1923 046d FB030000 		.4byte	.LASF66
 1924 0471 01       		.byte	0x1
 1925 0472 A201     		.2byte	0x1a2
 1926 0474 50040000 		.4byte	0x450
 1927 0478 02       		.uleb128 0x2
 1928 0479 91       		.byte	0x91
 1929 047a 74       		.sleb128 -12
 1930 047b 15       		.uleb128 0x15
 1931 047c 95020000 		.4byte	.LASF68
 1932 0480 01       		.byte	0x1
 1933 0481 A201     		.2byte	0x1a2
 1934 0483 A2000000 		.4byte	0xa2
 1935 0487 02       		.uleb128 0x2
 1936 0488 91       		.byte	0x91
 1937 0489 72       		.sleb128 -14
 1938 048a 00       		.byte	0
 1939 048b 14       		.uleb128 0x14
 1940 048c 91000000 		.4byte	.LASF69
 1941 0490 01       		.byte	0x1
 1942 0491 8B01     		.2byte	0x18b
 1943 0493 66030000 		.4byte	.LFB73
 1944 0497 2E000000 		.4byte	.LFE73-.LFB73
 1945 049b 01       		.uleb128 0x1
 1946 049c 9C       		.byte	0x9c
 1947 049d CF040000 		.4byte	0x4cf
 1948 04a1 15       		.uleb128 0x15
 1949 04a2 FB030000 		.4byte	.LASF66
 1950 04a6 01       		.byte	0x1
 1951 04a7 8B01     		.2byte	0x18b
 1952 04a9 50040000 		.4byte	0x450
 1953 04ad 02       		.uleb128 0x2
 1954 04ae 91       		.byte	0x91
 1955 04af 74       		.sleb128 -12
 1956 04b0 15       		.uleb128 0x15
 1957 04b1 14000000 		.4byte	.LASF45
 1958 04b5 01       		.byte	0x1
 1959 04b6 8B01     		.2byte	0x18b
 1960 04b8 A2000000 		.4byte	0xa2
 1961 04bc 02       		.uleb128 0x2
ARM GAS  /tmp/cc1cfAaD.s 			page 47


 1962 04bd 91       		.byte	0x91
 1963 04be 72       		.sleb128 -14
 1964 04bf 15       		.uleb128 0x15
 1965 04c0 80000000 		.4byte	.LASF70
 1966 04c4 01       		.byte	0x1
 1967 04c5 8B01     		.2byte	0x18b
 1968 04c7 BC020000 		.4byte	0x2bc
 1969 04cb 02       		.uleb128 0x2
 1970 04cc 91       		.byte	0x91
 1971 04cd 71       		.sleb128 -15
 1972 04ce 00       		.byte	0
 1973 04cf 14       		.uleb128 0x14
 1974 04d0 67040000 		.4byte	.LASF71
 1975 04d4 01       		.byte	0x1
 1976 04d5 7701     		.2byte	0x177
 1977 04d7 4A030000 		.4byte	.LFB72
 1978 04db 1C000000 		.4byte	.LFE72-.LFB72
 1979 04df 01       		.uleb128 0x1
 1980 04e0 9C       		.byte	0x9c
 1981 04e1 04050000 		.4byte	0x504
 1982 04e5 15       		.uleb128 0x15
 1983 04e6 FB030000 		.4byte	.LASF66
 1984 04ea 01       		.byte	0x1
 1985 04eb 7701     		.2byte	0x177
 1986 04ed 50040000 		.4byte	0x450
 1987 04f1 02       		.uleb128 0x2
 1988 04f2 91       		.byte	0x91
 1989 04f3 74       		.sleb128 -12
 1990 04f4 15       		.uleb128 0x15
 1991 04f5 14000000 		.4byte	.LASF45
 1992 04f9 01       		.byte	0x1
 1993 04fa 7701     		.2byte	0x177
 1994 04fc A2000000 		.4byte	0xa2
 1995 0500 02       		.uleb128 0x2
 1996 0501 91       		.byte	0x91
 1997 0502 72       		.sleb128 -14
 1998 0503 00       		.byte	0
 1999 0504 14       		.uleb128 0x14
 2000 0505 DF000000 		.4byte	.LASF72
 2001 0509 01       		.byte	0x1
 2002 050a 6701     		.2byte	0x167
 2003 050c 2E030000 		.4byte	.LFB71
 2004 0510 1C000000 		.4byte	.LFE71-.LFB71
 2005 0514 01       		.uleb128 0x1
 2006 0515 9C       		.byte	0x9c
 2007 0516 39050000 		.4byte	0x539
 2008 051a 15       		.uleb128 0x15
 2009 051b FB030000 		.4byte	.LASF66
 2010 051f 01       		.byte	0x1
 2011 0520 6701     		.2byte	0x167
 2012 0522 50040000 		.4byte	0x450
 2013 0526 02       		.uleb128 0x2
 2014 0527 91       		.byte	0x91
 2015 0528 74       		.sleb128 -12
 2016 0529 15       		.uleb128 0x15
 2017 052a 14000000 		.4byte	.LASF45
 2018 052e 01       		.byte	0x1
ARM GAS  /tmp/cc1cfAaD.s 			page 48


 2019 052f 6701     		.2byte	0x167
 2020 0531 A2000000 		.4byte	0xa2
 2021 0535 02       		.uleb128 0x2
 2022 0536 91       		.byte	0x91
 2023 0537 72       		.sleb128 -14
 2024 0538 00       		.byte	0
 2025 0539 19       		.uleb128 0x19
 2026 053a 25000000 		.4byte	.LASF73
 2027 053e 01       		.byte	0x1
 2028 053f 5801     		.2byte	0x158
 2029 0541 A2000000 		.4byte	0xa2
 2030 0545 16030000 		.4byte	.LFB70
 2031 0549 18000000 		.4byte	.LFE70-.LFB70
 2032 054d 01       		.uleb128 0x1
 2033 054e 9C       		.byte	0x9c
 2034 054f 63050000 		.4byte	0x563
 2035 0553 15       		.uleb128 0x15
 2036 0554 FB030000 		.4byte	.LASF66
 2037 0558 01       		.byte	0x1
 2038 0559 5801     		.2byte	0x158
 2039 055b 50040000 		.4byte	0x450
 2040 055f 02       		.uleb128 0x2
 2041 0560 91       		.byte	0x91
 2042 0561 74       		.sleb128 -12
 2043 0562 00       		.byte	0
 2044 0563 19       		.uleb128 0x19
 2045 0564 99040000 		.4byte	.LASF74
 2046 0568 01       		.byte	0x1
 2047 0569 4101     		.2byte	0x141
 2048 056b 97000000 		.4byte	0x97
 2049 056f E4020000 		.4byte	.LFB69
 2050 0573 32000000 		.4byte	.LFE69-.LFB69
 2051 0577 01       		.uleb128 0x1
 2052 0578 9C       		.byte	0x9c
 2053 0579 AB050000 		.4byte	0x5ab
 2054 057d 15       		.uleb128 0x15
 2055 057e FB030000 		.4byte	.LASF66
 2056 0582 01       		.byte	0x1
 2057 0583 4101     		.2byte	0x141
 2058 0585 50040000 		.4byte	0x450
 2059 0589 02       		.uleb128 0x2
 2060 058a 91       		.byte	0x91
 2061 058b 6C       		.sleb128 -20
 2062 058c 15       		.uleb128 0x15
 2063 058d 14000000 		.4byte	.LASF45
 2064 0591 01       		.byte	0x1
 2065 0592 4101     		.2byte	0x141
 2066 0594 A2000000 		.4byte	0xa2
 2067 0598 02       		.uleb128 0x2
 2068 0599 91       		.byte	0x91
 2069 059a 6A       		.sleb128 -22
 2070 059b 17       		.uleb128 0x17
 2071 059c C3010000 		.4byte	.LASF75
 2072 05a0 01       		.byte	0x1
 2073 05a1 4301     		.2byte	0x143
 2074 05a3 97000000 		.4byte	0x97
 2075 05a7 02       		.uleb128 0x2
ARM GAS  /tmp/cc1cfAaD.s 			page 49


 2076 05a8 91       		.byte	0x91
 2077 05a9 77       		.sleb128 -9
 2078 05aa 00       		.byte	0
 2079 05ab 19       		.uleb128 0x19
 2080 05ac D1020000 		.4byte	.LASF76
 2081 05b0 01       		.byte	0x1
 2082 05b1 3201     		.2byte	0x132
 2083 05b3 A2000000 		.4byte	0xa2
 2084 05b7 CC020000 		.4byte	.LFB68
 2085 05bb 18000000 		.4byte	.LFE68-.LFB68
 2086 05bf 01       		.uleb128 0x1
 2087 05c0 9C       		.byte	0x9c
 2088 05c1 D5050000 		.4byte	0x5d5
 2089 05c5 15       		.uleb128 0x15
 2090 05c6 FB030000 		.4byte	.LASF66
 2091 05ca 01       		.byte	0x1
 2092 05cb 3201     		.2byte	0x132
 2093 05cd 50040000 		.4byte	0x450
 2094 05d1 02       		.uleb128 0x2
 2095 05d2 91       		.byte	0x91
 2096 05d3 74       		.sleb128 -12
 2097 05d4 00       		.byte	0
 2098 05d5 19       		.uleb128 0x19
 2099 05d6 95010000 		.4byte	.LASF77
 2100 05da 01       		.byte	0x1
 2101 05db 1A01     		.2byte	0x11a
 2102 05dd 97000000 		.4byte	0x97
 2103 05e1 9A020000 		.4byte	.LFB67
 2104 05e5 32000000 		.4byte	.LFE67-.LFB67
 2105 05e9 01       		.uleb128 0x1
 2106 05ea 9C       		.byte	0x9c
 2107 05eb 1D060000 		.4byte	0x61d
 2108 05ef 15       		.uleb128 0x15
 2109 05f0 FB030000 		.4byte	.LASF66
 2110 05f4 01       		.byte	0x1
 2111 05f5 1A01     		.2byte	0x11a
 2112 05f7 50040000 		.4byte	0x450
 2113 05fb 02       		.uleb128 0x2
 2114 05fc 91       		.byte	0x91
 2115 05fd 6C       		.sleb128 -20
 2116 05fe 15       		.uleb128 0x15
 2117 05ff 14000000 		.4byte	.LASF45
 2118 0603 01       		.byte	0x1
 2119 0604 1A01     		.2byte	0x11a
 2120 0606 A2000000 		.4byte	0xa2
 2121 060a 02       		.uleb128 0x2
 2122 060b 91       		.byte	0x91
 2123 060c 6A       		.sleb128 -22
 2124 060d 17       		.uleb128 0x17
 2125 060e C3010000 		.4byte	.LASF75
 2126 0612 01       		.byte	0x1
 2127 0613 1C01     		.2byte	0x11c
 2128 0615 97000000 		.4byte	0x97
 2129 0619 02       		.uleb128 0x2
 2130 061a 91       		.byte	0x91
 2131 061b 77       		.sleb128 -9
 2132 061c 00       		.byte	0
ARM GAS  /tmp/cc1cfAaD.s 			page 50


 2133 061d 14       		.uleb128 0x14
 2134 061e 67000000 		.4byte	.LASF78
 2135 0622 01       		.byte	0x1
 2136 0623 0B01     		.2byte	0x10b
 2137 0625 74020000 		.4byte	.LFB66
 2138 0629 26000000 		.4byte	.LFE66-.LFB66
 2139 062d 01       		.uleb128 0x1
 2140 062e 9C       		.byte	0x9c
 2141 062f 43060000 		.4byte	0x643
 2142 0633 15       		.uleb128 0x15
 2143 0634 01040000 		.4byte	.LASF79
 2144 0638 01       		.byte	0x1
 2145 0639 0B01     		.2byte	0x10b
 2146 063b 43060000 		.4byte	0x643
 2147 063f 02       		.uleb128 0x2
 2148 0640 91       		.byte	0x91
 2149 0641 74       		.sleb128 -12
 2150 0642 00       		.byte	0
 2151 0643 18       		.uleb128 0x18
 2152 0644 04       		.byte	0x4
 2153 0645 98020000 		.4byte	0x298
 2154 0649 1A       		.uleb128 0x1a
 2155 064a FE000000 		.4byte	.LASF80
 2156 064e 01       		.byte	0x1
 2157 064f AE       		.byte	0xae
 2158 0650 FC000000 		.4byte	.LFB65
 2159 0654 78010000 		.4byte	.LFE65-.LFB65
 2160 0658 01       		.uleb128 0x1
 2161 0659 9C       		.byte	0x9c
 2162 065a CF060000 		.4byte	0x6cf
 2163 065e 1B       		.uleb128 0x1b
 2164 065f FB030000 		.4byte	.LASF66
 2165 0663 01       		.byte	0x1
 2166 0664 AE       		.byte	0xae
 2167 0665 50040000 		.4byte	0x450
 2168 0669 02       		.uleb128 0x2
 2169 066a 91       		.byte	0x91
 2170 066b 5C       		.sleb128 -36
 2171 066c 1B       		.uleb128 0x1b
 2172 066d 01040000 		.4byte	.LASF79
 2173 0671 01       		.byte	0x1
 2174 0672 AE       		.byte	0xae
 2175 0673 43060000 		.4byte	0x643
 2176 0677 02       		.uleb128 0x2
 2177 0678 91       		.byte	0x91
 2178 0679 58       		.sleb128 -40
 2179 067a 1C       		.uleb128 0x1c
 2180 067b 9D020000 		.4byte	.LASF81
 2181 067f 01       		.byte	0x1
 2182 0680 B0       		.byte	0xb0
 2183 0681 BD000000 		.4byte	0xbd
 2184 0685 02       		.uleb128 0x2
 2185 0686 91       		.byte	0x91
 2186 0687 74       		.sleb128 -12
 2187 0688 1C       		.uleb128 0x1c
 2188 0689 39030000 		.4byte	.LASF82
 2189 068d 01       		.byte	0x1
ARM GAS  /tmp/cc1cfAaD.s 			page 51


 2190 068e B0       		.byte	0xb0
 2191 068f BD000000 		.4byte	0xbd
 2192 0693 02       		.uleb128 0x2
 2193 0694 91       		.byte	0x91
 2194 0695 68       		.sleb128 -24
 2195 0696 1C       		.uleb128 0x1c
 2196 0697 0D000000 		.4byte	.LASF83
 2197 069b 01       		.byte	0x1
 2198 069c B0       		.byte	0xb0
 2199 069d BD000000 		.4byte	0xbd
 2200 06a1 02       		.uleb128 0x2
 2201 06a2 91       		.byte	0x91
 2202 06a3 70       		.sleb128 -16
 2203 06a4 1D       		.uleb128 0x1d
 2204 06a5 706F7300 		.ascii	"pos\000"
 2205 06a9 01       		.byte	0x1
 2206 06aa B0       		.byte	0xb0
 2207 06ab BD000000 		.4byte	0xbd
 2208 06af 02       		.uleb128 0x2
 2209 06b0 91       		.byte	0x91
 2210 06b1 64       		.sleb128 -28
 2211 06b2 1C       		.uleb128 0x1c
 2212 06b3 BC010000 		.4byte	.LASF61
 2213 06b7 01       		.byte	0x1
 2214 06b8 B1       		.byte	0xb1
 2215 06b9 BD000000 		.4byte	0xbd
 2216 06bd 02       		.uleb128 0x2
 2217 06be 91       		.byte	0x91
 2218 06bf 6C       		.sleb128 -20
 2219 06c0 1C       		.uleb128 0x1c
 2220 06c1 20010000 		.4byte	.LASF84
 2221 06c5 01       		.byte	0x1
 2222 06c6 B1       		.byte	0xb1
 2223 06c7 BD000000 		.4byte	0xbd
 2224 06cb 02       		.uleb128 0x2
 2225 06cc 91       		.byte	0x91
 2226 06cd 60       		.sleb128 -32
 2227 06ce 00       		.byte	0
 2228 06cf 1E       		.uleb128 0x1e
 2229 06d0 B0040000 		.4byte	.LASF88
 2230 06d4 01       		.byte	0x1
 2231 06d5 A0       		.byte	0xa0
 2232 06d6 E4000000 		.4byte	.LFB64
 2233 06da 18000000 		.4byte	.LFE64-.LFB64
 2234 06de 01       		.uleb128 0x1
 2235 06df 9C       		.byte	0x9c
 2236 06e0 1F       		.uleb128 0x1f
 2237 06e1 63010000 		.4byte	.LASF89
 2238 06e5 01       		.byte	0x1
 2239 06e6 6D       		.byte	0x6d
 2240 06e7 00000000 		.4byte	.LFB63
 2241 06eb E4000000 		.4byte	.LFE63-.LFB63
 2242 06ef 01       		.uleb128 0x1
 2243 06f0 9C       		.byte	0x9c
 2244 06f1 1B       		.uleb128 0x1b
 2245 06f2 FB030000 		.4byte	.LASF66
 2246 06f6 01       		.byte	0x1
ARM GAS  /tmp/cc1cfAaD.s 			page 52


 2247 06f7 6D       		.byte	0x6d
 2248 06f8 50040000 		.4byte	0x450
 2249 06fc 02       		.uleb128 0x2
 2250 06fd 91       		.byte	0x91
 2251 06fe 74       		.sleb128 -12
 2252 06ff 00       		.byte	0
 2253 0700 00       		.byte	0
 2254              		.section	.debug_abbrev,"",%progbits
 2255              	.Ldebug_abbrev0:
 2256 0000 01       		.uleb128 0x1
 2257 0001 11       		.uleb128 0x11
 2258 0002 01       		.byte	0x1
 2259 0003 25       		.uleb128 0x25
 2260 0004 0E       		.uleb128 0xe
 2261 0005 13       		.uleb128 0x13
 2262 0006 0B       		.uleb128 0xb
 2263 0007 03       		.uleb128 0x3
 2264 0008 0E       		.uleb128 0xe
 2265 0009 1B       		.uleb128 0x1b
 2266 000a 0E       		.uleb128 0xe
 2267 000b 11       		.uleb128 0x11
 2268 000c 01       		.uleb128 0x1
 2269 000d 12       		.uleb128 0x12
 2270 000e 06       		.uleb128 0x6
 2271 000f 10       		.uleb128 0x10
 2272 0010 17       		.uleb128 0x17
 2273 0011 00       		.byte	0
 2274 0012 00       		.byte	0
 2275 0013 02       		.uleb128 0x2
 2276 0014 24       		.uleb128 0x24
 2277 0015 00       		.byte	0
 2278 0016 0B       		.uleb128 0xb
 2279 0017 0B       		.uleb128 0xb
 2280 0018 3E       		.uleb128 0x3e
 2281 0019 0B       		.uleb128 0xb
 2282 001a 03       		.uleb128 0x3
 2283 001b 0E       		.uleb128 0xe
 2284 001c 00       		.byte	0
 2285 001d 00       		.byte	0
 2286 001e 03       		.uleb128 0x3
 2287 001f 16       		.uleb128 0x16
 2288 0020 00       		.byte	0
 2289 0021 03       		.uleb128 0x3
 2290 0022 0E       		.uleb128 0xe
 2291 0023 3A       		.uleb128 0x3a
 2292 0024 0B       		.uleb128 0xb
 2293 0025 3B       		.uleb128 0x3b
 2294 0026 0B       		.uleb128 0xb
 2295 0027 49       		.uleb128 0x49
 2296 0028 13       		.uleb128 0x13
 2297 0029 00       		.byte	0
 2298 002a 00       		.byte	0
 2299 002b 04       		.uleb128 0x4
 2300 002c 24       		.uleb128 0x24
 2301 002d 00       		.byte	0
 2302 002e 0B       		.uleb128 0xb
 2303 002f 0B       		.uleb128 0xb
ARM GAS  /tmp/cc1cfAaD.s 			page 53


 2304 0030 3E       		.uleb128 0x3e
 2305 0031 0B       		.uleb128 0xb
 2306 0032 03       		.uleb128 0x3
 2307 0033 08       		.uleb128 0x8
 2308 0034 00       		.byte	0
 2309 0035 00       		.byte	0
 2310 0036 05       		.uleb128 0x5
 2311 0037 35       		.uleb128 0x35
 2312 0038 00       		.byte	0
 2313 0039 49       		.uleb128 0x49
 2314 003a 13       		.uleb128 0x13
 2315 003b 00       		.byte	0
 2316 003c 00       		.byte	0
 2317 003d 06       		.uleb128 0x6
 2318 003e 34       		.uleb128 0x34
 2319 003f 00       		.byte	0
 2320 0040 03       		.uleb128 0x3
 2321 0041 0E       		.uleb128 0xe
 2322 0042 3A       		.uleb128 0x3a
 2323 0043 0B       		.uleb128 0xb
 2324 0044 3B       		.uleb128 0x3b
 2325 0045 05       		.uleb128 0x5
 2326 0046 49       		.uleb128 0x49
 2327 0047 13       		.uleb128 0x13
 2328 0048 3F       		.uleb128 0x3f
 2329 0049 19       		.uleb128 0x19
 2330 004a 3C       		.uleb128 0x3c
 2331 004b 19       		.uleb128 0x19
 2332 004c 00       		.byte	0
 2333 004d 00       		.byte	0
 2334 004e 07       		.uleb128 0x7
 2335 004f 34       		.uleb128 0x34
 2336 0050 00       		.byte	0
 2337 0051 03       		.uleb128 0x3
 2338 0052 0E       		.uleb128 0xe
 2339 0053 3A       		.uleb128 0x3a
 2340 0054 0B       		.uleb128 0xb
 2341 0055 3B       		.uleb128 0x3b
 2342 0056 0B       		.uleb128 0xb
 2343 0057 49       		.uleb128 0x49
 2344 0058 13       		.uleb128 0x13
 2345 0059 3F       		.uleb128 0x3f
 2346 005a 19       		.uleb128 0x19
 2347 005b 3C       		.uleb128 0x3c
 2348 005c 19       		.uleb128 0x19
 2349 005d 00       		.byte	0
 2350 005e 00       		.byte	0
 2351 005f 08       		.uleb128 0x8
 2352 0060 16       		.uleb128 0x16
 2353 0061 00       		.byte	0
 2354 0062 03       		.uleb128 0x3
 2355 0063 08       		.uleb128 0x8
 2356 0064 3A       		.uleb128 0x3a
 2357 0065 0B       		.uleb128 0xb
 2358 0066 3B       		.uleb128 0x3b
 2359 0067 05       		.uleb128 0x5
 2360 0068 49       		.uleb128 0x49
ARM GAS  /tmp/cc1cfAaD.s 			page 54


 2361 0069 13       		.uleb128 0x13
 2362 006a 00       		.byte	0
 2363 006b 00       		.byte	0
 2364 006c 09       		.uleb128 0x9
 2365 006d 04       		.uleb128 0x4
 2366 006e 01       		.byte	0x1
 2367 006f 0B       		.uleb128 0xb
 2368 0070 0B       		.uleb128 0xb
 2369 0071 49       		.uleb128 0x49
 2370 0072 13       		.uleb128 0x13
 2371 0073 3A       		.uleb128 0x3a
 2372 0074 0B       		.uleb128 0xb
 2373 0075 3B       		.uleb128 0x3b
 2374 0076 05       		.uleb128 0x5
 2375 0077 01       		.uleb128 0x1
 2376 0078 13       		.uleb128 0x13
 2377 0079 00       		.byte	0
 2378 007a 00       		.byte	0
 2379 007b 0A       		.uleb128 0xa
 2380 007c 28       		.uleb128 0x28
 2381 007d 00       		.byte	0
 2382 007e 03       		.uleb128 0x3
 2383 007f 0E       		.uleb128 0xe
 2384 0080 1C       		.uleb128 0x1c
 2385 0081 0B       		.uleb128 0xb
 2386 0082 00       		.byte	0
 2387 0083 00       		.byte	0
 2388 0084 0B       		.uleb128 0xb
 2389 0085 16       		.uleb128 0x16
 2390 0086 00       		.byte	0
 2391 0087 03       		.uleb128 0x3
 2392 0088 0E       		.uleb128 0xe
 2393 0089 3A       		.uleb128 0x3a
 2394 008a 0B       		.uleb128 0xb
 2395 008b 3B       		.uleb128 0x3b
 2396 008c 05       		.uleb128 0x5
 2397 008d 49       		.uleb128 0x49
 2398 008e 13       		.uleb128 0x13
 2399 008f 00       		.byte	0
 2400 0090 00       		.byte	0
 2401 0091 0C       		.uleb128 0xc
 2402 0092 13       		.uleb128 0x13
 2403 0093 01       		.byte	0x1
 2404 0094 0B       		.uleb128 0xb
 2405 0095 0B       		.uleb128 0xb
 2406 0096 3A       		.uleb128 0x3a
 2407 0097 0B       		.uleb128 0xb
 2408 0098 3B       		.uleb128 0x3b
 2409 0099 05       		.uleb128 0x5
 2410 009a 01       		.uleb128 0x1
 2411 009b 13       		.uleb128 0x13
 2412 009c 00       		.byte	0
 2413 009d 00       		.byte	0
 2414 009e 0D       		.uleb128 0xd
 2415 009f 0D       		.uleb128 0xd
 2416 00a0 00       		.byte	0
 2417 00a1 03       		.uleb128 0x3
ARM GAS  /tmp/cc1cfAaD.s 			page 55


 2418 00a2 08       		.uleb128 0x8
 2419 00a3 3A       		.uleb128 0x3a
 2420 00a4 0B       		.uleb128 0xb
 2421 00a5 3B       		.uleb128 0x3b
 2422 00a6 05       		.uleb128 0x5
 2423 00a7 49       		.uleb128 0x49
 2424 00a8 13       		.uleb128 0x13
 2425 00a9 38       		.uleb128 0x38
 2426 00aa 0B       		.uleb128 0xb
 2427 00ab 00       		.byte	0
 2428 00ac 00       		.byte	0
 2429 00ad 0E       		.uleb128 0xe
 2430 00ae 0D       		.uleb128 0xd
 2431 00af 00       		.byte	0
 2432 00b0 03       		.uleb128 0x3
 2433 00b1 0E       		.uleb128 0xe
 2434 00b2 3A       		.uleb128 0x3a
 2435 00b3 0B       		.uleb128 0xb
 2436 00b4 3B       		.uleb128 0x3b
 2437 00b5 05       		.uleb128 0x5
 2438 00b6 49       		.uleb128 0x49
 2439 00b7 13       		.uleb128 0x13
 2440 00b8 38       		.uleb128 0x38
 2441 00b9 0B       		.uleb128 0xb
 2442 00ba 00       		.byte	0
 2443 00bb 00       		.byte	0
 2444 00bc 0F       		.uleb128 0xf
 2445 00bd 01       		.uleb128 0x1
 2446 00be 01       		.byte	0x1
 2447 00bf 49       		.uleb128 0x49
 2448 00c0 13       		.uleb128 0x13
 2449 00c1 01       		.uleb128 0x1
 2450 00c2 13       		.uleb128 0x13
 2451 00c3 00       		.byte	0
 2452 00c4 00       		.byte	0
 2453 00c5 10       		.uleb128 0x10
 2454 00c6 21       		.uleb128 0x21
 2455 00c7 00       		.byte	0
 2456 00c8 49       		.uleb128 0x49
 2457 00c9 13       		.uleb128 0x13
 2458 00ca 2F       		.uleb128 0x2f
 2459 00cb 0B       		.uleb128 0xb
 2460 00cc 00       		.byte	0
 2461 00cd 00       		.byte	0
 2462 00ce 11       		.uleb128 0x11
 2463 00cf 04       		.uleb128 0x4
 2464 00d0 01       		.byte	0x1
 2465 00d1 0B       		.uleb128 0xb
 2466 00d2 0B       		.uleb128 0xb
 2467 00d3 49       		.uleb128 0x49
 2468 00d4 13       		.uleb128 0x13
 2469 00d5 3A       		.uleb128 0x3a
 2470 00d6 0B       		.uleb128 0xb
 2471 00d7 3B       		.uleb128 0x3b
 2472 00d8 0B       		.uleb128 0xb
 2473 00d9 01       		.uleb128 0x1
 2474 00da 13       		.uleb128 0x13
ARM GAS  /tmp/cc1cfAaD.s 			page 56


 2475 00db 00       		.byte	0
 2476 00dc 00       		.byte	0
 2477 00dd 12       		.uleb128 0x12
 2478 00de 13       		.uleb128 0x13
 2479 00df 01       		.byte	0x1
 2480 00e0 0B       		.uleb128 0xb
 2481 00e1 0B       		.uleb128 0xb
 2482 00e2 3A       		.uleb128 0x3a
 2483 00e3 0B       		.uleb128 0xb
 2484 00e4 3B       		.uleb128 0x3b
 2485 00e5 0B       		.uleb128 0xb
 2486 00e6 01       		.uleb128 0x1
 2487 00e7 13       		.uleb128 0x13
 2488 00e8 00       		.byte	0
 2489 00e9 00       		.byte	0
 2490 00ea 13       		.uleb128 0x13
 2491 00eb 0D       		.uleb128 0xd
 2492 00ec 00       		.byte	0
 2493 00ed 03       		.uleb128 0x3
 2494 00ee 0E       		.uleb128 0xe
 2495 00ef 3A       		.uleb128 0x3a
 2496 00f0 0B       		.uleb128 0xb
 2497 00f1 3B       		.uleb128 0x3b
 2498 00f2 0B       		.uleb128 0xb
 2499 00f3 49       		.uleb128 0x49
 2500 00f4 13       		.uleb128 0x13
 2501 00f5 38       		.uleb128 0x38
 2502 00f6 0B       		.uleb128 0xb
 2503 00f7 00       		.byte	0
 2504 00f8 00       		.byte	0
 2505 00f9 14       		.uleb128 0x14
 2506 00fa 2E       		.uleb128 0x2e
 2507 00fb 01       		.byte	0x1
 2508 00fc 3F       		.uleb128 0x3f
 2509 00fd 19       		.uleb128 0x19
 2510 00fe 03       		.uleb128 0x3
 2511 00ff 0E       		.uleb128 0xe
 2512 0100 3A       		.uleb128 0x3a
 2513 0101 0B       		.uleb128 0xb
 2514 0102 3B       		.uleb128 0x3b
 2515 0103 05       		.uleb128 0x5
 2516 0104 27       		.uleb128 0x27
 2517 0105 19       		.uleb128 0x19
 2518 0106 11       		.uleb128 0x11
 2519 0107 01       		.uleb128 0x1
 2520 0108 12       		.uleb128 0x12
 2521 0109 06       		.uleb128 0x6
 2522 010a 40       		.uleb128 0x40
 2523 010b 18       		.uleb128 0x18
 2524 010c 9742     		.uleb128 0x2117
 2525 010e 19       		.uleb128 0x19
 2526 010f 01       		.uleb128 0x1
 2527 0110 13       		.uleb128 0x13
 2528 0111 00       		.byte	0
 2529 0112 00       		.byte	0
 2530 0113 15       		.uleb128 0x15
 2531 0114 05       		.uleb128 0x5
ARM GAS  /tmp/cc1cfAaD.s 			page 57


 2532 0115 00       		.byte	0
 2533 0116 03       		.uleb128 0x3
 2534 0117 0E       		.uleb128 0xe
 2535 0118 3A       		.uleb128 0x3a
 2536 0119 0B       		.uleb128 0xb
 2537 011a 3B       		.uleb128 0x3b
 2538 011b 05       		.uleb128 0x5
 2539 011c 49       		.uleb128 0x49
 2540 011d 13       		.uleb128 0x13
 2541 011e 02       		.uleb128 0x2
 2542 011f 18       		.uleb128 0x18
 2543 0120 00       		.byte	0
 2544 0121 00       		.byte	0
 2545 0122 16       		.uleb128 0x16
 2546 0123 34       		.uleb128 0x34
 2547 0124 00       		.byte	0
 2548 0125 03       		.uleb128 0x3
 2549 0126 08       		.uleb128 0x8
 2550 0127 3A       		.uleb128 0x3a
 2551 0128 0B       		.uleb128 0xb
 2552 0129 3B       		.uleb128 0x3b
 2553 012a 05       		.uleb128 0x5
 2554 012b 49       		.uleb128 0x49
 2555 012c 13       		.uleb128 0x13
 2556 012d 02       		.uleb128 0x2
 2557 012e 18       		.uleb128 0x18
 2558 012f 00       		.byte	0
 2559 0130 00       		.byte	0
 2560 0131 17       		.uleb128 0x17
 2561 0132 34       		.uleb128 0x34
 2562 0133 00       		.byte	0
 2563 0134 03       		.uleb128 0x3
 2564 0135 0E       		.uleb128 0xe
 2565 0136 3A       		.uleb128 0x3a
 2566 0137 0B       		.uleb128 0xb
 2567 0138 3B       		.uleb128 0x3b
 2568 0139 05       		.uleb128 0x5
 2569 013a 49       		.uleb128 0x49
 2570 013b 13       		.uleb128 0x13
 2571 013c 02       		.uleb128 0x2
 2572 013d 18       		.uleb128 0x18
 2573 013e 00       		.byte	0
 2574 013f 00       		.byte	0
 2575 0140 18       		.uleb128 0x18
 2576 0141 0F       		.uleb128 0xf
 2577 0142 00       		.byte	0
 2578 0143 0B       		.uleb128 0xb
 2579 0144 0B       		.uleb128 0xb
 2580 0145 49       		.uleb128 0x49
 2581 0146 13       		.uleb128 0x13
 2582 0147 00       		.byte	0
 2583 0148 00       		.byte	0
 2584 0149 19       		.uleb128 0x19
 2585 014a 2E       		.uleb128 0x2e
 2586 014b 01       		.byte	0x1
 2587 014c 3F       		.uleb128 0x3f
 2588 014d 19       		.uleb128 0x19
ARM GAS  /tmp/cc1cfAaD.s 			page 58


 2589 014e 03       		.uleb128 0x3
 2590 014f 0E       		.uleb128 0xe
 2591 0150 3A       		.uleb128 0x3a
 2592 0151 0B       		.uleb128 0xb
 2593 0152 3B       		.uleb128 0x3b
 2594 0153 05       		.uleb128 0x5
 2595 0154 27       		.uleb128 0x27
 2596 0155 19       		.uleb128 0x19
 2597 0156 49       		.uleb128 0x49
 2598 0157 13       		.uleb128 0x13
 2599 0158 11       		.uleb128 0x11
 2600 0159 01       		.uleb128 0x1
 2601 015a 12       		.uleb128 0x12
 2602 015b 06       		.uleb128 0x6
 2603 015c 40       		.uleb128 0x40
 2604 015d 18       		.uleb128 0x18
 2605 015e 9742     		.uleb128 0x2117
 2606 0160 19       		.uleb128 0x19
 2607 0161 01       		.uleb128 0x1
 2608 0162 13       		.uleb128 0x13
 2609 0163 00       		.byte	0
 2610 0164 00       		.byte	0
 2611 0165 1A       		.uleb128 0x1a
 2612 0166 2E       		.uleb128 0x2e
 2613 0167 01       		.byte	0x1
 2614 0168 3F       		.uleb128 0x3f
 2615 0169 19       		.uleb128 0x19
 2616 016a 03       		.uleb128 0x3
 2617 016b 0E       		.uleb128 0xe
 2618 016c 3A       		.uleb128 0x3a
 2619 016d 0B       		.uleb128 0xb
 2620 016e 3B       		.uleb128 0x3b
 2621 016f 0B       		.uleb128 0xb
 2622 0170 27       		.uleb128 0x27
 2623 0171 19       		.uleb128 0x19
 2624 0172 11       		.uleb128 0x11
 2625 0173 01       		.uleb128 0x1
 2626 0174 12       		.uleb128 0x12
 2627 0175 06       		.uleb128 0x6
 2628 0176 40       		.uleb128 0x40
 2629 0177 18       		.uleb128 0x18
 2630 0178 9742     		.uleb128 0x2117
 2631 017a 19       		.uleb128 0x19
 2632 017b 01       		.uleb128 0x1
 2633 017c 13       		.uleb128 0x13
 2634 017d 00       		.byte	0
 2635 017e 00       		.byte	0
 2636 017f 1B       		.uleb128 0x1b
 2637 0180 05       		.uleb128 0x5
 2638 0181 00       		.byte	0
 2639 0182 03       		.uleb128 0x3
 2640 0183 0E       		.uleb128 0xe
 2641 0184 3A       		.uleb128 0x3a
 2642 0185 0B       		.uleb128 0xb
 2643 0186 3B       		.uleb128 0x3b
 2644 0187 0B       		.uleb128 0xb
 2645 0188 49       		.uleb128 0x49
ARM GAS  /tmp/cc1cfAaD.s 			page 59


 2646 0189 13       		.uleb128 0x13
 2647 018a 02       		.uleb128 0x2
 2648 018b 18       		.uleb128 0x18
 2649 018c 00       		.byte	0
 2650 018d 00       		.byte	0
 2651 018e 1C       		.uleb128 0x1c
 2652 018f 34       		.uleb128 0x34
 2653 0190 00       		.byte	0
 2654 0191 03       		.uleb128 0x3
 2655 0192 0E       		.uleb128 0xe
 2656 0193 3A       		.uleb128 0x3a
 2657 0194 0B       		.uleb128 0xb
 2658 0195 3B       		.uleb128 0x3b
 2659 0196 0B       		.uleb128 0xb
 2660 0197 49       		.uleb128 0x49
 2661 0198 13       		.uleb128 0x13
 2662 0199 02       		.uleb128 0x2
 2663 019a 18       		.uleb128 0x18
 2664 019b 00       		.byte	0
 2665 019c 00       		.byte	0
 2666 019d 1D       		.uleb128 0x1d
 2667 019e 34       		.uleb128 0x34
 2668 019f 00       		.byte	0
 2669 01a0 03       		.uleb128 0x3
 2670 01a1 08       		.uleb128 0x8
 2671 01a2 3A       		.uleb128 0x3a
 2672 01a3 0B       		.uleb128 0xb
 2673 01a4 3B       		.uleb128 0x3b
 2674 01a5 0B       		.uleb128 0xb
 2675 01a6 49       		.uleb128 0x49
 2676 01a7 13       		.uleb128 0x13
 2677 01a8 02       		.uleb128 0x2
 2678 01a9 18       		.uleb128 0x18
 2679 01aa 00       		.byte	0
 2680 01ab 00       		.byte	0
 2681 01ac 1E       		.uleb128 0x1e
 2682 01ad 2E       		.uleb128 0x2e
 2683 01ae 00       		.byte	0
 2684 01af 3F       		.uleb128 0x3f
 2685 01b0 19       		.uleb128 0x19
 2686 01b1 03       		.uleb128 0x3
 2687 01b2 0E       		.uleb128 0xe
 2688 01b3 3A       		.uleb128 0x3a
 2689 01b4 0B       		.uleb128 0xb
 2690 01b5 3B       		.uleb128 0x3b
 2691 01b6 0B       		.uleb128 0xb
 2692 01b7 27       		.uleb128 0x27
 2693 01b8 19       		.uleb128 0x19
 2694 01b9 11       		.uleb128 0x11
 2695 01ba 01       		.uleb128 0x1
 2696 01bb 12       		.uleb128 0x12
 2697 01bc 06       		.uleb128 0x6
 2698 01bd 40       		.uleb128 0x40
 2699 01be 18       		.uleb128 0x18
 2700 01bf 9642     		.uleb128 0x2116
 2701 01c1 19       		.uleb128 0x19
 2702 01c2 00       		.byte	0
ARM GAS  /tmp/cc1cfAaD.s 			page 60


 2703 01c3 00       		.byte	0
 2704 01c4 1F       		.uleb128 0x1f
 2705 01c5 2E       		.uleb128 0x2e
 2706 01c6 01       		.byte	0x1
 2707 01c7 3F       		.uleb128 0x3f
 2708 01c8 19       		.uleb128 0x19
 2709 01c9 03       		.uleb128 0x3
 2710 01ca 0E       		.uleb128 0xe
 2711 01cb 3A       		.uleb128 0x3a
 2712 01cc 0B       		.uleb128 0xb
 2713 01cd 3B       		.uleb128 0x3b
 2714 01ce 0B       		.uleb128 0xb
 2715 01cf 27       		.uleb128 0x27
 2716 01d0 19       		.uleb128 0x19
 2717 01d1 11       		.uleb128 0x11
 2718 01d2 01       		.uleb128 0x1
 2719 01d3 12       		.uleb128 0x12
 2720 01d4 06       		.uleb128 0x6
 2721 01d5 40       		.uleb128 0x40
 2722 01d6 18       		.uleb128 0x18
 2723 01d7 9642     		.uleb128 0x2116
 2724 01d9 19       		.uleb128 0x19
 2725 01da 00       		.byte	0
 2726 01db 00       		.byte	0
 2727 01dc 00       		.byte	0
 2728              		.section	.debug_aranges,"",%progbits
 2729 0000 1C000000 		.4byte	0x1c
 2730 0004 0200     		.2byte	0x2
 2731 0006 00000000 		.4byte	.Ldebug_info0
 2732 000a 04       		.byte	0x4
 2733 000b 00       		.byte	0
 2734 000c 0000     		.2byte	0
 2735 000e 0000     		.2byte	0
 2736 0010 00000000 		.4byte	.Ltext0
 2737 0014 DC050000 		.4byte	.Letext0-.Ltext0
 2738 0018 00000000 		.4byte	0
 2739 001c 00000000 		.4byte	0
 2740              		.section	.debug_line,"",%progbits
 2741              	.Ldebug_line0:
 2742 0000 F0010000 		.section	.debug_str,"MS",%progbits,1
 2742      0200E000 
 2742      00000201 
 2742      FB0E0D00 
 2742      01010101 
 2743              	.LASF25:
 2744 0000 4750494F 		.ascii	"GPIO_TypeDef\000"
 2744      5F547970 
 2744      65446566 
 2744      00
 2745              	.LASF83:
 2746 000d 70696E70 		.ascii	"pinpos\000"
 2746      6F7300
 2747              	.LASF45:
 2748 0014 4750494F 		.ascii	"GPIO_Pin\000"
 2748      5F50696E 
 2748      00
 2749              	.LASF50:
ARM GAS  /tmp/cc1cfAaD.s 			page 61


 2750 001d 4269745F 		.ascii	"Bit_SET\000"
 2750      53455400 
 2751              	.LASF73:
 2752 0025 4750494F 		.ascii	"GPIO_ReadOutputData\000"
 2752      5F526561 
 2752      644F7574 
 2752      70757444 
 2752      61746100 
 2753              	.LASF43:
 2754 0039 4750494F 		.ascii	"GPIO_Mode_AF_PP\000"
 2754      5F4D6F64 
 2754      655F4146 
 2754      5F505000 
 2755              	.LASF63:
 2756 0049 4750494F 		.ascii	"GPIO_EventOutputCmd\000"
 2756      5F457665 
 2756      6E744F75 
 2756      74707574 
 2756      436D6400 
 2757              	.LASF2:
 2758 005d 73686F72 		.ascii	"short int\000"
 2758      7420696E 
 2758      7400
 2759              	.LASF78:
 2760 0067 4750494F 		.ascii	"GPIO_StructInit\000"
 2760      5F537472 
 2760      75637449 
 2760      6E697400 
 2761              	.LASF17:
 2762 0077 73697A65 		.ascii	"sizetype\000"
 2762      74797065 
 2762      00
 2763              	.LASF70:
 2764 0080 42697456 		.ascii	"BitVal\000"
 2764      616C00
 2765              	.LASF49:
 2766 0087 4269745F 		.ascii	"Bit_RESET\000"
 2766      52455345 
 2766      5400
 2767              	.LASF69:
 2768 0091 4750494F 		.ascii	"GPIO_WriteBit\000"
 2768      5F577269 
 2768      74654269 
 2768      7400
 2769              	.LASF8:
 2770 009f 5F5F7569 		.ascii	"__uint32_t\000"
 2770      6E743332 
 2770      5F7400
 2771              	.LASF4:
 2772 00aa 5F5F7569 		.ascii	"__uint16_t\000"
 2772      6E743136 
 2772      5F7400
 2773              	.LASF54:
 2774 00b5 4750494F 		.ascii	"GPIO_ETH_MediaInterface\000"
 2774      5F455448 
 2774      5F4D6564 
 2774      6961496E 
ARM GAS  /tmp/cc1cfAaD.s 			page 62


 2774      74657266 
 2775              	.LASF9:
 2776 00cd 6C6F6E67 		.ascii	"long unsigned int\000"
 2776      20756E73 
 2776      69676E65 
 2776      6420696E 
 2776      7400
 2777              	.LASF72:
 2778 00df 4750494F 		.ascii	"GPIO_SetBits\000"
 2778      5F536574 
 2778      42697473 
 2778      00
 2779              	.LASF21:
 2780 00ec 454E4142 		.ascii	"ENABLE\000"
 2780      4C4500
 2781              	.LASF46:
 2782 00f3 4750494F 		.ascii	"GPIO_Speed\000"
 2782      5F537065 
 2782      656400
 2783              	.LASF80:
 2784 00fe 4750494F 		.ascii	"GPIO_Init\000"
 2784      5F496E69 
 2784      7400
 2785              	.LASF13:
 2786 0108 75696E74 		.ascii	"uint8_t\000"
 2786      385F7400 
 2787              	.LASF28:
 2788 0110 45585449 		.ascii	"EXTICR\000"
 2788      435200
 2789              	.LASF59:
 2790 0117 4E657753 		.ascii	"NewState\000"
 2790      74617465 
 2790      00
 2791              	.LASF84:
 2792 0120 70696E6D 		.ascii	"pinmask\000"
 2792      61736B00 
 2793              	.LASF20:
 2794 0128 44495341 		.ascii	"DISABLE\000"
 2794      424C4500 
 2795              	.LASF0:
 2796 0130 7369676E 		.ascii	"signed char\000"
 2796      65642063 
 2796      68617200 
 2797              	.LASF55:
 2798 013c 4750494F 		.ascii	"GPIO_PortSource\000"
 2798      5F506F72 
 2798      74536F75 
 2798      72636500 
 2799              	.LASF10:
 2800 014c 6C6F6E67 		.ascii	"long long int\000"
 2800      206C6F6E 
 2800      6720696E 
 2800      7400
 2801              	.LASF7:
 2802 015a 6C6F6E67 		.ascii	"long int\000"
 2802      20696E74 
 2802      00
ARM GAS  /tmp/cc1cfAaD.s 			page 63


 2803              	.LASF89:
 2804 0163 4750494F 		.ascii	"GPIO_DeInit\000"
 2804      5F446549 
 2804      6E697400 
 2805              	.LASF64:
 2806 016f 4750494F 		.ascii	"GPIO_EventOutputConfig\000"
 2806      5F457665 
 2806      6E744F75 
 2806      74707574 
 2806      436F6E66 
 2807              	.LASF23:
 2808 0186 42535252 		.ascii	"BSRR\000"
 2808      00
 2809              	.LASF3:
 2810 018b 5F5F7569 		.ascii	"__uint8_t\000"
 2810      6E74385F 
 2810      7400
 2811              	.LASF77:
 2812 0195 4750494F 		.ascii	"GPIO_ReadInputDataBit\000"
 2812      5F526561 
 2812      64496E70 
 2812      75744461 
 2812      74614269 
 2813              	.LASF32:
 2814 01ab 4750494F 		.ascii	"GPIO_Speed_10MHz\000"
 2814      5F537065 
 2814      65645F31 
 2814      304D487A 
 2814      00
 2815              	.LASF61:
 2816 01bc 746D7072 		.ascii	"tmpreg\000"
 2816      656700
 2817              	.LASF75:
 2818 01c3 62697473 		.ascii	"bitstatus\000"
 2818      74617475 
 2818      7300
 2819              	.LASF1:
 2820 01cd 756E7369 		.ascii	"unsigned char\000"
 2820      676E6564 
 2820      20636861 
 2820      7200
 2821              	.LASF40:
 2822 01db 4750494F 		.ascii	"GPIO_Mode_Out_OD\000"
 2822      5F4D6F64 
 2822      655F4F75 
 2822      745F4F44 
 2822      00
 2823              	.LASF53:
 2824 01ec 4750494F 		.ascii	"GPIO_EXTILineConfig\000"
 2824      5F455854 
 2824      494C696E 
 2824      65436F6E 
 2824      66696700 
 2825              	.LASF33:
 2826 0200 4750494F 		.ascii	"GPIO_Speed_2MHz\000"
 2826      5F537065 
 2826      65645F32 
ARM GAS  /tmp/cc1cfAaD.s 			page 64


 2826      4D487A00 
 2827              	.LASF11:
 2828 0210 6C6F6E67 		.ascii	"long long unsigned int\000"
 2828      206C6F6E 
 2828      6720756E 
 2828      7369676E 
 2828      65642069 
 2829              	.LASF16:
 2830 0227 75696E74 		.ascii	"uint32_t\000"
 2830      33325F74 
 2830      00
 2831              	.LASF48:
 2832 0230 4750494F 		.ascii	"GPIO_InitTypeDef\000"
 2832      5F496E69 
 2832      74547970 
 2832      65446566 
 2832      00
 2833              	.LASF12:
 2834 0241 756E7369 		.ascii	"unsigned int\000"
 2834      676E6564 
 2834      20696E74 
 2834      00
 2835              	.LASF14:
 2836 024e 75696E74 		.ascii	"uint16_t\000"
 2836      31365F74 
 2836      00
 2837              	.LASF85:
 2838 0257 474E5520 		.ascii	"GNU C11 6.1.1 20160526 -mthumb -mcpu=cortex-m3 -g -"
 2838      43313120 
 2838      362E312E 
 2838      31203230 
 2838      31363035 
 2839 028a 666E6F2D 		.ascii	"fno-common\000"
 2839      636F6D6D 
 2839      6F6E00
 2840              	.LASF68:
 2841 0295 506F7274 		.ascii	"PortVal\000"
 2841      56616C00 
 2842              	.LASF81:
 2843 029d 63757272 		.ascii	"currentmode\000"
 2843      656E746D 
 2843      6F646500 
 2844              	.LASF57:
 2845 02a9 4750494F 		.ascii	"GPIO_PinRemapConfig\000"
 2845      5F50696E 
 2845      52656D61 
 2845      70436F6E 
 2845      66696700 
 2846              	.LASF24:
 2847 02bd 4C434B52 		.ascii	"LCKR\000"
 2847      00
 2848              	.LASF56:
 2849 02c2 4750494F 		.ascii	"GPIO_PinSource\000"
 2849      5F50696E 
 2849      536F7572 
 2849      636500
 2850              	.LASF76:
ARM GAS  /tmp/cc1cfAaD.s 			page 65


 2851 02d1 4750494F 		.ascii	"GPIO_ReadInputData\000"
 2851      5F526561 
 2851      64496E70 
 2851      75744461 
 2851      746100
 2852              	.LASF62:
 2853 02e4 746D706D 		.ascii	"tmpmask\000"
 2853      61736B00 
 2854              	.LASF38:
 2855 02ec 4750494F 		.ascii	"GPIO_Mode_IPD\000"
 2855      5F4D6F64 
 2855      655F4950 
 2855      4400
 2856              	.LASF34:
 2857 02fa 4750494F 		.ascii	"GPIO_Speed_50MHz\000"
 2857      5F537065 
 2857      65645F35 
 2857      304D487A 
 2857      00
 2858              	.LASF15:
 2859 030b 696E7433 		.ascii	"int32_t\000"
 2859      325F7400 
 2860              	.LASF65:
 2861 0313 4750494F 		.ascii	"GPIO_PinLockConfig\000"
 2861      5F50696E 
 2861      4C6F636B 
 2861      436F6E66 
 2861      696700
 2862              	.LASF5:
 2863 0326 73686F72 		.ascii	"short unsigned int\000"
 2863      7420756E 
 2863      7369676E 
 2863      65642069 
 2863      6E7400
 2864              	.LASF82:
 2865 0339 63757272 		.ascii	"currentpin\000"
 2865      656E7470 
 2865      696E00
 2866              	.LASF67:
 2867 0344 4750494F 		.ascii	"GPIO_Write\000"
 2867      5F577269 
 2867      746500
 2868              	.LASF19:
 2869 034f 53797374 		.ascii	"SystemCoreClock\000"
 2869      656D436F 
 2869      7265436C 
 2869      6F636B00 
 2870              	.LASF39:
 2871 035f 4750494F 		.ascii	"GPIO_Mode_IPU\000"
 2871      5F4D6F64 
 2871      655F4950 
 2871      5500
 2872              	.LASF60:
 2873 036d 746D7031 		.ascii	"tmp1\000"
 2873      00
 2874              	.LASF30:
 2875 0372 4D415052 		.ascii	"MAPR2\000"
ARM GAS  /tmp/cc1cfAaD.s 			page 66


 2875      3200
 2876              	.LASF29:
 2877 0378 52455345 		.ascii	"RESERVED0\000"
 2877      52564544 
 2877      3000
 2878              	.LASF36:
 2879 0382 4750494F 		.ascii	"GPIO_Mode_AIN\000"
 2879      5F4D6F64 
 2879      655F4149 
 2879      4E00
 2880              	.LASF58:
 2881 0390 4750494F 		.ascii	"GPIO_Remap\000"
 2881      5F52656D 
 2881      617000
 2882              	.LASF47:
 2883 039b 4750494F 		.ascii	"GPIO_Mode\000"
 2883      5F4D6F64 
 2883      6500
 2884              	.LASF31:
 2885 03a5 4146494F 		.ascii	"AFIO_TypeDef\000"
 2885      5F547970 
 2885      65446566 
 2885      00
 2886              	.LASF51:
 2887 03b2 42697441 		.ascii	"BitAction\000"
 2887      6374696F 
 2887      6E00
 2888              	.LASF86:
 2889 03bc 636F6D6D 		.ascii	"common/stm32f10x_gpio.c\000"
 2889      6F6E2F73 
 2889      746D3332 
 2889      66313078 
 2889      5F677069 
 2890              	.LASF35:
 2891 03d4 4750494F 		.ascii	"GPIOSpeed_TypeDef\000"
 2891      53706565 
 2891      645F5479 
 2891      70654465 
 2891      6600
 2892              	.LASF22:
 2893 03e6 46756E63 		.ascii	"FunctionalState\000"
 2893      74696F6E 
 2893      616C5374 
 2893      61746500 
 2894              	.LASF27:
 2895 03f6 4D415052 		.ascii	"MAPR\000"
 2895      00
 2896              	.LASF66:
 2897 03fb 4750494F 		.ascii	"GPIOx\000"
 2897      7800
 2898              	.LASF79:
 2899 0401 4750494F 		.ascii	"GPIO_InitStruct\000"
 2899      5F496E69 
 2899      74537472 
 2899      75637400 
 2900              	.LASF41:
 2901 0411 4750494F 		.ascii	"GPIO_Mode_Out_PP\000"
ARM GAS  /tmp/cc1cfAaD.s 			page 67


 2901      5F4D6F64 
 2901      655F4F75 
 2901      745F5050 
 2901      00
 2902              	.LASF26:
 2903 0422 45564352 		.ascii	"EVCR\000"
 2903      00
 2904              	.LASF6:
 2905 0427 5F5F696E 		.ascii	"__int32_t\000"
 2905      7433325F 
 2905      7400
 2906              	.LASF87:
 2907 0431 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/usart\000"
 2907      652F656E 
 2907      62696E2F 
 2907      446F6375 
 2907      6D656E74 
 2908              	.LASF44:
 2909 0456 4750494F 		.ascii	"GPIOMode_TypeDef\000"
 2909      4D6F6465 
 2909      5F547970 
 2909      65446566 
 2909      00
 2910              	.LASF71:
 2911 0467 4750494F 		.ascii	"GPIO_ResetBits\000"
 2911      5F526573 
 2911      65744269 
 2911      747300
 2912              	.LASF37:
 2913 0476 4750494F 		.ascii	"GPIO_Mode_IN_FLOATING\000"
 2913      5F4D6F64 
 2913      655F494E 
 2913      5F464C4F 
 2913      4154494E 
 2914              	.LASF18:
 2915 048c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2915      52784275 
 2915      66666572 
 2915      00
 2916              	.LASF74:
 2917 0499 4750494F 		.ascii	"GPIO_ReadOutputDataBit\000"
 2917      5F526561 
 2917      644F7574 
 2917      70757444 
 2917      61746142 
 2918              	.LASF88:
 2919 04b0 4750494F 		.ascii	"GPIO_AFIODeInit\000"
 2919      5F414649 
 2919      4F446549 
 2919      6E697400 
 2920              	.LASF42:
 2921 04c0 4750494F 		.ascii	"GPIO_Mode_AF_OD\000"
 2921      5F4D6F64 
 2921      655F4146 
 2921      5F4F4400 
 2922              	.LASF52:
 2923 04d0 4750494F 		.ascii	"GPIO_ETH_MediaInterfaceConfig\000"
ARM GAS  /tmp/cc1cfAaD.s 			page 68


 2923      5F455448 
 2923      5F4D6564 
 2923      6961496E 
 2923      74657266 
 2924              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/cc1cfAaD.s 			page 69


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_gpio.c
     /tmp/cc1cfAaD.s:15     .text:0000000000000000 $t
     /tmp/cc1cfAaD.s:22     .text:0000000000000000 GPIO_DeInit
     /tmp/cc1cfAaD.s:159    .text:00000000000000c8 $d
     /tmp/cc1cfAaD.s:169    .text:00000000000000e4 $t
     /tmp/cc1cfAaD.s:176    .text:00000000000000e4 GPIO_AFIODeInit
     /tmp/cc1cfAaD.s:209    .text:00000000000000fc GPIO_Init
     /tmp/cc1cfAaD.s:466    .text:0000000000000274 GPIO_StructInit
     /tmp/cc1cfAaD.s:514    .text:000000000000029a GPIO_ReadInputDataBit
     /tmp/cc1cfAaD.s:573    .text:00000000000002cc GPIO_ReadInputData
     /tmp/cc1cfAaD.s:613    .text:00000000000002e4 GPIO_ReadOutputDataBit
     /tmp/cc1cfAaD.s:672    .text:0000000000000316 GPIO_ReadOutputData
     /tmp/cc1cfAaD.s:712    .text:000000000000032e GPIO_SetBits
     /tmp/cc1cfAaD.s:754    .text:000000000000034a GPIO_ResetBits
     /tmp/cc1cfAaD.s:796    .text:0000000000000366 GPIO_WriteBit
     /tmp/cc1cfAaD.s:852    .text:0000000000000394 GPIO_Write
     /tmp/cc1cfAaD.s:894    .text:00000000000003b0 GPIO_PinLockConfig
     /tmp/cc1cfAaD.s:960    .text:00000000000003f2 GPIO_EventOutputConfig
     /tmp/cc1cfAaD.s:1020   .text:0000000000000438 $d
     /tmp/cc1cfAaD.s:1024   .text:000000000000043c $t
     /tmp/cc1cfAaD.s:1031   .text:000000000000043c GPIO_EventOutputCmd
     /tmp/cc1cfAaD.s:1065   .text:0000000000000458 $d
     /tmp/cc1cfAaD.s:1069   .text:000000000000045c $t
     /tmp/cc1cfAaD.s:1076   .text:000000000000045c GPIO_PinRemapConfig
     /tmp/cc1cfAaD.s:1224   .text:0000000000000538 $d
     /tmp/cc1cfAaD.s:1228   .text:000000000000053c $t
     /tmp/cc1cfAaD.s:1235   .text:000000000000053c GPIO_EXTILineConfig
     /tmp/cc1cfAaD.s:1317   .text:00000000000005bc $d
     /tmp/cc1cfAaD.s:1321   .text:00000000000005c0 $t
     /tmp/cc1cfAaD.s:1328   .text:00000000000005c0 GPIO_ETH_MediaInterfaceConfig
     /tmp/cc1cfAaD.s:1361   .text:00000000000005d8 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
