ARM GAS  /tmp/ccIxWip2.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"MPU6050.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.syntax unified
  17              		.thumb
  18              		.thumb_func
  19              		.fpu softvfp
  20              		.type	inv_row_2_scale, %function
  21              	inv_row_2_scale:
  22              	.LFB64:
  23              		.file 1 "drivers/MPU6050.c"
   1:drivers/MPU6050.c **** #include "MPU6050.h"
   2:drivers/MPU6050.c **** #include "tools.h"
   3:drivers/MPU6050.c **** 
   4:drivers/MPU6050.c **** #define PRINT_ACCEL     (0x01)
   5:drivers/MPU6050.c **** #define PRINT_GYRO      (0x02)
   6:drivers/MPU6050.c **** #define PRINT_QUAT      (0x04)
   7:drivers/MPU6050.c **** #define ACCEL_ON        (0x01)
   8:drivers/MPU6050.c **** #define GYRO_ON         (0x02)
   9:drivers/MPU6050.c **** #define MOTION          (0)
  10:drivers/MPU6050.c **** #define NO_MOTION       (1)
  11:drivers/MPU6050.c **** #define DEFAULT_MPU_HZ  (200)
  12:drivers/MPU6050.c **** #define FLASH_SIZE      (512)
  13:drivers/MPU6050.c **** #define FLASH_MEM_START ((void*)0x1800)
  14:drivers/MPU6050.c **** #define q30  1073741824.0f
  15:drivers/MPU6050.c **** 
  16:drivers/MPU6050.c **** short gyro[3], accel[3], sensors;
  17:drivers/MPU6050.c **** float Pitch; 
  18:drivers/MPU6050.c **** float q0=1.0f,q1=0.0f,q2=0.0f,q3=0.0f;
  19:drivers/MPU6050.c **** 
  20:drivers/MPU6050.c **** static signed char gyro_orientation[9] = {-1, 0, 0,
  21:drivers/MPU6050.c ****                                            0,-1, 0,
  22:drivers/MPU6050.c ****                                            0, 0, 1};
  23:drivers/MPU6050.c **** 
  24:drivers/MPU6050.c **** static  unsigned short inv_row_2_scale(const signed char *row)
  25:drivers/MPU6050.c **** {
  24              		.loc 1 25 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 0
  27              		@ frame_needed = 0, uses_anonymous_args = 0
  28              		@ link register save eliminated.
  29              	.LVL0:
  26:drivers/MPU6050.c ****   unsigned short b;
  27:drivers/MPU6050.c **** 
  28:drivers/MPU6050.c ****   if (row[0] > 0)
ARM GAS  /tmp/ccIxWip2.s 			page 2


  30              		.loc 1 28 0
  31 0000 90F90030 		ldrsb	r3, [r0]
  32 0004 002B     		cmp	r3, #0
  33 0006 01DD     		ble	.L9
  29:drivers/MPU6050.c ****     b = 0;
  34              		.loc 1 29 0
  35 0008 0020     		movs	r0, #0
  36              	.LVL1:
  37 000a 7047     		bx	lr
  38              	.LVL2:
  39              	.L9:
  30:drivers/MPU6050.c ****   else if (row[0] < 0)
  40              		.loc 1 30 0
  41 000c 10DB     		blt	.L4
  31:drivers/MPU6050.c ****     b = 4;
  32:drivers/MPU6050.c ****   else if (row[1] > 0)
  42              		.loc 1 32 0
  43 000e 90F90130 		ldrsb	r3, [r0, #1]
  44 0012 002B     		cmp	r3, #0
  45 0014 01DD     		ble	.L10
  33:drivers/MPU6050.c ****     b = 1;
  46              		.loc 1 33 0
  47 0016 0120     		movs	r0, #1
  48              	.LVL3:
  49 0018 7047     		bx	lr
  50              	.LVL4:
  51              	.L10:
  34:drivers/MPU6050.c ****   else if (row[1] < 0)
  52              		.loc 1 34 0
  53 001a 0BDB     		blt	.L6
  35:drivers/MPU6050.c ****     b = 5;
  36:drivers/MPU6050.c ****   else if (row[2] > 0)
  54              		.loc 1 36 0
  55 001c 90F90230 		ldrsb	r3, [r0, #2]
  56 0020 002B     		cmp	r3, #0
  57 0022 01DD     		ble	.L11
  37:drivers/MPU6050.c ****     b = 2;
  58              		.loc 1 37 0
  59 0024 0220     		movs	r0, #2
  60              	.LVL5:
  38:drivers/MPU6050.c ****   else if (row[2] < 0)
  39:drivers/MPU6050.c ****     b = 6;
  40:drivers/MPU6050.c ****   else
  41:drivers/MPU6050.c ****     b = 7;      // error
  42:drivers/MPU6050.c ****   return b;
  43:drivers/MPU6050.c **** }
  61              		.loc 1 43 0
  62 0026 7047     		bx	lr
  63              	.LVL6:
  64              	.L11:
  41:drivers/MPU6050.c ****   return b;
  65              		.loc 1 41 0
  66 0028 B4BF     		ite	lt
  67 002a 0620     		movlt	r0, #6
  68              	.LVL7:
  69 002c 0720     		movge	r0, #7
  70 002e 7047     		bx	lr
ARM GAS  /tmp/ccIxWip2.s 			page 3


  71              	.LVL8:
  72              	.L4:
  31:drivers/MPU6050.c ****   else if (row[1] > 0)
  73              		.loc 1 31 0
  74 0030 0420     		movs	r0, #4
  75              	.LVL9:
  76 0032 7047     		bx	lr
  77              	.LVL10:
  78              	.L6:
  35:drivers/MPU6050.c ****   else if (row[2] > 0)
  79              		.loc 1 35 0
  80 0034 0520     		movs	r0, #5
  81              	.LVL11:
  82 0036 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE64:
  85              		.size	inv_row_2_scale, .-inv_row_2_scale
  86              		.align	1
  87              		.global	MPU6050_NewValues
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  92              		.type	MPU6050_NewValues, %function
  93              	MPU6050_NewValues:
  94              	.LFB67:
  44:drivers/MPU6050.c **** 
  45:drivers/MPU6050.c **** 
  46:drivers/MPU6050.c **** static  unsigned short inv_orientation_matrix_to_scalar(const signed char *mtx)
  47:drivers/MPU6050.c **** {
  48:drivers/MPU6050.c ****   unsigned short scalar;
  49:drivers/MPU6050.c ****   scalar = inv_row_2_scale(mtx);
  50:drivers/MPU6050.c ****   scalar |= inv_row_2_scale(mtx + 3) << 3;
  51:drivers/MPU6050.c ****   scalar |= inv_row_2_scale(mtx + 6) << 6;
  52:drivers/MPU6050.c **** 
  53:drivers/MPU6050.c **** 
  54:drivers/MPU6050.c ****   return scalar;
  55:drivers/MPU6050.c **** }
  56:drivers/MPU6050.c **** 
  57:drivers/MPU6050.c **** static void run_self_test(void)
  58:drivers/MPU6050.c **** {
  59:drivers/MPU6050.c ****   int result;
  60:drivers/MPU6050.c ****   long gyro[3], accel[3];
  61:drivers/MPU6050.c **** 
  62:drivers/MPU6050.c ****   result = mpu_run_self_test(gyro, accel);
  63:drivers/MPU6050.c ****   if (result == 0x7) {
  64:drivers/MPU6050.c ****     /* Test passed. We can trust the gyro data here, so let's push it down
  65:drivers/MPU6050.c ****      * to the DMP.
  66:drivers/MPU6050.c ****      */
  67:drivers/MPU6050.c ****     float sens;
  68:drivers/MPU6050.c ****     unsigned short accel_sens;
  69:drivers/MPU6050.c ****     mpu_get_gyro_sens(&sens);
  70:drivers/MPU6050.c ****     gyro[0] = (long)(gyro[0] * sens);
  71:drivers/MPU6050.c ****     gyro[1] = (long)(gyro[1] * sens);
  72:drivers/MPU6050.c ****     gyro[2] = (long)(gyro[2] * sens);
  73:drivers/MPU6050.c ****     dmp_set_gyro_bias(gyro);
  74:drivers/MPU6050.c ****     mpu_get_accel_sens(&accel_sens);
ARM GAS  /tmp/ccIxWip2.s 			page 4


  75:drivers/MPU6050.c ****     accel[0] *= accel_sens;
  76:drivers/MPU6050.c ****     accel[1] *= accel_sens;
  77:drivers/MPU6050.c ****     accel[2] *= accel_sens;
  78:drivers/MPU6050.c ****     dmp_set_accel_bias(accel);
  79:drivers/MPU6050.c **** 	printf("setting bias succesfully ......\r\n");
  80:drivers/MPU6050.c ****   }
  81:drivers/MPU6050.c **** }
  82:drivers/MPU6050.c **** 
  83:drivers/MPU6050.c **** 
  84:drivers/MPU6050.c **** 
  85:drivers/MPU6050.c **** uint8_t buffer[14];
  86:drivers/MPU6050.c **** int MPU6050_FIFO[6][11];
  87:drivers/MPU6050.c **** int Gx_offset = 0;
  88:drivers/MPU6050.c **** int Gy_offset = 0;
  89:drivers/MPU6050.c **** int Gz_offset = 0;
  90:drivers/MPU6050.c **** 
  91:drivers/MPU6050.c **** //将新的ADC数据更新到 FIFO数组，进行滤波处理
  92:drivers/MPU6050.c **** void  MPU6050_NewValues(int ax,int ay,int az,int gx,int gy,int gz)
  93:drivers/MPU6050.c **** {
  95              		.loc 1 93 0
  96              		.cfi_startproc
  97              		@ args = 8, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              	.LVL12:
 101 0038 F0B4     		push	{r4, r5, r6, r7}
 102              		.cfi_def_cfa_offset 16
 103              		.cfi_offset 4, -16
 104              		.cfi_offset 5, -12
 105              		.cfi_offset 6, -8
 106              		.cfi_offset 7, -4
 107              	.LVL13:
 108 003a 464D     		ldr	r5, .L28
 109 003c 05F12407 		add	r7, r5, #36
 110              		.loc 1 93 0
 111 0040 2C46     		mov	r4, r5
 112              	.LVL14:
 113              	.L13:
  94:drivers/MPU6050.c ****   unsigned char i ;
  95:drivers/MPU6050.c ****   int32_t sum=0;
  96:drivers/MPU6050.c ****   for(i=1;i<10;i++){	//FIFO 操作
  97:drivers/MPU6050.c ****     MPU6050_FIFO[0][i-1]=MPU6050_FIFO[0][i];
 114              		.loc 1 97 0 discriminator 3
 115 0042 6668     		ldr	r6, [r4, #4]
 116 0044 44F8046B 		str	r6, [r4], #4
  98:drivers/MPU6050.c ****     MPU6050_FIFO[1][i-1]=MPU6050_FIFO[1][i];
 117              		.loc 1 98 0 discriminator 3
 118 0048 E66A     		ldr	r6, [r4, #44]
 119 004a A662     		str	r6, [r4, #40]
  99:drivers/MPU6050.c ****     MPU6050_FIFO[2][i-1]=MPU6050_FIFO[2][i];
 120              		.loc 1 99 0 discriminator 3
 121 004c A66D     		ldr	r6, [r4, #88]
 122 004e 6665     		str	r6, [r4, #84]
 100:drivers/MPU6050.c ****     MPU6050_FIFO[3][i-1]=MPU6050_FIFO[3][i];
 123              		.loc 1 100 0 discriminator 3
 124 0050 D4F88460 		ldr	r6, [r4, #132]
 125 0054 C4F88060 		str	r6, [r4, #128]
ARM GAS  /tmp/ccIxWip2.s 			page 5


 101:drivers/MPU6050.c ****     MPU6050_FIFO[4][i-1]=MPU6050_FIFO[4][i];
 126              		.loc 1 101 0 discriminator 3
 127 0058 D4F8B060 		ldr	r6, [r4, #176]
 128 005c C4F8AC60 		str	r6, [r4, #172]
 102:drivers/MPU6050.c ****     MPU6050_FIFO[5][i-1]=MPU6050_FIFO[5][i];
 129              		.loc 1 102 0 discriminator 3
 130 0060 D4F8DC60 		ldr	r6, [r4, #220]
 131 0064 C4F8D860 		str	r6, [r4, #216]
  96:drivers/MPU6050.c ****     MPU6050_FIFO[0][i-1]=MPU6050_FIFO[0][i];
 132              		.loc 1 96 0 discriminator 3
 133 0068 BC42     		cmp	r4, r7
 134 006a EAD1     		bne	.L13
 103:drivers/MPU6050.c ****   }
 104:drivers/MPU6050.c ****   MPU6050_FIFO[0][9]=ax;//将新的数据放置到 数据的最后面
 135              		.loc 1 104 0
 136 006c 394C     		ldr	r4, .L28
 137 006e 6062     		str	r0, [r4, #36]
 105:drivers/MPU6050.c ****   MPU6050_FIFO[1][9]=ay;
 138              		.loc 1 105 0
 139 0070 2165     		str	r1, [r4, #80]
 106:drivers/MPU6050.c ****   MPU6050_FIFO[2][9]=az;
 140              		.loc 1 106 0
 141 0072 E267     		str	r2, [r4, #124]
 107:drivers/MPU6050.c ****   MPU6050_FIFO[3][9]=gx;
 142              		.loc 1 107 0
 143 0074 C4F8A830 		str	r3, [r4, #168]
 108:drivers/MPU6050.c ****   MPU6050_FIFO[4][9]=gy;
 144              		.loc 1 108 0
 145 0078 049B     		ldr	r3, [sp, #16]
 146              	.LVL15:
 147 007a C4F8D430 		str	r3, [r4, #212]
 109:drivers/MPU6050.c ****   MPU6050_FIFO[5][9]=gz;
 148              		.loc 1 109 0
 149 007e 059B     		ldr	r3, [sp, #20]
 150 0080 C4F80031 		str	r3, [r4, #256]
 151              	.LVL16:
 152 0084 04F12801 		add	r1, r4, #40
 153              	.LVL17:
 110:drivers/MPU6050.c ****   
 111:drivers/MPU6050.c ****   sum=0;
 154              		.loc 1 111 0
 155 0088 0023     		movs	r3, #0
 156              	.LVL18:
 157              	.L14:
 112:drivers/MPU6050.c ****   for(i=0;i<10;i++){	//求当前数组的合，再取平均值
 113:drivers/MPU6050.c ****     sum+=MPU6050_FIFO[0][i];
 158              		.loc 1 113 0 discriminator 3
 159 008a 55F8042B 		ldr	r2, [r5], #4
 160 008e 1344     		add	r3, r3, r2
 161              	.LVL19:
 112:drivers/MPU6050.c ****   for(i=0;i<10;i++){	//求当前数组的合，再取平均值
 162              		.loc 1 112 0 discriminator 3
 163 0090 8D42     		cmp	r5, r1
 164 0092 FAD1     		bne	.L14
 114:drivers/MPU6050.c ****   }
 115:drivers/MPU6050.c ****   MPU6050_FIFO[0][10]=sum/10;
 165              		.loc 1 115 0
ARM GAS  /tmp/ccIxWip2.s 			page 6


 166 0094 2F49     		ldr	r1, .L28
 167 0096 304A     		ldr	r2, .L28+4
 168 0098 82FB0302 		smull	r0, r2, r2, r3
 169              	.LVL20:
 170 009c DB17     		asrs	r3, r3, #31
 171              	.LVL21:
 172 009e C3EBA203 		rsb	r3, r3, r2, asr #2
 173 00a2 8B62     		str	r3, [r1, #40]
 174              	.LVL22:
 175 00a4 5031     		adds	r1, r1, #80
 116:drivers/MPU6050.c ****   
 117:drivers/MPU6050.c ****   sum=0;
 176              		.loc 1 117 0
 177 00a6 0023     		movs	r3, #0
 178              	.LVL23:
 179              	.L15:
 118:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 119:drivers/MPU6050.c ****     sum+=MPU6050_FIFO[1][i];
 180              		.loc 1 119 0 discriminator 3
 181 00a8 55F8042F 		ldr	r2, [r5, #4]!
 182 00ac 1344     		add	r3, r3, r2
 183              	.LVL24:
 118:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 184              		.loc 1 118 0 discriminator 3
 185 00ae 8D42     		cmp	r5, r1
 186 00b0 FAD1     		bne	.L15
 120:drivers/MPU6050.c ****   }
 121:drivers/MPU6050.c ****   MPU6050_FIFO[1][10]=sum/10;
 187              		.loc 1 121 0
 188 00b2 2848     		ldr	r0, .L28
 189 00b4 284A     		ldr	r2, .L28+4
 190 00b6 82FB0312 		smull	r1, r2, r2, r3
 191 00ba DB17     		asrs	r3, r3, #31
 192              	.LVL25:
 193 00bc C3EBA202 		rsb	r2, r3, r2, asr #2
 194 00c0 0346     		mov	r3, r0
 195 00c2 43F8542F 		str	r2, [r3, #84]!
 196              	.LVL26:
 197 00c6 7C30     		adds	r0, r0, #124
 122:drivers/MPU6050.c ****   
 123:drivers/MPU6050.c ****   sum=0;
 198              		.loc 1 123 0
 199 00c8 0022     		movs	r2, #0
 200              	.LVL27:
 201              	.L16:
 124:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 125:drivers/MPU6050.c ****     sum+=MPU6050_FIFO[2][i];
 202              		.loc 1 125 0 discriminator 3
 203 00ca 53F8041F 		ldr	r1, [r3, #4]!
 204 00ce 0A44     		add	r2, r2, r1
 205              	.LVL28:
 124:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 206              		.loc 1 124 0 discriminator 3
 207 00d0 8342     		cmp	r3, r0
 208 00d2 FAD1     		bne	.L16
 126:drivers/MPU6050.c ****   }
 127:drivers/MPU6050.c ****   MPU6050_FIFO[2][10]=sum/10;
ARM GAS  /tmp/ccIxWip2.s 			page 7


 209              		.loc 1 127 0
 210 00d4 1F48     		ldr	r0, .L28
 211 00d6 204B     		ldr	r3, .L28+4
 212 00d8 83FB0213 		smull	r1, r3, r3, r2
 213 00dc D217     		asrs	r2, r2, #31
 214              	.LVL29:
 215 00de C2EBA302 		rsb	r2, r2, r3, asr #2
 216 00e2 0346     		mov	r3, r0
 217 00e4 43F8802F 		str	r2, [r3, #128]!
 218              	.LVL30:
 219 00e8 A830     		adds	r0, r0, #168
 128:drivers/MPU6050.c ****   
 129:drivers/MPU6050.c ****   sum=0;
 220              		.loc 1 129 0
 221 00ea 0022     		movs	r2, #0
 222              	.LVL31:
 223              	.L17:
 130:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 131:drivers/MPU6050.c ****     sum+=MPU6050_FIFO[3][i];
 224              		.loc 1 131 0 discriminator 3
 225 00ec 53F8041F 		ldr	r1, [r3, #4]!
 226 00f0 0A44     		add	r2, r2, r1
 227              	.LVL32:
 130:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 228              		.loc 1 130 0 discriminator 3
 229 00f2 8342     		cmp	r3, r0
 230 00f4 FAD1     		bne	.L17
 132:drivers/MPU6050.c ****   }
 133:drivers/MPU6050.c ****   MPU6050_FIFO[3][10]=sum/10;
 231              		.loc 1 133 0
 232 00f6 1748     		ldr	r0, .L28
 233 00f8 174B     		ldr	r3, .L28+4
 234 00fa 83FB0213 		smull	r1, r3, r3, r2
 235 00fe D217     		asrs	r2, r2, #31
 236              	.LVL33:
 237 0100 C2EBA302 		rsb	r2, r2, r3, asr #2
 238 0104 0346     		mov	r3, r0
 239 0106 43F8AC2F 		str	r2, [r3, #172]!
 240              	.LVL34:
 241 010a D430     		adds	r0, r0, #212
 134:drivers/MPU6050.c ****   
 135:drivers/MPU6050.c ****   sum=0;
 242              		.loc 1 135 0
 243 010c 0022     		movs	r2, #0
 244              	.LVL35:
 245              	.L18:
 136:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 137:drivers/MPU6050.c ****     sum+=MPU6050_FIFO[4][i];
 246              		.loc 1 137 0 discriminator 3
 247 010e 53F8041F 		ldr	r1, [r3, #4]!
 248 0112 0A44     		add	r2, r2, r1
 249              	.LVL36:
 136:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 250              		.loc 1 136 0 discriminator 3
 251 0114 8342     		cmp	r3, r0
 252 0116 FAD1     		bne	.L18
 138:drivers/MPU6050.c ****   }
ARM GAS  /tmp/ccIxWip2.s 			page 8


 139:drivers/MPU6050.c ****   MPU6050_FIFO[4][10]=sum/10;
 253              		.loc 1 139 0
 254 0118 0E48     		ldr	r0, .L28
 255 011a 0F4B     		ldr	r3, .L28+4
 256 011c 83FB0213 		smull	r1, r3, r3, r2
 257 0120 D217     		asrs	r2, r2, #31
 258              	.LVL37:
 259 0122 C2EBA302 		rsb	r2, r2, r3, asr #2
 260 0126 0346     		mov	r3, r0
 261 0128 43F8D82F 		str	r2, [r3, #216]!
 262              	.LVL38:
 263 012c 00F58070 		add	r0, r0, #256
 140:drivers/MPU6050.c ****   
 141:drivers/MPU6050.c ****   sum=0;
 264              		.loc 1 141 0
 265 0130 0022     		movs	r2, #0
 266              	.LVL39:
 267              	.L19:
 142:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 143:drivers/MPU6050.c ****     sum+=MPU6050_FIFO[5][i];
 268              		.loc 1 143 0 discriminator 3
 269 0132 53F8041F 		ldr	r1, [r3, #4]!
 270 0136 0A44     		add	r2, r2, r1
 271              	.LVL40:
 142:drivers/MPU6050.c ****   for(i=0;i<10;i++){
 272              		.loc 1 142 0 discriminator 3
 273 0138 9842     		cmp	r0, r3
 274 013a FAD1     		bne	.L19
 144:drivers/MPU6050.c ****   }
 145:drivers/MPU6050.c ****   MPU6050_FIFO[5][10]=sum/10;
 275              		.loc 1 145 0
 276 013c 064B     		ldr	r3, .L28+4
 277 013e 83FB0213 		smull	r1, r3, r3, r2
 278 0142 D217     		asrs	r2, r2, #31
 279              	.LVL41:
 280 0144 C2EBA302 		rsb	r2, r2, r3, asr #2
 281 0148 024B     		ldr	r3, .L28
 282 014a C3F80421 		str	r2, [r3, #260]
 146:drivers/MPU6050.c **** }
 283              		.loc 1 146 0
 284 014e F0BC     		pop	{r4, r5, r6, r7}
 285              		.cfi_restore 7
 286              		.cfi_restore 6
 287              		.cfi_restore 5
 288              		.cfi_restore 4
 289              		.cfi_def_cfa_offset 0
 290              	.LVL42:
 291 0150 7047     		bx	lr
 292              	.L29:
 293 0152 00BF     		.align	2
 294              	.L28:
 295 0154 00000000 		.word	.LANCHOR0
 296 0158 67666666 		.word	1717986919
 297              		.cfi_endproc
 298              	.LFE67:
 299              		.size	MPU6050_NewValues, .-MPU6050_NewValues
 300              		.align	1
ARM GAS  /tmp/ccIxWip2.s 			page 9


 301              		.global	MPU6050_SetClockSource
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu softvfp
 306              		.type	MPU6050_SetClockSource, %function
 307              	MPU6050_SetClockSource:
 308              	.LFB68:
 147:drivers/MPU6050.c **** 
 148:drivers/MPU6050.c **** /**************************实现函数********************************************
 149:drivers/MPU6050.c **** *函数原型:		void MPU6050_setClockSource(uint8_t source)
 150:drivers/MPU6050.c **** *功　　能:	    设置  MPU6050 的时钟源
 151:drivers/MPU6050.c ****  * CLK_SEL | Clock Source
 152:drivers/MPU6050.c ****  * --------+--------------------------------------
 153:drivers/MPU6050.c ****  * 0       | Internal oscillator
 154:drivers/MPU6050.c ****  * 1       | PLL with X Gyro reference
 155:drivers/MPU6050.c ****  * 2       | PLL with Y Gyro reference
 156:drivers/MPU6050.c ****  * 3       | PLL with Z Gyro reference
 157:drivers/MPU6050.c ****  * 4       | PLL with external 32.768kHz reference
 158:drivers/MPU6050.c ****  * 5       | PLL with external 19.2MHz reference
 159:drivers/MPU6050.c ****  * 6       | Reserved
 160:drivers/MPU6050.c ****  * 7       | Stops the clock and keeps the timing generator in reset
 161:drivers/MPU6050.c **** *******************************************************************************/
 162:drivers/MPU6050.c **** void MPU6050_SetClockSource(uint8_t source){
 309              		.loc 1 162 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL43:
 314 015c 00B5     		push	{lr}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 14, -4
 317 015e 83B0     		sub	sp, sp, #12
 318              		.cfi_def_cfa_offset 16
 163:drivers/MPU6050.c ****   I2C_BitsWrite(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CLKSEL_BIT, MPU6050_PWR1_CLKSEL_LENGTH
 319              		.loc 1 163 0
 320 0160 0090     		str	r0, [sp]
 321 0162 0323     		movs	r3, #3
 322 0164 0222     		movs	r2, #2
 323 0166 6B21     		movs	r1, #107
 324 0168 D020     		movs	r0, #208
 325              	.LVL44:
 326 016a FFF7FEFF 		bl	I2C_BitsWrite
 327              	.LVL45:
 164:drivers/MPU6050.c **** 
 165:drivers/MPU6050.c **** }
 328              		.loc 1 165 0
 329 016e 03B0     		add	sp, sp, #12
 330              		.cfi_def_cfa_offset 4
 331              		@ sp needed
 332 0170 5DF804FB 		ldr	pc, [sp], #4
 333              		.cfi_endproc
 334              	.LFE68:
 335              		.size	MPU6050_SetClockSource, .-MPU6050_SetClockSource
 336              		.align	1
 337              		.global	MPU6050_SetFullScaleGyroRange
 338              		.syntax unified
ARM GAS  /tmp/ccIxWip2.s 			page 10


 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 342              		.type	MPU6050_SetFullScaleGyroRange, %function
 343              	MPU6050_SetFullScaleGyroRange:
 344              	.LFB69:
 166:drivers/MPU6050.c **** 
 167:drivers/MPU6050.c **** /** Set full-scale gyroscope range.
 168:drivers/MPU6050.c ****  * @param range New full-scale gyroscope range value
 169:drivers/MPU6050.c ****  * @see getFullScaleRange()
 170:drivers/MPU6050.c ****  * @see MPU6050_GYRO_FS_250
 171:drivers/MPU6050.c ****  * @see MPU6050_RA_GYRO_CONFIG
 172:drivers/MPU6050.c ****  * @see MPU6050_GCONFIG_FS_SEL_BIT
 173:drivers/MPU6050.c ****  * @see MPU6050_GCONFIG_FS_SEL_LENGTH
 174:drivers/MPU6050.c ****  */
 175:drivers/MPU6050.c **** void MPU6050_SetFullScaleGyroRange(uint8_t range) {
 345              		.loc 1 175 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL46:
 350 0174 00B5     		push	{lr}
 351              		.cfi_def_cfa_offset 4
 352              		.cfi_offset 14, -4
 353 0176 83B0     		sub	sp, sp, #12
 354              		.cfi_def_cfa_offset 16
 176:drivers/MPU6050.c ****   I2C_BitsWrite(devAddr, MPU6050_RA_GYRO_CONFIG, MPU6050_GCONFIG_FS_SEL_BIT, MPU6050_GCONFIG_FS_SEL
 355              		.loc 1 176 0
 356 0178 0090     		str	r0, [sp]
 357 017a 0223     		movs	r3, #2
 358 017c 0422     		movs	r2, #4
 359 017e 1B21     		movs	r1, #27
 360 0180 D020     		movs	r0, #208
 361              	.LVL47:
 362 0182 FFF7FEFF 		bl	I2C_BitsWrite
 363              	.LVL48:
 177:drivers/MPU6050.c **** }
 364              		.loc 1 177 0
 365 0186 03B0     		add	sp, sp, #12
 366              		.cfi_def_cfa_offset 4
 367              		@ sp needed
 368 0188 5DF804FB 		ldr	pc, [sp], #4
 369              		.cfi_endproc
 370              	.LFE69:
 371              		.size	MPU6050_SetFullScaleGyroRange, .-MPU6050_SetFullScaleGyroRange
 372              		.align	1
 373              		.global	MPU6050_SetFullScaleAccelRange
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu softvfp
 378              		.type	MPU6050_SetFullScaleAccelRange, %function
 379              	MPU6050_SetFullScaleAccelRange:
 380              	.LFB70:
 178:drivers/MPU6050.c **** 
 179:drivers/MPU6050.c **** //设置  MPU6050 加速度计的最大量程
 180:drivers/MPU6050.c **** void MPU6050_SetFullScaleAccelRange(uint8_t range) {
ARM GAS  /tmp/ccIxWip2.s 			page 11


 381              		.loc 1 180 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              	.LVL49:
 386 018c 00B5     		push	{lr}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 14, -4
 389 018e 83B0     		sub	sp, sp, #12
 390              		.cfi_def_cfa_offset 16
 181:drivers/MPU6050.c ****   I2C_BitsWrite(devAddr, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_AFS_SEL_BIT, MPU6050_ACONFIG_AFS_
 391              		.loc 1 181 0
 392 0190 0090     		str	r0, [sp]
 393 0192 0223     		movs	r3, #2
 394 0194 0422     		movs	r2, #4
 395 0196 1C21     		movs	r1, #28
 396 0198 D020     		movs	r0, #208
 397              	.LVL50:
 398 019a FFF7FEFF 		bl	I2C_BitsWrite
 399              	.LVL51:
 182:drivers/MPU6050.c **** }
 400              		.loc 1 182 0
 401 019e 03B0     		add	sp, sp, #12
 402              		.cfi_def_cfa_offset 4
 403              		@ sp needed
 404 01a0 5DF804FB 		ldr	pc, [sp], #4
 405              		.cfi_endproc
 406              	.LFE70:
 407              		.size	MPU6050_SetFullScaleAccelRange, .-MPU6050_SetFullScaleAccelRange
 408              		.align	1
 409              		.global	MPU6050_SetSleepEnabled
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
 414              		.type	MPU6050_SetSleepEnabled, %function
 415              	MPU6050_SetSleepEnabled:
 416              	.LFB71:
 183:drivers/MPU6050.c **** 
 184:drivers/MPU6050.c **** //设置  MPU6050 是否进入睡眠模式
 185:drivers/MPU6050.c **** void MPU6050_SetSleepEnabled(uint8_t enabled) {
 417              		.loc 1 185 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL52:
 422 01a4 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
 186:drivers/MPU6050.c ****   I2C_BitWrite(devAddr, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_SLEEP_BIT, enabled);
 426              		.loc 1 186 0
 427 01a6 0346     		mov	r3, r0
 428 01a8 0622     		movs	r2, #6
 429 01aa 6B21     		movs	r1, #107
 430 01ac D020     		movs	r0, #208
 431              	.LVL53:
ARM GAS  /tmp/ccIxWip2.s 			page 12


 432 01ae FFF7FEFF 		bl	I2C_BitWrite
 433              	.LVL54:
 434 01b2 08BD     		pop	{r3, pc}
 435              		.cfi_endproc
 436              	.LFE71:
 437              		.size	MPU6050_SetSleepEnabled, .-MPU6050_SetSleepEnabled
 438              		.align	1
 439              		.global	MPU6050_GetDeviceID
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu softvfp
 444              		.type	MPU6050_GetDeviceID, %function
 445              	MPU6050_GetDeviceID:
 446              	.LFB72:
 187:drivers/MPU6050.c **** }
 188:drivers/MPU6050.c **** 
 189:drivers/MPU6050.c **** //读取  MPU6050 WHO_AM_I 标识	 将返回 0x68
 190:drivers/MPU6050.c **** uint8_t MPU6050_GetDeviceID(void)
 191:drivers/MPU6050.c **** {
 447              		.loc 1 191 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 01b4 10B5     		push	{r4, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 192:drivers/MPU6050.c ****   I2C_Read(devAddr, MPU6050_RA_WHO_AM_I, 1, buffer);
 455              		.loc 1 192 0
 456 01b6 054C     		ldr	r4, .L40
 457 01b8 04F58473 		add	r3, r4, #264
 458 01bc 0122     		movs	r2, #1
 459 01be 7521     		movs	r1, #117
 460 01c0 D020     		movs	r0, #208
 461 01c2 FFF7FEFF 		bl	I2C_Read
 462              	.LVL55:
 193:drivers/MPU6050.c ****   return buffer[0];
 194:drivers/MPU6050.c **** }
 463              		.loc 1 194 0
 464 01c6 94F80801 		ldrb	r0, [r4, #264]	@ zero_extendqisi2
 465 01ca 10BD     		pop	{r4, pc}
 466              	.L41:
 467              		.align	2
 468              	.L40:
 469 01cc 00000000 		.word	.LANCHOR0
 470              		.cfi_endproc
 471              	.LFE72:
 472              		.size	MPU6050_GetDeviceID, .-MPU6050_GetDeviceID
 473              		.align	1
 474              		.global	MPU6050_TestConnection
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 479              		.type	MPU6050_TestConnection, %function
 480              	MPU6050_TestConnection:
ARM GAS  /tmp/ccIxWip2.s 			page 13


 481              	.LFB73:
 195:drivers/MPU6050.c **** 
 196:drivers/MPU6050.c **** //检测MPU6050 是否已经连接
 197:drivers/MPU6050.c **** uint8_t MPU6050_TestConnection(void)
 198:drivers/MPU6050.c **** {
 482              		.loc 1 198 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486 01d0 08B5     		push	{r3, lr}
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 199:drivers/MPU6050.c ****   if(MPU6050_GetDeviceID() == 0x68)  //0b01101000;
 490              		.loc 1 199 0
 491 01d2 FFF7FEFF 		bl	MPU6050_GetDeviceID
 492              	.LVL56:
 200:drivers/MPU6050.c ****   return 1;
 201:drivers/MPU6050.c ****   else return 0;
 202:drivers/MPU6050.c **** }
 493              		.loc 1 202 0
 494 01d6 6828     		cmp	r0, #104
 495 01d8 14BF     		ite	ne
 496 01da 0020     		movne	r0, #0
 497 01dc 0120     		moveq	r0, #1
 498 01de 08BD     		pop	{r3, pc}
 499              		.cfi_endproc
 500              	.LFE73:
 501              		.size	MPU6050_TestConnection, .-MPU6050_TestConnection
 502              		.align	1
 503              		.global	MPU6050_SetI2CMasterModeEnabled
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu softvfp
 508              		.type	MPU6050_SetI2CMasterModeEnabled, %function
 509              	MPU6050_SetI2CMasterModeEnabled:
 510              	.LFB74:
 203:drivers/MPU6050.c **** 
 204:drivers/MPU6050.c **** //设置 MPU6050 是否为AUX I2C线的主机
 205:drivers/MPU6050.c **** void MPU6050_SetI2CMasterModeEnabled(uint8_t enabled) {
 511              		.loc 1 205 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              	.LVL57:
 516 01e0 08B5     		push	{r3, lr}
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 3, -8
 519              		.cfi_offset 14, -4
 206:drivers/MPU6050.c ****   I2C_BitWrite(devAddr, MPU6050_RA_USER_CTRL, MPU6050_USERCTRL_I2C_MST_EN_BIT, enabled);
 520              		.loc 1 206 0
 521 01e2 0346     		mov	r3, r0
 522 01e4 0522     		movs	r2, #5
 523 01e6 6A21     		movs	r1, #106
 524 01e8 D020     		movs	r0, #208
 525              	.LVL58:
ARM GAS  /tmp/ccIxWip2.s 			page 14


 526 01ea FFF7FEFF 		bl	I2C_BitWrite
 527              	.LVL59:
 528 01ee 08BD     		pop	{r3, pc}
 529              		.cfi_endproc
 530              	.LFE74:
 531              		.size	MPU6050_SetI2CMasterModeEnabled, .-MPU6050_SetI2CMasterModeEnabled
 532              		.align	1
 533              		.global	MPU6050_SetI2CBypassEnabled
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 538              		.type	MPU6050_SetI2CBypassEnabled, %function
 539              	MPU6050_SetI2CBypassEnabled:
 540              	.LFB75:
 207:drivers/MPU6050.c **** }
 208:drivers/MPU6050.c **** 
 209:drivers/MPU6050.c **** //设置 MPU6050 是否为AUX I2C线的主机
 210:drivers/MPU6050.c **** void MPU6050_SetI2CBypassEnabled(uint8_t enabled) {
 541              		.loc 1 210 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL60:
 546 01f0 08B5     		push	{r3, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 3, -8
 549              		.cfi_offset 14, -4
 211:drivers/MPU6050.c ****   I2C_BitWrite(devAddr, MPU6050_RA_INT_PIN_CFG, MPU6050_INTCFG_I2C_BYPASS_EN_BIT, enabled);
 550              		.loc 1 211 0
 551 01f2 0346     		mov	r3, r0
 552 01f4 0122     		movs	r2, #1
 553 01f6 3721     		movs	r1, #55
 554 01f8 D020     		movs	r0, #208
 555              	.LVL61:
 556 01fa FFF7FEFF 		bl	I2C_BitWrite
 557              	.LVL62:
 558 01fe 08BD     		pop	{r3, pc}
 559              		.cfi_endproc
 560              	.LFE75:
 561              		.size	MPU6050_SetI2CBypassEnabled, .-MPU6050_SetI2CBypassEnabled
 562              		.align	1
 563              		.global	MPU6050_Init
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu softvfp
 568              		.type	MPU6050_Init, %function
 569              	MPU6050_Init:
 570              	.LFB76:
 212:drivers/MPU6050.c **** }
 213:drivers/MPU6050.c **** 
 214:drivers/MPU6050.c **** //初始化 	MPU6050 以进入可用状态。
 215:drivers/MPU6050.c **** void MPU6050_Init(void) {
 571              		.loc 1 215 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIxWip2.s 			page 15


 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0200 08B5     		push	{r3, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 3, -8
 578              		.cfi_offset 14, -4
 216:drivers/MPU6050.c ****   MPU6050_SetClockSource(MPU6050_CLOCK_PLL_YGYRO); //设置时钟
 579              		.loc 1 216 0
 580 0202 0220     		movs	r0, #2
 581 0204 FFF7FEFF 		bl	MPU6050_SetClockSource
 582              	.LVL63:
 217:drivers/MPU6050.c **** 
 218:drivers/MPU6050.c ****   MPU6050_SetFullScaleGyroRange(MPU6050_GYRO_FS_2000);//陀螺仪最大量程 +-1000度每秒
 583              		.loc 1 218 0
 584 0208 0320     		movs	r0, #3
 585 020a FFF7FEFF 		bl	MPU6050_SetFullScaleGyroRange
 586              	.LVL64:
 219:drivers/MPU6050.c ****   MPU6050_SetFullScaleAccelRange(MPU6050_ACCEL_FS_2);	//加速度度最大量程 +-2G
 587              		.loc 1 219 0
 588 020e 0020     		movs	r0, #0
 589 0210 FFF7FEFF 		bl	MPU6050_SetFullScaleAccelRange
 590              	.LVL65:
 220:drivers/MPU6050.c ****   MPU6050_SetSleepEnabled(0); //进入工作状态
 591              		.loc 1 220 0
 592 0214 0020     		movs	r0, #0
 593 0216 FFF7FEFF 		bl	MPU6050_SetSleepEnabled
 594              	.LVL66:
 221:drivers/MPU6050.c **** 	MPU6050_SetI2CMasterModeEnabled(0);	 //不让MPU6050 控制AUXI2C
 595              		.loc 1 221 0
 596 021a 0020     		movs	r0, #0
 597 021c FFF7FEFF 		bl	MPU6050_SetI2CMasterModeEnabled
 598              	.LVL67:
 222:drivers/MPU6050.c **** 	MPU6050_SetI2CBypassEnabled(0);	 //主控制器的I2C与	MPU6050的AUXI2C	直通。控制器可以直接访问HMC5883
 599              		.loc 1 222 0
 600 0220 0020     		movs	r0, #0
 601 0222 FFF7FEFF 		bl	MPU6050_SetI2CBypassEnabled
 602              	.LVL68:
 603 0226 08BD     		pop	{r3, pc}
 604              		.cfi_endproc
 605              	.LFE76:
 606              		.size	MPU6050_Init, .-MPU6050_Init
 607              		.global	__aeabi_i2f
 608              		.global	__aeabi_fmul
 609              		.global	__aeabi_f2iz
 610              		.align	1
 611              		.global	DMP_Init
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu softvfp
 616              		.type	DMP_Init, %function
 617              	DMP_Init:
 618              	.LFB77:
 223:drivers/MPU6050.c **** }
 224:drivers/MPU6050.c **** 
 225:drivers/MPU6050.c **** 
 226:drivers/MPU6050.c **** 
 227:drivers/MPU6050.c **** 
ARM GAS  /tmp/ccIxWip2.s 			page 16


 228:drivers/MPU6050.c **** //MPU6050内置DMP的初始化
 229:drivers/MPU6050.c **** //
 230:drivers/MPU6050.c **** void DMP_Init(void)
 231:drivers/MPU6050.c **** { 
 619              		.loc 1 231 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 40
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623 0228 70B5     		push	{r4, r5, r6, lr}
 624              		.cfi_def_cfa_offset 16
 625              		.cfi_offset 4, -16
 626              		.cfi_offset 5, -12
 627              		.cfi_offset 6, -8
 628              		.cfi_offset 14, -4
 629 022a 8AB0     		sub	sp, sp, #40
 630              		.cfi_def_cfa_offset 56
 232:drivers/MPU6050.c ****   u8 temp[1]={0};
 631              		.loc 1 232 0
 632 022c 0AAB     		add	r3, sp, #40
 633 022e 0022     		movs	r2, #0
 634 0230 03F8042D 		strb	r2, [r3, #-4]!
 233:drivers/MPU6050.c ****   I2C_Read(0x68,0x75,1,temp);
 635              		.loc 1 233 0
 636 0234 0122     		movs	r2, #1
 637 0236 7521     		movs	r1, #117
 638 0238 6820     		movs	r0, #104
 639 023a FFF7FEFF 		bl	I2C_Read
 640              	.LVL69:
 234:drivers/MPU6050.c **** 	printf("mpu_set_sensor complete ......\r\n");
 641              		.loc 1 234 0
 642 023e 5748     		ldr	r0, .L73
 643 0240 FFF7FEFF 		bl	puts
 644              	.LVL70:
 235:drivers/MPU6050.c **** 	if(temp[0]!=0x68)NVIC_SystemReset();
 645              		.loc 1 235 0
 646 0244 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 647 0248 682B     		cmp	r3, #104
 648 024a 04D1     		bne	.L63
 236:drivers/MPU6050.c **** 	if(!mpu_init())
 649              		.loc 1 236 0
 650 024c FFF7FEFF 		bl	mpu_init
 651              	.LVL71:
 652 0250 70B1     		cbz	r0, .L64
 653              	.L50:
 237:drivers/MPU6050.c ****   {
 238:drivers/MPU6050.c **** 	  if(!mpu_set_sensors(INV_XYZ_GYRO | INV_XYZ_ACCEL))
 239:drivers/MPU6050.c **** 	  	 printf("mpu_set_sensor complete ......\r\n");
 240:drivers/MPU6050.c **** 	  if(!mpu_configure_fifo(INV_XYZ_GYRO | INV_XYZ_ACCEL))
 241:drivers/MPU6050.c **** 	  	 printf("mpu_configure_fifo complete ......\r\n");
 242:drivers/MPU6050.c **** 	  if(!mpu_set_sample_rate(DEFAULT_MPU_HZ))
 243:drivers/MPU6050.c **** 	  	 printf("mpu_set_sample_rate complete ......\r\n");
 244:drivers/MPU6050.c **** 	  if(!dmp_load_motion_driver_firmware())
 245:drivers/MPU6050.c **** 	  	printf("dmp_load_motion_driver_firmware complete ......\r\n");
 246:drivers/MPU6050.c **** 	  if(!dmp_set_orientation(inv_orientation_matrix_to_scalar(gyro_orientation)))
 247:drivers/MPU6050.c **** 	  	 printf("dmp_set_orientation complete ......\r\n");
 248:drivers/MPU6050.c **** 	  if(!dmp_enable_feature(DMP_FEATURE_6X_LP_QUAT | DMP_FEATURE_TAP |
 249:drivers/MPU6050.c **** 	        DMP_FEATURE_ANDROID_ORIENT | DMP_FEATURE_SEND_RAW_ACCEL | DMP_FEATURE_SEND_CAL_GYRO |
ARM GAS  /tmp/ccIxWip2.s 			page 17


 250:drivers/MPU6050.c **** 	        DMP_FEATURE_GYRO_CAL))
 251:drivers/MPU6050.c **** 	  	 printf("dmp_enable_feature complete ......\r\n");
 252:drivers/MPU6050.c **** 	  if(!dmp_set_fifo_rate(DEFAULT_MPU_HZ))
 253:drivers/MPU6050.c **** 	  	 printf("dmp_set_fifo_rate complete ......\r\n");
 254:drivers/MPU6050.c **** 	  run_self_test();
 255:drivers/MPU6050.c **** 	  if(!mpu_set_dmp_state(1))
 256:drivers/MPU6050.c **** 	  	 printf("mpu_set_dmp_state complete ......\r\n");
 257:drivers/MPU6050.c ****   }
 258:drivers/MPU6050.c **** }
 654              		.loc 1 258 0
 655 0252 0AB0     		add	sp, sp, #40
 656              		.cfi_remember_state
 657              		.cfi_def_cfa_offset 16
 658              		@ sp needed
 659 0254 70BD     		pop	{r4, r5, r6, pc}
 660              	.L63:
 661              		.cfi_restore_state
 662              	.LBB21:
 663              	.LBB22:
 664              	.LBB23:
 665              	.LBB24:
 666              		.file 2 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h"
   1:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**************************************************************************//**
   2:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  * @version  V4.30
   5:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  * @date     20. October 2015
   6:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  ******************************************************************************/
   7:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
   9:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    All rights reserved.
  10:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****      specific prior written permission.
  20:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    *
  21:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  34:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  35:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/ccIxWip2.s 			page 18


  36:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  38:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #endif
  45:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  46:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  47:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   @{
  51:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
  52:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  53:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
  54:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
  58:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
  60:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
  62:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  63:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  64:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
  65:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
  69:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
  71:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
  73:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  74:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  75:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
  76:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get Control Register
  77:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               Control Register value
  79:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
  80:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
  82:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
  83:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  84:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
  86:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
  87:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  88:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  89:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
  90:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Control Register
  91:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  /tmp/ccIxWip2.s 			page 19


  93:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
  94:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
  96:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
  98:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
  99:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 100:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 101:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               IPSR Register value
 104:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 105:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 107:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 108:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 109:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 111:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 112:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 113:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 114:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 115:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get APSR Register
 116:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               APSR Register value
 118:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 119:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 121:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 122:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 123:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 125:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 126:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 127:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 128:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 129:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 132:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****     \return               xPSR Register value
 133:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 134:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 136:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 137:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 138:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 140:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 141:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 142:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 143:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 144:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               PSP Register value
 147:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 148:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
ARM GAS  /tmp/ccIxWip2.s 			page 20


 150:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   register uint32_t result;
 151:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 152:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 154:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 155:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 156:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 157:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 158:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 162:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 164:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 166:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 167:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 168:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 169:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               MSP Register value
 172:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 173:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 175:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   register uint32_t result;
 176:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 177:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 179:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 180:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 181:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 182:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 183:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 186:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 188:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 190:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 192:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 193:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 194:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 195:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               Priority Mask value
 198:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 199:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 201:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 202:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 203:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 205:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 206:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 21


 207:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 208:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 209:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 213:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 215:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 217:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 218:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 219:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 221:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 222:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Enable FIQ
 223:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 226:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 228:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 230:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 231:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 232:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 233:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Disable FIQ
 234:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 237:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 239:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 241:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 242:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 243:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 244:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get Base Priority
 245:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               Base Priority register value
 247:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 248:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 250:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 251:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 252:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 254:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 255:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 256:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 257:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 258:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority
 259:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 262:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
ARM GAS  /tmp/ccIxWip2.s 			page 22


 264:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 266:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 267:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 268:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 269:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 274:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 276:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 278:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 279:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 280:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 281:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               Fault Mask register value
 284:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 285:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 287:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 288:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 289:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 291:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 292:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 293:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 294:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 295:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 299:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 301:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 303:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 304:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 306:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 307:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 309:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 310:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Get FPSCR
 311:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 314:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 316:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   uint32_t result;
 318:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 319:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
ARM GAS  /tmp/ccIxWip2.s 			page 23


 321:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 323:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   return(result);
 324:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #else
 325:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****    return(0);
 326:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #endif
 327:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 328:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 329:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 330:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 331:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Set FPSCR
 332:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 335:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 337:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 340:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 342:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #endif
 343:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 344:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 345:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 347:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 348:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 349:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 351:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 352:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   Access to dedicated instructions
 355:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   @{
 356:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** */
 357:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 358:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #else
 365:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** #endif
 368:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 369:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 370:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   No Operation
 371:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 373:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 375:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 377:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 24


 378:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 379:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 380:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 383:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 385:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 387:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 388:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 389:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 390:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Wait For Event
 391:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 394:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 396:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 398:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 399:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 400:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 401:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Send Event
 402:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 404:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 406:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 408:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 409:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 410:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 411:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            after the instruction has been completed.
 415:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 416:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 418:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 420:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 421:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** 
 422:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** /**
 423:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****  */
 427:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** {
 429:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 667              		.loc 2 429 0
 668              		.syntax unified
 669              	@ 429 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h" 1
 670 0256 BFF34F8F 		dsb 0xF
 671              	@ 0 "" 2
ARM GAS  /tmp/ccIxWip2.s 			page 25


 672              		.thumb
 673              		.syntax unified
 674              	.LBE24:
 675              	.LBE23:
 676              		.file 3 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h"
   1:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**************************************************************************//**
   2:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  * @version  V4.30
   5:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  * @date     20. October 2015
   6:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  ******************************************************************************/
   7:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
   9:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    All rights reserved.
  10:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      to endorse or promote products derived from this software without
  19:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      specific prior written permission.
  20:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    *
  21:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  34:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  35:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
  40:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  41:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  44:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #include <stdint.h>
  45:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  46:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifdef __cplusplus
  47:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  extern "C" {
  48:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
  49:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  50:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
  51:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
ARM GAS  /tmp/ccIxWip2.s 			page 26


  53:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  54:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  57:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  60:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
  63:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  64:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  65:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*******************************************************************************
  66:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  *                 CMSIS definitions
  67:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  ******************************************************************************/
  68:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
  69:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup Cortex_M3
  70:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
  71:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
  72:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  73:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  79:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  81:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  82:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if   defined ( __CC_ARM )
  83:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  87:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  92:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
  93:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
  97:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 102:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 103:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 106:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 107:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
ARM GAS  /tmp/ccIxWip2.s 			page 27


 110:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 111:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 112:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __packed
 113:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 117:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #else
 118:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #error Unknown compiler
 119:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 120:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 121:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     This core does not support an FPU at all
 123:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** */
 124:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __FPU_USED       0U
 125:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 126:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if defined ( __CC_ARM )
 127:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 130:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 131:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 135:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 136:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 137:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 140:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 141:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if defined __ARMVFP__
 143:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 145:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 146:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 147:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 150:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 151:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 152:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if defined __FPU_VFP__
 153:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 155:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 156:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 157:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 160:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 161:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 162:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 163:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 166:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifdef __cplusplus
ARM GAS  /tmp/ccIxWip2.s 			page 28


 167:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
 168:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 169:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 170:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 172:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 174:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 177:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifdef __cplusplus
 178:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  extern "C" {
 179:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 180:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 181:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* check device defines and use defaults */
 182:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #ifndef __CM3_REV
 184:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 187:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 188:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 192:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 193:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 197:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 198:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #endif
 202:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 203:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 204:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 206:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 208:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** */
 212:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #ifdef __cplusplus
 213:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #else
 215:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 217:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 220:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* following defines should be used for structure members */
 221:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
ARM GAS  /tmp/ccIxWip2.s 			page 29


 224:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 225:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 227:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 228:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 229:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*******************************************************************************
 230:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  *                 Register Abstraction
 231:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   Core Register contain:
 232:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core Register
 233:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core NVIC Register
 234:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core SCB Register
 235:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core SysTick Register
 236:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core Debug Register
 237:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core MPU Register
 238:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  ******************************************************************************/
 239:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 240:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** */
 243:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 244:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 245:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief      Core Register type definitions.
 248:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 249:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 250:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 251:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 252:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 254:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef union
 255:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 256:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   struct
 257:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
 258:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } APSR_Type;
 267:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 268:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* APSR Register Definitions */
 269:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 272:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 275:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 278:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 30


 281:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 284:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 285:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 286:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 288:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef union
 289:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 290:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   struct
 291:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
 292:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } IPSR_Type;
 297:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 298:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* IPSR Register Definitions */
 299:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 302:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 303:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 304:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 306:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef union
 307:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 308:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   struct
 309:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
 310:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } xPSR_Type;
 322:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 323:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* xPSR Register Definitions */
 324:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 327:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 330:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 333:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 336:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
ARM GAS  /tmp/ccIxWip2.s 			page 31


 338:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 339:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 342:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 345:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 348:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 349:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 350:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 352:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef union
 353:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 354:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   struct
 355:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
 356:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } CONTROL_Type;
 362:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 363:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* CONTROL Register Definitions */
 364:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 367:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 370:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 372:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 373:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 374:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 378:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 379:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 380:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 381:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 383:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 384:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 385:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED4[56U];
ARM GAS  /tmp/ccIxWip2.s 			page 32


 395:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }  NVIC_Type;
 399:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 400:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 404:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 406:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 407:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 408:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 412:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 413:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 414:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 415:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 417:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 418:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 419:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } SCB_Type;
 441:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 442:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 446:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 449:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 33


 452:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 455:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 458:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 462:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 465:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 468:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 471:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 474:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 477:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 480:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 483:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 486:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 489:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 494:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #else
 497:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 500:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 501:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 505:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 508:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
ARM GAS  /tmp/ccIxWip2.s 			page 34


 509:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 511:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 514:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 517:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 520:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 523:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 524:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 527:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 530:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 533:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 537:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 540:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 543:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 546:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 549:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 552:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 556:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 559:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 562:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 565:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
ARM GAS  /tmp/ccIxWip2.s 			page 35


 566:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 568:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 571:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 574:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 577:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 580:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 583:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 586:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 589:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 592:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 595:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 599:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 602:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 605:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 609:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 612:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 615:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 619:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 622:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
ARM GAS  /tmp/ccIxWip2.s 			page 36


 623:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 625:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 628:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 631:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 633:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 634:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 635:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 639:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 640:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 641:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 642:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 644:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 645:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 646:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #else
 651:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
 653:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } SCnSCB_Type;
 654:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 655:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 659:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 661:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 664:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 667:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 670:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 672:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 673:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 674:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 678:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 679:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 37


 680:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 681:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 683:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 684:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 685:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } SysTick_Type;
 690:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 691:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 695:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 698:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 701:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 704:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 708:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 709:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 712:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 716:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 719:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 722:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 724:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 725:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 726:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 730:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 731:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 732:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 733:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 735:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 736:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccIxWip2.s 			page 38


 737:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __OM  union
 738:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
 739:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } ITM_Type;
 770:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 771:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 775:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 779:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 782:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 785:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 788:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 791:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 39


 794:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 797:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 800:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 803:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 807:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 811:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 815:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 819:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 822:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 825:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 827:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 828:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 829:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 833:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 834:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 835:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 836:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 838:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 839:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 840:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
ARM GAS  /tmp/ccIxWip2.s 			page 40


 851:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } DWT_Type;
 864:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 865:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT Control Register Definitions */
 866:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 869:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 872:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 875:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 878:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 881:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 884:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 887:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 890:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 893:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 896:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 899:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 902:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 905:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 41


 908:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 911:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 914:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 917:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 920:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 924:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 928:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 932:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 936:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 940:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 944:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 948:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 951:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 954:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 957:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 960:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 963:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
ARM GAS  /tmp/ccIxWip2.s 			page 42


 965:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 966:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 969:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 972:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 974:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 975:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 976:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
 980:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 981:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
 982:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
 983:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
 985:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
 986:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
 987:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } TPI_Type;
1012:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1013:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1017:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1021:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
ARM GAS  /tmp/ccIxWip2.s 			page 43


1022:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1025:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1028:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1031:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1034:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1038:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1041:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1045:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1049:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1052:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1055:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1058:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1061:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1064:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1067:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1071:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1075:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1078:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
ARM GAS  /tmp/ccIxWip2.s 			page 44


1079:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1081:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1084:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1087:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1090:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1093:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1097:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1101:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1105:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1108:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1111:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1114:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1117:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1120:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1124:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1127:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1129:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1130:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1132:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
ARM GAS  /tmp/ccIxWip2.s 			page 45


1136:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1137:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1138:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1139:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1141:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
1142:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1143:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } MPU_Type;
1155:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1156:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* MPU Type Register Definitions */
1157:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1160:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1163:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1166:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* MPU Control Register Definitions */
1167:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1170:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1173:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1176:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1180:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1184:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1187:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1190:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
ARM GAS  /tmp/ccIxWip2.s 			page 46


1193:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1194:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1197:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1200:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1203:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1206:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1209:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1212:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1215:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1218:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1221:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
1223:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1224:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1225:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1226:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
1230:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1231:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1232:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1233:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1235:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** typedef struct
1236:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1237:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** } CoreDebug_Type;
1242:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1243:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1247:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccIxWip2.s 			page 47


1250:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1253:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1256:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1259:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1262:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1265:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1268:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1271:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1274:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1277:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1280:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1284:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1287:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1291:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1294:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1297:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1300:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1303:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1306:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
ARM GAS  /tmp/ccIxWip2.s 			page 48


1307:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1309:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1312:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1315:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1318:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1321:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1324:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1327:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1329:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1330:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1331:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
1335:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1336:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1337:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1338:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return           Masked and shifted value.
1342:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** */
1343:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1345:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1346:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param[in] value  Value of register.
1349:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** */
1351:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1353:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1355:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1356:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1357:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
1361:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1362:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1363:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
ARM GAS  /tmp/ccIxWip2.s 			page 49


1364:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1373:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1382:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** #endif
1386:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1387:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*@} */
1388:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1389:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1390:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1391:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /*******************************************************************************
1392:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
1393:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   Core Function Interface contains:
1394:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core NVIC Functions
1395:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core SysTick Functions
1396:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core Debug Functions
1397:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   - Core Register Access Functions
1398:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  ******************************************************************************/
1399:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1400:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** */
1402:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1403:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1404:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1405:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1407:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   @{
1411:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1412:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1413:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1414:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Set Priority Grouping
1415:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            Only values from 0..7 are used.
1418:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
ARM GAS  /tmp/ccIxWip2.s 			page 50


1421:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1422:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1424:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t reg_value;
1425:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1427:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1434:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1435:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1436:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1437:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Get Priority Grouping
1438:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1441:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1443:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1445:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1446:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1447:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1448:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Enable External Interrupt
1449:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1452:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1454:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1456:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1457:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1458:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1459:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Disable External Interrupt
1460:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1463:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1465:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1467:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1468:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1469:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1470:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Get Pending Interrupt
1471:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1476:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccIxWip2.s 			page 51


1478:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1480:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1481:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1482:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1483:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Set Pending Interrupt
1484:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1487:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1489:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1491:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1492:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1493:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1494:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1498:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1500:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1502:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1503:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1504:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1505:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Get Active Interrupt
1506:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return             1  Interrupt status is active.
1510:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1511:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1513:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1514:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1515:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1516:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1517:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1518:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Set Interrupt Priority
1519:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1524:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1526:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
1528:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   }
1530:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   else
1531:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
1532:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   }
1534:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
ARM GAS  /tmp/ccIxWip2.s 			page 52


1535:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1536:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1537:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1538:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Get Interrupt Priority
1539:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return             Interrupt Priority.
1544:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1546:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1548:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1549:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
1551:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   }
1553:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   else
1554:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   {
1555:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   }
1557:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1558:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1559:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1560:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1561:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Encode Priority
1562:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1571:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1573:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t SubPriorityBits;
1576:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1577:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1578:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1579:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1580:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   return (
1581:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1582:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1583:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****          );
1584:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1585:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1586:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1587:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1588:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   Decode Priority
1589:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            preemptive priority value and subpriority value.
1591:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
ARM GAS  /tmp/ccIxWip2.s 			page 53


1592:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1598:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1600:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   uint32_t SubPriorityBits;
1603:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1604:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1605:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1606:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1607:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** }
1610:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1611:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** 
1612:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** /**
1613:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \brief   System Reset
1614:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****  */
1616:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h **** {
1618:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                                                                        buffered write are completed
1620:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 677              		.loc 3 1621 0
 678 025a 5149     		ldr	r1, .L73+4
 679 025c CA68     		ldr	r2, [r1, #12]
 680 025e 02F4E062 		and	r2, r2, #1792
1620:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 681              		.loc 3 1620 0
 682 0262 504B     		ldr	r3, .L73+8
 683 0264 1343     		orrs	r3, r3, r2
 684 0266 CB60     		str	r3, [r1, #12]
 685              	.LBB25:
 686              	.LBB26:
 687              		.loc 2 429 0
 688              		.syntax unified
 689              	@ 429 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h" 1
 690 0268 BFF34F8F 		dsb 0xF
 691              	@ 0 "" 2
 692              		.thumb
 693              		.syntax unified
 694              	.L52:
 695              	.LBE26:
 696              	.LBE25:
 697              	.LBB27:
 698              	.LBB28:
 375:/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h **** }
 699              		.loc 2 375 0
 700              		.syntax unified
 701              	@ 375 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/cmsis_gcc.h" 1
ARM GAS  /tmp/ccIxWip2.s 			page 54


 702 026c 00BF     		nop
 703              	@ 0 "" 2
 704              		.thumb
 705              		.syntax unified
 706 026e FDE7     		b	.L52
 707              	.L64:
 708              	.LBE28:
 709              	.LBE27:
 710              	.LBE22:
 711              	.LBE21:
 238:drivers/MPU6050.c **** 	  	 printf("mpu_set_sensor complete ......\r\n");
 712              		.loc 1 238 0
 713 0270 7820     		movs	r0, #120
 714 0272 FFF7FEFF 		bl	mpu_set_sensors
 715              	.LVL72:
 716 0276 0028     		cmp	r0, #0
 717 0278 39D0     		beq	.L65
 718              	.L54:
 240:drivers/MPU6050.c **** 	  	 printf("mpu_configure_fifo complete ......\r\n");
 719              		.loc 1 240 0
 720 027a 7820     		movs	r0, #120
 721 027c FFF7FEFF 		bl	mpu_configure_fifo
 722              	.LVL73:
 723 0280 0028     		cmp	r0, #0
 724 0282 38D0     		beq	.L66
 725              	.L55:
 242:drivers/MPU6050.c **** 	  	 printf("mpu_set_sample_rate complete ......\r\n");
 726              		.loc 1 242 0
 727 0284 C820     		movs	r0, #200
 728 0286 FFF7FEFF 		bl	mpu_set_sample_rate
 729              	.LVL74:
 730 028a 0028     		cmp	r0, #0
 731 028c 37D0     		beq	.L67
 732              	.L56:
 244:drivers/MPU6050.c **** 	  	printf("dmp_load_motion_driver_firmware complete ......\r\n");
 733              		.loc 1 244 0
 734 028e FFF7FEFF 		bl	dmp_load_motion_driver_firmware
 735              	.LVL75:
 736 0292 0028     		cmp	r0, #0
 737 0294 37D0     		beq	.L68
 738              	.L57:
 739              	.LVL76:
 740              	.LBB29:
 741              	.LBB30:
  49:drivers/MPU6050.c ****   scalar |= inv_row_2_scale(mtx + 3) << 3;
 742              		.loc 1 49 0
 743 0296 444C     		ldr	r4, .L73+12
 744 0298 2046     		mov	r0, r4
 745 029a FFF7B1FE 		bl	inv_row_2_scale
 746              	.LVL77:
 747 029e 0546     		mov	r5, r0
 748              	.LVL78:
  50:drivers/MPU6050.c ****   scalar |= inv_row_2_scale(mtx + 6) << 6;
 749              		.loc 1 50 0
 750 02a0 E01C     		adds	r0, r4, #3
 751 02a2 FFF7ADFE 		bl	inv_row_2_scale
 752              	.LVL79:
ARM GAS  /tmp/ccIxWip2.s 			page 55


 753 02a6 0646     		mov	r6, r0
 754              	.LVL80:
  51:drivers/MPU6050.c **** 
 755              		.loc 1 51 0
 756 02a8 A01D     		adds	r0, r4, #6
 757 02aa FFF7A9FE 		bl	inv_row_2_scale
 758              	.LVL81:
 759 02ae 8001     		lsls	r0, r0, #6
 760 02b0 40EAC600 		orr	r0, r0, r6, lsl #3
 761 02b4 2843     		orrs	r0, r0, r5
 762              	.LVL82:
 763              	.LBE30:
 764              	.LBE29:
 246:drivers/MPU6050.c **** 	  	 printf("dmp_set_orientation complete ......\r\n");
 765              		.loc 1 246 0
 766 02b6 80B2     		uxth	r0, r0
 767 02b8 FFF7FEFF 		bl	dmp_set_orientation
 768              	.LVL83:
 769 02bc 38B3     		cbz	r0, .L69
 770              	.L58:
 248:drivers/MPU6050.c **** 	        DMP_FEATURE_ANDROID_ORIENT | DMP_FEATURE_SEND_RAW_ACCEL | DMP_FEATURE_SEND_CAL_GYRO |
 771              		.loc 1 248 0
 772 02be 40F27310 		movw	r0, #371
 773 02c2 FFF7FEFF 		bl	dmp_enable_feature
 774              	.LVL84:
 775 02c6 30B3     		cbz	r0, .L70
 776              	.L59:
 252:drivers/MPU6050.c **** 	  	 printf("dmp_set_fifo_rate complete ......\r\n");
 777              		.loc 1 252 0
 778 02c8 C820     		movs	r0, #200
 779 02ca FFF7FEFF 		bl	dmp_set_fifo_rate
 780              	.LVL85:
 781 02ce 30B3     		cbz	r0, .L71
 782              	.L60:
 783              	.LBB31:
 784              	.LBB32:
  62:drivers/MPU6050.c ****   if (result == 0x7) {
 785              		.loc 1 62 0
 786 02d0 06A9     		add	r1, sp, #24
 787 02d2 03A8     		add	r0, sp, #12
 788 02d4 FFF7FEFF 		bl	mpu_run_self_test
 789              	.LVL86:
  63:drivers/MPU6050.c ****     /* Test passed. We can trust the gyro data here, so let's push it down
 790              		.loc 1 63 0
 791 02d8 0728     		cmp	r0, #7
 792 02da 24D0     		beq	.L72
 793              	.LVL87:
 794              	.L61:
 795              	.LBE32:
 796              	.LBE31:
 255:drivers/MPU6050.c **** 	  	 printf("mpu_set_dmp_state complete ......\r\n");
 797              		.loc 1 255 0
 798 02dc 0120     		movs	r0, #1
 799 02de FFF7FEFF 		bl	mpu_set_dmp_state
 800              	.LVL88:
 801 02e2 0028     		cmp	r0, #0
 802 02e4 B5D1     		bne	.L50
ARM GAS  /tmp/ccIxWip2.s 			page 56


 256:drivers/MPU6050.c ****   }
 803              		.loc 1 256 0
 804 02e6 3148     		ldr	r0, .L73+16
 805 02e8 FFF7FEFF 		bl	puts
 806              	.LVL89:
 807              		.loc 1 258 0
 808 02ec B1E7     		b	.L50
 809              	.L65:
 239:drivers/MPU6050.c **** 	  if(!mpu_configure_fifo(INV_XYZ_GYRO | INV_XYZ_ACCEL))
 810              		.loc 1 239 0
 811 02ee 2B48     		ldr	r0, .L73
 812 02f0 FFF7FEFF 		bl	puts
 813              	.LVL90:
 814 02f4 C1E7     		b	.L54
 815              	.L66:
 241:drivers/MPU6050.c **** 	  if(!mpu_set_sample_rate(DEFAULT_MPU_HZ))
 816              		.loc 1 241 0
 817 02f6 2E48     		ldr	r0, .L73+20
 818 02f8 FFF7FEFF 		bl	puts
 819              	.LVL91:
 820 02fc C2E7     		b	.L55
 821              	.L67:
 243:drivers/MPU6050.c **** 	  if(!dmp_load_motion_driver_firmware())
 822              		.loc 1 243 0
 823 02fe 2D48     		ldr	r0, .L73+24
 824 0300 FFF7FEFF 		bl	puts
 825              	.LVL92:
 826 0304 C3E7     		b	.L56
 827              	.L68:
 245:drivers/MPU6050.c **** 	  if(!dmp_set_orientation(inv_orientation_matrix_to_scalar(gyro_orientation)))
 828              		.loc 1 245 0
 829 0306 2C48     		ldr	r0, .L73+28
 830 0308 FFF7FEFF 		bl	puts
 831              	.LVL93:
 832 030c C3E7     		b	.L57
 833              	.L69:
 247:drivers/MPU6050.c **** 	  if(!dmp_enable_feature(DMP_FEATURE_6X_LP_QUAT | DMP_FEATURE_TAP |
 834              		.loc 1 247 0
 835 030e 2B48     		ldr	r0, .L73+32
 836 0310 FFF7FEFF 		bl	puts
 837              	.LVL94:
 838 0314 D3E7     		b	.L58
 839              	.L70:
 251:drivers/MPU6050.c **** 	  if(!dmp_set_fifo_rate(DEFAULT_MPU_HZ))
 840              		.loc 1 251 0
 841 0316 2A48     		ldr	r0, .L73+36
 842 0318 FFF7FEFF 		bl	puts
 843              	.LVL95:
 844 031c D4E7     		b	.L59
 845              	.L71:
 253:drivers/MPU6050.c **** 	  run_self_test();
 846              		.loc 1 253 0
 847 031e 2948     		ldr	r0, .L73+40
 848 0320 FFF7FEFF 		bl	puts
 849              	.LVL96:
 850 0324 D4E7     		b	.L60
 851              	.LVL97:
ARM GAS  /tmp/ccIxWip2.s 			page 57


 852              	.L72:
 853              	.LBB35:
 854              	.LBB34:
 855              	.LBB33:
  69:drivers/MPU6050.c ****     gyro[0] = (long)(gyro[0] * sens);
 856              		.loc 1 69 0
 857 0326 02A8     		add	r0, sp, #8
 858              	.LVL98:
 859 0328 FFF7FEFF 		bl	mpu_get_gyro_sens
 860              	.LVL99:
  70:drivers/MPU6050.c ****     gyro[1] = (long)(gyro[1] * sens);
 861              		.loc 1 70 0
 862 032c 029C     		ldr	r4, [sp, #8]	@ float
 863 032e 0398     		ldr	r0, [sp, #12]
 864 0330 FFF7FEFF 		bl	__aeabi_i2f
 865              	.LVL100:
 866 0334 2146     		mov	r1, r4
 867 0336 FFF7FEFF 		bl	__aeabi_fmul
 868              	.LVL101:
 869 033a FFF7FEFF 		bl	__aeabi_f2iz
 870              	.LVL102:
 871 033e 0390     		str	r0, [sp, #12]
  71:drivers/MPU6050.c ****     gyro[2] = (long)(gyro[2] * sens);
 872              		.loc 1 71 0
 873 0340 0498     		ldr	r0, [sp, #16]
 874 0342 FFF7FEFF 		bl	__aeabi_i2f
 875              	.LVL103:
 876 0346 2146     		mov	r1, r4
 877 0348 FFF7FEFF 		bl	__aeabi_fmul
 878              	.LVL104:
 879 034c FFF7FEFF 		bl	__aeabi_f2iz
 880              	.LVL105:
 881 0350 0490     		str	r0, [sp, #16]
  72:drivers/MPU6050.c ****     dmp_set_gyro_bias(gyro);
 882              		.loc 1 72 0
 883 0352 0598     		ldr	r0, [sp, #20]
 884 0354 FFF7FEFF 		bl	__aeabi_i2f
 885              	.LVL106:
 886 0358 2146     		mov	r1, r4
 887 035a FFF7FEFF 		bl	__aeabi_fmul
 888              	.LVL107:
 889 035e FFF7FEFF 		bl	__aeabi_f2iz
 890              	.LVL108:
 891 0362 0590     		str	r0, [sp, #20]
  73:drivers/MPU6050.c ****     mpu_get_accel_sens(&accel_sens);
 892              		.loc 1 73 0
 893 0364 03A8     		add	r0, sp, #12
 894 0366 FFF7FEFF 		bl	dmp_set_gyro_bias
 895              	.LVL109:
  74:drivers/MPU6050.c ****     accel[0] *= accel_sens;
 896              		.loc 1 74 0
 897 036a 0DF10600 		add	r0, sp, #6
 898 036e FFF7FEFF 		bl	mpu_get_accel_sens
 899              	.LVL110:
  75:drivers/MPU6050.c ****     accel[1] *= accel_sens;
 900              		.loc 1 75 0
 901 0372 BDF80630 		ldrh	r3, [sp, #6]
ARM GAS  /tmp/ccIxWip2.s 			page 58


 902 0376 069A     		ldr	r2, [sp, #24]
 903 0378 03FB02F2 		mul	r2, r3, r2
 904 037c 0692     		str	r2, [sp, #24]
  76:drivers/MPU6050.c ****     accel[2] *= accel_sens;
 905              		.loc 1 76 0
 906 037e 079A     		ldr	r2, [sp, #28]
 907 0380 03FB02F2 		mul	r2, r3, r2
 908 0384 0792     		str	r2, [sp, #28]
  77:drivers/MPU6050.c ****     dmp_set_accel_bias(accel);
 909              		.loc 1 77 0
 910 0386 089A     		ldr	r2, [sp, #32]
 911 0388 03FB02F3 		mul	r3, r3, r2
 912 038c 0893     		str	r3, [sp, #32]
  78:drivers/MPU6050.c **** 	printf("setting bias succesfully ......\r\n");
 913              		.loc 1 78 0
 914 038e 06A8     		add	r0, sp, #24
 915 0390 FFF7FEFF 		bl	dmp_set_accel_bias
 916              	.LVL111:
  79:drivers/MPU6050.c ****   }
 917              		.loc 1 79 0
 918 0394 0C48     		ldr	r0, .L73+44
 919 0396 FFF7FEFF 		bl	puts
 920              	.LVL112:
 921 039a 9FE7     		b	.L61
 922              	.L74:
 923              		.align	2
 924              	.L73:
 925 039c 00000000 		.word	.LC0
 926 03a0 00ED00E0 		.word	-536810240
 927 03a4 0400FA05 		.word	100270084
 928 03a8 00000000 		.word	.LANCHOR1
 929 03ac 34010000 		.word	.LC8
 930 03b0 20000000 		.word	.LC1
 931 03b4 44000000 		.word	.LC2
 932 03b8 6C000000 		.word	.LC3
 933 03bc A0000000 		.word	.LC4
 934 03c0 C8000000 		.word	.LC5
 935 03c4 EC000000 		.word	.LC6
 936 03c8 10010000 		.word	.LC7
 937              	.LBE33:
 938              	.LBE34:
 939              	.LBE35:
 940              		.cfi_endproc
 941              	.LFE77:
 942              		.size	DMP_Init, .-DMP_Init
 943              		.global	__aeabi_fadd
 944              		.global	__aeabi_f2d
 945              		.global	__aeabi_dmul
 946              		.global	__aeabi_d2f
 947              		.align	1
 948              		.global	Read_DMP
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu softvfp
 953              		.type	Read_DMP, %function
 954              	Read_DMP:
ARM GAS  /tmp/ccIxWip2.s 			page 59


 955              	.LFB78:
 259:drivers/MPU6050.c **** 
 260:drivers/MPU6050.c **** //MPU6050内置DMP的姿态信息
 261:drivers/MPU6050.c **** void Read_DMP(void)
 262:drivers/MPU6050.c **** {	
 956              		.loc 1 262 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 24
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960 03cc 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 961              		.cfi_def_cfa_offset 24
 962              		.cfi_offset 4, -24
 963              		.cfi_offset 5, -20
 964              		.cfi_offset 6, -16
 965              		.cfi_offset 7, -12
 966              		.cfi_offset 8, -8
 967              		.cfi_offset 14, -4
 968 03d0 88B0     		sub	sp, sp, #32
 969              		.cfi_def_cfa_offset 56
 263:drivers/MPU6050.c **** 	  unsigned long sensor_timestamp;
 264:drivers/MPU6050.c **** 		unsigned char more;
 265:drivers/MPU6050.c **** 		long quat[4];
 266:drivers/MPU6050.c **** 
 267:drivers/MPU6050.c **** 				dmp_read_fifo(gyro, accel, quat, &sensor_timestamp, &sensors, &more);		
 970              		.loc 1 267 0
 971 03d2 334C     		ldr	r4, .L78+8
 972 03d4 0DF11B03 		add	r3, sp, #27
 973 03d8 0193     		str	r3, [sp, #4]
 974 03da 04F59373 		add	r3, r4, #294
 975 03de 0093     		str	r3, [sp]
 976 03e0 07AB     		add	r3, sp, #28
 977 03e2 02AA     		add	r2, sp, #8
 978 03e4 04F58C71 		add	r1, r4, #280
 979 03e8 04F59070 		add	r0, r4, #288
 980 03ec FFF7FEFF 		bl	dmp_read_fifo
 981              	.LVL113:
 268:drivers/MPU6050.c **** 				if (sensors & INV_WXYZ_QUAT )
 982              		.loc 1 268 0
 983 03f0 B4F82631 		ldrh	r3, [r4, #294]
 984 03f4 13F4807F 		tst	r3, #256
 985 03f8 48D0     		beq	.L75
 269:drivers/MPU6050.c **** 				{    
 270:drivers/MPU6050.c **** 					q0=quat[0] / q30;
 986              		.loc 1 270 0
 987 03fa 0298     		ldr	r0, [sp, #8]
 988 03fc FFF7FEFF 		bl	__aeabi_i2f
 989              	.LVL114:
 990 0400 4FF04251 		mov	r1, #813694976
 991 0404 FFF7FEFF 		bl	__aeabi_fmul
 992              	.LVL115:
 993 0408 0546     		mov	r5, r0
 994 040a 264B     		ldr	r3, .L78+12
 995 040c D860     		str	r0, [r3, #12]	@ float
 271:drivers/MPU6050.c **** 					q1=quat[1] / q30;
 996              		.loc 1 271 0
 997 040e 0398     		ldr	r0, [sp, #12]
 998 0410 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  /tmp/ccIxWip2.s 			page 60


 999              	.LVL116:
 1000 0414 4FF04251 		mov	r1, #813694976
 1001 0418 FFF7FEFF 		bl	__aeabi_fmul
 1002              	.LVL117:
 1003 041c 8046     		mov	r8, r0
 1004 041e C4F82801 		str	r0, [r4, #296]	@ float
 272:drivers/MPU6050.c **** 					q2=quat[2] / q30;
 1005              		.loc 1 272 0
 1006 0422 0498     		ldr	r0, [sp, #16]
 1007 0424 FFF7FEFF 		bl	__aeabi_i2f
 1008              	.LVL118:
 1009 0428 4FF04251 		mov	r1, #813694976
 1010 042c FFF7FEFF 		bl	__aeabi_fmul
 1011              	.LVL119:
 1012 0430 0646     		mov	r6, r0
 1013 0432 C4F82C01 		str	r0, [r4, #300]	@ float
 273:drivers/MPU6050.c **** 					q3=quat[3] / q30;
 1014              		.loc 1 273 0
 1015 0436 0598     		ldr	r0, [sp, #20]
 1016 0438 FFF7FEFF 		bl	__aeabi_i2f
 1017              	.LVL120:
 1018 043c 4FF04251 		mov	r1, #813694976
 1019 0440 FFF7FEFF 		bl	__aeabi_fmul
 1020              	.LVL121:
 1021 0444 0746     		mov	r7, r0
 1022 0446 C4F83001 		str	r0, [r4, #304]	@ float
 274:drivers/MPU6050.c **** 					Pitch = asin(-2 * q1 * q3 + 2 * q0* q2)* 57.3; 	
 1023              		.loc 1 274 0
 1024 044a 4FF04041 		mov	r1, #-1073741824
 1025 044e 4046     		mov	r0, r8
 1026 0450 FFF7FEFF 		bl	__aeabi_fmul
 1027              	.LVL122:
 1028 0454 3946     		mov	r1, r7
 1029 0456 FFF7FEFF 		bl	__aeabi_fmul
 1030              	.LVL123:
 1031 045a 0746     		mov	r7, r0
 1032 045c 2946     		mov	r1, r5
 1033 045e 2846     		mov	r0, r5
 1034 0460 FFF7FEFF 		bl	__aeabi_fadd
 1035              	.LVL124:
 1036 0464 3146     		mov	r1, r6
 1037 0466 FFF7FEFF 		bl	__aeabi_fmul
 1038              	.LVL125:
 1039 046a 0146     		mov	r1, r0
 1040 046c 3846     		mov	r0, r7
 1041 046e FFF7FEFF 		bl	__aeabi_fadd
 1042              	.LVL126:
 1043 0472 FFF7FEFF 		bl	__aeabi_f2d
 1044              	.LVL127:
 1045 0476 FFF7FEFF 		bl	asin
 1046              	.LVL128:
 1047 047a 07A3     		adr	r3, .L78
 1048 047c D3E90023 		ldrd	r2, [r3]
 1049 0480 FFF7FEFF 		bl	__aeabi_dmul
 1050              	.LVL129:
 1051 0484 FFF7FEFF 		bl	__aeabi_d2f
 1052              	.LVL130:
ARM GAS  /tmp/ccIxWip2.s 			page 61


 1053 0488 C4F83401 		str	r0, [r4, #308]	@ float
 1054              	.L75:
 275:drivers/MPU6050.c **** 				}
 276:drivers/MPU6050.c **** 
 277:drivers/MPU6050.c **** }
 1055              		.loc 1 277 0
 1056 048c 08B0     		add	sp, sp, #32
 1057              		.cfi_def_cfa_offset 24
 1058              		@ sp needed
 1059 048e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1060              	.L79:
 1061 0492 00BFAFF3 		.align	3
 1061      0080
 1062              	.L78:
 1063 0498 66666666 		.word	1717986918
 1064 049c 66A64C40 		.word	1078765158
 1065 04a0 00000000 		.word	.LANCHOR0
 1066 04a4 00000000 		.word	.LANCHOR1
 1067              		.cfi_endproc
 1068              	.LFE78:
 1069              		.size	Read_DMP, .-Read_DMP
 1070              		.global	__aeabi_fcmpgt
 1071              		.global	__aeabi_fsub
 1072              		.global	__aeabi_fdiv
 1073              		.global	__aeabi_dadd
 1074              		.align	1
 1075              		.global	Read_Temperature
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1080              		.type	Read_Temperature, %function
 1081              	Read_Temperature:
 1082              	.LFB79:
 278:drivers/MPU6050.c **** // 读取MPU6050内置温度传感器数据
 279:drivers/MPU6050.c **** int Read_Temperature(void)
 280:drivers/MPU6050.c **** {	   
 1083              		.loc 1 280 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087 04a8 10B5     		push	{r4, lr}
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 4, -8
 1090              		.cfi_offset 14, -4
 281:drivers/MPU6050.c **** 	  float Temp;
 282:drivers/MPU6050.c **** 	  Temp=(I2C_ByteRead(devAddr,MPU6050_RA_TEMP_OUT_H)<<8)+I2C_ByteRead(devAddr,MPU6050_RA_TEMP_OUT_L
 1091              		.loc 1 282 0
 1092 04aa 4121     		movs	r1, #65
 1093 04ac D020     		movs	r0, #208
 1094 04ae FFF7FEFF 		bl	I2C_ByteRead
 1095              	.LVL131:
 1096 04b2 0446     		mov	r4, r0
 1097 04b4 4221     		movs	r1, #66
 1098 04b6 D020     		movs	r0, #208
 1099 04b8 FFF7FEFF 		bl	I2C_ByteRead
 1100              	.LVL132:
ARM GAS  /tmp/ccIxWip2.s 			page 62


 1101 04bc 00EB0420 		add	r0, r0, r4, lsl #8
 1102 04c0 FFF7FEFF 		bl	__aeabi_i2f
 1103              	.LVL133:
 1104 04c4 0446     		mov	r4, r0
 1105              	.LVL134:
 283:drivers/MPU6050.c **** 		if(Temp>32768) Temp-=65536;
 1106              		.loc 1 283 0
 1107 04c6 4FF08E41 		mov	r1, #1191182336
 1108 04ca FFF7FEFF 		bl	__aeabi_fcmpgt
 1109              	.LVL135:
 1110 04ce 28B1     		cbz	r0, .L81
 1111              		.loc 1 283 0 is_stmt 0 discriminator 1
 1112 04d0 4FF08F41 		mov	r1, #1199570944
 1113 04d4 2046     		mov	r0, r4
 1114 04d6 FFF7FEFF 		bl	__aeabi_fsub
 1115              	.LVL136:
 1116 04da 0446     		mov	r4, r0
 1117              	.LVL137:
 1118              	.L81:
 284:drivers/MPU6050.c **** 		Temp=(36.53+Temp/340)*10;
 1119              		.loc 1 284 0 is_stmt 1
 1120 04dc 0C49     		ldr	r1, .L85+8
 1121 04de 2046     		mov	r0, r4
 1122 04e0 FFF7FEFF 		bl	__aeabi_fdiv
 1123              	.LVL138:
 1124 04e4 FFF7FEFF 		bl	__aeabi_f2d
 1125              	.LVL139:
 1126 04e8 07A3     		adr	r3, .L85
 1127 04ea D3E90023 		ldrd	r2, [r3]
 1128 04ee FFF7FEFF 		bl	__aeabi_dadd
 1129              	.LVL140:
 1130 04f2 0022     		movs	r2, #0
 1131 04f4 074B     		ldr	r3, .L85+12
 1132 04f6 FFF7FEFF 		bl	__aeabi_dmul
 1133              	.LVL141:
 1134 04fa FFF7FEFF 		bl	__aeabi_d2f
 1135              	.LVL142:
 285:drivers/MPU6050.c **** 	  return (int)Temp;
 1136              		.loc 1 285 0
 1137 04fe FFF7FEFF 		bl	__aeabi_f2iz
 1138              	.LVL143:
 286:drivers/MPU6050.c **** }
 1139              		.loc 1 286 0
 1140 0502 10BD     		pop	{r4, pc}
 1141              	.L86:
 1142 0504 AFF30080 		.align	3
 1143              	.L85:
 1144 0508 A4703D0A 		.word	171798692
 1145 050c D7434240 		.word	1078084567
 1146 0510 0000AA43 		.word	1135214592
 1147 0514 00002440 		.word	1076101120
 1148              		.cfi_endproc
 1149              	.LFE79:
 1150              		.size	Read_Temperature, .-Read_Temperature
 1151              		.global	Gz_offset
 1152              		.global	Gy_offset
 1153              		.global	Gx_offset
ARM GAS  /tmp/ccIxWip2.s 			page 63


 1154              		.global	MPU6050_FIFO
 1155              		.global	buffer
 1156              		.global	q3
 1157              		.global	q2
 1158              		.global	q1
 1159              		.global	q0
 1160              		.global	Pitch
 1161              		.global	sensors
 1162              		.global	accel
 1163              		.global	gyro
 1164              		.data
 1165              		.align	2
 1166              		.set	.LANCHOR1,. + 0
 1167              		.type	gyro_orientation, %object
 1168              		.size	gyro_orientation, 9
 1169              	gyro_orientation:
 1170 0000 FF       		.byte	-1
 1171 0001 00       		.byte	0
 1172 0002 00       		.byte	0
 1173 0003 00       		.byte	0
 1174 0004 FF       		.byte	-1
 1175 0005 00       		.byte	0
 1176 0006 00       		.byte	0
 1177 0007 00       		.byte	0
 1178 0008 01       		.byte	1
 1179 0009 000000   		.space	3
 1180              		.type	q0, %object
 1181              		.size	q0, 4
 1182              	q0:
 1183 000c 0000803F 		.word	1065353216
 1184              		.bss
 1185              		.align	2
 1186              		.set	.LANCHOR0,. + 0
 1187              		.type	MPU6050_FIFO, %object
 1188              		.size	MPU6050_FIFO, 264
 1189              	MPU6050_FIFO:
 1190 0000 00000000 		.space	264
 1190      00000000 
 1190      00000000 
 1190      00000000 
 1190      00000000 
 1191              		.type	buffer, %object
 1192              		.size	buffer, 14
 1193              	buffer:
 1194 0108 00000000 		.space	14
 1194      00000000 
 1194      00000000 
 1194      0000
 1195 0116 0000     		.space	2
 1196              		.type	accel, %object
 1197              		.size	accel, 6
 1198              	accel:
 1199 0118 00000000 		.space	6
 1199      0000
 1200 011e 0000     		.space	2
 1201              		.type	gyro, %object
 1202              		.size	gyro, 6
ARM GAS  /tmp/ccIxWip2.s 			page 64


 1203              	gyro:
 1204 0120 00000000 		.space	6
 1204      0000
 1205              		.type	sensors, %object
 1206              		.size	sensors, 2
 1207              	sensors:
 1208 0126 0000     		.space	2
 1209              		.type	q1, %object
 1210              		.size	q1, 4
 1211              	q1:
 1212 0128 00000000 		.space	4
 1213              		.type	q2, %object
 1214              		.size	q2, 4
 1215              	q2:
 1216 012c 00000000 		.space	4
 1217              		.type	q3, %object
 1218              		.size	q3, 4
 1219              	q3:
 1220 0130 00000000 		.space	4
 1221              		.type	Pitch, %object
 1222              		.size	Pitch, 4
 1223              	Pitch:
 1224 0134 00000000 		.space	4
 1225              		.type	Gz_offset, %object
 1226              		.size	Gz_offset, 4
 1227              	Gz_offset:
 1228 0138 00000000 		.space	4
 1229              		.type	Gy_offset, %object
 1230              		.size	Gy_offset, 4
 1231              	Gy_offset:
 1232 013c 00000000 		.space	4
 1233              		.type	Gx_offset, %object
 1234              		.size	Gx_offset, 4
 1235              	Gx_offset:
 1236 0140 00000000 		.space	4
 1237              		.section	.rodata.str1.4,"aMS",%progbits,1
 1238              		.align	2
 1239              	.LC0:
 1240 0000 6D70755F 		.ascii	"mpu_set_sensor complete ......\015\000"
 1240      7365745F 
 1240      73656E73 
 1240      6F722063 
 1240      6F6D706C 
 1241              	.LC1:
 1242 0020 6D70755F 		.ascii	"mpu_configure_fifo complete ......\015\000"
 1242      636F6E66 
 1242      69677572 
 1242      655F6669 
 1242      666F2063 
 1243              	.LC2:
 1244 0044 6D70755F 		.ascii	"mpu_set_sample_rate complete ......\015\000"
 1244      7365745F 
 1244      73616D70 
 1244      6C655F72 
 1244      61746520 
 1245 0069 000000   		.space	3
 1246              	.LC3:
ARM GAS  /tmp/ccIxWip2.s 			page 65


 1247 006c 646D705F 		.ascii	"dmp_load_motion_driver_firmware complete ......\015"
 1247      6C6F6164 
 1247      5F6D6F74 
 1247      696F6E5F 
 1247      64726976 
 1248 009c 00       		.ascii	"\000"
 1249 009d 000000   		.space	3
 1250              	.LC4:
 1251 00a0 646D705F 		.ascii	"dmp_set_orientation complete ......\015\000"
 1251      7365745F 
 1251      6F726965 
 1251      6E746174 
 1251      696F6E20 
 1252 00c5 000000   		.space	3
 1253              	.LC5:
 1254 00c8 646D705F 		.ascii	"dmp_enable_feature complete ......\015\000"
 1254      656E6162 
 1254      6C655F66 
 1254      65617475 
 1254      72652063 
 1255              	.LC6:
 1256 00ec 646D705F 		.ascii	"dmp_set_fifo_rate complete ......\015\000"
 1256      7365745F 
 1256      6669666F 
 1256      5F726174 
 1256      6520636F 
 1257 010f 00       		.space	1
 1258              	.LC7:
 1259 0110 73657474 		.ascii	"setting bias succesfully ......\015\000"
 1259      696E6720 
 1259      62696173 
 1259      20737563 
 1259      63657366 
 1260 0131 000000   		.space	3
 1261              	.LC8:
 1262 0134 6D70755F 		.ascii	"mpu_set_dmp_state complete ......\015\000"
 1262      7365745F 
 1262      646D705F 
 1262      73746174 
 1262      6520636F 
 1263              		.text
 1264              	.Letext0:
 1265              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1266              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1267              		.file 6 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/system_stm32f10x.h"
 1268              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 1269              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 1270              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 1271              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 1272              		.file 11 "/usr/arm-none-eabi/include/stdlib.h"
 1273              		.file 12 "/usr/arm-none-eabi/include/math.h"
 1274              		.file 13 "/usr/arm-none-eabi/include/sys/errno.h"
 1275              		.file 14 "drivers/MPU6050.h"
 1276              		.file 15 "drivers/tools.h"
 1277              		.file 16 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/inv_mpu_dmp_motion_driver.h"
 1278              		.file 17 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/inv_mpu.h"
 1279              		.file 18 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/stm32f10x.h"
ARM GAS  /tmp/ccIxWip2.s 			page 66


 1280              		.file 19 "<built-in>"
 1281              		.section	.debug_info,"",%progbits
 1282              	.Ldebug_info0:
 1283 0000 68150000 		.4byte	0x1568
 1284 0004 0400     		.2byte	0x4
 1285 0006 00000000 		.4byte	.Ldebug_abbrev0
 1286 000a 04       		.byte	0x4
 1287 000b 01       		.uleb128 0x1
 1288 000c C8020000 		.4byte	.LASF214
 1289 0010 01       		.byte	0x1
 1290 0011 00000000 		.4byte	.LASF215
 1291 0015 E9000000 		.4byte	.LASF216
 1292 0019 00000000 		.4byte	.Ltext0
 1293 001d 18050000 		.4byte	.Letext0-.Ltext0
 1294 0021 00000000 		.4byte	.Ldebug_line0
 1295 0025 02       		.uleb128 0x2
 1296 0026 08       		.byte	0x8
 1297 0027 04       		.byte	0x4
 1298 0028 77050000 		.4byte	.LASF0
 1299 002c 02       		.uleb128 0x2
 1300 002d 04       		.byte	0x4
 1301 002e 04       		.byte	0x4
 1302 002f 59090000 		.4byte	.LASF1
 1303 0033 02       		.uleb128 0x2
 1304 0034 01       		.byte	0x1
 1305 0035 06       		.byte	0x6
 1306 0036 16020000 		.4byte	.LASF2
 1307 003a 03       		.uleb128 0x3
 1308 003b 33000000 		.4byte	0x33
 1309 003f 04       		.uleb128 0x4
 1310 0040 27010000 		.4byte	.LASF6
 1311 0044 04       		.byte	0x4
 1312 0045 1D       		.byte	0x1d
 1313 0046 4A000000 		.4byte	0x4a
 1314 004a 02       		.uleb128 0x2
 1315 004b 01       		.byte	0x1
 1316 004c 08       		.byte	0x8
 1317 004d 57020000 		.4byte	.LASF3
 1318 0051 02       		.uleb128 0x2
 1319 0052 02       		.byte	0x2
 1320 0053 05       		.byte	0x5
 1321 0054 2D080000 		.4byte	.LASF4
 1322 0058 02       		.uleb128 0x2
 1323 0059 02       		.byte	0x2
 1324 005a 07       		.byte	0x7
 1325 005b C0010000 		.4byte	.LASF5
 1326 005f 04       		.uleb128 0x4
 1327 0060 AC090000 		.4byte	.LASF7
 1328 0064 04       		.byte	0x4
 1329 0065 3F       		.byte	0x3f
 1330 0066 6A000000 		.4byte	0x6a
 1331 006a 02       		.uleb128 0x2
 1332 006b 04       		.byte	0x4
 1333 006c 05       		.byte	0x5
 1334 006d 86010000 		.4byte	.LASF8
 1335 0071 04       		.uleb128 0x4
 1336 0072 03050000 		.4byte	.LASF9
ARM GAS  /tmp/ccIxWip2.s 			page 67


 1337 0076 04       		.byte	0x4
 1338 0077 41       		.byte	0x41
 1339 0078 7C000000 		.4byte	0x7c
 1340 007c 02       		.uleb128 0x2
 1341 007d 04       		.byte	0x4
 1342 007e 07       		.byte	0x7
 1343 007f 1F040000 		.4byte	.LASF10
 1344 0083 02       		.uleb128 0x2
 1345 0084 08       		.byte	0x8
 1346 0085 05       		.byte	0x5
 1347 0086 1E050000 		.4byte	.LASF11
 1348 008a 02       		.uleb128 0x2
 1349 008b 08       		.byte	0x8
 1350 008c 07       		.byte	0x7
 1351 008d E4060000 		.4byte	.LASF12
 1352 0091 05       		.uleb128 0x5
 1353 0092 04       		.byte	0x4
 1354 0093 05       		.byte	0x5
 1355 0094 696E7400 		.ascii	"int\000"
 1356 0098 02       		.uleb128 0x2
 1357 0099 04       		.byte	0x4
 1358 009a 07       		.byte	0x7
 1359 009b CE050000 		.4byte	.LASF13
 1360 009f 04       		.uleb128 0x4
 1361 00a0 22020000 		.4byte	.LASF14
 1362 00a4 05       		.byte	0x5
 1363 00a5 18       		.byte	0x18
 1364 00a6 3F000000 		.4byte	0x3f
 1365 00aa 06       		.uleb128 0x6
 1366 00ab 9F000000 		.4byte	0x9f
 1367 00af 04       		.uleb128 0x4
 1368 00b0 85000000 		.4byte	.LASF15
 1369 00b4 05       		.byte	0x5
 1370 00b5 2C       		.byte	0x2c
 1371 00b6 5F000000 		.4byte	0x5f
 1372 00ba 06       		.uleb128 0x6
 1373 00bb AF000000 		.4byte	0xaf
 1374 00bf 04       		.uleb128 0x4
 1375 00c0 1D090000 		.4byte	.LASF16
 1376 00c4 05       		.byte	0x5
 1377 00c5 30       		.byte	0x30
 1378 00c6 71000000 		.4byte	0x71
 1379 00ca 06       		.uleb128 0x6
 1380 00cb BF000000 		.4byte	0xbf
 1381 00cf 03       		.uleb128 0x3
 1382 00d0 CA000000 		.4byte	0xca
 1383 00d4 02       		.uleb128 0x2
 1384 00d5 04       		.byte	0x4
 1385 00d6 07       		.byte	0x7
 1386 00d7 12000000 		.4byte	.LASF17
 1387 00db 07       		.uleb128 0x7
 1388 00dc 8C       		.byte	0x8c
 1389 00dd 03       		.byte	0x3
 1390 00de A101     		.2byte	0x1a1
 1391 00e0 F6010000 		.4byte	0x1f6
 1392 00e4 08       		.uleb128 0x8
 1393 00e5 AB010000 		.4byte	.LASF18
ARM GAS  /tmp/ccIxWip2.s 			page 68


 1394 00e9 03       		.byte	0x3
 1395 00ea A301     		.2byte	0x1a3
 1396 00ec CF000000 		.4byte	0xcf
 1397 00f0 00       		.byte	0
 1398 00f1 08       		.uleb128 0x8
 1399 00f2 04020000 		.4byte	.LASF19
 1400 00f6 03       		.byte	0x3
 1401 00f7 A401     		.2byte	0x1a4
 1402 00f9 CA000000 		.4byte	0xca
 1403 00fd 04       		.byte	0x4
 1404 00fe 08       		.uleb128 0x8
 1405 00ff D9000000 		.4byte	.LASF20
 1406 0103 03       		.byte	0x3
 1407 0104 A501     		.2byte	0x1a5
 1408 0106 CA000000 		.4byte	0xca
 1409 010a 08       		.byte	0x8
 1410 010b 08       		.uleb128 0x8
 1411 010c 56010000 		.4byte	.LASF21
 1412 0110 03       		.byte	0x3
 1413 0111 A601     		.2byte	0x1a6
 1414 0113 CA000000 		.4byte	0xca
 1415 0117 0C       		.byte	0xc
 1416 0118 09       		.uleb128 0x9
 1417 0119 53435200 		.ascii	"SCR\000"
 1418 011d 03       		.byte	0x3
 1419 011e A701     		.2byte	0x1a7
 1420 0120 CA000000 		.4byte	0xca
 1421 0124 10       		.byte	0x10
 1422 0125 09       		.uleb128 0x9
 1423 0126 43435200 		.ascii	"CCR\000"
 1424 012a 03       		.byte	0x3
 1425 012b A801     		.2byte	0x1a8
 1426 012d CA000000 		.4byte	0xca
 1427 0131 14       		.byte	0x14
 1428 0132 09       		.uleb128 0x9
 1429 0133 53485000 		.ascii	"SHP\000"
 1430 0137 03       		.byte	0x3
 1431 0138 A901     		.2byte	0x1a9
 1432 013a 06020000 		.4byte	0x206
 1433 013e 18       		.byte	0x18
 1434 013f 08       		.uleb128 0x8
 1435 0140 92030000 		.4byte	.LASF22
 1436 0144 03       		.byte	0x3
 1437 0145 AA01     		.2byte	0x1aa
 1438 0147 CA000000 		.4byte	0xca
 1439 014b 24       		.byte	0x24
 1440 014c 08       		.uleb128 0x8
 1441 014d BC070000 		.4byte	.LASF23
 1442 0151 03       		.byte	0x3
 1443 0152 AB01     		.2byte	0x1ab
 1444 0154 CA000000 		.4byte	0xca
 1445 0158 28       		.byte	0x28
 1446 0159 08       		.uleb128 0x8
 1447 015a 6D030000 		.4byte	.LASF24
 1448 015e 03       		.byte	0x3
 1449 015f AC01     		.2byte	0x1ac
 1450 0161 CA000000 		.4byte	0xca
ARM GAS  /tmp/ccIxWip2.s 			page 69


 1451 0165 2C       		.byte	0x2c
 1452 0166 08       		.uleb128 0x8
 1453 0167 36030000 		.4byte	.LASF25
 1454 016b 03       		.byte	0x3
 1455 016c AD01     		.2byte	0x1ad
 1456 016e CA000000 		.4byte	0xca
 1457 0172 30       		.byte	0x30
 1458 0173 08       		.uleb128 0x8
 1459 0174 1A080000 		.4byte	.LASF26
 1460 0178 03       		.byte	0x3
 1461 0179 AE01     		.2byte	0x1ae
 1462 017b CA000000 		.4byte	0xca
 1463 017f 34       		.byte	0x34
 1464 0180 08       		.uleb128 0x8
 1465 0181 D1060000 		.4byte	.LASF27
 1466 0185 03       		.byte	0x3
 1467 0186 AF01     		.2byte	0x1af
 1468 0188 CA000000 		.4byte	0xca
 1469 018c 38       		.byte	0x38
 1470 018d 08       		.uleb128 0x8
 1471 018e AB070000 		.4byte	.LASF28
 1472 0192 03       		.byte	0x3
 1473 0193 B001     		.2byte	0x1b0
 1474 0195 CA000000 		.4byte	0xca
 1475 0199 3C       		.byte	0x3c
 1476 019a 09       		.uleb128 0x9
 1477 019b 50465200 		.ascii	"PFR\000"
 1478 019f 03       		.byte	0x3
 1479 01a0 B101     		.2byte	0x1b1
 1480 01a2 20020000 		.4byte	0x220
 1481 01a6 40       		.byte	0x40
 1482 01a7 09       		.uleb128 0x9
 1483 01a8 44465200 		.ascii	"DFR\000"
 1484 01ac 03       		.byte	0x3
 1485 01ad B201     		.2byte	0x1b2
 1486 01af CF000000 		.4byte	0xcf
 1487 01b3 48       		.byte	0x48
 1488 01b4 09       		.uleb128 0x9
 1489 01b5 41445200 		.ascii	"ADR\000"
 1490 01b9 03       		.byte	0x3
 1491 01ba B301     		.2byte	0x1b3
 1492 01bc CF000000 		.4byte	0xcf
 1493 01c0 4C       		.byte	0x4c
 1494 01c1 08       		.uleb128 0x8
 1495 01c2 15080000 		.4byte	.LASF29
 1496 01c6 03       		.byte	0x3
 1497 01c7 B401     		.2byte	0x1b4
 1498 01c9 3A020000 		.4byte	0x23a
 1499 01cd 50       		.byte	0x50
 1500 01ce 08       		.uleb128 0x8
 1501 01cf 67080000 		.4byte	.LASF30
 1502 01d3 03       		.byte	0x3
 1503 01d4 B501     		.2byte	0x1b5
 1504 01d6 54020000 		.4byte	0x254
 1505 01da 60       		.byte	0x60
 1506 01db 08       		.uleb128 0x8
 1507 01dc 4D020000 		.4byte	.LASF31
ARM GAS  /tmp/ccIxWip2.s 			page 70


 1508 01e0 03       		.byte	0x3
 1509 01e1 B601     		.2byte	0x1b6
 1510 01e3 59020000 		.4byte	0x259
 1511 01e7 74       		.byte	0x74
 1512 01e8 08       		.uleb128 0x8
 1513 01e9 69090000 		.4byte	.LASF32
 1514 01ed 03       		.byte	0x3
 1515 01ee B701     		.2byte	0x1b7
 1516 01f0 CA000000 		.4byte	0xca
 1517 01f4 88       		.byte	0x88
 1518 01f5 00       		.byte	0
 1519 01f6 0A       		.uleb128 0xa
 1520 01f7 AA000000 		.4byte	0xaa
 1521 01fb 06020000 		.4byte	0x206
 1522 01ff 0B       		.uleb128 0xb
 1523 0200 D4000000 		.4byte	0xd4
 1524 0204 0B       		.byte	0xb
 1525 0205 00       		.byte	0
 1526 0206 06       		.uleb128 0x6
 1527 0207 F6010000 		.4byte	0x1f6
 1528 020b 0A       		.uleb128 0xa
 1529 020c CF000000 		.4byte	0xcf
 1530 0210 1B020000 		.4byte	0x21b
 1531 0214 0B       		.uleb128 0xb
 1532 0215 D4000000 		.4byte	0xd4
 1533 0219 01       		.byte	0x1
 1534 021a 00       		.byte	0
 1535 021b 03       		.uleb128 0x3
 1536 021c 0B020000 		.4byte	0x20b
 1537 0220 06       		.uleb128 0x6
 1538 0221 1B020000 		.4byte	0x21b
 1539 0225 0A       		.uleb128 0xa
 1540 0226 CF000000 		.4byte	0xcf
 1541 022a 35020000 		.4byte	0x235
 1542 022e 0B       		.uleb128 0xb
 1543 022f D4000000 		.4byte	0xd4
 1544 0233 03       		.byte	0x3
 1545 0234 00       		.byte	0
 1546 0235 03       		.uleb128 0x3
 1547 0236 25020000 		.4byte	0x225
 1548 023a 06       		.uleb128 0x6
 1549 023b 35020000 		.4byte	0x235
 1550 023f 0A       		.uleb128 0xa
 1551 0240 CF000000 		.4byte	0xcf
 1552 0244 4F020000 		.4byte	0x24f
 1553 0248 0B       		.uleb128 0xb
 1554 0249 D4000000 		.4byte	0xd4
 1555 024d 04       		.byte	0x4
 1556 024e 00       		.byte	0
 1557 024f 03       		.uleb128 0x3
 1558 0250 3F020000 		.4byte	0x23f
 1559 0254 06       		.uleb128 0x6
 1560 0255 4F020000 		.4byte	0x24f
 1561 0259 0A       		.uleb128 0xa
 1562 025a BF000000 		.4byte	0xbf
 1563 025e 69020000 		.4byte	0x269
 1564 0262 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIxWip2.s 			page 71


 1565 0263 D4000000 		.4byte	0xd4
 1566 0267 04       		.byte	0x4
 1567 0268 00       		.byte	0
 1568 0269 0C       		.uleb128 0xc
 1569 026a B8020000 		.4byte	.LASF33
 1570 026e 03       		.byte	0x3
 1571 026f B801     		.2byte	0x1b8
 1572 0271 DB000000 		.4byte	0xdb
 1573 0275 0D       		.uleb128 0xd
 1574 0276 BB050000 		.4byte	.LASF34
 1575 027a 03       		.byte	0x3
 1576 027b 9606     		.2byte	0x696
 1577 027d BA000000 		.4byte	0xba
 1578 0281 0E       		.uleb128 0xe
 1579 0282 4C040000 		.4byte	.LASF35
 1580 0286 06       		.byte	0x6
 1581 0287 35       		.byte	0x35
 1582 0288 BF000000 		.4byte	0xbf
 1583 028c 0F       		.uleb128 0xf
 1584 028d 753800   		.ascii	"u8\000"
 1585 0290 12       		.byte	0x12
 1586 0291 F901     		.2byte	0x1f9
 1587 0293 9F000000 		.4byte	0x9f
 1588 0297 10       		.uleb128 0x10
 1589 0298 11       		.uleb128 0x11
 1590 0299 04       		.byte	0x4
 1591 029a 97020000 		.4byte	0x297
 1592 029e 12       		.uleb128 0x12
 1593 029f 04       		.byte	0x4
 1594 02a0 04       		.uleb128 0x4
 1595 02a1 5C040000 		.4byte	.LASF36
 1596 02a5 07       		.byte	0x7
 1597 02a6 07       		.byte	0x7
 1598 02a7 91000000 		.4byte	0x91
 1599 02ab 04       		.uleb128 0x4
 1600 02ac 3C090000 		.4byte	.LASF37
 1601 02b0 08       		.byte	0x8
 1602 02b1 2C       		.byte	0x2c
 1603 02b2 6A000000 		.4byte	0x6a
 1604 02b6 04       		.uleb128 0x4
 1605 02b7 C2060000 		.4byte	.LASF38
 1606 02bb 08       		.byte	0x8
 1607 02bc 72       		.byte	0x72
 1608 02bd 6A000000 		.4byte	0x6a
 1609 02c1 0C       		.uleb128 0xc
 1610 02c2 93070000 		.4byte	.LASF39
 1611 02c6 09       		.byte	0x9
 1612 02c7 6501     		.2byte	0x165
 1613 02c9 98000000 		.4byte	0x98
 1614 02cd 13       		.uleb128 0x13
 1615 02ce 04       		.byte	0x4
 1616 02cf 08       		.byte	0x8
 1617 02d0 A6       		.byte	0xa6
 1618 02d1 EC020000 		.4byte	0x2ec
 1619 02d5 14       		.uleb128 0x14
 1620 02d6 21010000 		.4byte	.LASF40
 1621 02da 08       		.byte	0x8
ARM GAS  /tmp/ccIxWip2.s 			page 72


 1622 02db A8       		.byte	0xa8
 1623 02dc C1020000 		.4byte	0x2c1
 1624 02e0 14       		.uleb128 0x14
 1625 02e1 CA060000 		.4byte	.LASF41
 1626 02e5 08       		.byte	0x8
 1627 02e6 A9       		.byte	0xa9
 1628 02e7 EC020000 		.4byte	0x2ec
 1629 02eb 00       		.byte	0
 1630 02ec 0A       		.uleb128 0xa
 1631 02ed 4A000000 		.4byte	0x4a
 1632 02f1 FC020000 		.4byte	0x2fc
 1633 02f5 0B       		.uleb128 0xb
 1634 02f6 D4000000 		.4byte	0xd4
 1635 02fa 03       		.byte	0x3
 1636 02fb 00       		.byte	0
 1637 02fc 15       		.uleb128 0x15
 1638 02fd 08       		.byte	0x8
 1639 02fe 08       		.byte	0x8
 1640 02ff A3       		.byte	0xa3
 1641 0300 1D030000 		.4byte	0x31d
 1642 0304 16       		.uleb128 0x16
 1643 0305 5A060000 		.4byte	.LASF42
 1644 0309 08       		.byte	0x8
 1645 030a A5       		.byte	0xa5
 1646 030b 91000000 		.4byte	0x91
 1647 030f 00       		.byte	0
 1648 0310 16       		.uleb128 0x16
 1649 0311 1B000000 		.4byte	.LASF43
 1650 0315 08       		.byte	0x8
 1651 0316 AA       		.byte	0xaa
 1652 0317 CD020000 		.4byte	0x2cd
 1653 031b 04       		.byte	0x4
 1654 031c 00       		.byte	0
 1655 031d 04       		.uleb128 0x4
 1656 031e 7A070000 		.4byte	.LASF44
 1657 0322 08       		.byte	0x8
 1658 0323 AB       		.byte	0xab
 1659 0324 FC020000 		.4byte	0x2fc
 1660 0328 04       		.uleb128 0x4
 1661 0329 6A070000 		.4byte	.LASF45
 1662 032d 08       		.byte	0x8
 1663 032e AF       		.byte	0xaf
 1664 032f A0020000 		.4byte	0x2a0
 1665 0333 04       		.uleb128 0x4
 1666 0334 15090000 		.4byte	.LASF46
 1667 0338 0A       		.byte	0xa
 1668 0339 16       		.byte	0x16
 1669 033a 7C000000 		.4byte	0x7c
 1670 033e 17       		.uleb128 0x17
 1671 033f B1040000 		.4byte	.LASF51
 1672 0343 18       		.byte	0x18
 1673 0344 0A       		.byte	0xa
 1674 0345 2D       		.byte	0x2d
 1675 0346 91030000 		.4byte	0x391
 1676 034a 16       		.uleb128 0x16
 1677 034b B0070000 		.4byte	.LASF47
 1678 034f 0A       		.byte	0xa
ARM GAS  /tmp/ccIxWip2.s 			page 73


 1679 0350 2F       		.byte	0x2f
 1680 0351 91030000 		.4byte	0x391
 1681 0355 00       		.byte	0
 1682 0356 18       		.uleb128 0x18
 1683 0357 5F6B00   		.ascii	"_k\000"
 1684 035a 0A       		.byte	0xa
 1685 035b 30       		.byte	0x30
 1686 035c 91000000 		.4byte	0x91
 1687 0360 04       		.byte	0x4
 1688 0361 16       		.uleb128 0x16
 1689 0362 B9040000 		.4byte	.LASF48
 1690 0366 0A       		.byte	0xa
 1691 0367 30       		.byte	0x30
 1692 0368 91000000 		.4byte	0x91
 1693 036c 08       		.byte	0x8
 1694 036d 16       		.uleb128 0x16
 1695 036e C8050000 		.4byte	.LASF49
 1696 0372 0A       		.byte	0xa
 1697 0373 30       		.byte	0x30
 1698 0374 91000000 		.4byte	0x91
 1699 0378 0C       		.byte	0xc
 1700 0379 16       		.uleb128 0x16
 1701 037a CF030000 		.4byte	.LASF50
 1702 037e 0A       		.byte	0xa
 1703 037f 30       		.byte	0x30
 1704 0380 91000000 		.4byte	0x91
 1705 0384 10       		.byte	0x10
 1706 0385 18       		.uleb128 0x18
 1707 0386 5F7800   		.ascii	"_x\000"
 1708 0389 0A       		.byte	0xa
 1709 038a 31       		.byte	0x31
 1710 038b 97030000 		.4byte	0x397
 1711 038f 14       		.byte	0x14
 1712 0390 00       		.byte	0
 1713 0391 11       		.uleb128 0x11
 1714 0392 04       		.byte	0x4
 1715 0393 3E030000 		.4byte	0x33e
 1716 0397 0A       		.uleb128 0xa
 1717 0398 33030000 		.4byte	0x333
 1718 039c A7030000 		.4byte	0x3a7
 1719 03a0 0B       		.uleb128 0xb
 1720 03a1 D4000000 		.4byte	0xd4
 1721 03a5 00       		.byte	0
 1722 03a6 00       		.byte	0
 1723 03a7 17       		.uleb128 0x17
 1724 03a8 AA000000 		.4byte	.LASF52
 1725 03ac 24       		.byte	0x24
 1726 03ad 0A       		.byte	0xa
 1727 03ae 35       		.byte	0x35
 1728 03af 20040000 		.4byte	0x420
 1729 03b3 16       		.uleb128 0x16
 1730 03b4 C6000000 		.4byte	.LASF53
 1731 03b8 0A       		.byte	0xa
 1732 03b9 37       		.byte	0x37
 1733 03ba 91000000 		.4byte	0x91
 1734 03be 00       		.byte	0
 1735 03bf 16       		.uleb128 0x16
ARM GAS  /tmp/ccIxWip2.s 			page 74


 1736 03c0 CE090000 		.4byte	.LASF54
 1737 03c4 0A       		.byte	0xa
 1738 03c5 38       		.byte	0x38
 1739 03c6 91000000 		.4byte	0x91
 1740 03ca 04       		.byte	0x4
 1741 03cb 16       		.uleb128 0x16
 1742 03cc 5F090000 		.4byte	.LASF55
 1743 03d0 0A       		.byte	0xa
 1744 03d1 39       		.byte	0x39
 1745 03d2 91000000 		.4byte	0x91
 1746 03d6 08       		.byte	0x8
 1747 03d7 16       		.uleb128 0x16
 1748 03d8 0C060000 		.4byte	.LASF56
 1749 03dc 0A       		.byte	0xa
 1750 03dd 3A       		.byte	0x3a
 1751 03de 91000000 		.4byte	0x91
 1752 03e2 0C       		.byte	0xc
 1753 03e3 16       		.uleb128 0x16
 1754 03e4 D3010000 		.4byte	.LASF57
 1755 03e8 0A       		.byte	0xa
 1756 03e9 3B       		.byte	0x3b
 1757 03ea 91000000 		.4byte	0x91
 1758 03ee 10       		.byte	0x10
 1759 03ef 16       		.uleb128 0x16
 1760 03f0 BE080000 		.4byte	.LASF58
 1761 03f4 0A       		.byte	0xa
 1762 03f5 3C       		.byte	0x3c
 1763 03f6 91000000 		.4byte	0x91
 1764 03fa 14       		.byte	0x14
 1765 03fb 16       		.uleb128 0x16
 1766 03fc 62060000 		.4byte	.LASF59
 1767 0400 0A       		.byte	0xa
 1768 0401 3D       		.byte	0x3d
 1769 0402 91000000 		.4byte	0x91
 1770 0406 18       		.byte	0x18
 1771 0407 16       		.uleb128 0x16
 1772 0408 90060000 		.4byte	.LASF60
 1773 040c 0A       		.byte	0xa
 1774 040d 3E       		.byte	0x3e
 1775 040e 91000000 		.4byte	0x91
 1776 0412 1C       		.byte	0x1c
 1777 0413 16       		.uleb128 0x16
 1778 0414 C3090000 		.4byte	.LASF61
 1779 0418 0A       		.byte	0xa
 1780 0419 3F       		.byte	0x3f
 1781 041a 91000000 		.4byte	0x91
 1782 041e 20       		.byte	0x20
 1783 041f 00       		.byte	0
 1784 0420 19       		.uleb128 0x19
 1785 0421 3E010000 		.4byte	.LASF62
 1786 0425 0801     		.2byte	0x108
 1787 0427 0A       		.byte	0xa
 1788 0428 48       		.byte	0x48
 1789 0429 60040000 		.4byte	0x460
 1790 042d 16       		.uleb128 0x16
 1791 042e BB090000 		.4byte	.LASF63
 1792 0432 0A       		.byte	0xa
ARM GAS  /tmp/ccIxWip2.s 			page 75


 1793 0433 49       		.byte	0x49
 1794 0434 60040000 		.4byte	0x460
 1795 0438 00       		.byte	0
 1796 0439 16       		.uleb128 0x16
 1797 043a 0D070000 		.4byte	.LASF64
 1798 043e 0A       		.byte	0xa
 1799 043f 4A       		.byte	0x4a
 1800 0440 60040000 		.4byte	0x460
 1801 0444 80       		.byte	0x80
 1802 0445 1A       		.uleb128 0x1a
 1803 0446 89080000 		.4byte	.LASF65
 1804 044a 0A       		.byte	0xa
 1805 044b 4C       		.byte	0x4c
 1806 044c 33030000 		.4byte	0x333
 1807 0450 0001     		.2byte	0x100
 1808 0452 1A       		.uleb128 0x1a
 1809 0453 00090000 		.4byte	.LASF66
 1810 0457 0A       		.byte	0xa
 1811 0458 4F       		.byte	0x4f
 1812 0459 33030000 		.4byte	0x333
 1813 045d 0401     		.2byte	0x104
 1814 045f 00       		.byte	0
 1815 0460 0A       		.uleb128 0xa
 1816 0461 9E020000 		.4byte	0x29e
 1817 0465 70040000 		.4byte	0x470
 1818 0469 0B       		.uleb128 0xb
 1819 046a D4000000 		.4byte	0xd4
 1820 046e 1F       		.byte	0x1f
 1821 046f 00       		.byte	0
 1822 0470 19       		.uleb128 0x19
 1823 0471 52060000 		.4byte	.LASF67
 1824 0475 9001     		.2byte	0x190
 1825 0477 0A       		.byte	0xa
 1826 0478 5B       		.byte	0x5b
 1827 0479 AE040000 		.4byte	0x4ae
 1828 047d 16       		.uleb128 0x16
 1829 047e B0070000 		.4byte	.LASF47
 1830 0482 0A       		.byte	0xa
 1831 0483 5C       		.byte	0x5c
 1832 0484 AE040000 		.4byte	0x4ae
 1833 0488 00       		.byte	0
 1834 0489 16       		.uleb128 0x16
 1835 048a DC080000 		.4byte	.LASF68
 1836 048e 0A       		.byte	0xa
 1837 048f 5D       		.byte	0x5d
 1838 0490 91000000 		.4byte	0x91
 1839 0494 04       		.byte	0x4
 1840 0495 16       		.uleb128 0x16
 1841 0496 AE020000 		.4byte	.LASF69
 1842 049a 0A       		.byte	0xa
 1843 049b 5F       		.byte	0x5f
 1844 049c B4040000 		.4byte	0x4b4
 1845 04a0 08       		.byte	0x8
 1846 04a1 16       		.uleb128 0x16
 1847 04a2 3E010000 		.4byte	.LASF62
 1848 04a6 0A       		.byte	0xa
 1849 04a7 60       		.byte	0x60
ARM GAS  /tmp/ccIxWip2.s 			page 76


 1850 04a8 20040000 		.4byte	0x420
 1851 04ac 88       		.byte	0x88
 1852 04ad 00       		.byte	0
 1853 04ae 11       		.uleb128 0x11
 1854 04af 04       		.byte	0x4
 1855 04b0 70040000 		.4byte	0x470
 1856 04b4 0A       		.uleb128 0xa
 1857 04b5 98020000 		.4byte	0x298
 1858 04b9 C4040000 		.4byte	0x4c4
 1859 04bd 0B       		.uleb128 0xb
 1860 04be D4000000 		.4byte	0xd4
 1861 04c2 1F       		.byte	0x1f
 1862 04c3 00       		.byte	0
 1863 04c4 17       		.uleb128 0x17
 1864 04c5 F9080000 		.4byte	.LASF70
 1865 04c9 08       		.byte	0x8
 1866 04ca 0A       		.byte	0xa
 1867 04cb 73       		.byte	0x73
 1868 04cc E9040000 		.4byte	0x4e9
 1869 04d0 16       		.uleb128 0x16
 1870 04d1 43070000 		.4byte	.LASF71
 1871 04d5 0A       		.byte	0xa
 1872 04d6 74       		.byte	0x74
 1873 04d7 E9040000 		.4byte	0x4e9
 1874 04db 00       		.byte	0
 1875 04dc 16       		.uleb128 0x16
 1876 04dd A5010000 		.4byte	.LASF72
 1877 04e1 0A       		.byte	0xa
 1878 04e2 75       		.byte	0x75
 1879 04e3 91000000 		.4byte	0x91
 1880 04e7 04       		.byte	0x4
 1881 04e8 00       		.byte	0
 1882 04e9 11       		.uleb128 0x11
 1883 04ea 04       		.byte	0x4
 1884 04eb 4A000000 		.4byte	0x4a
 1885 04ef 17       		.uleb128 0x17
 1886 04f0 31040000 		.4byte	.LASF73
 1887 04f4 68       		.byte	0x68
 1888 04f5 0A       		.byte	0xa
 1889 04f6 B3       		.byte	0xb3
 1890 04f7 19060000 		.4byte	0x619
 1891 04fb 18       		.uleb128 0x18
 1892 04fc 5F7000   		.ascii	"_p\000"
 1893 04ff 0A       		.byte	0xa
 1894 0500 B4       		.byte	0xb4
 1895 0501 E9040000 		.4byte	0x4e9
 1896 0505 00       		.byte	0
 1897 0506 18       		.uleb128 0x18
 1898 0507 5F7200   		.ascii	"_r\000"
 1899 050a 0A       		.byte	0xa
 1900 050b B5       		.byte	0xb5
 1901 050c 91000000 		.4byte	0x91
 1902 0510 04       		.byte	0x4
 1903 0511 18       		.uleb128 0x18
 1904 0512 5F7700   		.ascii	"_w\000"
 1905 0515 0A       		.byte	0xa
 1906 0516 B6       		.byte	0xb6
ARM GAS  /tmp/ccIxWip2.s 			page 77


 1907 0517 91000000 		.4byte	0x91
 1908 051b 08       		.byte	0x8
 1909 051c 16       		.uleb128 0x16
 1910 051d 4B060000 		.4byte	.LASF74
 1911 0521 0A       		.byte	0xa
 1912 0522 B7       		.byte	0xb7
 1913 0523 51000000 		.4byte	0x51
 1914 0527 0C       		.byte	0xc
 1915 0528 16       		.uleb128 0x16
 1916 0529 31010000 		.4byte	.LASF75
 1917 052d 0A       		.byte	0xa
 1918 052e B8       		.byte	0xb8
 1919 052f 51000000 		.4byte	0x51
 1920 0533 0E       		.byte	0xe
 1921 0534 18       		.uleb128 0x18
 1922 0535 5F626600 		.ascii	"_bf\000"
 1923 0539 0A       		.byte	0xa
 1924 053a B9       		.byte	0xb9
 1925 053b C4040000 		.4byte	0x4c4
 1926 053f 10       		.byte	0x10
 1927 0540 16       		.uleb128 0x16
 1928 0541 C8080000 		.4byte	.LASF76
 1929 0545 0A       		.byte	0xa
 1930 0546 BA       		.byte	0xba
 1931 0547 91000000 		.4byte	0x91
 1932 054b 18       		.byte	0x18
 1933 054c 16       		.uleb128 0x16
 1934 054d C7030000 		.4byte	.LASF77
 1935 0551 0A       		.byte	0xa
 1936 0552 C1       		.byte	0xc1
 1937 0553 9E020000 		.4byte	0x29e
 1938 0557 1C       		.byte	0x1c
 1939 0558 16       		.uleb128 0x16
 1940 0559 4F000000 		.4byte	.LASF78
 1941 055d 0A       		.byte	0xa
 1942 055e C3       		.byte	0xc3
 1943 055f 86070000 		.4byte	0x786
 1944 0563 20       		.byte	0x20
 1945 0564 16       		.uleb128 0x16
 1946 0565 7E000000 		.4byte	.LASF79
 1947 0569 0A       		.byte	0xa
 1948 056a C5       		.byte	0xc5
 1949 056b B5070000 		.4byte	0x7b5
 1950 056f 24       		.byte	0x24
 1951 0570 16       		.uleb128 0x16
 1952 0571 AD060000 		.4byte	.LASF80
 1953 0575 0A       		.byte	0xa
 1954 0576 C8       		.byte	0xc8
 1955 0577 D9070000 		.4byte	0x7d9
 1956 057b 28       		.byte	0x28
 1957 057c 16       		.uleb128 0x16
 1958 057d C1020000 		.4byte	.LASF81
 1959 0581 0A       		.byte	0xa
 1960 0582 C9       		.byte	0xc9
 1961 0583 F3070000 		.4byte	0x7f3
 1962 0587 2C       		.byte	0x2c
 1963 0588 18       		.uleb128 0x18
ARM GAS  /tmp/ccIxWip2.s 			page 78


 1964 0589 5F756200 		.ascii	"_ub\000"
 1965 058d 0A       		.byte	0xa
 1966 058e CC       		.byte	0xcc
 1967 058f C4040000 		.4byte	0x4c4
 1968 0593 30       		.byte	0x30
 1969 0594 18       		.uleb128 0x18
 1970 0595 5F757000 		.ascii	"_up\000"
 1971 0599 0A       		.byte	0xa
 1972 059a CD       		.byte	0xcd
 1973 059b E9040000 		.4byte	0x4e9
 1974 059f 38       		.byte	0x38
 1975 05a0 18       		.uleb128 0x18
 1976 05a1 5F757200 		.ascii	"_ur\000"
 1977 05a5 0A       		.byte	0xa
 1978 05a6 CE       		.byte	0xce
 1979 05a7 91000000 		.4byte	0x91
 1980 05ab 3C       		.byte	0x3c
 1981 05ac 16       		.uleb128 0x16
 1982 05ad 1B060000 		.4byte	.LASF82
 1983 05b1 0A       		.byte	0xa
 1984 05b2 D1       		.byte	0xd1
 1985 05b3 F9070000 		.4byte	0x7f9
 1986 05b7 40       		.byte	0x40
 1987 05b8 16       		.uleb128 0x16
 1988 05b9 C0000000 		.4byte	.LASF83
 1989 05bd 0A       		.byte	0xa
 1990 05be D2       		.byte	0xd2
 1991 05bf 09080000 		.4byte	0x809
 1992 05c3 43       		.byte	0x43
 1993 05c4 18       		.uleb128 0x18
 1994 05c5 5F6C6200 		.ascii	"_lb\000"
 1995 05c9 0A       		.byte	0xa
 1996 05ca D5       		.byte	0xd5
 1997 05cb C4040000 		.4byte	0x4c4
 1998 05cf 44       		.byte	0x44
 1999 05d0 16       		.uleb128 0x16
 2000 05d1 3A070000 		.4byte	.LASF84
 2001 05d5 0A       		.byte	0xa
 2002 05d6 D8       		.byte	0xd8
 2003 05d7 91000000 		.4byte	0x91
 2004 05db 4C       		.byte	0x4c
 2005 05dc 16       		.uleb128 0x16
 2006 05dd DE030000 		.4byte	.LASF85
 2007 05e1 0A       		.byte	0xa
 2008 05e2 D9       		.byte	0xd9
 2009 05e3 AB020000 		.4byte	0x2ab
 2010 05e7 50       		.byte	0x50
 2011 05e8 16       		.uleb128 0x16
 2012 05e9 B6070000 		.4byte	.LASF86
 2013 05ed 0A       		.byte	0xa
 2014 05ee DC       		.byte	0xdc
 2015 05ef 37060000 		.4byte	0x637
 2016 05f3 54       		.byte	0x54
 2017 05f4 16       		.uleb128 0x16
 2018 05f5 DE000000 		.4byte	.LASF87
 2019 05f9 0A       		.byte	0xa
 2020 05fa E0       		.byte	0xe0
ARM GAS  /tmp/ccIxWip2.s 			page 79


 2021 05fb 28030000 		.4byte	0x328
 2022 05ff 58       		.byte	0x58
 2023 0600 16       		.uleb128 0x16
 2024 0601 37060000 		.4byte	.LASF88
 2025 0605 0A       		.byte	0xa
 2026 0606 E2       		.byte	0xe2
 2027 0607 1D030000 		.4byte	0x31d
 2028 060b 5C       		.byte	0x5c
 2029 060c 16       		.uleb128 0x16
 2030 060d 44040000 		.4byte	.LASF89
 2031 0611 0A       		.byte	0xa
 2032 0612 E3       		.byte	0xe3
 2033 0613 91000000 		.4byte	0x91
 2034 0617 64       		.byte	0x64
 2035 0618 00       		.byte	0
 2036 0619 1B       		.uleb128 0x1b
 2037 061a 91000000 		.4byte	0x91
 2038 061e 37060000 		.4byte	0x637
 2039 0622 1C       		.uleb128 0x1c
 2040 0623 37060000 		.4byte	0x637
 2041 0627 1C       		.uleb128 0x1c
 2042 0628 9E020000 		.4byte	0x29e
 2043 062c 1C       		.uleb128 0x1c
 2044 062d 74070000 		.4byte	0x774
 2045 0631 1C       		.uleb128 0x1c
 2046 0632 91000000 		.4byte	0x91
 2047 0636 00       		.byte	0
 2048 0637 11       		.uleb128 0x11
 2049 0638 04       		.byte	0x4
 2050 0639 42060000 		.4byte	0x642
 2051 063d 03       		.uleb128 0x3
 2052 063e 37060000 		.4byte	0x637
 2053 0642 1D       		.uleb128 0x1d
 2054 0643 81020000 		.4byte	.LASF90
 2055 0647 2804     		.2byte	0x428
 2056 0649 0A       		.byte	0xa
 2057 064a 3802     		.2byte	0x238
 2058 064c 74070000 		.4byte	0x774
 2059 0650 08       		.uleb128 0x8
 2060 0651 6E040000 		.4byte	.LASF91
 2061 0655 0A       		.byte	0xa
 2062 0656 3A02     		.2byte	0x23a
 2063 0658 91000000 		.4byte	0x91
 2064 065c 00       		.byte	0
 2065 065d 08       		.uleb128 0x8
 2066 065e 58030000 		.4byte	.LASF92
 2067 0662 0A       		.byte	0xa
 2068 0663 3F02     		.2byte	0x23f
 2069 0665 60080000 		.4byte	0x860
 2070 0669 04       		.byte	0x4
 2071 066a 08       		.uleb128 0x8
 2072 066b 21070000 		.4byte	.LASF93
 2073 066f 0A       		.byte	0xa
 2074 0670 3F02     		.2byte	0x23f
 2075 0672 60080000 		.4byte	0x860
 2076 0676 08       		.byte	0x8
 2077 0677 08       		.uleb128 0x8
ARM GAS  /tmp/ccIxWip2.s 			page 80


 2078 0678 21060000 		.4byte	.LASF94
 2079 067c 0A       		.byte	0xa
 2080 067d 3F02     		.2byte	0x23f
 2081 067f 60080000 		.4byte	0x860
 2082 0683 0C       		.byte	0xc
 2083 0684 08       		.uleb128 0x8
 2084 0685 D7080000 		.4byte	.LASF95
 2085 0689 0A       		.byte	0xa
 2086 068a 4102     		.2byte	0x241
 2087 068c 91000000 		.4byte	0x91
 2088 0690 10       		.byte	0x10
 2089 0691 08       		.uleb128 0x8
 2090 0692 0E050000 		.4byte	.LASF96
 2091 0696 0A       		.byte	0xa
 2092 0697 4202     		.2byte	0x242
 2093 0699 420A0000 		.4byte	0xa42
 2094 069d 14       		.byte	0x14
 2095 069e 08       		.uleb128 0x8
 2096 069f F2010000 		.4byte	.LASF97
 2097 06a3 0A       		.byte	0xa
 2098 06a4 4402     		.2byte	0x244
 2099 06a6 91000000 		.4byte	0x91
 2100 06aa 30       		.byte	0x30
 2101 06ab 08       		.uleb128 0x8
 2102 06ac 95050000 		.4byte	.LASF98
 2103 06b0 0A       		.byte	0xa
 2104 06b1 4502     		.2byte	0x245
 2105 06b3 AA070000 		.4byte	0x7aa
 2106 06b7 34       		.byte	0x34
 2107 06b8 08       		.uleb128 0x8
 2108 06b9 39040000 		.4byte	.LASF99
 2109 06bd 0A       		.byte	0xa
 2110 06be 4702     		.2byte	0x247
 2111 06c0 91000000 		.4byte	0x91
 2112 06c4 38       		.byte	0x38
 2113 06c5 08       		.uleb128 0x8
 2114 06c6 DD040000 		.4byte	.LASF100
 2115 06ca 0A       		.byte	0xa
 2116 06cb 4902     		.2byte	0x249
 2117 06cd 5D0A0000 		.4byte	0xa5d
 2118 06d1 3C       		.byte	0x3c
 2119 06d2 08       		.uleb128 0x8
 2120 06d3 26090000 		.4byte	.LASF101
 2121 06d7 0A       		.byte	0xa
 2122 06d8 4C02     		.2byte	0x24c
 2123 06da 91030000 		.4byte	0x391
 2124 06de 40       		.byte	0x40
 2125 06df 08       		.uleb128 0x8
 2126 06e0 9B010000 		.4byte	.LASF102
 2127 06e4 0A       		.byte	0xa
 2128 06e5 4D02     		.2byte	0x24d
 2129 06e7 91000000 		.4byte	0x91
 2130 06eb 44       		.byte	0x44
 2131 06ec 08       		.uleb128 0x8
 2132 06ed 1A040000 		.4byte	.LASF103
 2133 06f1 0A       		.byte	0xa
 2134 06f2 4E02     		.2byte	0x24e
ARM GAS  /tmp/ccIxWip2.s 			page 81


 2135 06f4 91030000 		.4byte	0x391
 2136 06f8 48       		.byte	0x48
 2137 06f9 08       		.uleb128 0x8
 2138 06fa A5050000 		.4byte	.LASF104
 2139 06fe 0A       		.byte	0xa
 2140 06ff 4F02     		.2byte	0x24f
 2141 0701 630A0000 		.4byte	0xa63
 2142 0705 4C       		.byte	0x4c
 2143 0706 08       		.uleb128 0x8
 2144 0707 9A000000 		.4byte	.LASF105
 2145 070b 0A       		.byte	0xa
 2146 070c 5202     		.2byte	0x252
 2147 070e 91000000 		.4byte	0x91
 2148 0712 50       		.byte	0x50
 2149 0713 08       		.uleb128 0x8
 2150 0714 FA030000 		.4byte	.LASF106
 2151 0718 0A       		.byte	0xa
 2152 0719 5302     		.2byte	0x253
 2153 071b 74070000 		.4byte	0x774
 2154 071f 54       		.byte	0x54
 2155 0720 08       		.uleb128 0x8
 2156 0721 16060000 		.4byte	.LASF107
 2157 0725 0A       		.byte	0xa
 2158 0726 7602     		.2byte	0x276
 2159 0728 200A0000 		.4byte	0xa20
 2160 072c 58       		.byte	0x58
 2161 072d 1E       		.uleb128 0x1e
 2162 072e 52060000 		.4byte	.LASF67
 2163 0732 0A       		.byte	0xa
 2164 0733 7A02     		.2byte	0x27a
 2165 0735 AE040000 		.4byte	0x4ae
 2166 0739 4801     		.2byte	0x148
 2167 073b 1E       		.uleb128 0x1e
 2168 073c E7040000 		.4byte	.LASF108
 2169 0740 0A       		.byte	0xa
 2170 0741 7B02     		.2byte	0x27b
 2171 0743 70040000 		.4byte	0x470
 2172 0747 4C01     		.2byte	0x14c
 2173 0749 1E       		.uleb128 0x1e
 2174 074a D4030000 		.4byte	.LASF109
 2175 074e 0A       		.byte	0xa
 2176 074f 7F02     		.2byte	0x27f
 2177 0751 740A0000 		.4byte	0xa74
 2178 0755 DC02     		.2byte	0x2dc
 2179 0757 1E       		.uleb128 0x1e
 2180 0758 46050000 		.4byte	.LASF110
 2181 075c 0A       		.byte	0xa
 2182 075d 8402     		.2byte	0x284
 2183 075f 25080000 		.4byte	0x825
 2184 0763 E002     		.2byte	0x2e0
 2185 0765 1E       		.uleb128 0x1e
 2186 0766 43000000 		.4byte	.LASF111
 2187 076a 0A       		.byte	0xa
 2188 076b 8502     		.2byte	0x285
 2189 076d 800A0000 		.4byte	0xa80
 2190 0771 EC02     		.2byte	0x2ec
 2191 0773 00       		.byte	0
ARM GAS  /tmp/ccIxWip2.s 			page 82


 2192 0774 11       		.uleb128 0x11
 2193 0775 04       		.byte	0x4
 2194 0776 7A070000 		.4byte	0x77a
 2195 077a 02       		.uleb128 0x2
 2196 077b 01       		.byte	0x1
 2197 077c 08       		.byte	0x8
 2198 077d A9020000 		.4byte	.LASF112
 2199 0781 03       		.uleb128 0x3
 2200 0782 7A070000 		.4byte	0x77a
 2201 0786 11       		.uleb128 0x11
 2202 0787 04       		.byte	0x4
 2203 0788 19060000 		.4byte	0x619
 2204 078c 1B       		.uleb128 0x1b
 2205 078d 91000000 		.4byte	0x91
 2206 0791 AA070000 		.4byte	0x7aa
 2207 0795 1C       		.uleb128 0x1c
 2208 0796 37060000 		.4byte	0x637
 2209 079a 1C       		.uleb128 0x1c
 2210 079b 9E020000 		.4byte	0x29e
 2211 079f 1C       		.uleb128 0x1c
 2212 07a0 AA070000 		.4byte	0x7aa
 2213 07a4 1C       		.uleb128 0x1c
 2214 07a5 91000000 		.4byte	0x91
 2215 07a9 00       		.byte	0
 2216 07aa 11       		.uleb128 0x11
 2217 07ab 04       		.byte	0x4
 2218 07ac 81070000 		.4byte	0x781
 2219 07b0 03       		.uleb128 0x3
 2220 07b1 AA070000 		.4byte	0x7aa
 2221 07b5 11       		.uleb128 0x11
 2222 07b6 04       		.byte	0x4
 2223 07b7 8C070000 		.4byte	0x78c
 2224 07bb 1B       		.uleb128 0x1b
 2225 07bc B6020000 		.4byte	0x2b6
 2226 07c0 D9070000 		.4byte	0x7d9
 2227 07c4 1C       		.uleb128 0x1c
 2228 07c5 37060000 		.4byte	0x637
 2229 07c9 1C       		.uleb128 0x1c
 2230 07ca 9E020000 		.4byte	0x29e
 2231 07ce 1C       		.uleb128 0x1c
 2232 07cf B6020000 		.4byte	0x2b6
 2233 07d3 1C       		.uleb128 0x1c
 2234 07d4 91000000 		.4byte	0x91
 2235 07d8 00       		.byte	0
 2236 07d9 11       		.uleb128 0x11
 2237 07da 04       		.byte	0x4
 2238 07db BB070000 		.4byte	0x7bb
 2239 07df 1B       		.uleb128 0x1b
 2240 07e0 91000000 		.4byte	0x91
 2241 07e4 F3070000 		.4byte	0x7f3
 2242 07e8 1C       		.uleb128 0x1c
 2243 07e9 37060000 		.4byte	0x637
 2244 07ed 1C       		.uleb128 0x1c
 2245 07ee 9E020000 		.4byte	0x29e
 2246 07f2 00       		.byte	0
 2247 07f3 11       		.uleb128 0x11
 2248 07f4 04       		.byte	0x4
ARM GAS  /tmp/ccIxWip2.s 			page 83


 2249 07f5 DF070000 		.4byte	0x7df
 2250 07f9 0A       		.uleb128 0xa
 2251 07fa 4A000000 		.4byte	0x4a
 2252 07fe 09080000 		.4byte	0x809
 2253 0802 0B       		.uleb128 0xb
 2254 0803 D4000000 		.4byte	0xd4
 2255 0807 02       		.byte	0x2
 2256 0808 00       		.byte	0
 2257 0809 0A       		.uleb128 0xa
 2258 080a 4A000000 		.4byte	0x4a
 2259 080e 19080000 		.4byte	0x819
 2260 0812 0B       		.uleb128 0xb
 2261 0813 D4000000 		.4byte	0xd4
 2262 0817 00       		.byte	0
 2263 0818 00       		.byte	0
 2264 0819 0C       		.uleb128 0xc
 2265 081a 73070000 		.4byte	.LASF113
 2266 081e 0A       		.byte	0xa
 2267 081f 1D01     		.2byte	0x11d
 2268 0821 EF040000 		.4byte	0x4ef
 2269 0825 1F       		.uleb128 0x1f
 2270 0826 B5050000 		.4byte	.LASF114
 2271 082a 0C       		.byte	0xc
 2272 082b 0A       		.byte	0xa
 2273 082c 2101     		.2byte	0x121
 2274 082e 5A080000 		.4byte	0x85a
 2275 0832 08       		.uleb128 0x8
 2276 0833 B0070000 		.4byte	.LASF47
 2277 0837 0A       		.byte	0xa
 2278 0838 2301     		.2byte	0x123
 2279 083a 5A080000 		.4byte	0x85a
 2280 083e 00       		.byte	0
 2281 083f 08       		.uleb128 0x8
 2282 0840 35050000 		.4byte	.LASF115
 2283 0844 0A       		.byte	0xa
 2284 0845 2401     		.2byte	0x124
 2285 0847 91000000 		.4byte	0x91
 2286 084b 04       		.byte	0x4
 2287 084c 08       		.uleb128 0x8
 2288 084d AF050000 		.4byte	.LASF116
 2289 0851 0A       		.byte	0xa
 2290 0852 2501     		.2byte	0x125
 2291 0854 60080000 		.4byte	0x860
 2292 0858 08       		.byte	0x8
 2293 0859 00       		.byte	0
 2294 085a 11       		.uleb128 0x11
 2295 085b 04       		.byte	0x4
 2296 085c 25080000 		.4byte	0x825
 2297 0860 11       		.uleb128 0x11
 2298 0861 04       		.byte	0x4
 2299 0862 19080000 		.4byte	0x819
 2300 0866 1F       		.uleb128 0x1f
 2301 0867 19070000 		.4byte	.LASF117
 2302 086b 0E       		.byte	0xe
 2303 086c 0A       		.byte	0xa
 2304 086d 3D01     		.2byte	0x13d
 2305 086f 9B080000 		.4byte	0x89b
ARM GAS  /tmp/ccIxWip2.s 			page 84


 2306 0873 08       		.uleb128 0x8
 2307 0874 9A060000 		.4byte	.LASF118
 2308 0878 0A       		.byte	0xa
 2309 0879 3E01     		.2byte	0x13e
 2310 087b 9B080000 		.4byte	0x89b
 2311 087f 00       		.byte	0
 2312 0880 08       		.uleb128 0x8
 2313 0881 1B010000 		.4byte	.LASF119
 2314 0885 0A       		.byte	0xa
 2315 0886 3F01     		.2byte	0x13f
 2316 0888 9B080000 		.4byte	0x89b
 2317 088c 06       		.byte	0x6
 2318 088d 08       		.uleb128 0x8
 2319 088e 54090000 		.4byte	.LASF120
 2320 0892 0A       		.byte	0xa
 2321 0893 4001     		.2byte	0x140
 2322 0895 58000000 		.4byte	0x58
 2323 0899 0C       		.byte	0xc
 2324 089a 00       		.byte	0
 2325 089b 0A       		.uleb128 0xa
 2326 089c 58000000 		.4byte	0x58
 2327 08a0 AB080000 		.4byte	0x8ab
 2328 08a4 0B       		.uleb128 0xb
 2329 08a5 D4000000 		.4byte	0xd4
 2330 08a9 02       		.byte	0x2
 2331 08aa 00       		.byte	0
 2332 08ab 07       		.uleb128 0x7
 2333 08ac D0       		.byte	0xd0
 2334 08ad 0A       		.byte	0xa
 2335 08ae 5702     		.2byte	0x257
 2336 08b0 AC090000 		.4byte	0x9ac
 2337 08b4 08       		.uleb128 0x8
 2338 08b5 09020000 		.4byte	.LASF121
 2339 08b9 0A       		.byte	0xa
 2340 08ba 5902     		.2byte	0x259
 2341 08bc 98000000 		.4byte	0x98
 2342 08c0 00       		.byte	0
 2343 08c1 08       		.uleb128 0x8
 2344 08c2 49070000 		.4byte	.LASF122
 2345 08c6 0A       		.byte	0xa
 2346 08c7 5A02     		.2byte	0x25a
 2347 08c9 74070000 		.4byte	0x774
 2348 08cd 04       		.byte	0x4
 2349 08ce 08       		.uleb128 0x8
 2350 08cf 8D000000 		.4byte	.LASF123
 2351 08d3 0A       		.byte	0xa
 2352 08d4 5B02     		.2byte	0x25b
 2353 08d6 AC090000 		.4byte	0x9ac
 2354 08da 08       		.byte	0x8
 2355 08db 08       		.uleb128 0x8
 2356 08dc B1010000 		.4byte	.LASF124
 2357 08e0 0A       		.byte	0xa
 2358 08e1 5C02     		.2byte	0x25c
 2359 08e3 A7030000 		.4byte	0x3a7
 2360 08e7 24       		.byte	0x24
 2361 08e8 08       		.uleb128 0x8
 2362 08e9 7E050000 		.4byte	.LASF125
ARM GAS  /tmp/ccIxWip2.s 			page 85


 2363 08ed 0A       		.byte	0xa
 2364 08ee 5D02     		.2byte	0x25d
 2365 08f0 91000000 		.4byte	0x91
 2366 08f4 48       		.byte	0x48
 2367 08f5 08       		.uleb128 0x8
 2368 08f6 40060000 		.4byte	.LASF126
 2369 08fa 0A       		.byte	0xa
 2370 08fb 5E02     		.2byte	0x25e
 2371 08fd 8A000000 		.4byte	0x8a
 2372 0901 50       		.byte	0x50
 2373 0902 08       		.uleb128 0x8
 2374 0903 8E070000 		.4byte	.LASF127
 2375 0907 0A       		.byte	0xa
 2376 0908 5F02     		.2byte	0x25f
 2377 090a 66080000 		.4byte	0x866
 2378 090e 58       		.byte	0x58
 2379 090f 08       		.uleb128 0x8
 2380 0910 20080000 		.4byte	.LASF128
 2381 0914 0A       		.byte	0xa
 2382 0915 6002     		.2byte	0x260
 2383 0917 1D030000 		.4byte	0x31d
 2384 091b 68       		.byte	0x68
 2385 091c 08       		.uleb128 0x8
 2386 091d D6060000 		.4byte	.LASF129
 2387 0921 0A       		.byte	0xa
 2388 0922 6102     		.2byte	0x261
 2389 0924 1D030000 		.4byte	0x31d
 2390 0928 70       		.byte	0x70
 2391 0929 08       		.uleb128 0x8
 2392 092a 29060000 		.4byte	.LASF130
 2393 092e 0A       		.byte	0xa
 2394 092f 6202     		.2byte	0x262
 2395 0931 1D030000 		.4byte	0x31d
 2396 0935 78       		.byte	0x78
 2397 0936 08       		.uleb128 0x8
 2398 0937 CF000000 		.4byte	.LASF131
 2399 093b 0A       		.byte	0xa
 2400 093c 6302     		.2byte	0x263
 2401 093e BC090000 		.4byte	0x9bc
 2402 0942 80       		.byte	0x80
 2403 0943 08       		.uleb128 0x8
 2404 0944 87040000 		.4byte	.LASF132
 2405 0948 0A       		.byte	0xa
 2406 0949 6402     		.2byte	0x264
 2407 094b CC090000 		.4byte	0x9cc
 2408 094f 88       		.byte	0x88
 2409 0950 08       		.uleb128 0x8
 2410 0951 D7090000 		.4byte	.LASF133
 2411 0955 0A       		.byte	0xa
 2412 0956 6502     		.2byte	0x265
 2413 0958 91000000 		.4byte	0x91
 2414 095c A0       		.byte	0xa0
 2415 095d 08       		.uleb128 0x8
 2416 095e 78010000 		.4byte	.LASF134
 2417 0962 0A       		.byte	0xa
 2418 0963 6602     		.2byte	0x266
 2419 0965 1D030000 		.4byte	0x31d
ARM GAS  /tmp/ccIxWip2.s 			page 86


 2420 0969 A4       		.byte	0xa4
 2421 096a 08       		.uleb128 0x8
 2422 096b 5B070000 		.4byte	.LASF135
 2423 096f 0A       		.byte	0xa
 2424 0970 6702     		.2byte	0x267
 2425 0972 1D030000 		.4byte	0x31d
 2426 0976 AC       		.byte	0xac
 2427 0977 08       		.uleb128 0x8
 2428 0978 9B090000 		.4byte	.LASF136
 2429 097c 0A       		.byte	0xa
 2430 097d 6802     		.2byte	0x268
 2431 097f 1D030000 		.4byte	0x31d
 2432 0983 B4       		.byte	0xb4
 2433 0984 08       		.uleb128 0x8
 2434 0985 FD050000 		.4byte	.LASF137
 2435 0989 0A       		.byte	0xa
 2436 098a 6902     		.2byte	0x269
 2437 098c 1D030000 		.4byte	0x31d
 2438 0990 BC       		.byte	0xbc
 2439 0991 08       		.uleb128 0x8
 2440 0992 AF000000 		.4byte	.LASF138
 2441 0996 0A       		.byte	0xa
 2442 0997 6A02     		.2byte	0x26a
 2443 0999 1D030000 		.4byte	0x31d
 2444 099d C4       		.byte	0xc4
 2445 099e 08       		.uleb128 0x8
 2446 099f DB050000 		.4byte	.LASF139
 2447 09a3 0A       		.byte	0xa
 2448 09a4 6B02     		.2byte	0x26b
 2449 09a6 91000000 		.4byte	0x91
 2450 09aa CC       		.byte	0xcc
 2451 09ab 00       		.byte	0
 2452 09ac 0A       		.uleb128 0xa
 2453 09ad 7A070000 		.4byte	0x77a
 2454 09b1 BC090000 		.4byte	0x9bc
 2455 09b5 0B       		.uleb128 0xb
 2456 09b6 D4000000 		.4byte	0xd4
 2457 09ba 19       		.byte	0x19
 2458 09bb 00       		.byte	0
 2459 09bc 0A       		.uleb128 0xa
 2460 09bd 7A070000 		.4byte	0x77a
 2461 09c1 CC090000 		.4byte	0x9cc
 2462 09c5 0B       		.uleb128 0xb
 2463 09c6 D4000000 		.4byte	0xd4
 2464 09ca 07       		.byte	0x7
 2465 09cb 00       		.byte	0
 2466 09cc 0A       		.uleb128 0xa
 2467 09cd 7A070000 		.4byte	0x77a
 2468 09d1 DC090000 		.4byte	0x9dc
 2469 09d5 0B       		.uleb128 0xb
 2470 09d6 D4000000 		.4byte	0xd4
 2471 09da 17       		.byte	0x17
 2472 09db 00       		.byte	0
 2473 09dc 07       		.uleb128 0x7
 2474 09dd F0       		.byte	0xf0
 2475 09de 0A       		.byte	0xa
 2476 09df 7002     		.2byte	0x270
ARM GAS  /tmp/ccIxWip2.s 			page 87


 2477 09e1 000A0000 		.4byte	0xa00
 2478 09e5 08       		.uleb128 0x8
 2479 09e6 08090000 		.4byte	.LASF140
 2480 09ea 0A       		.byte	0xa
 2481 09eb 7302     		.2byte	0x273
 2482 09ed 000A0000 		.4byte	0xa00
 2483 09f1 00       		.byte	0
 2484 09f2 08       		.uleb128 0x8
 2485 09f3 4E050000 		.4byte	.LASF141
 2486 09f7 0A       		.byte	0xa
 2487 09f8 7402     		.2byte	0x274
 2488 09fa 100A0000 		.4byte	0xa10
 2489 09fe 78       		.byte	0x78
 2490 09ff 00       		.byte	0
 2491 0a00 0A       		.uleb128 0xa
 2492 0a01 E9040000 		.4byte	0x4e9
 2493 0a05 100A0000 		.4byte	0xa10
 2494 0a09 0B       		.uleb128 0xb
 2495 0a0a D4000000 		.4byte	0xd4
 2496 0a0e 1D       		.byte	0x1d
 2497 0a0f 00       		.byte	0
 2498 0a10 0A       		.uleb128 0xa
 2499 0a11 98000000 		.4byte	0x98
 2500 0a15 200A0000 		.4byte	0xa20
 2501 0a19 0B       		.uleb128 0xb
 2502 0a1a D4000000 		.4byte	0xd4
 2503 0a1e 1D       		.byte	0x1d
 2504 0a1f 00       		.byte	0
 2505 0a20 20       		.uleb128 0x20
 2506 0a21 F0       		.byte	0xf0
 2507 0a22 0A       		.byte	0xa
 2508 0a23 5502     		.2byte	0x255
 2509 0a25 420A0000 		.4byte	0xa42
 2510 0a29 21       		.uleb128 0x21
 2511 0a2a 81020000 		.4byte	.LASF90
 2512 0a2e 0A       		.byte	0xa
 2513 0a2f 6C02     		.2byte	0x26c
 2514 0a31 AB080000 		.4byte	0x8ab
 2515 0a35 21       		.uleb128 0x21
 2516 0a36 A2000000 		.4byte	.LASF142
 2517 0a3a 0A       		.byte	0xa
 2518 0a3b 7502     		.2byte	0x275
 2519 0a3d DC090000 		.4byte	0x9dc
 2520 0a41 00       		.byte	0
 2521 0a42 0A       		.uleb128 0xa
 2522 0a43 7A070000 		.4byte	0x77a
 2523 0a47 520A0000 		.4byte	0xa52
 2524 0a4b 0B       		.uleb128 0xb
 2525 0a4c D4000000 		.4byte	0xd4
 2526 0a50 18       		.byte	0x18
 2527 0a51 00       		.byte	0
 2528 0a52 22       		.uleb128 0x22
 2529 0a53 5D0A0000 		.4byte	0xa5d
 2530 0a57 1C       		.uleb128 0x1c
 2531 0a58 37060000 		.4byte	0x637
 2532 0a5c 00       		.byte	0
 2533 0a5d 11       		.uleb128 0x11
ARM GAS  /tmp/ccIxWip2.s 			page 88


 2534 0a5e 04       		.byte	0x4
 2535 0a5f 520A0000 		.4byte	0xa52
 2536 0a63 11       		.uleb128 0x11
 2537 0a64 04       		.byte	0x4
 2538 0a65 91030000 		.4byte	0x391
 2539 0a69 22       		.uleb128 0x22
 2540 0a6a 740A0000 		.4byte	0xa74
 2541 0a6e 1C       		.uleb128 0x1c
 2542 0a6f 91000000 		.4byte	0x91
 2543 0a73 00       		.byte	0
 2544 0a74 11       		.uleb128 0x11
 2545 0a75 04       		.byte	0x4
 2546 0a76 7A0A0000 		.4byte	0xa7a
 2547 0a7a 11       		.uleb128 0x11
 2548 0a7b 04       		.byte	0x4
 2549 0a7c 690A0000 		.4byte	0xa69
 2550 0a80 0A       		.uleb128 0xa
 2551 0a81 19080000 		.4byte	0x819
 2552 0a85 900A0000 		.4byte	0xa90
 2553 0a89 0B       		.uleb128 0xb
 2554 0a8a D4000000 		.4byte	0xd4
 2555 0a8e 02       		.byte	0x2
 2556 0a8f 00       		.byte	0
 2557 0a90 0D       		.uleb128 0xd
 2558 0a91 8F010000 		.4byte	.LASF143
 2559 0a95 0A       		.byte	0xa
 2560 0a96 FD02     		.2byte	0x2fd
 2561 0a98 37060000 		.4byte	0x637
 2562 0a9c 0D       		.uleb128 0xd
 2563 0a9d 88020000 		.4byte	.LASF144
 2564 0aa1 0A       		.byte	0xa
 2565 0aa2 FE02     		.2byte	0x2fe
 2566 0aa4 3D060000 		.4byte	0x63d
 2567 0aa8 0E       		.uleb128 0xe
 2568 0aa9 7F080000 		.4byte	.LASF145
 2569 0aad 0B       		.byte	0xb
 2570 0aae 5F       		.byte	0x5f
 2571 0aaf 74070000 		.4byte	0x774
 2572 0ab3 02       		.uleb128 0x2
 2573 0ab4 08       		.byte	0x8
 2574 0ab5 04       		.byte	0x4
 2575 0ab6 84060000 		.4byte	.LASF146
 2576 0aba 23       		.uleb128 0x23
 2577 0abb 29070000 		.4byte	.LASF217
 2578 0abf 01       		.byte	0x1
 2579 0ac0 33000000 		.4byte	0x33
 2580 0ac4 0C       		.byte	0xc
 2581 0ac5 9902     		.2byte	0x299
 2582 0ac7 E40A0000 		.4byte	0xae4
 2583 0acb 24       		.uleb128 0x24
 2584 0acc EB080000 		.4byte	.LASF147
 2585 0ad0 7F       		.sleb128 -1
 2586 0ad1 25       		.uleb128 0x25
 2587 0ad2 F5040000 		.4byte	.LASF148
 2588 0ad6 00       		.byte	0
 2589 0ad7 25       		.uleb128 0x25
 2590 0ad8 49080000 		.4byte	.LASF149
ARM GAS  /tmp/ccIxWip2.s 			page 89


 2591 0adc 01       		.byte	0x1
 2592 0add 25       		.uleb128 0x25
 2593 0ade 06080000 		.4byte	.LASF150
 2594 0ae2 02       		.byte	0x2
 2595 0ae3 00       		.byte	0
 2596 0ae4 0D       		.uleb128 0xd
 2597 0ae5 0A040000 		.4byte	.LASF151
 2598 0ae9 0C       		.byte	0xc
 2599 0aea A402     		.2byte	0x2a4
 2600 0aec BA0A0000 		.4byte	0xaba
 2601 0af0 0A       		.uleb128 0xa
 2602 0af1 B0070000 		.4byte	0x7b0
 2603 0af5 FB0A0000 		.4byte	0xafb
 2604 0af9 26       		.uleb128 0x26
 2605 0afa 00       		.byte	0
 2606 0afb 03       		.uleb128 0x3
 2607 0afc F00A0000 		.4byte	0xaf0
 2608 0b00 0E       		.uleb128 0xe
 2609 0b01 92080000 		.4byte	.LASF152
 2610 0b05 0D       		.byte	0xd
 2611 0b06 14       		.byte	0x14
 2612 0b07 FB0A0000 		.4byte	0xafb
 2613 0b0b 0E       		.uleb128 0xe
 2614 0b0c 4C010000 		.4byte	.LASF153
 2615 0b10 0D       		.byte	0xd
 2616 0b11 15       		.byte	0x15
 2617 0b12 91000000 		.4byte	0x91
 2618 0b16 0A       		.uleb128 0xa
 2619 0b17 51000000 		.4byte	0x51
 2620 0b1b 260B0000 		.4byte	0xb26
 2621 0b1f 0B       		.uleb128 0xb
 2622 0b20 D4000000 		.4byte	0xd4
 2623 0b24 02       		.byte	0x2
 2624 0b25 00       		.byte	0
 2625 0b26 0D       		.uleb128 0xd
 2626 0b27 B3020000 		.4byte	.LASF154
 2627 0b2b 0E       		.byte	0xe
 2628 0b2c 6601     		.2byte	0x166
 2629 0b2e 160B0000 		.4byte	0xb16
 2630 0b32 0D       		.uleb128 0xd
 2631 0b33 D1080000 		.4byte	.LASF155
 2632 0b37 0E       		.byte	0xe
 2633 0b38 6601     		.2byte	0x166
 2634 0b3a 160B0000 		.4byte	0xb16
 2635 0b3e 0D       		.uleb128 0xd
 2636 0b3f E1080000 		.4byte	.LASF156
 2637 0b43 0E       		.byte	0xe
 2638 0b44 6701     		.2byte	0x167
 2639 0b46 91000000 		.4byte	0x91
 2640 0b4a 0D       		.uleb128 0xd
 2641 0b4b 3C050000 		.4byte	.LASF157
 2642 0b4f 0E       		.byte	0xe
 2643 0b50 6701     		.2byte	0x167
 2644 0b52 91000000 		.4byte	0x91
 2645 0b56 0D       		.uleb128 0xd
 2646 0b57 5C010000 		.4byte	.LASF158
 2647 0b5b 0E       		.byte	0xe
ARM GAS  /tmp/ccIxWip2.s 			page 90


 2648 0b5c 6701     		.2byte	0x167
 2649 0b5e 91000000 		.4byte	0x91
 2650 0b62 0D       		.uleb128 0xd
 2651 0b63 75040000 		.4byte	.LASF159
 2652 0b67 0E       		.byte	0xe
 2653 0b68 6801     		.2byte	0x168
 2654 0b6a 2C000000 		.4byte	0x2c
 2655 0b6e 0D       		.uleb128 0xd
 2656 0b6f 0F090000 		.4byte	.LASF160
 2657 0b73 0E       		.byte	0xe
 2658 0b74 6901     		.2byte	0x169
 2659 0b76 2C000000 		.4byte	0x2c
 2660 0b7a 0D       		.uleb128 0xd
 2661 0b7b 82040000 		.4byte	.LASF161
 2662 0b7f 0E       		.byte	0xe
 2663 0b80 6901     		.2byte	0x169
 2664 0b82 2C000000 		.4byte	0x2c
 2665 0b86 27       		.uleb128 0x27
 2666 0b87 59617700 		.ascii	"Yaw\000"
 2667 0b8b 0E       		.byte	0xe
 2668 0b8c 6901     		.2byte	0x169
 2669 0b8e 2C000000 		.4byte	0x2c
 2670 0b92 28       		.uleb128 0x28
 2671 0b93 260B0000 		.4byte	0xb26
 2672 0b97 01       		.byte	0x1
 2673 0b98 10       		.byte	0x10
 2674 0b99 05       		.uleb128 0x5
 2675 0b9a 03       		.byte	0x3
 2676 0b9b 00000000 		.4byte	gyro
 2677 0b9f 28       		.uleb128 0x28
 2678 0ba0 320B0000 		.4byte	0xb32
 2679 0ba4 01       		.byte	0x1
 2680 0ba5 10       		.byte	0x10
 2681 0ba6 05       		.uleb128 0x5
 2682 0ba7 03       		.byte	0x3
 2683 0ba8 00000000 		.4byte	accel
 2684 0bac 29       		.uleb128 0x29
 2685 0bad 8D050000 		.4byte	.LASF162
 2686 0bb1 01       		.byte	0x1
 2687 0bb2 10       		.byte	0x10
 2688 0bb3 51000000 		.4byte	0x51
 2689 0bb7 05       		.uleb128 0x5
 2690 0bb8 03       		.byte	0x3
 2691 0bb9 00000000 		.4byte	sensors
 2692 0bbd 28       		.uleb128 0x28
 2693 0bbe 6E0B0000 		.4byte	0xb6e
 2694 0bc2 01       		.byte	0x1
 2695 0bc3 11       		.byte	0x11
 2696 0bc4 05       		.uleb128 0x5
 2697 0bc5 03       		.byte	0x3
 2698 0bc6 00000000 		.4byte	Pitch
 2699 0bca 2A       		.uleb128 0x2a
 2700 0bcb 713000   		.ascii	"q0\000"
 2701 0bce 01       		.byte	0x1
 2702 0bcf 12       		.byte	0x12
 2703 0bd0 2C000000 		.4byte	0x2c
 2704 0bd4 05       		.uleb128 0x5
ARM GAS  /tmp/ccIxWip2.s 			page 91


 2705 0bd5 03       		.byte	0x3
 2706 0bd6 00000000 		.4byte	q0
 2707 0bda 2A       		.uleb128 0x2a
 2708 0bdb 713100   		.ascii	"q1\000"
 2709 0bde 01       		.byte	0x1
 2710 0bdf 12       		.byte	0x12
 2711 0be0 2C000000 		.4byte	0x2c
 2712 0be4 05       		.uleb128 0x5
 2713 0be5 03       		.byte	0x3
 2714 0be6 00000000 		.4byte	q1
 2715 0bea 2A       		.uleb128 0x2a
 2716 0beb 713200   		.ascii	"q2\000"
 2717 0bee 01       		.byte	0x1
 2718 0bef 12       		.byte	0x12
 2719 0bf0 2C000000 		.4byte	0x2c
 2720 0bf4 05       		.uleb128 0x5
 2721 0bf5 03       		.byte	0x3
 2722 0bf6 00000000 		.4byte	q2
 2723 0bfa 2A       		.uleb128 0x2a
 2724 0bfb 713300   		.ascii	"q3\000"
 2725 0bfe 01       		.byte	0x1
 2726 0bff 12       		.byte	0x12
 2727 0c00 2C000000 		.4byte	0x2c
 2728 0c04 05       		.uleb128 0x5
 2729 0c05 03       		.byte	0x3
 2730 0c06 00000000 		.4byte	q3
 2731 0c0a 0A       		.uleb128 0xa
 2732 0c0b 33000000 		.4byte	0x33
 2733 0c0f 1A0C0000 		.4byte	0xc1a
 2734 0c13 0B       		.uleb128 0xb
 2735 0c14 D4000000 		.4byte	0xd4
 2736 0c18 08       		.byte	0x8
 2737 0c19 00       		.byte	0
 2738 0c1a 2B       		.uleb128 0x2b
 2739 0c1b 43090000 		.4byte	.LASF165
 2740 0c1f 01       		.byte	0x1
 2741 0c20 14       		.byte	0x14
 2742 0c21 0A0C0000 		.4byte	0xc0a
 2743 0c25 05       		.uleb128 0x5
 2744 0c26 03       		.byte	0x3
 2745 0c27 00000000 		.4byte	gyro_orientation
 2746 0c2b 0A       		.uleb128 0xa
 2747 0c2c 9F000000 		.4byte	0x9f
 2748 0c30 3B0C0000 		.4byte	0xc3b
 2749 0c34 0B       		.uleb128 0xb
 2750 0c35 D4000000 		.4byte	0xd4
 2751 0c39 0D       		.byte	0xd
 2752 0c3a 00       		.byte	0
 2753 0c3b 29       		.uleb128 0x29
 2754 0c3c C0030000 		.4byte	.LASF163
 2755 0c40 01       		.byte	0x1
 2756 0c41 55       		.byte	0x55
 2757 0c42 2B0C0000 		.4byte	0xc2b
 2758 0c46 05       		.uleb128 0x5
 2759 0c47 03       		.byte	0x3
 2760 0c48 00000000 		.4byte	buffer
 2761 0c4c 0A       		.uleb128 0xa
ARM GAS  /tmp/ccIxWip2.s 			page 92


 2762 0c4d 91000000 		.4byte	0x91
 2763 0c51 620C0000 		.4byte	0xc62
 2764 0c55 0B       		.uleb128 0xb
 2765 0c56 D4000000 		.4byte	0xd4
 2766 0c5a 05       		.byte	0x5
 2767 0c5b 0B       		.uleb128 0xb
 2768 0c5c D4000000 		.4byte	0xd4
 2769 0c60 0A       		.byte	0xa
 2770 0c61 00       		.byte	0
 2771 0c62 29       		.uleb128 0x29
 2772 0c63 6C060000 		.4byte	.LASF164
 2773 0c67 01       		.byte	0x1
 2774 0c68 56       		.byte	0x56
 2775 0c69 4C0C0000 		.4byte	0xc4c
 2776 0c6d 05       		.uleb128 0x5
 2777 0c6e 03       		.byte	0x3
 2778 0c6f 00000000 		.4byte	MPU6050_FIFO
 2779 0c73 28       		.uleb128 0x28
 2780 0c74 3E0B0000 		.4byte	0xb3e
 2781 0c78 01       		.byte	0x1
 2782 0c79 57       		.byte	0x57
 2783 0c7a 05       		.uleb128 0x5
 2784 0c7b 03       		.byte	0x3
 2785 0c7c 00000000 		.4byte	Gx_offset
 2786 0c80 28       		.uleb128 0x28
 2787 0c81 4A0B0000 		.4byte	0xb4a
 2788 0c85 01       		.byte	0x1
 2789 0c86 58       		.byte	0x58
 2790 0c87 05       		.uleb128 0x5
 2791 0c88 03       		.byte	0x3
 2792 0c89 00000000 		.4byte	Gy_offset
 2793 0c8d 28       		.uleb128 0x28
 2794 0c8e 560B0000 		.4byte	0xb56
 2795 0c92 01       		.byte	0x1
 2796 0c93 59       		.byte	0x59
 2797 0c94 05       		.uleb128 0x5
 2798 0c95 03       		.byte	0x3
 2799 0c96 00000000 		.4byte	Gz_offset
 2800 0c9a 2C       		.uleb128 0x2c
 2801 0c9b 9A070000 		.4byte	.LASF177
 2802 0c9f 01       		.byte	0x1
 2803 0ca0 1701     		.2byte	0x117
 2804 0ca2 91000000 		.4byte	0x91
 2805 0ca6 A8040000 		.4byte	.LFB79
 2806 0caa 70000000 		.4byte	.LFE79-.LFB79
 2807 0cae 01       		.uleb128 0x1
 2808 0caf 9C       		.byte	0x9c
 2809 0cb0 F50C0000 		.4byte	0xcf5
 2810 0cb4 2D       		.uleb128 0x2d
 2811 0cb5 F0040000 		.4byte	.LASF166
 2812 0cb9 01       		.byte	0x1
 2813 0cba 1901     		.2byte	0x119
 2814 0cbc 2C000000 		.4byte	0x2c
 2815 0cc0 00000000 		.4byte	.LLST19
 2816 0cc4 2E       		.uleb128 0x2e
 2817 0cc5 B2040000 		.4byte	.LVL131
 2818 0cc9 80140000 		.4byte	0x1480
ARM GAS  /tmp/ccIxWip2.s 			page 93


 2819 0ccd DE0C0000 		.4byte	0xcde
 2820 0cd1 2F       		.uleb128 0x2f
 2821 0cd2 01       		.uleb128 0x1
 2822 0cd3 50       		.byte	0x50
 2823 0cd4 02       		.uleb128 0x2
 2824 0cd5 09       		.byte	0x9
 2825 0cd6 D0       		.byte	0xd0
 2826 0cd7 2F       		.uleb128 0x2f
 2827 0cd8 01       		.uleb128 0x1
 2828 0cd9 51       		.byte	0x51
 2829 0cda 02       		.uleb128 0x2
 2830 0cdb 08       		.byte	0x8
 2831 0cdc 41       		.byte	0x41
 2832 0cdd 00       		.byte	0
 2833 0cde 30       		.uleb128 0x30
 2834 0cdf BC040000 		.4byte	.LVL132
 2835 0ce3 80140000 		.4byte	0x1480
 2836 0ce7 2F       		.uleb128 0x2f
 2837 0ce8 01       		.uleb128 0x1
 2838 0ce9 50       		.byte	0x50
 2839 0cea 02       		.uleb128 0x2
 2840 0ceb 09       		.byte	0x9
 2841 0cec D0       		.byte	0xd0
 2842 0ced 2F       		.uleb128 0x2f
 2843 0cee 01       		.uleb128 0x1
 2844 0cef 51       		.byte	0x51
 2845 0cf0 02       		.uleb128 0x2
 2846 0cf1 08       		.byte	0x8
 2847 0cf2 42       		.byte	0x42
 2848 0cf3 00       		.byte	0
 2849 0cf4 00       		.byte	0
 2850 0cf5 31       		.uleb128 0x31
 2851 0cf6 78020000 		.4byte	.LASF170
 2852 0cfa 01       		.byte	0x1
 2853 0cfb 0501     		.2byte	0x105
 2854 0cfd CC030000 		.4byte	.LFB78
 2855 0d01 DC000000 		.4byte	.LFE78-.LFB78
 2856 0d05 01       		.uleb128 0x1
 2857 0d06 9C       		.byte	0x9c
 2858 0d07 790D0000 		.4byte	0xd79
 2859 0d0b 32       		.uleb128 0x32
 2860 0d0c 98030000 		.4byte	.LASF167
 2861 0d10 01       		.byte	0x1
 2862 0d11 0701     		.2byte	0x107
 2863 0d13 7C000000 		.4byte	0x7c
 2864 0d17 02       		.uleb128 0x2
 2865 0d18 91       		.byte	0x91
 2866 0d19 64       		.sleb128 -28
 2867 0d1a 32       		.uleb128 0x32
 2868 0d1b 4D030000 		.4byte	.LASF168
 2869 0d1f 01       		.byte	0x1
 2870 0d20 0801     		.2byte	0x108
 2871 0d22 4A000000 		.4byte	0x4a
 2872 0d26 02       		.uleb128 0x2
 2873 0d27 91       		.byte	0x91
 2874 0d28 63       		.sleb128 -29
 2875 0d29 32       		.uleb128 0x32
ARM GAS  /tmp/ccIxWip2.s 			page 94


 2876 0d2a E4050000 		.4byte	.LASF169
 2877 0d2e 01       		.byte	0x1
 2878 0d2f 0901     		.2byte	0x109
 2879 0d31 790D0000 		.4byte	0xd79
 2880 0d35 02       		.uleb128 0x2
 2881 0d36 91       		.byte	0x91
 2882 0d37 50       		.sleb128 -48
 2883 0d38 2E       		.uleb128 0x2e
 2884 0d39 F0030000 		.4byte	.LVL113
 2885 0d3d 8B140000 		.4byte	0x148b
 2886 0d41 6F0D0000 		.4byte	0xd6f
 2887 0d45 2F       		.uleb128 0x2f
 2888 0d46 01       		.uleb128 0x1
 2889 0d47 50       		.byte	0x50
 2890 0d48 03       		.uleb128 0x3
 2891 0d49 74       		.byte	0x74
 2892 0d4a A002     		.sleb128 288
 2893 0d4c 2F       		.uleb128 0x2f
 2894 0d4d 01       		.uleb128 0x1
 2895 0d4e 51       		.byte	0x51
 2896 0d4f 03       		.uleb128 0x3
 2897 0d50 74       		.byte	0x74
 2898 0d51 9802     		.sleb128 280
 2899 0d53 2F       		.uleb128 0x2f
 2900 0d54 01       		.uleb128 0x1
 2901 0d55 52       		.byte	0x52
 2902 0d56 02       		.uleb128 0x2
 2903 0d57 91       		.byte	0x91
 2904 0d58 50       		.sleb128 -48
 2905 0d59 2F       		.uleb128 0x2f
 2906 0d5a 01       		.uleb128 0x1
 2907 0d5b 53       		.byte	0x53
 2908 0d5c 02       		.uleb128 0x2
 2909 0d5d 91       		.byte	0x91
 2910 0d5e 64       		.sleb128 -28
 2911 0d5f 2F       		.uleb128 0x2f
 2912 0d60 02       		.uleb128 0x2
 2913 0d61 7D       		.byte	0x7d
 2914 0d62 00       		.sleb128 0
 2915 0d63 03       		.uleb128 0x3
 2916 0d64 74       		.byte	0x74
 2917 0d65 A602     		.sleb128 294
 2918 0d67 2F       		.uleb128 0x2f
 2919 0d68 02       		.uleb128 0x2
 2920 0d69 7D       		.byte	0x7d
 2921 0d6a 04       		.sleb128 4
 2922 0d6b 02       		.uleb128 0x2
 2923 0d6c 91       		.byte	0x91
 2924 0d6d 63       		.sleb128 -29
 2925 0d6e 00       		.byte	0
 2926 0d6f 33       		.uleb128 0x33
 2927 0d70 7A040000 		.4byte	.LVL128
 2928 0d74 96140000 		.4byte	0x1496
 2929 0d78 00       		.byte	0
 2930 0d79 0A       		.uleb128 0xa
 2931 0d7a 6A000000 		.4byte	0x6a
 2932 0d7e 890D0000 		.4byte	0xd89
ARM GAS  /tmp/ccIxWip2.s 			page 95


 2933 0d82 0B       		.uleb128 0xb
 2934 0d83 D4000000 		.4byte	0xd4
 2935 0d87 03       		.byte	0x3
 2936 0d88 00       		.byte	0
 2937 0d89 34       		.uleb128 0x34
 2938 0d8a 58080000 		.4byte	.LASF171
 2939 0d8e 01       		.byte	0x1
 2940 0d8f E6       		.byte	0xe6
 2941 0d90 28020000 		.4byte	.LFB77
 2942 0d94 A4010000 		.4byte	.LFE77-.LFB77
 2943 0d98 01       		.uleb128 0x1
 2944 0d99 9C       		.byte	0x9c
 2945 0d9a A6100000 		.4byte	0x10a6
 2946 0d9e 2B       		.uleb128 0x2b
 2947 0d9f B6090000 		.4byte	.LASF172
 2948 0da3 01       		.byte	0x1
 2949 0da4 E8       		.byte	0xe8
 2950 0da5 A6100000 		.4byte	0x10a6
 2951 0da9 02       		.uleb128 0x2
 2952 0daa 91       		.byte	0x91
 2953 0dab 6C       		.sleb128 -20
 2954 0dac 35       		.uleb128 0x35
 2955 0dad 65140000 		.4byte	0x1465
 2956 0db1 56020000 		.4byte	.LBB21
 2957 0db5 1A000000 		.4byte	.LBE21-.LBB21
 2958 0db9 01       		.byte	0x1
 2959 0dba EB       		.byte	0xeb
 2960 0dbb F00D0000 		.4byte	0xdf0
 2961 0dbf 36       		.uleb128 0x36
 2962 0dc0 6E140000 		.4byte	0x146e
 2963 0dc4 56020000 		.4byte	.LBB23
 2964 0dc8 04000000 		.4byte	.LBE23-.LBB23
 2965 0dcc 03       		.byte	0x3
 2966 0dcd 5206     		.2byte	0x652
 2967 0dcf 36       		.uleb128 0x36
 2968 0dd0 6E140000 		.4byte	0x146e
 2969 0dd4 68020000 		.4byte	.LBB25
 2970 0dd8 04000000 		.4byte	.LBE25-.LBB25
 2971 0ddc 03       		.byte	0x3
 2972 0ddd 5706     		.2byte	0x657
 2973 0ddf 36       		.uleb128 0x36
 2974 0de0 77140000 		.4byte	0x1477
 2975 0de4 6C020000 		.4byte	.LBB27
 2976 0de8 04000000 		.4byte	.LBE27-.LBB27
 2977 0dec 03       		.byte	0x3
 2978 0ded 5B06     		.2byte	0x65b
 2979 0def 00       		.byte	0
 2980 0df0 35       		.uleb128 0x35
 2981 0df1 02140000 		.4byte	0x1402
 2982 0df5 96020000 		.4byte	.LBB29
 2983 0df9 20000000 		.4byte	.LBE29-.LBB29
 2984 0dfd 01       		.byte	0x1
 2985 0dfe F6       		.byte	0xf6
 2986 0dff 580E0000 		.4byte	0xe58
 2987 0e03 37       		.uleb128 0x37
 2988 0e04 12140000 		.4byte	0x1412
 2989 0e08 2E000000 		.4byte	.LLST16
ARM GAS  /tmp/ccIxWip2.s 			page 96


 2990 0e0c 38       		.uleb128 0x38
 2991 0e0d 96020000 		.4byte	.LBB30
 2992 0e11 20000000 		.4byte	.LBE30-.LBB30
 2993 0e15 39       		.uleb128 0x39
 2994 0e16 1D140000 		.4byte	0x141d
 2995 0e1a 46000000 		.4byte	.LLST17
 2996 0e1e 2E       		.uleb128 0x2e
 2997 0e1f 9E020000 		.4byte	.LVL77
 2998 0e23 2F140000 		.4byte	0x142f
 2999 0e27 320E0000 		.4byte	0xe32
 3000 0e2b 2F       		.uleb128 0x2f
 3001 0e2c 01       		.uleb128 0x1
 3002 0e2d 50       		.byte	0x50
 3003 0e2e 02       		.uleb128 0x2
 3004 0e2f 74       		.byte	0x74
 3005 0e30 00       		.sleb128 0
 3006 0e31 00       		.byte	0
 3007 0e32 2E       		.uleb128 0x2e
 3008 0e33 A6020000 		.4byte	.LVL79
 3009 0e37 2F140000 		.4byte	0x142f
 3010 0e3b 460E0000 		.4byte	0xe46
 3011 0e3f 2F       		.uleb128 0x2f
 3012 0e40 01       		.uleb128 0x1
 3013 0e41 50       		.byte	0x50
 3014 0e42 02       		.uleb128 0x2
 3015 0e43 74       		.byte	0x74
 3016 0e44 03       		.sleb128 3
 3017 0e45 00       		.byte	0
 3018 0e46 30       		.uleb128 0x30
 3019 0e47 AE020000 		.4byte	.LVL81
 3020 0e4b 2F140000 		.4byte	0x142f
 3021 0e4f 2F       		.uleb128 0x2f
 3022 0e50 01       		.uleb128 0x1
 3023 0e51 50       		.byte	0x50
 3024 0e52 02       		.uleb128 0x2
 3025 0e53 74       		.byte	0x74
 3026 0e54 06       		.sleb128 6
 3027 0e55 00       		.byte	0
 3028 0e56 00       		.byte	0
 3029 0e57 00       		.byte	0
 3030 0e58 3A       		.uleb128 0x3a
 3031 0e59 AC130000 		.4byte	0x13ac
 3032 0e5d D0020000 		.4byte	.LBB31
 3033 0e61 00000000 		.4byte	.Ldebug_ranges0+0
 3034 0e65 01       		.byte	0x1
 3035 0e66 FE       		.byte	0xfe
 3036 0e67 220F0000 		.4byte	0xf22
 3037 0e6b 3B       		.uleb128 0x3b
 3038 0e6c 00000000 		.4byte	.Ldebug_ranges0+0
 3039 0e70 39       		.uleb128 0x39
 3040 0e71 B8130000 		.4byte	0x13b8
 3041 0e75 6B000000 		.4byte	.LLST18
 3042 0e79 3C       		.uleb128 0x3c
 3043 0e7a C3130000 		.4byte	0x13c3
 3044 0e7e 02       		.uleb128 0x2
 3045 0e7f 91       		.byte	0x91
 3046 0e80 54       		.sleb128 -44
ARM GAS  /tmp/ccIxWip2.s 			page 97


 3047 0e81 3C       		.uleb128 0x3c
 3048 0e82 CE130000 		.4byte	0x13ce
 3049 0e86 02       		.uleb128 0x2
 3050 0e87 91       		.byte	0x91
 3051 0e88 60       		.sleb128 -32
 3052 0e89 3D       		.uleb128 0x3d
 3053 0e8a 26030000 		.4byte	.LBB33
 3054 0e8e A6000000 		.4byte	.LBE33-.LBB33
 3055 0e92 0A0F0000 		.4byte	0xf0a
 3056 0e96 3C       		.uleb128 0x3c
 3057 0e97 DA130000 		.4byte	0x13da
 3058 0e9b 02       		.uleb128 0x2
 3059 0e9c 91       		.byte	0x91
 3060 0e9d 50       		.sleb128 -48
 3061 0e9e 3C       		.uleb128 0x3c
 3062 0e9f E5130000 		.4byte	0x13e5
 3063 0ea3 02       		.uleb128 0x2
 3064 0ea4 91       		.byte	0x91
 3065 0ea5 4E       		.sleb128 -50
 3066 0ea6 2E       		.uleb128 0x2e
 3067 0ea7 2C030000 		.4byte	.LVL99
 3068 0eab A1140000 		.4byte	0x14a1
 3069 0eaf BA0E0000 		.4byte	0xeba
 3070 0eb3 2F       		.uleb128 0x2f
 3071 0eb4 01       		.uleb128 0x1
 3072 0eb5 50       		.byte	0x50
 3073 0eb6 02       		.uleb128 0x2
 3074 0eb7 91       		.byte	0x91
 3075 0eb8 50       		.sleb128 -48
 3076 0eb9 00       		.byte	0
 3077 0eba 2E       		.uleb128 0x2e
 3078 0ebb 6A030000 		.4byte	.LVL109
 3079 0ebf AC140000 		.4byte	0x14ac
 3080 0ec3 CE0E0000 		.4byte	0xece
 3081 0ec7 2F       		.uleb128 0x2f
 3082 0ec8 01       		.uleb128 0x1
 3083 0ec9 50       		.byte	0x50
 3084 0eca 02       		.uleb128 0x2
 3085 0ecb 91       		.byte	0x91
 3086 0ecc 54       		.sleb128 -44
 3087 0ecd 00       		.byte	0
 3088 0ece 2E       		.uleb128 0x2e
 3089 0ecf 72030000 		.4byte	.LVL110
 3090 0ed3 B7140000 		.4byte	0x14b7
 3091 0ed7 E20E0000 		.4byte	0xee2
 3092 0edb 2F       		.uleb128 0x2f
 3093 0edc 01       		.uleb128 0x1
 3094 0edd 50       		.byte	0x50
 3095 0ede 02       		.uleb128 0x2
 3096 0edf 91       		.byte	0x91
 3097 0ee0 4E       		.sleb128 -50
 3098 0ee1 00       		.byte	0
 3099 0ee2 2E       		.uleb128 0x2e
 3100 0ee3 94030000 		.4byte	.LVL111
 3101 0ee7 C2140000 		.4byte	0x14c2
 3102 0eeb F60E0000 		.4byte	0xef6
 3103 0eef 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccIxWip2.s 			page 98


 3104 0ef0 01       		.uleb128 0x1
 3105 0ef1 50       		.byte	0x50
 3106 0ef2 02       		.uleb128 0x2
 3107 0ef3 91       		.byte	0x91
 3108 0ef4 60       		.sleb128 -32
 3109 0ef5 00       		.byte	0
 3110 0ef6 30       		.uleb128 0x30
 3111 0ef7 9A030000 		.4byte	.LVL112
 3112 0efb CD140000 		.4byte	0x14cd
 3113 0eff 2F       		.uleb128 0x2f
 3114 0f00 01       		.uleb128 0x1
 3115 0f01 50       		.byte	0x50
 3116 0f02 05       		.uleb128 0x5
 3117 0f03 03       		.byte	0x3
 3118 0f04 10010000 		.4byte	.LC7
 3119 0f08 00       		.byte	0
 3120 0f09 00       		.byte	0
 3121 0f0a 30       		.uleb128 0x30
 3122 0f0b D8020000 		.4byte	.LVL86
 3123 0f0f DC140000 		.4byte	0x14dc
 3124 0f13 2F       		.uleb128 0x2f
 3125 0f14 01       		.uleb128 0x1
 3126 0f15 50       		.byte	0x50
 3127 0f16 02       		.uleb128 0x2
 3128 0f17 91       		.byte	0x91
 3129 0f18 54       		.sleb128 -44
 3130 0f19 2F       		.uleb128 0x2f
 3131 0f1a 01       		.uleb128 0x1
 3132 0f1b 51       		.byte	0x51
 3133 0f1c 02       		.uleb128 0x2
 3134 0f1d 91       		.byte	0x91
 3135 0f1e 60       		.sleb128 -32
 3136 0f1f 00       		.byte	0
 3137 0f20 00       		.byte	0
 3138 0f21 00       		.byte	0
 3139 0f22 2E       		.uleb128 0x2e
 3140 0f23 3E020000 		.4byte	.LVL69
 3141 0f27 E7140000 		.4byte	0x14e7
 3142 0f2b 470F0000 		.4byte	0xf47
 3143 0f2f 2F       		.uleb128 0x2f
 3144 0f30 01       		.uleb128 0x1
 3145 0f31 50       		.byte	0x50
 3146 0f32 02       		.uleb128 0x2
 3147 0f33 08       		.byte	0x8
 3148 0f34 68       		.byte	0x68
 3149 0f35 2F       		.uleb128 0x2f
 3150 0f36 01       		.uleb128 0x1
 3151 0f37 51       		.byte	0x51
 3152 0f38 02       		.uleb128 0x2
 3153 0f39 08       		.byte	0x8
 3154 0f3a 75       		.byte	0x75
 3155 0f3b 2F       		.uleb128 0x2f
 3156 0f3c 01       		.uleb128 0x1
 3157 0f3d 52       		.byte	0x52
 3158 0f3e 01       		.uleb128 0x1
 3159 0f3f 31       		.byte	0x31
 3160 0f40 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccIxWip2.s 			page 99


 3161 0f41 01       		.uleb128 0x1
 3162 0f42 53       		.byte	0x53
 3163 0f43 02       		.uleb128 0x2
 3164 0f44 91       		.byte	0x91
 3165 0f45 6C       		.sleb128 -20
 3166 0f46 00       		.byte	0
 3167 0f47 2E       		.uleb128 0x2e
 3168 0f48 44020000 		.4byte	.LVL70
 3169 0f4c CD140000 		.4byte	0x14cd
 3170 0f50 5E0F0000 		.4byte	0xf5e
 3171 0f54 2F       		.uleb128 0x2f
 3172 0f55 01       		.uleb128 0x1
 3173 0f56 50       		.byte	0x50
 3174 0f57 05       		.uleb128 0x5
 3175 0f58 03       		.byte	0x3
 3176 0f59 00000000 		.4byte	.LC0
 3177 0f5d 00       		.byte	0
 3178 0f5e 33       		.uleb128 0x33
 3179 0f5f 50020000 		.4byte	.LVL71
 3180 0f63 F2140000 		.4byte	0x14f2
 3181 0f67 2E       		.uleb128 0x2e
 3182 0f68 76020000 		.4byte	.LVL72
 3183 0f6c FD140000 		.4byte	0x14fd
 3184 0f70 7B0F0000 		.4byte	0xf7b
 3185 0f74 2F       		.uleb128 0x2f
 3186 0f75 01       		.uleb128 0x1
 3187 0f76 50       		.byte	0x50
 3188 0f77 02       		.uleb128 0x2
 3189 0f78 08       		.byte	0x8
 3190 0f79 78       		.byte	0x78
 3191 0f7a 00       		.byte	0
 3192 0f7b 2E       		.uleb128 0x2e
 3193 0f7c 80020000 		.4byte	.LVL73
 3194 0f80 08150000 		.4byte	0x1508
 3195 0f84 8F0F0000 		.4byte	0xf8f
 3196 0f88 2F       		.uleb128 0x2f
 3197 0f89 01       		.uleb128 0x1
 3198 0f8a 50       		.byte	0x50
 3199 0f8b 02       		.uleb128 0x2
 3200 0f8c 08       		.byte	0x8
 3201 0f8d 78       		.byte	0x78
 3202 0f8e 00       		.byte	0
 3203 0f8f 2E       		.uleb128 0x2e
 3204 0f90 8A020000 		.4byte	.LVL74
 3205 0f94 13150000 		.4byte	0x1513
 3206 0f98 A30F0000 		.4byte	0xfa3
 3207 0f9c 2F       		.uleb128 0x2f
 3208 0f9d 01       		.uleb128 0x1
 3209 0f9e 50       		.byte	0x50
 3210 0f9f 02       		.uleb128 0x2
 3211 0fa0 08       		.byte	0x8
 3212 0fa1 C8       		.byte	0xc8
 3213 0fa2 00       		.byte	0
 3214 0fa3 33       		.uleb128 0x33
 3215 0fa4 92020000 		.4byte	.LVL75
 3216 0fa8 1E150000 		.4byte	0x151e
 3217 0fac 33       		.uleb128 0x33
ARM GAS  /tmp/ccIxWip2.s 			page 100


 3218 0fad BC020000 		.4byte	.LVL83
 3219 0fb1 29150000 		.4byte	0x1529
 3220 0fb5 2E       		.uleb128 0x2e
 3221 0fb6 C6020000 		.4byte	.LVL84
 3222 0fba 34150000 		.4byte	0x1534
 3223 0fbe CA0F0000 		.4byte	0xfca
 3224 0fc2 2F       		.uleb128 0x2f
 3225 0fc3 01       		.uleb128 0x1
 3226 0fc4 50       		.byte	0x50
 3227 0fc5 03       		.uleb128 0x3
 3228 0fc6 0A       		.byte	0xa
 3229 0fc7 7301     		.2byte	0x173
 3230 0fc9 00       		.byte	0
 3231 0fca 2E       		.uleb128 0x2e
 3232 0fcb CE020000 		.4byte	.LVL85
 3233 0fcf 3F150000 		.4byte	0x153f
 3234 0fd3 DE0F0000 		.4byte	0xfde
 3235 0fd7 2F       		.uleb128 0x2f
 3236 0fd8 01       		.uleb128 0x1
 3237 0fd9 50       		.byte	0x50
 3238 0fda 02       		.uleb128 0x2
 3239 0fdb 08       		.byte	0x8
 3240 0fdc C8       		.byte	0xc8
 3241 0fdd 00       		.byte	0
 3242 0fde 2E       		.uleb128 0x2e
 3243 0fdf E2020000 		.4byte	.LVL88
 3244 0fe3 4A150000 		.4byte	0x154a
 3245 0fe7 F10F0000 		.4byte	0xff1
 3246 0feb 2F       		.uleb128 0x2f
 3247 0fec 01       		.uleb128 0x1
 3248 0fed 50       		.byte	0x50
 3249 0fee 01       		.uleb128 0x1
 3250 0fef 31       		.byte	0x31
 3251 0ff0 00       		.byte	0
 3252 0ff1 2E       		.uleb128 0x2e
 3253 0ff2 EC020000 		.4byte	.LVL89
 3254 0ff6 CD140000 		.4byte	0x14cd
 3255 0ffa 08100000 		.4byte	0x1008
 3256 0ffe 2F       		.uleb128 0x2f
 3257 0fff 01       		.uleb128 0x1
 3258 1000 50       		.byte	0x50
 3259 1001 05       		.uleb128 0x5
 3260 1002 03       		.byte	0x3
 3261 1003 34010000 		.4byte	.LC8
 3262 1007 00       		.byte	0
 3263 1008 2E       		.uleb128 0x2e
 3264 1009 F4020000 		.4byte	.LVL90
 3265 100d CD140000 		.4byte	0x14cd
 3266 1011 1F100000 		.4byte	0x101f
 3267 1015 2F       		.uleb128 0x2f
 3268 1016 01       		.uleb128 0x1
 3269 1017 50       		.byte	0x50
 3270 1018 05       		.uleb128 0x5
 3271 1019 03       		.byte	0x3
 3272 101a 00000000 		.4byte	.LC0
 3273 101e 00       		.byte	0
 3274 101f 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccIxWip2.s 			page 101


 3275 1020 FC020000 		.4byte	.LVL91
 3276 1024 CD140000 		.4byte	0x14cd
 3277 1028 36100000 		.4byte	0x1036
 3278 102c 2F       		.uleb128 0x2f
 3279 102d 01       		.uleb128 0x1
 3280 102e 50       		.byte	0x50
 3281 102f 05       		.uleb128 0x5
 3282 1030 03       		.byte	0x3
 3283 1031 20000000 		.4byte	.LC1
 3284 1035 00       		.byte	0
 3285 1036 2E       		.uleb128 0x2e
 3286 1037 04030000 		.4byte	.LVL92
 3287 103b CD140000 		.4byte	0x14cd
 3288 103f 4D100000 		.4byte	0x104d
 3289 1043 2F       		.uleb128 0x2f
 3290 1044 01       		.uleb128 0x1
 3291 1045 50       		.byte	0x50
 3292 1046 05       		.uleb128 0x5
 3293 1047 03       		.byte	0x3
 3294 1048 44000000 		.4byte	.LC2
 3295 104c 00       		.byte	0
 3296 104d 2E       		.uleb128 0x2e
 3297 104e 0C030000 		.4byte	.LVL93
 3298 1052 CD140000 		.4byte	0x14cd
 3299 1056 64100000 		.4byte	0x1064
 3300 105a 2F       		.uleb128 0x2f
 3301 105b 01       		.uleb128 0x1
 3302 105c 50       		.byte	0x50
 3303 105d 05       		.uleb128 0x5
 3304 105e 03       		.byte	0x3
 3305 105f 6C000000 		.4byte	.LC3
 3306 1063 00       		.byte	0
 3307 1064 2E       		.uleb128 0x2e
 3308 1065 14030000 		.4byte	.LVL94
 3309 1069 CD140000 		.4byte	0x14cd
 3310 106d 7B100000 		.4byte	0x107b
 3311 1071 2F       		.uleb128 0x2f
 3312 1072 01       		.uleb128 0x1
 3313 1073 50       		.byte	0x50
 3314 1074 05       		.uleb128 0x5
 3315 1075 03       		.byte	0x3
 3316 1076 A0000000 		.4byte	.LC4
 3317 107a 00       		.byte	0
 3318 107b 2E       		.uleb128 0x2e
 3319 107c 1C030000 		.4byte	.LVL95
 3320 1080 CD140000 		.4byte	0x14cd
 3321 1084 92100000 		.4byte	0x1092
 3322 1088 2F       		.uleb128 0x2f
 3323 1089 01       		.uleb128 0x1
 3324 108a 50       		.byte	0x50
 3325 108b 05       		.uleb128 0x5
 3326 108c 03       		.byte	0x3
 3327 108d C8000000 		.4byte	.LC5
 3328 1091 00       		.byte	0
 3329 1092 30       		.uleb128 0x30
 3330 1093 24030000 		.4byte	.LVL96
 3331 1097 CD140000 		.4byte	0x14cd
ARM GAS  /tmp/ccIxWip2.s 			page 102


 3332 109b 2F       		.uleb128 0x2f
 3333 109c 01       		.uleb128 0x1
 3334 109d 50       		.byte	0x50
 3335 109e 05       		.uleb128 0x5
 3336 109f 03       		.byte	0x3
 3337 10a0 EC000000 		.4byte	.LC6
 3338 10a4 00       		.byte	0
 3339 10a5 00       		.byte	0
 3340 10a6 0A       		.uleb128 0xa
 3341 10a7 8C020000 		.4byte	0x28c
 3342 10ab B6100000 		.4byte	0x10b6
 3343 10af 0B       		.uleb128 0xb
 3344 10b0 D4000000 		.4byte	0xd4
 3345 10b4 00       		.byte	0
 3346 10b5 00       		.byte	0
 3347 10b6 3E       		.uleb128 0x3e
 3348 10b7 C1070000 		.4byte	.LASF173
 3349 10bb 01       		.byte	0x1
 3350 10bc D7       		.byte	0xd7
 3351 10bd 00020000 		.4byte	.LFB76
 3352 10c1 28000000 		.4byte	.LFE76-.LFB76
 3353 10c5 01       		.uleb128 0x1
 3354 10c6 9C       		.byte	0x9c
 3355 10c7 3A110000 		.4byte	0x113a
 3356 10cb 2E       		.uleb128 0x2e
 3357 10cc 08020000 		.4byte	.LVL63
 3358 10d0 E1120000 		.4byte	0x12e1
 3359 10d4 DE100000 		.4byte	0x10de
 3360 10d8 2F       		.uleb128 0x2f
 3361 10d9 01       		.uleb128 0x1
 3362 10da 50       		.byte	0x50
 3363 10db 01       		.uleb128 0x1
 3364 10dc 32       		.byte	0x32
 3365 10dd 00       		.byte	0
 3366 10de 2E       		.uleb128 0x2e
 3367 10df 0E020000 		.4byte	.LVL64
 3368 10e3 9D120000 		.4byte	0x129d
 3369 10e7 F1100000 		.4byte	0x10f1
 3370 10eb 2F       		.uleb128 0x2f
 3371 10ec 01       		.uleb128 0x1
 3372 10ed 50       		.byte	0x50
 3373 10ee 01       		.uleb128 0x1
 3374 10ef 33       		.byte	0x33
 3375 10f0 00       		.byte	0
 3376 10f1 2E       		.uleb128 0x2e
 3377 10f2 14020000 		.4byte	.LVL65
 3378 10f6 59120000 		.4byte	0x1259
 3379 10fa 04110000 		.4byte	0x1104
 3380 10fe 2F       		.uleb128 0x2f
 3381 10ff 01       		.uleb128 0x1
 3382 1100 50       		.byte	0x50
 3383 1101 01       		.uleb128 0x1
 3384 1102 30       		.byte	0x30
 3385 1103 00       		.byte	0
 3386 1104 2E       		.uleb128 0x2e
 3387 1105 1A020000 		.4byte	.LVL66
 3388 1109 19120000 		.4byte	0x1219
ARM GAS  /tmp/ccIxWip2.s 			page 103


 3389 110d 17110000 		.4byte	0x1117
 3390 1111 2F       		.uleb128 0x2f
 3391 1112 01       		.uleb128 0x1
 3392 1113 50       		.byte	0x50
 3393 1114 01       		.uleb128 0x1
 3394 1115 30       		.byte	0x30
 3395 1116 00       		.byte	0
 3396 1117 2E       		.uleb128 0x2e
 3397 1118 20020000 		.4byte	.LVL67
 3398 111c 7A110000 		.4byte	0x117a
 3399 1120 2A110000 		.4byte	0x112a
 3400 1124 2F       		.uleb128 0x2f
 3401 1125 01       		.uleb128 0x1
 3402 1126 50       		.byte	0x50
 3403 1127 01       		.uleb128 0x1
 3404 1128 30       		.byte	0x30
 3405 1129 00       		.byte	0
 3406 112a 30       		.uleb128 0x30
 3407 112b 26020000 		.4byte	.LVL68
 3408 112f 3A110000 		.4byte	0x113a
 3409 1133 2F       		.uleb128 0x2f
 3410 1134 01       		.uleb128 0x1
 3411 1135 50       		.byte	0x50
 3412 1136 01       		.uleb128 0x1
 3413 1137 30       		.byte	0x30
 3414 1138 00       		.byte	0
 3415 1139 00       		.byte	0
 3416 113a 3E       		.uleb128 0x3e
 3417 113b C1040000 		.4byte	.LASF174
 3418 113f 01       		.byte	0x1
 3419 1140 D2       		.byte	0xd2
 3420 1141 F0010000 		.4byte	.LFB75
 3421 1145 10000000 		.4byte	.LFE75-.LFB75
 3422 1149 01       		.uleb128 0x1
 3423 114a 9C       		.byte	0x9c
 3424 114b 7A110000 		.4byte	0x117a
 3425 114f 3F       		.uleb128 0x3f
 3426 1150 02040000 		.4byte	.LASF176
 3427 1154 01       		.byte	0x1
 3428 1155 D2       		.byte	0xd2
 3429 1156 9F000000 		.4byte	0x9f
 3430 115a 89000000 		.4byte	.LLST15
 3431 115e 30       		.uleb128 0x30
 3432 115f FE010000 		.4byte	.LVL62
 3433 1163 55150000 		.4byte	0x1555
 3434 1167 2F       		.uleb128 0x2f
 3435 1168 01       		.uleb128 0x1
 3436 1169 50       		.byte	0x50
 3437 116a 02       		.uleb128 0x2
 3438 116b 09       		.byte	0x9
 3439 116c D0       		.byte	0xd0
 3440 116d 2F       		.uleb128 0x2f
 3441 116e 01       		.uleb128 0x1
 3442 116f 51       		.byte	0x51
 3443 1170 02       		.uleb128 0x2
 3444 1171 08       		.byte	0x8
 3445 1172 37       		.byte	0x37
ARM GAS  /tmp/ccIxWip2.s 			page 104


 3446 1173 2F       		.uleb128 0x2f
 3447 1174 01       		.uleb128 0x1
 3448 1175 52       		.byte	0x52
 3449 1176 01       		.uleb128 0x1
 3450 1177 31       		.byte	0x31
 3451 1178 00       		.byte	0
 3452 1179 00       		.byte	0
 3453 117a 3E       		.uleb128 0x3e
 3454 117b 57050000 		.4byte	.LASF175
 3455 117f 01       		.byte	0x1
 3456 1180 CD       		.byte	0xcd
 3457 1181 E0010000 		.4byte	.LFB74
 3458 1185 10000000 		.4byte	.LFE74-.LFB74
 3459 1189 01       		.uleb128 0x1
 3460 118a 9C       		.byte	0x9c
 3461 118b BA110000 		.4byte	0x11ba
 3462 118f 3F       		.uleb128 0x3f
 3463 1190 02040000 		.4byte	.LASF176
 3464 1194 01       		.byte	0x1
 3465 1195 CD       		.byte	0xcd
 3466 1196 9F000000 		.4byte	0x9f
 3467 119a AA000000 		.4byte	.LLST14
 3468 119e 30       		.uleb128 0x30
 3469 119f EE010000 		.4byte	.LVL59
 3470 11a3 55150000 		.4byte	0x1555
 3471 11a7 2F       		.uleb128 0x2f
 3472 11a8 01       		.uleb128 0x1
 3473 11a9 50       		.byte	0x50
 3474 11aa 02       		.uleb128 0x2
 3475 11ab 09       		.byte	0x9
 3476 11ac D0       		.byte	0xd0
 3477 11ad 2F       		.uleb128 0x2f
 3478 11ae 01       		.uleb128 0x1
 3479 11af 51       		.byte	0x51
 3480 11b0 02       		.uleb128 0x2
 3481 11b1 08       		.byte	0x8
 3482 11b2 6A       		.byte	0x6a
 3483 11b3 2F       		.uleb128 0x2f
 3484 11b4 01       		.uleb128 0x1
 3485 11b5 52       		.byte	0x52
 3486 11b6 01       		.uleb128 0x1
 3487 11b7 35       		.byte	0x35
 3488 11b8 00       		.byte	0
 3489 11b9 00       		.byte	0
 3490 11ba 40       		.uleb128 0x40
 3491 11bb A9030000 		.4byte	.LASF178
 3492 11bf 01       		.byte	0x1
 3493 11c0 C5       		.byte	0xc5
 3494 11c1 9F000000 		.4byte	0x9f
 3495 11c5 D0010000 		.4byte	.LFB73
 3496 11c9 10000000 		.4byte	.LFE73-.LFB73
 3497 11cd 01       		.uleb128 0x1
 3498 11ce 9C       		.byte	0x9c
 3499 11cf DD110000 		.4byte	0x11dd
 3500 11d3 33       		.uleb128 0x33
 3501 11d4 D6010000 		.4byte	.LVL56
 3502 11d8 DD110000 		.4byte	0x11dd
ARM GAS  /tmp/ccIxWip2.s 			page 105


 3503 11dc 00       		.byte	0
 3504 11dd 40       		.uleb128 0x40
 3505 11de E9050000 		.4byte	.LASF179
 3506 11e2 01       		.byte	0x1
 3507 11e3 BE       		.byte	0xbe
 3508 11e4 9F000000 		.4byte	0x9f
 3509 11e8 B4010000 		.4byte	.LFB72
 3510 11ec 1C000000 		.4byte	.LFE72-.LFB72
 3511 11f0 01       		.uleb128 0x1
 3512 11f1 9C       		.byte	0x9c
 3513 11f2 19120000 		.4byte	0x1219
 3514 11f6 30       		.uleb128 0x30
 3515 11f7 C6010000 		.4byte	.LVL55
 3516 11fb E7140000 		.4byte	0x14e7
 3517 11ff 2F       		.uleb128 0x2f
 3518 1200 01       		.uleb128 0x1
 3519 1201 50       		.byte	0x50
 3520 1202 02       		.uleb128 0x2
 3521 1203 09       		.byte	0x9
 3522 1204 D0       		.byte	0xd0
 3523 1205 2F       		.uleb128 0x2f
 3524 1206 01       		.uleb128 0x1
 3525 1207 51       		.byte	0x51
 3526 1208 02       		.uleb128 0x2
 3527 1209 08       		.byte	0x8
 3528 120a 75       		.byte	0x75
 3529 120b 2F       		.uleb128 0x2f
 3530 120c 01       		.uleb128 0x1
 3531 120d 52       		.byte	0x52
 3532 120e 01       		.uleb128 0x1
 3533 120f 31       		.byte	0x31
 3534 1210 2F       		.uleb128 0x2f
 3535 1211 01       		.uleb128 0x1
 3536 1212 53       		.byte	0x53
 3537 1213 03       		.uleb128 0x3
 3538 1214 74       		.byte	0x74
 3539 1215 8802     		.sleb128 264
 3540 1217 00       		.byte	0
 3541 1218 00       		.byte	0
 3542 1219 3E       		.uleb128 0x3e
 3543 121a 83090000 		.4byte	.LASF180
 3544 121e 01       		.byte	0x1
 3545 121f B9       		.byte	0xb9
 3546 1220 A4010000 		.4byte	.LFB71
 3547 1224 10000000 		.4byte	.LFE71-.LFB71
 3548 1228 01       		.uleb128 0x1
 3549 1229 9C       		.byte	0x9c
 3550 122a 59120000 		.4byte	0x1259
 3551 122e 3F       		.uleb128 0x3f
 3552 122f 02040000 		.4byte	.LASF176
 3553 1233 01       		.byte	0x1
 3554 1234 B9       		.byte	0xb9
 3555 1235 9F000000 		.4byte	0x9f
 3556 1239 CB000000 		.4byte	.LLST13
 3557 123d 30       		.uleb128 0x30
 3558 123e B2010000 		.4byte	.LVL54
 3559 1242 55150000 		.4byte	0x1555
ARM GAS  /tmp/ccIxWip2.s 			page 106


 3560 1246 2F       		.uleb128 0x2f
 3561 1247 01       		.uleb128 0x1
 3562 1248 50       		.byte	0x50
 3563 1249 02       		.uleb128 0x2
 3564 124a 09       		.byte	0x9
 3565 124b D0       		.byte	0xd0
 3566 124c 2F       		.uleb128 0x2f
 3567 124d 01       		.uleb128 0x1
 3568 124e 51       		.byte	0x51
 3569 124f 02       		.uleb128 0x2
 3570 1250 08       		.byte	0x8
 3571 1251 6B       		.byte	0x6b
 3572 1252 2F       		.uleb128 0x2f
 3573 1253 01       		.uleb128 0x1
 3574 1254 52       		.byte	0x52
 3575 1255 01       		.uleb128 0x1
 3576 1256 36       		.byte	0x36
 3577 1257 00       		.byte	0
 3578 1258 00       		.byte	0
 3579 1259 3E       		.uleb128 0x3e
 3580 125a 9F080000 		.4byte	.LASF181
 3581 125e 01       		.byte	0x1
 3582 125f B4       		.byte	0xb4
 3583 1260 8C010000 		.4byte	.LFB70
 3584 1264 18000000 		.4byte	.LFE70-.LFB70
 3585 1268 01       		.uleb128 0x1
 3586 1269 9C       		.byte	0x9c
 3587 126a 9D120000 		.4byte	0x129d
 3588 126e 3F       		.uleb128 0x3f
 3589 126f 61080000 		.4byte	.LASF182
 3590 1273 01       		.byte	0x1
 3591 1274 B4       		.byte	0xb4
 3592 1275 9F000000 		.4byte	0x9f
 3593 1279 EC000000 		.4byte	.LLST12
 3594 127d 30       		.uleb128 0x30
 3595 127e 9E010000 		.4byte	.LVL51
 3596 1282 60150000 		.4byte	0x1560
 3597 1286 2F       		.uleb128 0x2f
 3598 1287 01       		.uleb128 0x1
 3599 1288 50       		.byte	0x50
 3600 1289 02       		.uleb128 0x2
 3601 128a 09       		.byte	0x9
 3602 128b D0       		.byte	0xd0
 3603 128c 2F       		.uleb128 0x2f
 3604 128d 01       		.uleb128 0x1
 3605 128e 51       		.byte	0x51
 3606 128f 01       		.uleb128 0x1
 3607 1290 4C       		.byte	0x4c
 3608 1291 2F       		.uleb128 0x2f
 3609 1292 01       		.uleb128 0x1
 3610 1293 52       		.byte	0x52
 3611 1294 01       		.uleb128 0x1
 3612 1295 34       		.byte	0x34
 3613 1296 2F       		.uleb128 0x2f
 3614 1297 01       		.uleb128 0x1
 3615 1298 53       		.byte	0x53
 3616 1299 01       		.uleb128 0x1
ARM GAS  /tmp/ccIxWip2.s 			page 107


 3617 129a 32       		.byte	0x32
 3618 129b 00       		.byte	0
 3619 129c 00       		.byte	0
 3620 129d 3E       		.uleb128 0x3e
 3621 129e 93040000 		.4byte	.LASF183
 3622 12a2 01       		.byte	0x1
 3623 12a3 AF       		.byte	0xaf
 3624 12a4 74010000 		.4byte	.LFB69
 3625 12a8 18000000 		.4byte	.LFE69-.LFB69
 3626 12ac 01       		.uleb128 0x1
 3627 12ad 9C       		.byte	0x9c
 3628 12ae E1120000 		.4byte	0x12e1
 3629 12b2 3F       		.uleb128 0x3f
 3630 12b3 61080000 		.4byte	.LASF182
 3631 12b7 01       		.byte	0x1
 3632 12b8 AF       		.byte	0xaf
 3633 12b9 9F000000 		.4byte	0x9f
 3634 12bd 0D010000 		.4byte	.LLST11
 3635 12c1 30       		.uleb128 0x30
 3636 12c2 86010000 		.4byte	.LVL48
 3637 12c6 60150000 		.4byte	0x1560
 3638 12ca 2F       		.uleb128 0x2f
 3639 12cb 01       		.uleb128 0x1
 3640 12cc 50       		.byte	0x50
 3641 12cd 02       		.uleb128 0x2
 3642 12ce 09       		.byte	0x9
 3643 12cf D0       		.byte	0xd0
 3644 12d0 2F       		.uleb128 0x2f
 3645 12d1 01       		.uleb128 0x1
 3646 12d2 51       		.byte	0x51
 3647 12d3 01       		.uleb128 0x1
 3648 12d4 4B       		.byte	0x4b
 3649 12d5 2F       		.uleb128 0x2f
 3650 12d6 01       		.uleb128 0x1
 3651 12d7 52       		.byte	0x52
 3652 12d8 01       		.uleb128 0x1
 3653 12d9 34       		.byte	0x34
 3654 12da 2F       		.uleb128 0x2f
 3655 12db 01       		.uleb128 0x1
 3656 12dc 53       		.byte	0x53
 3657 12dd 01       		.uleb128 0x1
 3658 12de 32       		.byte	0x32
 3659 12df 00       		.byte	0
 3660 12e0 00       		.byte	0
 3661 12e1 3E       		.uleb128 0x3e
 3662 12e2 67000000 		.4byte	.LASF184
 3663 12e6 01       		.byte	0x1
 3664 12e7 A2       		.byte	0xa2
 3665 12e8 5C010000 		.4byte	.LFB68
 3666 12ec 18000000 		.4byte	.LFE68-.LFB68
 3667 12f0 01       		.uleb128 0x1
 3668 12f1 9C       		.byte	0x9c
 3669 12f2 26130000 		.4byte	0x1326
 3670 12f6 3F       		.uleb128 0x3f
 3671 12f7 48000000 		.4byte	.LASF185
 3672 12fb 01       		.byte	0x1
 3673 12fc A2       		.byte	0xa2
ARM GAS  /tmp/ccIxWip2.s 			page 108


 3674 12fd 9F000000 		.4byte	0x9f
 3675 1301 2E010000 		.4byte	.LLST10
 3676 1305 30       		.uleb128 0x30
 3677 1306 6E010000 		.4byte	.LVL45
 3678 130a 60150000 		.4byte	0x1560
 3679 130e 2F       		.uleb128 0x2f
 3680 130f 01       		.uleb128 0x1
 3681 1310 50       		.byte	0x50
 3682 1311 02       		.uleb128 0x2
 3683 1312 09       		.byte	0x9
 3684 1313 D0       		.byte	0xd0
 3685 1314 2F       		.uleb128 0x2f
 3686 1315 01       		.uleb128 0x1
 3687 1316 51       		.byte	0x51
 3688 1317 02       		.uleb128 0x2
 3689 1318 08       		.byte	0x8
 3690 1319 6B       		.byte	0x6b
 3691 131a 2F       		.uleb128 0x2f
 3692 131b 01       		.uleb128 0x1
 3693 131c 52       		.byte	0x52
 3694 131d 01       		.uleb128 0x1
 3695 131e 32       		.byte	0x32
 3696 131f 2F       		.uleb128 0x2f
 3697 1320 01       		.uleb128 0x1
 3698 1321 53       		.byte	0x53
 3699 1322 01       		.uleb128 0x1
 3700 1323 33       		.byte	0x33
 3701 1324 00       		.byte	0
 3702 1325 00       		.byte	0
 3703 1326 3E       		.uleb128 0x3e
 3704 1327 2A020000 		.4byte	.LASF186
 3705 132b 01       		.byte	0x1
 3706 132c 5C       		.byte	0x5c
 3707 132d 38000000 		.4byte	.LFB67
 3708 1331 24010000 		.4byte	.LFE67-.LFB67
 3709 1335 01       		.uleb128 0x1
 3710 1336 9C       		.byte	0x9c
 3711 1337 AC130000 		.4byte	0x13ac
 3712 133b 41       		.uleb128 0x41
 3713 133c 617800   		.ascii	"ax\000"
 3714 133f 01       		.byte	0x1
 3715 1340 5C       		.byte	0x5c
 3716 1341 91000000 		.4byte	0x91
 3717 1345 4F010000 		.4byte	.LLST2
 3718 1349 41       		.uleb128 0x41
 3719 134a 617900   		.ascii	"ay\000"
 3720 134d 01       		.byte	0x1
 3721 134e 5C       		.byte	0x5c
 3722 134f 91000000 		.4byte	0x91
 3723 1353 71010000 		.4byte	.LLST3
 3724 1357 41       		.uleb128 0x41
 3725 1358 617A00   		.ascii	"az\000"
 3726 135b 01       		.byte	0x1
 3727 135c 5C       		.byte	0x5c
 3728 135d 91000000 		.4byte	0x91
 3729 1361 93010000 		.4byte	.LLST4
 3730 1365 41       		.uleb128 0x41
ARM GAS  /tmp/ccIxWip2.s 			page 109


 3731 1366 677800   		.ascii	"gx\000"
 3732 1369 01       		.byte	0x1
 3733 136a 5C       		.byte	0x5c
 3734 136b 91000000 		.4byte	0x91
 3735 136f B5010000 		.4byte	.LLST5
 3736 1373 41       		.uleb128 0x41
 3737 1374 677900   		.ascii	"gy\000"
 3738 1377 01       		.byte	0x1
 3739 1378 5C       		.byte	0x5c
 3740 1379 91000000 		.4byte	0x91
 3741 137d D7010000 		.4byte	.LLST6
 3742 1381 41       		.uleb128 0x41
 3743 1382 677A00   		.ascii	"gz\000"
 3744 1385 01       		.byte	0x1
 3745 1386 5C       		.byte	0x5c
 3746 1387 91000000 		.4byte	0x91
 3747 138b F7010000 		.4byte	.LLST7
 3748 138f 42       		.uleb128 0x42
 3749 1390 6900     		.ascii	"i\000"
 3750 1392 01       		.byte	0x1
 3751 1393 5E       		.byte	0x5e
 3752 1394 4A000000 		.4byte	0x4a
 3753 1398 17020000 		.4byte	.LLST8
 3754 139c 42       		.uleb128 0x42
 3755 139d 73756D00 		.ascii	"sum\000"
 3756 13a1 01       		.byte	0x1
 3757 13a2 5F       		.byte	0x5f
 3758 13a3 AF000000 		.4byte	0xaf
 3759 13a7 73020000 		.4byte	.LLST9
 3760 13ab 00       		.byte	0
 3761 13ac 43       		.uleb128 0x43
 3762 13ad 9B020000 		.4byte	.LASF218
 3763 13b1 01       		.byte	0x1
 3764 13b2 39       		.byte	0x39
 3765 13b3 01       		.byte	0x1
 3766 13b4 F2130000 		.4byte	0x13f2
 3767 13b8 44       		.uleb128 0x44
 3768 13b9 37010000 		.4byte	.LASF187
 3769 13bd 01       		.byte	0x1
 3770 13be 3B       		.byte	0x3b
 3771 13bf 91000000 		.4byte	0x91
 3772 13c3 44       		.uleb128 0x44
 3773 13c4 B3020000 		.4byte	.LASF154
 3774 13c8 01       		.byte	0x1
 3775 13c9 3C       		.byte	0x3c
 3776 13ca F2130000 		.4byte	0x13f2
 3777 13ce 44       		.uleb128 0x44
 3778 13cf D1080000 		.4byte	.LASF155
 3779 13d3 01       		.byte	0x1
 3780 13d4 3C       		.byte	0x3c
 3781 13d5 F2130000 		.4byte	0x13f2
 3782 13d9 45       		.uleb128 0x45
 3783 13da 44       		.uleb128 0x44
 3784 13db 19050000 		.4byte	.LASF188
 3785 13df 01       		.byte	0x1
 3786 13e0 43       		.byte	0x43
 3787 13e1 2C000000 		.4byte	0x2c
ARM GAS  /tmp/ccIxWip2.s 			page 110


 3788 13e5 44       		.uleb128 0x44
 3789 13e6 79060000 		.4byte	.LASF189
 3790 13ea 01       		.byte	0x1
 3791 13eb 44       		.byte	0x44
 3792 13ec 58000000 		.4byte	0x58
 3793 13f0 00       		.byte	0
 3794 13f1 00       		.byte	0
 3795 13f2 0A       		.uleb128 0xa
 3796 13f3 6A000000 		.4byte	0x6a
 3797 13f7 02140000 		.4byte	0x1402
 3798 13fb 0B       		.uleb128 0xb
 3799 13fc D4000000 		.4byte	0xd4
 3800 1400 02       		.byte	0x2
 3801 1401 00       		.byte	0
 3802 1402 46       		.uleb128 0x46
 3803 1403 E5070000 		.4byte	.LASF219
 3804 1407 01       		.byte	0x1
 3805 1408 2E       		.byte	0x2e
 3806 1409 58000000 		.4byte	0x58
 3807 140d 01       		.byte	0x1
 3808 140e 29140000 		.4byte	0x1429
 3809 1412 47       		.uleb128 0x47
 3810 1413 6D747800 		.ascii	"mtx\000"
 3811 1417 01       		.byte	0x1
 3812 1418 2E       		.byte	0x2e
 3813 1419 29140000 		.4byte	0x1429
 3814 141d 44       		.uleb128 0x44
 3815 141e DE070000 		.4byte	.LASF190
 3816 1422 01       		.byte	0x1
 3817 1423 30       		.byte	0x30
 3818 1424 58000000 		.4byte	0x58
 3819 1428 00       		.byte	0
 3820 1429 11       		.uleb128 0x11
 3821 142a 04       		.byte	0x4
 3822 142b 3A000000 		.4byte	0x3a
 3823 142f 48       		.uleb128 0x48
 3824 1430 CE070000 		.4byte	.LASF220
 3825 1434 01       		.byte	0x1
 3826 1435 18       		.byte	0x18
 3827 1436 58000000 		.4byte	0x58
 3828 143a 00000000 		.4byte	.LFB64
 3829 143e 38000000 		.4byte	.LFE64-.LFB64
 3830 1442 01       		.uleb128 0x1
 3831 1443 9C       		.byte	0x9c
 3832 1444 65140000 		.4byte	0x1465
 3833 1448 41       		.uleb128 0x41
 3834 1449 726F7700 		.ascii	"row\000"
 3835 144d 01       		.byte	0x1
 3836 144e 18       		.byte	0x18
 3837 144f 29140000 		.4byte	0x1429
 3838 1453 05030000 		.4byte	.LLST0
 3839 1457 42       		.uleb128 0x42
 3840 1458 6200     		.ascii	"b\000"
 3841 145a 01       		.byte	0x1
 3842 145b 1A       		.byte	0x1a
 3843 145c 58000000 		.4byte	0x58
 3844 1460 A3030000 		.4byte	.LLST1
ARM GAS  /tmp/ccIxWip2.s 			page 111


 3845 1464 00       		.byte	0
 3846 1465 49       		.uleb128 0x49
 3847 1466 3C020000 		.4byte	.LASF191
 3848 146a 03       		.byte	0x3
 3849 146b 5006     		.2byte	0x650
 3850 146d 03       		.byte	0x3
 3851 146e 49       		.uleb128 0x49
 3852 146f 52030000 		.4byte	.LASF192
 3853 1473 02       		.byte	0x2
 3854 1474 AB01     		.2byte	0x1ab
 3855 1476 03       		.byte	0x3
 3856 1477 49       		.uleb128 0x49
 3857 1478 DC010000 		.4byte	.LASF193
 3858 147c 02       		.byte	0x2
 3859 147d 7501     		.2byte	0x175
 3860 147f 03       		.byte	0x3
 3861 1480 4A       		.uleb128 0x4a
 3862 1481 36000000 		.4byte	.LASF194
 3863 1485 36000000 		.4byte	.LASF194
 3864 1489 0F       		.byte	0xf
 3865 148a 10       		.byte	0x10
 3866 148b 4A       		.uleb128 0x4a
 3867 148c 2E090000 		.4byte	.LASF195
 3868 1490 2E090000 		.4byte	.LASF195
 3869 1494 10       		.byte	0x10
 3870 1495 58       		.byte	0x58
 3871 1496 4A       		.uleb128 0x4a
 3872 1497 56070000 		.4byte	.LASF196
 3873 149b 56070000 		.4byte	.LASF196
 3874 149f 0C       		.byte	0xc
 3875 14a0 7E       		.byte	0x7e
 3876 14a1 4A       		.uleb128 0x4a
 3877 14a2 FB060000 		.4byte	.LASF197
 3878 14a6 FB060000 		.4byte	.LASF197
 3879 14aa 11       		.byte	0x11
 3880 14ab 50       		.byte	0x50
 3881 14ac 4A       		.uleb128 0x4a
 3882 14ad 55000000 		.4byte	.LASF198
 3883 14b1 55000000 		.4byte	.LASF198
 3884 14b5 10       		.byte	0x10
 3885 14b6 37       		.byte	0x37
 3886 14b7 4A       		.uleb128 0x4a
 3887 14b8 6C080000 		.4byte	.LASF199
 3888 14bc 6C080000 		.4byte	.LASF199
 3889 14c0 11       		.byte	0x11
 3890 14c1 51       		.byte	0x51
 3891 14c2 4A       		.uleb128 0x4a
 3892 14c3 23000000 		.4byte	.LASF200
 3893 14c7 23000000 		.4byte	.LASF200
 3894 14cb 10       		.byte	0x10
 3895 14cc 38       		.byte	0x38
 3896 14cd 4B       		.uleb128 0x4b
 3897 14ce E4000000 		.4byte	.LASF221
 3898 14d2 B3060000 		.4byte	.LASF222
 3899 14d6 13       		.byte	0x13
 3900 14d7 00       		.byte	0
 3901 14d8 E4000000 		.4byte	.LASF221
ARM GAS  /tmp/ccIxWip2.s 			page 112


 3902 14dc 4A       		.uleb128 0x4a
 3903 14dd 37080000 		.4byte	.LASF201
 3904 14e1 37080000 		.4byte	.LASF201
 3905 14e5 11       		.byte	0x11
 3906 14e6 76       		.byte	0x76
 3907 14e7 4A       		.uleb128 0x4a
 3908 14e8 2C050000 		.4byte	.LASF202
 3909 14ec 2C050000 		.4byte	.LASF202
 3910 14f0 0F       		.byte	0xf
 3911 14f1 0F       		.byte	0xf
 3912 14f2 4A       		.uleb128 0x4a
 3913 14f3 85070000 		.4byte	.LASF203
 3914 14f7 85070000 		.4byte	.LASF203
 3915 14fb 11       		.byte	0x11
 3916 14fc 37       		.byte	0x37
 3917 14fd 4A       		.uleb128 0x4a
 3918 14fe E2010000 		.4byte	.LASF204
 3919 1502 E2010000 		.4byte	.LASF204
 3920 1506 11       		.byte	0x11
 3921 1507 5C       		.byte	0x5c
 3922 1508 4A       		.uleb128 0x4a
 3923 1509 E4090000 		.4byte	.LASF205
 3924 150d E4090000 		.4byte	.LASF205
 3925 1511 11       		.byte	0x11
 3926 1512 59       		.byte	0x59
 3927 1513 4A       		.uleb128 0x4a
 3928 1514 6F090000 		.4byte	.LASF206
 3929 1518 6F090000 		.4byte	.LASF206
 3930 151c 11       		.byte	0x11
 3931 151d 54       		.byte	0x54
 3932 151e 4A       		.uleb128 0x4a
 3933 151f 72030000 		.4byte	.LASF207
 3934 1523 72030000 		.4byte	.LASF207
 3935 1527 10       		.byte	0x10
 3936 1528 30       		.byte	0x30
 3937 1529 4A       		.uleb128 0x4a
 3938 152a E6030000 		.4byte	.LASF208
 3939 152e E6030000 		.4byte	.LASF208
 3940 1532 10       		.byte	0x10
 3941 1533 36       		.byte	0x36
 3942 1534 4A       		.uleb128 0x4a
 3943 1535 65020000 		.4byte	.LASF209
 3944 1539 65020000 		.4byte	.LASF209
 3945 153d 10       		.byte	0x10
 3946 153e 33       		.byte	0x33
 3947 153f 4A       		.uleb128 0x4a
 3948 1540 66010000 		.4byte	.LASF210
 3949 1544 66010000 		.4byte	.LASF210
 3950 1548 10       		.byte	0x10
 3951 1549 31       		.byte	0x31
 3952 154a 4A       		.uleb128 0x4a
 3953 154b 3B030000 		.4byte	.LASF211
 3954 154f 3B030000 		.4byte	.LASF211
 3955 1553 11       		.byte	0x11
 3956 1554 42       		.byte	0x42
 3957 1555 4A       		.uleb128 0x4a
 3958 1556 A0060000 		.4byte	.LASF212
ARM GAS  /tmp/ccIxWip2.s 			page 113


 3959 155a A0060000 		.4byte	.LASF212
 3960 155e 0F       		.byte	0xf
 3961 155f 12       		.byte	0x12
 3962 1560 4A       		.uleb128 0x4a
 3963 1561 5F030000 		.4byte	.LASF213
 3964 1565 5F030000 		.4byte	.LASF213
 3965 1569 0F       		.byte	0xf
 3966 156a 11       		.byte	0x11
 3967 156b 00       		.byte	0
 3968              		.section	.debug_abbrev,"",%progbits
 3969              	.Ldebug_abbrev0:
 3970 0000 01       		.uleb128 0x1
 3971 0001 11       		.uleb128 0x11
 3972 0002 01       		.byte	0x1
 3973 0003 25       		.uleb128 0x25
 3974 0004 0E       		.uleb128 0xe
 3975 0005 13       		.uleb128 0x13
 3976 0006 0B       		.uleb128 0xb
 3977 0007 03       		.uleb128 0x3
 3978 0008 0E       		.uleb128 0xe
 3979 0009 1B       		.uleb128 0x1b
 3980 000a 0E       		.uleb128 0xe
 3981 000b 11       		.uleb128 0x11
 3982 000c 01       		.uleb128 0x1
 3983 000d 12       		.uleb128 0x12
 3984 000e 06       		.uleb128 0x6
 3985 000f 10       		.uleb128 0x10
 3986 0010 17       		.uleb128 0x17
 3987 0011 00       		.byte	0
 3988 0012 00       		.byte	0
 3989 0013 02       		.uleb128 0x2
 3990 0014 24       		.uleb128 0x24
 3991 0015 00       		.byte	0
 3992 0016 0B       		.uleb128 0xb
 3993 0017 0B       		.uleb128 0xb
 3994 0018 3E       		.uleb128 0x3e
 3995 0019 0B       		.uleb128 0xb
 3996 001a 03       		.uleb128 0x3
 3997 001b 0E       		.uleb128 0xe
 3998 001c 00       		.byte	0
 3999 001d 00       		.byte	0
 4000 001e 03       		.uleb128 0x3
 4001 001f 26       		.uleb128 0x26
 4002 0020 00       		.byte	0
 4003 0021 49       		.uleb128 0x49
 4004 0022 13       		.uleb128 0x13
 4005 0023 00       		.byte	0
 4006 0024 00       		.byte	0
 4007 0025 04       		.uleb128 0x4
 4008 0026 16       		.uleb128 0x16
 4009 0027 00       		.byte	0
 4010 0028 03       		.uleb128 0x3
 4011 0029 0E       		.uleb128 0xe
 4012 002a 3A       		.uleb128 0x3a
 4013 002b 0B       		.uleb128 0xb
 4014 002c 3B       		.uleb128 0x3b
 4015 002d 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIxWip2.s 			page 114


 4016 002e 49       		.uleb128 0x49
 4017 002f 13       		.uleb128 0x13
 4018 0030 00       		.byte	0
 4019 0031 00       		.byte	0
 4020 0032 05       		.uleb128 0x5
 4021 0033 24       		.uleb128 0x24
 4022 0034 00       		.byte	0
 4023 0035 0B       		.uleb128 0xb
 4024 0036 0B       		.uleb128 0xb
 4025 0037 3E       		.uleb128 0x3e
 4026 0038 0B       		.uleb128 0xb
 4027 0039 03       		.uleb128 0x3
 4028 003a 08       		.uleb128 0x8
 4029 003b 00       		.byte	0
 4030 003c 00       		.byte	0
 4031 003d 06       		.uleb128 0x6
 4032 003e 35       		.uleb128 0x35
 4033 003f 00       		.byte	0
 4034 0040 49       		.uleb128 0x49
 4035 0041 13       		.uleb128 0x13
 4036 0042 00       		.byte	0
 4037 0043 00       		.byte	0
 4038 0044 07       		.uleb128 0x7
 4039 0045 13       		.uleb128 0x13
 4040 0046 01       		.byte	0x1
 4041 0047 0B       		.uleb128 0xb
 4042 0048 0B       		.uleb128 0xb
 4043 0049 3A       		.uleb128 0x3a
 4044 004a 0B       		.uleb128 0xb
 4045 004b 3B       		.uleb128 0x3b
 4046 004c 05       		.uleb128 0x5
 4047 004d 01       		.uleb128 0x1
 4048 004e 13       		.uleb128 0x13
 4049 004f 00       		.byte	0
 4050 0050 00       		.byte	0
 4051 0051 08       		.uleb128 0x8
 4052 0052 0D       		.uleb128 0xd
 4053 0053 00       		.byte	0
 4054 0054 03       		.uleb128 0x3
 4055 0055 0E       		.uleb128 0xe
 4056 0056 3A       		.uleb128 0x3a
 4057 0057 0B       		.uleb128 0xb
 4058 0058 3B       		.uleb128 0x3b
 4059 0059 05       		.uleb128 0x5
 4060 005a 49       		.uleb128 0x49
 4061 005b 13       		.uleb128 0x13
 4062 005c 38       		.uleb128 0x38
 4063 005d 0B       		.uleb128 0xb
 4064 005e 00       		.byte	0
 4065 005f 00       		.byte	0
 4066 0060 09       		.uleb128 0x9
 4067 0061 0D       		.uleb128 0xd
 4068 0062 00       		.byte	0
 4069 0063 03       		.uleb128 0x3
 4070 0064 08       		.uleb128 0x8
 4071 0065 3A       		.uleb128 0x3a
 4072 0066 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIxWip2.s 			page 115


 4073 0067 3B       		.uleb128 0x3b
 4074 0068 05       		.uleb128 0x5
 4075 0069 49       		.uleb128 0x49
 4076 006a 13       		.uleb128 0x13
 4077 006b 38       		.uleb128 0x38
 4078 006c 0B       		.uleb128 0xb
 4079 006d 00       		.byte	0
 4080 006e 00       		.byte	0
 4081 006f 0A       		.uleb128 0xa
 4082 0070 01       		.uleb128 0x1
 4083 0071 01       		.byte	0x1
 4084 0072 49       		.uleb128 0x49
 4085 0073 13       		.uleb128 0x13
 4086 0074 01       		.uleb128 0x1
 4087 0075 13       		.uleb128 0x13
 4088 0076 00       		.byte	0
 4089 0077 00       		.byte	0
 4090 0078 0B       		.uleb128 0xb
 4091 0079 21       		.uleb128 0x21
 4092 007a 00       		.byte	0
 4093 007b 49       		.uleb128 0x49
 4094 007c 13       		.uleb128 0x13
 4095 007d 2F       		.uleb128 0x2f
 4096 007e 0B       		.uleb128 0xb
 4097 007f 00       		.byte	0
 4098 0080 00       		.byte	0
 4099 0081 0C       		.uleb128 0xc
 4100 0082 16       		.uleb128 0x16
 4101 0083 00       		.byte	0
 4102 0084 03       		.uleb128 0x3
 4103 0085 0E       		.uleb128 0xe
 4104 0086 3A       		.uleb128 0x3a
 4105 0087 0B       		.uleb128 0xb
 4106 0088 3B       		.uleb128 0x3b
 4107 0089 05       		.uleb128 0x5
 4108 008a 49       		.uleb128 0x49
 4109 008b 13       		.uleb128 0x13
 4110 008c 00       		.byte	0
 4111 008d 00       		.byte	0
 4112 008e 0D       		.uleb128 0xd
 4113 008f 34       		.uleb128 0x34
 4114 0090 00       		.byte	0
 4115 0091 03       		.uleb128 0x3
 4116 0092 0E       		.uleb128 0xe
 4117 0093 3A       		.uleb128 0x3a
 4118 0094 0B       		.uleb128 0xb
 4119 0095 3B       		.uleb128 0x3b
 4120 0096 05       		.uleb128 0x5
 4121 0097 49       		.uleb128 0x49
 4122 0098 13       		.uleb128 0x13
 4123 0099 3F       		.uleb128 0x3f
 4124 009a 19       		.uleb128 0x19
 4125 009b 3C       		.uleb128 0x3c
 4126 009c 19       		.uleb128 0x19
 4127 009d 00       		.byte	0
 4128 009e 00       		.byte	0
 4129 009f 0E       		.uleb128 0xe
ARM GAS  /tmp/ccIxWip2.s 			page 116


 4130 00a0 34       		.uleb128 0x34
 4131 00a1 00       		.byte	0
 4132 00a2 03       		.uleb128 0x3
 4133 00a3 0E       		.uleb128 0xe
 4134 00a4 3A       		.uleb128 0x3a
 4135 00a5 0B       		.uleb128 0xb
 4136 00a6 3B       		.uleb128 0x3b
 4137 00a7 0B       		.uleb128 0xb
 4138 00a8 49       		.uleb128 0x49
 4139 00a9 13       		.uleb128 0x13
 4140 00aa 3F       		.uleb128 0x3f
 4141 00ab 19       		.uleb128 0x19
 4142 00ac 3C       		.uleb128 0x3c
 4143 00ad 19       		.uleb128 0x19
 4144 00ae 00       		.byte	0
 4145 00af 00       		.byte	0
 4146 00b0 0F       		.uleb128 0xf
 4147 00b1 16       		.uleb128 0x16
 4148 00b2 00       		.byte	0
 4149 00b3 03       		.uleb128 0x3
 4150 00b4 08       		.uleb128 0x8
 4151 00b5 3A       		.uleb128 0x3a
 4152 00b6 0B       		.uleb128 0xb
 4153 00b7 3B       		.uleb128 0x3b
 4154 00b8 05       		.uleb128 0x5
 4155 00b9 49       		.uleb128 0x49
 4156 00ba 13       		.uleb128 0x13
 4157 00bb 00       		.byte	0
 4158 00bc 00       		.byte	0
 4159 00bd 10       		.uleb128 0x10
 4160 00be 15       		.uleb128 0x15
 4161 00bf 00       		.byte	0
 4162 00c0 27       		.uleb128 0x27
 4163 00c1 19       		.uleb128 0x19
 4164 00c2 00       		.byte	0
 4165 00c3 00       		.byte	0
 4166 00c4 11       		.uleb128 0x11
 4167 00c5 0F       		.uleb128 0xf
 4168 00c6 00       		.byte	0
 4169 00c7 0B       		.uleb128 0xb
 4170 00c8 0B       		.uleb128 0xb
 4171 00c9 49       		.uleb128 0x49
 4172 00ca 13       		.uleb128 0x13
 4173 00cb 00       		.byte	0
 4174 00cc 00       		.byte	0
 4175 00cd 12       		.uleb128 0x12
 4176 00ce 0F       		.uleb128 0xf
 4177 00cf 00       		.byte	0
 4178 00d0 0B       		.uleb128 0xb
 4179 00d1 0B       		.uleb128 0xb
 4180 00d2 00       		.byte	0
 4181 00d3 00       		.byte	0
 4182 00d4 13       		.uleb128 0x13
 4183 00d5 17       		.uleb128 0x17
 4184 00d6 01       		.byte	0x1
 4185 00d7 0B       		.uleb128 0xb
 4186 00d8 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIxWip2.s 			page 117


 4187 00d9 3A       		.uleb128 0x3a
 4188 00da 0B       		.uleb128 0xb
 4189 00db 3B       		.uleb128 0x3b
 4190 00dc 0B       		.uleb128 0xb
 4191 00dd 01       		.uleb128 0x1
 4192 00de 13       		.uleb128 0x13
 4193 00df 00       		.byte	0
 4194 00e0 00       		.byte	0
 4195 00e1 14       		.uleb128 0x14
 4196 00e2 0D       		.uleb128 0xd
 4197 00e3 00       		.byte	0
 4198 00e4 03       		.uleb128 0x3
 4199 00e5 0E       		.uleb128 0xe
 4200 00e6 3A       		.uleb128 0x3a
 4201 00e7 0B       		.uleb128 0xb
 4202 00e8 3B       		.uleb128 0x3b
 4203 00e9 0B       		.uleb128 0xb
 4204 00ea 49       		.uleb128 0x49
 4205 00eb 13       		.uleb128 0x13
 4206 00ec 00       		.byte	0
 4207 00ed 00       		.byte	0
 4208 00ee 15       		.uleb128 0x15
 4209 00ef 13       		.uleb128 0x13
 4210 00f0 01       		.byte	0x1
 4211 00f1 0B       		.uleb128 0xb
 4212 00f2 0B       		.uleb128 0xb
 4213 00f3 3A       		.uleb128 0x3a
 4214 00f4 0B       		.uleb128 0xb
 4215 00f5 3B       		.uleb128 0x3b
 4216 00f6 0B       		.uleb128 0xb
 4217 00f7 01       		.uleb128 0x1
 4218 00f8 13       		.uleb128 0x13
 4219 00f9 00       		.byte	0
 4220 00fa 00       		.byte	0
 4221 00fb 16       		.uleb128 0x16
 4222 00fc 0D       		.uleb128 0xd
 4223 00fd 00       		.byte	0
 4224 00fe 03       		.uleb128 0x3
 4225 00ff 0E       		.uleb128 0xe
 4226 0100 3A       		.uleb128 0x3a
 4227 0101 0B       		.uleb128 0xb
 4228 0102 3B       		.uleb128 0x3b
 4229 0103 0B       		.uleb128 0xb
 4230 0104 49       		.uleb128 0x49
 4231 0105 13       		.uleb128 0x13
 4232 0106 38       		.uleb128 0x38
 4233 0107 0B       		.uleb128 0xb
 4234 0108 00       		.byte	0
 4235 0109 00       		.byte	0
 4236 010a 17       		.uleb128 0x17
 4237 010b 13       		.uleb128 0x13
 4238 010c 01       		.byte	0x1
 4239 010d 03       		.uleb128 0x3
 4240 010e 0E       		.uleb128 0xe
 4241 010f 0B       		.uleb128 0xb
 4242 0110 0B       		.uleb128 0xb
 4243 0111 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccIxWip2.s 			page 118


 4244 0112 0B       		.uleb128 0xb
 4245 0113 3B       		.uleb128 0x3b
 4246 0114 0B       		.uleb128 0xb
 4247 0115 01       		.uleb128 0x1
 4248 0116 13       		.uleb128 0x13
 4249 0117 00       		.byte	0
 4250 0118 00       		.byte	0
 4251 0119 18       		.uleb128 0x18
 4252 011a 0D       		.uleb128 0xd
 4253 011b 00       		.byte	0
 4254 011c 03       		.uleb128 0x3
 4255 011d 08       		.uleb128 0x8
 4256 011e 3A       		.uleb128 0x3a
 4257 011f 0B       		.uleb128 0xb
 4258 0120 3B       		.uleb128 0x3b
 4259 0121 0B       		.uleb128 0xb
 4260 0122 49       		.uleb128 0x49
 4261 0123 13       		.uleb128 0x13
 4262 0124 38       		.uleb128 0x38
 4263 0125 0B       		.uleb128 0xb
 4264 0126 00       		.byte	0
 4265 0127 00       		.byte	0
 4266 0128 19       		.uleb128 0x19
 4267 0129 13       		.uleb128 0x13
 4268 012a 01       		.byte	0x1
 4269 012b 03       		.uleb128 0x3
 4270 012c 0E       		.uleb128 0xe
 4271 012d 0B       		.uleb128 0xb
 4272 012e 05       		.uleb128 0x5
 4273 012f 3A       		.uleb128 0x3a
 4274 0130 0B       		.uleb128 0xb
 4275 0131 3B       		.uleb128 0x3b
 4276 0132 0B       		.uleb128 0xb
 4277 0133 01       		.uleb128 0x1
 4278 0134 13       		.uleb128 0x13
 4279 0135 00       		.byte	0
 4280 0136 00       		.byte	0
 4281 0137 1A       		.uleb128 0x1a
 4282 0138 0D       		.uleb128 0xd
 4283 0139 00       		.byte	0
 4284 013a 03       		.uleb128 0x3
 4285 013b 0E       		.uleb128 0xe
 4286 013c 3A       		.uleb128 0x3a
 4287 013d 0B       		.uleb128 0xb
 4288 013e 3B       		.uleb128 0x3b
 4289 013f 0B       		.uleb128 0xb
 4290 0140 49       		.uleb128 0x49
 4291 0141 13       		.uleb128 0x13
 4292 0142 38       		.uleb128 0x38
 4293 0143 05       		.uleb128 0x5
 4294 0144 00       		.byte	0
 4295 0145 00       		.byte	0
 4296 0146 1B       		.uleb128 0x1b
 4297 0147 15       		.uleb128 0x15
 4298 0148 01       		.byte	0x1
 4299 0149 27       		.uleb128 0x27
 4300 014a 19       		.uleb128 0x19
ARM GAS  /tmp/ccIxWip2.s 			page 119


 4301 014b 49       		.uleb128 0x49
 4302 014c 13       		.uleb128 0x13
 4303 014d 01       		.uleb128 0x1
 4304 014e 13       		.uleb128 0x13
 4305 014f 00       		.byte	0
 4306 0150 00       		.byte	0
 4307 0151 1C       		.uleb128 0x1c
 4308 0152 05       		.uleb128 0x5
 4309 0153 00       		.byte	0
 4310 0154 49       		.uleb128 0x49
 4311 0155 13       		.uleb128 0x13
 4312 0156 00       		.byte	0
 4313 0157 00       		.byte	0
 4314 0158 1D       		.uleb128 0x1d
 4315 0159 13       		.uleb128 0x13
 4316 015a 01       		.byte	0x1
 4317 015b 03       		.uleb128 0x3
 4318 015c 0E       		.uleb128 0xe
 4319 015d 0B       		.uleb128 0xb
 4320 015e 05       		.uleb128 0x5
 4321 015f 3A       		.uleb128 0x3a
 4322 0160 0B       		.uleb128 0xb
 4323 0161 3B       		.uleb128 0x3b
 4324 0162 05       		.uleb128 0x5
 4325 0163 01       		.uleb128 0x1
 4326 0164 13       		.uleb128 0x13
 4327 0165 00       		.byte	0
 4328 0166 00       		.byte	0
 4329 0167 1E       		.uleb128 0x1e
 4330 0168 0D       		.uleb128 0xd
 4331 0169 00       		.byte	0
 4332 016a 03       		.uleb128 0x3
 4333 016b 0E       		.uleb128 0xe
 4334 016c 3A       		.uleb128 0x3a
 4335 016d 0B       		.uleb128 0xb
 4336 016e 3B       		.uleb128 0x3b
 4337 016f 05       		.uleb128 0x5
 4338 0170 49       		.uleb128 0x49
 4339 0171 13       		.uleb128 0x13
 4340 0172 38       		.uleb128 0x38
 4341 0173 05       		.uleb128 0x5
 4342 0174 00       		.byte	0
 4343 0175 00       		.byte	0
 4344 0176 1F       		.uleb128 0x1f
 4345 0177 13       		.uleb128 0x13
 4346 0178 01       		.byte	0x1
 4347 0179 03       		.uleb128 0x3
 4348 017a 0E       		.uleb128 0xe
 4349 017b 0B       		.uleb128 0xb
 4350 017c 0B       		.uleb128 0xb
 4351 017d 3A       		.uleb128 0x3a
 4352 017e 0B       		.uleb128 0xb
 4353 017f 3B       		.uleb128 0x3b
 4354 0180 05       		.uleb128 0x5
 4355 0181 01       		.uleb128 0x1
 4356 0182 13       		.uleb128 0x13
 4357 0183 00       		.byte	0
ARM GAS  /tmp/ccIxWip2.s 			page 120


 4358 0184 00       		.byte	0
 4359 0185 20       		.uleb128 0x20
 4360 0186 17       		.uleb128 0x17
 4361 0187 01       		.byte	0x1
 4362 0188 0B       		.uleb128 0xb
 4363 0189 0B       		.uleb128 0xb
 4364 018a 3A       		.uleb128 0x3a
 4365 018b 0B       		.uleb128 0xb
 4366 018c 3B       		.uleb128 0x3b
 4367 018d 05       		.uleb128 0x5
 4368 018e 01       		.uleb128 0x1
 4369 018f 13       		.uleb128 0x13
 4370 0190 00       		.byte	0
 4371 0191 00       		.byte	0
 4372 0192 21       		.uleb128 0x21
 4373 0193 0D       		.uleb128 0xd
 4374 0194 00       		.byte	0
 4375 0195 03       		.uleb128 0x3
 4376 0196 0E       		.uleb128 0xe
 4377 0197 3A       		.uleb128 0x3a
 4378 0198 0B       		.uleb128 0xb
 4379 0199 3B       		.uleb128 0x3b
 4380 019a 05       		.uleb128 0x5
 4381 019b 49       		.uleb128 0x49
 4382 019c 13       		.uleb128 0x13
 4383 019d 00       		.byte	0
 4384 019e 00       		.byte	0
 4385 019f 22       		.uleb128 0x22
 4386 01a0 15       		.uleb128 0x15
 4387 01a1 01       		.byte	0x1
 4388 01a2 27       		.uleb128 0x27
 4389 01a3 19       		.uleb128 0x19
 4390 01a4 01       		.uleb128 0x1
 4391 01a5 13       		.uleb128 0x13
 4392 01a6 00       		.byte	0
 4393 01a7 00       		.byte	0
 4394 01a8 23       		.uleb128 0x23
 4395 01a9 04       		.uleb128 0x4
 4396 01aa 01       		.byte	0x1
 4397 01ab 03       		.uleb128 0x3
 4398 01ac 0E       		.uleb128 0xe
 4399 01ad 0B       		.uleb128 0xb
 4400 01ae 0B       		.uleb128 0xb
 4401 01af 49       		.uleb128 0x49
 4402 01b0 13       		.uleb128 0x13
 4403 01b1 3A       		.uleb128 0x3a
 4404 01b2 0B       		.uleb128 0xb
 4405 01b3 3B       		.uleb128 0x3b
 4406 01b4 05       		.uleb128 0x5
 4407 01b5 01       		.uleb128 0x1
 4408 01b6 13       		.uleb128 0x13
 4409 01b7 00       		.byte	0
 4410 01b8 00       		.byte	0
 4411 01b9 24       		.uleb128 0x24
 4412 01ba 28       		.uleb128 0x28
 4413 01bb 00       		.byte	0
 4414 01bc 03       		.uleb128 0x3
ARM GAS  /tmp/ccIxWip2.s 			page 121


 4415 01bd 0E       		.uleb128 0xe
 4416 01be 1C       		.uleb128 0x1c
 4417 01bf 0D       		.uleb128 0xd
 4418 01c0 00       		.byte	0
 4419 01c1 00       		.byte	0
 4420 01c2 25       		.uleb128 0x25
 4421 01c3 28       		.uleb128 0x28
 4422 01c4 00       		.byte	0
 4423 01c5 03       		.uleb128 0x3
 4424 01c6 0E       		.uleb128 0xe
 4425 01c7 1C       		.uleb128 0x1c
 4426 01c8 0B       		.uleb128 0xb
 4427 01c9 00       		.byte	0
 4428 01ca 00       		.byte	0
 4429 01cb 26       		.uleb128 0x26
 4430 01cc 21       		.uleb128 0x21
 4431 01cd 00       		.byte	0
 4432 01ce 00       		.byte	0
 4433 01cf 00       		.byte	0
 4434 01d0 27       		.uleb128 0x27
 4435 01d1 34       		.uleb128 0x34
 4436 01d2 00       		.byte	0
 4437 01d3 03       		.uleb128 0x3
 4438 01d4 08       		.uleb128 0x8
 4439 01d5 3A       		.uleb128 0x3a
 4440 01d6 0B       		.uleb128 0xb
 4441 01d7 3B       		.uleb128 0x3b
 4442 01d8 05       		.uleb128 0x5
 4443 01d9 49       		.uleb128 0x49
 4444 01da 13       		.uleb128 0x13
 4445 01db 3F       		.uleb128 0x3f
 4446 01dc 19       		.uleb128 0x19
 4447 01dd 3C       		.uleb128 0x3c
 4448 01de 19       		.uleb128 0x19
 4449 01df 00       		.byte	0
 4450 01e0 00       		.byte	0
 4451 01e1 28       		.uleb128 0x28
 4452 01e2 34       		.uleb128 0x34
 4453 01e3 00       		.byte	0
 4454 01e4 47       		.uleb128 0x47
 4455 01e5 13       		.uleb128 0x13
 4456 01e6 3A       		.uleb128 0x3a
 4457 01e7 0B       		.uleb128 0xb
 4458 01e8 3B       		.uleb128 0x3b
 4459 01e9 0B       		.uleb128 0xb
 4460 01ea 02       		.uleb128 0x2
 4461 01eb 18       		.uleb128 0x18
 4462 01ec 00       		.byte	0
 4463 01ed 00       		.byte	0
 4464 01ee 29       		.uleb128 0x29
 4465 01ef 34       		.uleb128 0x34
 4466 01f0 00       		.byte	0
 4467 01f1 03       		.uleb128 0x3
 4468 01f2 0E       		.uleb128 0xe
 4469 01f3 3A       		.uleb128 0x3a
 4470 01f4 0B       		.uleb128 0xb
 4471 01f5 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccIxWip2.s 			page 122


 4472 01f6 0B       		.uleb128 0xb
 4473 01f7 49       		.uleb128 0x49
 4474 01f8 13       		.uleb128 0x13
 4475 01f9 3F       		.uleb128 0x3f
 4476 01fa 19       		.uleb128 0x19
 4477 01fb 02       		.uleb128 0x2
 4478 01fc 18       		.uleb128 0x18
 4479 01fd 00       		.byte	0
 4480 01fe 00       		.byte	0
 4481 01ff 2A       		.uleb128 0x2a
 4482 0200 34       		.uleb128 0x34
 4483 0201 00       		.byte	0
 4484 0202 03       		.uleb128 0x3
 4485 0203 08       		.uleb128 0x8
 4486 0204 3A       		.uleb128 0x3a
 4487 0205 0B       		.uleb128 0xb
 4488 0206 3B       		.uleb128 0x3b
 4489 0207 0B       		.uleb128 0xb
 4490 0208 49       		.uleb128 0x49
 4491 0209 13       		.uleb128 0x13
 4492 020a 3F       		.uleb128 0x3f
 4493 020b 19       		.uleb128 0x19
 4494 020c 02       		.uleb128 0x2
 4495 020d 18       		.uleb128 0x18
 4496 020e 00       		.byte	0
 4497 020f 00       		.byte	0
 4498 0210 2B       		.uleb128 0x2b
 4499 0211 34       		.uleb128 0x34
 4500 0212 00       		.byte	0
 4501 0213 03       		.uleb128 0x3
 4502 0214 0E       		.uleb128 0xe
 4503 0215 3A       		.uleb128 0x3a
 4504 0216 0B       		.uleb128 0xb
 4505 0217 3B       		.uleb128 0x3b
 4506 0218 0B       		.uleb128 0xb
 4507 0219 49       		.uleb128 0x49
 4508 021a 13       		.uleb128 0x13
 4509 021b 02       		.uleb128 0x2
 4510 021c 18       		.uleb128 0x18
 4511 021d 00       		.byte	0
 4512 021e 00       		.byte	0
 4513 021f 2C       		.uleb128 0x2c
 4514 0220 2E       		.uleb128 0x2e
 4515 0221 01       		.byte	0x1
 4516 0222 3F       		.uleb128 0x3f
 4517 0223 19       		.uleb128 0x19
 4518 0224 03       		.uleb128 0x3
 4519 0225 0E       		.uleb128 0xe
 4520 0226 3A       		.uleb128 0x3a
 4521 0227 0B       		.uleb128 0xb
 4522 0228 3B       		.uleb128 0x3b
 4523 0229 05       		.uleb128 0x5
 4524 022a 27       		.uleb128 0x27
 4525 022b 19       		.uleb128 0x19
 4526 022c 49       		.uleb128 0x49
 4527 022d 13       		.uleb128 0x13
 4528 022e 11       		.uleb128 0x11
ARM GAS  /tmp/ccIxWip2.s 			page 123


 4529 022f 01       		.uleb128 0x1
 4530 0230 12       		.uleb128 0x12
 4531 0231 06       		.uleb128 0x6
 4532 0232 40       		.uleb128 0x40
 4533 0233 18       		.uleb128 0x18
 4534 0234 9642     		.uleb128 0x2116
 4535 0236 19       		.uleb128 0x19
 4536 0237 01       		.uleb128 0x1
 4537 0238 13       		.uleb128 0x13
 4538 0239 00       		.byte	0
 4539 023a 00       		.byte	0
 4540 023b 2D       		.uleb128 0x2d
 4541 023c 34       		.uleb128 0x34
 4542 023d 00       		.byte	0
 4543 023e 03       		.uleb128 0x3
 4544 023f 0E       		.uleb128 0xe
 4545 0240 3A       		.uleb128 0x3a
 4546 0241 0B       		.uleb128 0xb
 4547 0242 3B       		.uleb128 0x3b
 4548 0243 05       		.uleb128 0x5
 4549 0244 49       		.uleb128 0x49
 4550 0245 13       		.uleb128 0x13
 4551 0246 02       		.uleb128 0x2
 4552 0247 17       		.uleb128 0x17
 4553 0248 00       		.byte	0
 4554 0249 00       		.byte	0
 4555 024a 2E       		.uleb128 0x2e
 4556 024b 898201   		.uleb128 0x4109
 4557 024e 01       		.byte	0x1
 4558 024f 11       		.uleb128 0x11
 4559 0250 01       		.uleb128 0x1
 4560 0251 31       		.uleb128 0x31
 4561 0252 13       		.uleb128 0x13
 4562 0253 01       		.uleb128 0x1
 4563 0254 13       		.uleb128 0x13
 4564 0255 00       		.byte	0
 4565 0256 00       		.byte	0
 4566 0257 2F       		.uleb128 0x2f
 4567 0258 8A8201   		.uleb128 0x410a
 4568 025b 00       		.byte	0
 4569 025c 02       		.uleb128 0x2
 4570 025d 18       		.uleb128 0x18
 4571 025e 9142     		.uleb128 0x2111
 4572 0260 18       		.uleb128 0x18
 4573 0261 00       		.byte	0
 4574 0262 00       		.byte	0
 4575 0263 30       		.uleb128 0x30
 4576 0264 898201   		.uleb128 0x4109
 4577 0267 01       		.byte	0x1
 4578 0268 11       		.uleb128 0x11
 4579 0269 01       		.uleb128 0x1
 4580 026a 31       		.uleb128 0x31
 4581 026b 13       		.uleb128 0x13
 4582 026c 00       		.byte	0
 4583 026d 00       		.byte	0
 4584 026e 31       		.uleb128 0x31
 4585 026f 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccIxWip2.s 			page 124


 4586 0270 01       		.byte	0x1
 4587 0271 3F       		.uleb128 0x3f
 4588 0272 19       		.uleb128 0x19
 4589 0273 03       		.uleb128 0x3
 4590 0274 0E       		.uleb128 0xe
 4591 0275 3A       		.uleb128 0x3a
 4592 0276 0B       		.uleb128 0xb
 4593 0277 3B       		.uleb128 0x3b
 4594 0278 05       		.uleb128 0x5
 4595 0279 27       		.uleb128 0x27
 4596 027a 19       		.uleb128 0x19
 4597 027b 11       		.uleb128 0x11
 4598 027c 01       		.uleb128 0x1
 4599 027d 12       		.uleb128 0x12
 4600 027e 06       		.uleb128 0x6
 4601 027f 40       		.uleb128 0x40
 4602 0280 18       		.uleb128 0x18
 4603 0281 9642     		.uleb128 0x2116
 4604 0283 19       		.uleb128 0x19
 4605 0284 01       		.uleb128 0x1
 4606 0285 13       		.uleb128 0x13
 4607 0286 00       		.byte	0
 4608 0287 00       		.byte	0
 4609 0288 32       		.uleb128 0x32
 4610 0289 34       		.uleb128 0x34
 4611 028a 00       		.byte	0
 4612 028b 03       		.uleb128 0x3
 4613 028c 0E       		.uleb128 0xe
 4614 028d 3A       		.uleb128 0x3a
 4615 028e 0B       		.uleb128 0xb
 4616 028f 3B       		.uleb128 0x3b
 4617 0290 05       		.uleb128 0x5
 4618 0291 49       		.uleb128 0x49
 4619 0292 13       		.uleb128 0x13
 4620 0293 02       		.uleb128 0x2
 4621 0294 18       		.uleb128 0x18
 4622 0295 00       		.byte	0
 4623 0296 00       		.byte	0
 4624 0297 33       		.uleb128 0x33
 4625 0298 898201   		.uleb128 0x4109
 4626 029b 00       		.byte	0
 4627 029c 11       		.uleb128 0x11
 4628 029d 01       		.uleb128 0x1
 4629 029e 31       		.uleb128 0x31
 4630 029f 13       		.uleb128 0x13
 4631 02a0 00       		.byte	0
 4632 02a1 00       		.byte	0
 4633 02a2 34       		.uleb128 0x34
 4634 02a3 2E       		.uleb128 0x2e
 4635 02a4 01       		.byte	0x1
 4636 02a5 3F       		.uleb128 0x3f
 4637 02a6 19       		.uleb128 0x19
 4638 02a7 03       		.uleb128 0x3
 4639 02a8 0E       		.uleb128 0xe
 4640 02a9 3A       		.uleb128 0x3a
 4641 02aa 0B       		.uleb128 0xb
 4642 02ab 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccIxWip2.s 			page 125


 4643 02ac 0B       		.uleb128 0xb
 4644 02ad 27       		.uleb128 0x27
 4645 02ae 19       		.uleb128 0x19
 4646 02af 11       		.uleb128 0x11
 4647 02b0 01       		.uleb128 0x1
 4648 02b1 12       		.uleb128 0x12
 4649 02b2 06       		.uleb128 0x6
 4650 02b3 40       		.uleb128 0x40
 4651 02b4 18       		.uleb128 0x18
 4652 02b5 9642     		.uleb128 0x2116
 4653 02b7 19       		.uleb128 0x19
 4654 02b8 01       		.uleb128 0x1
 4655 02b9 13       		.uleb128 0x13
 4656 02ba 00       		.byte	0
 4657 02bb 00       		.byte	0
 4658 02bc 35       		.uleb128 0x35
 4659 02bd 1D       		.uleb128 0x1d
 4660 02be 01       		.byte	0x1
 4661 02bf 31       		.uleb128 0x31
 4662 02c0 13       		.uleb128 0x13
 4663 02c1 11       		.uleb128 0x11
 4664 02c2 01       		.uleb128 0x1
 4665 02c3 12       		.uleb128 0x12
 4666 02c4 06       		.uleb128 0x6
 4667 02c5 58       		.uleb128 0x58
 4668 02c6 0B       		.uleb128 0xb
 4669 02c7 59       		.uleb128 0x59
 4670 02c8 0B       		.uleb128 0xb
 4671 02c9 01       		.uleb128 0x1
 4672 02ca 13       		.uleb128 0x13
 4673 02cb 00       		.byte	0
 4674 02cc 00       		.byte	0
 4675 02cd 36       		.uleb128 0x36
 4676 02ce 1D       		.uleb128 0x1d
 4677 02cf 00       		.byte	0
 4678 02d0 31       		.uleb128 0x31
 4679 02d1 13       		.uleb128 0x13
 4680 02d2 11       		.uleb128 0x11
 4681 02d3 01       		.uleb128 0x1
 4682 02d4 12       		.uleb128 0x12
 4683 02d5 06       		.uleb128 0x6
 4684 02d6 58       		.uleb128 0x58
 4685 02d7 0B       		.uleb128 0xb
 4686 02d8 59       		.uleb128 0x59
 4687 02d9 05       		.uleb128 0x5
 4688 02da 00       		.byte	0
 4689 02db 00       		.byte	0
 4690 02dc 37       		.uleb128 0x37
 4691 02dd 05       		.uleb128 0x5
 4692 02de 00       		.byte	0
 4693 02df 31       		.uleb128 0x31
 4694 02e0 13       		.uleb128 0x13
 4695 02e1 02       		.uleb128 0x2
 4696 02e2 17       		.uleb128 0x17
 4697 02e3 00       		.byte	0
 4698 02e4 00       		.byte	0
 4699 02e5 38       		.uleb128 0x38
ARM GAS  /tmp/ccIxWip2.s 			page 126


 4700 02e6 0B       		.uleb128 0xb
 4701 02e7 01       		.byte	0x1
 4702 02e8 11       		.uleb128 0x11
 4703 02e9 01       		.uleb128 0x1
 4704 02ea 12       		.uleb128 0x12
 4705 02eb 06       		.uleb128 0x6
 4706 02ec 00       		.byte	0
 4707 02ed 00       		.byte	0
 4708 02ee 39       		.uleb128 0x39
 4709 02ef 34       		.uleb128 0x34
 4710 02f0 00       		.byte	0
 4711 02f1 31       		.uleb128 0x31
 4712 02f2 13       		.uleb128 0x13
 4713 02f3 02       		.uleb128 0x2
 4714 02f4 17       		.uleb128 0x17
 4715 02f5 00       		.byte	0
 4716 02f6 00       		.byte	0
 4717 02f7 3A       		.uleb128 0x3a
 4718 02f8 1D       		.uleb128 0x1d
 4719 02f9 01       		.byte	0x1
 4720 02fa 31       		.uleb128 0x31
 4721 02fb 13       		.uleb128 0x13
 4722 02fc 52       		.uleb128 0x52
 4723 02fd 01       		.uleb128 0x1
 4724 02fe 55       		.uleb128 0x55
 4725 02ff 17       		.uleb128 0x17
 4726 0300 58       		.uleb128 0x58
 4727 0301 0B       		.uleb128 0xb
 4728 0302 59       		.uleb128 0x59
 4729 0303 0B       		.uleb128 0xb
 4730 0304 01       		.uleb128 0x1
 4731 0305 13       		.uleb128 0x13
 4732 0306 00       		.byte	0
 4733 0307 00       		.byte	0
 4734 0308 3B       		.uleb128 0x3b
 4735 0309 0B       		.uleb128 0xb
 4736 030a 01       		.byte	0x1
 4737 030b 55       		.uleb128 0x55
 4738 030c 17       		.uleb128 0x17
 4739 030d 00       		.byte	0
 4740 030e 00       		.byte	0
 4741 030f 3C       		.uleb128 0x3c
 4742 0310 34       		.uleb128 0x34
 4743 0311 00       		.byte	0
 4744 0312 31       		.uleb128 0x31
 4745 0313 13       		.uleb128 0x13
 4746 0314 02       		.uleb128 0x2
 4747 0315 18       		.uleb128 0x18
 4748 0316 00       		.byte	0
 4749 0317 00       		.byte	0
 4750 0318 3D       		.uleb128 0x3d
 4751 0319 0B       		.uleb128 0xb
 4752 031a 01       		.byte	0x1
 4753 031b 11       		.uleb128 0x11
 4754 031c 01       		.uleb128 0x1
 4755 031d 12       		.uleb128 0x12
 4756 031e 06       		.uleb128 0x6
ARM GAS  /tmp/ccIxWip2.s 			page 127


 4757 031f 01       		.uleb128 0x1
 4758 0320 13       		.uleb128 0x13
 4759 0321 00       		.byte	0
 4760 0322 00       		.byte	0
 4761 0323 3E       		.uleb128 0x3e
 4762 0324 2E       		.uleb128 0x2e
 4763 0325 01       		.byte	0x1
 4764 0326 3F       		.uleb128 0x3f
 4765 0327 19       		.uleb128 0x19
 4766 0328 03       		.uleb128 0x3
 4767 0329 0E       		.uleb128 0xe
 4768 032a 3A       		.uleb128 0x3a
 4769 032b 0B       		.uleb128 0xb
 4770 032c 3B       		.uleb128 0x3b
 4771 032d 0B       		.uleb128 0xb
 4772 032e 27       		.uleb128 0x27
 4773 032f 19       		.uleb128 0x19
 4774 0330 11       		.uleb128 0x11
 4775 0331 01       		.uleb128 0x1
 4776 0332 12       		.uleb128 0x12
 4777 0333 06       		.uleb128 0x6
 4778 0334 40       		.uleb128 0x40
 4779 0335 18       		.uleb128 0x18
 4780 0336 9742     		.uleb128 0x2117
 4781 0338 19       		.uleb128 0x19
 4782 0339 01       		.uleb128 0x1
 4783 033a 13       		.uleb128 0x13
 4784 033b 00       		.byte	0
 4785 033c 00       		.byte	0
 4786 033d 3F       		.uleb128 0x3f
 4787 033e 05       		.uleb128 0x5
 4788 033f 00       		.byte	0
 4789 0340 03       		.uleb128 0x3
 4790 0341 0E       		.uleb128 0xe
 4791 0342 3A       		.uleb128 0x3a
 4792 0343 0B       		.uleb128 0xb
 4793 0344 3B       		.uleb128 0x3b
 4794 0345 0B       		.uleb128 0xb
 4795 0346 49       		.uleb128 0x49
 4796 0347 13       		.uleb128 0x13
 4797 0348 02       		.uleb128 0x2
 4798 0349 17       		.uleb128 0x17
 4799 034a 00       		.byte	0
 4800 034b 00       		.byte	0
 4801 034c 40       		.uleb128 0x40
 4802 034d 2E       		.uleb128 0x2e
 4803 034e 01       		.byte	0x1
 4804 034f 3F       		.uleb128 0x3f
 4805 0350 19       		.uleb128 0x19
 4806 0351 03       		.uleb128 0x3
 4807 0352 0E       		.uleb128 0xe
 4808 0353 3A       		.uleb128 0x3a
 4809 0354 0B       		.uleb128 0xb
 4810 0355 3B       		.uleb128 0x3b
 4811 0356 0B       		.uleb128 0xb
 4812 0357 27       		.uleb128 0x27
 4813 0358 19       		.uleb128 0x19
ARM GAS  /tmp/ccIxWip2.s 			page 128


 4814 0359 49       		.uleb128 0x49
 4815 035a 13       		.uleb128 0x13
 4816 035b 11       		.uleb128 0x11
 4817 035c 01       		.uleb128 0x1
 4818 035d 12       		.uleb128 0x12
 4819 035e 06       		.uleb128 0x6
 4820 035f 40       		.uleb128 0x40
 4821 0360 18       		.uleb128 0x18
 4822 0361 9742     		.uleb128 0x2117
 4823 0363 19       		.uleb128 0x19
 4824 0364 01       		.uleb128 0x1
 4825 0365 13       		.uleb128 0x13
 4826 0366 00       		.byte	0
 4827 0367 00       		.byte	0
 4828 0368 41       		.uleb128 0x41
 4829 0369 05       		.uleb128 0x5
 4830 036a 00       		.byte	0
 4831 036b 03       		.uleb128 0x3
 4832 036c 08       		.uleb128 0x8
 4833 036d 3A       		.uleb128 0x3a
 4834 036e 0B       		.uleb128 0xb
 4835 036f 3B       		.uleb128 0x3b
 4836 0370 0B       		.uleb128 0xb
 4837 0371 49       		.uleb128 0x49
 4838 0372 13       		.uleb128 0x13
 4839 0373 02       		.uleb128 0x2
 4840 0374 17       		.uleb128 0x17
 4841 0375 00       		.byte	0
 4842 0376 00       		.byte	0
 4843 0377 42       		.uleb128 0x42
 4844 0378 34       		.uleb128 0x34
 4845 0379 00       		.byte	0
 4846 037a 03       		.uleb128 0x3
 4847 037b 08       		.uleb128 0x8
 4848 037c 3A       		.uleb128 0x3a
 4849 037d 0B       		.uleb128 0xb
 4850 037e 3B       		.uleb128 0x3b
 4851 037f 0B       		.uleb128 0xb
 4852 0380 49       		.uleb128 0x49
 4853 0381 13       		.uleb128 0x13
 4854 0382 02       		.uleb128 0x2
 4855 0383 17       		.uleb128 0x17
 4856 0384 00       		.byte	0
 4857 0385 00       		.byte	0
 4858 0386 43       		.uleb128 0x43
 4859 0387 2E       		.uleb128 0x2e
 4860 0388 01       		.byte	0x1
 4861 0389 03       		.uleb128 0x3
 4862 038a 0E       		.uleb128 0xe
 4863 038b 3A       		.uleb128 0x3a
 4864 038c 0B       		.uleb128 0xb
 4865 038d 3B       		.uleb128 0x3b
 4866 038e 0B       		.uleb128 0xb
 4867 038f 27       		.uleb128 0x27
 4868 0390 19       		.uleb128 0x19
 4869 0391 20       		.uleb128 0x20
 4870 0392 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIxWip2.s 			page 129


 4871 0393 01       		.uleb128 0x1
 4872 0394 13       		.uleb128 0x13
 4873 0395 00       		.byte	0
 4874 0396 00       		.byte	0
 4875 0397 44       		.uleb128 0x44
 4876 0398 34       		.uleb128 0x34
 4877 0399 00       		.byte	0
 4878 039a 03       		.uleb128 0x3
 4879 039b 0E       		.uleb128 0xe
 4880 039c 3A       		.uleb128 0x3a
 4881 039d 0B       		.uleb128 0xb
 4882 039e 3B       		.uleb128 0x3b
 4883 039f 0B       		.uleb128 0xb
 4884 03a0 49       		.uleb128 0x49
 4885 03a1 13       		.uleb128 0x13
 4886 03a2 00       		.byte	0
 4887 03a3 00       		.byte	0
 4888 03a4 45       		.uleb128 0x45
 4889 03a5 0B       		.uleb128 0xb
 4890 03a6 01       		.byte	0x1
 4891 03a7 00       		.byte	0
 4892 03a8 00       		.byte	0
 4893 03a9 46       		.uleb128 0x46
 4894 03aa 2E       		.uleb128 0x2e
 4895 03ab 01       		.byte	0x1
 4896 03ac 03       		.uleb128 0x3
 4897 03ad 0E       		.uleb128 0xe
 4898 03ae 3A       		.uleb128 0x3a
 4899 03af 0B       		.uleb128 0xb
 4900 03b0 3B       		.uleb128 0x3b
 4901 03b1 0B       		.uleb128 0xb
 4902 03b2 27       		.uleb128 0x27
 4903 03b3 19       		.uleb128 0x19
 4904 03b4 49       		.uleb128 0x49
 4905 03b5 13       		.uleb128 0x13
 4906 03b6 20       		.uleb128 0x20
 4907 03b7 0B       		.uleb128 0xb
 4908 03b8 01       		.uleb128 0x1
 4909 03b9 13       		.uleb128 0x13
 4910 03ba 00       		.byte	0
 4911 03bb 00       		.byte	0
 4912 03bc 47       		.uleb128 0x47
 4913 03bd 05       		.uleb128 0x5
 4914 03be 00       		.byte	0
 4915 03bf 03       		.uleb128 0x3
 4916 03c0 08       		.uleb128 0x8
 4917 03c1 3A       		.uleb128 0x3a
 4918 03c2 0B       		.uleb128 0xb
 4919 03c3 3B       		.uleb128 0x3b
 4920 03c4 0B       		.uleb128 0xb
 4921 03c5 49       		.uleb128 0x49
 4922 03c6 13       		.uleb128 0x13
 4923 03c7 00       		.byte	0
 4924 03c8 00       		.byte	0
 4925 03c9 48       		.uleb128 0x48
 4926 03ca 2E       		.uleb128 0x2e
 4927 03cb 01       		.byte	0x1
ARM GAS  /tmp/ccIxWip2.s 			page 130


 4928 03cc 03       		.uleb128 0x3
 4929 03cd 0E       		.uleb128 0xe
 4930 03ce 3A       		.uleb128 0x3a
 4931 03cf 0B       		.uleb128 0xb
 4932 03d0 3B       		.uleb128 0x3b
 4933 03d1 0B       		.uleb128 0xb
 4934 03d2 27       		.uleb128 0x27
 4935 03d3 19       		.uleb128 0x19
 4936 03d4 49       		.uleb128 0x49
 4937 03d5 13       		.uleb128 0x13
 4938 03d6 11       		.uleb128 0x11
 4939 03d7 01       		.uleb128 0x1
 4940 03d8 12       		.uleb128 0x12
 4941 03d9 06       		.uleb128 0x6
 4942 03da 40       		.uleb128 0x40
 4943 03db 18       		.uleb128 0x18
 4944 03dc 9742     		.uleb128 0x2117
 4945 03de 19       		.uleb128 0x19
 4946 03df 01       		.uleb128 0x1
 4947 03e0 13       		.uleb128 0x13
 4948 03e1 00       		.byte	0
 4949 03e2 00       		.byte	0
 4950 03e3 49       		.uleb128 0x49
 4951 03e4 2E       		.uleb128 0x2e
 4952 03e5 00       		.byte	0
 4953 03e6 03       		.uleb128 0x3
 4954 03e7 0E       		.uleb128 0xe
 4955 03e8 3A       		.uleb128 0x3a
 4956 03e9 0B       		.uleb128 0xb
 4957 03ea 3B       		.uleb128 0x3b
 4958 03eb 05       		.uleb128 0x5
 4959 03ec 27       		.uleb128 0x27
 4960 03ed 19       		.uleb128 0x19
 4961 03ee 20       		.uleb128 0x20
 4962 03ef 0B       		.uleb128 0xb
 4963 03f0 00       		.byte	0
 4964 03f1 00       		.byte	0
 4965 03f2 4A       		.uleb128 0x4a
 4966 03f3 2E       		.uleb128 0x2e
 4967 03f4 00       		.byte	0
 4968 03f5 3F       		.uleb128 0x3f
 4969 03f6 19       		.uleb128 0x19
 4970 03f7 3C       		.uleb128 0x3c
 4971 03f8 19       		.uleb128 0x19
 4972 03f9 6E       		.uleb128 0x6e
 4973 03fa 0E       		.uleb128 0xe
 4974 03fb 03       		.uleb128 0x3
 4975 03fc 0E       		.uleb128 0xe
 4976 03fd 3A       		.uleb128 0x3a
 4977 03fe 0B       		.uleb128 0xb
 4978 03ff 3B       		.uleb128 0x3b
 4979 0400 0B       		.uleb128 0xb
 4980 0401 00       		.byte	0
 4981 0402 00       		.byte	0
 4982 0403 4B       		.uleb128 0x4b
 4983 0404 2E       		.uleb128 0x2e
 4984 0405 00       		.byte	0
ARM GAS  /tmp/ccIxWip2.s 			page 131


 4985 0406 3F       		.uleb128 0x3f
 4986 0407 19       		.uleb128 0x19
 4987 0408 3C       		.uleb128 0x3c
 4988 0409 19       		.uleb128 0x19
 4989 040a 6E       		.uleb128 0x6e
 4990 040b 0E       		.uleb128 0xe
 4991 040c 03       		.uleb128 0x3
 4992 040d 0E       		.uleb128 0xe
 4993 040e 3A       		.uleb128 0x3a
 4994 040f 0B       		.uleb128 0xb
 4995 0410 3B       		.uleb128 0x3b
 4996 0411 0B       		.uleb128 0xb
 4997 0412 6E       		.uleb128 0x6e
 4998 0413 0E       		.uleb128 0xe
 4999 0414 00       		.byte	0
 5000 0415 00       		.byte	0
 5001 0416 00       		.byte	0
 5002              		.section	.debug_loc,"",%progbits
 5003              	.Ldebug_loc0:
 5004              	.LLST19:
 5005 0000 C6040000 		.4byte	.LVL134-.Ltext0
 5006 0004 CD040000 		.4byte	.LVL135-1-.Ltext0
 5007 0008 0100     		.2byte	0x1
 5008 000a 50       		.byte	0x50
 5009 000b CD040000 		.4byte	.LVL135-1-.Ltext0
 5010 000f FA040000 		.4byte	.LVL141-.Ltext0
 5011 0013 0100     		.2byte	0x1
 5012 0015 54       		.byte	0x54
 5013 0016 FA040000 		.4byte	.LVL141-.Ltext0
 5014 001a FD040000 		.4byte	.LVL142-1-.Ltext0
 5015 001e 0600     		.2byte	0x6
 5016 0020 F5       		.byte	0xf5
 5017 0021 00       		.uleb128 0
 5018 0022 25       		.uleb128 0x25
 5019 0023 F7       		.byte	0xf7
 5020 0024 2C       		.uleb128 0x2c
 5021 0025 9F       		.byte	0x9f
 5022 0026 00000000 		.4byte	0
 5023 002a 00000000 		.4byte	0
 5024              	.LLST16:
 5025 002e 96020000 		.4byte	.LVL76-.Ltext0
 5026 0032 B6020000 		.4byte	.LVL82-.Ltext0
 5027 0036 0600     		.2byte	0x6
 5028 0038 03       		.byte	0x3
 5029 0039 00000000 		.4byte	gyro_orientation
 5030 003d 9F       		.byte	0x9f
 5031 003e 00000000 		.4byte	0
 5032 0042 00000000 		.4byte	0
 5033              	.LLST17:
 5034 0046 A0020000 		.4byte	.LVL78-.Ltext0
 5035 004a A8020000 		.4byte	.LVL80-.Ltext0
 5036 004e 0100     		.2byte	0x1
 5037 0050 55       		.byte	0x55
 5038 0051 A8020000 		.4byte	.LVL80-.Ltext0
 5039 0055 B6020000 		.4byte	.LVL82-.Ltext0
 5040 0059 0800     		.2byte	0x8
 5041 005b 76       		.byte	0x76
ARM GAS  /tmp/ccIxWip2.s 			page 132


 5042 005c 00       		.sleb128 0
 5043 005d 33       		.byte	0x33
 5044 005e 24       		.byte	0x24
 5045 005f 75       		.byte	0x75
 5046 0060 00       		.sleb128 0
 5047 0061 21       		.byte	0x21
 5048 0062 9F       		.byte	0x9f
 5049 0063 00000000 		.4byte	0
 5050 0067 00000000 		.4byte	0
 5051              	.LLST18:
 5052 006b D8020000 		.4byte	.LVL86-.Ltext0
 5053 006f DC020000 		.4byte	.LVL87-.Ltext0
 5054 0073 0100     		.2byte	0x1
 5055 0075 50       		.byte	0x50
 5056 0076 26030000 		.4byte	.LVL97-.Ltext0
 5057 007a 28030000 		.4byte	.LVL98-.Ltext0
 5058 007e 0100     		.2byte	0x1
 5059 0080 50       		.byte	0x50
 5060 0081 00000000 		.4byte	0
 5061 0085 00000000 		.4byte	0
 5062              	.LLST15:
 5063 0089 F0010000 		.4byte	.LVL60-.Ltext0
 5064 008d FA010000 		.4byte	.LVL61-.Ltext0
 5065 0091 0100     		.2byte	0x1
 5066 0093 50       		.byte	0x50
 5067 0094 FA010000 		.4byte	.LVL61-.Ltext0
 5068 0098 00020000 		.4byte	.LFE75-.Ltext0
 5069 009c 0400     		.2byte	0x4
 5070 009e F3       		.byte	0xf3
 5071 009f 01       		.uleb128 0x1
 5072 00a0 50       		.byte	0x50
 5073 00a1 9F       		.byte	0x9f
 5074 00a2 00000000 		.4byte	0
 5075 00a6 00000000 		.4byte	0
 5076              	.LLST14:
 5077 00aa E0010000 		.4byte	.LVL57-.Ltext0
 5078 00ae EA010000 		.4byte	.LVL58-.Ltext0
 5079 00b2 0100     		.2byte	0x1
 5080 00b4 50       		.byte	0x50
 5081 00b5 EA010000 		.4byte	.LVL58-.Ltext0
 5082 00b9 F0010000 		.4byte	.LFE74-.Ltext0
 5083 00bd 0400     		.2byte	0x4
 5084 00bf F3       		.byte	0xf3
 5085 00c0 01       		.uleb128 0x1
 5086 00c1 50       		.byte	0x50
 5087 00c2 9F       		.byte	0x9f
 5088 00c3 00000000 		.4byte	0
 5089 00c7 00000000 		.4byte	0
 5090              	.LLST13:
 5091 00cb A4010000 		.4byte	.LVL52-.Ltext0
 5092 00cf AE010000 		.4byte	.LVL53-.Ltext0
 5093 00d3 0100     		.2byte	0x1
 5094 00d5 50       		.byte	0x50
 5095 00d6 AE010000 		.4byte	.LVL53-.Ltext0
 5096 00da B4010000 		.4byte	.LFE71-.Ltext0
 5097 00de 0400     		.2byte	0x4
 5098 00e0 F3       		.byte	0xf3
ARM GAS  /tmp/ccIxWip2.s 			page 133


 5099 00e1 01       		.uleb128 0x1
 5100 00e2 50       		.byte	0x50
 5101 00e3 9F       		.byte	0x9f
 5102 00e4 00000000 		.4byte	0
 5103 00e8 00000000 		.4byte	0
 5104              	.LLST12:
 5105 00ec 8C010000 		.4byte	.LVL49-.Ltext0
 5106 00f0 9A010000 		.4byte	.LVL50-.Ltext0
 5107 00f4 0100     		.2byte	0x1
 5108 00f6 50       		.byte	0x50
 5109 00f7 9A010000 		.4byte	.LVL50-.Ltext0
 5110 00fb A4010000 		.4byte	.LFE70-.Ltext0
 5111 00ff 0400     		.2byte	0x4
 5112 0101 F3       		.byte	0xf3
 5113 0102 01       		.uleb128 0x1
 5114 0103 50       		.byte	0x50
 5115 0104 9F       		.byte	0x9f
 5116 0105 00000000 		.4byte	0
 5117 0109 00000000 		.4byte	0
 5118              	.LLST11:
 5119 010d 74010000 		.4byte	.LVL46-.Ltext0
 5120 0111 82010000 		.4byte	.LVL47-.Ltext0
 5121 0115 0100     		.2byte	0x1
 5122 0117 50       		.byte	0x50
 5123 0118 82010000 		.4byte	.LVL47-.Ltext0
 5124 011c 8C010000 		.4byte	.LFE69-.Ltext0
 5125 0120 0400     		.2byte	0x4
 5126 0122 F3       		.byte	0xf3
 5127 0123 01       		.uleb128 0x1
 5128 0124 50       		.byte	0x50
 5129 0125 9F       		.byte	0x9f
 5130 0126 00000000 		.4byte	0
 5131 012a 00000000 		.4byte	0
 5132              	.LLST10:
 5133 012e 5C010000 		.4byte	.LVL43-.Ltext0
 5134 0132 6A010000 		.4byte	.LVL44-.Ltext0
 5135 0136 0100     		.2byte	0x1
 5136 0138 50       		.byte	0x50
 5137 0139 6A010000 		.4byte	.LVL44-.Ltext0
 5138 013d 74010000 		.4byte	.LFE68-.Ltext0
 5139 0141 0400     		.2byte	0x4
 5140 0143 F3       		.byte	0xf3
 5141 0144 01       		.uleb128 0x1
 5142 0145 50       		.byte	0x50
 5143 0146 9F       		.byte	0x9f
 5144 0147 00000000 		.4byte	0
 5145 014b 00000000 		.4byte	0
 5146              	.LLST2:
 5147 014f 38000000 		.4byte	.LVL12-.Ltext0
 5148 0153 9C000000 		.4byte	.LVL20-.Ltext0
 5149 0157 0100     		.2byte	0x1
 5150 0159 50       		.byte	0x50
 5151 015a 9C000000 		.4byte	.LVL20-.Ltext0
 5152 015e 5C010000 		.4byte	.LFE67-.Ltext0
 5153 0162 0500     		.2byte	0x5
 5154 0164 03       		.byte	0x3
 5155 0165 24000000 		.4byte	MPU6050_FIFO+36
ARM GAS  /tmp/ccIxWip2.s 			page 134


 5156 0169 00000000 		.4byte	0
 5157 016d 00000000 		.4byte	0
 5158              	.LLST3:
 5159 0171 38000000 		.4byte	.LVL12-.Ltext0
 5160 0175 88000000 		.4byte	.LVL17-.Ltext0
 5161 0179 0100     		.2byte	0x1
 5162 017b 51       		.byte	0x51
 5163 017c 88000000 		.4byte	.LVL17-.Ltext0
 5164 0180 5C010000 		.4byte	.LFE67-.Ltext0
 5165 0184 0500     		.2byte	0x5
 5166 0186 03       		.byte	0x3
 5167 0187 50000000 		.4byte	MPU6050_FIFO+80
 5168 018b 00000000 		.4byte	0
 5169 018f 00000000 		.4byte	0
 5170              	.LLST4:
 5171 0193 38000000 		.4byte	.LVL12-.Ltext0
 5172 0197 8A000000 		.4byte	.LVL18-.Ltext0
 5173 019b 0100     		.2byte	0x1
 5174 019d 52       		.byte	0x52
 5175 019e 8A000000 		.4byte	.LVL18-.Ltext0
 5176 01a2 5C010000 		.4byte	.LFE67-.Ltext0
 5177 01a6 0500     		.2byte	0x5
 5178 01a8 03       		.byte	0x3
 5179 01a9 7C000000 		.4byte	MPU6050_FIFO+124
 5180 01ad 00000000 		.4byte	0
 5181 01b1 00000000 		.4byte	0
 5182              	.LLST5:
 5183 01b5 38000000 		.4byte	.LVL12-.Ltext0
 5184 01b9 7A000000 		.4byte	.LVL15-.Ltext0
 5185 01bd 0100     		.2byte	0x1
 5186 01bf 53       		.byte	0x53
 5187 01c0 7A000000 		.4byte	.LVL15-.Ltext0
 5188 01c4 5C010000 		.4byte	.LFE67-.Ltext0
 5189 01c8 0500     		.2byte	0x5
 5190 01ca 03       		.byte	0x3
 5191 01cb A8000000 		.4byte	MPU6050_FIFO+168
 5192 01cf 00000000 		.4byte	0
 5193 01d3 00000000 		.4byte	0
 5194              	.LLST6:
 5195 01d7 38000000 		.4byte	.LVL12-.Ltext0
 5196 01db 50010000 		.4byte	.LVL42-.Ltext0
 5197 01df 0200     		.2byte	0x2
 5198 01e1 91       		.byte	0x91
 5199 01e2 00       		.sleb128 0
 5200 01e3 50010000 		.4byte	.LVL42-.Ltext0
 5201 01e7 5C010000 		.4byte	.LFE67-.Ltext0
 5202 01eb 0200     		.2byte	0x2
 5203 01ed 7D       		.byte	0x7d
 5204 01ee 00       		.sleb128 0
 5205 01ef 00000000 		.4byte	0
 5206 01f3 00000000 		.4byte	0
 5207              	.LLST7:
 5208 01f7 38000000 		.4byte	.LVL12-.Ltext0
 5209 01fb 50010000 		.4byte	.LVL42-.Ltext0
 5210 01ff 0200     		.2byte	0x2
 5211 0201 91       		.byte	0x91
 5212 0202 04       		.sleb128 4
ARM GAS  /tmp/ccIxWip2.s 			page 135


 5213 0203 50010000 		.4byte	.LVL42-.Ltext0
 5214 0207 5C010000 		.4byte	.LFE67-.Ltext0
 5215 020b 0200     		.2byte	0x2
 5216 020d 7D       		.byte	0x7d
 5217 020e 04       		.sleb128 4
 5218 020f 00000000 		.4byte	0
 5219 0213 00000000 		.4byte	0
 5220              	.LLST8:
 5221 0217 3A000000 		.4byte	.LVL13-.Ltext0
 5222 021b 42000000 		.4byte	.LVL14-.Ltext0
 5223 021f 0200     		.2byte	0x2
 5224 0221 31       		.byte	0x31
 5225 0222 9F       		.byte	0x9f
 5226 0223 84000000 		.4byte	.LVL16-.Ltext0
 5227 0227 8A000000 		.4byte	.LVL18-.Ltext0
 5228 022b 0200     		.2byte	0x2
 5229 022d 30       		.byte	0x30
 5230 022e 9F       		.byte	0x9f
 5231 022f A4000000 		.4byte	.LVL22-.Ltext0
 5232 0233 A8000000 		.4byte	.LVL23-.Ltext0
 5233 0237 0200     		.2byte	0x2
 5234 0239 30       		.byte	0x30
 5235 023a 9F       		.byte	0x9f
 5236 023b C6000000 		.4byte	.LVL26-.Ltext0
 5237 023f CA000000 		.4byte	.LVL27-.Ltext0
 5238 0243 0200     		.2byte	0x2
 5239 0245 30       		.byte	0x30
 5240 0246 9F       		.byte	0x9f
 5241 0247 E8000000 		.4byte	.LVL30-.Ltext0
 5242 024b EC000000 		.4byte	.LVL31-.Ltext0
 5243 024f 0200     		.2byte	0x2
 5244 0251 30       		.byte	0x30
 5245 0252 9F       		.byte	0x9f
 5246 0253 0A010000 		.4byte	.LVL34-.Ltext0
 5247 0257 0E010000 		.4byte	.LVL35-.Ltext0
 5248 025b 0200     		.2byte	0x2
 5249 025d 30       		.byte	0x30
 5250 025e 9F       		.byte	0x9f
 5251 025f 2C010000 		.4byte	.LVL38-.Ltext0
 5252 0263 32010000 		.4byte	.LVL39-.Ltext0
 5253 0267 0200     		.2byte	0x2
 5254 0269 30       		.byte	0x30
 5255 026a 9F       		.byte	0x9f
 5256 026b 00000000 		.4byte	0
 5257 026f 00000000 		.4byte	0
 5258              	.LLST9:
 5259 0273 3A000000 		.4byte	.LVL13-.Ltext0
 5260 0277 8A000000 		.4byte	.LVL18-.Ltext0
 5261 027b 0200     		.2byte	0x2
 5262 027d 30       		.byte	0x30
 5263 027e 9F       		.byte	0x9f
 5264 027f 8A000000 		.4byte	.LVL18-.Ltext0
 5265 0283 9E000000 		.4byte	.LVL21-.Ltext0
 5266 0287 0100     		.2byte	0x1
 5267 0289 53       		.byte	0x53
 5268 028a A4000000 		.4byte	.LVL22-.Ltext0
 5269 028e A8000000 		.4byte	.LVL23-.Ltext0
ARM GAS  /tmp/ccIxWip2.s 			page 136


 5270 0292 0200     		.2byte	0x2
 5271 0294 30       		.byte	0x30
 5272 0295 9F       		.byte	0x9f
 5273 0296 A8000000 		.4byte	.LVL23-.Ltext0
 5274 029a BC000000 		.4byte	.LVL25-.Ltext0
 5275 029e 0100     		.2byte	0x1
 5276 02a0 53       		.byte	0x53
 5277 02a1 C6000000 		.4byte	.LVL26-.Ltext0
 5278 02a5 CA000000 		.4byte	.LVL27-.Ltext0
 5279 02a9 0200     		.2byte	0x2
 5280 02ab 30       		.byte	0x30
 5281 02ac 9F       		.byte	0x9f
 5282 02ad CA000000 		.4byte	.LVL27-.Ltext0
 5283 02b1 DE000000 		.4byte	.LVL29-.Ltext0
 5284 02b5 0100     		.2byte	0x1
 5285 02b7 52       		.byte	0x52
 5286 02b8 E8000000 		.4byte	.LVL30-.Ltext0
 5287 02bc EC000000 		.4byte	.LVL31-.Ltext0
 5288 02c0 0200     		.2byte	0x2
 5289 02c2 30       		.byte	0x30
 5290 02c3 9F       		.byte	0x9f
 5291 02c4 EC000000 		.4byte	.LVL31-.Ltext0
 5292 02c8 00010000 		.4byte	.LVL33-.Ltext0
 5293 02cc 0100     		.2byte	0x1
 5294 02ce 52       		.byte	0x52
 5295 02cf 0A010000 		.4byte	.LVL34-.Ltext0
 5296 02d3 0E010000 		.4byte	.LVL35-.Ltext0
 5297 02d7 0200     		.2byte	0x2
 5298 02d9 30       		.byte	0x30
 5299 02da 9F       		.byte	0x9f
 5300 02db 0E010000 		.4byte	.LVL35-.Ltext0
 5301 02df 22010000 		.4byte	.LVL37-.Ltext0
 5302 02e3 0100     		.2byte	0x1
 5303 02e5 52       		.byte	0x52
 5304 02e6 2C010000 		.4byte	.LVL38-.Ltext0
 5305 02ea 32010000 		.4byte	.LVL39-.Ltext0
 5306 02ee 0200     		.2byte	0x2
 5307 02f0 30       		.byte	0x30
 5308 02f1 9F       		.byte	0x9f
 5309 02f2 32010000 		.4byte	.LVL39-.Ltext0
 5310 02f6 44010000 		.4byte	.LVL41-.Ltext0
 5311 02fa 0100     		.2byte	0x1
 5312 02fc 52       		.byte	0x52
 5313 02fd 00000000 		.4byte	0
 5314 0301 00000000 		.4byte	0
 5315              	.LLST0:
 5316 0305 00000000 		.4byte	.LVL0-.Ltext0
 5317 0309 0A000000 		.4byte	.LVL1-.Ltext0
 5318 030d 0100     		.2byte	0x1
 5319 030f 50       		.byte	0x50
 5320 0310 0A000000 		.4byte	.LVL1-.Ltext0
 5321 0314 0C000000 		.4byte	.LVL2-.Ltext0
 5322 0318 0400     		.2byte	0x4
 5323 031a F3       		.byte	0xf3
 5324 031b 01       		.uleb128 0x1
 5325 031c 50       		.byte	0x50
 5326 031d 9F       		.byte	0x9f
ARM GAS  /tmp/ccIxWip2.s 			page 137


 5327 031e 0C000000 		.4byte	.LVL2-.Ltext0
 5328 0322 18000000 		.4byte	.LVL3-.Ltext0
 5329 0326 0100     		.2byte	0x1
 5330 0328 50       		.byte	0x50
 5331 0329 18000000 		.4byte	.LVL3-.Ltext0
 5332 032d 1A000000 		.4byte	.LVL4-.Ltext0
 5333 0331 0400     		.2byte	0x4
 5334 0333 F3       		.byte	0xf3
 5335 0334 01       		.uleb128 0x1
 5336 0335 50       		.byte	0x50
 5337 0336 9F       		.byte	0x9f
 5338 0337 1A000000 		.4byte	.LVL4-.Ltext0
 5339 033b 26000000 		.4byte	.LVL5-.Ltext0
 5340 033f 0100     		.2byte	0x1
 5341 0341 50       		.byte	0x50
 5342 0342 26000000 		.4byte	.LVL5-.Ltext0
 5343 0346 28000000 		.4byte	.LVL6-.Ltext0
 5344 034a 0400     		.2byte	0x4
 5345 034c F3       		.byte	0xf3
 5346 034d 01       		.uleb128 0x1
 5347 034e 50       		.byte	0x50
 5348 034f 9F       		.byte	0x9f
 5349 0350 28000000 		.4byte	.LVL6-.Ltext0
 5350 0354 2C000000 		.4byte	.LVL7-.Ltext0
 5351 0358 0100     		.2byte	0x1
 5352 035a 50       		.byte	0x50
 5353 035b 2C000000 		.4byte	.LVL7-.Ltext0
 5354 035f 30000000 		.4byte	.LVL8-.Ltext0
 5355 0363 0400     		.2byte	0x4
 5356 0365 F3       		.byte	0xf3
 5357 0366 01       		.uleb128 0x1
 5358 0367 50       		.byte	0x50
 5359 0368 9F       		.byte	0x9f
 5360 0369 30000000 		.4byte	.LVL8-.Ltext0
 5361 036d 32000000 		.4byte	.LVL9-.Ltext0
 5362 0371 0100     		.2byte	0x1
 5363 0373 50       		.byte	0x50
 5364 0374 32000000 		.4byte	.LVL9-.Ltext0
 5365 0378 34000000 		.4byte	.LVL10-.Ltext0
 5366 037c 0400     		.2byte	0x4
 5367 037e F3       		.byte	0xf3
 5368 037f 01       		.uleb128 0x1
 5369 0380 50       		.byte	0x50
 5370 0381 9F       		.byte	0x9f
 5371 0382 34000000 		.4byte	.LVL10-.Ltext0
 5372 0386 36000000 		.4byte	.LVL11-.Ltext0
 5373 038a 0100     		.2byte	0x1
 5374 038c 50       		.byte	0x50
 5375 038d 36000000 		.4byte	.LVL11-.Ltext0
 5376 0391 38000000 		.4byte	.LFE64-.Ltext0
 5377 0395 0400     		.2byte	0x4
 5378 0397 F3       		.byte	0xf3
 5379 0398 01       		.uleb128 0x1
 5380 0399 50       		.byte	0x50
 5381 039a 9F       		.byte	0x9f
 5382 039b 00000000 		.4byte	0
 5383 039f 00000000 		.4byte	0
ARM GAS  /tmp/ccIxWip2.s 			page 138


 5384              	.LLST1:
 5385 03a3 26000000 		.4byte	.LVL5-.Ltext0
 5386 03a7 28000000 		.4byte	.LVL6-.Ltext0
 5387 03ab 0100     		.2byte	0x1
 5388 03ad 50       		.byte	0x50
 5389 03ae 00000000 		.4byte	0
 5390 03b2 00000000 		.4byte	0
 5391              		.section	.debug_aranges,"",%progbits
 5392 0000 1C000000 		.4byte	0x1c
 5393 0004 0200     		.2byte	0x2
 5394 0006 00000000 		.4byte	.Ldebug_info0
 5395 000a 04       		.byte	0x4
 5396 000b 00       		.byte	0
 5397 000c 0000     		.2byte	0
 5398 000e 0000     		.2byte	0
 5399 0010 00000000 		.4byte	.Ltext0
 5400 0014 18050000 		.4byte	.Letext0-.Ltext0
 5401 0018 00000000 		.4byte	0
 5402 001c 00000000 		.4byte	0
 5403              		.section	.debug_ranges,"",%progbits
 5404              	.Ldebug_ranges0:
 5405 0000 D0020000 		.4byte	.LBB31-.Ltext0
 5406 0004 DC020000 		.4byte	.LBE31-.Ltext0
 5407 0008 26030000 		.4byte	.LBB35-.Ltext0
 5408 000c CC030000 		.4byte	.LBE35-.Ltext0
 5409 0010 00000000 		.4byte	0
 5410 0014 00000000 		.4byte	0
 5411              		.section	.debug_line,"",%progbits
 5412              	.Ldebug_line0:
 5413 0000 8C030000 		.section	.debug_str,"MS",%progbits,1
 5413      02005D02 
 5413      00000201 
 5413      FB0E0D00 
 5413      01010101 
 5414              	.LASF215:
 5415 0000 64726976 		.ascii	"drivers/MPU6050.c\000"
 5415      6572732F 
 5415      4D505536 
 5415      3035302E 
 5415      6300
 5416              	.LASF17:
 5417 0012 73697A65 		.ascii	"sizetype\000"
 5417      74797065 
 5417      00
 5418              	.LASF43:
 5419 001b 5F5F7661 		.ascii	"__value\000"
 5419      6C756500 
 5420              	.LASF200:
 5421 0023 646D705F 		.ascii	"dmp_set_accel_bias\000"
 5421      7365745F 
 5421      61636365 
 5421      6C5F6269 
 5421      617300
 5422              	.LASF194:
 5423 0036 4932435F 		.ascii	"I2C_ByteRead\000"
 5423      42797465 
 5423      52656164 
ARM GAS  /tmp/ccIxWip2.s 			page 139


 5423      00
 5424              	.LASF111:
 5425 0043 5F5F7366 		.ascii	"__sf\000"
 5425      00
 5426              	.LASF185:
 5427 0048 736F7572 		.ascii	"source\000"
 5427      636500
 5428              	.LASF78:
 5429 004f 5F726561 		.ascii	"_read\000"
 5429      6400
 5430              	.LASF198:
 5431 0055 646D705F 		.ascii	"dmp_set_gyro_bias\000"
 5431      7365745F 
 5431      6779726F 
 5431      5F626961 
 5431      7300
 5432              	.LASF184:
 5433 0067 4D505536 		.ascii	"MPU6050_SetClockSource\000"
 5433      3035305F 
 5433      53657443 
 5433      6C6F636B 
 5433      536F7572 
 5434              	.LASF79:
 5435 007e 5F777269 		.ascii	"_write\000"
 5435      746500
 5436              	.LASF15:
 5437 0085 696E7433 		.ascii	"int32_t\000"
 5437      325F7400 
 5438              	.LASF123:
 5439 008d 5F617363 		.ascii	"_asctime_buf\000"
 5439      74696D65 
 5439      5F627566 
 5439      00
 5440              	.LASF105:
 5441 009a 5F637674 		.ascii	"_cvtlen\000"
 5441      6C656E00 
 5442              	.LASF142:
 5443 00a2 5F756E75 		.ascii	"_unused\000"
 5443      73656400 
 5444              	.LASF52:
 5445 00aa 5F5F746D 		.ascii	"__tm\000"
 5445      00
 5446              	.LASF138:
 5447 00af 5F776373 		.ascii	"_wcsrtombs_state\000"
 5447      72746F6D 
 5447      62735F73 
 5447      74617465 
 5447      00
 5448              	.LASF83:
 5449 00c0 5F6E6275 		.ascii	"_nbuf\000"
 5449      6600
 5450              	.LASF53:
 5451 00c6 5F5F746D 		.ascii	"__tm_sec\000"
 5451      5F736563 
 5451      00
 5452              	.LASF131:
 5453 00cf 5F6C3634 		.ascii	"_l64a_buf\000"
ARM GAS  /tmp/ccIxWip2.s 			page 140


 5453      615F6275 
 5453      6600
 5454              	.LASF20:
 5455 00d9 56544F52 		.ascii	"VTOR\000"
 5455      00
 5456              	.LASF87:
 5457 00de 5F6C6F63 		.ascii	"_lock\000"
 5457      6B00
 5458              	.LASF221:
 5459 00e4 70757473 		.ascii	"puts\000"
 5459      00
 5460              	.LASF216:
 5461 00e9 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/stm32-quadrocopter\000"
 5461      652F656E 
 5461      62696E2F 
 5461      446F6375 
 5461      6D656E74 
 5462              	.LASF119:
 5463 011b 5F6D756C 		.ascii	"_mult\000"
 5463      7400
 5464              	.LASF40:
 5465 0121 5F5F7763 		.ascii	"__wch\000"
 5465      6800
 5466              	.LASF6:
 5467 0127 5F5F7569 		.ascii	"__uint8_t\000"
 5467      6E74385F 
 5467      7400
 5468              	.LASF75:
 5469 0131 5F66696C 		.ascii	"_file\000"
 5469      6500
 5470              	.LASF187:
 5471 0137 72657375 		.ascii	"result\000"
 5471      6C7400
 5472              	.LASF62:
 5473 013e 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5473      65786974 
 5473      5F617267 
 5473      7300
 5474              	.LASF153:
 5475 014c 5F737973 		.ascii	"_sys_nerr\000"
 5475      5F6E6572 
 5475      7200
 5476              	.LASF21:
 5477 0156 41495243 		.ascii	"AIRCR\000"
 5477      5200
 5478              	.LASF158:
 5479 015c 477A5F6F 		.ascii	"Gz_offset\000"
 5479      66667365 
 5479      7400
 5480              	.LASF210:
 5481 0166 646D705F 		.ascii	"dmp_set_fifo_rate\000"
 5481      7365745F 
 5481      6669666F 
 5481      5F726174 
 5481      6500
 5482              	.LASF134:
 5483 0178 5F6D6272 		.ascii	"_mbrlen_state\000"
ARM GAS  /tmp/ccIxWip2.s 			page 141


 5483      6C656E5F 
 5483      73746174 
 5483      6500
 5484              	.LASF8:
 5485 0186 6C6F6E67 		.ascii	"long int\000"
 5485      20696E74 
 5485      00
 5486              	.LASF143:
 5487 018f 5F696D70 		.ascii	"_impure_ptr\000"
 5487      7572655F 
 5487      70747200 
 5488              	.LASF102:
 5489 019b 5F726573 		.ascii	"_result_k\000"
 5489      756C745F 
 5489      6B00
 5490              	.LASF72:
 5491 01a5 5F73697A 		.ascii	"_size\000"
 5491      6500
 5492              	.LASF18:
 5493 01ab 43505549 		.ascii	"CPUID\000"
 5493      4400
 5494              	.LASF124:
 5495 01b1 5F6C6F63 		.ascii	"_localtime_buf\000"
 5495      616C7469 
 5495      6D655F62 
 5495      756600
 5496              	.LASF5:
 5497 01c0 73686F72 		.ascii	"short unsigned int\000"
 5497      7420756E 
 5497      7369676E 
 5497      65642069 
 5497      6E7400
 5498              	.LASF57:
 5499 01d3 5F5F746D 		.ascii	"__tm_mon\000"
 5499      5F6D6F6E 
 5499      00
 5500              	.LASF193:
 5501 01dc 5F5F4E4F 		.ascii	"__NOP\000"
 5501      5000
 5502              	.LASF204:
 5503 01e2 6D70755F 		.ascii	"mpu_set_sensors\000"
 5503      7365745F 
 5503      73656E73 
 5503      6F727300 
 5504              	.LASF97:
 5505 01f2 5F637572 		.ascii	"_current_category\000"
 5505      72656E74 
 5505      5F636174 
 5505      65676F72 
 5505      7900
 5506              	.LASF19:
 5507 0204 49435352 		.ascii	"ICSR\000"
 5507      00
 5508              	.LASF121:
 5509 0209 5F756E75 		.ascii	"_unused_rand\000"
 5509      7365645F 
 5509      72616E64 
ARM GAS  /tmp/ccIxWip2.s 			page 142


 5509      00
 5510              	.LASF2:
 5511 0216 7369676E 		.ascii	"signed char\000"
 5511      65642063 
 5511      68617200 
 5512              	.LASF14:
 5513 0222 75696E74 		.ascii	"uint8_t\000"
 5513      385F7400 
 5514              	.LASF186:
 5515 022a 4D505536 		.ascii	"MPU6050_NewValues\000"
 5515      3035305F 
 5515      4E657756 
 5515      616C7565 
 5515      7300
 5516              	.LASF191:
 5517 023c 4E564943 		.ascii	"NVIC_SystemReset\000"
 5517      5F537973 
 5517      74656D52 
 5517      65736574 
 5517      00
 5518              	.LASF31:
 5519 024d 52455345 		.ascii	"RESERVED0\000"
 5519      52564544 
 5519      3000
 5520              	.LASF3:
 5521 0257 756E7369 		.ascii	"unsigned char\000"
 5521      676E6564 
 5521      20636861 
 5521      7200
 5522              	.LASF209:
 5523 0265 646D705F 		.ascii	"dmp_enable_feature\000"
 5523      656E6162 
 5523      6C655F66 
 5523      65617475 
 5523      726500
 5524              	.LASF170:
 5525 0278 52656164 		.ascii	"Read_DMP\000"
 5525      5F444D50 
 5525      00
 5526              	.LASF90:
 5527 0281 5F726565 		.ascii	"_reent\000"
 5527      6E7400
 5528              	.LASF144:
 5529 0288 5F676C6F 		.ascii	"_global_impure_ptr\000"
 5529      62616C5F 
 5529      696D7075 
 5529      72655F70 
 5529      747200
 5530              	.LASF218:
 5531 029b 72756E5F 		.ascii	"run_self_test\000"
 5531      73656C66 
 5531      5F746573 
 5531      7400
 5532              	.LASF112:
 5533 02a9 63686172 		.ascii	"char\000"
 5533      00
 5534              	.LASF69:
ARM GAS  /tmp/ccIxWip2.s 			page 143


 5535 02ae 5F666E73 		.ascii	"_fns\000"
 5535      00
 5536              	.LASF154:
 5537 02b3 6779726F 		.ascii	"gyro\000"
 5537      00
 5538              	.LASF33:
 5539 02b8 5343425F 		.ascii	"SCB_Type\000"
 5539      54797065 
 5539      00
 5540              	.LASF81:
 5541 02c1 5F636C6F 		.ascii	"_close\000"
 5541      736500
 5542              	.LASF214:
 5543 02c8 474E5520 		.ascii	"GNU C89 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -mfl"
 5543      43383920 
 5543      362E312E 
 5543      31203230 
 5543      31363035 
 5544 02fb 6F61742D 		.ascii	"oat-abi=soft -g -O1 -std=gnu90 -fno-common -fno-mat"
 5544      6162693D 
 5544      736F6674 
 5544      202D6720 
 5544      2D4F3120 
 5545 032e 682D6572 		.ascii	"h-errno\000"
 5545      726E6F00 
 5546              	.LASF25:
 5547 0336 44465352 		.ascii	"DFSR\000"
 5547      00
 5548              	.LASF211:
 5549 033b 6D70755F 		.ascii	"mpu_set_dmp_state\000"
 5549      7365745F 
 5549      646D705F 
 5549      73746174 
 5549      6500
 5550              	.LASF168:
 5551 034d 6D6F7265 		.ascii	"more\000"
 5551      00
 5552              	.LASF192:
 5553 0352 5F5F4453 		.ascii	"__DSB\000"
 5553      4200
 5554              	.LASF92:
 5555 0358 5F737464 		.ascii	"_stdin\000"
 5555      696E00
 5556              	.LASF213:
 5557 035f 4932435F 		.ascii	"I2C_BitsWrite\000"
 5557      42697473 
 5557      57726974 
 5557      6500
 5558              	.LASF24:
 5559 036d 48465352 		.ascii	"HFSR\000"
 5559      00
 5560              	.LASF207:
 5561 0372 646D705F 		.ascii	"dmp_load_motion_driver_firmware\000"
 5561      6C6F6164 
 5561      5F6D6F74 
 5561      696F6E5F 
 5561      64726976 
ARM GAS  /tmp/ccIxWip2.s 			page 144


 5562              	.LASF22:
 5563 0392 53484353 		.ascii	"SHCSR\000"
 5563      5200
 5564              	.LASF167:
 5565 0398 73656E73 		.ascii	"sensor_timestamp\000"
 5565      6F725F74 
 5565      696D6573 
 5565      74616D70 
 5565      00
 5566              	.LASF178:
 5567 03a9 4D505536 		.ascii	"MPU6050_TestConnection\000"
 5567      3035305F 
 5567      54657374 
 5567      436F6E6E 
 5567      65637469 
 5568              	.LASF163:
 5569 03c0 62756666 		.ascii	"buffer\000"
 5569      657200
 5570              	.LASF77:
 5571 03c7 5F636F6F 		.ascii	"_cookie\000"
 5571      6B696500 
 5572              	.LASF50:
 5573 03cf 5F776473 		.ascii	"_wds\000"
 5573      00
 5574              	.LASF109:
 5575 03d4 5F736967 		.ascii	"_sig_func\000"
 5575      5F66756E 
 5575      6300
 5576              	.LASF85:
 5577 03de 5F6F6666 		.ascii	"_offset\000"
 5577      73657400 
 5578              	.LASF208:
 5579 03e6 646D705F 		.ascii	"dmp_set_orientation\000"
 5579      7365745F 
 5579      6F726965 
 5579      6E746174 
 5579      696F6E00 
 5580              	.LASF106:
 5581 03fa 5F637674 		.ascii	"_cvtbuf\000"
 5581      62756600 
 5582              	.LASF176:
 5583 0402 656E6162 		.ascii	"enabled\000"
 5583      6C656400 
 5584              	.LASF151:
 5585 040a 5F5F6664 		.ascii	"__fdlib_version\000"
 5585      6C69625F 
 5585      76657273 
 5585      696F6E00 
 5586              	.LASF103:
 5587 041a 5F703573 		.ascii	"_p5s\000"
 5587      00
 5588              	.LASF10:
 5589 041f 6C6F6E67 		.ascii	"long unsigned int\000"
 5589      20756E73 
 5589      69676E65 
 5589      6420696E 
 5589      7400
ARM GAS  /tmp/ccIxWip2.s 			page 145


 5590              	.LASF73:
 5591 0431 5F5F7346 		.ascii	"__sFILE\000"
 5591      494C4500 
 5592              	.LASF99:
 5593 0439 5F5F7364 		.ascii	"__sdidinit\000"
 5593      6964696E 
 5593      697400
 5594              	.LASF89:
 5595 0444 5F666C61 		.ascii	"_flags2\000"
 5595      67733200 
 5596              	.LASF35:
 5597 044c 53797374 		.ascii	"SystemCoreClock\000"
 5597      656D436F 
 5597      7265436C 
 5597      6F636B00 
 5598              	.LASF36:
 5599 045c 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5599      4B5F5245 
 5599      43555253 
 5599      4956455F 
 5599      5400
 5600              	.LASF91:
 5601 046e 5F657272 		.ascii	"_errno\000"
 5601      6E6F00
 5602              	.LASF159:
 5603 0475 41636331 		.ascii	"Acc1G_Values\000"
 5603      475F5661 
 5603      6C756573 
 5603      00
 5604              	.LASF161:
 5605 0482 526F6C6C 		.ascii	"Roll\000"
 5605      00
 5606              	.LASF132:
 5607 0487 5F736967 		.ascii	"_signal_buf\000"
 5607      6E616C5F 
 5607      62756600 
 5608              	.LASF183:
 5609 0493 4D505536 		.ascii	"MPU6050_SetFullScaleGyroRange\000"
 5609      3035305F 
 5609      53657446 
 5609      756C6C53 
 5609      63616C65 
 5610              	.LASF51:
 5611 04b1 5F426967 		.ascii	"_Bigint\000"
 5611      696E7400 
 5612              	.LASF48:
 5613 04b9 5F6D6178 		.ascii	"_maxwds\000"
 5613      77647300 
 5614              	.LASF174:
 5615 04c1 4D505536 		.ascii	"MPU6050_SetI2CBypassEnabled\000"
 5615      3035305F 
 5615      53657449 
 5615      32434279 
 5615      70617373 
 5616              	.LASF100:
 5617 04dd 5F5F636C 		.ascii	"__cleanup\000"
 5617      65616E75 
ARM GAS  /tmp/ccIxWip2.s 			page 146


 5617      7000
 5618              	.LASF108:
 5619 04e7 5F617465 		.ascii	"_atexit0\000"
 5619      78697430 
 5619      00
 5620              	.LASF166:
 5621 04f0 54656D70 		.ascii	"Temp\000"
 5621      00
 5622              	.LASF148:
 5623 04f5 5F5F6664 		.ascii	"__fdlibm_svid\000"
 5623      6C69626D 
 5623      5F737669 
 5623      6400
 5624              	.LASF9:
 5625 0503 5F5F7569 		.ascii	"__uint32_t\000"
 5625      6E743332 
 5625      5F7400
 5626              	.LASF96:
 5627 050e 5F656D65 		.ascii	"_emergency\000"
 5627      7267656E 
 5627      637900
 5628              	.LASF188:
 5629 0519 73656E73 		.ascii	"sens\000"
 5629      00
 5630              	.LASF11:
 5631 051e 6C6F6E67 		.ascii	"long long int\000"
 5631      206C6F6E 
 5631      6720696E 
 5631      7400
 5632              	.LASF202:
 5633 052c 4932435F 		.ascii	"I2C_Read\000"
 5633      52656164 
 5633      00
 5634              	.LASF115:
 5635 0535 5F6E696F 		.ascii	"_niobs\000"
 5635      627300
 5636              	.LASF157:
 5637 053c 47795F6F 		.ascii	"Gy_offset\000"
 5637      66667365 
 5637      7400
 5638              	.LASF110:
 5639 0546 5F5F7367 		.ascii	"__sglue\000"
 5639      6C756500 
 5640              	.LASF141:
 5641 054e 5F6E6D61 		.ascii	"_nmalloc\000"
 5641      6C6C6F63 
 5641      00
 5642              	.LASF175:
 5643 0557 4D505536 		.ascii	"MPU6050_SetI2CMasterModeEnabled\000"
 5643      3035305F 
 5643      53657449 
 5643      32434D61 
 5643      73746572 
 5644              	.LASF0:
 5645 0577 646F7562 		.ascii	"double\000"
 5645      6C6500
 5646              	.LASF125:
ARM GAS  /tmp/ccIxWip2.s 			page 147


 5647 057e 5F67616D 		.ascii	"_gamma_signgam\000"
 5647      6D615F73 
 5647      69676E67 
 5647      616D00
 5648              	.LASF162:
 5649 058d 73656E73 		.ascii	"sensors\000"
 5649      6F727300 
 5650              	.LASF98:
 5651 0595 5F637572 		.ascii	"_current_locale\000"
 5651      72656E74 
 5651      5F6C6F63 
 5651      616C6500 
 5652              	.LASF104:
 5653 05a5 5F667265 		.ascii	"_freelist\000"
 5653      656C6973 
 5653      7400
 5654              	.LASF116:
 5655 05af 5F696F62 		.ascii	"_iobs\000"
 5655      7300
 5656              	.LASF114:
 5657 05b5 5F676C75 		.ascii	"_glue\000"
 5657      6500
 5658              	.LASF34:
 5659 05bb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5659      52784275 
 5659      66666572 
 5659      00
 5660              	.LASF49:
 5661 05c8 5F736967 		.ascii	"_sign\000"
 5661      6E00
 5662              	.LASF13:
 5663 05ce 756E7369 		.ascii	"unsigned int\000"
 5663      676E6564 
 5663      20696E74 
 5663      00
 5664              	.LASF139:
 5665 05db 5F685F65 		.ascii	"_h_errno\000"
 5665      72726E6F 
 5665      00
 5666              	.LASF169:
 5667 05e4 71756174 		.ascii	"quat\000"
 5667      00
 5668              	.LASF179:
 5669 05e9 4D505536 		.ascii	"MPU6050_GetDeviceID\000"
 5669      3035305F 
 5669      47657444 
 5669      65766963 
 5669      65494400 
 5670              	.LASF137:
 5671 05fd 5F776372 		.ascii	"_wcrtomb_state\000"
 5671      746F6D62 
 5671      5F737461 
 5671      746500
 5672              	.LASF56:
 5673 060c 5F5F746D 		.ascii	"__tm_mday\000"
 5673      5F6D6461 
 5673      7900
ARM GAS  /tmp/ccIxWip2.s 			page 148


 5674              	.LASF107:
 5675 0616 5F6E6577 		.ascii	"_new\000"
 5675      00
 5676              	.LASF82:
 5677 061b 5F756275 		.ascii	"_ubuf\000"
 5677      6600
 5678              	.LASF94:
 5679 0621 5F737464 		.ascii	"_stderr\000"
 5679      65727200 
 5680              	.LASF130:
 5681 0629 5F776374 		.ascii	"_wctomb_state\000"
 5681      6F6D625F 
 5681      73746174 
 5681      6500
 5682              	.LASF88:
 5683 0637 5F6D6273 		.ascii	"_mbstate\000"
 5683      74617465 
 5683      00
 5684              	.LASF126:
 5685 0640 5F72616E 		.ascii	"_rand_next\000"
 5685      645F6E65 
 5685      787400
 5686              	.LASF74:
 5687 064b 5F666C61 		.ascii	"_flags\000"
 5687      677300
 5688              	.LASF67:
 5689 0652 5F617465 		.ascii	"_atexit\000"
 5689      78697400 
 5690              	.LASF42:
 5691 065a 5F5F636F 		.ascii	"__count\000"
 5691      756E7400 
 5692              	.LASF59:
 5693 0662 5F5F746D 		.ascii	"__tm_wday\000"
 5693      5F776461 
 5693      7900
 5694              	.LASF164:
 5695 066c 4D505536 		.ascii	"MPU6050_FIFO\000"
 5695      3035305F 
 5695      4649464F 
 5695      00
 5696              	.LASF189:
 5697 0679 61636365 		.ascii	"accel_sens\000"
 5697      6C5F7365 
 5697      6E7300
 5698              	.LASF146:
 5699 0684 6C6F6E67 		.ascii	"long double\000"
 5699      20646F75 
 5699      626C6500 
 5700              	.LASF60:
 5701 0690 5F5F746D 		.ascii	"__tm_yday\000"
 5701      5F796461 
 5701      7900
 5702              	.LASF118:
 5703 069a 5F736565 		.ascii	"_seed\000"
 5703      6400
 5704              	.LASF212:
 5705 06a0 4932435F 		.ascii	"I2C_BitWrite\000"
ARM GAS  /tmp/ccIxWip2.s 			page 149


 5705      42697457 
 5705      72697465 
 5705      00
 5706              	.LASF80:
 5707 06ad 5F736565 		.ascii	"_seek\000"
 5707      6B00
 5708              	.LASF222:
 5709 06b3 5F5F6275 		.ascii	"__builtin_puts\000"
 5709      696C7469 
 5709      6E5F7075 
 5709      747300
 5710              	.LASF38:
 5711 06c2 5F66706F 		.ascii	"_fpos_t\000"
 5711      735F7400 
 5712              	.LASF41:
 5713 06ca 5F5F7763 		.ascii	"__wchb\000"
 5713      686200
 5714              	.LASF27:
 5715 06d1 42464152 		.ascii	"BFAR\000"
 5715      00
 5716              	.LASF129:
 5717 06d6 5F6D6274 		.ascii	"_mbtowc_state\000"
 5717      6F77635F 
 5717      73746174 
 5717      6500
 5718              	.LASF12:
 5719 06e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 5719      206C6F6E 
 5719      6720756E 
 5719      7369676E 
 5719      65642069 
 5720              	.LASF197:
 5721 06fb 6D70755F 		.ascii	"mpu_get_gyro_sens\000"
 5721      6765745F 
 5721      6779726F 
 5721      5F73656E 
 5721      7300
 5722              	.LASF64:
 5723 070d 5F64736F 		.ascii	"_dso_handle\000"
 5723      5F68616E 
 5723      646C6500 
 5724              	.LASF117:
 5725 0719 5F72616E 		.ascii	"_rand48\000"
 5725      64343800 
 5726              	.LASF93:
 5727 0721 5F737464 		.ascii	"_stdout\000"
 5727      6F757400 
 5728              	.LASF217:
 5729 0729 5F5F6664 		.ascii	"__fdlibm_version\000"
 5729      6C69626D 
 5729      5F766572 
 5729      73696F6E 
 5729      00
 5730              	.LASF84:
 5731 073a 5F626C6B 		.ascii	"_blksize\000"
 5731      73697A65 
 5731      00
ARM GAS  /tmp/ccIxWip2.s 			page 150


 5732              	.LASF71:
 5733 0743 5F626173 		.ascii	"_base\000"
 5733      6500
 5734              	.LASF122:
 5735 0749 5F737472 		.ascii	"_strtok_last\000"
 5735      746F6B5F 
 5735      6C617374 
 5735      00
 5736              	.LASF196:
 5737 0756 6173696E 		.ascii	"asin\000"
 5737      00
 5738              	.LASF135:
 5739 075b 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5739      746F7763 
 5739      5F737461 
 5739      746500
 5740              	.LASF45:
 5741 076a 5F666C6F 		.ascii	"_flock_t\000"
 5741      636B5F74 
 5741      00
 5742              	.LASF113:
 5743 0773 5F5F4649 		.ascii	"__FILE\000"
 5743      4C4500
 5744              	.LASF44:
 5745 077a 5F6D6273 		.ascii	"_mbstate_t\000"
 5745      74617465 
 5745      5F7400
 5746              	.LASF203:
 5747 0785 6D70755F 		.ascii	"mpu_init\000"
 5747      696E6974 
 5747      00
 5748              	.LASF127:
 5749 078e 5F723438 		.ascii	"_r48\000"
 5749      00
 5750              	.LASF39:
 5751 0793 77696E74 		.ascii	"wint_t\000"
 5751      5F7400
 5752              	.LASF177:
 5753 079a 52656164 		.ascii	"Read_Temperature\000"
 5753      5F54656D 
 5753      70657261 
 5753      74757265 
 5753      00
 5754              	.LASF28:
 5755 07ab 41465352 		.ascii	"AFSR\000"
 5755      00
 5756              	.LASF47:
 5757 07b0 5F6E6578 		.ascii	"_next\000"
 5757      7400
 5758              	.LASF86:
 5759 07b6 5F646174 		.ascii	"_data\000"
 5759      6100
 5760              	.LASF23:
 5761 07bc 43465352 		.ascii	"CFSR\000"
 5761      00
 5762              	.LASF173:
 5763 07c1 4D505536 		.ascii	"MPU6050_Init\000"
ARM GAS  /tmp/ccIxWip2.s 			page 151


 5763      3035305F 
 5763      496E6974 
 5763      00
 5764              	.LASF220:
 5765 07ce 696E765F 		.ascii	"inv_row_2_scale\000"
 5765      726F775F 
 5765      325F7363 
 5765      616C6500 
 5766              	.LASF190:
 5767 07de 7363616C 		.ascii	"scalar\000"
 5767      617200
 5768              	.LASF219:
 5769 07e5 696E765F 		.ascii	"inv_orientation_matrix_to_scalar\000"
 5769      6F726965 
 5769      6E746174 
 5769      696F6E5F 
 5769      6D617472 
 5770              	.LASF150:
 5771 0806 5F5F6664 		.ascii	"__fdlibm_posix\000"
 5771      6C69626D 
 5771      5F706F73 
 5771      697800
 5772              	.LASF29:
 5773 0815 4D4D4652 		.ascii	"MMFR\000"
 5773      00
 5774              	.LASF26:
 5775 081a 4D4D4641 		.ascii	"MMFAR\000"
 5775      5200
 5776              	.LASF128:
 5777 0820 5F6D626C 		.ascii	"_mblen_state\000"
 5777      656E5F73 
 5777      74617465 
 5777      00
 5778              	.LASF4:
 5779 082d 73686F72 		.ascii	"short int\000"
 5779      7420696E 
 5779      7400
 5780              	.LASF201:
 5781 0837 6D70755F 		.ascii	"mpu_run_self_test\000"
 5781      72756E5F 
 5781      73656C66 
 5781      5F746573 
 5781      7400
 5782              	.LASF149:
 5783 0849 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 5783      6C69626D 
 5783      5F786F70 
 5783      656E00
 5784              	.LASF171:
 5785 0858 444D505F 		.ascii	"DMP_Init\000"
 5785      496E6974 
 5785      00
 5786              	.LASF182:
 5787 0861 72616E67 		.ascii	"range\000"
 5787      6500
 5788              	.LASF30:
 5789 0867 49534152 		.ascii	"ISAR\000"
ARM GAS  /tmp/ccIxWip2.s 			page 152


 5789      00
 5790              	.LASF199:
 5791 086c 6D70755F 		.ascii	"mpu_get_accel_sens\000"
 5791      6765745F 
 5791      61636365 
 5791      6C5F7365 
 5791      6E7300
 5792              	.LASF145:
 5793 087f 7375626F 		.ascii	"suboptarg\000"
 5793      70746172 
 5793      6700
 5794              	.LASF65:
 5795 0889 5F666E74 		.ascii	"_fntypes\000"
 5795      79706573 
 5795      00
 5796              	.LASF152:
 5797 0892 5F737973 		.ascii	"_sys_errlist\000"
 5797      5F657272 
 5797      6C697374 
 5797      00
 5798              	.LASF181:
 5799 089f 4D505536 		.ascii	"MPU6050_SetFullScaleAccelRange\000"
 5799      3035305F 
 5799      53657446 
 5799      756C6C53 
 5799      63616C65 
 5800              	.LASF58:
 5801 08be 5F5F746D 		.ascii	"__tm_year\000"
 5801      5F796561 
 5801      7200
 5802              	.LASF76:
 5803 08c8 5F6C6266 		.ascii	"_lbfsize\000"
 5803      73697A65 
 5803      00
 5804              	.LASF155:
 5805 08d1 61636365 		.ascii	"accel\000"
 5805      6C00
 5806              	.LASF95:
 5807 08d7 5F696E63 		.ascii	"_inc\000"
 5807      00
 5808              	.LASF68:
 5809 08dc 5F696E64 		.ascii	"_ind\000"
 5809      00
 5810              	.LASF156:
 5811 08e1 47785F6F 		.ascii	"Gx_offset\000"
 5811      66667365 
 5811      7400
 5812              	.LASF147:
 5813 08eb 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 5813      6C69626D 
 5813      5F696565 
 5813      6500
 5814              	.LASF70:
 5815 08f9 5F5F7362 		.ascii	"__sbuf\000"
 5815      756600
 5816              	.LASF66:
 5817 0900 5F69735F 		.ascii	"_is_cxa\000"
ARM GAS  /tmp/ccIxWip2.s 			page 153


 5817      63786100 
 5818              	.LASF140:
 5819 0908 5F6E6578 		.ascii	"_nextf\000"
 5819      746600
 5820              	.LASF160:
 5821 090f 50697463 		.ascii	"Pitch\000"
 5821      6800
 5822              	.LASF46:
 5823 0915 5F5F554C 		.ascii	"__ULong\000"
 5823      6F6E6700 
 5824              	.LASF16:
 5825 091d 75696E74 		.ascii	"uint32_t\000"
 5825      33325F74 
 5825      00
 5826              	.LASF101:
 5827 0926 5F726573 		.ascii	"_result\000"
 5827      756C7400 
 5828              	.LASF195:
 5829 092e 646D705F 		.ascii	"dmp_read_fifo\000"
 5829      72656164 
 5829      5F666966 
 5829      6F00
 5830              	.LASF37:
 5831 093c 5F6F6666 		.ascii	"_off_t\000"
 5831      5F7400
 5832              	.LASF165:
 5833 0943 6779726F 		.ascii	"gyro_orientation\000"
 5833      5F6F7269 
 5833      656E7461 
 5833      74696F6E 
 5833      00
 5834              	.LASF120:
 5835 0954 5F616464 		.ascii	"_add\000"
 5835      00
 5836              	.LASF1:
 5837 0959 666C6F61 		.ascii	"float\000"
 5837      7400
 5838              	.LASF55:
 5839 095f 5F5F746D 		.ascii	"__tm_hour\000"
 5839      5F686F75 
 5839      7200
 5840              	.LASF32:
 5841 0969 43504143 		.ascii	"CPACR\000"
 5841      5200
 5842              	.LASF206:
 5843 096f 6D70755F 		.ascii	"mpu_set_sample_rate\000"
 5843      7365745F 
 5843      73616D70 
 5843      6C655F72 
 5843      61746500 
 5844              	.LASF180:
 5845 0983 4D505536 		.ascii	"MPU6050_SetSleepEnabled\000"
 5845      3035305F 
 5845      53657453 
 5845      6C656570 
 5845      456E6162 
 5846              	.LASF136:
ARM GAS  /tmp/ccIxWip2.s 			page 154


 5847 099b 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5847      72746F77 
 5847      63735F73 
 5847      74617465 
 5847      00
 5848              	.LASF7:
 5849 09ac 5F5F696E 		.ascii	"__int32_t\000"
 5849      7433325F 
 5849      7400
 5850              	.LASF172:
 5851 09b6 74656D70 		.ascii	"temp\000"
 5851      00
 5852              	.LASF63:
 5853 09bb 5F666E61 		.ascii	"_fnargs\000"
 5853      72677300 
 5854              	.LASF61:
 5855 09c3 5F5F746D 		.ascii	"__tm_isdst\000"
 5855      5F697364 
 5855      737400
 5856              	.LASF54:
 5857 09ce 5F5F746D 		.ascii	"__tm_min\000"
 5857      5F6D696E 
 5857      00
 5858              	.LASF133:
 5859 09d7 5F676574 		.ascii	"_getdate_err\000"
 5859      64617465 
 5859      5F657272 
 5859      00
 5860              	.LASF205:
 5861 09e4 6D70755F 		.ascii	"mpu_configure_fifo\000"
 5861      636F6E66 
 5861      69677572 
 5861      655F6669 
 5861      666F00
 5862              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/ccIxWip2.s 			page 155


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MPU6050.c
     /tmp/ccIxWip2.s:15     .text:0000000000000000 $t
     /tmp/ccIxWip2.s:21     .text:0000000000000000 inv_row_2_scale
     /tmp/ccIxWip2.s:93     .text:0000000000000038 MPU6050_NewValues
     /tmp/ccIxWip2.s:295    .text:0000000000000154 $d
     /tmp/ccIxWip2.s:300    .text:000000000000015c $t
     /tmp/ccIxWip2.s:307    .text:000000000000015c MPU6050_SetClockSource
     /tmp/ccIxWip2.s:343    .text:0000000000000174 MPU6050_SetFullScaleGyroRange
     /tmp/ccIxWip2.s:379    .text:000000000000018c MPU6050_SetFullScaleAccelRange
     /tmp/ccIxWip2.s:415    .text:00000000000001a4 MPU6050_SetSleepEnabled
     /tmp/ccIxWip2.s:445    .text:00000000000001b4 MPU6050_GetDeviceID
     /tmp/ccIxWip2.s:469    .text:00000000000001cc $d
     /tmp/ccIxWip2.s:473    .text:00000000000001d0 $t
     /tmp/ccIxWip2.s:480    .text:00000000000001d0 MPU6050_TestConnection
     /tmp/ccIxWip2.s:509    .text:00000000000001e0 MPU6050_SetI2CMasterModeEnabled
     /tmp/ccIxWip2.s:539    .text:00000000000001f0 MPU6050_SetI2CBypassEnabled
     /tmp/ccIxWip2.s:569    .text:0000000000000200 MPU6050_Init
     /tmp/ccIxWip2.s:617    .text:0000000000000228 DMP_Init
     /tmp/ccIxWip2.s:925    .text:000000000000039c $d
     /tmp/ccIxWip2.s:947    .text:00000000000003cc $t
     /tmp/ccIxWip2.s:954    .text:00000000000003cc Read_DMP
     /tmp/ccIxWip2.s:1063   .text:0000000000000498 $d
     /tmp/ccIxWip2.s:1074   .text:00000000000004a8 $t
     /tmp/ccIxWip2.s:1081   .text:00000000000004a8 Read_Temperature
     /tmp/ccIxWip2.s:1144   .text:0000000000000508 $d
     /tmp/ccIxWip2.s:1227   .bss:0000000000000138 Gz_offset
     /tmp/ccIxWip2.s:1231   .bss:000000000000013c Gy_offset
     /tmp/ccIxWip2.s:1235   .bss:0000000000000140 Gx_offset
     /tmp/ccIxWip2.s:1189   .bss:0000000000000000 MPU6050_FIFO
     /tmp/ccIxWip2.s:1193   .bss:0000000000000108 buffer
     /tmp/ccIxWip2.s:1219   .bss:0000000000000130 q3
     /tmp/ccIxWip2.s:1215   .bss:000000000000012c q2
     /tmp/ccIxWip2.s:1211   .bss:0000000000000128 q1
     /tmp/ccIxWip2.s:1182   .data:000000000000000c q0
     /tmp/ccIxWip2.s:1223   .bss:0000000000000134 Pitch
     /tmp/ccIxWip2.s:1207   .bss:0000000000000126 sensors
     /tmp/ccIxWip2.s:1198   .bss:0000000000000118 accel
     /tmp/ccIxWip2.s:1203   .bss:0000000000000120 gyro
     /tmp/ccIxWip2.s:1165   .data:0000000000000000 $d
     /tmp/ccIxWip2.s:1169   .data:0000000000000000 gyro_orientation
     /tmp/ccIxWip2.s:1185   .bss:0000000000000000 $d
     /tmp/ccIxWip2.s:1238   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
I2C_BitsWrite
I2C_BitWrite
I2C_Read
__aeabi_i2f
__aeabi_fmul
__aeabi_f2iz
puts
mpu_init
mpu_set_sensors
mpu_configure_fifo
mpu_set_sample_rate
ARM GAS  /tmp/ccIxWip2.s 			page 156


dmp_load_motion_driver_firmware
dmp_set_orientation
dmp_enable_feature
dmp_set_fifo_rate
mpu_run_self_test
mpu_set_dmp_state
mpu_get_gyro_sens
dmp_set_gyro_bias
mpu_get_accel_sens
dmp_set_accel_bias
__aeabi_fadd
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
dmp_read_fifo
asin
__aeabi_fcmpgt
__aeabi_fsub
__aeabi_fdiv
__aeabi_dadd
I2C_ByteRead
