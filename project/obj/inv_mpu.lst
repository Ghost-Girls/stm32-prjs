ARM GAS  /tmp/cci8Vpl3.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"inv_mpu.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.syntax unified
  17              		.thumb
  18              		.thumb_func
  19              		.fpu softvfp
  20              		.type	set_int_enable, %function
  21              	set_int_enable:
  22              	.LFB64:
  23              		.file 1 "drivers/inv_mpu.c"
   1:drivers/inv_mpu.c **** 
   2:drivers/inv_mpu.c **** /**
   3:drivers/inv_mpu.c ****  *  @addtogroup  DRIVERS Sensor Driver Layer
   4:drivers/inv_mpu.c ****  *  @brief       Hardware drivers to communicate with sensors via I2C.
   5:drivers/inv_mpu.c ****  *
   6:drivers/inv_mpu.c ****  *  @{
   7:drivers/inv_mpu.c ****  *      @file       inv_mpu.c
   8:drivers/inv_mpu.c ****  *      @brief      An I2C-based driver for Invensense gyroscopes.
   9:drivers/inv_mpu.c ****  *      @details    This driver currently works for the following devices:
  10:drivers/inv_mpu.c ****  *                  MPU6050
  11:drivers/inv_mpu.c ****  *                  MPU6500
  12:drivers/inv_mpu.c ****  *                  MPU9150 (or MPU6050 w/ AK8975 on the auxiliary bus)
  13:drivers/inv_mpu.c ****  *                  MPU9250 (or MPU6500 w/ AK8963 on the auxiliary bus)
  14:drivers/inv_mpu.c ****  */
  15:drivers/inv_mpu.c **** #include "IOI2C.h"
  16:drivers/inv_mpu.c **** #include "conf.h"
  17:drivers/inv_mpu.c **** #include "tools.h"
  18:drivers/inv_mpu.c **** 
  19:drivers/inv_mpu.c **** /* The following functions must be defined for this platform:
  20:drivers/inv_mpu.c ****  * i2c_write(unsigned char slave_addr, unsigned char reg_addr,
  21:drivers/inv_mpu.c ****  *      unsigned char length, unsigned char const *data)
  22:drivers/inv_mpu.c ****  * i2c_read(unsigned char slave_addr, unsigned char reg_addr,
  23:drivers/inv_mpu.c ****  *      unsigned char length, unsigned char *data)
  24:drivers/inv_mpu.c ****  * delay_ms(unsigned long num_ms)
  25:drivers/inv_mpu.c ****  * get_ms(unsigned long *count)
  26:drivers/inv_mpu.c ****  * reg_int_cb(void (*cb)(void), unsigned char port, unsigned char pin)
  27:drivers/inv_mpu.c ****  * labs(long x)
  28:drivers/inv_mpu.c ****  * fabsf(float x)
  29:drivers/inv_mpu.c ****  * min(int a, int b)
  30:drivers/inv_mpu.c ****  */
  31:drivers/inv_mpu.c **** #define MPU6050
  32:drivers/inv_mpu.c **** #define MOTION_DRIVER_TARGET_MSP430
  33:drivers/inv_mpu.c **** 
  34:drivers/inv_mpu.c **** #if defined MOTION_DRIVER_TARGET_MSP430
ARM GAS  /tmp/cci8Vpl3.s 			page 2


  35:drivers/inv_mpu.c **** /*#include "msp430.h"
  36:drivers/inv_mpu.c **** #include "msp430_i2c.h"
  37:drivers/inv_mpu.c **** #include "msp430_clock.h"
  38:drivers/inv_mpu.c **** #include "msp430_interrupt.h" */
  39:drivers/inv_mpu.c **** 
  40:drivers/inv_mpu.c **** #define i2c_write   i2cWrite
  41:drivers/inv_mpu.c **** #define i2c_read    i2cRead
  42:drivers/inv_mpu.c **** #define delay_ms    DelayMs
  43:drivers/inv_mpu.c **** #define get_ms      myget_ms
  44:drivers/inv_mpu.c **** 
  45:drivers/inv_mpu.c **** //static int reg_int_cb(struct int_param_s *int_param)
  46:drivers/inv_mpu.c **** //{
  47:drivers/inv_mpu.c **** //    /*return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
  48:drivers/inv_mpu.c **** //        int_param->active_low);*/
  49:drivers/inv_mpu.c **** //		return 0;
  50:drivers/inv_mpu.c **** //}	  
  51:drivers/inv_mpu.c **** //#define log_i(...)     do {} while (0)
  52:drivers/inv_mpu.c **** //#define log_e(...)     do {} while (0)
  53:drivers/inv_mpu.c **** #define log_e    printf
  54:drivers/inv_mpu.c **** #define log_i    printf
  55:drivers/inv_mpu.c **** /* labs is already defined by TI's toolchain. */
  56:drivers/inv_mpu.c **** /* fabs is for doubles. fabsf is for floats. */
  57:drivers/inv_mpu.c **** #define fabs        fabsf
  58:drivers/inv_mpu.c **** #define min(a,b) ((a<b)?a:b)
  59:drivers/inv_mpu.c **** 
  60:drivers/inv_mpu.c **** #elif defined EMPL_TARGET_MSP430
  61:drivers/inv_mpu.c **** #include "msp430.h"
  62:drivers/inv_mpu.c **** #include "msp430_i2c.h"
  63:drivers/inv_mpu.c **** #include "msp430_clock.h"
  64:drivers/inv_mpu.c **** #include "msp430_interrupt.h"
  65:drivers/inv_mpu.c **** #include "log.h"
  66:drivers/inv_mpu.c **** 
  67:drivers/inv_mpu.c **** static inline int reg_int_cb(struct int_param_s *int_param)
  68:drivers/inv_mpu.c **** {
  69:drivers/inv_mpu.c ****     return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
  70:drivers/inv_mpu.c ****         int_param->active_low);
  71:drivers/inv_mpu.c **** }
  72:drivers/inv_mpu.c **** #define log_i       MPL_LOGI
  73:drivers/inv_mpu.c **** #define log_e       MPL_LOGE
  74:drivers/inv_mpu.c **** /* labs is already defined by TI's toolchain. */
  75:drivers/inv_mpu.c **** /* fabs is for doubles. fabsf is for floats. */
  76:drivers/inv_mpu.c **** #define fabs        fabsf
  77:drivers/inv_mpu.c **** #define min(a,b) ((a<b)?a:b)
  78:drivers/inv_mpu.c **** #elif defined EMPL_TARGET_UC3L0
  79:drivers/inv_mpu.c **** /* Instead of using the standard TWI driver from the ASF library, we're using
  80:drivers/inv_mpu.c ****  * a TWI driver that follows the slave address + register address convention.
  81:drivers/inv_mpu.c ****  */
  82:drivers/inv_mpu.c **** #include "twi.h"
  83:drivers/inv_mpu.c **** #include "delay.h"
  84:drivers/inv_mpu.c **** #include "sysclk.h"
  85:drivers/inv_mpu.c **** #include "log.h"
  86:drivers/inv_mpu.c **** #include "sensors_xplained.h"
  87:drivers/inv_mpu.c **** #include "uc3l0_clock.h"
  88:drivers/inv_mpu.c **** #define i2c_write(a, b, c, d)   twi_write(a, b, d, c)
  89:drivers/inv_mpu.c **** #define i2c_read(a, b, c, d)    twi_read(a, b, d, c)
  90:drivers/inv_mpu.c **** /* delay_ms is a function already defined in ASF. */
  91:drivers/inv_mpu.c **** #define get_ms  uc3l0_get_clock_ms
ARM GAS  /tmp/cci8Vpl3.s 			page 3


  92:drivers/inv_mpu.c **** static inline int reg_int_cb(struct int_param_s *int_param)
  93:drivers/inv_mpu.c **** {
  94:drivers/inv_mpu.c ****     sensor_board_irq_connect(int_param->pin, int_param->cb, int_param->arg);
  95:drivers/inv_mpu.c ****     return 0;
  96:drivers/inv_mpu.c **** }
  97:drivers/inv_mpu.c **** #define log_i       MPL_LOGI
  98:drivers/inv_mpu.c **** #define log_e       MPL_LOGE
  99:drivers/inv_mpu.c **** /* UC3 is a 32-bit processor, so abs and labs are equivalent. */
 100:drivers/inv_mpu.c **** #define labs        abs
 101:drivers/inv_mpu.c **** #define fabs(x)     (((x)>0)?(x):-(x))
 102:drivers/inv_mpu.c **** #else
 103:drivers/inv_mpu.c **** //#error  Gyro driver is missing the system layer implementations.
 104:drivers/inv_mpu.c **** #endif
 105:drivers/inv_mpu.c **** 
 106:drivers/inv_mpu.c **** #if !defined MPU6050 && !defined MPU9150 && !defined MPU6500 && !defined MPU9250
 107:drivers/inv_mpu.c **** //#error  Which gyro are you using? Define MPUxxxx in your compiler options.
 108:drivers/inv_mpu.c **** #endif
 109:drivers/inv_mpu.c **** 
 110:drivers/inv_mpu.c **** /* Time for some messy macro work. =]
 111:drivers/inv_mpu.c ****  * #define MPU9150
 112:drivers/inv_mpu.c ****  * is equivalent to..
 113:drivers/inv_mpu.c ****  * #define MPU6050
 114:drivers/inv_mpu.c ****  * #define AK8975_SECONDARY
 115:drivers/inv_mpu.c ****  *
 116:drivers/inv_mpu.c ****  * #define MPU9250
 117:drivers/inv_mpu.c ****  * is equivalent to..
 118:drivers/inv_mpu.c ****  * #define MPU6500
 119:drivers/inv_mpu.c ****  * #define AK8963_SECONDARY
 120:drivers/inv_mpu.c ****  */
 121:drivers/inv_mpu.c **** #if defined MPU9150
 122:drivers/inv_mpu.c **** #ifndef MPU6050
 123:drivers/inv_mpu.c **** #define MPU6050
 124:drivers/inv_mpu.c **** #endif                          /* #ifndef MPU6050 */
 125:drivers/inv_mpu.c **** #if defined AK8963_SECONDARY
 126:drivers/inv_mpu.c **** #error "MPU9150 and AK8963_SECONDARY cannot both be defined."
 127:drivers/inv_mpu.c **** #elif !defined AK8975_SECONDARY /* #if defined AK8963_SECONDARY */
 128:drivers/inv_mpu.c **** #define AK8975_SECONDARY
 129:drivers/inv_mpu.c **** #endif                          /* #if defined AK8963_SECONDARY */
 130:drivers/inv_mpu.c **** #elif defined MPU9250           /* #if defined MPU9150 */
 131:drivers/inv_mpu.c **** #ifndef MPU6500
 132:drivers/inv_mpu.c **** #define MPU6500
 133:drivers/inv_mpu.c **** #endif                          /* #ifndef MPU6500 */
 134:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY
 135:drivers/inv_mpu.c **** #error "MPU9250 and AK8975_SECONDARY cannot both be defined."
 136:drivers/inv_mpu.c **** #elif !defined AK8963_SECONDARY /* #if defined AK8975_SECONDARY */
 137:drivers/inv_mpu.c **** #define AK8963_SECONDARY
 138:drivers/inv_mpu.c **** #endif                          /* #if defined AK8975_SECONDARY */
 139:drivers/inv_mpu.c **** #endif                          /* #if defined MPU9150 */
 140:drivers/inv_mpu.c **** 
 141:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY || defined AK8963_SECONDARY
 142:drivers/inv_mpu.c **** #define AK89xx_SECONDARY
 143:drivers/inv_mpu.c **** #else
 144:drivers/inv_mpu.c **** /* #warning "No compass = less profit for Invensense. Lame." */
 145:drivers/inv_mpu.c **** #endif
 146:drivers/inv_mpu.c **** 
 147:drivers/inv_mpu.c **** static int set_int_enable(unsigned char enable);
 148:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cci8Vpl3.s 			page 4


 149:drivers/inv_mpu.c **** /* Hardware registers needed by driver. */
 150:drivers/inv_mpu.c **** struct gyro_reg_s {
 151:drivers/inv_mpu.c ****     unsigned char who_am_i;
 152:drivers/inv_mpu.c ****     unsigned char rate_div;
 153:drivers/inv_mpu.c ****     unsigned char lpf;
 154:drivers/inv_mpu.c ****     unsigned char prod_id;
 155:drivers/inv_mpu.c ****     unsigned char user_ctrl;
 156:drivers/inv_mpu.c ****     unsigned char fifo_en;
 157:drivers/inv_mpu.c ****     unsigned char gyro_cfg;
 158:drivers/inv_mpu.c ****     unsigned char accel_cfg;
 159:drivers/inv_mpu.c **** 
 160:drivers/inv_mpu.c ****     //unsigned char accel_cfg2;
 161:drivers/inv_mpu.c **** 
 162:drivers/inv_mpu.c ****     //unsigned char lp_accel_odr;
 163:drivers/inv_mpu.c **** 
 164:drivers/inv_mpu.c ****     unsigned char motion_thr;
 165:drivers/inv_mpu.c ****     unsigned char motion_dur;
 166:drivers/inv_mpu.c ****     unsigned char fifo_count_h;
 167:drivers/inv_mpu.c ****     unsigned char fifo_r_w;
 168:drivers/inv_mpu.c ****     unsigned char raw_gyro;
 169:drivers/inv_mpu.c ****     unsigned char raw_accel;
 170:drivers/inv_mpu.c ****     unsigned char temp;
 171:drivers/inv_mpu.c ****     unsigned char int_enable;
 172:drivers/inv_mpu.c ****     unsigned char dmp_int_status;
 173:drivers/inv_mpu.c ****     unsigned char int_status;
 174:drivers/inv_mpu.c **** 
 175:drivers/inv_mpu.c ****     //unsigned char accel_intel;
 176:drivers/inv_mpu.c **** 
 177:drivers/inv_mpu.c ****     unsigned char pwr_mgmt_1;
 178:drivers/inv_mpu.c ****     unsigned char pwr_mgmt_2;
 179:drivers/inv_mpu.c ****     unsigned char int_pin_cfg;
 180:drivers/inv_mpu.c ****     unsigned char mem_r_w;
 181:drivers/inv_mpu.c ****     unsigned char accel_offs;
 182:drivers/inv_mpu.c ****     unsigned char i2c_mst;
 183:drivers/inv_mpu.c ****     unsigned char bank_sel;
 184:drivers/inv_mpu.c ****     unsigned char mem_start_addr;
 185:drivers/inv_mpu.c ****     unsigned char prgm_start_h;
 186:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 187:drivers/inv_mpu.c ****     unsigned char s0_addr;
 188:drivers/inv_mpu.c ****     unsigned char s0_reg;
 189:drivers/inv_mpu.c ****     unsigned char s0_ctrl;
 190:drivers/inv_mpu.c ****     unsigned char s1_addr;
 191:drivers/inv_mpu.c ****     unsigned char s1_reg;
 192:drivers/inv_mpu.c ****     unsigned char s1_ctrl;
 193:drivers/inv_mpu.c ****     unsigned char s4_ctrl;
 194:drivers/inv_mpu.c ****     unsigned char s0_do;
 195:drivers/inv_mpu.c ****     unsigned char s1_do;
 196:drivers/inv_mpu.c ****     unsigned char i2c_delay_ctrl;
 197:drivers/inv_mpu.c ****     unsigned char raw_compass;
 198:drivers/inv_mpu.c ****     /* The I2C_MST_VDDIO bit is in this register. */
 199:drivers/inv_mpu.c ****     unsigned char yg_offs_tc;
 200:drivers/inv_mpu.c **** #endif
 201:drivers/inv_mpu.c **** };
 202:drivers/inv_mpu.c **** 
 203:drivers/inv_mpu.c **** /* Information specific to a particular device. */
 204:drivers/inv_mpu.c **** struct hw_s {
 205:drivers/inv_mpu.c ****     unsigned char addr;
ARM GAS  /tmp/cci8Vpl3.s 			page 5


 206:drivers/inv_mpu.c ****     unsigned short max_fifo;
 207:drivers/inv_mpu.c ****     unsigned char num_reg;
 208:drivers/inv_mpu.c ****     unsigned short temp_sens;
 209:drivers/inv_mpu.c ****     short temp_offset;
 210:drivers/inv_mpu.c ****     unsigned short bank_size;
 211:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 212:drivers/inv_mpu.c ****     unsigned short compass_fsr;
 213:drivers/inv_mpu.c **** #endif
 214:drivers/inv_mpu.c **** };
 215:drivers/inv_mpu.c **** 
 216:drivers/inv_mpu.c **** /* When entering motion interrupt mode, the driver keeps track of the
 217:drivers/inv_mpu.c ****  * previous state so that it can be restored at a later time.
 218:drivers/inv_mpu.c ****  * TODO: This is tacky. Fix it.
 219:drivers/inv_mpu.c ****  */
 220:drivers/inv_mpu.c **** struct motion_int_cache_s {
 221:drivers/inv_mpu.c ****     unsigned short gyro_fsr;
 222:drivers/inv_mpu.c ****     unsigned char accel_fsr;
 223:drivers/inv_mpu.c ****     unsigned short lpf;
 224:drivers/inv_mpu.c ****     unsigned short sample_rate;
 225:drivers/inv_mpu.c ****     unsigned char sensors_on;
 226:drivers/inv_mpu.c ****     unsigned char fifo_sensors;
 227:drivers/inv_mpu.c ****     unsigned char dmp_on;
 228:drivers/inv_mpu.c **** };
 229:drivers/inv_mpu.c **** 
 230:drivers/inv_mpu.c **** /* Cached chip configuration data.
 231:drivers/inv_mpu.c ****  * TODO: A lot of these can be handled with a bitmask.
 232:drivers/inv_mpu.c ****  */
 233:drivers/inv_mpu.c **** struct chip_cfg_s {
 234:drivers/inv_mpu.c ****     /* Matches gyro_cfg >> 3 & 0x03 */
 235:drivers/inv_mpu.c ****     unsigned char gyro_fsr;
 236:drivers/inv_mpu.c ****     /* Matches accel_cfg >> 3 & 0x03 */
 237:drivers/inv_mpu.c ****     unsigned char accel_fsr;
 238:drivers/inv_mpu.c ****     /* Enabled sensors. Uses same masks as fifo_en, NOT pwr_mgmt_2. */
 239:drivers/inv_mpu.c ****     unsigned char sensors;
 240:drivers/inv_mpu.c ****     /* Matches config register. */
 241:drivers/inv_mpu.c ****     unsigned char lpf;
 242:drivers/inv_mpu.c ****     unsigned char clk_src;
 243:drivers/inv_mpu.c ****     /* Sample rate, NOT rate divider. */
 244:drivers/inv_mpu.c ****     unsigned short sample_rate;
 245:drivers/inv_mpu.c ****     /* Matches fifo_en register. */
 246:drivers/inv_mpu.c ****     unsigned char fifo_enable;
 247:drivers/inv_mpu.c ****     /* Matches int enable register. */
 248:drivers/inv_mpu.c ****     unsigned char int_enable;
 249:drivers/inv_mpu.c ****     /* 1 if devices on auxiliary I2C bus appear on the primary. */
 250:drivers/inv_mpu.c ****     unsigned char bypass_mode;
 251:drivers/inv_mpu.c ****     /* 1 if half-sensitivity.
 252:drivers/inv_mpu.c ****      * NOTE: This doesn't belong here, but everything else in hw_s is const,
 253:drivers/inv_mpu.c ****      * and this allows us to save some precious RAM.
 254:drivers/inv_mpu.c ****      */
 255:drivers/inv_mpu.c ****     unsigned char accel_half;
 256:drivers/inv_mpu.c ****     /* 1 if device in low-power accel-only mode. */
 257:drivers/inv_mpu.c ****     unsigned char lp_accel_mode;
 258:drivers/inv_mpu.c ****     /* 1 if interrupts are only triggered on motion events. */
 259:drivers/inv_mpu.c ****     unsigned char int_motion_only;
 260:drivers/inv_mpu.c ****     struct motion_int_cache_s cache;
 261:drivers/inv_mpu.c ****     /* 1 for active low interrupts. */
 262:drivers/inv_mpu.c ****     unsigned char active_low_int;
ARM GAS  /tmp/cci8Vpl3.s 			page 6


 263:drivers/inv_mpu.c ****     /* 1 for latched interrupts. */
 264:drivers/inv_mpu.c ****     unsigned char latched_int;
 265:drivers/inv_mpu.c ****     /* 1 if DMP is enabled. */
 266:drivers/inv_mpu.c ****     unsigned char dmp_on;
 267:drivers/inv_mpu.c ****     /* Ensures that DMP will only be loaded once. */
 268:drivers/inv_mpu.c ****     unsigned char dmp_loaded;
 269:drivers/inv_mpu.c ****     /* Sampling rate used when DMP is enabled. */
 270:drivers/inv_mpu.c ****     unsigned short dmp_sample_rate;
 271:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 272:drivers/inv_mpu.c ****     /* Compass sample rate. */
 273:drivers/inv_mpu.c ****     unsigned short compass_sample_rate;
 274:drivers/inv_mpu.c ****     unsigned char compass_addr;
 275:drivers/inv_mpu.c ****     short mag_sens_adj[3];
 276:drivers/inv_mpu.c **** #endif
 277:drivers/inv_mpu.c **** };
 278:drivers/inv_mpu.c **** 
 279:drivers/inv_mpu.c **** /* Information for self-test. */
 280:drivers/inv_mpu.c **** struct test_s {
 281:drivers/inv_mpu.c ****     unsigned long gyro_sens;
 282:drivers/inv_mpu.c ****     unsigned long accel_sens;
 283:drivers/inv_mpu.c ****     unsigned char reg_rate_div;
 284:drivers/inv_mpu.c ****     unsigned char reg_lpf;
 285:drivers/inv_mpu.c ****     unsigned char reg_gyro_fsr;
 286:drivers/inv_mpu.c ****     unsigned char reg_accel_fsr;
 287:drivers/inv_mpu.c ****     unsigned short wait_ms;
 288:drivers/inv_mpu.c ****     unsigned char packet_thresh;
 289:drivers/inv_mpu.c ****     float min_dps;
 290:drivers/inv_mpu.c ****     float max_dps;
 291:drivers/inv_mpu.c ****     float max_gyro_var;
 292:drivers/inv_mpu.c ****     float min_g;
 293:drivers/inv_mpu.c ****     float max_g;
 294:drivers/inv_mpu.c ****     float max_accel_var;
 295:drivers/inv_mpu.c **** };
 296:drivers/inv_mpu.c **** 
 297:drivers/inv_mpu.c **** /* Gyro driver state variables. */
 298:drivers/inv_mpu.c **** struct gyro_state_s {
 299:drivers/inv_mpu.c ****     const struct gyro_reg_s *reg;
 300:drivers/inv_mpu.c ****     const struct hw_s *hw;
 301:drivers/inv_mpu.c ****     struct chip_cfg_s chip_cfg;
 302:drivers/inv_mpu.c ****     const struct test_s *test;
 303:drivers/inv_mpu.c **** };
 304:drivers/inv_mpu.c **** 
 305:drivers/inv_mpu.c **** /* Filter configurations. */
 306:drivers/inv_mpu.c **** enum lpf_e {
 307:drivers/inv_mpu.c ****     INV_FILTER_256HZ_NOLPF2 = 0,
 308:drivers/inv_mpu.c ****     INV_FILTER_188HZ,
 309:drivers/inv_mpu.c ****     INV_FILTER_98HZ,
 310:drivers/inv_mpu.c ****     INV_FILTER_42HZ,
 311:drivers/inv_mpu.c ****     INV_FILTER_20HZ,
 312:drivers/inv_mpu.c ****     INV_FILTER_10HZ,
 313:drivers/inv_mpu.c ****     INV_FILTER_5HZ,
 314:drivers/inv_mpu.c ****     INV_FILTER_2100HZ_NOLPF,
 315:drivers/inv_mpu.c ****     NUM_FILTER
 316:drivers/inv_mpu.c **** };
 317:drivers/inv_mpu.c **** 
 318:drivers/inv_mpu.c **** /* Full scale ranges. */
 319:drivers/inv_mpu.c **** enum gyro_fsr_e {
ARM GAS  /tmp/cci8Vpl3.s 			page 7


 320:drivers/inv_mpu.c ****     INV_FSR_250DPS = 0,
 321:drivers/inv_mpu.c ****     INV_FSR_500DPS,
 322:drivers/inv_mpu.c ****     INV_FSR_1000DPS,
 323:drivers/inv_mpu.c ****     INV_FSR_2000DPS,
 324:drivers/inv_mpu.c ****     NUM_GYRO_FSR
 325:drivers/inv_mpu.c **** };
 326:drivers/inv_mpu.c **** 
 327:drivers/inv_mpu.c **** /* Full scale ranges. */
 328:drivers/inv_mpu.c **** enum accel_fsr_e {
 329:drivers/inv_mpu.c ****     INV_FSR_2G = 0,
 330:drivers/inv_mpu.c ****     INV_FSR_4G,
 331:drivers/inv_mpu.c ****     INV_FSR_8G,
 332:drivers/inv_mpu.c ****     INV_FSR_16G,
 333:drivers/inv_mpu.c ****     NUM_ACCEL_FSR
 334:drivers/inv_mpu.c **** };
 335:drivers/inv_mpu.c **** 
 336:drivers/inv_mpu.c **** /* Clock sources. */
 337:drivers/inv_mpu.c **** enum clock_sel_e {
 338:drivers/inv_mpu.c ****     INV_CLK_INTERNAL = 0,
 339:drivers/inv_mpu.c ****     INV_CLK_PLL,
 340:drivers/inv_mpu.c ****     NUM_CLK
 341:drivers/inv_mpu.c **** };
 342:drivers/inv_mpu.c **** 
 343:drivers/inv_mpu.c **** /* Low-power accel wakeup rates. */
 344:drivers/inv_mpu.c **** enum lp_accel_rate_e {
 345:drivers/inv_mpu.c **** #if defined MPU6050
 346:drivers/inv_mpu.c ****     INV_LPA_1_25HZ,
 347:drivers/inv_mpu.c ****     INV_LPA_5HZ,
 348:drivers/inv_mpu.c ****     INV_LPA_20HZ,
 349:drivers/inv_mpu.c ****     INV_LPA_40HZ
 350:drivers/inv_mpu.c **** #elif defined MPU6500
 351:drivers/inv_mpu.c ****     INV_LPA_0_3125HZ,
 352:drivers/inv_mpu.c ****     INV_LPA_0_625HZ,
 353:drivers/inv_mpu.c ****     INV_LPA_1_25HZ,
 354:drivers/inv_mpu.c ****     INV_LPA_2_5HZ,
 355:drivers/inv_mpu.c ****     INV_LPA_5HZ,
 356:drivers/inv_mpu.c ****     INV_LPA_10HZ,
 357:drivers/inv_mpu.c ****     INV_LPA_20HZ,
 358:drivers/inv_mpu.c ****     INV_LPA_40HZ,
 359:drivers/inv_mpu.c ****     INV_LPA_80HZ,
 360:drivers/inv_mpu.c ****     INV_LPA_160HZ,
 361:drivers/inv_mpu.c ****     INV_LPA_320HZ,
 362:drivers/inv_mpu.c ****     INV_LPA_640HZ
 363:drivers/inv_mpu.c **** #endif
 364:drivers/inv_mpu.c **** };
 365:drivers/inv_mpu.c **** 
 366:drivers/inv_mpu.c **** #define BIT_I2C_MST_VDDIO   (0x80)
 367:drivers/inv_mpu.c **** #define BIT_FIFO_EN         (0x40)
 368:drivers/inv_mpu.c **** #define BIT_DMP_EN          (0x80)
 369:drivers/inv_mpu.c **** #define BIT_FIFO_RST        (0x04)
 370:drivers/inv_mpu.c **** #define BIT_DMP_RST         (0x08)
 371:drivers/inv_mpu.c **** #define BIT_FIFO_OVERFLOW   (0x10)
 372:drivers/inv_mpu.c **** #define BIT_DATA_RDY_EN     (0x01)
 373:drivers/inv_mpu.c **** #define BIT_DMP_INT_EN      (0x02)
 374:drivers/inv_mpu.c **** #define BIT_MOT_INT_EN      (0x40)
 375:drivers/inv_mpu.c **** #define BITS_FSR            (0x18)
 376:drivers/inv_mpu.c **** #define BITS_LPF            (0x07)
ARM GAS  /tmp/cci8Vpl3.s 			page 8


 377:drivers/inv_mpu.c **** #define BITS_HPF            (0x07)
 378:drivers/inv_mpu.c **** #define BITS_CLK            (0x07)
 379:drivers/inv_mpu.c **** #define BIT_FIFO_SIZE_1024  (0x40)
 380:drivers/inv_mpu.c **** #define BIT_FIFO_SIZE_2048  (0x80)
 381:drivers/inv_mpu.c **** #define BIT_FIFO_SIZE_4096  (0xC0)
 382:drivers/inv_mpu.c **** #define BIT_RESET           (0x80)
 383:drivers/inv_mpu.c **** #define BIT_SLEEP           (0x40)
 384:drivers/inv_mpu.c **** #define BIT_S0_DELAY_EN     (0x01)
 385:drivers/inv_mpu.c **** #define BIT_S2_DELAY_EN     (0x04)
 386:drivers/inv_mpu.c **** #define BITS_SLAVE_LENGTH   (0x0F)
 387:drivers/inv_mpu.c **** #define BIT_SLAVE_BYTE_SW   (0x40)
 388:drivers/inv_mpu.c **** #define BIT_SLAVE_GROUP     (0x10)
 389:drivers/inv_mpu.c **** #define BIT_SLAVE_EN        (0x80)
 390:drivers/inv_mpu.c **** #define BIT_I2C_READ        (0x80)
 391:drivers/inv_mpu.c **** #define BITS_I2C_MASTER_DLY (0x1F)
 392:drivers/inv_mpu.c **** #define BIT_AUX_IF_EN       (0x20)
 393:drivers/inv_mpu.c **** #define BIT_ACTL            (0x80)
 394:drivers/inv_mpu.c **** #define BIT_LATCH_EN        (0x20)
 395:drivers/inv_mpu.c **** #define BIT_ANY_RD_CLR      (0x10)
 396:drivers/inv_mpu.c **** #define BIT_BYPASS_EN       (0x02)
 397:drivers/inv_mpu.c **** #define BITS_WOM_EN         (0xC0)
 398:drivers/inv_mpu.c **** #define BIT_LPA_CYCLE       (0x20)
 399:drivers/inv_mpu.c **** #define BIT_STBY_XA         (0x20)
 400:drivers/inv_mpu.c **** #define BIT_STBY_YA         (0x10)
 401:drivers/inv_mpu.c **** #define BIT_STBY_ZA         (0x08)
 402:drivers/inv_mpu.c **** #define BIT_STBY_XG         (0x04)
 403:drivers/inv_mpu.c **** #define BIT_STBY_YG         (0x02)
 404:drivers/inv_mpu.c **** #define BIT_STBY_ZG         (0x01)
 405:drivers/inv_mpu.c **** #define BIT_STBY_XYZA       (BIT_STBY_XA | BIT_STBY_YA | BIT_STBY_ZA)
 406:drivers/inv_mpu.c **** #define BIT_STBY_XYZG       (BIT_STBY_XG | BIT_STBY_YG | BIT_STBY_ZG)
 407:drivers/inv_mpu.c **** 
 408:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY
 409:drivers/inv_mpu.c **** #define SUPPORTS_AK89xx_HIGH_SENS   (0x00)
 410:drivers/inv_mpu.c **** #define AK89xx_FSR                  (9830)
 411:drivers/inv_mpu.c **** #elif defined AK8963_SECONDARY
 412:drivers/inv_mpu.c **** #define SUPPORTS_AK89xx_HIGH_SENS   (0x10)
 413:drivers/inv_mpu.c **** #define AK89xx_FSR                  (4915)
 414:drivers/inv_mpu.c **** #endif
 415:drivers/inv_mpu.c **** 
 416:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 417:drivers/inv_mpu.c **** #define AKM_REG_WHOAMI      (0x00)
 418:drivers/inv_mpu.c **** 
 419:drivers/inv_mpu.c **** #define AKM_REG_ST1         (0x02)
 420:drivers/inv_mpu.c **** #define AKM_REG_HXL         (0x03)
 421:drivers/inv_mpu.c **** #define AKM_REG_ST2         (0x09)
 422:drivers/inv_mpu.c **** 
 423:drivers/inv_mpu.c **** #define AKM_REG_CNTL        (0x0A)
 424:drivers/inv_mpu.c **** #define AKM_REG_ASTC        (0x0C)
 425:drivers/inv_mpu.c **** #define AKM_REG_ASAX        (0x10)
 426:drivers/inv_mpu.c **** #define AKM_REG_ASAY        (0x11)
 427:drivers/inv_mpu.c **** #define AKM_REG_ASAZ        (0x12)
 428:drivers/inv_mpu.c **** 
 429:drivers/inv_mpu.c **** #define AKM_DATA_READY      (0x01)
 430:drivers/inv_mpu.c **** #define AKM_DATA_OVERRUN    (0x02)
 431:drivers/inv_mpu.c **** #define AKM_OVERFLOW        (0x80)
 432:drivers/inv_mpu.c **** #define AKM_DATA_ERROR      (0x40)
 433:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cci8Vpl3.s 			page 9


 434:drivers/inv_mpu.c **** #define AKM_BIT_SELF_TEST   (0x40)
 435:drivers/inv_mpu.c **** 
 436:drivers/inv_mpu.c **** #define AKM_POWER_DOWN          (0x00 | SUPPORTS_AK89xx_HIGH_SENS)
 437:drivers/inv_mpu.c **** #define AKM_SINGLE_MEASUREMENT  (0x01 | SUPPORTS_AK89xx_HIGH_SENS)
 438:drivers/inv_mpu.c **** #define AKM_FUSE_ROM_ACCESS     (0x0F | SUPPORTS_AK89xx_HIGH_SENS)
 439:drivers/inv_mpu.c **** #define AKM_MODE_SELF_TEST      (0x08 | SUPPORTS_AK89xx_HIGH_SENS)
 440:drivers/inv_mpu.c **** 
 441:drivers/inv_mpu.c **** #define AKM_WHOAMI      (0x48)
 442:drivers/inv_mpu.c **** #endif
 443:drivers/inv_mpu.c **** 
 444:drivers/inv_mpu.c **** #if defined MPU6050
 445:drivers/inv_mpu.c **** /*
 446:drivers/inv_mpu.c **** const struct gyro_reg_s reg = {
 447:drivers/inv_mpu.c ****    .who_am_i       = 0x75,
 448:drivers/inv_mpu.c ****     .rate_div       = 0x19,
 449:drivers/inv_mpu.c ****     .lpf            = 0x1A,
 450:drivers/inv_mpu.c ****     .prod_id        = 0x0C,
 451:drivers/inv_mpu.c ****     .user_ctrl      = 0x6A,
 452:drivers/inv_mpu.c ****     .fifo_en        = 0x23,
 453:drivers/inv_mpu.c ****     .gyro_cfg       = 0x1B,
 454:drivers/inv_mpu.c ****     .accel_cfg      = 0x1C,
 455:drivers/inv_mpu.c ****     .motion_thr     = 0x1F,
 456:drivers/inv_mpu.c ****     .motion_dur     = 0x20,
 457:drivers/inv_mpu.c ****     .fifo_count_h   = 0x72,
 458:drivers/inv_mpu.c ****     .fifo_r_w       = 0x74,
 459:drivers/inv_mpu.c ****     .raw_gyro       = 0x43,
 460:drivers/inv_mpu.c ****     .raw_accel      = 0x3B,
 461:drivers/inv_mpu.c ****     .temp           = 0x41,
 462:drivers/inv_mpu.c ****     .int_enable     = 0x38,
 463:drivers/inv_mpu.c ****     .dmp_int_status = 0x39,
 464:drivers/inv_mpu.c ****     .int_status     = 0x3A,
 465:drivers/inv_mpu.c ****     .pwr_mgmt_1     = 0x6B,
 466:drivers/inv_mpu.c ****     .pwr_mgmt_2     = 0x6C,
 467:drivers/inv_mpu.c ****     .int_pin_cfg    = 0x37,
 468:drivers/inv_mpu.c ****     .mem_r_w        = 0x6F,
 469:drivers/inv_mpu.c ****     .accel_offs     = 0x06,
 470:drivers/inv_mpu.c ****     .i2c_mst        = 0x24,
 471:drivers/inv_mpu.c ****     .bank_sel       = 0x6D,
 472:drivers/inv_mpu.c ****     .mem_start_addr = 0x6E,
 473:drivers/inv_mpu.c ****     .prgm_start_h   = 0x70
 474:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 475:drivers/inv_mpu.c ****     ,.raw_compass   = 0x49,
 476:drivers/inv_mpu.c ****     .yg_offs_tc     = 0x01,
 477:drivers/inv_mpu.c ****     .s0_addr        = 0x25,
 478:drivers/inv_mpu.c ****     .s0_reg         = 0x26,
 479:drivers/inv_mpu.c ****     .s0_ctrl        = 0x27,
 480:drivers/inv_mpu.c ****     .s1_addr        = 0x28,
 481:drivers/inv_mpu.c ****     .s1_reg         = 0x29,
 482:drivers/inv_mpu.c ****     .s1_ctrl        = 0x2A,
 483:drivers/inv_mpu.c ****     .s4_ctrl        = 0x34,
 484:drivers/inv_mpu.c ****     .s0_do          = 0x63,
 485:drivers/inv_mpu.c ****     .s1_do          = 0x64,
 486:drivers/inv_mpu.c ****     .i2c_delay_ctrl = 0x67
 487:drivers/inv_mpu.c **** #endif
 488:drivers/inv_mpu.c **** };
 489:drivers/inv_mpu.c **** const struct hw_s hw = {
 490:drivers/inv_mpu.c ****     .addr           = 0x68,
ARM GAS  /tmp/cci8Vpl3.s 			page 10


 491:drivers/inv_mpu.c ****     .max_fifo       = 1024,
 492:drivers/inv_mpu.c ****     .num_reg        = 118,
 493:drivers/inv_mpu.c ****     .temp_sens      = 340,
 494:drivers/inv_mpu.c ****     .temp_offset    = -521,
 495:drivers/inv_mpu.c ****     .bank_size      = 256
 496:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 497:drivers/inv_mpu.c ****     ,.compass_fsr    = AK89xx_FSR
 498:drivers/inv_mpu.c **** #endif
 499:drivers/inv_mpu.c **** };
 500:drivers/inv_mpu.c **** */
 501:drivers/inv_mpu.c **** const struct hw_s hw={
 502:drivers/inv_mpu.c ****   0x68,	 //addr
 503:drivers/inv_mpu.c ****   1024,	 //max_fifo
 504:drivers/inv_mpu.c ****   118,	 //num_reg
 505:drivers/inv_mpu.c ****   340,	 //temp_sens
 506:drivers/inv_mpu.c ****   -521,	 //temp_offset
 507:drivers/inv_mpu.c ****   256	 //bank_size
 508:drivers/inv_mpu.c **** };
 509:drivers/inv_mpu.c **** const struct gyro_reg_s reg = {
 510:drivers/inv_mpu.c **** 0x75,  //who_am_i
 511:drivers/inv_mpu.c **** 0x19,  //rate_div
 512:drivers/inv_mpu.c **** 0x1A,  //lpf
 513:drivers/inv_mpu.c **** 0x0C,  //prod_id
 514:drivers/inv_mpu.c **** 0x6A,  //user_ctrl
 515:drivers/inv_mpu.c **** 0x23,  //fifo_en
 516:drivers/inv_mpu.c **** 0x1B,  //gyro_cfg
 517:drivers/inv_mpu.c **** 0x1C,  //accel_cfg
 518:drivers/inv_mpu.c **** 0x1F,  // motion_thr
 519:drivers/inv_mpu.c **** 0x20,  // motion_dur
 520:drivers/inv_mpu.c **** 0x72,  // fifo_count_h
 521:drivers/inv_mpu.c **** 0x74,  // fifo_r_w
 522:drivers/inv_mpu.c **** 0x43,  // raw_gyro
 523:drivers/inv_mpu.c **** 0x3B,  // raw_accel
 524:drivers/inv_mpu.c **** 0x41,  // temp
 525:drivers/inv_mpu.c **** 0x38,  // int_enable
 526:drivers/inv_mpu.c **** 0x39,  //  dmp_int_status
 527:drivers/inv_mpu.c **** 0x3A,  //  int_status
 528:drivers/inv_mpu.c **** 0x6B,  // pwr_mgmt_1
 529:drivers/inv_mpu.c **** 0x6C,  // pwr_mgmt_2
 530:drivers/inv_mpu.c **** 0x37,  // int_pin_cfg
 531:drivers/inv_mpu.c **** 0x6F,  // mem_r_w
 532:drivers/inv_mpu.c **** 0x06,  // accel_offs
 533:drivers/inv_mpu.c **** 0x24,  // i2c_mst
 534:drivers/inv_mpu.c **** 0x6D,  // bank_sel
 535:drivers/inv_mpu.c **** 0x6E,  // mem_start_addr
 536:drivers/inv_mpu.c **** 0x70   // prgm_start_h
 537:drivers/inv_mpu.c **** };
 538:drivers/inv_mpu.c **** 
 539:drivers/inv_mpu.c **** //const struct test_s test = {
 540:drivers/inv_mpu.c **** //    .gyro_sens      = 32768/250,
 541:drivers/inv_mpu.c **** //    .accel_sens     = 32768/16,	  
 542:drivers/inv_mpu.c **** //    .reg_rate_div   = 0,    /* 1kHz. */
 543:drivers/inv_mpu.c **** //    .reg_lpf        = 1,    /* 188Hz. */
 544:drivers/inv_mpu.c **** //    .reg_gyro_fsr   = 0,    /* 250dps. */
 545:drivers/inv_mpu.c **** //    .reg_accel_fsr  = 0x18, /* 16g. */
 546:drivers/inv_mpu.c **** //    .wait_ms        = 50,
 547:drivers/inv_mpu.c **** //    .packet_thresh  = 5,    /* 5% */
ARM GAS  /tmp/cci8Vpl3.s 			page 11


 548:drivers/inv_mpu.c **** //    .min_dps        = 10.f,
 549:drivers/inv_mpu.c **** //    .max_dps        = 105.f,
 550:drivers/inv_mpu.c **** //    .max_gyro_var   = 0.14f,
 551:drivers/inv_mpu.c **** //    .min_g          = 0.3f,
 552:drivers/inv_mpu.c **** //    .max_g          = 0.95f,
 553:drivers/inv_mpu.c **** //    .max_accel_var  = 0.14f
 554:drivers/inv_mpu.c **** //};
 555:drivers/inv_mpu.c **** const struct test_s test={
 556:drivers/inv_mpu.c **** 32768/250,		 //gyro_sens
 557:drivers/inv_mpu.c **** 32768/16,		 //	accel_sens
 558:drivers/inv_mpu.c **** 0,				 //	reg_rate_div
 559:drivers/inv_mpu.c **** 1,				//	reg_lpf
 560:drivers/inv_mpu.c **** 0,				 //	reg_gyro_fsr
 561:drivers/inv_mpu.c **** 0x18,			//	reg_accel_fsr
 562:drivers/inv_mpu.c **** 50,				//	wait_ms
 563:drivers/inv_mpu.c **** 5,				//	packet_thresh
 564:drivers/inv_mpu.c **** 10.0f,			 //	min_dps
 565:drivers/inv_mpu.c **** 105.0f,			 //	max_dps
 566:drivers/inv_mpu.c **** 0.14f,			//	max_gyro_var
 567:drivers/inv_mpu.c **** 0.3f,		   //	min_g
 568:drivers/inv_mpu.c **** 0.95f,		   //	max_g
 569:drivers/inv_mpu.c **** 0.14f		   //	max_accel_var
 570:drivers/inv_mpu.c **** };
 571:drivers/inv_mpu.c **** /*
 572:drivers/inv_mpu.c **** static struct gyro_state_s st = {
 573:drivers/inv_mpu.c ****     .reg = &reg,
 574:drivers/inv_mpu.c ****     .hw = &hw,
 575:drivers/inv_mpu.c ****     .test = &test
 576:drivers/inv_mpu.c **** };	*/
 577:drivers/inv_mpu.c **** static struct gyro_state_s st={
 578:drivers/inv_mpu.c ****   &reg,
 579:drivers/inv_mpu.c ****   &hw,
 580:drivers/inv_mpu.c ****   {0},
 581:drivers/inv_mpu.c ****   &test
 582:drivers/inv_mpu.c **** };
 583:drivers/inv_mpu.c **** //st.chip_cfg.dmp_on = 1;
 584:drivers/inv_mpu.c **** //st.dhip_cfg.fifo_enabel = 1;
 585:drivers/inv_mpu.c **** /*
 586:drivers/inv_mpu.c **** #elif defined MPU6500
 587:drivers/inv_mpu.c **** const struct gyro_reg_s reg = {
 588:drivers/inv_mpu.c ****     .who_am_i       = 0x75,
 589:drivers/inv_mpu.c ****     .rate_div       = 0x19,
 590:drivers/inv_mpu.c ****     .lpf            = 0x1A,
 591:drivers/inv_mpu.c ****     .prod_id        = 0x0C,
 592:drivers/inv_mpu.c ****     .user_ctrl      = 0x6A,
 593:drivers/inv_mpu.c ****     .fifo_en        = 0x23,
 594:drivers/inv_mpu.c ****     .gyro_cfg       = 0x1B,
 595:drivers/inv_mpu.c ****     .accel_cfg      = 0x1C,
 596:drivers/inv_mpu.c ****     .accel_cfg2     = 0x1D,
 597:drivers/inv_mpu.c ****     .lp_accel_odr   = 0x1E,
 598:drivers/inv_mpu.c ****     .motion_thr     = 0x1F,
 599:drivers/inv_mpu.c ****     .motion_dur     = 0x20,
 600:drivers/inv_mpu.c ****     .fifo_count_h   = 0x72,
 601:drivers/inv_mpu.c ****     .fifo_r_w       = 0x74,
 602:drivers/inv_mpu.c ****     .raw_gyro       = 0x43,
 603:drivers/inv_mpu.c ****     .raw_accel      = 0x3B,
 604:drivers/inv_mpu.c ****     .temp           = 0x41,
ARM GAS  /tmp/cci8Vpl3.s 			page 12


 605:drivers/inv_mpu.c ****     .int_enable     = 0x38,
 606:drivers/inv_mpu.c ****     .dmp_int_status = 0x39,
 607:drivers/inv_mpu.c ****     .int_status     = 0x3A,
 608:drivers/inv_mpu.c ****     .accel_intel    = 0x69,
 609:drivers/inv_mpu.c ****     .pwr_mgmt_1     = 0x6B,
 610:drivers/inv_mpu.c ****     .pwr_mgmt_2     = 0x6C,
 611:drivers/inv_mpu.c ****     .int_pin_cfg    = 0x37,
 612:drivers/inv_mpu.c ****     .mem_r_w        = 0x6F,
 613:drivers/inv_mpu.c ****     .accel_offs     = 0x77,
 614:drivers/inv_mpu.c ****     .i2c_mst        = 0x24,
 615:drivers/inv_mpu.c ****     .bank_sel       = 0x6D,
 616:drivers/inv_mpu.c ****     .mem_start_addr = 0x6E,
 617:drivers/inv_mpu.c ****     .prgm_start_h   = 0x70
 618:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 619:drivers/inv_mpu.c ****     ,.raw_compass   = 0x49,
 620:drivers/inv_mpu.c ****     .s0_addr        = 0x25,
 621:drivers/inv_mpu.c ****     .s0_reg         = 0x26,
 622:drivers/inv_mpu.c ****     .s0_ctrl        = 0x27,
 623:drivers/inv_mpu.c ****     .s1_addr        = 0x28,
 624:drivers/inv_mpu.c ****     .s1_reg         = 0x29,
 625:drivers/inv_mpu.c ****     .s1_ctrl        = 0x2A,
 626:drivers/inv_mpu.c ****     .s4_ctrl        = 0x34,
 627:drivers/inv_mpu.c ****     .s0_do          = 0x63,
 628:drivers/inv_mpu.c ****     .s1_do          = 0x64,
 629:drivers/inv_mpu.c ****     .i2c_delay_ctrl = 0x67
 630:drivers/inv_mpu.c **** #endif
 631:drivers/inv_mpu.c **** };
 632:drivers/inv_mpu.c **** const struct hw_s hw = {
 633:drivers/inv_mpu.c ****     .addr           = 0x68,
 634:drivers/inv_mpu.c ****     .max_fifo       = 1024,
 635:drivers/inv_mpu.c ****     .num_reg        = 128,
 636:drivers/inv_mpu.c ****     .temp_sens      = 321,
 637:drivers/inv_mpu.c ****     .temp_offset    = 0,
 638:drivers/inv_mpu.c ****     .bank_size      = 256
 639:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 640:drivers/inv_mpu.c ****     ,.compass_fsr    = AK89xx_FSR
 641:drivers/inv_mpu.c **** #endif
 642:drivers/inv_mpu.c **** };
 643:drivers/inv_mpu.c **** */
 644:drivers/inv_mpu.c **** //const struct test_s test = {
 645:drivers/inv_mpu.c **** //    .gyro_sens      = 32768/250,
 646:drivers/inv_mpu.c **** //    .accel_sens     = 32768/16,
 647:drivers/inv_mpu.c **** //    .reg_rate_div   = 0,    /* 1kHz. */
 648:drivers/inv_mpu.c **** //    .reg_lpf        = 1,    /* 188Hz. */
 649:drivers/inv_mpu.c **** //    .reg_gyro_fsr   = 0,    /* 250dps. */
 650:drivers/inv_mpu.c **** //    .reg_accel_fsr  = 0x18, /* 16g. */
 651:drivers/inv_mpu.c **** //    .wait_ms        = 50,
 652:drivers/inv_mpu.c **** //    .packet_thresh  = 5,    /* 5% */
 653:drivers/inv_mpu.c **** //    .min_dps        = 10.f,
 654:drivers/inv_mpu.c **** //    .max_dps        = 105.f,
 655:drivers/inv_mpu.c **** //    .max_gyro_var   = 0.14f,
 656:drivers/inv_mpu.c **** //    .min_g          = 0.3f,
 657:drivers/inv_mpu.c **** //    .max_g          = 0.95f,
 658:drivers/inv_mpu.c **** //    .max_accel_var  = 0.14f
 659:drivers/inv_mpu.c **** //};
 660:drivers/inv_mpu.c **** //
 661:drivers/inv_mpu.c **** //static struct gyro_state_s st = {
ARM GAS  /tmp/cci8Vpl3.s 			page 13


 662:drivers/inv_mpu.c **** //    .reg = &reg,
 663:drivers/inv_mpu.c **** //    .hw = &hw,
 664:drivers/inv_mpu.c **** //    .test = &test
 665:drivers/inv_mpu.c **** //};
 666:drivers/inv_mpu.c **** #endif
 667:drivers/inv_mpu.c **** 
 668:drivers/inv_mpu.c **** #define MAX_PACKET_LENGTH (12)
 669:drivers/inv_mpu.c **** 
 670:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 671:drivers/inv_mpu.c **** static int setup_compass(void);
 672:drivers/inv_mpu.c **** #define MAX_COMPASS_SAMPLE_RATE (100)
 673:drivers/inv_mpu.c **** #endif
 674:drivers/inv_mpu.c **** 
 675:drivers/inv_mpu.c **** /**
 676:drivers/inv_mpu.c ****  *  @brief      Enable/disable data ready interrupt.
 677:drivers/inv_mpu.c ****  *  If the DMP is on, the DMP interrupt is enabled. Otherwise, the data ready
 678:drivers/inv_mpu.c ****  *  interrupt is used.
 679:drivers/inv_mpu.c ****  *  @param[in]  enable      1 to enable interrupt.
 680:drivers/inv_mpu.c ****  *  @return     0 if successful.
 681:drivers/inv_mpu.c ****  */
 682:drivers/inv_mpu.c **** static int set_int_enable(unsigned char enable)
 683:drivers/inv_mpu.c **** {
  24              		.loc 1 683 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 8
  27              		@ frame_needed = 0, uses_anonymous_args = 0
  28              	.LVL0:
  29 0000 00B5     		push	{lr}
  30              		.cfi_def_cfa_offset 4
  31              		.cfi_offset 14, -4
  32 0002 83B0     		sub	sp, sp, #12
  33              		.cfi_def_cfa_offset 16
 684:drivers/inv_mpu.c ****     unsigned char tmp;
 685:drivers/inv_mpu.c **** 
 686:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on) {
  34              		.loc 1 686 0
  35 0004 244B     		ldr	r3, .L13
  36 0006 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
  37 000a DBB1     		cbz	r3, .L2
 687:drivers/inv_mpu.c ****         if (enable)
  38              		.loc 1 687 0
  39 000c B0B1     		cbz	r0, .L3
 688:drivers/inv_mpu.c ****             tmp = BIT_DMP_INT_EN;
  40              		.loc 1 688 0
  41 000e 0223     		movs	r3, #2
  42 0010 8DF80730 		strb	r3, [sp, #7]
  43              	.L4:
 689:drivers/inv_mpu.c ****         else
 690:drivers/inv_mpu.c ****             tmp = 0x00;
 691:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
  44              		.loc 1 691 0
  45 0014 204B     		ldr	r3, .L13
  46 0016 1968     		ldr	r1, [r3]
  47 0018 5868     		ldr	r0, [r3, #4]
  48              	.LVL1:
  49 001a 0DF10703 		add	r3, sp, #7
  50 001e 0122     		movs	r2, #1
ARM GAS  /tmp/cci8Vpl3.s 			page 14


  51 0020 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
  52 0022 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  53 0024 FFF7FEFF 		bl	i2cWrite
  54              	.LVL2:
  55 0028 0346     		mov	r3, r0
  56 002a 50BB     		cbnz	r0, .L8
 692:drivers/inv_mpu.c ****             return -1;
 693:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
  57              		.loc 1 693 0
  58 002c 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
  59 0030 194A     		ldr	r2, .L13
  60 0032 5174     		strb	r1, [r2, #17]
  61              	.L1:
 694:drivers/inv_mpu.c ****     } else {
 695:drivers/inv_mpu.c ****         if (!st.chip_cfg.sensors)
 696:drivers/inv_mpu.c ****             return -1;
 697:drivers/inv_mpu.c ****         if (enable && st.chip_cfg.int_enable)
 698:drivers/inv_mpu.c ****             return 0;
 699:drivers/inv_mpu.c ****         if (enable)
 700:drivers/inv_mpu.c ****             tmp = BIT_DATA_RDY_EN;
 701:drivers/inv_mpu.c ****         else
 702:drivers/inv_mpu.c ****             tmp = 0x00;
 703:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
 704:drivers/inv_mpu.c ****             return -1;
 705:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
 706:drivers/inv_mpu.c ****     }
 707:drivers/inv_mpu.c ****     return 0;
 708:drivers/inv_mpu.c **** }
  62              		.loc 1 708 0
  63 0034 1846     		mov	r0, r3
  64 0036 03B0     		add	sp, sp, #12
  65              		.cfi_remember_state
  66              		.cfi_def_cfa_offset 4
  67              		@ sp needed
  68 0038 5DF804FB 		ldr	pc, [sp], #4
  69              	.LVL3:
  70              	.L3:
  71              		.cfi_restore_state
 690:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
  72              		.loc 1 690 0
  73 003c 0023     		movs	r3, #0
  74 003e 8DF80730 		strb	r3, [sp, #7]
  75 0042 E7E7     		b	.L4
  76              	.L2:
 695:drivers/inv_mpu.c ****             return -1;
  77              		.loc 1 695 0
  78 0044 144B     		ldr	r3, .L13
  79 0046 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  80 0048 F3B1     		cbz	r3, .L9
 697:drivers/inv_mpu.c ****             return 0;
  81              		.loc 1 697 0
  82 004a B0B1     		cbz	r0, .L6
 697:drivers/inv_mpu.c ****             return 0;
  83              		.loc 1 697 0 is_stmt 0 discriminator 1
  84 004c 124B     		ldr	r3, .L13
  85 004e 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
  86 0050 EBB9     		cbnz	r3, .L10
ARM GAS  /tmp/cci8Vpl3.s 			page 15


 700:drivers/inv_mpu.c ****         else
  87              		.loc 1 700 0 is_stmt 1
  88 0052 0123     		movs	r3, #1
  89 0054 8DF80730 		strb	r3, [sp, #7]
  90              	.L7:
 703:drivers/inv_mpu.c ****             return -1;
  91              		.loc 1 703 0
  92 0058 0F4B     		ldr	r3, .L13
  93 005a 1968     		ldr	r1, [r3]
  94 005c 5868     		ldr	r0, [r3, #4]
  95              	.LVL4:
  96 005e 0DF10703 		add	r3, sp, #7
  97 0062 0122     		movs	r2, #1
  98 0064 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
  99 0066 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 100 0068 FFF7FEFF 		bl	i2cWrite
 101              	.LVL5:
 102 006c 0346     		mov	r3, r0
 103 006e 80B9     		cbnz	r0, .L11
 705:drivers/inv_mpu.c ****     }
 104              		.loc 1 705 0
 105 0070 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 106 0074 084A     		ldr	r2, .L13
 107 0076 5174     		strb	r1, [r2, #17]
 108 0078 DCE7     		b	.L1
 109              	.LVL6:
 110              	.L6:
 702:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
 111              		.loc 1 702 0
 112 007a 0023     		movs	r3, #0
 113 007c 8DF80730 		strb	r3, [sp, #7]
 114 0080 EAE7     		b	.L7
 115              	.LVL7:
 116              	.L8:
 692:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
 117              		.loc 1 692 0
 118 0082 4FF0FF33 		mov	r3, #-1
 119 0086 D5E7     		b	.L1
 120              	.LVL8:
 121              	.L9:
 696:drivers/inv_mpu.c ****         if (enable && st.chip_cfg.int_enable)
 122              		.loc 1 696 0
 123 0088 4FF0FF33 		mov	r3, #-1
 124 008c D2E7     		b	.L1
 125              	.L10:
 698:drivers/inv_mpu.c ****         if (enable)
 126              		.loc 1 698 0
 127 008e 0023     		movs	r3, #0
 128 0090 D0E7     		b	.L1
 129              	.LVL9:
 130              	.L11:
 704:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
 131              		.loc 1 704 0
 132 0092 4FF0FF33 		mov	r3, #-1
 133 0096 CDE7     		b	.L1
 134              	.L14:
 135              		.align	2
ARM GAS  /tmp/cci8Vpl3.s 			page 16


 136              	.L13:
 137 0098 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE64:
 140              		.size	set_int_enable, .-set_int_enable
 141              		.global	__aeabi_ldivmod
 142              		.align	1
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 147              		.type	get_st_biases, %function
 148              	get_st_biases:
 149              	.LFB99:
 709:drivers/inv_mpu.c **** 
 710:drivers/inv_mpu.c **** 
 711:drivers/inv_mpu.c **** /**
 712:drivers/inv_mpu.c ****  *  @brief      Register dump for testing.
 713:drivers/inv_mpu.c ****  *  @return     0 if successful.
 714:drivers/inv_mpu.c ****  */
 715:drivers/inv_mpu.c **** int mpu_reg_dump(void)
 716:drivers/inv_mpu.c **** {
 717:drivers/inv_mpu.c ****     unsigned char ii;
 718:drivers/inv_mpu.c ****     unsigned char data;
 719:drivers/inv_mpu.c **** 
 720:drivers/inv_mpu.c ****     for (ii = 0; ii < st.hw->num_reg; ii++) {
 721:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 722:drivers/inv_mpu.c ****             continue;
 723:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, ii, 1, &data))
 724:drivers/inv_mpu.c ****             return -1;
 725:drivers/inv_mpu.c ****         //log_i("%#5x: %#5x\r\n", ii, data);
 726:drivers/inv_mpu.c ****     }
 727:drivers/inv_mpu.c ****     return 0;
 728:drivers/inv_mpu.c **** }
 729:drivers/inv_mpu.c **** 
 730:drivers/inv_mpu.c **** /**
 731:drivers/inv_mpu.c ****  *  @brief      Read from a single register.
 732:drivers/inv_mpu.c ****  *  NOTE: The memory and FIFO read/write registers cannot be accessed.
 733:drivers/inv_mpu.c ****  *  @param[in]  reg     Register address.
 734:drivers/inv_mpu.c ****  *  @param[out] data    Register data.
 735:drivers/inv_mpu.c ****  *  @return     0 if successful.
 736:drivers/inv_mpu.c ****  */
 737:drivers/inv_mpu.c **** int mpu_read_reg(unsigned char reg, unsigned char *data)
 738:drivers/inv_mpu.c **** {
 739:drivers/inv_mpu.c ****     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
 740:drivers/inv_mpu.c ****         return -1;
 741:drivers/inv_mpu.c ****     if (reg >= st.hw->num_reg)
 742:drivers/inv_mpu.c ****         return -1;
 743:drivers/inv_mpu.c ****     return i2c_read(st.hw->addr, reg, 1, data);
 744:drivers/inv_mpu.c **** }
 745:drivers/inv_mpu.c **** 
 746:drivers/inv_mpu.c **** /**
 747:drivers/inv_mpu.c ****  *  @brief      Initialize hardware.
 748:drivers/inv_mpu.c ****  *  Initial configuration:\n
 749:drivers/inv_mpu.c ****  *  Gyro FSR: +/- 2000DPS\n
 750:drivers/inv_mpu.c ****  *  Accel FSR +/- 2G\n
 751:drivers/inv_mpu.c ****  *  DLPF: 42Hz\n
ARM GAS  /tmp/cci8Vpl3.s 			page 17


 752:drivers/inv_mpu.c ****  *  FIFO rate: 50Hz\n
 753:drivers/inv_mpu.c ****  *  Clock source: Gyro PLL\n
 754:drivers/inv_mpu.c ****  *  FIFO: Disabled.\n
 755:drivers/inv_mpu.c ****  *  Data ready interrupt: Disabled, active low, unlatched.
 756:drivers/inv_mpu.c ****  *  @param[in]  int_param   Platform-specific parameters to interrupt API.
 757:drivers/inv_mpu.c ****  *  @return     0 if successful.
 758:drivers/inv_mpu.c ****  */
 759:drivers/inv_mpu.c **** int mpu_init(void)
 760:drivers/inv_mpu.c **** {
 761:drivers/inv_mpu.c ****     unsigned char data[6], rev;
 762:drivers/inv_mpu.c **** 
 763:drivers/inv_mpu.c ****     /* Reset device. */
 764:drivers/inv_mpu.c ****     data[0] = 0x80;//BIT_RESET;
 765:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 766:drivers/inv_mpu.c ****         return -1;
 767:drivers/inv_mpu.c ****     delay_ms(100);
 768:drivers/inv_mpu.c **** 
 769:drivers/inv_mpu.c ****     /* Wake up chip. */
 770:drivers/inv_mpu.c ****     data[0] = 0x00;
 771:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 772:drivers/inv_mpu.c ****         return -1;
 773:drivers/inv_mpu.c **** 
 774:drivers/inv_mpu.c **** #if defined MPU6050
 775:drivers/inv_mpu.c ****     /* Check product revision. */
 776:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->accel_offs, 6, data))
 777:drivers/inv_mpu.c ****         return -1;
 778:drivers/inv_mpu.c ****     rev = ((data[5] & 0x01) << 2) | ((data[3] & 0x01) << 1) |
 779:drivers/inv_mpu.c ****         (data[1] & 0x01);
 780:drivers/inv_mpu.c **** 
 781:drivers/inv_mpu.c ****     if (rev) {
 782:drivers/inv_mpu.c ****         /* Congrats, these parts are better. */
 783:drivers/inv_mpu.c ****         if (rev == 1)
 784:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 785:drivers/inv_mpu.c ****         else if (rev == 2)
 786:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 0;
 787:drivers/inv_mpu.c ****         else {
 788:drivers/inv_mpu.c ****             log_e("Unsupported software product rev %d.\n",rev);
 789:drivers/inv_mpu.c ****             return -1;
 790:drivers/inv_mpu.c ****         }
 791:drivers/inv_mpu.c ****     } else {
 792:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->prod_id, 1, &(data[0])))
 793:drivers/inv_mpu.c ****             return -1;
 794:drivers/inv_mpu.c ****         rev = data[0] & 0x0F;
 795:drivers/inv_mpu.c ****         if (!rev) {
 796:drivers/inv_mpu.c ****             log_e("Product ID read as 0 indicates device is either incompatible or an MPU3050.\r\n"
 797:drivers/inv_mpu.c ****             return -1;
 798:drivers/inv_mpu.c ****         } else if (rev == 4) {
 799:drivers/inv_mpu.c ****             log_i("Half sensitivity part found.\r\n");
 800:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 801:drivers/inv_mpu.c ****         } else
 802:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 0;
 803:drivers/inv_mpu.c ****     }
 804:drivers/inv_mpu.c **** #elif defined MPU6500
 805:drivers/inv_mpu.c **** #define MPU6500_MEM_REV_ADDR    (0x17)
 806:drivers/inv_mpu.c ****     if (mpu_read_mem(MPU6500_MEM_REV_ADDR, 1, &rev))
 807:drivers/inv_mpu.c ****         return -1;
 808:drivers/inv_mpu.c ****     if (rev == 0x1)
ARM GAS  /tmp/cci8Vpl3.s 			page 18


 809:drivers/inv_mpu.c ****         st.chip_cfg.accel_half = 0;
 810:drivers/inv_mpu.c ****     else {
 811:drivers/inv_mpu.c ****         log_e("Unsupported software product rev %d.\r\n", rev);
 812:drivers/inv_mpu.c ****         return -1;
 813:drivers/inv_mpu.c ****     }
 814:drivers/inv_mpu.c **** 
 815:drivers/inv_mpu.c ****     /* MPU6500 shares 4kB of memory between the DMP and the FIFO. Since the
 816:drivers/inv_mpu.c ****      * first 3kB are needed by the DMP, we'll use the last 1kB for the FIFO.
 817:drivers/inv_mpu.c ****      */
 818:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_SIZE_1024 | 0x8;
 819:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->accel_cfg2, 1, data))
 820:drivers/inv_mpu.c ****         return -1;
 821:drivers/inv_mpu.c **** #endif
 822:drivers/inv_mpu.c **** 
 823:drivers/inv_mpu.c ****     /* Set to invalid values to ensure no I2C writes are skipped. */
 824:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
 825:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
 826:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 827:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 828:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 829:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 830:drivers/inv_mpu.c ****     st.chip_cfg.bypass_mode = 0xFF;
 831:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 832:drivers/inv_mpu.c ****     st.chip_cfg.compass_sample_rate = 0xFFFF;
 833:drivers/inv_mpu.c **** #endif
 834:drivers/inv_mpu.c ****     /* mpu_set_sensors always preserves this setting. */
 835:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
 836:drivers/inv_mpu.c ****     /* Handled in next call to mpu_set_bypass. */
 837:drivers/inv_mpu.c ****     st.chip_cfg.active_low_int = 1;
 838:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = 0;
 839:drivers/inv_mpu.c ****     st.chip_cfg.int_motion_only = 0;
 840:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
 841:drivers/inv_mpu.c ****     memset(&st.chip_cfg.cache, 0, sizeof(st.chip_cfg.cache));
 842:drivers/inv_mpu.c ****     st.chip_cfg.dmp_on = 0;
 843:drivers/inv_mpu.c ****     st.chip_cfg.dmp_loaded = 0;
 844:drivers/inv_mpu.c ****     st.chip_cfg.dmp_sample_rate = 0;
 845:drivers/inv_mpu.c **** 
 846:drivers/inv_mpu.c ****     if (mpu_set_gyro_fsr(2000))
 847:drivers/inv_mpu.c ****         return -1;
 848:drivers/inv_mpu.c ****     if (mpu_set_accel_fsr(2))
 849:drivers/inv_mpu.c ****         return -1;
 850:drivers/inv_mpu.c ****     if (mpu_set_lpf(42))
 851:drivers/inv_mpu.c ****         return -1;
 852:drivers/inv_mpu.c ****     if (mpu_set_sample_rate(50))
 853:drivers/inv_mpu.c ****         return -1;
 854:drivers/inv_mpu.c ****     if (mpu_configure_fifo(0))
 855:drivers/inv_mpu.c ****         return -1;
 856:drivers/inv_mpu.c **** 
 857:drivers/inv_mpu.c ****     /*if (int_param)
 858:drivers/inv_mpu.c ****         reg_int_cb(int_param);*/
 859:drivers/inv_mpu.c **** 
 860:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 861:drivers/inv_mpu.c ****     setup_compass();
 862:drivers/inv_mpu.c ****     if (mpu_set_compass_sample_rate(10))
 863:drivers/inv_mpu.c ****         return -1;
 864:drivers/inv_mpu.c **** #else
 865:drivers/inv_mpu.c ****     /* Already disabled by setup_compass. */
ARM GAS  /tmp/cci8Vpl3.s 			page 19


 866:drivers/inv_mpu.c ****     if (mpu_set_bypass(0))
 867:drivers/inv_mpu.c ****         return -1;
 868:drivers/inv_mpu.c **** #endif
 869:drivers/inv_mpu.c **** 
 870:drivers/inv_mpu.c ****     mpu_set_sensors(0);
 871:drivers/inv_mpu.c ****     return 0;
 872:drivers/inv_mpu.c **** }
 873:drivers/inv_mpu.c **** 
 874:drivers/inv_mpu.c **** /**
 875:drivers/inv_mpu.c ****  *  @brief      Enter low-power accel-only mode.
 876:drivers/inv_mpu.c ****  *  In low-power accel mode, the chip goes to sleep and only wakes up to sample
 877:drivers/inv_mpu.c ****  *  the accelerometer at one of the following frequencies:
 878:drivers/inv_mpu.c ****  *  \n MPU6050: 1.25Hz, 5Hz, 20Hz, 40Hz
 879:drivers/inv_mpu.c ****  *  \n MPU6500: 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
 880:drivers/inv_mpu.c ****  *  \n If the requested rate is not one listed above, the device will be set to
 881:drivers/inv_mpu.c ****  *  the next highest rate. Requesting a rate above the maximum supported
 882:drivers/inv_mpu.c ****  *  frequency will result in an error.
 883:drivers/inv_mpu.c ****  *  \n To select a fractional wake-up frequency, round down the value passed to
 884:drivers/inv_mpu.c ****  *  @e rate.
 885:drivers/inv_mpu.c ****  *  @param[in]  rate        Minimum sampling rate, or zero to disable LP
 886:drivers/inv_mpu.c ****  *                          accel mode.
 887:drivers/inv_mpu.c ****  *  @return     0 if successful.
 888:drivers/inv_mpu.c ****  */
 889:drivers/inv_mpu.c **** int mpu_lp_accel_mode(unsigned char rate)
 890:drivers/inv_mpu.c **** {
 891:drivers/inv_mpu.c ****     unsigned char tmp[2];
 892:drivers/inv_mpu.c **** 
 893:drivers/inv_mpu.c ****     if (rate > 40)
 894:drivers/inv_mpu.c ****         return -1;
 895:drivers/inv_mpu.c **** 
 896:drivers/inv_mpu.c ****     if (!rate) {
 897:drivers/inv_mpu.c ****         mpu_set_int_latched(0);
 898:drivers/inv_mpu.c ****         tmp[0] = 0;
 899:drivers/inv_mpu.c ****         tmp[1] = BIT_STBY_XYZG;
 900:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 901:drivers/inv_mpu.c ****             return -1;
 902:drivers/inv_mpu.c ****         st.chip_cfg.lp_accel_mode = 0;
 903:drivers/inv_mpu.c ****         return 0;
 904:drivers/inv_mpu.c ****     }
 905:drivers/inv_mpu.c ****     /* For LP accel, we automatically configure the hardware to produce latched
 906:drivers/inv_mpu.c ****      * interrupts. In LP accel mode, the hardware cycles into sleep mode before
 907:drivers/inv_mpu.c ****      * it gets a chance to deassert the interrupt pin; therefore, we shift this
 908:drivers/inv_mpu.c ****      * responsibility over to the MCU.
 909:drivers/inv_mpu.c ****      *
 910:drivers/inv_mpu.c ****      * Any register read will clear the interrupt.
 911:drivers/inv_mpu.c ****      */
 912:drivers/inv_mpu.c ****     mpu_set_int_latched(1);
 913:drivers/inv_mpu.c **** #if defined MPU6050
 914:drivers/inv_mpu.c ****     tmp[0] = BIT_LPA_CYCLE;
 915:drivers/inv_mpu.c ****     if (rate == 1) {
 916:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_1_25HZ;
 917:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 918:drivers/inv_mpu.c ****     } else if (rate <= 5) {
 919:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_5HZ;
 920:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 921:drivers/inv_mpu.c ****     } else if (rate <= 20) {
 922:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_20HZ;
ARM GAS  /tmp/cci8Vpl3.s 			page 20


 923:drivers/inv_mpu.c ****         mpu_set_lpf(10);
 924:drivers/inv_mpu.c ****     } else {
 925:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_40HZ;
 926:drivers/inv_mpu.c ****         mpu_set_lpf(20);
 927:drivers/inv_mpu.c ****     }
 928:drivers/inv_mpu.c ****     tmp[1] = (tmp[1] << 6) | BIT_STBY_XYZG;
 929:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 930:drivers/inv_mpu.c ****         return -1;
 931:drivers/inv_mpu.c **** #elif defined MPU6500
 932:drivers/inv_mpu.c ****     /* Set wake frequency. */
 933:drivers/inv_mpu.c ****     if (rate == 1)
 934:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_1_25HZ;
 935:drivers/inv_mpu.c ****     else if (rate == 2)
 936:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_2_5HZ;
 937:drivers/inv_mpu.c ****     else if (rate <= 5)
 938:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_5HZ;
 939:drivers/inv_mpu.c ****     else if (rate <= 10)
 940:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_10HZ;
 941:drivers/inv_mpu.c ****     else if (rate <= 20)
 942:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_20HZ;
 943:drivers/inv_mpu.c ****     else if (rate <= 40)
 944:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_40HZ;
 945:drivers/inv_mpu.c ****     else if (rate <= 80)
 946:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_80HZ;
 947:drivers/inv_mpu.c ****     else if (rate <= 160)
 948:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_160HZ;
 949:drivers/inv_mpu.c ****     else if (rate <= 320)
 950:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_320HZ;
 951:drivers/inv_mpu.c ****     else
 952:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_640HZ;
 953:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->lp_accel_odr, 1, tmp))
 954:drivers/inv_mpu.c ****         return -1;
 955:drivers/inv_mpu.c ****     tmp[0] = BIT_LPA_CYCLE;
 956:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, tmp))
 957:drivers/inv_mpu.c ****         return -1;
 958:drivers/inv_mpu.c **** #endif
 959:drivers/inv_mpu.c ****     st.chip_cfg.sensors = INV_XYZ_ACCEL;
 960:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = 0;
 961:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 1;
 962:drivers/inv_mpu.c ****     mpu_configure_fifo(0);
 963:drivers/inv_mpu.c **** 
 964:drivers/inv_mpu.c ****     return 0;
 965:drivers/inv_mpu.c **** }
 966:drivers/inv_mpu.c **** 
 967:drivers/inv_mpu.c **** /**
 968:drivers/inv_mpu.c ****  *  @brief      Read raw gyro data directly from the registers.
 969:drivers/inv_mpu.c ****  *  @param[out] data        Raw data in hardware units.
 970:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
 971:drivers/inv_mpu.c ****  *  @return     0 if successful.
 972:drivers/inv_mpu.c ****  */
 973:drivers/inv_mpu.c **** int mpu_get_gyro_reg(short *data, unsigned long *timestamp)
 974:drivers/inv_mpu.c **** {
 975:drivers/inv_mpu.c ****     unsigned char tmp[6];
 976:drivers/inv_mpu.c **** 
 977:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors & INV_XYZ_GYRO))
 978:drivers/inv_mpu.c ****         return -1;
 979:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cci8Vpl3.s 			page 21


 980:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->raw_gyro, 6, tmp))
 981:drivers/inv_mpu.c ****         return -1;
 982:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
 983:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
 984:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
 985:drivers/inv_mpu.c ****     if (timestamp)
 986:drivers/inv_mpu.c ****         get_ms(timestamp);
 987:drivers/inv_mpu.c ****     return 0;
 988:drivers/inv_mpu.c **** }
 989:drivers/inv_mpu.c **** 
 990:drivers/inv_mpu.c **** /**
 991:drivers/inv_mpu.c ****  *  @brief      Read raw accel data directly from the registers.
 992:drivers/inv_mpu.c ****  *  @param[out] data        Raw data in hardware units.
 993:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
 994:drivers/inv_mpu.c ****  *  @return     0 if successful.
 995:drivers/inv_mpu.c ****  */
 996:drivers/inv_mpu.c **** int mpu_get_accel_reg(short *data, unsigned long *timestamp)
 997:drivers/inv_mpu.c **** {
 998:drivers/inv_mpu.c ****     unsigned char tmp[6];
 999:drivers/inv_mpu.c **** 
1000:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors & INV_XYZ_ACCEL))
1001:drivers/inv_mpu.c ****         return -1;
1002:drivers/inv_mpu.c **** 
1003:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->raw_accel, 6, tmp))
1004:drivers/inv_mpu.c ****         return -1;
1005:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
1006:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
1007:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
1008:drivers/inv_mpu.c ****     if (timestamp)
1009:drivers/inv_mpu.c ****         get_ms(timestamp);
1010:drivers/inv_mpu.c ****     return 0;
1011:drivers/inv_mpu.c **** }
1012:drivers/inv_mpu.c **** 
1013:drivers/inv_mpu.c **** /**
1014:drivers/inv_mpu.c ****  *  @brief      Read temperature data directly from the registers.
1015:drivers/inv_mpu.c ****  *  @param[out] data        Data in q16 format.
1016:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
1017:drivers/inv_mpu.c ****  *  @return     0 if successful.
1018:drivers/inv_mpu.c ****  */
1019:drivers/inv_mpu.c **** int mpu_get_temperature(long *data, unsigned long *timestamp)
1020:drivers/inv_mpu.c **** {
1021:drivers/inv_mpu.c ****     unsigned char tmp[2];
1022:drivers/inv_mpu.c ****     short raw;
1023:drivers/inv_mpu.c **** 
1024:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1025:drivers/inv_mpu.c ****         return -1;
1026:drivers/inv_mpu.c **** 
1027:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->temp, 2, tmp))
1028:drivers/inv_mpu.c ****         return -1;
1029:drivers/inv_mpu.c ****     raw = (tmp[0] << 8) | tmp[1];
1030:drivers/inv_mpu.c ****     if (timestamp)
1031:drivers/inv_mpu.c ****         get_ms(timestamp);
1032:drivers/inv_mpu.c **** 
1033:drivers/inv_mpu.c ****     data[0] = (long)((35 + ((raw - (float)st.hw->temp_offset) / st.hw->temp_sens)) * 65536L);
1034:drivers/inv_mpu.c ****     return 0;
1035:drivers/inv_mpu.c **** }
1036:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cci8Vpl3.s 			page 22


1037:drivers/inv_mpu.c **** /**
1038:drivers/inv_mpu.c ****  *  @brief      Push biases to the accel bias registers.
1039:drivers/inv_mpu.c ****  *  This function expects biases relative to the current sensor output, and
1040:drivers/inv_mpu.c ****  *  these biases will be added to the factory-supplied values.
1041:drivers/inv_mpu.c ****  *  @param[in]  accel_bias  New biases.
1042:drivers/inv_mpu.c ****  *  @return     0 if successful.
1043:drivers/inv_mpu.c ****  */
1044:drivers/inv_mpu.c **** int mpu_set_accel_bias(const long *accel_bias)
1045:drivers/inv_mpu.c **** {
1046:drivers/inv_mpu.c ****     unsigned char data[6];
1047:drivers/inv_mpu.c ****     short accel_hw[3];
1048:drivers/inv_mpu.c ****     short got_accel[3];
1049:drivers/inv_mpu.c ****     short fg[3];
1050:drivers/inv_mpu.c **** 
1051:drivers/inv_mpu.c ****     if (!accel_bias)
1052:drivers/inv_mpu.c ****         return -1;
1053:drivers/inv_mpu.c ****     if (!accel_bias[0] && !accel_bias[1] && !accel_bias[2])
1054:drivers/inv_mpu.c ****         return 0;
1055:drivers/inv_mpu.c **** 
1056:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, 3, 3, data))
1057:drivers/inv_mpu.c ****         return -1;
1058:drivers/inv_mpu.c ****     fg[0] = ((data[0] >> 4) + 8) & 0xf;
1059:drivers/inv_mpu.c ****     fg[1] = ((data[1] >> 4) + 8) & 0xf;
1060:drivers/inv_mpu.c ****     fg[2] = ((data[2] >> 4) + 8) & 0xf;
1061:drivers/inv_mpu.c **** 
1062:drivers/inv_mpu.c ****     accel_hw[0] = (short)(accel_bias[0] * 2 / (64 + fg[0]));
1063:drivers/inv_mpu.c ****     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
1064:drivers/inv_mpu.c ****     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
1065:drivers/inv_mpu.c **** 
1066:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, 0x06, 6, data))
1067:drivers/inv_mpu.c ****         return -1;
1068:drivers/inv_mpu.c **** 
1069:drivers/inv_mpu.c ****     got_accel[0] = ((short)data[0] << 8) | data[1];
1070:drivers/inv_mpu.c ****     got_accel[1] = ((short)data[2] << 8) | data[3];
1071:drivers/inv_mpu.c ****     got_accel[2] = ((short)data[4] << 8) | data[5];
1072:drivers/inv_mpu.c **** 
1073:drivers/inv_mpu.c ****     accel_hw[0] += got_accel[0];
1074:drivers/inv_mpu.c ****     accel_hw[1] += got_accel[1];
1075:drivers/inv_mpu.c ****     accel_hw[2] += got_accel[2];
1076:drivers/inv_mpu.c **** 
1077:drivers/inv_mpu.c ****     data[0] = (accel_hw[0] >> 8) & 0xff;
1078:drivers/inv_mpu.c ****     data[1] = (accel_hw[0]) & 0xff;
1079:drivers/inv_mpu.c ****     data[2] = (accel_hw[1] >> 8) & 0xff;
1080:drivers/inv_mpu.c ****     data[3] = (accel_hw[1]) & 0xff;
1081:drivers/inv_mpu.c ****     data[4] = (accel_hw[2] >> 8) & 0xff;
1082:drivers/inv_mpu.c ****     data[5] = (accel_hw[2]) & 0xff;
1083:drivers/inv_mpu.c **** 
1084:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, 0x06, 6, data))
1085:drivers/inv_mpu.c ****         return -1;
1086:drivers/inv_mpu.c ****     return 0;
1087:drivers/inv_mpu.c **** }
1088:drivers/inv_mpu.c **** 
1089:drivers/inv_mpu.c **** /**
1090:drivers/inv_mpu.c ****  *  @brief  Reset FIFO read/write pointers.
1091:drivers/inv_mpu.c ****  *  @return 0 if successful.
1092:drivers/inv_mpu.c ****  */
1093:drivers/inv_mpu.c **** int mpu_reset_fifo(void)
ARM GAS  /tmp/cci8Vpl3.s 			page 23


1094:drivers/inv_mpu.c **** {
1095:drivers/inv_mpu.c ****     unsigned char data;
1096:drivers/inv_mpu.c **** 
1097:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1098:drivers/inv_mpu.c ****         return -1;
1099:drivers/inv_mpu.c **** 
1100:drivers/inv_mpu.c ****     data = 0;
1101:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
1102:drivers/inv_mpu.c ****         return -1;
1103:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
1104:drivers/inv_mpu.c ****         return -1;
1105:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1106:drivers/inv_mpu.c ****         return -1;
1107:drivers/inv_mpu.c **** 
1108:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on) {
1109:drivers/inv_mpu.c ****         data = BIT_FIFO_RST | BIT_DMP_RST;
1110:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1111:drivers/inv_mpu.c ****             return -1;
1112:drivers/inv_mpu.c ****        
1113:drivers/inv_mpu.c ****         data = BIT_DMP_EN | BIT_FIFO_EN;
1114:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
1115:drivers/inv_mpu.c ****             data |= BIT_AUX_IF_EN;
1116:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1117:drivers/inv_mpu.c ****             return -1;
1118:drivers/inv_mpu.c ****         if (st.chip_cfg.int_enable)
1119:drivers/inv_mpu.c ****             data = BIT_DMP_INT_EN;
1120:drivers/inv_mpu.c ****         else
1121:drivers/inv_mpu.c ****             data = 0;
1122:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
1123:drivers/inv_mpu.c ****             return -1;
1124:drivers/inv_mpu.c ****         data = 0;
1125:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
1126:drivers/inv_mpu.c ****             return -1;
1127:drivers/inv_mpu.c ****     } else {
1128:drivers/inv_mpu.c ****         data = BIT_FIFO_RST;
1129:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1130:drivers/inv_mpu.c ****             return -1;
1131:drivers/inv_mpu.c ****         if (st.chip_cfg.bypass_mode || !(st.chip_cfg.sensors & INV_XYZ_COMPASS))
1132:drivers/inv_mpu.c ****             data = BIT_FIFO_EN;
1133:drivers/inv_mpu.c ****         else
1134:drivers/inv_mpu.c ****             data = BIT_FIFO_EN | BIT_AUX_IF_EN;
1135:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1136:drivers/inv_mpu.c ****             return -1;
1137:drivers/inv_mpu.c ****     
1138:drivers/inv_mpu.c ****         if (st.chip_cfg.int_enable)
1139:drivers/inv_mpu.c ****             data = BIT_DATA_RDY_EN;
1140:drivers/inv_mpu.c ****         else
1141:drivers/inv_mpu.c ****             data = 0;
1142:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
1143:drivers/inv_mpu.c ****             return -1;
1144:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &st.chip_cfg.fifo_enable))
1145:drivers/inv_mpu.c ****             return -1;
1146:drivers/inv_mpu.c ****     }
1147:drivers/inv_mpu.c ****     return 0;
1148:drivers/inv_mpu.c **** }
1149:drivers/inv_mpu.c **** 
1150:drivers/inv_mpu.c **** /**
ARM GAS  /tmp/cci8Vpl3.s 			page 24


1151:drivers/inv_mpu.c ****  *  @brief      Get the gyro full-scale range.
1152:drivers/inv_mpu.c ****  *  @param[out] fsr Current full-scale range.
1153:drivers/inv_mpu.c ****  *  @return     0 if successful.
1154:drivers/inv_mpu.c ****  */
1155:drivers/inv_mpu.c **** int mpu_get_gyro_fsr(unsigned short *fsr)
1156:drivers/inv_mpu.c **** {
1157:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
1158:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
1159:drivers/inv_mpu.c ****         fsr[0] = 250;
1160:drivers/inv_mpu.c ****         break;
1161:drivers/inv_mpu.c ****     case INV_FSR_500DPS:
1162:drivers/inv_mpu.c ****         fsr[0] = 500;
1163:drivers/inv_mpu.c ****         break;
1164:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
1165:drivers/inv_mpu.c ****         fsr[0] = 1000;
1166:drivers/inv_mpu.c ****         break;
1167:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
1168:drivers/inv_mpu.c ****         fsr[0] = 2000;
1169:drivers/inv_mpu.c ****         break;
1170:drivers/inv_mpu.c ****     default:
1171:drivers/inv_mpu.c ****         fsr[0] = 0;
1172:drivers/inv_mpu.c ****         break;
1173:drivers/inv_mpu.c ****     }
1174:drivers/inv_mpu.c ****     return 0;
1175:drivers/inv_mpu.c **** }
1176:drivers/inv_mpu.c **** 
1177:drivers/inv_mpu.c **** /**
1178:drivers/inv_mpu.c ****  *  @brief      Set the gyro full-scale range.
1179:drivers/inv_mpu.c ****  *  @param[in]  fsr Desired full-scale range.
1180:drivers/inv_mpu.c ****  *  @return     0 if successful.
1181:drivers/inv_mpu.c ****  */
1182:drivers/inv_mpu.c **** int mpu_set_gyro_fsr(unsigned short fsr)
1183:drivers/inv_mpu.c **** {
1184:drivers/inv_mpu.c ****     unsigned char data;
1185:drivers/inv_mpu.c **** 
1186:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1187:drivers/inv_mpu.c ****         return -1;
1188:drivers/inv_mpu.c **** 
1189:drivers/inv_mpu.c ****     switch (fsr) {
1190:drivers/inv_mpu.c ****     case 250:
1191:drivers/inv_mpu.c ****         data = INV_FSR_250DPS << 3;
1192:drivers/inv_mpu.c ****         break;
1193:drivers/inv_mpu.c ****     case 500:
1194:drivers/inv_mpu.c ****         data = INV_FSR_500DPS << 3;
1195:drivers/inv_mpu.c ****         break;
1196:drivers/inv_mpu.c ****     case 1000:
1197:drivers/inv_mpu.c ****         data = INV_FSR_1000DPS << 3;
1198:drivers/inv_mpu.c ****         break;
1199:drivers/inv_mpu.c ****     case 2000:
1200:drivers/inv_mpu.c ****         data = INV_FSR_2000DPS << 3;
1201:drivers/inv_mpu.c ****         break;
1202:drivers/inv_mpu.c ****     default:
1203:drivers/inv_mpu.c ****         return -1;
1204:drivers/inv_mpu.c ****     }
1205:drivers/inv_mpu.c **** 
1206:drivers/inv_mpu.c ****     if (st.chip_cfg.gyro_fsr == (data >> 3))
1207:drivers/inv_mpu.c ****         return 0;
ARM GAS  /tmp/cci8Vpl3.s 			page 25


1208:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, &data))
1209:drivers/inv_mpu.c ****         return -1;
1210:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = data >> 3;
1211:drivers/inv_mpu.c ****     return 0;
1212:drivers/inv_mpu.c **** }
1213:drivers/inv_mpu.c **** 
1214:drivers/inv_mpu.c **** /**
1215:drivers/inv_mpu.c ****  *  @brief      Get the accel full-scale range.
1216:drivers/inv_mpu.c ****  *  @param[out] fsr Current full-scale range.
1217:drivers/inv_mpu.c ****  *  @return     0 if successful.
1218:drivers/inv_mpu.c ****  */
1219:drivers/inv_mpu.c **** int mpu_get_accel_fsr(unsigned char *fsr)
1220:drivers/inv_mpu.c **** {
1221:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
1222:drivers/inv_mpu.c ****     case INV_FSR_2G:
1223:drivers/inv_mpu.c ****         fsr[0] = 2;
1224:drivers/inv_mpu.c ****         break;
1225:drivers/inv_mpu.c ****     case INV_FSR_4G:
1226:drivers/inv_mpu.c ****         fsr[0] = 4;
1227:drivers/inv_mpu.c ****         break;
1228:drivers/inv_mpu.c ****     case INV_FSR_8G:
1229:drivers/inv_mpu.c ****         fsr[0] = 8;
1230:drivers/inv_mpu.c ****         break;
1231:drivers/inv_mpu.c ****     case INV_FSR_16G:
1232:drivers/inv_mpu.c ****         fsr[0] = 16;
1233:drivers/inv_mpu.c ****         break;
1234:drivers/inv_mpu.c ****     default:
1235:drivers/inv_mpu.c ****         return -1;
1236:drivers/inv_mpu.c ****     }
1237:drivers/inv_mpu.c ****     if (st.chip_cfg.accel_half)
1238:drivers/inv_mpu.c ****         fsr[0] <<= 1;
1239:drivers/inv_mpu.c ****     return 0;
1240:drivers/inv_mpu.c **** }
1241:drivers/inv_mpu.c **** 
1242:drivers/inv_mpu.c **** /**
1243:drivers/inv_mpu.c ****  *  @brief      Set the accel full-scale range.
1244:drivers/inv_mpu.c ****  *  @param[in]  fsr Desired full-scale range.
1245:drivers/inv_mpu.c ****  *  @return     0 if successful.
1246:drivers/inv_mpu.c ****  */
1247:drivers/inv_mpu.c **** int mpu_set_accel_fsr(unsigned char fsr)
1248:drivers/inv_mpu.c **** {
1249:drivers/inv_mpu.c ****     unsigned char data;
1250:drivers/inv_mpu.c **** 
1251:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1252:drivers/inv_mpu.c ****         return -1;
1253:drivers/inv_mpu.c **** 
1254:drivers/inv_mpu.c ****     switch (fsr) {
1255:drivers/inv_mpu.c ****     case 2:
1256:drivers/inv_mpu.c ****         data = INV_FSR_2G << 3;
1257:drivers/inv_mpu.c ****         break;
1258:drivers/inv_mpu.c ****     case 4:
1259:drivers/inv_mpu.c ****         data = INV_FSR_4G << 3;
1260:drivers/inv_mpu.c ****         break;
1261:drivers/inv_mpu.c ****     case 8:
1262:drivers/inv_mpu.c ****         data = INV_FSR_8G << 3;
1263:drivers/inv_mpu.c ****         break;
1264:drivers/inv_mpu.c ****     case 16:
ARM GAS  /tmp/cci8Vpl3.s 			page 26


1265:drivers/inv_mpu.c ****         data = INV_FSR_16G << 3;
1266:drivers/inv_mpu.c ****         break;
1267:drivers/inv_mpu.c ****     default:
1268:drivers/inv_mpu.c ****         return -1;
1269:drivers/inv_mpu.c ****     }
1270:drivers/inv_mpu.c **** 
1271:drivers/inv_mpu.c ****     if (st.chip_cfg.accel_fsr == (data >> 3))
1272:drivers/inv_mpu.c ****         return 0;
1273:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, &data))
1274:drivers/inv_mpu.c ****         return -1;
1275:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = data >> 3;
1276:drivers/inv_mpu.c ****     return 0;
1277:drivers/inv_mpu.c **** }
1278:drivers/inv_mpu.c **** 
1279:drivers/inv_mpu.c **** /**
1280:drivers/inv_mpu.c ****  *  @brief      Get the current DLPF setting.
1281:drivers/inv_mpu.c ****  *  @param[out] lpf Current LPF setting.
1282:drivers/inv_mpu.c ****  *  0 if successful.
1283:drivers/inv_mpu.c ****  */
1284:drivers/inv_mpu.c **** int mpu_get_lpf(unsigned short *lpf)
1285:drivers/inv_mpu.c **** {
1286:drivers/inv_mpu.c ****     switch (st.chip_cfg.lpf) {
1287:drivers/inv_mpu.c ****     case INV_FILTER_188HZ:
1288:drivers/inv_mpu.c ****         lpf[0] = 188;
1289:drivers/inv_mpu.c ****         break;
1290:drivers/inv_mpu.c ****     case INV_FILTER_98HZ:
1291:drivers/inv_mpu.c ****         lpf[0] = 98;
1292:drivers/inv_mpu.c ****         break;
1293:drivers/inv_mpu.c ****     case INV_FILTER_42HZ:
1294:drivers/inv_mpu.c ****         lpf[0] = 42;
1295:drivers/inv_mpu.c ****         break;
1296:drivers/inv_mpu.c ****     case INV_FILTER_20HZ:
1297:drivers/inv_mpu.c ****         lpf[0] = 20;
1298:drivers/inv_mpu.c ****         break;
1299:drivers/inv_mpu.c ****     case INV_FILTER_10HZ:
1300:drivers/inv_mpu.c ****         lpf[0] = 10;
1301:drivers/inv_mpu.c ****         break;
1302:drivers/inv_mpu.c ****     case INV_FILTER_5HZ:
1303:drivers/inv_mpu.c ****         lpf[0] = 5;
1304:drivers/inv_mpu.c ****         break;
1305:drivers/inv_mpu.c ****     case INV_FILTER_256HZ_NOLPF2:
1306:drivers/inv_mpu.c ****     case INV_FILTER_2100HZ_NOLPF:
1307:drivers/inv_mpu.c ****     default:
1308:drivers/inv_mpu.c ****         lpf[0] = 0;
1309:drivers/inv_mpu.c ****         break;
1310:drivers/inv_mpu.c ****     }
1311:drivers/inv_mpu.c ****     return 0;
1312:drivers/inv_mpu.c **** }
1313:drivers/inv_mpu.c **** 
1314:drivers/inv_mpu.c **** /**
1315:drivers/inv_mpu.c ****  *  @brief      Set digital low pass filter.
1316:drivers/inv_mpu.c ****  *  The following LPF settings are supported: 188, 98, 42, 20, 10, 5.
1317:drivers/inv_mpu.c ****  *  @param[in]  lpf Desired LPF setting.
1318:drivers/inv_mpu.c ****  *  @return     0 if successful.
1319:drivers/inv_mpu.c ****  */
1320:drivers/inv_mpu.c **** int mpu_set_lpf(unsigned short lpf)
1321:drivers/inv_mpu.c **** {
ARM GAS  /tmp/cci8Vpl3.s 			page 27


1322:drivers/inv_mpu.c ****     unsigned char data;
1323:drivers/inv_mpu.c **** 
1324:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1325:drivers/inv_mpu.c ****         return -1;
1326:drivers/inv_mpu.c **** 
1327:drivers/inv_mpu.c ****     if (lpf >= 188)
1328:drivers/inv_mpu.c ****         data = INV_FILTER_188HZ;
1329:drivers/inv_mpu.c ****     else if (lpf >= 98)
1330:drivers/inv_mpu.c ****         data = INV_FILTER_98HZ;
1331:drivers/inv_mpu.c ****     else if (lpf >= 42)
1332:drivers/inv_mpu.c ****         data = INV_FILTER_42HZ;
1333:drivers/inv_mpu.c ****     else if (lpf >= 20)
1334:drivers/inv_mpu.c ****         data = INV_FILTER_20HZ;
1335:drivers/inv_mpu.c ****     else if (lpf >= 10)
1336:drivers/inv_mpu.c ****         data = INV_FILTER_10HZ;
1337:drivers/inv_mpu.c ****     else
1338:drivers/inv_mpu.c ****         data = INV_FILTER_5HZ;
1339:drivers/inv_mpu.c **** 
1340:drivers/inv_mpu.c ****     if (st.chip_cfg.lpf == data)
1341:drivers/inv_mpu.c ****         return 0;
1342:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->lpf, 1, &data))
1343:drivers/inv_mpu.c ****         return -1;
1344:drivers/inv_mpu.c ****     st.chip_cfg.lpf = data;
1345:drivers/inv_mpu.c ****     return 0;
1346:drivers/inv_mpu.c **** }
1347:drivers/inv_mpu.c **** 
1348:drivers/inv_mpu.c **** /**
1349:drivers/inv_mpu.c ****  *  @brief      Get sampling rate.
1350:drivers/inv_mpu.c ****  *  @param[out] rate    Current sampling rate (Hz).
1351:drivers/inv_mpu.c ****  *  @return     0 if successful.
1352:drivers/inv_mpu.c ****  */
1353:drivers/inv_mpu.c **** int mpu_get_sample_rate(unsigned short *rate)
1354:drivers/inv_mpu.c **** {
1355:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1356:drivers/inv_mpu.c ****         return -1;
1357:drivers/inv_mpu.c ****     else
1358:drivers/inv_mpu.c ****         rate[0] = st.chip_cfg.sample_rate;
1359:drivers/inv_mpu.c ****     return 0;
1360:drivers/inv_mpu.c **** }
1361:drivers/inv_mpu.c **** 
1362:drivers/inv_mpu.c **** /**
1363:drivers/inv_mpu.c ****  *  @brief      Set sampling rate.
1364:drivers/inv_mpu.c ****  *  Sampling rate must be between 4Hz and 1kHz.
1365:drivers/inv_mpu.c ****  *  @param[in]  rate    Desired sampling rate (Hz).
1366:drivers/inv_mpu.c ****  *  @return     0 if successful.
1367:drivers/inv_mpu.c ****  */
1368:drivers/inv_mpu.c **** int mpu_set_sample_rate(unsigned short rate)
1369:drivers/inv_mpu.c **** {
1370:drivers/inv_mpu.c ****     unsigned char data;
1371:drivers/inv_mpu.c **** 
1372:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1373:drivers/inv_mpu.c ****         return -1;
1374:drivers/inv_mpu.c **** 
1375:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1376:drivers/inv_mpu.c ****         return -1;
1377:drivers/inv_mpu.c ****     else {
1378:drivers/inv_mpu.c ****         if (st.chip_cfg.lp_accel_mode) {
ARM GAS  /tmp/cci8Vpl3.s 			page 28


1379:drivers/inv_mpu.c ****             if (rate && (rate <= 40)) {
1380:drivers/inv_mpu.c ****                 /* Just stay in low-power accel mode. */
1381:drivers/inv_mpu.c ****                 mpu_lp_accel_mode(rate);
1382:drivers/inv_mpu.c ****                 return 0;
1383:drivers/inv_mpu.c ****             }
1384:drivers/inv_mpu.c ****             /* Requested rate exceeds the allowed frequencies in LP accel mode,
1385:drivers/inv_mpu.c ****              * switch back to full-power mode.
1386:drivers/inv_mpu.c ****              */
1387:drivers/inv_mpu.c ****             mpu_lp_accel_mode(0);
1388:drivers/inv_mpu.c ****         }
1389:drivers/inv_mpu.c ****         if (rate < 4)
1390:drivers/inv_mpu.c ****             rate = 4;
1391:drivers/inv_mpu.c ****         else if (rate > 1000)
1392:drivers/inv_mpu.c ****             rate = 1000;
1393:drivers/inv_mpu.c **** 
1394:drivers/inv_mpu.c ****         data = 1000 / rate - 1;
1395:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->rate_div, 1, &data))
1396:drivers/inv_mpu.c ****             return -1;
1397:drivers/inv_mpu.c **** 
1398:drivers/inv_mpu.c ****         st.chip_cfg.sample_rate = 1000 / (1 + data);
1399:drivers/inv_mpu.c **** 
1400:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1401:drivers/inv_mpu.c ****         mpu_set_compass_sample_rate(min(st.chip_cfg.compass_sample_rate, MAX_COMPASS_SAMPLE_RATE));
1402:drivers/inv_mpu.c **** #endif
1403:drivers/inv_mpu.c **** 
1404:drivers/inv_mpu.c ****         /* Automatically set LPF to 1/2 sampling rate. */
1405:drivers/inv_mpu.c ****         mpu_set_lpf(st.chip_cfg.sample_rate >> 1);
1406:drivers/inv_mpu.c ****         return 0;
1407:drivers/inv_mpu.c ****     }
1408:drivers/inv_mpu.c **** }
1409:drivers/inv_mpu.c **** 
1410:drivers/inv_mpu.c **** /**
1411:drivers/inv_mpu.c ****  *  @brief      Get compass sampling rate.
1412:drivers/inv_mpu.c ****  *  @param[out] rate    Current compass sampling rate (Hz).
1413:drivers/inv_mpu.c ****  *  @return     0 if successful.
1414:drivers/inv_mpu.c ****  */
1415:drivers/inv_mpu.c **** int mpu_get_compass_sample_rate(unsigned short *rate)
1416:drivers/inv_mpu.c **** {
1417:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1418:drivers/inv_mpu.c ****     rate[0] = st.chip_cfg.compass_sample_rate;
1419:drivers/inv_mpu.c ****     return 0;
1420:drivers/inv_mpu.c **** #else
1421:drivers/inv_mpu.c ****     rate[0] = 0;
1422:drivers/inv_mpu.c ****     return -1;
1423:drivers/inv_mpu.c **** #endif
1424:drivers/inv_mpu.c **** }
1425:drivers/inv_mpu.c **** 
1426:drivers/inv_mpu.c **** /**
1427:drivers/inv_mpu.c ****  *  @brief      Set compass sampling rate.
1428:drivers/inv_mpu.c ****  *  The compass on the auxiliary I2C bus is read by the MPU hardware at a
1429:drivers/inv_mpu.c ****  *  maximum of 100Hz. The actual rate can be set to a fraction of the gyro
1430:drivers/inv_mpu.c ****  *  sampling rate.
1431:drivers/inv_mpu.c ****  *
1432:drivers/inv_mpu.c ****  *  \n WARNING: The new rate may be different than what was requested. Call
1433:drivers/inv_mpu.c ****  *  mpu_get_compass_sample_rate to check the actual setting.
1434:drivers/inv_mpu.c ****  *  @param[in]  rate    Desired compass sampling rate (Hz).
1435:drivers/inv_mpu.c ****  *  @return     0 if successful.
ARM GAS  /tmp/cci8Vpl3.s 			page 29


1436:drivers/inv_mpu.c ****  */
1437:drivers/inv_mpu.c **** int mpu_set_compass_sample_rate(unsigned short rate)
1438:drivers/inv_mpu.c **** {
1439:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1440:drivers/inv_mpu.c ****     unsigned char div;
1441:drivers/inv_mpu.c ****     if (!rate || rate > st.chip_cfg.sample_rate || rate > MAX_COMPASS_SAMPLE_RATE)
1442:drivers/inv_mpu.c ****         return -1;
1443:drivers/inv_mpu.c **** 
1444:drivers/inv_mpu.c ****     div = st.chip_cfg.sample_rate / rate - 1;
1445:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->s4_ctrl, 1, &div))
1446:drivers/inv_mpu.c ****         return -1;
1447:drivers/inv_mpu.c ****     st.chip_cfg.compass_sample_rate = st.chip_cfg.sample_rate / (div + 1);
1448:drivers/inv_mpu.c ****     return 0;
1449:drivers/inv_mpu.c **** #else
1450:drivers/inv_mpu.c ****     return -1;
1451:drivers/inv_mpu.c **** #endif
1452:drivers/inv_mpu.c **** }
1453:drivers/inv_mpu.c **** 
1454:drivers/inv_mpu.c **** /**
1455:drivers/inv_mpu.c ****  *  @brief      Get gyro sensitivity scale factor.
1456:drivers/inv_mpu.c ****  *  @param[out] sens    Conversion from hardware units to dps.
1457:drivers/inv_mpu.c ****  *  @return     0 if successful.
1458:drivers/inv_mpu.c ****  */
1459:drivers/inv_mpu.c **** int mpu_get_gyro_sens(float *sens)
1460:drivers/inv_mpu.c **** {
1461:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
1462:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
1463:drivers/inv_mpu.c ****         sens[0] = 131.f;
1464:drivers/inv_mpu.c ****         break;
1465:drivers/inv_mpu.c ****     case INV_FSR_500DPS:
1466:drivers/inv_mpu.c ****         sens[0] = 65.5f;
1467:drivers/inv_mpu.c ****         break;
1468:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
1469:drivers/inv_mpu.c ****         sens[0] = 32.8f;
1470:drivers/inv_mpu.c ****         break;
1471:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
1472:drivers/inv_mpu.c ****         sens[0] = 16.4f;
1473:drivers/inv_mpu.c ****         break;
1474:drivers/inv_mpu.c ****     default:
1475:drivers/inv_mpu.c ****         return -1;
1476:drivers/inv_mpu.c ****     }
1477:drivers/inv_mpu.c ****     return 0;
1478:drivers/inv_mpu.c **** }
1479:drivers/inv_mpu.c **** 
1480:drivers/inv_mpu.c **** /**
1481:drivers/inv_mpu.c ****  *  @brief      Get accel sensitivity scale factor.
1482:drivers/inv_mpu.c ****  *  @param[out] sens    Conversion from hardware units to g's.
1483:drivers/inv_mpu.c ****  *  @return     0 if successful.
1484:drivers/inv_mpu.c ****  */
1485:drivers/inv_mpu.c **** int mpu_get_accel_sens(unsigned short *sens)
1486:drivers/inv_mpu.c **** {
1487:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
1488:drivers/inv_mpu.c ****     case INV_FSR_2G:
1489:drivers/inv_mpu.c ****         sens[0] = 16384;
1490:drivers/inv_mpu.c ****         break;
1491:drivers/inv_mpu.c ****     case INV_FSR_4G:
1492:drivers/inv_mpu.c ****         sens[0] = 8092;
ARM GAS  /tmp/cci8Vpl3.s 			page 30


1493:drivers/inv_mpu.c ****         break;
1494:drivers/inv_mpu.c ****     case INV_FSR_8G:
1495:drivers/inv_mpu.c ****         sens[0] = 4096;
1496:drivers/inv_mpu.c ****         break;
1497:drivers/inv_mpu.c ****     case INV_FSR_16G:
1498:drivers/inv_mpu.c ****         sens[0] = 2048;
1499:drivers/inv_mpu.c ****         break;
1500:drivers/inv_mpu.c ****     default:
1501:drivers/inv_mpu.c ****         return -1;
1502:drivers/inv_mpu.c ****     }
1503:drivers/inv_mpu.c ****     if (st.chip_cfg.accel_half)
1504:drivers/inv_mpu.c ****         sens[0] >>= 1;
1505:drivers/inv_mpu.c ****     return 0;
1506:drivers/inv_mpu.c **** }
1507:drivers/inv_mpu.c **** 
1508:drivers/inv_mpu.c **** /**
1509:drivers/inv_mpu.c ****  *  @brief      Get current FIFO configuration.
1510:drivers/inv_mpu.c ****  *  @e sensors can contain a combination of the following flags:
1511:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1512:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1513:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1514:drivers/inv_mpu.c ****  *  @param[out] sensors Mask of sensors in FIFO.
1515:drivers/inv_mpu.c ****  *  @return     0 if successful.
1516:drivers/inv_mpu.c ****  */
1517:drivers/inv_mpu.c **** int mpu_get_fifo_config(unsigned char *sensors)
1518:drivers/inv_mpu.c **** {
1519:drivers/inv_mpu.c ****     sensors[0] = st.chip_cfg.fifo_enable;
1520:drivers/inv_mpu.c ****     return 0;
1521:drivers/inv_mpu.c **** }
1522:drivers/inv_mpu.c **** 
1523:drivers/inv_mpu.c **** /**
1524:drivers/inv_mpu.c ****  *  @brief      Select which sensors are pushed to FIFO.
1525:drivers/inv_mpu.c ****  *  @e sensors can contain a combination of the following flags:
1526:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1527:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1528:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1529:drivers/inv_mpu.c ****  *  @param[in]  sensors Mask of sensors to push to FIFO.
1530:drivers/inv_mpu.c ****  *  @return     0 if successful.
1531:drivers/inv_mpu.c ****  */
1532:drivers/inv_mpu.c **** int mpu_configure_fifo(unsigned char sensors)
1533:drivers/inv_mpu.c **** {
1534:drivers/inv_mpu.c ****     unsigned char prev;
1535:drivers/inv_mpu.c ****     int result = 0;
1536:drivers/inv_mpu.c **** 
1537:drivers/inv_mpu.c ****     /* Compass data isn't going into the FIFO. Stop trying. */
1538:drivers/inv_mpu.c ****     sensors &= ~INV_XYZ_COMPASS;
1539:drivers/inv_mpu.c **** 
1540:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1541:drivers/inv_mpu.c ****         return 0;
1542:drivers/inv_mpu.c ****     else {
1543:drivers/inv_mpu.c ****         if (!(st.chip_cfg.sensors))
1544:drivers/inv_mpu.c ****             return -1;
1545:drivers/inv_mpu.c ****         prev = st.chip_cfg.fifo_enable;
1546:drivers/inv_mpu.c ****         st.chip_cfg.fifo_enable = sensors & st.chip_cfg.sensors;
1547:drivers/inv_mpu.c ****         if (st.chip_cfg.fifo_enable != sensors)
1548:drivers/inv_mpu.c ****             /* You're not getting what you asked for. Some sensors are
1549:drivers/inv_mpu.c ****              * asleep.
ARM GAS  /tmp/cci8Vpl3.s 			page 31


1550:drivers/inv_mpu.c ****              */
1551:drivers/inv_mpu.c ****             result = -1;
1552:drivers/inv_mpu.c ****         else
1553:drivers/inv_mpu.c ****             result = 0;
1554:drivers/inv_mpu.c ****         if (sensors || st.chip_cfg.lp_accel_mode)
1555:drivers/inv_mpu.c ****             set_int_enable(1);
1556:drivers/inv_mpu.c ****         else
1557:drivers/inv_mpu.c ****             set_int_enable(0);
1558:drivers/inv_mpu.c ****         if (sensors) {
1559:drivers/inv_mpu.c ****             if (mpu_reset_fifo()) {
1560:drivers/inv_mpu.c ****                 st.chip_cfg.fifo_enable = prev;
1561:drivers/inv_mpu.c ****                 return -1;
1562:drivers/inv_mpu.c ****             }
1563:drivers/inv_mpu.c ****         }
1564:drivers/inv_mpu.c ****     }
1565:drivers/inv_mpu.c **** 
1566:drivers/inv_mpu.c ****     return result;
1567:drivers/inv_mpu.c **** }
1568:drivers/inv_mpu.c **** 
1569:drivers/inv_mpu.c **** /**
1570:drivers/inv_mpu.c ****  *  @brief      Get current power state.
1571:drivers/inv_mpu.c ****  *  @param[in]  power_on    1 if turned on, 0 if suspended.
1572:drivers/inv_mpu.c ****  *  @return     0 if successful.
1573:drivers/inv_mpu.c ****  */
1574:drivers/inv_mpu.c **** int mpu_get_power_state(unsigned char *power_on)
1575:drivers/inv_mpu.c **** {
1576:drivers/inv_mpu.c ****     if (st.chip_cfg.sensors)
1577:drivers/inv_mpu.c ****         power_on[0] = 1;
1578:drivers/inv_mpu.c ****     else
1579:drivers/inv_mpu.c ****         power_on[0] = 0;
1580:drivers/inv_mpu.c ****     return 0;
1581:drivers/inv_mpu.c **** }
1582:drivers/inv_mpu.c **** 
1583:drivers/inv_mpu.c **** /**
1584:drivers/inv_mpu.c ****  *  @brief      Turn specific sensors on/off.
1585:drivers/inv_mpu.c ****  *  @e sensors can contain a combination of the following flags:
1586:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1587:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1588:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1589:drivers/inv_mpu.c ****  *  \n INV_XYZ_COMPASS
1590:drivers/inv_mpu.c ****  *  @param[in]  sensors    Mask of sensors to wake.
1591:drivers/inv_mpu.c ****  *  @return     0 if successful.
1592:drivers/inv_mpu.c ****  */
1593:drivers/inv_mpu.c **** int mpu_set_sensors(unsigned char sensors)
1594:drivers/inv_mpu.c **** {
1595:drivers/inv_mpu.c ****     unsigned char data;
1596:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1597:drivers/inv_mpu.c ****     unsigned char user_ctrl;
1598:drivers/inv_mpu.c **** #endif
1599:drivers/inv_mpu.c **** 
1600:drivers/inv_mpu.c ****     if (sensors & INV_XYZ_GYRO)
1601:drivers/inv_mpu.c ****         data = INV_CLK_PLL;
1602:drivers/inv_mpu.c ****     else if (sensors)
1603:drivers/inv_mpu.c ****         data = 0;
1604:drivers/inv_mpu.c ****     else
1605:drivers/inv_mpu.c ****         data = BIT_SLEEP;
1606:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &data)) {
ARM GAS  /tmp/cci8Vpl3.s 			page 32


1607:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
1608:drivers/inv_mpu.c ****         return -1;
1609:drivers/inv_mpu.c ****     }
1610:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = data & ~BIT_SLEEP;
1611:drivers/inv_mpu.c **** 
1612:drivers/inv_mpu.c ****     data = 0;
1613:drivers/inv_mpu.c ****     if (!(sensors & INV_X_GYRO))
1614:drivers/inv_mpu.c ****         data |= BIT_STBY_XG;
1615:drivers/inv_mpu.c ****     if (!(sensors & INV_Y_GYRO))
1616:drivers/inv_mpu.c ****         data |= BIT_STBY_YG;
1617:drivers/inv_mpu.c ****     if (!(sensors & INV_Z_GYRO))
1618:drivers/inv_mpu.c ****         data |= BIT_STBY_ZG;
1619:drivers/inv_mpu.c ****     if (!(sensors & INV_XYZ_ACCEL))
1620:drivers/inv_mpu.c ****         data |= BIT_STBY_XYZA;
1621:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_2, 1, &data)) {
1622:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
1623:drivers/inv_mpu.c ****         return -1;
1624:drivers/inv_mpu.c ****     }
1625:drivers/inv_mpu.c **** 
1626:drivers/inv_mpu.c ****     if (sensors && (sensors != INV_XYZ_ACCEL))
1627:drivers/inv_mpu.c ****         /* Latched interrupts only used in LP accel mode. */
1628:drivers/inv_mpu.c ****         mpu_set_int_latched(0);
1629:drivers/inv_mpu.c **** 
1630:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1631:drivers/inv_mpu.c **** #ifdef AK89xx_BYPASS
1632:drivers/inv_mpu.c ****     if (sensors & INV_XYZ_COMPASS)
1633:drivers/inv_mpu.c ****         mpu_set_bypass(1);
1634:drivers/inv_mpu.c ****     else
1635:drivers/inv_mpu.c ****         mpu_set_bypass(0);
1636:drivers/inv_mpu.c **** #else
1637:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
1638:drivers/inv_mpu.c ****         return -1;
1639:drivers/inv_mpu.c ****     /* Handle AKM power management. */
1640:drivers/inv_mpu.c ****     if (sensors & INV_XYZ_COMPASS) {
1641:drivers/inv_mpu.c ****         data = AKM_SINGLE_MEASUREMENT;
1642:drivers/inv_mpu.c ****         user_ctrl |= BIT_AUX_IF_EN;
1643:drivers/inv_mpu.c ****     } else {
1644:drivers/inv_mpu.c ****         data = AKM_POWER_DOWN;
1645:drivers/inv_mpu.c ****         user_ctrl &= ~BIT_AUX_IF_EN;
1646:drivers/inv_mpu.c ****     }
1647:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1648:drivers/inv_mpu.c ****         user_ctrl |= BIT_DMP_EN;
1649:drivers/inv_mpu.c ****     else
1650:drivers/inv_mpu.c ****         user_ctrl &= ~BIT_DMP_EN;
1651:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->s1_do, 1, &data))
1652:drivers/inv_mpu.c ****         return -1;
1653:drivers/inv_mpu.c ****     /* Enable/disable I2C master mode. */
1654:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
1655:drivers/inv_mpu.c ****         return -1;
1656:drivers/inv_mpu.c **** #endif
1657:drivers/inv_mpu.c **** #endif
1658:drivers/inv_mpu.c **** 
1659:drivers/inv_mpu.c ****     st.chip_cfg.sensors = sensors;
1660:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
1661:drivers/inv_mpu.c ****     delay_ms(50);
1662:drivers/inv_mpu.c ****     return 0;
1663:drivers/inv_mpu.c **** }
ARM GAS  /tmp/cci8Vpl3.s 			page 33


1664:drivers/inv_mpu.c **** 
1665:drivers/inv_mpu.c **** /**
1666:drivers/inv_mpu.c ****  *  @brief      Read the MPU interrupt status registers.
1667:drivers/inv_mpu.c ****  *  @param[out] status  Mask of interrupt bits.
1668:drivers/inv_mpu.c ****  *  @return     0 if successful.
1669:drivers/inv_mpu.c ****  */
1670:drivers/inv_mpu.c **** int mpu_get_int_status(short *status)
1671:drivers/inv_mpu.c **** {
1672:drivers/inv_mpu.c ****     unsigned char tmp[2];
1673:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
1674:drivers/inv_mpu.c ****         return -1;
1675:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->dmp_int_status, 2, tmp))
1676:drivers/inv_mpu.c ****         return -1;
1677:drivers/inv_mpu.c ****     status[0] = (tmp[0] << 8) | tmp[1];
1678:drivers/inv_mpu.c ****     return 0;
1679:drivers/inv_mpu.c **** }
1680:drivers/inv_mpu.c **** 
1681:drivers/inv_mpu.c **** /**
1682:drivers/inv_mpu.c ****  *  @brief      Get one packet from the FIFO.
1683:drivers/inv_mpu.c ****  *  If @e sensors does not contain a particular sensor, disregard the data
1684:drivers/inv_mpu.c ****  *  returned to that pointer.
1685:drivers/inv_mpu.c ****  *  \n @e sensors can contain a combination of the following flags:
1686:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1687:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1688:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1689:drivers/inv_mpu.c ****  *  \n If the FIFO has no new data, @e sensors will be zero.
1690:drivers/inv_mpu.c ****  *  \n If the FIFO is disabled, @e sensors will be zero and this function will
1691:drivers/inv_mpu.c ****  *  return a non-zero error code.
1692:drivers/inv_mpu.c ****  *  @param[out] gyro        Gyro data in hardware units.
1693:drivers/inv_mpu.c ****  *  @param[out] accel       Accel data in hardware units.
1694:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds.
1695:drivers/inv_mpu.c ****  *  @param[out] sensors     Mask of sensors read from FIFO.
1696:drivers/inv_mpu.c ****  *  @param[out] more        Number of remaining packets.
1697:drivers/inv_mpu.c ****  *  @return     0 if successful.
1698:drivers/inv_mpu.c ****  */
1699:drivers/inv_mpu.c **** int mpu_read_fifo(short *gyro, short *accel, unsigned long *timestamp,
1700:drivers/inv_mpu.c ****         unsigned char *sensors, unsigned char *more)
1701:drivers/inv_mpu.c **** {
1702:drivers/inv_mpu.c ****     /* Assumes maximum packet size is gyro (6) + accel (6). */
1703:drivers/inv_mpu.c ****     unsigned char data[MAX_PACKET_LENGTH];
1704:drivers/inv_mpu.c ****     unsigned char packet_size = 0;
1705:drivers/inv_mpu.c ****     unsigned short fifo_count, index = 0;
1706:drivers/inv_mpu.c **** 
1707:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1708:drivers/inv_mpu.c ****         return -1;
1709:drivers/inv_mpu.c **** 
1710:drivers/inv_mpu.c ****     sensors[0] = 0;
1711:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
1712:drivers/inv_mpu.c ****         return -1;
1713:drivers/inv_mpu.c ****     if (!st.chip_cfg.fifo_enable)
1714:drivers/inv_mpu.c ****         return -1;
1715:drivers/inv_mpu.c **** 
1716:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_X_GYRO)
1717:drivers/inv_mpu.c ****         packet_size += 2;
1718:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Y_GYRO)
1719:drivers/inv_mpu.c ****         packet_size += 2;
1720:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Z_GYRO)
ARM GAS  /tmp/cci8Vpl3.s 			page 34


1721:drivers/inv_mpu.c ****         packet_size += 2;
1722:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_XYZ_ACCEL)
1723:drivers/inv_mpu.c ****         packet_size += 6;
1724:drivers/inv_mpu.c **** 
1725:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, data))
1726:drivers/inv_mpu.c ****         return -1;
1727:drivers/inv_mpu.c ****     fifo_count = (data[0] << 8) | data[1];
1728:drivers/inv_mpu.c ****     if (fifo_count < packet_size)
1729:drivers/inv_mpu.c ****         return 0;
1730:drivers/inv_mpu.c **** //    log_i("FIFO count: %hd\n", fifo_count);
1731:drivers/inv_mpu.c ****     if (fifo_count > (st.hw->max_fifo >> 1)) {
1732:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
1733:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->int_status, 1, data))
1734:drivers/inv_mpu.c ****             return -1;
1735:drivers/inv_mpu.c ****         if (data[0] & BIT_FIFO_OVERFLOW) {
1736:drivers/inv_mpu.c ****             mpu_reset_fifo();
1737:drivers/inv_mpu.c ****             return -2;
1738:drivers/inv_mpu.c ****         }
1739:drivers/inv_mpu.c ****     }
1740:drivers/inv_mpu.c ****     get_ms((unsigned long*)timestamp);
1741:drivers/inv_mpu.c **** 
1742:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->fifo_r_w, packet_size, data))
1743:drivers/inv_mpu.c ****         return -1;
1744:drivers/inv_mpu.c ****     more[0] = fifo_count / packet_size - 1;
1745:drivers/inv_mpu.c ****     sensors[0] = 0;
1746:drivers/inv_mpu.c **** 
1747:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_XYZ_ACCEL) {
1748:drivers/inv_mpu.c ****         accel[0] = (data[index+0] << 8) | data[index+1];
1749:drivers/inv_mpu.c ****         accel[1] = (data[index+2] << 8) | data[index+3];
1750:drivers/inv_mpu.c ****         accel[2] = (data[index+4] << 8) | data[index+5];
1751:drivers/inv_mpu.c ****         sensors[0] |= INV_XYZ_ACCEL;
1752:drivers/inv_mpu.c ****         index += 6;
1753:drivers/inv_mpu.c ****     }
1754:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_X_GYRO) {
1755:drivers/inv_mpu.c ****         gyro[0] = (data[index+0] << 8) | data[index+1];
1756:drivers/inv_mpu.c ****         sensors[0] |= INV_X_GYRO;
1757:drivers/inv_mpu.c ****         index += 2;
1758:drivers/inv_mpu.c ****     }
1759:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Y_GYRO) {
1760:drivers/inv_mpu.c ****         gyro[1] = (data[index+0] << 8) | data[index+1];
1761:drivers/inv_mpu.c ****         sensors[0] |= INV_Y_GYRO;
1762:drivers/inv_mpu.c ****         index += 2;
1763:drivers/inv_mpu.c ****     }
1764:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Z_GYRO) {
1765:drivers/inv_mpu.c ****         gyro[2] = (data[index+0] << 8) | data[index+1];
1766:drivers/inv_mpu.c ****         sensors[0] |= INV_Z_GYRO;
1767:drivers/inv_mpu.c ****         index += 2;
1768:drivers/inv_mpu.c ****     }
1769:drivers/inv_mpu.c **** 
1770:drivers/inv_mpu.c ****     return 0;
1771:drivers/inv_mpu.c **** }
1772:drivers/inv_mpu.c **** 
1773:drivers/inv_mpu.c **** /**
1774:drivers/inv_mpu.c ****  *  @brief      Get one unparsed packet from the FIFO.
1775:drivers/inv_mpu.c ****  *  This function should be used if the packet is to be parsed elsewhere.
1776:drivers/inv_mpu.c ****  *  @param[in]  length  Length of one FIFO packet.
1777:drivers/inv_mpu.c ****  *  @param[in]  data    FIFO packet.
ARM GAS  /tmp/cci8Vpl3.s 			page 35


1778:drivers/inv_mpu.c ****  *  @param[in]  more    Number of remaining packets.
1779:drivers/inv_mpu.c ****  */
1780:drivers/inv_mpu.c **** int mpu_read_fifo_stream(unsigned short length, unsigned char *data,
1781:drivers/inv_mpu.c ****     unsigned char *more)
1782:drivers/inv_mpu.c **** {
1783:drivers/inv_mpu.c ****     unsigned char tmp[2];
1784:drivers/inv_mpu.c ****     unsigned short fifo_count;
1785:drivers/inv_mpu.c ****     if (!st.chip_cfg.dmp_on)
1786:drivers/inv_mpu.c ****         return -1;
1787:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
1788:drivers/inv_mpu.c ****         return -1;
1789:drivers/inv_mpu.c **** 
1790:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, tmp))
1791:drivers/inv_mpu.c ****         return -1;
1792:drivers/inv_mpu.c ****     fifo_count = (tmp[0] << 8) | tmp[1];
1793:drivers/inv_mpu.c ****     if (fifo_count < length) {
1794:drivers/inv_mpu.c ****         more[0] = 0;
1795:drivers/inv_mpu.c ****         return -1;
1796:drivers/inv_mpu.c ****     }
1797:drivers/inv_mpu.c ****     if (fifo_count > (st.hw->max_fifo >> 1)) {
1798:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
1799:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->int_status, 1, tmp))
1800:drivers/inv_mpu.c ****             return -1;
1801:drivers/inv_mpu.c ****         if (tmp[0] & BIT_FIFO_OVERFLOW) {
1802:drivers/inv_mpu.c ****             mpu_reset_fifo();
1803:drivers/inv_mpu.c ****             return -2;
1804:drivers/inv_mpu.c ****         }
1805:drivers/inv_mpu.c ****     }
1806:drivers/inv_mpu.c **** 
1807:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->fifo_r_w, length, data))
1808:drivers/inv_mpu.c ****         return -1;
1809:drivers/inv_mpu.c ****     more[0] = fifo_count / length - 1;
1810:drivers/inv_mpu.c ****     return 0;
1811:drivers/inv_mpu.c **** }
1812:drivers/inv_mpu.c **** 
1813:drivers/inv_mpu.c **** /**
1814:drivers/inv_mpu.c ****  *  @brief      Set device to bypass mode.
1815:drivers/inv_mpu.c ****  *  @param[in]  bypass_on   1 to enable bypass mode.
1816:drivers/inv_mpu.c ****  *  @return     0 if successful.
1817:drivers/inv_mpu.c ****  */
1818:drivers/inv_mpu.c **** int mpu_set_bypass(unsigned char bypass_on)
1819:drivers/inv_mpu.c **** {
1820:drivers/inv_mpu.c ****     unsigned char tmp;
1821:drivers/inv_mpu.c **** 
1822:drivers/inv_mpu.c ****     if (st.chip_cfg.bypass_mode == bypass_on)
1823:drivers/inv_mpu.c ****         return 0;
1824:drivers/inv_mpu.c **** 
1825:drivers/inv_mpu.c ****     if (bypass_on) {
1826:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1827:drivers/inv_mpu.c ****             return -1;
1828:drivers/inv_mpu.c ****         tmp &= ~BIT_AUX_IF_EN;
1829:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1830:drivers/inv_mpu.c ****             return -1;
1831:drivers/inv_mpu.c ****         delay_ms(3);
1832:drivers/inv_mpu.c ****         tmp = BIT_BYPASS_EN;
1833:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
1834:drivers/inv_mpu.c ****             tmp |= BIT_ACTL;
ARM GAS  /tmp/cci8Vpl3.s 			page 36


1835:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
1836:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
1837:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
1838:drivers/inv_mpu.c ****             return -1;
1839:drivers/inv_mpu.c ****     } else {
1840:drivers/inv_mpu.c ****         /* Enable I2C master mode if compass is being used. */
1841:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1842:drivers/inv_mpu.c ****             return -1;
1843:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
1844:drivers/inv_mpu.c ****             tmp |= BIT_AUX_IF_EN;
1845:drivers/inv_mpu.c ****         else
1846:drivers/inv_mpu.c ****             tmp &= ~BIT_AUX_IF_EN;
1847:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1848:drivers/inv_mpu.c ****             return -1;
1849:drivers/inv_mpu.c ****         delay_ms(3);
1850:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
1851:drivers/inv_mpu.c ****             tmp = BIT_ACTL;
1852:drivers/inv_mpu.c ****         else
1853:drivers/inv_mpu.c ****             tmp = 0;
1854:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
1855:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
1856:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
1857:drivers/inv_mpu.c ****             return -1;
1858:drivers/inv_mpu.c ****     }
1859:drivers/inv_mpu.c ****     st.chip_cfg.bypass_mode = bypass_on;
1860:drivers/inv_mpu.c ****     return 0;
1861:drivers/inv_mpu.c **** }
1862:drivers/inv_mpu.c **** 
1863:drivers/inv_mpu.c **** /**
1864:drivers/inv_mpu.c ****  *  @brief      Set interrupt level.
1865:drivers/inv_mpu.c ****  *  @param[in]  active_low  1 for active low, 0 for active high.
1866:drivers/inv_mpu.c ****  *  @return     0 if successful.
1867:drivers/inv_mpu.c ****  */
1868:drivers/inv_mpu.c **** int mpu_set_int_level(unsigned char active_low)
1869:drivers/inv_mpu.c **** {
1870:drivers/inv_mpu.c ****     st.chip_cfg.active_low_int = active_low;
1871:drivers/inv_mpu.c ****     return 0;
1872:drivers/inv_mpu.c **** }
1873:drivers/inv_mpu.c **** 
1874:drivers/inv_mpu.c **** /**
1875:drivers/inv_mpu.c ****  *  @brief      Enable latched interrupts.
1876:drivers/inv_mpu.c ****  *  Any MPU register will clear the interrupt.
1877:drivers/inv_mpu.c ****  *  @param[in]  enable  1 to enable, 0 to disable.
1878:drivers/inv_mpu.c ****  *  @return     0 if successful.
1879:drivers/inv_mpu.c ****  */
1880:drivers/inv_mpu.c **** int mpu_set_int_latched(unsigned char enable)
1881:drivers/inv_mpu.c **** {
1882:drivers/inv_mpu.c ****     unsigned char tmp;
1883:drivers/inv_mpu.c ****     if (st.chip_cfg.latched_int == enable)
1884:drivers/inv_mpu.c ****         return 0;
1885:drivers/inv_mpu.c **** 
1886:drivers/inv_mpu.c ****     if (enable)
1887:drivers/inv_mpu.c ****         tmp = BIT_LATCH_EN | BIT_ANY_RD_CLR;
1888:drivers/inv_mpu.c ****     else
1889:drivers/inv_mpu.c ****         tmp = 0;
1890:drivers/inv_mpu.c ****     if (st.chip_cfg.bypass_mode)
1891:drivers/inv_mpu.c ****         tmp |= BIT_BYPASS_EN;
ARM GAS  /tmp/cci8Vpl3.s 			page 37


1892:drivers/inv_mpu.c ****     if (st.chip_cfg.active_low_int)
1893:drivers/inv_mpu.c ****         tmp |= BIT_ACTL;
1894:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
1895:drivers/inv_mpu.c ****         return -1;
1896:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = enable;
1897:drivers/inv_mpu.c ****     return 0;
1898:drivers/inv_mpu.c **** }
1899:drivers/inv_mpu.c **** 
1900:drivers/inv_mpu.c **** #ifdef MPU6050
1901:drivers/inv_mpu.c **** static int get_accel_prod_shift(float *st_shift)
1902:drivers/inv_mpu.c **** {
1903:drivers/inv_mpu.c ****     unsigned char tmp[4], shift_code[3], ii;
1904:drivers/inv_mpu.c **** 
1905:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, 0x0D, 4, tmp))
1906:drivers/inv_mpu.c ****         return 0x07;
1907:drivers/inv_mpu.c **** 
1908:drivers/inv_mpu.c ****     shift_code[0] = ((tmp[0] & 0xE0) >> 3) | ((tmp[3] & 0x30) >> 4);
1909:drivers/inv_mpu.c ****     shift_code[1] = ((tmp[1] & 0xE0) >> 3) | ((tmp[3] & 0x0C) >> 2);
1910:drivers/inv_mpu.c ****     shift_code[2] = ((tmp[2] & 0xE0) >> 3) | (tmp[3] & 0x03);
1911:drivers/inv_mpu.c ****     for (ii = 0; ii < 3; ii++) {
1912:drivers/inv_mpu.c ****         if (!shift_code[ii]) {
1913:drivers/inv_mpu.c ****             st_shift[ii] = 0.f;
1914:drivers/inv_mpu.c ****             continue;
1915:drivers/inv_mpu.c ****         }
1916:drivers/inv_mpu.c ****         /* Equivalent to..
1917:drivers/inv_mpu.c ****          * st_shift[ii] = 0.34f * powf(0.92f/0.34f, (shift_code[ii]-1) / 30.f)
1918:drivers/inv_mpu.c ****          */
1919:drivers/inv_mpu.c ****         st_shift[ii] = 0.34f;
1920:drivers/inv_mpu.c ****         while (--shift_code[ii])
1921:drivers/inv_mpu.c ****             st_shift[ii] *= 1.034f;
1922:drivers/inv_mpu.c ****     }
1923:drivers/inv_mpu.c ****     return 0;
1924:drivers/inv_mpu.c **** }
1925:drivers/inv_mpu.c **** 
1926:drivers/inv_mpu.c **** static int accel_self_test(long *bias_regular, long *bias_st)
1927:drivers/inv_mpu.c **** {
1928:drivers/inv_mpu.c ****     int jj, result = 0;
1929:drivers/inv_mpu.c ****     float st_shift[3], st_shift_cust, st_shift_var;
1930:drivers/inv_mpu.c **** 
1931:drivers/inv_mpu.c ****     get_accel_prod_shift(st_shift);
1932:drivers/inv_mpu.c ****     for(jj = 0; jj < 3; jj++) {
1933:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
1934:drivers/inv_mpu.c ****         if (st_shift[jj]) {
1935:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
1936:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_accel_var)
1937:drivers/inv_mpu.c ****                 result |= 1 << jj;
1938:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_g) ||
1939:drivers/inv_mpu.c ****             (st_shift_cust > test.max_g))
1940:drivers/inv_mpu.c ****             result |= 1 << jj;
1941:drivers/inv_mpu.c ****     }
1942:drivers/inv_mpu.c **** 
1943:drivers/inv_mpu.c ****     return result;
1944:drivers/inv_mpu.c **** }
1945:drivers/inv_mpu.c **** 
1946:drivers/inv_mpu.c **** static int gyro_self_test(long *bias_regular, long *bias_st)
1947:drivers/inv_mpu.c **** {
1948:drivers/inv_mpu.c ****     int jj, result = 0;
ARM GAS  /tmp/cci8Vpl3.s 			page 38


1949:drivers/inv_mpu.c ****     unsigned char tmp[3];
1950:drivers/inv_mpu.c ****     float st_shift, st_shift_cust, st_shift_var;
1951:drivers/inv_mpu.c **** 
1952:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, 0x0D, 3, tmp))
1953:drivers/inv_mpu.c ****         return 0x07;
1954:drivers/inv_mpu.c **** 
1955:drivers/inv_mpu.c ****     tmp[0] &= 0x1F;
1956:drivers/inv_mpu.c ****     tmp[1] &= 0x1F;
1957:drivers/inv_mpu.c ****     tmp[2] &= 0x1F;
1958:drivers/inv_mpu.c **** 
1959:drivers/inv_mpu.c ****     for (jj = 0; jj < 3; jj++) {
1960:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
1961:drivers/inv_mpu.c ****         if (tmp[jj]) {
1962:drivers/inv_mpu.c ****             st_shift = 3275.f / test.gyro_sens;
1963:drivers/inv_mpu.c ****             while (--tmp[jj])
1964:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
1965:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift - 1.f;
1966:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_gyro_var)
1967:drivers/inv_mpu.c ****                 result |= 1 << jj;
1968:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_dps) ||
1969:drivers/inv_mpu.c ****             (st_shift_cust > test.max_dps))
1970:drivers/inv_mpu.c ****             result |= 1 << jj;
1971:drivers/inv_mpu.c ****     }
1972:drivers/inv_mpu.c ****     return result;
1973:drivers/inv_mpu.c **** }
1974:drivers/inv_mpu.c **** 
1975:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1976:drivers/inv_mpu.c **** static int compass_self_test(void)
1977:drivers/inv_mpu.c **** {
1978:drivers/inv_mpu.c ****     unsigned char tmp[6];
1979:drivers/inv_mpu.c ****     unsigned char tries = 10;
1980:drivers/inv_mpu.c ****     int result = 0x07;
1981:drivers/inv_mpu.c ****     short data;
1982:drivers/inv_mpu.c **** 
1983:drivers/inv_mpu.c ****     mpu_set_bypass(1);
1984:drivers/inv_mpu.c **** 
1985:drivers/inv_mpu.c ****     tmp[0] = AKM_POWER_DOWN;
1986:drivers/inv_mpu.c ****     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
1987:drivers/inv_mpu.c ****         return 0x07;
1988:drivers/inv_mpu.c ****     tmp[0] = AKM_BIT_SELF_TEST;
1989:drivers/inv_mpu.c ****     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp))
1990:drivers/inv_mpu.c ****         goto AKM_restore;
1991:drivers/inv_mpu.c ****     tmp[0] = AKM_MODE_SELF_TEST;
1992:drivers/inv_mpu.c ****     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
1993:drivers/inv_mpu.c ****         goto AKM_restore;
1994:drivers/inv_mpu.c **** 
1995:drivers/inv_mpu.c ****     do {
1996:drivers/inv_mpu.c ****         delay_ms(10);
1997:drivers/inv_mpu.c ****         if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ST1, 1, tmp))
1998:drivers/inv_mpu.c ****             goto AKM_restore;
1999:drivers/inv_mpu.c ****         if (tmp[0] & AKM_DATA_READY)
2000:drivers/inv_mpu.c ****             break;
2001:drivers/inv_mpu.c ****     } while (tries--);
2002:drivers/inv_mpu.c ****     if (!(tmp[0] & AKM_DATA_READY))
2003:drivers/inv_mpu.c ****         goto AKM_restore;
2004:drivers/inv_mpu.c **** 
2005:drivers/inv_mpu.c ****     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_HXL, 6, tmp))
ARM GAS  /tmp/cci8Vpl3.s 			page 39


2006:drivers/inv_mpu.c ****         goto AKM_restore;
2007:drivers/inv_mpu.c **** 
2008:drivers/inv_mpu.c ****     result = 0;
2009:drivers/inv_mpu.c ****     data = (short)(tmp[1] << 8) | tmp[0];
2010:drivers/inv_mpu.c ****     if ((data > 100) || (data < -100))
2011:drivers/inv_mpu.c ****         result |= 0x01;
2012:drivers/inv_mpu.c ****     data = (short)(tmp[3] << 8) | tmp[2];
2013:drivers/inv_mpu.c ****     if ((data > 100) || (data < -100))
2014:drivers/inv_mpu.c ****         result |= 0x02;
2015:drivers/inv_mpu.c ****     data = (short)(tmp[5] << 8) | tmp[4];
2016:drivers/inv_mpu.c ****     if ((data > -300) || (data < -1000))
2017:drivers/inv_mpu.c ****         result |= 0x04;
2018:drivers/inv_mpu.c **** 
2019:drivers/inv_mpu.c **** AKM_restore:
2020:drivers/inv_mpu.c ****     tmp[0] = 0 | SUPPORTS_AK89xx_HIGH_SENS;
2021:drivers/inv_mpu.c ****     i2c_write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp);
2022:drivers/inv_mpu.c ****     tmp[0] = SUPPORTS_AK89xx_HIGH_SENS;
2023:drivers/inv_mpu.c ****     i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp);
2024:drivers/inv_mpu.c ****     mpu_set_bypass(0);
2025:drivers/inv_mpu.c ****     return result;
2026:drivers/inv_mpu.c **** }
2027:drivers/inv_mpu.c **** #endif
2028:drivers/inv_mpu.c **** #endif
2029:drivers/inv_mpu.c **** 
2030:drivers/inv_mpu.c **** static int get_st_biases(long *gyro, long *accel, unsigned char hw_test)
2031:drivers/inv_mpu.c **** {
 150              		.loc 1 2031 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL10:
 155 009c 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 156              		.cfi_def_cfa_offset 32
 157              		.cfi_offset 4, -32
 158              		.cfi_offset 5, -28
 159              		.cfi_offset 6, -24
 160              		.cfi_offset 7, -20
 161              		.cfi_offset 8, -16
 162              		.cfi_offset 9, -12
 163              		.cfi_offset 10, -8
 164              		.cfi_offset 14, -4
 165 00a0 84B0     		sub	sp, sp, #16
 166              		.cfi_def_cfa_offset 48
 167 00a2 0546     		mov	r5, r0
 168 00a4 0C46     		mov	r4, r1
 169 00a6 1646     		mov	r6, r2
2032:drivers/inv_mpu.c ****     unsigned char data[MAX_PACKET_LENGTH];
2033:drivers/inv_mpu.c ****     unsigned char packet_count, ii;
2034:drivers/inv_mpu.c ****     unsigned short fifo_count;
2035:drivers/inv_mpu.c **** 
2036:drivers/inv_mpu.c ****     data[0] = 0x01;
 170              		.loc 1 2036 0
 171 00a8 0123     		movs	r3, #1
 172 00aa 8DF80430 		strb	r3, [sp, #4]
2037:drivers/inv_mpu.c ****     data[1] = 0;
 173              		.loc 1 2037 0
 174 00ae 0023     		movs	r3, #0
ARM GAS  /tmp/cci8Vpl3.s 			page 40


 175 00b0 8DF80530 		strb	r3, [sp, #5]
2038:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
 176              		.loc 1 2038 0
 177 00b4 544B     		ldr	r3, .L58
 178 00b6 1968     		ldr	r1, [r3]
 179              	.LVL11:
 180 00b8 5868     		ldr	r0, [r3, #4]
 181              	.LVL12:
 182 00ba 01AB     		add	r3, sp, #4
 183 00bc 0222     		movs	r2, #2
 184              	.LVL13:
 185 00be 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 186 00c0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 187 00c2 FFF7FEFF 		bl	i2cWrite
 188              	.LVL14:
 189 00c6 0028     		cmp	r0, #0
 190 00c8 40F0E781 		bne	.L28
2039:drivers/inv_mpu.c ****         return -1;
2040:drivers/inv_mpu.c ****     delay_ms(200);
 191              		.loc 1 2040 0
 192 00cc C820     		movs	r0, #200
 193 00ce FFF7FEFF 		bl	DelayMs
 194              	.LVL15:
2041:drivers/inv_mpu.c ****     data[0] = 0;
 195              		.loc 1 2041 0
 196 00d2 04AB     		add	r3, sp, #16
 197 00d4 0022     		movs	r2, #0
 198 00d6 03F80C2D 		strb	r2, [r3, #-12]!
2042:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
 199              		.loc 1 2042 0
 200 00da 4B4A     		ldr	r2, .L58
 201 00dc 1168     		ldr	r1, [r2]
 202 00de 5068     		ldr	r0, [r2, #4]
 203 00e0 0122     		movs	r2, #1
 204 00e2 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 205 00e4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 206 00e6 FFF7FEFF 		bl	i2cWrite
 207              	.LVL16:
 208 00ea 0028     		cmp	r0, #0
 209 00ec 40F0D881 		bne	.L29
2043:drivers/inv_mpu.c ****         return -1;
2044:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
 210              		.loc 1 2044 0
 211 00f0 454B     		ldr	r3, .L58
 212 00f2 1968     		ldr	r1, [r3]
 213 00f4 5868     		ldr	r0, [r3, #4]
 214 00f6 01AB     		add	r3, sp, #4
 215 00f8 0122     		movs	r2, #1
 216 00fa 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 217 00fc 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 218 00fe FFF7FEFF 		bl	i2cWrite
 219              	.LVL17:
 220 0102 0028     		cmp	r0, #0
 221 0104 40F0CF81 		bne	.L30
2045:drivers/inv_mpu.c ****         return -1;
2046:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
 222              		.loc 1 2046 0
ARM GAS  /tmp/cci8Vpl3.s 			page 41


 223 0108 3F4B     		ldr	r3, .L58
 224 010a 1968     		ldr	r1, [r3]
 225 010c 5868     		ldr	r0, [r3, #4]
 226 010e 01AB     		add	r3, sp, #4
 227 0110 0122     		movs	r2, #1
 228 0112 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 229 0114 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 230 0116 FFF7FEFF 		bl	i2cWrite
 231              	.LVL18:
 232 011a 0028     		cmp	r0, #0
 233 011c 40F0C681 		bne	.L31
2047:drivers/inv_mpu.c ****         return -1;
2048:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
 234              		.loc 1 2048 0
 235 0120 394B     		ldr	r3, .L58
 236 0122 1968     		ldr	r1, [r3]
 237 0124 5868     		ldr	r0, [r3, #4]
 238 0126 01AB     		add	r3, sp, #4
 239 0128 0122     		movs	r2, #1
 240 012a C97D     		ldrb	r1, [r1, #23]	@ zero_extendqisi2
 241 012c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 242 012e FFF7FEFF 		bl	i2cWrite
 243              	.LVL19:
 244 0132 0028     		cmp	r0, #0
 245 0134 40F0BD81 		bne	.L32
2049:drivers/inv_mpu.c ****         return -1;
2050:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
 246              		.loc 1 2050 0
 247 0138 334B     		ldr	r3, .L58
 248 013a 1968     		ldr	r1, [r3]
 249 013c 5868     		ldr	r0, [r3, #4]
 250 013e 01AB     		add	r3, sp, #4
 251 0140 0122     		movs	r2, #1
 252 0142 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 253 0144 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 254 0146 FFF7FEFF 		bl	i2cWrite
 255              	.LVL20:
 256 014a 0028     		cmp	r0, #0
 257 014c 40F0B481 		bne	.L33
2051:drivers/inv_mpu.c ****         return -1;
2052:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_RST | BIT_DMP_RST;
 258              		.loc 1 2052 0
 259 0150 04AB     		add	r3, sp, #16
 260 0152 0C22     		movs	r2, #12
 261 0154 03F80C2D 		strb	r2, [r3, #-12]!
2053:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
 262              		.loc 1 2053 0
 263 0158 2B4A     		ldr	r2, .L58
 264 015a 1168     		ldr	r1, [r2]
 265 015c 5068     		ldr	r0, [r2, #4]
 266 015e 0122     		movs	r2, #1
 267 0160 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 268 0162 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 269 0164 FFF7FEFF 		bl	i2cWrite
 270              	.LVL21:
 271 0168 0028     		cmp	r0, #0
 272 016a 40F0A881 		bne	.L34
ARM GAS  /tmp/cci8Vpl3.s 			page 42


2054:drivers/inv_mpu.c ****         return -1;
2055:drivers/inv_mpu.c ****     delay_ms(15);
 273              		.loc 1 2055 0
 274 016e 0F20     		movs	r0, #15
 275 0170 FFF7FEFF 		bl	DelayMs
 276              	.LVL22:
2056:drivers/inv_mpu.c ****     data[0] = st.test->reg_lpf;
 277              		.loc 1 2056 0
 278 0174 244A     		ldr	r2, .L58
 279 0176 936A     		ldr	r3, [r2, #40]
 280 0178 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 281 017a 04AB     		add	r3, sp, #16
 282 017c 03F80C1D 		strb	r1, [r3, #-12]!
2057:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
 283              		.loc 1 2057 0
 284 0180 1168     		ldr	r1, [r2]
 285 0182 5068     		ldr	r0, [r2, #4]
 286 0184 0122     		movs	r2, #1
 287 0186 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 288 0188 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 289 018a FFF7FEFF 		bl	i2cWrite
 290              	.LVL23:
 291 018e 0028     		cmp	r0, #0
 292 0190 40F09881 		bne	.L35
2058:drivers/inv_mpu.c ****         return -1;
2059:drivers/inv_mpu.c ****     data[0] = st.test->reg_rate_div;
 293              		.loc 1 2059 0
 294 0194 1C4A     		ldr	r2, .L58
 295 0196 936A     		ldr	r3, [r2, #40]
 296 0198 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 297 019a 04AB     		add	r3, sp, #16
 298 019c 03F80C1D 		strb	r1, [r3, #-12]!
2060:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->rate_div, 1, data))
 299              		.loc 1 2060 0
 300 01a0 1168     		ldr	r1, [r2]
 301 01a2 5068     		ldr	r0, [r2, #4]
 302 01a4 0122     		movs	r2, #1
 303 01a6 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 304 01a8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 305 01aa FFF7FEFF 		bl	i2cWrite
 306              	.LVL24:
 307 01ae 0028     		cmp	r0, #0
 308 01b0 40F08B81 		bne	.L36
2061:drivers/inv_mpu.c ****         return -1;
2062:drivers/inv_mpu.c ****     if (hw_test)
 309              		.loc 1 2062 0
 310 01b4 56B3     		cbz	r6, .L17
2063:drivers/inv_mpu.c ****         data[0] = st.test->reg_gyro_fsr | 0xE0;
 311              		.loc 1 2063 0
 312 01b6 144A     		ldr	r2, .L58
 313 01b8 936A     		ldr	r3, [r2, #40]
 314 01ba 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 315 01bc 61F01F01 		orn	r1, r1, #31
 316 01c0 04AB     		add	r3, sp, #16
 317 01c2 03F80C1D 		strb	r1, [r3, #-12]!
2064:drivers/inv_mpu.c ****     else
2065:drivers/inv_mpu.c ****         data[0] = st.test->reg_gyro_fsr;
ARM GAS  /tmp/cci8Vpl3.s 			page 43


2066:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, data))
 318              		.loc 1 2066 0
 319 01c6 1168     		ldr	r1, [r2]
 320 01c8 5068     		ldr	r0, [r2, #4]
 321 01ca 0122     		movs	r2, #1
 322 01cc 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 323 01ce 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 324 01d0 FFF7FEFF 		bl	i2cWrite
 325              	.LVL25:
 326 01d4 0028     		cmp	r0, #0
 327 01d6 40F07B81 		bne	.L51
2067:drivers/inv_mpu.c ****         return -1;
2068:drivers/inv_mpu.c **** 
2069:drivers/inv_mpu.c ****     if (hw_test)
2070:drivers/inv_mpu.c ****         data[0] = st.test->reg_accel_fsr | 0xE0;
 328              		.loc 1 2070 0
 329 01da 0B4A     		ldr	r2, .L58
 330 01dc 936A     		ldr	r3, [r2, #40]
 331 01de D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 332 01e0 61F01F01 		orn	r1, r1, #31
 333 01e4 04AB     		add	r3, sp, #16
 334 01e6 03F80C1D 		strb	r1, [r3, #-12]!
2071:drivers/inv_mpu.c ****     else
2072:drivers/inv_mpu.c ****         data[0] = test.reg_accel_fsr;
2073:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
 335              		.loc 1 2073 0
 336 01ea 1168     		ldr	r1, [r2]
 337 01ec 5068     		ldr	r0, [r2, #4]
 338 01ee 0122     		movs	r2, #1
 339 01f0 C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 340 01f2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 341 01f4 FFF7FEFF 		bl	i2cWrite
 342              	.LVL26:
 343 01f8 0028     		cmp	r0, #0
 344 01fa 40F06F81 		bne	.L52
2074:drivers/inv_mpu.c ****         return -1;
2075:drivers/inv_mpu.c ****     if (hw_test)
2076:drivers/inv_mpu.c ****         delay_ms(200);
 345              		.loc 1 2076 0
 346 01fe C820     		movs	r0, #200
 347 0200 FFF7FEFF 		bl	DelayMs
 348              	.LVL27:
 349 0204 21E0     		b	.L21
 350              	.L59:
 351 0206 00BF     		.align	2
 352              	.L58:
 353 0208 00000000 		.word	.LANCHOR0
 354              	.L17:
2065:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, data))
 355              		.loc 1 2065 0
 356 020c BE4A     		ldr	r2, .L60
 357 020e 936A     		ldr	r3, [r2, #40]
 358 0210 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 359 0212 04AB     		add	r3, sp, #16
 360 0214 03F80C1D 		strb	r1, [r3, #-12]!
2066:drivers/inv_mpu.c ****         return -1;
 361              		.loc 1 2066 0
ARM GAS  /tmp/cci8Vpl3.s 			page 44


 362 0218 1168     		ldr	r1, [r2]
 363 021a 5068     		ldr	r0, [r2, #4]
 364 021c 0122     		movs	r2, #1
 365 021e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 366 0220 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 367 0222 FFF7FEFF 		bl	i2cWrite
 368              	.LVL28:
 369 0226 0028     		cmp	r0, #0
 370 0228 40F05581 		bne	.L53
2072:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
 371              		.loc 1 2072 0
 372 022c 04AB     		add	r3, sp, #16
 373 022e 1822     		movs	r2, #24
 374 0230 03F80C2D 		strb	r2, [r3, #-12]!
2073:drivers/inv_mpu.c ****         return -1;
 375              		.loc 1 2073 0
 376 0234 B44A     		ldr	r2, .L60
 377 0236 1168     		ldr	r1, [r2]
 378 0238 5068     		ldr	r0, [r2, #4]
 379 023a 0122     		movs	r2, #1
 380 023c C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 381 023e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 382 0240 FFF7FEFF 		bl	i2cWrite
 383              	.LVL29:
 384 0244 0028     		cmp	r0, #0
 385 0246 40F04C81 		bne	.L54
 386              	.L21:
2077:drivers/inv_mpu.c **** 
2078:drivers/inv_mpu.c ****     /* Fill FIFO for test.wait_ms milliseconds. */
2079:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_EN;
 387              		.loc 1 2079 0
 388 024a 04AB     		add	r3, sp, #16
 389 024c 4022     		movs	r2, #64
 390 024e 03F80C2D 		strb	r2, [r3, #-12]!
2080:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
 391              		.loc 1 2080 0
 392 0252 AD4A     		ldr	r2, .L60
 393 0254 1168     		ldr	r1, [r2]
 394 0256 5068     		ldr	r0, [r2, #4]
 395 0258 0122     		movs	r2, #1
 396 025a 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 397 025c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 398 025e FFF7FEFF 		bl	i2cWrite
 399              	.LVL30:
 400 0262 0028     		cmp	r0, #0
 401 0264 40F04081 		bne	.L41
2081:drivers/inv_mpu.c ****         return -1;
2082:drivers/inv_mpu.c **** 
2083:drivers/inv_mpu.c ****     data[0] = INV_XYZ_GYRO | INV_XYZ_ACCEL;
 402              		.loc 1 2083 0
 403 0268 04AB     		add	r3, sp, #16
 404 026a 7822     		movs	r2, #120
 405 026c 03F80C2D 		strb	r2, [r3, #-12]!
2084:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
 406              		.loc 1 2084 0
 407 0270 A54A     		ldr	r2, .L60
 408 0272 1168     		ldr	r1, [r2]
ARM GAS  /tmp/cci8Vpl3.s 			page 45


 409 0274 5068     		ldr	r0, [r2, #4]
 410 0276 0122     		movs	r2, #1
 411 0278 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 412 027a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 413 027c FFF7FEFF 		bl	i2cWrite
 414              	.LVL31:
 415 0280 0028     		cmp	r0, #0
 416 0282 40F03481 		bne	.L42
2085:drivers/inv_mpu.c ****         return -1;
2086:drivers/inv_mpu.c ****     delay_ms(test.wait_ms);
 417              		.loc 1 2086 0
 418 0286 3220     		movs	r0, #50
 419 0288 FFF7FEFF 		bl	DelayMs
 420              	.LVL32:
2087:drivers/inv_mpu.c ****     data[0] = 0;
 421              		.loc 1 2087 0
 422 028c 04AB     		add	r3, sp, #16
 423 028e 0022     		movs	r2, #0
 424 0290 03F80C2D 		strb	r2, [r3, #-12]!
2088:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
 425              		.loc 1 2088 0
 426 0294 9C4A     		ldr	r2, .L60
 427 0296 1168     		ldr	r1, [r2]
 428 0298 5068     		ldr	r0, [r2, #4]
 429 029a 0122     		movs	r2, #1
 430 029c 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 431 029e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 432 02a0 FFF7FEFF 		bl	i2cWrite
 433              	.LVL33:
 434 02a4 0028     		cmp	r0, #0
 435 02a6 40F02581 		bne	.L43
2089:drivers/inv_mpu.c ****         return -1;
2090:drivers/inv_mpu.c **** 
2091:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, data))
 436              		.loc 1 2091 0
 437 02aa 974B     		ldr	r3, .L60
 438 02ac 1968     		ldr	r1, [r3]
 439 02ae 5868     		ldr	r0, [r3, #4]
 440 02b0 01AB     		add	r3, sp, #4
 441 02b2 0222     		movs	r2, #2
 442 02b4 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 443 02b6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 444 02b8 FFF7FEFF 		bl	i2cRead
 445              	.LVL34:
 446 02bc 8246     		mov	r10, r0
 447 02be 0028     		cmp	r0, #0
 448 02c0 40F01B81 		bne	.L44
 449              	.LVL35:
2092:drivers/inv_mpu.c ****         return -1;
2093:drivers/inv_mpu.c **** 
2094:drivers/inv_mpu.c ****     fifo_count = (data[0] << 8) | data[1];
 450              		.loc 1 2094 0
 451 02c4 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 452 02c8 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
2095:drivers/inv_mpu.c ****     packet_count = fifo_count / MAX_PACKET_LENGTH;
 453              		.loc 1 2095 0
 454 02cc 48EA0328 		orr	r8, r8, r3, lsl #8
ARM GAS  /tmp/cci8Vpl3.s 			page 46


 455 02d0 8E4B     		ldr	r3, .L60+4
 456 02d2 A3FB0838 		umull	r3, r8, r3, r8
 457 02d6 C8F3C708 		ubfx	r8, r8, #3, #8
 458              	.LVL36:
2096:drivers/inv_mpu.c ****     gyro[0] = gyro[1] = gyro[2] = 0;
 459              		.loc 1 2096 0
 460 02da 0023     		movs	r3, #0
 461 02dc AB60     		str	r3, [r5, #8]
 462 02de 6B60     		str	r3, [r5, #4]
 463 02e0 2B60     		str	r3, [r5]
2097:drivers/inv_mpu.c ****     accel[0] = accel[1] = accel[2] = 0;
 464              		.loc 1 2097 0
 465 02e2 A360     		str	r3, [r4, #8]
 466 02e4 6360     		str	r3, [r4, #4]
 467 02e6 2360     		str	r3, [r4]
 468              	.LVL37:
2098:drivers/inv_mpu.c **** 
2099:drivers/inv_mpu.c ****     for (ii = 0; ii < packet_count; ii++) {
 469              		.loc 1 2099 0
 470 02e8 B8F1000F 		cmp	r8, #0
 471 02ec 4ED0     		beq	.L22
 472 02ee 1E46     		mov	r6, r3
 473              	.LBB2:
2100:drivers/inv_mpu.c ****         short accel_cur[3], gyro_cur[3];
2101:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->fifo_r_w, MAX_PACKET_LENGTH, data))
 474              		.loc 1 2101 0
 475 02f0 854F     		ldr	r7, .L60
 476 02f2 4FF00C09 		mov	r9, #12
 477              	.LVL38:
 478              	.L23:
 479 02f6 3968     		ldr	r1, [r7]
 480 02f8 7868     		ldr	r0, [r7, #4]
 481 02fa 01AB     		add	r3, sp, #4
 482 02fc 4A46     		mov	r2, r9
 483 02fe C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 484 0300 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 485 0302 FFF7FEFF 		bl	i2cRead
 486              	.LVL39:
 487 0306 0028     		cmp	r0, #0
 488 0308 40F0FA80 		bne	.L45
 489              	.LVL40:
2102:drivers/inv_mpu.c ****             return -1;
2103:drivers/inv_mpu.c ****         accel_cur[0] = ((short)data[0] << 8) | data[1];
2104:drivers/inv_mpu.c ****         accel_cur[1] = ((short)data[2] << 8) | data[3];
 490              		.loc 1 2104 0
 491 030c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 492 0310 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 493 0314 42EA0322 		orr	r2, r2, r3, lsl #8
 494 0318 12B2     		sxth	r2, r2
 495              	.LVL41:
2105:drivers/inv_mpu.c ****         accel_cur[2] = ((short)data[4] << 8) | data[5];
 496              		.loc 1 2105 0
 497 031a 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 498 031e 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 499 0322 43EA0123 		orr	r3, r3, r1, lsl #8
 500 0326 1BB2     		sxth	r3, r3
 501              	.LVL42:
ARM GAS  /tmp/cci8Vpl3.s 			page 47


2103:drivers/inv_mpu.c ****         accel_cur[1] = ((short)data[2] << 8) | data[3];
 502              		.loc 1 2103 0
 503 0328 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 504 032c 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 505 0330 41EA0021 		orr	r1, r1, r0, lsl #8
2106:drivers/inv_mpu.c ****         accel[0] += (long)accel_cur[0];
 506              		.loc 1 2106 0
 507 0334 09B2     		sxth	r1, r1
 508 0336 2068     		ldr	r0, [r4]
 509 0338 0144     		add	r1, r1, r0
 510 033a 2160     		str	r1, [r4]
2107:drivers/inv_mpu.c ****         accel[1] += (long)accel_cur[1];
 511              		.loc 1 2107 0
 512 033c 6168     		ldr	r1, [r4, #4]
 513 033e 0A44     		add	r2, r2, r1
 514              	.LVL43:
 515 0340 6260     		str	r2, [r4, #4]
2108:drivers/inv_mpu.c ****         accel[2] += (long)accel_cur[2];
 516              		.loc 1 2108 0
 517 0342 A268     		ldr	r2, [r4, #8]
 518 0344 1344     		add	r3, r3, r2
 519              	.LVL44:
 520 0346 A360     		str	r3, [r4, #8]
 521              	.LVL45:
2109:drivers/inv_mpu.c ****         gyro_cur[0] = (((short)data[6] << 8) | data[7]);
2110:drivers/inv_mpu.c ****         gyro_cur[1] = (((short)data[8] << 8) | data[9]);
 522              		.loc 1 2110 0
 523 0348 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 524 034c 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 525 0350 42EA0322 		orr	r2, r2, r3, lsl #8
 526 0354 12B2     		sxth	r2, r2
 527              	.LVL46:
2111:drivers/inv_mpu.c ****         gyro_cur[2] = (((short)data[10] << 8) | data[11]);
 528              		.loc 1 2111 0
 529 0356 9DF80E10 		ldrb	r1, [sp, #14]	@ zero_extendqisi2
 530 035a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 531 035e 43EA0123 		orr	r3, r3, r1, lsl #8
 532 0362 1BB2     		sxth	r3, r3
 533              	.LVL47:
2109:drivers/inv_mpu.c ****         gyro_cur[0] = (((short)data[6] << 8) | data[7]);
 534              		.loc 1 2109 0
 535 0364 9DF80A00 		ldrb	r0, [sp, #10]	@ zero_extendqisi2
 536 0368 9DF80B10 		ldrb	r1, [sp, #11]	@ zero_extendqisi2
 537 036c 41EA0021 		orr	r1, r1, r0, lsl #8
2112:drivers/inv_mpu.c ****         gyro[0] += (long)gyro_cur[0];
 538              		.loc 1 2112 0
 539 0370 09B2     		sxth	r1, r1
 540 0372 2868     		ldr	r0, [r5]
 541 0374 0144     		add	r1, r1, r0
 542 0376 2960     		str	r1, [r5]
2113:drivers/inv_mpu.c ****         gyro[1] += (long)gyro_cur[1];
 543              		.loc 1 2113 0
 544 0378 6968     		ldr	r1, [r5, #4]
 545 037a 0A44     		add	r2, r2, r1
 546              	.LVL48:
 547 037c 6A60     		str	r2, [r5, #4]
2114:drivers/inv_mpu.c ****         gyro[2] += (long)gyro_cur[2];
ARM GAS  /tmp/cci8Vpl3.s 			page 48


 548              		.loc 1 2114 0
 549 037e AA68     		ldr	r2, [r5, #8]
 550 0380 1344     		add	r3, r3, r2
 551              	.LVL49:
 552 0382 AB60     		str	r3, [r5, #8]
 553              	.LVL50:
 554 0384 0136     		adds	r6, r6, #1
 555              	.LVL51:
 556              	.LBE2:
2099:drivers/inv_mpu.c ****         short accel_cur[3], gyro_cur[3];
 557              		.loc 1 2099 0
 558 0386 F3B2     		uxtb	r3, r6
 559 0388 9845     		cmp	r8, r3
 560 038a B4D8     		bhi	.L23
 561              	.LVL52:
 562              	.L22:
2115:drivers/inv_mpu.c ****     }
2116:drivers/inv_mpu.c **** #ifdef EMPL_NO_64BIT
2117:drivers/inv_mpu.c ****     gyro[0] = (long)(((float)gyro[0]*65536.f) / test.gyro_sens / packet_count);
2118:drivers/inv_mpu.c ****     gyro[1] = (long)(((float)gyro[1]*65536.f) / test.gyro_sens / packet_count);
2119:drivers/inv_mpu.c ****     gyro[2] = (long)(((float)gyro[2]*65536.f) / test.gyro_sens / packet_count);
2120:drivers/inv_mpu.c ****     if (has_accel) {
2121:drivers/inv_mpu.c ****         accel[0] = (long)(((float)accel[0]*65536.f) / test.accel_sens /
2122:drivers/inv_mpu.c ****             packet_count);
2123:drivers/inv_mpu.c ****         accel[1] = (long)(((float)accel[1]*65536.f) / test.accel_sens /
2124:drivers/inv_mpu.c ****             packet_count);
2125:drivers/inv_mpu.c ****         accel[2] = (long)(((float)accel[2]*65536.f) / test.accel_sens /
2126:drivers/inv_mpu.c ****             packet_count);
2127:drivers/inv_mpu.c ****         /* Don't remove gravity! */
2128:drivers/inv_mpu.c ****         accel[2] -= 65536L;
2129:drivers/inv_mpu.c ****     }
2130:drivers/inv_mpu.c **** #else
2131:drivers/inv_mpu.c ****     gyro[0] = (long)(((long long)gyro[0]<<16) / test.gyro_sens / packet_count);
 563              		.loc 1 2131 0
 564 038c 5FFA88F8 		uxtb	r8, r8
 565 0390 4FF00009 		mov	r9, #0
 566 0394 2968     		ldr	r1, [r5]
 567 0396 CB17     		asrs	r3, r1, #31
 568 0398 1E04     		lsls	r6, r3, #16
 569 039a 8322     		movs	r2, #131
 570 039c 0023     		movs	r3, #0
 571 039e 0804     		lsls	r0, r1, #16
 572 03a0 46EA1141 		orr	r1, r6, r1, lsr #16
 573 03a4 FFF7FEFF 		bl	__aeabi_ldivmod
 574              	.LVL53:
 575 03a8 4246     		mov	r2, r8
 576 03aa 4B46     		mov	r3, r9
 577 03ac FFF7FEFF 		bl	__aeabi_ldivmod
 578              	.LVL54:
 579 03b0 2860     		str	r0, [r5]
2132:drivers/inv_mpu.c ****     gyro[1] = (long)(((long long)gyro[1]<<16) / test.gyro_sens / packet_count);
 580              		.loc 1 2132 0
 581 03b2 6968     		ldr	r1, [r5, #4]
 582 03b4 CB17     		asrs	r3, r1, #31
 583 03b6 1E04     		lsls	r6, r3, #16
 584 03b8 8322     		movs	r2, #131
 585 03ba 0023     		movs	r3, #0
ARM GAS  /tmp/cci8Vpl3.s 			page 49


 586 03bc 0804     		lsls	r0, r1, #16
 587 03be 46EA1141 		orr	r1, r6, r1, lsr #16
 588 03c2 FFF7FEFF 		bl	__aeabi_ldivmod
 589              	.LVL55:
 590 03c6 4246     		mov	r2, r8
 591 03c8 4B46     		mov	r3, r9
 592 03ca FFF7FEFF 		bl	__aeabi_ldivmod
 593              	.LVL56:
 594 03ce 6860     		str	r0, [r5, #4]
2133:drivers/inv_mpu.c ****     gyro[2] = (long)(((long long)gyro[2]<<16) / test.gyro_sens / packet_count);
 595              		.loc 1 2133 0
 596 03d0 A968     		ldr	r1, [r5, #8]
 597 03d2 CB17     		asrs	r3, r1, #31
 598 03d4 1E04     		lsls	r6, r3, #16
 599 03d6 8322     		movs	r2, #131
 600 03d8 0023     		movs	r3, #0
 601 03da 0804     		lsls	r0, r1, #16
 602 03dc 46EA1141 		orr	r1, r6, r1, lsr #16
 603 03e0 FFF7FEFF 		bl	__aeabi_ldivmod
 604              	.LVL57:
 605 03e4 4246     		mov	r2, r8
 606 03e6 4B46     		mov	r3, r9
 607 03e8 FFF7FEFF 		bl	__aeabi_ldivmod
 608              	.LVL58:
 609 03ec A860     		str	r0, [r5, #8]
2134:drivers/inv_mpu.c ****     accel[0] = (long)(((long long)accel[0]<<16) / test.accel_sens /
 610              		.loc 1 2134 0
 611 03ee 2368     		ldr	r3, [r4]
 612 03f0 D917     		asrs	r1, r3, #31
 613 03f2 0A04     		lsls	r2, r1, #16
 614 03f4 1E04     		lsls	r6, r3, #16
 615 03f6 42EA1347 		orr	r7, r2, r3, lsr #16
 616 03fa 002E     		cmp	r6, #0
 617 03fc 77F10003 		sbcs	r3, r7, #0
 618 0400 39DB     		blt	.L55
 619              	.L24:
 620 0402 F00A     		lsrs	r0, r6, #11
 621 0404 4246     		mov	r2, r8
 622 0406 4B46     		mov	r3, r9
 623 0408 40EA4750 		orr	r0, r0, r7, lsl #21
 624 040c F912     		asrs	r1, r7, #11
 625 040e FFF7FEFF 		bl	__aeabi_ldivmod
 626              	.LVL59:
 627 0412 2060     		str	r0, [r4]
2135:drivers/inv_mpu.c ****         packet_count);
2136:drivers/inv_mpu.c ****     accel[1] = (long)(((long long)accel[1]<<16) / test.accel_sens /
 628              		.loc 1 2136 0
 629 0414 6368     		ldr	r3, [r4, #4]
 630 0416 D917     		asrs	r1, r3, #31
 631 0418 0A04     		lsls	r2, r1, #16
 632 041a 1E04     		lsls	r6, r3, #16
 633 041c 42EA1347 		orr	r7, r2, r3, lsr #16
 634 0420 002E     		cmp	r6, #0
 635 0422 77F10003 		sbcs	r3, r7, #0
 636 0426 2CDB     		blt	.L56
 637              	.L25:
 638 0428 F00A     		lsrs	r0, r6, #11
ARM GAS  /tmp/cci8Vpl3.s 			page 50


 639 042a 4246     		mov	r2, r8
 640 042c 4B46     		mov	r3, r9
 641 042e 40EA4750 		orr	r0, r0, r7, lsl #21
 642 0432 F912     		asrs	r1, r7, #11
 643 0434 FFF7FEFF 		bl	__aeabi_ldivmod
 644              	.LVL60:
 645 0438 6060     		str	r0, [r4, #4]
2137:drivers/inv_mpu.c ****         packet_count);
2138:drivers/inv_mpu.c ****     accel[2] = (long)(((long long)accel[2]<<16) / test.accel_sens /
 646              		.loc 1 2138 0
 647 043a A368     		ldr	r3, [r4, #8]
 648 043c D917     		asrs	r1, r3, #31
 649 043e 0A04     		lsls	r2, r1, #16
 650 0440 1E04     		lsls	r6, r3, #16
 651 0442 42EA1347 		orr	r7, r2, r3, lsr #16
 652 0446 002E     		cmp	r6, #0
 653 0448 77F10003 		sbcs	r3, r7, #0
 654 044c 1FDB     		blt	.L57
 655              	.L26:
 656 044e F00A     		lsrs	r0, r6, #11
 657 0450 4246     		mov	r2, r8
 658 0452 4B46     		mov	r3, r9
 659 0454 40EA4750 		orr	r0, r0, r7, lsl #21
 660 0458 F912     		asrs	r1, r7, #11
 661 045a FFF7FEFF 		bl	__aeabi_ldivmod
 662              	.LVL61:
 663 045e A060     		str	r0, [r4, #8]
2139:drivers/inv_mpu.c ****         packet_count);
2140:drivers/inv_mpu.c ****     /* Don't remove gravity! */
2141:drivers/inv_mpu.c ****     if (accel[2] > 0L)
 664              		.loc 1 2141 0
 665 0460 0028     		cmp	r0, #0
2142:drivers/inv_mpu.c ****         accel[2] -= 65536L;
 666              		.loc 1 2142 0
 667 0462 CCBF     		ite	gt
 668 0464 A0F58030 		subgt	r0, r0, #65536
2143:drivers/inv_mpu.c ****     else
2144:drivers/inv_mpu.c ****         accel[2] += 65536L;
 669              		.loc 1 2144 0
 670 0468 00F58030 		addle	r0, r0, #65536
 671 046c A060     		str	r0, [r4, #8]
 672              	.LVL62:
 673              	.L15:
2145:drivers/inv_mpu.c **** #endif
2146:drivers/inv_mpu.c **** 
2147:drivers/inv_mpu.c ****     return 0;
2148:drivers/inv_mpu.c **** }
 674              		.loc 1 2148 0
 675 046e 5046     		mov	r0, r10
 676 0470 04B0     		add	sp, sp, #16
 677              		.cfi_remember_state
 678              		.cfi_def_cfa_offset 32
 679              		@ sp needed
 680 0472 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 681              	.LVL63:
 682              	.L55:
 683              		.cfi_restore_state
ARM GAS  /tmp/cci8Vpl3.s 			page 51


2134:drivers/inv_mpu.c ****         packet_count);
 684              		.loc 1 2134 0
 685 0476 40F2FF72 		movw	r2, #2047
 686 047a 0023     		movs	r3, #0
 687 047c B618     		adds	r6, r6, r2
 688 047e 5F41     		adcs	r7, r7, r3
 689 0480 BFE7     		b	.L24
 690              	.L56:
2136:drivers/inv_mpu.c ****         packet_count);
 691              		.loc 1 2136 0
 692 0482 40F2FF72 		movw	r2, #2047
 693 0486 0023     		movs	r3, #0
 694 0488 B618     		adds	r6, r6, r2
 695 048a 5F41     		adcs	r7, r7, r3
 696 048c CCE7     		b	.L25
 697              	.L57:
2138:drivers/inv_mpu.c ****         packet_count);
 698              		.loc 1 2138 0
 699 048e 40F2FF72 		movw	r2, #2047
 700 0492 0023     		movs	r3, #0
 701 0494 B618     		adds	r6, r6, r2
 702 0496 5F41     		adcs	r7, r7, r3
 703 0498 D9E7     		b	.L26
 704              	.LVL64:
 705              	.L28:
2039:drivers/inv_mpu.c ****     delay_ms(200);
 706              		.loc 1 2039 0
 707 049a 4FF0FF3A 		mov	r10, #-1
 708 049e E6E7     		b	.L15
 709              	.L29:
2043:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
 710              		.loc 1 2043 0
 711 04a0 4FF0FF3A 		mov	r10, #-1
 712 04a4 E3E7     		b	.L15
 713              	.L30:
2045:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
 714              		.loc 1 2045 0
 715 04a6 4FF0FF3A 		mov	r10, #-1
 716 04aa E0E7     		b	.L15
 717              	.L31:
2047:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
 718              		.loc 1 2047 0
 719 04ac 4FF0FF3A 		mov	r10, #-1
 720 04b0 DDE7     		b	.L15
 721              	.L32:
2049:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
 722              		.loc 1 2049 0
 723 04b2 4FF0FF3A 		mov	r10, #-1
 724 04b6 DAE7     		b	.L15
 725              	.L33:
2051:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_RST | BIT_DMP_RST;
 726              		.loc 1 2051 0
 727 04b8 4FF0FF3A 		mov	r10, #-1
 728 04bc D7E7     		b	.L15
 729              	.L34:
2054:drivers/inv_mpu.c ****     delay_ms(15);
 730              		.loc 1 2054 0
ARM GAS  /tmp/cci8Vpl3.s 			page 52


 731 04be 4FF0FF3A 		mov	r10, #-1
 732 04c2 D4E7     		b	.L15
 733              	.L35:
2058:drivers/inv_mpu.c ****     data[0] = st.test->reg_rate_div;
 734              		.loc 1 2058 0
 735 04c4 4FF0FF3A 		mov	r10, #-1
 736 04c8 D1E7     		b	.L15
 737              	.L36:
2061:drivers/inv_mpu.c ****     if (hw_test)
 738              		.loc 1 2061 0
 739 04ca 4FF0FF3A 		mov	r10, #-1
 740 04ce CEE7     		b	.L15
 741              	.L51:
2067:drivers/inv_mpu.c **** 
 742              		.loc 1 2067 0
 743 04d0 4FF0FF3A 		mov	r10, #-1
 744 04d4 CBE7     		b	.L15
 745              	.L53:
 746 04d6 4FF0FF3A 		mov	r10, #-1
 747 04da C8E7     		b	.L15
 748              	.L52:
2074:drivers/inv_mpu.c ****     if (hw_test)
 749              		.loc 1 2074 0
 750 04dc 4FF0FF3A 		mov	r10, #-1
 751 04e0 C5E7     		b	.L15
 752              	.L54:
 753 04e2 4FF0FF3A 		mov	r10, #-1
 754 04e6 C2E7     		b	.L15
 755              	.L41:
2081:drivers/inv_mpu.c **** 
 756              		.loc 1 2081 0
 757 04e8 4FF0FF3A 		mov	r10, #-1
 758 04ec BFE7     		b	.L15
 759              	.L42:
2085:drivers/inv_mpu.c ****     delay_ms(test.wait_ms);
 760              		.loc 1 2085 0
 761 04ee 4FF0FF3A 		mov	r10, #-1
 762 04f2 BCE7     		b	.L15
 763              	.L43:
2089:drivers/inv_mpu.c **** 
 764              		.loc 1 2089 0
 765 04f4 4FF0FF3A 		mov	r10, #-1
 766 04f8 B9E7     		b	.L15
 767              	.L44:
2092:drivers/inv_mpu.c **** 
 768              		.loc 1 2092 0
 769 04fa 4FF0FF3A 		mov	r10, #-1
 770 04fe B6E7     		b	.L15
 771              	.LVL65:
 772              	.L45:
 773              	.LBB3:
2102:drivers/inv_mpu.c ****         accel_cur[0] = ((short)data[0] << 8) | data[1];
 774              		.loc 1 2102 0
 775 0500 4FF0FF3A 		mov	r10, #-1
 776 0504 B3E7     		b	.L15
 777              	.L61:
 778 0506 00BF     		.align	2
ARM GAS  /tmp/cci8Vpl3.s 			page 53


 779              	.L60:
 780 0508 00000000 		.word	.LANCHOR0
 781 050c ABAAAAAA 		.word	-1431655765
 782              	.LBE3:
 783              		.cfi_endproc
 784              	.LFE99:
 785              		.size	get_st_biases, .-get_st_biases
 786              		.align	1
 787              		.global	mpu_reg_dump
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu softvfp
 792              		.type	mpu_reg_dump, %function
 793              	mpu_reg_dump:
 794              	.LFB65:
 716:drivers/inv_mpu.c ****     unsigned char ii;
 795              		.loc 1 716 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              	.LVL66:
 720:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 800              		.loc 1 720 0
 801 0510 134B     		ldr	r3, .L74
 802 0512 5868     		ldr	r0, [r3, #4]
 803 0514 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 804 0516 0BB3     		cbz	r3, .L66
 716:drivers/inv_mpu.c ****     unsigned char ii;
 805              		.loc 1 716 0
 806 0518 70B5     		push	{r4, r5, r6, lr}
 807              		.cfi_def_cfa_offset 16
 808              		.cfi_offset 4, -16
 809              		.cfi_offset 5, -12
 810              		.cfi_offset 6, -8
 811              		.cfi_offset 14, -4
 812 051a 82B0     		sub	sp, sp, #8
 813              		.cfi_def_cfa_offset 24
 720:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 814              		.loc 1 720 0
 815 051c 0024     		movs	r4, #0
 721:drivers/inv_mpu.c ****             continue;
 816              		.loc 1 721 0
 817 051e 104D     		ldr	r5, .L74
 723:drivers/inv_mpu.c ****             return -1;
 818              		.loc 1 723 0
 819 0520 0126     		movs	r6, #1
 820 0522 05E0     		b	.L65
 821              	.LVL67:
 822              	.L64:
 720:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 823              		.loc 1 720 0 discriminator 2
 824 0524 0134     		adds	r4, r4, #1
 825              	.LVL68:
 826 0526 E4B2     		uxtb	r4, r4
 827              	.LVL69:
 828 0528 6868     		ldr	r0, [r5, #4]
ARM GAS  /tmp/cci8Vpl3.s 			page 54


 829 052a 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 830 052c A342     		cmp	r3, r4
 831 052e 12D9     		bls	.L73
 832              	.LVL70:
 833              	.L65:
 721:drivers/inv_mpu.c ****             continue;
 834              		.loc 1 721 0
 835 0530 2B68     		ldr	r3, [r5]
 836 0532 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 837 0534 A242     		cmp	r2, r4
 838 0536 F5D0     		beq	.L64
 721:drivers/inv_mpu.c ****             continue;
 839              		.loc 1 721 0 is_stmt 0 discriminator 1
 840 0538 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 841 053a A342     		cmp	r3, r4
 842 053c F2D0     		beq	.L64
 723:drivers/inv_mpu.c ****             return -1;
 843              		.loc 1 723 0 is_stmt 1
 844 053e 0DF10703 		add	r3, sp, #7
 845 0542 3246     		mov	r2, r6
 846 0544 2146     		mov	r1, r4
 847 0546 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 848 0548 FFF7FEFF 		bl	i2cRead
 849              	.LVL71:
 850 054c 0028     		cmp	r0, #0
 851 054e E9D0     		beq	.L64
 724:drivers/inv_mpu.c ****         //log_i("%#5x: %#5x\r\n", ii, data);
 852              		.loc 1 724 0
 853 0550 4FF0FF30 		mov	r0, #-1
 854 0554 00E0     		b	.L62
 855              	.L73:
 727:drivers/inv_mpu.c **** }
 856              		.loc 1 727 0
 857 0556 0020     		movs	r0, #0
 858              	.L62:
 728:drivers/inv_mpu.c **** 
 859              		.loc 1 728 0
 860 0558 02B0     		add	sp, sp, #8
 861              		.cfi_def_cfa_offset 16
 862              		@ sp needed
 863 055a 70BD     		pop	{r4, r5, r6, pc}
 864              	.LVL72:
 865              	.L66:
 866              		.cfi_def_cfa_offset 0
 867              		.cfi_restore 4
 868              		.cfi_restore 5
 869              		.cfi_restore 6
 870              		.cfi_restore 14
 727:drivers/inv_mpu.c **** }
 871              		.loc 1 727 0
 872 055c 0020     		movs	r0, #0
 873 055e 7047     		bx	lr
 874              	.L75:
 875              		.align	2
 876              	.L74:
 877 0560 00000000 		.word	.LANCHOR0
 878              		.cfi_endproc
ARM GAS  /tmp/cci8Vpl3.s 			page 55


 879              	.LFE65:
 880              		.size	mpu_reg_dump, .-mpu_reg_dump
 881              		.align	1
 882              		.global	mpu_read_reg
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu softvfp
 887              		.type	mpu_read_reg, %function
 888              	mpu_read_reg:
 889              	.LFB66:
 738:drivers/inv_mpu.c ****     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
 890              		.loc 1 738 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              	.LVL73:
 739:drivers/inv_mpu.c ****         return -1;
 895              		.loc 1 739 0
 896 0564 0E4B     		ldr	r3, .L85
 897 0566 1B68     		ldr	r3, [r3]
 898 0568 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 899 056a 8242     		cmp	r2, r0
 900 056c 0FD0     		beq	.L78
 739:drivers/inv_mpu.c ****         return -1;
 901              		.loc 1 739 0 is_stmt 0 discriminator 1
 902 056e 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 903 0570 8342     		cmp	r3, r0
 904 0572 0FD0     		beq	.L79
 738:drivers/inv_mpu.c ****     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
 905              		.loc 1 738 0 is_stmt 1
 906 0574 10B5     		push	{r4, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 4, -8
 909              		.cfi_offset 14, -4
 741:drivers/inv_mpu.c ****         return -1;
 910              		.loc 1 741 0
 911 0576 0A4B     		ldr	r3, .L85
 912 0578 5C68     		ldr	r4, [r3, #4]
 913 057a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 914 057c 8342     		cmp	r3, r0
 915 057e 0CD9     		bls	.L80
 916 0580 0B46     		mov	r3, r1
 917 0582 0146     		mov	r1, r0
 918              	.LVL74:
 743:drivers/inv_mpu.c **** }
 919              		.loc 1 743 0
 920 0584 0122     		movs	r2, #1
 921 0586 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 922              	.LVL75:
 923 0588 FFF7FEFF 		bl	i2cRead
 924              	.LVL76:
 925 058c 10BD     		pop	{r4, pc}
 926              	.LVL77:
 927              	.L78:
 928              		.cfi_def_cfa_offset 0
 929              		.cfi_restore 4
ARM GAS  /tmp/cci8Vpl3.s 			page 56


 930              		.cfi_restore 14
 740:drivers/inv_mpu.c ****     if (reg >= st.hw->num_reg)
 931              		.loc 1 740 0
 932 058e 4FF0FF30 		mov	r0, #-1
 933              	.LVL78:
 934 0592 7047     		bx	lr
 935              	.LVL79:
 936              	.L79:
 937 0594 4FF0FF30 		mov	r0, #-1
 938              	.LVL80:
 939 0598 7047     		bx	lr
 940              	.LVL81:
 941              	.L80:
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 4, -8
 944              		.cfi_offset 14, -4
 742:drivers/inv_mpu.c ****     return i2c_read(st.hw->addr, reg, 1, data);
 945              		.loc 1 742 0
 946 059a 4FF0FF30 		mov	r0, #-1
 947              	.LVL82:
 744:drivers/inv_mpu.c **** 
 948              		.loc 1 744 0
 949 059e 10BD     		pop	{r4, pc}
 950              	.L86:
 951              		.align	2
 952              	.L85:
 953 05a0 00000000 		.word	.LANCHOR0
 954              		.cfi_endproc
 955              	.LFE66:
 956              		.size	mpu_read_reg, .-mpu_read_reg
 957              		.align	1
 958              		.global	mpu_get_gyro_reg
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 962              		.fpu softvfp
 963              		.type	mpu_get_gyro_reg, %function
 964              	mpu_get_gyro_reg:
 965              	.LFB69:
 974:drivers/inv_mpu.c ****     unsigned char tmp[6];
 966              		.loc 1 974 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 8
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              	.LVL83:
 977:drivers/inv_mpu.c ****         return -1;
 971              		.loc 1 977 0
 972 05a4 184B     		ldr	r3, .L95
 973 05a6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 974 05a8 13F0700F 		tst	r3, #112
 975 05ac 25D0     		beq	.L89
 974:drivers/inv_mpu.c ****     unsigned char tmp[6];
 976              		.loc 1 974 0
 977 05ae 10B5     		push	{r4, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 4, -8
 980              		.cfi_offset 14, -4
ARM GAS  /tmp/cci8Vpl3.s 			page 57


 981 05b0 82B0     		sub	sp, sp, #8
 982              		.cfi_def_cfa_offset 16
 983 05b2 0446     		mov	r4, r0
 980:drivers/inv_mpu.c ****         return -1;
 984              		.loc 1 980 0
 985 05b4 144B     		ldr	r3, .L95
 986 05b6 1968     		ldr	r1, [r3]
 987              	.LVL84:
 988 05b8 5868     		ldr	r0, [r3, #4]
 989              	.LVL85:
 990 05ba 6B46     		mov	r3, sp
 991 05bc 0622     		movs	r2, #6
 992 05be 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 993 05c0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 994 05c2 FFF7FEFF 		bl	i2cRead
 995              	.LVL86:
 996 05c6 0246     		mov	r2, r0
 997 05c8 D8B9     		cbnz	r0, .L90
 982:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
 998              		.loc 1 982 0
 999 05ca 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
 1000 05ce 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1001 05d2 43EA0123 		orr	r3, r3, r1, lsl #8
 1002 05d6 2380     		strh	r3, [r4]	@ movhi
 983:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
 1003              		.loc 1 983 0
 1004 05d8 9DF80210 		ldrb	r1, [sp, #2]	@ zero_extendqisi2
 1005 05dc 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1006 05e0 43EA0123 		orr	r3, r3, r1, lsl #8
 1007 05e4 6380     		strh	r3, [r4, #2]	@ movhi
 984:drivers/inv_mpu.c ****     if (timestamp)
 1008              		.loc 1 984 0
 1009 05e6 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 1010 05ea 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1011 05ee 43EA0123 		orr	r3, r3, r1, lsl #8
 1012 05f2 A380     		strh	r3, [r4, #4]	@ movhi
 1013              	.L87:
 988:drivers/inv_mpu.c **** 
 1014              		.loc 1 988 0
 1015 05f4 1046     		mov	r0, r2
 1016 05f6 02B0     		add	sp, sp, #8
 1017              		.cfi_def_cfa_offset 8
 1018              		@ sp needed
 1019 05f8 10BD     		pop	{r4, pc}
 1020              	.LVL87:
 1021              	.L89:
 1022              		.cfi_def_cfa_offset 0
 1023              		.cfi_restore 4
 1024              		.cfi_restore 14
 978:drivers/inv_mpu.c **** 
 1025              		.loc 1 978 0
 1026 05fa 4FF0FF32 		mov	r2, #-1
 988:drivers/inv_mpu.c **** 
 1027              		.loc 1 988 0
 1028 05fe 1046     		mov	r0, r2
 1029              	.LVL88:
 1030 0600 7047     		bx	lr
ARM GAS  /tmp/cci8Vpl3.s 			page 58


 1031              	.LVL89:
 1032              	.L90:
 1033              		.cfi_def_cfa_offset 16
 1034              		.cfi_offset 4, -8
 1035              		.cfi_offset 14, -4
 981:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
 1036              		.loc 1 981 0
 1037 0602 4FF0FF32 		mov	r2, #-1
 1038 0606 F5E7     		b	.L87
 1039              	.L96:
 1040              		.align	2
 1041              	.L95:
 1042 0608 00000000 		.word	.LANCHOR0
 1043              		.cfi_endproc
 1044              	.LFE69:
 1045              		.size	mpu_get_gyro_reg, .-mpu_get_gyro_reg
 1046              		.align	1
 1047              		.global	mpu_get_accel_reg
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu softvfp
 1052              		.type	mpu_get_accel_reg, %function
 1053              	mpu_get_accel_reg:
 1054              	.LFB70:
 997:drivers/inv_mpu.c ****     unsigned char tmp[6];
 1055              		.loc 1 997 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 8
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              	.LVL90:
1000:drivers/inv_mpu.c ****         return -1;
 1060              		.loc 1 1000 0
 1061 060c 184B     		ldr	r3, .L105
 1062 060e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1063 0610 13F0080F 		tst	r3, #8
 1064 0614 25D0     		beq	.L99
 997:drivers/inv_mpu.c ****     unsigned char tmp[6];
 1065              		.loc 1 997 0
 1066 0616 10B5     		push	{r4, lr}
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 4, -8
 1069              		.cfi_offset 14, -4
 1070 0618 82B0     		sub	sp, sp, #8
 1071              		.cfi_def_cfa_offset 16
 1072 061a 0446     		mov	r4, r0
1003:drivers/inv_mpu.c ****         return -1;
 1073              		.loc 1 1003 0
 1074 061c 144B     		ldr	r3, .L105
 1075 061e 1968     		ldr	r1, [r3]
 1076              	.LVL91:
 1077 0620 5868     		ldr	r0, [r3, #4]
 1078              	.LVL92:
 1079 0622 6B46     		mov	r3, sp
 1080 0624 0622     		movs	r2, #6
 1081 0626 497B     		ldrb	r1, [r1, #13]	@ zero_extendqisi2
 1082 0628 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  /tmp/cci8Vpl3.s 			page 59


 1083 062a FFF7FEFF 		bl	i2cRead
 1084              	.LVL93:
 1085 062e 0246     		mov	r2, r0
 1086 0630 D8B9     		cbnz	r0, .L100
1005:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
 1087              		.loc 1 1005 0
 1088 0632 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
 1089 0636 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1090 063a 43EA0123 		orr	r3, r3, r1, lsl #8
 1091 063e 2380     		strh	r3, [r4]	@ movhi
1006:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
 1092              		.loc 1 1006 0
 1093 0640 9DF80210 		ldrb	r1, [sp, #2]	@ zero_extendqisi2
 1094 0644 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1095 0648 43EA0123 		orr	r3, r3, r1, lsl #8
 1096 064c 6380     		strh	r3, [r4, #2]	@ movhi
1007:drivers/inv_mpu.c ****     if (timestamp)
 1097              		.loc 1 1007 0
 1098 064e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 1099 0652 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1100 0656 43EA0123 		orr	r3, r3, r1, lsl #8
 1101 065a A380     		strh	r3, [r4, #4]	@ movhi
 1102              	.L97:
1011:drivers/inv_mpu.c **** 
 1103              		.loc 1 1011 0
 1104 065c 1046     		mov	r0, r2
 1105 065e 02B0     		add	sp, sp, #8
 1106              		.cfi_def_cfa_offset 8
 1107              		@ sp needed
 1108 0660 10BD     		pop	{r4, pc}
 1109              	.LVL94:
 1110              	.L99:
 1111              		.cfi_def_cfa_offset 0
 1112              		.cfi_restore 4
 1113              		.cfi_restore 14
1001:drivers/inv_mpu.c **** 
 1114              		.loc 1 1001 0
 1115 0662 4FF0FF32 		mov	r2, #-1
1011:drivers/inv_mpu.c **** 
 1116              		.loc 1 1011 0
 1117 0666 1046     		mov	r0, r2
 1118              	.LVL95:
 1119 0668 7047     		bx	lr
 1120              	.LVL96:
 1121              	.L100:
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 4, -8
 1124              		.cfi_offset 14, -4
1004:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
 1125              		.loc 1 1004 0
 1126 066a 4FF0FF32 		mov	r2, #-1
 1127 066e F5E7     		b	.L97
 1128              	.L106:
 1129              		.align	2
 1130              	.L105:
 1131 0670 00000000 		.word	.LANCHOR0
 1132              		.cfi_endproc
ARM GAS  /tmp/cci8Vpl3.s 			page 60


 1133              	.LFE70:
 1134              		.size	mpu_get_accel_reg, .-mpu_get_accel_reg
 1135              		.global	__aeabi_i2f
 1136              		.global	__aeabi_fsub
 1137              		.global	__aeabi_fdiv
 1138              		.global	__aeabi_fadd
 1139              		.global	__aeabi_fmul
 1140              		.global	__aeabi_f2iz
 1141              		.align	1
 1142              		.global	mpu_get_temperature
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu softvfp
 1147              		.type	mpu_get_temperature, %function
 1148              	mpu_get_temperature:
 1149              	.LFB71:
1020:drivers/inv_mpu.c ****     unsigned char tmp[2];
 1150              		.loc 1 1020 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              	.LVL97:
 1155 0674 F0B5     		push	{r4, r5, r6, r7, lr}
 1156              		.cfi_def_cfa_offset 20
 1157              		.cfi_offset 4, -20
 1158              		.cfi_offset 5, -16
 1159              		.cfi_offset 6, -12
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0676 83B0     		sub	sp, sp, #12
 1163              		.cfi_def_cfa_offset 32
1024:drivers/inv_mpu.c ****         return -1;
 1164              		.loc 1 1024 0
 1165 0678 1F4B     		ldr	r3, .L112
 1166 067a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1167 067c 002B     		cmp	r3, #0
 1168 067e 34D0     		beq	.L109
 1169 0680 0646     		mov	r6, r0
1027:drivers/inv_mpu.c ****         return -1;
 1170              		.loc 1 1027 0
 1171 0682 1D4B     		ldr	r3, .L112
 1172 0684 1968     		ldr	r1, [r3]
 1173              	.LVL98:
 1174 0686 5868     		ldr	r0, [r3, #4]
 1175              	.LVL99:
 1176 0688 01AB     		add	r3, sp, #4
 1177 068a 0222     		movs	r2, #2
 1178 068c 897B     		ldrb	r1, [r1, #14]	@ zero_extendqisi2
 1179 068e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1180 0690 FFF7FEFF 		bl	i2cRead
 1181              	.LVL100:
 1182 0694 0546     		mov	r5, r0
 1183 0696 58BB     		cbnz	r0, .L110
 1184              	.LVL101:
1033:drivers/inv_mpu.c ****     return 0;
 1185              		.loc 1 1033 0
ARM GAS  /tmp/cci8Vpl3.s 			page 61


 1186 0698 174B     		ldr	r3, .L112
 1187 069a 5C68     		ldr	r4, [r3, #4]
1029:drivers/inv_mpu.c ****     if (timestamp)
 1188              		.loc 1 1029 0
 1189 069c 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 1190 06a0 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1191 06a4 43EA0020 		orr	r0, r3, r0, lsl #8
1033:drivers/inv_mpu.c ****     return 0;
 1192              		.loc 1 1033 0
 1193 06a8 00B2     		sxth	r0, r0
 1194 06aa FFF7FEFF 		bl	__aeabi_i2f
 1195              	.LVL102:
 1196 06ae 0746     		mov	r7, r0
 1197 06b0 B4F90800 		ldrsh	r0, [r4, #8]
 1198 06b4 FFF7FEFF 		bl	__aeabi_i2f
 1199              	.LVL103:
 1200 06b8 0146     		mov	r1, r0
 1201 06ba 3846     		mov	r0, r7
 1202 06bc FFF7FEFF 		bl	__aeabi_fsub
 1203              	.LVL104:
 1204 06c0 0746     		mov	r7, r0
 1205 06c2 E088     		ldrh	r0, [r4, #6]
 1206 06c4 FFF7FEFF 		bl	__aeabi_i2f
 1207              	.LVL105:
 1208 06c8 0146     		mov	r1, r0
 1209 06ca 3846     		mov	r0, r7
 1210 06cc FFF7FEFF 		bl	__aeabi_fdiv
 1211              	.LVL106:
 1212 06d0 0A49     		ldr	r1, .L112+4
 1213 06d2 FFF7FEFF 		bl	__aeabi_fadd
 1214              	.LVL107:
 1215 06d6 4FF08F41 		mov	r1, #1199570944
 1216 06da FFF7FEFF 		bl	__aeabi_fmul
 1217              	.LVL108:
 1218 06de FFF7FEFF 		bl	__aeabi_f2iz
 1219              	.LVL109:
 1220 06e2 3060     		str	r0, [r6]
 1221              	.LVL110:
 1222              	.L107:
1035:drivers/inv_mpu.c **** 
 1223              		.loc 1 1035 0
 1224 06e4 2846     		mov	r0, r5
 1225 06e6 03B0     		add	sp, sp, #12
 1226              		.cfi_remember_state
 1227              		.cfi_def_cfa_offset 20
 1228              		@ sp needed
 1229 06e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1230              	.LVL111:
 1231              	.L109:
 1232              		.cfi_restore_state
1025:drivers/inv_mpu.c **** 
 1233              		.loc 1 1025 0
 1234 06ea 4FF0FF35 		mov	r5, #-1
 1235 06ee F9E7     		b	.L107
 1236              	.LVL112:
 1237              	.L110:
1028:drivers/inv_mpu.c ****     raw = (tmp[0] << 8) | tmp[1];
ARM GAS  /tmp/cci8Vpl3.s 			page 62


 1238              		.loc 1 1028 0
 1239 06f0 4FF0FF35 		mov	r5, #-1
 1240 06f4 F6E7     		b	.L107
 1241              	.L113:
 1242 06f6 00BF     		.align	2
 1243              	.L112:
 1244 06f8 00000000 		.word	.LANCHOR0
 1245 06fc 00000C42 		.word	1108082688
 1246              		.cfi_endproc
 1247              	.LFE71:
 1248              		.size	mpu_get_temperature, .-mpu_get_temperature
 1249              		.align	1
 1250              		.global	mpu_set_accel_bias
 1251              		.syntax unified
 1252              		.thumb
 1253              		.thumb_func
 1254              		.fpu softvfp
 1255              		.type	mpu_set_accel_bias, %function
 1256              	mpu_set_accel_bias:
 1257              	.LFB72:
1045:drivers/inv_mpu.c ****     unsigned char data[6];
 1258              		.loc 1 1045 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262              	.LVL113:
1051:drivers/inv_mpu.c ****         return -1;
 1263              		.loc 1 1051 0
 1264 0700 0028     		cmp	r0, #0
 1265 0702 76D0     		beq	.L117
1045:drivers/inv_mpu.c ****     unsigned char data[6];
 1266              		.loc 1 1045 0
 1267 0704 70B5     		push	{r4, r5, r6, lr}
 1268              		.cfi_def_cfa_offset 16
 1269              		.cfi_offset 4, -16
 1270              		.cfi_offset 5, -12
 1271              		.cfi_offset 6, -8
 1272              		.cfi_offset 14, -4
 1273 0706 82B0     		sub	sp, sp, #8
 1274              		.cfi_def_cfa_offset 24
 1275 0708 0546     		mov	r5, r0
1053:drivers/inv_mpu.c ****         return 0;
 1276              		.loc 1 1053 0
 1277 070a 0368     		ldr	r3, [r0]
 1278 070c 23B9     		cbnz	r3, .L116
1053:drivers/inv_mpu.c ****         return 0;
 1279              		.loc 1 1053 0 is_stmt 0 discriminator 1
 1280 070e 4368     		ldr	r3, [r0, #4]
 1281 0710 13B9     		cbnz	r3, .L116
1053:drivers/inv_mpu.c ****         return 0;
 1282              		.loc 1 1053 0 discriminator 2
 1283 0712 8368     		ldr	r3, [r0, #8]
 1284 0714 002B     		cmp	r3, #0
 1285 0716 6FD0     		beq	.L118
 1286              	.L116:
1056:drivers/inv_mpu.c ****         return -1;
 1287              		.loc 1 1056 0 is_stmt 1
ARM GAS  /tmp/cci8Vpl3.s 			page 63


 1288 0718 3B4B     		ldr	r3, .L125
 1289 071a 5868     		ldr	r0, [r3, #4]
 1290              	.LVL114:
 1291 071c 6B46     		mov	r3, sp
 1292 071e 0322     		movs	r2, #3
 1293 0720 1146     		mov	r1, r2
 1294 0722 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1295 0724 FFF7FEFF 		bl	i2cRead
 1296              	.LVL115:
 1297 0728 0028     		cmp	r0, #0
 1298 072a 67D1     		bne	.L119
 1299              	.LVL116:
1062:drivers/inv_mpu.c ****     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
 1300              		.loc 1 1062 0
 1301 072c 2C68     		ldr	r4, [r5]
 1302 072e 6400     		lsls	r4, r4, #1
1058:drivers/inv_mpu.c ****     fg[1] = ((data[1] >> 4) + 8) & 0xf;
 1303              		.loc 1 1058 0
 1304 0730 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 1305 0734 1B09     		lsrs	r3, r3, #4
 1306 0736 0833     		adds	r3, r3, #8
1062:drivers/inv_mpu.c ****     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
 1307              		.loc 1 1062 0
 1308 0738 03F00F03 		and	r3, r3, #15
 1309 073c 4033     		adds	r3, r3, #64
 1310 073e 94FBF3F4 		sdiv	r4, r4, r3
 1311              	.LVL117:
1063:drivers/inv_mpu.c ****     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
 1312              		.loc 1 1063 0
 1313 0742 6A68     		ldr	r2, [r5, #4]
 1314 0744 5200     		lsls	r2, r2, #1
1059:drivers/inv_mpu.c ****     fg[2] = ((data[2] >> 4) + 8) & 0xf;
 1315              		.loc 1 1059 0
 1316 0746 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1317 074a 1B09     		lsrs	r3, r3, #4
 1318 074c 0833     		adds	r3, r3, #8
1063:drivers/inv_mpu.c ****     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
 1319              		.loc 1 1063 0
 1320 074e 03F00F03 		and	r3, r3, #15
 1321 0752 4033     		adds	r3, r3, #64
 1322 0754 92FBF3F6 		sdiv	r6, r2, r3
 1323              	.LVL118:
1064:drivers/inv_mpu.c **** 
 1324              		.loc 1 1064 0
 1325 0758 AD68     		ldr	r5, [r5, #8]
 1326              	.LVL119:
 1327 075a 6D00     		lsls	r5, r5, #1
1060:drivers/inv_mpu.c **** 
 1328              		.loc 1 1060 0
 1329 075c 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 1330 0760 1B09     		lsrs	r3, r3, #4
 1331 0762 0833     		adds	r3, r3, #8
1064:drivers/inv_mpu.c **** 
 1332              		.loc 1 1064 0
 1333 0764 03F00F03 		and	r3, r3, #15
 1334 0768 4033     		adds	r3, r3, #64
 1335 076a 95FBF3F5 		sdiv	r5, r5, r3
ARM GAS  /tmp/cci8Vpl3.s 			page 64


 1336              	.LVL120:
1066:drivers/inv_mpu.c ****         return -1;
 1337              		.loc 1 1066 0
 1338 076e 264B     		ldr	r3, .L125
 1339 0770 5868     		ldr	r0, [r3, #4]
 1340 0772 6B46     		mov	r3, sp
 1341 0774 0622     		movs	r2, #6
 1342 0776 1146     		mov	r1, r2
 1343 0778 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1344 077a FFF7FEFF 		bl	i2cRead
 1345              	.LVL121:
 1346 077e 0028     		cmp	r0, #0
 1347 0780 3FD1     		bne	.L120
 1348              	.LVL122:
1069:drivers/inv_mpu.c ****     got_accel[1] = ((short)data[2] << 8) | data[3];
 1349              		.loc 1 1069 0
 1350 0782 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 1351 0786 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1352 078a 43EA0223 		orr	r3, r3, r2, lsl #8
1073:drivers/inv_mpu.c ****     accel_hw[1] += got_accel[1];
 1353              		.loc 1 1073 0
 1354 078e 1C44     		add	r4, r4, r3
 1355              	.LVL123:
 1356 0790 A4B2     		uxth	r4, r4
 1357              	.LVL124:
1070:drivers/inv_mpu.c ****     got_accel[2] = ((short)data[4] << 8) | data[5];
 1358              		.loc 1 1070 0
 1359 0792 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 1360 0796 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 1361 079a 42EA0322 		orr	r2, r2, r3, lsl #8
1074:drivers/inv_mpu.c ****     accel_hw[2] += got_accel[2];
 1362              		.loc 1 1074 0
 1363 079e 3244     		add	r2, r2, r6
 1364 07a0 92B2     		uxth	r2, r2
 1365              	.LVL125:
1071:drivers/inv_mpu.c **** 
 1366              		.loc 1 1071 0
 1367 07a2 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 1368 07a6 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1369 07aa 43EA0123 		orr	r3, r3, r1, lsl #8
1075:drivers/inv_mpu.c **** 
 1370              		.loc 1 1075 0
 1371 07ae 2B44     		add	r3, r3, r5
 1372 07b0 9BB2     		uxth	r3, r3
 1373              	.LVL126:
1077:drivers/inv_mpu.c ****     data[1] = (accel_hw[0]) & 0xff;
 1374              		.loc 1 1077 0
 1375 07b2 44F30721 		sbfx	r1, r4, #8, #8
 1376 07b6 8DF80010 		strb	r1, [sp]
 1377              	.LVL127:
1078:drivers/inv_mpu.c ****     data[2] = (accel_hw[1] >> 8) & 0xff;
 1378              		.loc 1 1078 0
 1379 07ba 8DF80140 		strb	r4, [sp, #1]
1079:drivers/inv_mpu.c ****     data[3] = (accel_hw[1]) & 0xff;
 1380              		.loc 1 1079 0
 1381 07be 42F30721 		sbfx	r1, r2, #8, #8
 1382 07c2 8DF80210 		strb	r1, [sp, #2]
ARM GAS  /tmp/cci8Vpl3.s 			page 65


 1383              	.LVL128:
1080:drivers/inv_mpu.c ****     data[4] = (accel_hw[2] >> 8) & 0xff;
 1384              		.loc 1 1080 0
 1385 07c6 8DF80320 		strb	r2, [sp, #3]
1081:drivers/inv_mpu.c ****     data[5] = (accel_hw[2]) & 0xff;
 1386              		.loc 1 1081 0
 1387 07ca 43F30722 		sbfx	r2, r3, #8, #8
 1388              	.LVL129:
 1389 07ce 8DF80420 		strb	r2, [sp, #4]
 1390              	.LVL130:
1082:drivers/inv_mpu.c **** 
 1391              		.loc 1 1082 0
 1392 07d2 8DF80530 		strb	r3, [sp, #5]
1084:drivers/inv_mpu.c ****         return -1;
 1393              		.loc 1 1084 0
 1394 07d6 0C4B     		ldr	r3, .L125
 1395              	.LVL131:
 1396 07d8 5868     		ldr	r0, [r3, #4]
 1397 07da 6B46     		mov	r3, sp
 1398 07dc 0622     		movs	r2, #6
 1399 07de 1146     		mov	r1, r2
 1400 07e0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1401 07e2 FFF7FEFF 		bl	i2cWrite
 1402              	.LVL132:
 1403 07e6 0030     		adds	r0, r0, #0
 1404 07e8 18BF     		it	ne
 1405 07ea 0120     		movne	r0, #1
 1406 07ec 4042     		negs	r0, r0
 1407              	.LVL133:
 1408              	.L114:
1087:drivers/inv_mpu.c **** 
 1409              		.loc 1 1087 0
 1410 07ee 02B0     		add	sp, sp, #8
 1411              		.cfi_def_cfa_offset 16
 1412              		@ sp needed
 1413 07f0 70BD     		pop	{r4, r5, r6, pc}
 1414              	.LVL134:
 1415              	.L117:
 1416              		.cfi_def_cfa_offset 0
 1417              		.cfi_restore 4
 1418              		.cfi_restore 5
 1419              		.cfi_restore 6
 1420              		.cfi_restore 14
1052:drivers/inv_mpu.c ****     if (!accel_bias[0] && !accel_bias[1] && !accel_bias[2])
 1421              		.loc 1 1052 0
 1422 07f2 4FF0FF30 		mov	r0, #-1
 1423              	.LVL135:
 1424 07f6 7047     		bx	lr
 1425              	.LVL136:
 1426              	.L118:
 1427              		.cfi_def_cfa_offset 24
 1428              		.cfi_offset 4, -16
 1429              		.cfi_offset 5, -12
 1430              		.cfi_offset 6, -8
 1431              		.cfi_offset 14, -4
1054:drivers/inv_mpu.c **** 
 1432              		.loc 1 1054 0
ARM GAS  /tmp/cci8Vpl3.s 			page 66


 1433 07f8 0020     		movs	r0, #0
 1434              	.LVL137:
 1435 07fa F8E7     		b	.L114
 1436              	.L119:
1057:drivers/inv_mpu.c ****     fg[0] = ((data[0] >> 4) + 8) & 0xf;
 1437              		.loc 1 1057 0
 1438 07fc 4FF0FF30 		mov	r0, #-1
 1439 0800 F5E7     		b	.L114
 1440              	.LVL138:
 1441              	.L120:
1067:drivers/inv_mpu.c **** 
 1442              		.loc 1 1067 0
 1443 0802 4FF0FF30 		mov	r0, #-1
 1444 0806 F2E7     		b	.L114
 1445              	.L126:
 1446              		.align	2
 1447              	.L125:
 1448 0808 00000000 		.word	.LANCHOR0
 1449              		.cfi_endproc
 1450              	.LFE72:
 1451              		.size	mpu_set_accel_bias, .-mpu_set_accel_bias
 1452              		.align	1
 1453              		.global	mpu_reset_fifo
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu softvfp
 1458              		.type	mpu_reset_fifo, %function
 1459              	mpu_reset_fifo:
 1460              	.LFB73:
1094:drivers/inv_mpu.c ****     unsigned char data;
 1461              		.loc 1 1094 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 8
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
1097:drivers/inv_mpu.c ****         return -1;
 1465              		.loc 1 1097 0
 1466 080c 774B     		ldr	r3, .L152
 1467 080e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1468 0810 002B     		cmp	r3, #0
 1469 0812 00F0CC80 		beq	.L138
1094:drivers/inv_mpu.c ****     unsigned char data;
 1470              		.loc 1 1094 0
 1471 0816 00B5     		push	{lr}
 1472              		.cfi_def_cfa_offset 4
 1473              		.cfi_offset 14, -4
 1474 0818 83B0     		sub	sp, sp, #12
 1475              		.cfi_def_cfa_offset 16
1100:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
 1476              		.loc 1 1100 0
 1477 081a 02AB     		add	r3, sp, #8
 1478 081c 0022     		movs	r2, #0
 1479 081e 03F8012D 		strb	r2, [r3, #-1]!
1101:drivers/inv_mpu.c ****         return -1;
 1480              		.loc 1 1101 0
 1481 0822 724A     		ldr	r2, .L152
 1482 0824 1168     		ldr	r1, [r2]
ARM GAS  /tmp/cci8Vpl3.s 			page 67


 1483 0826 5068     		ldr	r0, [r2, #4]
 1484 0828 0122     		movs	r2, #1
 1485 082a C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 1486 082c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1487 082e FFF7FEFF 		bl	i2cWrite
 1488              	.LVL139:
 1489 0832 0028     		cmp	r0, #0
 1490 0834 40F0BE80 		bne	.L139
1103:drivers/inv_mpu.c ****         return -1;
 1491              		.loc 1 1103 0
 1492 0838 6C4B     		ldr	r3, .L152
 1493 083a 1968     		ldr	r1, [r3]
 1494 083c 5868     		ldr	r0, [r3, #4]
 1495 083e 0DF10703 		add	r3, sp, #7
 1496 0842 0122     		movs	r2, #1
 1497 0844 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1498 0846 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1499 0848 FFF7FEFF 		bl	i2cWrite
 1500              	.LVL140:
 1501 084c 0028     		cmp	r0, #0
 1502 084e 40F0B480 		bne	.L140
1105:drivers/inv_mpu.c ****         return -1;
 1503              		.loc 1 1105 0
 1504 0852 664B     		ldr	r3, .L152
 1505 0854 1968     		ldr	r1, [r3]
 1506 0856 5868     		ldr	r0, [r3, #4]
 1507 0858 0DF10703 		add	r3, sp, #7
 1508 085c 0122     		movs	r2, #1
 1509 085e 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1510 0860 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1511 0862 FFF7FEFF 		bl	i2cWrite
 1512              	.LVL141:
 1513 0866 0028     		cmp	r0, #0
 1514 0868 40F0AA80 		bne	.L141
1108:drivers/inv_mpu.c ****         data = BIT_FIFO_RST | BIT_DMP_RST;
 1515              		.loc 1 1108 0
 1516 086c 5F4B     		ldr	r3, .L152
 1517 086e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1518 0872 002B     		cmp	r3, #0
 1519 0874 4FD0     		beq	.L129
1109:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1520              		.loc 1 1109 0
 1521 0876 02AB     		add	r3, sp, #8
 1522 0878 0C22     		movs	r2, #12
 1523 087a 03F8012D 		strb	r2, [r3, #-1]!
1110:drivers/inv_mpu.c ****             return -1;
 1524              		.loc 1 1110 0
 1525 087e 5B4A     		ldr	r2, .L152
 1526 0880 1168     		ldr	r1, [r2]
 1527 0882 5068     		ldr	r0, [r2, #4]
 1528 0884 0122     		movs	r2, #1
 1529 0886 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1530 0888 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1531 088a FFF7FEFF 		bl	i2cWrite
 1532              	.LVL142:
 1533 088e 0028     		cmp	r0, #0
 1534 0890 40F09980 		bne	.L142
ARM GAS  /tmp/cci8Vpl3.s 			page 68


1113:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
 1535              		.loc 1 1113 0
 1536 0894 C023     		movs	r3, #192
 1537 0896 8DF80730 		strb	r3, [sp, #7]
1114:drivers/inv_mpu.c ****             data |= BIT_AUX_IF_EN;
 1538              		.loc 1 1114 0
 1539 089a 544B     		ldr	r3, .L152
 1540 089c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1541 089e 13F0010F 		tst	r3, #1
1115:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1542              		.loc 1 1115 0
 1543 08a2 1CBF     		itt	ne
 1544 08a4 E023     		movne	r3, #224
 1545 08a6 8DF80730 		strbne	r3, [sp, #7]
1116:drivers/inv_mpu.c ****             return -1;
 1546              		.loc 1 1116 0
 1547 08aa 504B     		ldr	r3, .L152
 1548 08ac 1968     		ldr	r1, [r3]
 1549 08ae 5868     		ldr	r0, [r3, #4]
 1550 08b0 0DF10703 		add	r3, sp, #7
 1551 08b4 0122     		movs	r2, #1
 1552 08b6 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1553 08b8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1554 08ba FFF7FEFF 		bl	i2cWrite
 1555              	.LVL143:
 1556 08be 0028     		cmp	r0, #0
 1557 08c0 40F08480 		bne	.L143
1118:drivers/inv_mpu.c ****             data = BIT_DMP_INT_EN;
 1558              		.loc 1 1118 0
 1559 08c4 494B     		ldr	r3, .L152
 1560 08c6 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1561 08c8 0BB3     		cbz	r3, .L131
1119:drivers/inv_mpu.c ****         else
 1562              		.loc 1 1119 0
 1563 08ca 0223     		movs	r3, #2
 1564 08cc 8DF80730 		strb	r3, [sp, #7]
 1565              	.L132:
1122:drivers/inv_mpu.c ****             return -1;
 1566              		.loc 1 1122 0
 1567 08d0 464B     		ldr	r3, .L152
 1568 08d2 1968     		ldr	r1, [r3]
 1569 08d4 5868     		ldr	r0, [r3, #4]
 1570 08d6 0DF10703 		add	r3, sp, #7
 1571 08da 0122     		movs	r2, #1
 1572 08dc C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 1573 08de 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1574 08e0 FFF7FEFF 		bl	i2cWrite
 1575              	.LVL144:
 1576 08e4 0028     		cmp	r0, #0
 1577 08e6 74D1     		bne	.L144
1124:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
 1578              		.loc 1 1124 0
 1579 08e8 02AB     		add	r3, sp, #8
 1580 08ea 0022     		movs	r2, #0
 1581 08ec 03F8012D 		strb	r2, [r3, #-1]!
1125:drivers/inv_mpu.c ****             return -1;
 1582              		.loc 1 1125 0
ARM GAS  /tmp/cci8Vpl3.s 			page 69


 1583 08f0 3E4A     		ldr	r2, .L152
 1584 08f2 1168     		ldr	r1, [r2]
 1585 08f4 5068     		ldr	r0, [r2, #4]
 1586 08f6 0122     		movs	r2, #1
 1587 08f8 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1588 08fa 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1589 08fc FFF7FEFF 		bl	i2cWrite
 1590              	.LVL145:
 1591 0900 0030     		adds	r0, r0, #0
 1592 0902 18BF     		it	ne
 1593 0904 0120     		movne	r0, #1
 1594 0906 4042     		negs	r0, r0
 1595              	.L127:
1148:drivers/inv_mpu.c **** 
 1596              		.loc 1 1148 0
 1597 0908 03B0     		add	sp, sp, #12
 1598              		.cfi_remember_state
 1599              		.cfi_def_cfa_offset 4
 1600              		@ sp needed
 1601 090a 5DF804FB 		ldr	pc, [sp], #4
 1602              	.L131:
 1603              		.cfi_restore_state
1121:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
 1604              		.loc 1 1121 0
 1605 090e 0023     		movs	r3, #0
 1606 0910 8DF80730 		strb	r3, [sp, #7]
 1607 0914 DCE7     		b	.L132
 1608              	.L129:
1128:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1609              		.loc 1 1128 0
 1610 0916 02AB     		add	r3, sp, #8
 1611 0918 0422     		movs	r2, #4
 1612 091a 03F8012D 		strb	r2, [r3, #-1]!
1129:drivers/inv_mpu.c ****             return -1;
 1613              		.loc 1 1129 0
 1614 091e 334A     		ldr	r2, .L152
 1615 0920 1168     		ldr	r1, [r2]
 1616 0922 5068     		ldr	r0, [r2, #4]
 1617 0924 0122     		movs	r2, #1
 1618 0926 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1619 0928 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1620 092a FFF7FEFF 		bl	i2cWrite
 1621              	.LVL146:
 1622 092e 0028     		cmp	r0, #0
 1623 0930 52D1     		bne	.L145
1131:drivers/inv_mpu.c ****             data = BIT_FIFO_EN;
 1624              		.loc 1 1131 0
 1625 0932 2E4B     		ldr	r3, .L152
 1626 0934 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1627 0936 23B9     		cbnz	r3, .L133
1131:drivers/inv_mpu.c ****             data = BIT_FIFO_EN;
 1628              		.loc 1 1131 0 is_stmt 0 discriminator 1
 1629 0938 2C4B     		ldr	r3, .L152
 1630 093a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1631 093c 13F0010F 		tst	r3, #1
 1632 0940 2DD1     		bne	.L134
 1633              	.L133:
ARM GAS  /tmp/cci8Vpl3.s 			page 70


1132:drivers/inv_mpu.c ****         else
 1634              		.loc 1 1132 0 is_stmt 1
 1635 0942 4023     		movs	r3, #64
 1636 0944 8DF80730 		strb	r3, [sp, #7]
 1637              	.L135:
1135:drivers/inv_mpu.c ****             return -1;
 1638              		.loc 1 1135 0
 1639 0948 284B     		ldr	r3, .L152
 1640 094a 1968     		ldr	r1, [r3]
 1641 094c 5868     		ldr	r0, [r3, #4]
 1642 094e 0DF10703 		add	r3, sp, #7
 1643 0952 0122     		movs	r2, #1
 1644 0954 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1645 0956 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1646 0958 FFF7FEFF 		bl	i2cWrite
 1647              	.LVL147:
 1648 095c 0028     		cmp	r0, #0
 1649 095e 3ED1     		bne	.L146
1138:drivers/inv_mpu.c ****             data = BIT_DATA_RDY_EN;
 1650              		.loc 1 1138 0
 1651 0960 224B     		ldr	r3, .L152
 1652 0962 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1653 0964 FBB1     		cbz	r3, .L136
1139:drivers/inv_mpu.c ****         else
 1654              		.loc 1 1139 0
 1655 0966 0123     		movs	r3, #1
 1656 0968 8DF80730 		strb	r3, [sp, #7]
 1657              	.L137:
1142:drivers/inv_mpu.c ****             return -1;
 1658              		.loc 1 1142 0
 1659 096c 1F4B     		ldr	r3, .L152
 1660 096e 1968     		ldr	r1, [r3]
 1661 0970 5868     		ldr	r0, [r3, #4]
 1662 0972 0DF10703 		add	r3, sp, #7
 1663 0976 0122     		movs	r2, #1
 1664 0978 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 1665 097a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1666 097c FFF7FEFF 		bl	i2cWrite
 1667              	.LVL148:
 1668 0980 80BB     		cbnz	r0, .L147
1144:drivers/inv_mpu.c ****             return -1;
 1669              		.loc 1 1144 0
 1670 0982 1A4B     		ldr	r3, .L152
 1671 0984 1968     		ldr	r1, [r3]
 1672 0986 5868     		ldr	r0, [r3, #4]
 1673 0988 1033     		adds	r3, r3, #16
 1674 098a 0122     		movs	r2, #1
 1675 098c 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1676 098e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1677 0990 FFF7FEFF 		bl	i2cWrite
 1678              	.LVL149:
 1679 0994 0030     		adds	r0, r0, #0
 1680 0996 18BF     		it	ne
 1681 0998 0120     		movne	r0, #1
 1682 099a 4042     		negs	r0, r0
 1683 099c B4E7     		b	.L127
 1684              	.L134:
ARM GAS  /tmp/cci8Vpl3.s 			page 71


1134:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1685              		.loc 1 1134 0
 1686 099e 6023     		movs	r3, #96
 1687 09a0 8DF80730 		strb	r3, [sp, #7]
 1688 09a4 D0E7     		b	.L135
 1689              	.L136:
1141:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
 1690              		.loc 1 1141 0
 1691 09a6 0023     		movs	r3, #0
 1692 09a8 8DF80730 		strb	r3, [sp, #7]
 1693 09ac DEE7     		b	.L137
 1694              	.L138:
 1695              		.cfi_def_cfa_offset 0
 1696              		.cfi_restore 14
1098:drivers/inv_mpu.c **** 
 1697              		.loc 1 1098 0
 1698 09ae 4FF0FF30 		mov	r0, #-1
 1699 09b2 7047     		bx	lr
 1700              	.L139:
 1701              		.cfi_def_cfa_offset 16
 1702              		.cfi_offset 14, -4
1102:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
 1703              		.loc 1 1102 0
 1704 09b4 4FF0FF30 		mov	r0, #-1
 1705 09b8 A6E7     		b	.L127
 1706              	.L140:
1104:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1707              		.loc 1 1104 0
 1708 09ba 4FF0FF30 		mov	r0, #-1
 1709 09be A3E7     		b	.L127
 1710              	.L141:
1106:drivers/inv_mpu.c **** 
 1711              		.loc 1 1106 0
 1712 09c0 4FF0FF30 		mov	r0, #-1
 1713 09c4 A0E7     		b	.L127
 1714              	.L142:
1111:drivers/inv_mpu.c ****        
 1715              		.loc 1 1111 0
 1716 09c6 4FF0FF30 		mov	r0, #-1
 1717 09ca 9DE7     		b	.L127
 1718              	.L143:
1117:drivers/inv_mpu.c ****         if (st.chip_cfg.int_enable)
 1719              		.loc 1 1117 0
 1720 09cc 4FF0FF30 		mov	r0, #-1
 1721 09d0 9AE7     		b	.L127
 1722              	.L144:
1123:drivers/inv_mpu.c ****         data = 0;
 1723              		.loc 1 1123 0
 1724 09d2 4FF0FF30 		mov	r0, #-1
 1725 09d6 97E7     		b	.L127
 1726              	.L145:
1130:drivers/inv_mpu.c ****         if (st.chip_cfg.bypass_mode || !(st.chip_cfg.sensors & INV_XYZ_COMPASS))
 1727              		.loc 1 1130 0
 1728 09d8 4FF0FF30 		mov	r0, #-1
 1729 09dc 94E7     		b	.L127
 1730              	.L146:
1136:drivers/inv_mpu.c ****     
ARM GAS  /tmp/cci8Vpl3.s 			page 72


 1731              		.loc 1 1136 0
 1732 09de 4FF0FF30 		mov	r0, #-1
 1733 09e2 91E7     		b	.L127
 1734              	.L147:
1143:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &st.chip_cfg.fifo_enable))
 1735              		.loc 1 1143 0
 1736 09e4 4FF0FF30 		mov	r0, #-1
 1737 09e8 8EE7     		b	.L127
 1738              	.L153:
 1739 09ea 00BF     		.align	2
 1740              	.L152:
 1741 09ec 00000000 		.word	.LANCHOR0
 1742              		.cfi_endproc
 1743              	.LFE73:
 1744              		.size	mpu_reset_fifo, .-mpu_reset_fifo
 1745              		.align	1
 1746              		.global	mpu_get_gyro_fsr
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1750              		.fpu softvfp
 1751              		.type	mpu_get_gyro_fsr, %function
 1752              	mpu_get_gyro_fsr:
 1753              	.LFB74:
1156:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
 1754              		.loc 1 1156 0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 0
 1757              		@ frame_needed = 0, uses_anonymous_args = 0
 1758              		@ link register save eliminated.
 1759              	.LVL150:
1157:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
 1760              		.loc 1 1157 0
 1761 09f0 0D4B     		ldr	r3, .L162
 1762 09f2 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1763 09f4 032B     		cmp	r3, #3
 1764 09f6 13D8     		bhi	.L155
 1765 09f8 DFE803F0 		tbb	[pc, r3]
 1766              	.L157:
 1767 09fc 02       		.byte	(.L156-.L157)/2
 1768 09fd 06       		.byte	(.L158-.L157)/2
 1769 09fe 0A       		.byte	(.L159-.L157)/2
 1770 09ff 0E       		.byte	(.L160-.L157)/2
 1771              		.p2align 1
 1772              	.L156:
1159:drivers/inv_mpu.c ****         break;
 1773              		.loc 1 1159 0
 1774 0a00 FA23     		movs	r3, #250
 1775 0a02 0380     		strh	r3, [r0]	@ movhi
 1776              	.L161:
1175:drivers/inv_mpu.c **** 
 1777              		.loc 1 1175 0
 1778 0a04 0020     		movs	r0, #0
 1779              	.LVL151:
 1780 0a06 7047     		bx	lr
 1781              	.LVL152:
 1782              	.L158:
ARM GAS  /tmp/cci8Vpl3.s 			page 73


1162:drivers/inv_mpu.c ****         break;
 1783              		.loc 1 1162 0
 1784 0a08 4FF4FA73 		mov	r3, #500
 1785 0a0c 0380     		strh	r3, [r0]	@ movhi
1163:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
 1786              		.loc 1 1163 0
 1787 0a0e F9E7     		b	.L161
 1788              	.L159:
1165:drivers/inv_mpu.c ****         break;
 1789              		.loc 1 1165 0
 1790 0a10 4FF47A73 		mov	r3, #1000
 1791 0a14 0380     		strh	r3, [r0]	@ movhi
1166:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
 1792              		.loc 1 1166 0
 1793 0a16 F5E7     		b	.L161
 1794              	.L160:
1168:drivers/inv_mpu.c ****         break;
 1795              		.loc 1 1168 0
 1796 0a18 4FF4FA63 		mov	r3, #2000
 1797 0a1c 0380     		strh	r3, [r0]	@ movhi
1169:drivers/inv_mpu.c ****     default:
 1798              		.loc 1 1169 0
 1799 0a1e F1E7     		b	.L161
 1800              	.L155:
1171:drivers/inv_mpu.c ****         break;
 1801              		.loc 1 1171 0
 1802 0a20 0023     		movs	r3, #0
 1803 0a22 0380     		strh	r3, [r0]	@ movhi
1172:drivers/inv_mpu.c ****     }
 1804              		.loc 1 1172 0
 1805 0a24 EEE7     		b	.L161
 1806              	.L163:
 1807 0a26 00BF     		.align	2
 1808              	.L162:
 1809 0a28 00000000 		.word	.LANCHOR0
 1810              		.cfi_endproc
 1811              	.LFE74:
 1812              		.size	mpu_get_gyro_fsr, .-mpu_get_gyro_fsr
 1813              		.align	1
 1814              		.global	mpu_set_gyro_fsr
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu softvfp
 1819              		.type	mpu_set_gyro_fsr, %function
 1820              	mpu_set_gyro_fsr:
 1821              	.LFB75:
1183:drivers/inv_mpu.c ****     unsigned char data;
 1822              		.loc 1 1183 0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 8
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826              	.LVL153:
1186:drivers/inv_mpu.c ****         return -1;
 1827              		.loc 1 1186 0
 1828 0a2c 244B     		ldr	r3, .L181
 1829 0a2e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
ARM GAS  /tmp/cci8Vpl3.s 			page 74


 1830 0a30 002B     		cmp	r3, #0
 1831 0a32 38D0     		beq	.L172
1183:drivers/inv_mpu.c ****     unsigned char data;
 1832              		.loc 1 1183 0
 1833 0a34 00B5     		push	{lr}
 1834              		.cfi_def_cfa_offset 4
 1835              		.cfi_offset 14, -4
 1836 0a36 83B0     		sub	sp, sp, #12
 1837              		.cfi_def_cfa_offset 16
1189:drivers/inv_mpu.c ****     case 250:
 1838              		.loc 1 1189 0
 1839 0a38 B0F5FA7F 		cmp	r0, #500
 1840 0a3c 2BD0     		beq	.L166
 1841 0a3e 09D9     		bls	.L180
 1842 0a40 B0F57A7F 		cmp	r0, #1000
 1843 0a44 2BD0     		beq	.L169
 1844 0a46 B0F5FA6F 		cmp	r0, #2000
 1845 0a4a 30D1     		bne	.L173
1200:drivers/inv_mpu.c ****         break;
 1846              		.loc 1 1200 0
 1847 0a4c 1823     		movs	r3, #24
 1848 0a4e 8DF80730 		strb	r3, [sp, #7]
1201:drivers/inv_mpu.c ****     default:
 1849              		.loc 1 1201 0
 1850 0a52 04E0     		b	.L171
 1851              	.L180:
1189:drivers/inv_mpu.c ****     case 250:
 1852              		.loc 1 1189 0
 1853 0a54 FA28     		cmp	r0, #250
 1854 0a56 2AD1     		bne	.L173
1191:drivers/inv_mpu.c ****         break;
 1855              		.loc 1 1191 0
 1856 0a58 0023     		movs	r3, #0
 1857 0a5a 8DF80730 		strb	r3, [sp, #7]
 1858              	.L171:
1206:drivers/inv_mpu.c ****         return 0;
 1859              		.loc 1 1206 0
 1860 0a5e 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1861 0a62 174B     		ldr	r3, .L181
 1862 0a64 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1863 0a66 B3EBD20F 		cmp	r3, r2, lsr #3
 1864 0a6a 23D0     		beq	.L174
1208:drivers/inv_mpu.c ****         return -1;
 1865              		.loc 1 1208 0
 1866 0a6c 144B     		ldr	r3, .L181
 1867 0a6e 1968     		ldr	r1, [r3]
 1868 0a70 5868     		ldr	r0, [r3, #4]
 1869              	.LVL154:
 1870 0a72 0DF10703 		add	r3, sp, #7
 1871 0a76 0122     		movs	r2, #1
 1872 0a78 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 1873 0a7a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1874 0a7c FFF7FEFF 		bl	i2cWrite
 1875              	.LVL155:
 1876 0a80 0346     		mov	r3, r0
 1877 0a82 C8B9     		cbnz	r0, .L175
1210:drivers/inv_mpu.c ****     return 0;
ARM GAS  /tmp/cci8Vpl3.s 			page 75


 1878              		.loc 1 1210 0
 1879 0a84 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1880 0a88 D208     		lsrs	r2, r2, #3
 1881 0a8a 0D49     		ldr	r1, .L181
 1882 0a8c 0A72     		strb	r2, [r1, #8]
 1883              	.L164:
1212:drivers/inv_mpu.c **** 
 1884              		.loc 1 1212 0
 1885 0a8e 1846     		mov	r0, r3
 1886 0a90 03B0     		add	sp, sp, #12
 1887              		.cfi_remember_state
 1888              		.cfi_def_cfa_offset 4
 1889              		@ sp needed
 1890 0a92 5DF804FB 		ldr	pc, [sp], #4
 1891              	.LVL156:
 1892              	.L166:
 1893              		.cfi_restore_state
1194:drivers/inv_mpu.c ****         break;
 1894              		.loc 1 1194 0
 1895 0a96 0823     		movs	r3, #8
 1896 0a98 8DF80730 		strb	r3, [sp, #7]
1195:drivers/inv_mpu.c ****     case 1000:
 1897              		.loc 1 1195 0
 1898 0a9c DFE7     		b	.L171
 1899              	.L169:
1197:drivers/inv_mpu.c ****         break;
 1900              		.loc 1 1197 0
 1901 0a9e 1023     		movs	r3, #16
 1902 0aa0 8DF80730 		strb	r3, [sp, #7]
1198:drivers/inv_mpu.c ****     case 2000:
 1903              		.loc 1 1198 0
 1904 0aa4 DBE7     		b	.L171
 1905              	.L172:
 1906              		.cfi_def_cfa_offset 0
 1907              		.cfi_restore 14
1187:drivers/inv_mpu.c **** 
 1908              		.loc 1 1187 0
 1909 0aa6 4FF0FF33 		mov	r3, #-1
1212:drivers/inv_mpu.c **** 
 1910              		.loc 1 1212 0
 1911 0aaa 1846     		mov	r0, r3
 1912              	.LVL157:
 1913 0aac 7047     		bx	lr
 1914              	.LVL158:
 1915              	.L173:
 1916              		.cfi_def_cfa_offset 16
 1917              		.cfi_offset 14, -4
1203:drivers/inv_mpu.c ****     }
 1918              		.loc 1 1203 0
 1919 0aae 4FF0FF33 		mov	r3, #-1
 1920 0ab2 ECE7     		b	.L164
 1921              	.L174:
1207:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, &data))
 1922              		.loc 1 1207 0
 1923 0ab4 0023     		movs	r3, #0
 1924 0ab6 EAE7     		b	.L164
 1925              	.LVL159:
ARM GAS  /tmp/cci8Vpl3.s 			page 76


 1926              	.L175:
1209:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = data >> 3;
 1927              		.loc 1 1209 0
 1928 0ab8 4FF0FF33 		mov	r3, #-1
 1929 0abc E7E7     		b	.L164
 1930              	.L182:
 1931 0abe 00BF     		.align	2
 1932              	.L181:
 1933 0ac0 00000000 		.word	.LANCHOR0
 1934              		.cfi_endproc
 1935              	.LFE75:
 1936              		.size	mpu_set_gyro_fsr, .-mpu_set_gyro_fsr
 1937              		.align	1
 1938              		.global	mpu_get_accel_fsr
 1939              		.syntax unified
 1940              		.thumb
 1941              		.thumb_func
 1942              		.fpu softvfp
 1943              		.type	mpu_get_accel_fsr, %function
 1944              	mpu_get_accel_fsr:
 1945              	.LFB76:
1220:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
 1946              		.loc 1 1220 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 0
 1949              		@ frame_needed = 0, uses_anonymous_args = 0
 1950              		@ link register save eliminated.
 1951              	.LVL160:
1221:drivers/inv_mpu.c ****     case INV_FSR_2G:
 1952              		.loc 1 1221 0
 1953 0ac4 0F4B     		ldr	r3, .L193
 1954 0ac6 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1955 0ac8 032B     		cmp	r3, #3
 1956 0aca 16D8     		bhi	.L191
 1957 0acc DFE803F0 		tbb	[pc, r3]
 1958              	.L186:
 1959 0ad0 02       		.byte	(.L185-.L186)/2
 1960 0ad1 0C       		.byte	(.L187-.L186)/2
 1961 0ad2 0F       		.byte	(.L188-.L186)/2
 1962 0ad3 12       		.byte	(.L189-.L186)/2
 1963              		.p2align 1
 1964              	.L185:
1223:drivers/inv_mpu.c ****         break;
 1965              		.loc 1 1223 0
 1966 0ad4 0223     		movs	r3, #2
 1967 0ad6 0370     		strb	r3, [r0]
 1968              	.L190:
1237:drivers/inv_mpu.c ****         fsr[0] <<= 1;
 1969              		.loc 1 1237 0
 1970 0ad8 0A4B     		ldr	r3, .L193
 1971 0ada DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 1972 0adc 83B1     		cbz	r3, .L192
1238:drivers/inv_mpu.c ****     return 0;
 1973              		.loc 1 1238 0
 1974 0ade 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1975 0ae0 5B00     		lsls	r3, r3, #1
 1976 0ae2 0370     		strb	r3, [r0]
ARM GAS  /tmp/cci8Vpl3.s 			page 77


1239:drivers/inv_mpu.c **** }
 1977              		.loc 1 1239 0
 1978 0ae4 0020     		movs	r0, #0
 1979              	.LVL161:
 1980 0ae6 7047     		bx	lr
 1981              	.LVL162:
 1982              	.L187:
1226:drivers/inv_mpu.c ****         break;
 1983              		.loc 1 1226 0
 1984 0ae8 0423     		movs	r3, #4
 1985 0aea 0370     		strb	r3, [r0]
1227:drivers/inv_mpu.c ****     case INV_FSR_8G:
 1986              		.loc 1 1227 0
 1987 0aec F4E7     		b	.L190
 1988              	.L188:
1229:drivers/inv_mpu.c ****         break;
 1989              		.loc 1 1229 0
 1990 0aee 0823     		movs	r3, #8
 1991 0af0 0370     		strb	r3, [r0]
1230:drivers/inv_mpu.c ****     case INV_FSR_16G:
 1992              		.loc 1 1230 0
 1993 0af2 F1E7     		b	.L190
 1994              	.L189:
1232:drivers/inv_mpu.c ****         break;
 1995              		.loc 1 1232 0
 1996 0af4 1023     		movs	r3, #16
 1997 0af6 0370     		strb	r3, [r0]
1233:drivers/inv_mpu.c ****     default:
 1998              		.loc 1 1233 0
 1999 0af8 EEE7     		b	.L190
 2000              	.L191:
1235:drivers/inv_mpu.c ****     }
 2001              		.loc 1 1235 0
 2002 0afa 4FF0FF30 		mov	r0, #-1
 2003              	.LVL163:
 2004 0afe 7047     		bx	lr
 2005              	.LVL164:
 2006              	.L192:
1239:drivers/inv_mpu.c **** }
 2007              		.loc 1 1239 0
 2008 0b00 0020     		movs	r0, #0
 2009              	.LVL165:
1240:drivers/inv_mpu.c **** 
 2010              		.loc 1 1240 0
 2011 0b02 7047     		bx	lr
 2012              	.L194:
 2013              		.align	2
 2014              	.L193:
 2015 0b04 00000000 		.word	.LANCHOR0
 2016              		.cfi_endproc
 2017              	.LFE76:
 2018              		.size	mpu_get_accel_fsr, .-mpu_get_accel_fsr
 2019              		.align	1
 2020              		.global	mpu_set_accel_fsr
 2021              		.syntax unified
 2022              		.thumb
 2023              		.thumb_func
ARM GAS  /tmp/cci8Vpl3.s 			page 78


 2024              		.fpu softvfp
 2025              		.type	mpu_set_accel_fsr, %function
 2026              	mpu_set_accel_fsr:
 2027              	.LFB77:
1248:drivers/inv_mpu.c ****     unsigned char data;
 2028              		.loc 1 1248 0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 8
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 2032              	.LVL166:
1251:drivers/inv_mpu.c ****         return -1;
 2033              		.loc 1 1251 0
 2034 0b08 244B     		ldr	r3, .L211
 2035 0b0a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2036 0b0c 002B     		cmp	r3, #0
 2037 0b0e 39D0     		beq	.L203
1248:drivers/inv_mpu.c ****     unsigned char data;
 2038              		.loc 1 1248 0
 2039 0b10 00B5     		push	{lr}
 2040              		.cfi_def_cfa_offset 4
 2041              		.cfi_offset 14, -4
 2042 0b12 83B0     		sub	sp, sp, #12
 2043              		.cfi_def_cfa_offset 16
1254:drivers/inv_mpu.c ****     case 2:
 2044              		.loc 1 1254 0
 2045 0b14 0238     		subs	r0, r0, #2
 2046              	.LVL167:
 2047 0b16 0E28     		cmp	r0, #14
 2048 0b18 38D8     		bhi	.L204
 2049 0b1a DFE800F0 		tbb	[pc, r0]
 2050              	.L198:
 2051 0b1e 08       		.byte	(.L197-.L198)/2
 2052 0b1f 37       		.byte	(.L204-.L198)/2
 2053 0b20 27       		.byte	(.L199-.L198)/2
 2054 0b21 37       		.byte	(.L204-.L198)/2
 2055 0b22 37       		.byte	(.L204-.L198)/2
 2056 0b23 37       		.byte	(.L204-.L198)/2
 2057 0b24 2B       		.byte	(.L200-.L198)/2
 2058 0b25 37       		.byte	(.L204-.L198)/2
 2059 0b26 37       		.byte	(.L204-.L198)/2
 2060 0b27 37       		.byte	(.L204-.L198)/2
 2061 0b28 37       		.byte	(.L204-.L198)/2
 2062 0b29 37       		.byte	(.L204-.L198)/2
 2063 0b2a 37       		.byte	(.L204-.L198)/2
 2064 0b2b 37       		.byte	(.L204-.L198)/2
 2065 0b2c 2F       		.byte	(.L201-.L198)/2
 2066 0b2d 00       		.p2align 1
 2067              	.L197:
1256:drivers/inv_mpu.c ****         break;
 2068              		.loc 1 1256 0
 2069 0b2e 0023     		movs	r3, #0
 2070 0b30 8DF80730 		strb	r3, [sp, #7]
 2071              	.L202:
1271:drivers/inv_mpu.c ****         return 0;
 2072              		.loc 1 1271 0
 2073 0b34 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 2074 0b38 184B     		ldr	r3, .L211
ARM GAS  /tmp/cci8Vpl3.s 			page 79


 2075 0b3a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2076 0b3c B3EBD20F 		cmp	r3, r2, lsr #3
 2077 0b40 27D0     		beq	.L205
1273:drivers/inv_mpu.c ****         return -1;
 2078              		.loc 1 1273 0
 2079 0b42 164B     		ldr	r3, .L211
 2080 0b44 1968     		ldr	r1, [r3]
 2081 0b46 5868     		ldr	r0, [r3, #4]
 2082 0b48 0DF10703 		add	r3, sp, #7
 2083 0b4c 0122     		movs	r2, #1
 2084 0b4e C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 2085 0b50 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2086 0b52 FFF7FEFF 		bl	i2cWrite
 2087              	.LVL168:
 2088 0b56 0346     		mov	r3, r0
 2089 0b58 E8B9     		cbnz	r0, .L206
1275:drivers/inv_mpu.c ****     return 0;
 2090              		.loc 1 1275 0
 2091 0b5a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 2092 0b5e D208     		lsrs	r2, r2, #3
 2093 0b60 0E49     		ldr	r1, .L211
 2094 0b62 4A72     		strb	r2, [r1, #9]
 2095              	.L195:
1277:drivers/inv_mpu.c **** 
 2096              		.loc 1 1277 0
 2097 0b64 1846     		mov	r0, r3
 2098 0b66 03B0     		add	sp, sp, #12
 2099              		.cfi_remember_state
 2100              		.cfi_def_cfa_offset 4
 2101              		@ sp needed
 2102 0b68 5DF804FB 		ldr	pc, [sp], #4
 2103              	.L199:
 2104              		.cfi_restore_state
1259:drivers/inv_mpu.c ****         break;
 2105              		.loc 1 1259 0
 2106 0b6c 0823     		movs	r3, #8
 2107 0b6e 8DF80730 		strb	r3, [sp, #7]
1260:drivers/inv_mpu.c ****     case 8:
 2108              		.loc 1 1260 0
 2109 0b72 DFE7     		b	.L202
 2110              	.L200:
1262:drivers/inv_mpu.c ****         break;
 2111              		.loc 1 1262 0
 2112 0b74 1023     		movs	r3, #16
 2113 0b76 8DF80730 		strb	r3, [sp, #7]
1263:drivers/inv_mpu.c ****     case 16:
 2114              		.loc 1 1263 0
 2115 0b7a DBE7     		b	.L202
 2116              	.L201:
1265:drivers/inv_mpu.c ****         break;
 2117              		.loc 1 1265 0
 2118 0b7c 1823     		movs	r3, #24
 2119 0b7e 8DF80730 		strb	r3, [sp, #7]
1266:drivers/inv_mpu.c ****     default:
 2120              		.loc 1 1266 0
 2121 0b82 D7E7     		b	.L202
 2122              	.LVL169:
ARM GAS  /tmp/cci8Vpl3.s 			page 80


 2123              	.L203:
 2124              		.cfi_def_cfa_offset 0
 2125              		.cfi_restore 14
1252:drivers/inv_mpu.c **** 
 2126              		.loc 1 1252 0
 2127 0b84 4FF0FF33 		mov	r3, #-1
1277:drivers/inv_mpu.c **** 
 2128              		.loc 1 1277 0
 2129 0b88 1846     		mov	r0, r3
 2130              	.LVL170:
 2131 0b8a 7047     		bx	lr
 2132              	.L204:
 2133              		.cfi_def_cfa_offset 16
 2134              		.cfi_offset 14, -4
1268:drivers/inv_mpu.c ****     }
 2135              		.loc 1 1268 0
 2136 0b8c 4FF0FF33 		mov	r3, #-1
 2137 0b90 E8E7     		b	.L195
 2138              	.L205:
1272:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, &data))
 2139              		.loc 1 1272 0
 2140 0b92 0023     		movs	r3, #0
 2141 0b94 E6E7     		b	.L195
 2142              	.L206:
1274:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = data >> 3;
 2143              		.loc 1 1274 0
 2144 0b96 4FF0FF33 		mov	r3, #-1
 2145 0b9a E3E7     		b	.L195
 2146              	.L212:
 2147              		.align	2
 2148              	.L211:
 2149 0b9c 00000000 		.word	.LANCHOR0
 2150              		.cfi_endproc
 2151              	.LFE77:
 2152              		.size	mpu_set_accel_fsr, .-mpu_set_accel_fsr
 2153              		.align	1
 2154              		.global	mpu_get_lpf
 2155              		.syntax unified
 2156              		.thumb
 2157              		.thumb_func
 2158              		.fpu softvfp
 2159              		.type	mpu_get_lpf, %function
 2160              	mpu_get_lpf:
 2161              	.LFB78:
1285:drivers/inv_mpu.c ****     switch (st.chip_cfg.lpf) {
 2162              		.loc 1 1285 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166              		@ link register save eliminated.
 2167              	.LVL171:
1286:drivers/inv_mpu.c ****     case INV_FILTER_188HZ:
 2168              		.loc 1 1286 0
 2169 0ba0 0F4B     		ldr	r3, .L223
 2170 0ba2 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2171 0ba4 013B     		subs	r3, r3, #1
 2172 0ba6 052B     		cmp	r3, #5
ARM GAS  /tmp/cci8Vpl3.s 			page 81


 2173 0ba8 17D8     		bhi	.L214
 2174 0baa DFE803F0 		tbb	[pc, r3]
 2175              	.L216:
 2176 0bae 03       		.byte	(.L215-.L216)/2
 2177 0baf 07       		.byte	(.L217-.L216)/2
 2178 0bb0 0A       		.byte	(.L218-.L216)/2
 2179 0bb1 0D       		.byte	(.L219-.L216)/2
 2180 0bb2 10       		.byte	(.L220-.L216)/2
 2181 0bb3 13       		.byte	(.L221-.L216)/2
 2182              		.p2align 1
 2183              	.L215:
1288:drivers/inv_mpu.c ****         break;
 2184              		.loc 1 1288 0
 2185 0bb4 BC23     		movs	r3, #188
 2186 0bb6 0380     		strh	r3, [r0]	@ movhi
 2187              	.L222:
1312:drivers/inv_mpu.c **** 
 2188              		.loc 1 1312 0
 2189 0bb8 0020     		movs	r0, #0
 2190              	.LVL172:
 2191 0bba 7047     		bx	lr
 2192              	.LVL173:
 2193              	.L217:
1291:drivers/inv_mpu.c ****         break;
 2194              		.loc 1 1291 0
 2195 0bbc 6223     		movs	r3, #98
 2196 0bbe 0380     		strh	r3, [r0]	@ movhi
1292:drivers/inv_mpu.c ****     case INV_FILTER_42HZ:
 2197              		.loc 1 1292 0
 2198 0bc0 FAE7     		b	.L222
 2199              	.L218:
1294:drivers/inv_mpu.c ****         break;
 2200              		.loc 1 1294 0
 2201 0bc2 2A23     		movs	r3, #42
 2202 0bc4 0380     		strh	r3, [r0]	@ movhi
1295:drivers/inv_mpu.c ****     case INV_FILTER_20HZ:
 2203              		.loc 1 1295 0
 2204 0bc6 F7E7     		b	.L222
 2205              	.L219:
1297:drivers/inv_mpu.c ****         break;
 2206              		.loc 1 1297 0
 2207 0bc8 1423     		movs	r3, #20
 2208 0bca 0380     		strh	r3, [r0]	@ movhi
1298:drivers/inv_mpu.c ****     case INV_FILTER_10HZ:
 2209              		.loc 1 1298 0
 2210 0bcc F4E7     		b	.L222
 2211              	.L220:
1300:drivers/inv_mpu.c ****         break;
 2212              		.loc 1 1300 0
 2213 0bce 0A23     		movs	r3, #10
 2214 0bd0 0380     		strh	r3, [r0]	@ movhi
1301:drivers/inv_mpu.c ****     case INV_FILTER_5HZ:
 2215              		.loc 1 1301 0
 2216 0bd2 F1E7     		b	.L222
 2217              	.L221:
1303:drivers/inv_mpu.c ****         break;
 2218              		.loc 1 1303 0
ARM GAS  /tmp/cci8Vpl3.s 			page 82


 2219 0bd4 0523     		movs	r3, #5
 2220 0bd6 0380     		strh	r3, [r0]	@ movhi
1304:drivers/inv_mpu.c ****     case INV_FILTER_256HZ_NOLPF2:
 2221              		.loc 1 1304 0
 2222 0bd8 EEE7     		b	.L222
 2223              	.L214:
1308:drivers/inv_mpu.c ****         break;
 2224              		.loc 1 1308 0
 2225 0bda 0023     		movs	r3, #0
 2226 0bdc 0380     		strh	r3, [r0]	@ movhi
1309:drivers/inv_mpu.c ****     }
 2227              		.loc 1 1309 0
 2228 0bde EBE7     		b	.L222
 2229              	.L224:
 2230              		.align	2
 2231              	.L223:
 2232 0be0 00000000 		.word	.LANCHOR0
 2233              		.cfi_endproc
 2234              	.LFE78:
 2235              		.size	mpu_get_lpf, .-mpu_get_lpf
 2236              		.align	1
 2237              		.global	mpu_set_lpf
 2238              		.syntax unified
 2239              		.thumb
 2240              		.thumb_func
 2241              		.fpu softvfp
 2242              		.type	mpu_set_lpf, %function
 2243              	mpu_set_lpf:
 2244              	.LFB79:
1321:drivers/inv_mpu.c ****     unsigned char data;
 2245              		.loc 1 1321 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 8
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              	.LVL174:
1324:drivers/inv_mpu.c ****         return -1;
 2250              		.loc 1 1324 0
 2251 0be4 234B     		ldr	r3, .L240
 2252 0be6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2253 0be8 002B     		cmp	r3, #0
 2254 0bea 39D0     		beq	.L233
1321:drivers/inv_mpu.c ****     unsigned char data;
 2255              		.loc 1 1321 0
 2256 0bec 00B5     		push	{lr}
 2257              		.cfi_def_cfa_offset 4
 2258              		.cfi_offset 14, -4
 2259 0bee 83B0     		sub	sp, sp, #12
 2260              		.cfi_def_cfa_offset 16
1327:drivers/inv_mpu.c ****         data = INV_FILTER_188HZ;
 2261              		.loc 1 1327 0
 2262 0bf0 BB28     		cmp	r0, #187
 2263 0bf2 1CD9     		bls	.L227
1328:drivers/inv_mpu.c ****     else if (lpf >= 98)
 2264              		.loc 1 1328 0
 2265 0bf4 0123     		movs	r3, #1
 2266 0bf6 8DF80730 		strb	r3, [sp, #7]
 2267              	.L228:
ARM GAS  /tmp/cci8Vpl3.s 			page 83


1340:drivers/inv_mpu.c ****         return 0;
 2268              		.loc 1 1340 0
 2269 0bfa 1E4B     		ldr	r3, .L240
 2270 0bfc DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 2271 0bfe 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2272 0c02 9A42     		cmp	r2, r3
 2273 0c04 30D0     		beq	.L234
1342:drivers/inv_mpu.c ****         return -1;
 2274              		.loc 1 1342 0
 2275 0c06 1B4B     		ldr	r3, .L240
 2276 0c08 1968     		ldr	r1, [r3]
 2277 0c0a 5868     		ldr	r0, [r3, #4]
 2278              	.LVL175:
 2279 0c0c 0DF10703 		add	r3, sp, #7
 2280 0c10 0122     		movs	r2, #1
 2281 0c12 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 2282 0c14 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2283 0c16 FFF7FEFF 		bl	i2cWrite
 2284              	.LVL176:
 2285 0c1a 0346     		mov	r3, r0
 2286 0c1c 30BB     		cbnz	r0, .L235
1344:drivers/inv_mpu.c ****     return 0;
 2287              		.loc 1 1344 0
 2288 0c1e 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2289 0c22 144A     		ldr	r2, .L240
 2290 0c24 D172     		strb	r1, [r2, #11]
 2291              	.L225:
1346:drivers/inv_mpu.c **** 
 2292              		.loc 1 1346 0
 2293 0c26 1846     		mov	r0, r3
 2294 0c28 03B0     		add	sp, sp, #12
 2295              		.cfi_remember_state
 2296              		.cfi_def_cfa_offset 4
 2297              		@ sp needed
 2298 0c2a 5DF804FB 		ldr	pc, [sp], #4
 2299              	.LVL177:
 2300              	.L227:
 2301              		.cfi_restore_state
1329:drivers/inv_mpu.c ****         data = INV_FILTER_98HZ;
 2302              		.loc 1 1329 0
 2303 0c2e 6128     		cmp	r0, #97
 2304 0c30 03D9     		bls	.L229
1330:drivers/inv_mpu.c ****     else if (lpf >= 42)
 2305              		.loc 1 1330 0
 2306 0c32 0223     		movs	r3, #2
 2307 0c34 8DF80730 		strb	r3, [sp, #7]
 2308 0c38 DFE7     		b	.L228
 2309              	.L229:
1331:drivers/inv_mpu.c ****         data = INV_FILTER_42HZ;
 2310              		.loc 1 1331 0
 2311 0c3a 2928     		cmp	r0, #41
 2312 0c3c 03D9     		bls	.L230
1332:drivers/inv_mpu.c ****     else if (lpf >= 20)
 2313              		.loc 1 1332 0
 2314 0c3e 0323     		movs	r3, #3
 2315 0c40 8DF80730 		strb	r3, [sp, #7]
 2316 0c44 D9E7     		b	.L228
ARM GAS  /tmp/cci8Vpl3.s 			page 84


 2317              	.L230:
1333:drivers/inv_mpu.c ****         data = INV_FILTER_20HZ;
 2318              		.loc 1 1333 0
 2319 0c46 1328     		cmp	r0, #19
 2320 0c48 03D9     		bls	.L231
1334:drivers/inv_mpu.c ****     else if (lpf >= 10)
 2321              		.loc 1 1334 0
 2322 0c4a 0423     		movs	r3, #4
 2323 0c4c 8DF80730 		strb	r3, [sp, #7]
 2324 0c50 D3E7     		b	.L228
 2325              	.L231:
1335:drivers/inv_mpu.c ****         data = INV_FILTER_10HZ;
 2326              		.loc 1 1335 0
 2327 0c52 0928     		cmp	r0, #9
1336:drivers/inv_mpu.c ****     else
 2328              		.loc 1 1336 0
 2329 0c54 8CBF     		ite	hi
 2330 0c56 0523     		movhi	r3, #5
1338:drivers/inv_mpu.c **** 
 2331              		.loc 1 1338 0
 2332 0c58 0623     		movls	r3, #6
 2333 0c5a 8DF80730 		strb	r3, [sp, #7]
 2334 0c5e CCE7     		b	.L228
 2335              	.L233:
 2336              		.cfi_def_cfa_offset 0
 2337              		.cfi_restore 14
1325:drivers/inv_mpu.c **** 
 2338              		.loc 1 1325 0
 2339 0c60 4FF0FF33 		mov	r3, #-1
1346:drivers/inv_mpu.c **** 
 2340              		.loc 1 1346 0
 2341 0c64 1846     		mov	r0, r3
 2342              	.LVL178:
 2343 0c66 7047     		bx	lr
 2344              	.LVL179:
 2345              	.L234:
 2346              		.cfi_def_cfa_offset 16
 2347              		.cfi_offset 14, -4
1341:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->lpf, 1, &data))
 2348              		.loc 1 1341 0
 2349 0c68 0023     		movs	r3, #0
 2350 0c6a DCE7     		b	.L225
 2351              	.LVL180:
 2352              	.L235:
1343:drivers/inv_mpu.c ****     st.chip_cfg.lpf = data;
 2353              		.loc 1 1343 0
 2354 0c6c 4FF0FF33 		mov	r3, #-1
 2355 0c70 D9E7     		b	.L225
 2356              	.L241:
 2357 0c72 00BF     		.align	2
 2358              	.L240:
 2359 0c74 00000000 		.word	.LANCHOR0
 2360              		.cfi_endproc
 2361              	.LFE79:
 2362              		.size	mpu_set_lpf, .-mpu_set_lpf
 2363              		.align	1
 2364              		.global	mpu_get_sample_rate
ARM GAS  /tmp/cci8Vpl3.s 			page 85


 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu softvfp
 2369              		.type	mpu_get_sample_rate, %function
 2370              	mpu_get_sample_rate:
 2371              	.LFB80:
1354:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
 2372              		.loc 1 1354 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376              		@ link register save eliminated.
 2377              	.LVL181:
1355:drivers/inv_mpu.c ****         return -1;
 2378              		.loc 1 1355 0
 2379 0c78 054B     		ldr	r3, .L245
 2380 0c7a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2381 0c7e 23B9     		cbnz	r3, .L244
1358:drivers/inv_mpu.c ****     return 0;
 2382              		.loc 1 1358 0
 2383 0c80 034B     		ldr	r3, .L245
 2384 0c82 DB89     		ldrh	r3, [r3, #14]
 2385 0c84 0380     		strh	r3, [r0]	@ movhi
1359:drivers/inv_mpu.c **** }
 2386              		.loc 1 1359 0
 2387 0c86 0020     		movs	r0, #0
 2388              	.LVL182:
 2389 0c88 7047     		bx	lr
 2390              	.LVL183:
 2391              	.L244:
1356:drivers/inv_mpu.c ****     else
 2392              		.loc 1 1356 0
 2393 0c8a 4FF0FF30 		mov	r0, #-1
 2394              	.LVL184:
1360:drivers/inv_mpu.c **** 
 2395              		.loc 1 1360 0
 2396 0c8e 7047     		bx	lr
 2397              	.L246:
 2398              		.align	2
 2399              	.L245:
 2400 0c90 00000000 		.word	.LANCHOR0
 2401              		.cfi_endproc
 2402              	.LFE80:
 2403              		.size	mpu_get_sample_rate, .-mpu_get_sample_rate
 2404              		.align	1
 2405              		.global	mpu_get_compass_sample_rate
 2406              		.syntax unified
 2407              		.thumb
 2408              		.thumb_func
 2409              		.fpu softvfp
 2410              		.type	mpu_get_compass_sample_rate, %function
 2411              	mpu_get_compass_sample_rate:
 2412              	.LFB82:
1416:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 2413              		.loc 1 1416 0
 2414              		.cfi_startproc
ARM GAS  /tmp/cci8Vpl3.s 			page 86


 2415              		@ args = 0, pretend = 0, frame = 0
 2416              		@ frame_needed = 0, uses_anonymous_args = 0
 2417              		@ link register save eliminated.
 2418              	.LVL185:
1421:drivers/inv_mpu.c ****     return -1;
 2419              		.loc 1 1421 0
 2420 0c94 0023     		movs	r3, #0
 2421 0c96 0380     		strh	r3, [r0]	@ movhi
1424:drivers/inv_mpu.c **** 
 2422              		.loc 1 1424 0
 2423 0c98 4FF0FF30 		mov	r0, #-1
 2424              	.LVL186:
 2425 0c9c 7047     		bx	lr
 2426              		.cfi_endproc
 2427              	.LFE82:
 2428              		.size	mpu_get_compass_sample_rate, .-mpu_get_compass_sample_rate
 2429              		.align	1
 2430              		.global	mpu_set_compass_sample_rate
 2431              		.syntax unified
 2432              		.thumb
 2433              		.thumb_func
 2434              		.fpu softvfp
 2435              		.type	mpu_set_compass_sample_rate, %function
 2436              	mpu_set_compass_sample_rate:
 2437              	.LFB83:
1438:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 2438              		.loc 1 1438 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 0, uses_anonymous_args = 0
 2442              		@ link register save eliminated.
 2443              	.LVL187:
1452:drivers/inv_mpu.c **** 
 2444              		.loc 1 1452 0
 2445 0c9e 4FF0FF30 		mov	r0, #-1
 2446              	.LVL188:
 2447 0ca2 7047     		bx	lr
 2448              		.cfi_endproc
 2449              	.LFE83:
 2450              		.size	mpu_set_compass_sample_rate, .-mpu_set_compass_sample_rate
 2451              		.align	1
 2452              		.global	mpu_get_gyro_sens
 2453              		.syntax unified
 2454              		.thumb
 2455              		.thumb_func
 2456              		.fpu softvfp
 2457              		.type	mpu_get_gyro_sens, %function
 2458              	mpu_get_gyro_sens:
 2459              	.LFB84:
1460:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
 2460              		.loc 1 1460 0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 0, uses_anonymous_args = 0
 2464              		@ link register save eliminated.
 2465              	.LVL189:
1461:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
ARM GAS  /tmp/cci8Vpl3.s 			page 87


 2466              		.loc 1 1461 0
 2467 0ca4 0D4B     		ldr	r3, .L257
 2468 0ca6 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2469 0ca8 032B     		cmp	r3, #3
 2470 0caa 13D8     		bhi	.L256
 2471 0cac DFE803F0 		tbb	[pc, r3]
 2472              	.L252:
 2473 0cb0 02       		.byte	(.L251-.L252)/2
 2474 0cb1 06       		.byte	(.L253-.L252)/2
 2475 0cb2 0A       		.byte	(.L254-.L252)/2
 2476 0cb3 0E       		.byte	(.L255-.L252)/2
 2477              		.p2align 1
 2478              	.L251:
1463:drivers/inv_mpu.c ****         break;
 2479              		.loc 1 1463 0
 2480 0cb4 0A4B     		ldr	r3, .L257+4
 2481 0cb6 0360     		str	r3, [r0]	@ float
1477:drivers/inv_mpu.c **** }
 2482              		.loc 1 1477 0
 2483 0cb8 0020     		movs	r0, #0
 2484              	.LVL190:
1464:drivers/inv_mpu.c ****     case INV_FSR_500DPS:
 2485              		.loc 1 1464 0
 2486 0cba 7047     		bx	lr
 2487              	.LVL191:
 2488              	.L253:
1466:drivers/inv_mpu.c ****         break;
 2489              		.loc 1 1466 0
 2490 0cbc 094B     		ldr	r3, .L257+8
 2491 0cbe 0360     		str	r3, [r0]	@ float
1477:drivers/inv_mpu.c **** }
 2492              		.loc 1 1477 0
 2493 0cc0 0020     		movs	r0, #0
 2494              	.LVL192:
1467:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
 2495              		.loc 1 1467 0
 2496 0cc2 7047     		bx	lr
 2497              	.LVL193:
 2498              	.L254:
1469:drivers/inv_mpu.c ****         break;
 2499              		.loc 1 1469 0
 2500 0cc4 084B     		ldr	r3, .L257+12
 2501 0cc6 0360     		str	r3, [r0]	@ float
1477:drivers/inv_mpu.c **** }
 2502              		.loc 1 1477 0
 2503 0cc8 0020     		movs	r0, #0
 2504              	.LVL194:
1470:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
 2505              		.loc 1 1470 0
 2506 0cca 7047     		bx	lr
 2507              	.LVL195:
 2508              	.L255:
1472:drivers/inv_mpu.c ****         break;
 2509              		.loc 1 1472 0
 2510 0ccc 074B     		ldr	r3, .L257+16
 2511 0cce 0360     		str	r3, [r0]	@ float
1477:drivers/inv_mpu.c **** }
ARM GAS  /tmp/cci8Vpl3.s 			page 88


 2512              		.loc 1 1477 0
 2513 0cd0 0020     		movs	r0, #0
 2514              	.LVL196:
1473:drivers/inv_mpu.c ****     default:
 2515              		.loc 1 1473 0
 2516 0cd2 7047     		bx	lr
 2517              	.LVL197:
 2518              	.L256:
1475:drivers/inv_mpu.c ****     }
 2519              		.loc 1 1475 0
 2520 0cd4 4FF0FF30 		mov	r0, #-1
 2521              	.LVL198:
1478:drivers/inv_mpu.c **** 
 2522              		.loc 1 1478 0
 2523 0cd8 7047     		bx	lr
 2524              	.L258:
 2525 0cda 00BF     		.align	2
 2526              	.L257:
 2527 0cdc 00000000 		.word	.LANCHOR0
 2528 0ce0 00000343 		.word	1124270080
 2529 0ce4 00008342 		.word	1115881472
 2530 0ce8 33330342 		.word	1107505971
 2531 0cec 33338341 		.word	1099117363
 2532              		.cfi_endproc
 2533              	.LFE84:
 2534              		.size	mpu_get_gyro_sens, .-mpu_get_gyro_sens
 2535              		.align	1
 2536              		.global	mpu_get_accel_sens
 2537              		.syntax unified
 2538              		.thumb
 2539              		.thumb_func
 2540              		.fpu softvfp
 2541              		.type	mpu_get_accel_sens, %function
 2542              	mpu_get_accel_sens:
 2543              	.LFB85:
1486:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
 2544              		.loc 1 1486 0
 2545              		.cfi_startproc
 2546              		@ args = 0, pretend = 0, frame = 0
 2547              		@ frame_needed = 0, uses_anonymous_args = 0
 2548              		@ link register save eliminated.
 2549              	.LVL199:
1487:drivers/inv_mpu.c ****     case INV_FSR_2G:
 2550              		.loc 1 1487 0
 2551 0cf0 114B     		ldr	r3, .L269
 2552 0cf2 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2553 0cf4 032B     		cmp	r3, #3
 2554 0cf6 1AD8     		bhi	.L267
 2555 0cf8 DFE803F0 		tbb	[pc, r3]
 2556              	.L262:
 2557 0cfc 02       		.byte	(.L261-.L262)/2
 2558 0cfd 0D       		.byte	(.L263-.L262)/2
 2559 0cfe 11       		.byte	(.L264-.L262)/2
 2560 0cff 15       		.byte	(.L265-.L262)/2
 2561              		.p2align 1
 2562              	.L261:
1489:drivers/inv_mpu.c ****         break;
ARM GAS  /tmp/cci8Vpl3.s 			page 89


 2563              		.loc 1 1489 0
 2564 0d00 4FF48043 		mov	r3, #16384
 2565 0d04 0380     		strh	r3, [r0]	@ movhi
 2566              	.L266:
1503:drivers/inv_mpu.c ****         sens[0] >>= 1;
 2567              		.loc 1 1503 0
 2568 0d06 0C4B     		ldr	r3, .L269
 2569 0d08 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 2570 0d0a 9BB1     		cbz	r3, .L268
1504:drivers/inv_mpu.c ****     return 0;
 2571              		.loc 1 1504 0
 2572 0d0c 0388     		ldrh	r3, [r0]
 2573 0d0e 5B08     		lsrs	r3, r3, #1
 2574 0d10 0380     		strh	r3, [r0]	@ movhi
1505:drivers/inv_mpu.c **** }
 2575              		.loc 1 1505 0
 2576 0d12 0020     		movs	r0, #0
 2577              	.LVL200:
 2578 0d14 7047     		bx	lr
 2579              	.LVL201:
 2580              	.L263:
1492:drivers/inv_mpu.c ****         break;
 2581              		.loc 1 1492 0
 2582 0d16 41F69C73 		movw	r3, #8092
 2583 0d1a 0380     		strh	r3, [r0]	@ movhi
1493:drivers/inv_mpu.c ****     case INV_FSR_8G:
 2584              		.loc 1 1493 0
 2585 0d1c F3E7     		b	.L266
 2586              	.L264:
1495:drivers/inv_mpu.c ****         break;
 2587              		.loc 1 1495 0
 2588 0d1e 4FF48053 		mov	r3, #4096
 2589 0d22 0380     		strh	r3, [r0]	@ movhi
1496:drivers/inv_mpu.c ****     case INV_FSR_16G:
 2590              		.loc 1 1496 0
 2591 0d24 EFE7     		b	.L266
 2592              	.L265:
1498:drivers/inv_mpu.c ****         break;
 2593              		.loc 1 1498 0
 2594 0d26 4FF40063 		mov	r3, #2048
 2595 0d2a 0380     		strh	r3, [r0]	@ movhi
1499:drivers/inv_mpu.c ****     default:
 2596              		.loc 1 1499 0
 2597 0d2c EBE7     		b	.L266
 2598              	.L267:
1501:drivers/inv_mpu.c ****     }
 2599              		.loc 1 1501 0
 2600 0d2e 4FF0FF30 		mov	r0, #-1
 2601              	.LVL202:
 2602 0d32 7047     		bx	lr
 2603              	.LVL203:
 2604              	.L268:
1505:drivers/inv_mpu.c **** }
 2605              		.loc 1 1505 0
 2606 0d34 0020     		movs	r0, #0
 2607              	.LVL204:
1506:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cci8Vpl3.s 			page 90


 2608              		.loc 1 1506 0
 2609 0d36 7047     		bx	lr
 2610              	.L270:
 2611              		.align	2
 2612              	.L269:
 2613 0d38 00000000 		.word	.LANCHOR0
 2614              		.cfi_endproc
 2615              	.LFE85:
 2616              		.size	mpu_get_accel_sens, .-mpu_get_accel_sens
 2617              		.align	1
 2618              		.global	mpu_get_fifo_config
 2619              		.syntax unified
 2620              		.thumb
 2621              		.thumb_func
 2622              		.fpu softvfp
 2623              		.type	mpu_get_fifo_config, %function
 2624              	mpu_get_fifo_config:
 2625              	.LFB86:
1518:drivers/inv_mpu.c ****     sensors[0] = st.chip_cfg.fifo_enable;
 2626              		.loc 1 1518 0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 0, uses_anonymous_args = 0
 2630              		@ link register save eliminated.
 2631              	.LVL205:
1519:drivers/inv_mpu.c ****     return 0;
 2632              		.loc 1 1519 0
 2633 0d3c 024B     		ldr	r3, .L272
 2634 0d3e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2635 0d40 0370     		strb	r3, [r0]
1521:drivers/inv_mpu.c **** 
 2636              		.loc 1 1521 0
 2637 0d42 0020     		movs	r0, #0
 2638              	.LVL206:
 2639 0d44 7047     		bx	lr
 2640              	.L273:
 2641 0d46 00BF     		.align	2
 2642              	.L272:
 2643 0d48 00000000 		.word	.LANCHOR0
 2644              		.cfi_endproc
 2645              	.LFE86:
 2646              		.size	mpu_get_fifo_config, .-mpu_get_fifo_config
 2647              		.align	1
 2648              		.global	mpu_configure_fifo
 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2652              		.fpu softvfp
 2653              		.type	mpu_configure_fifo, %function
 2654              	mpu_configure_fifo:
 2655              	.LFB87:
1533:drivers/inv_mpu.c ****     unsigned char prev;
 2656              		.loc 1 1533 0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 0
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
 2660              	.LVL207:
ARM GAS  /tmp/cci8Vpl3.s 			page 91


 2661 0d4c 38B5     		push	{r3, r4, r5, lr}
 2662              		.cfi_def_cfa_offset 16
 2663              		.cfi_offset 3, -16
 2664              		.cfi_offset 4, -12
 2665              		.cfi_offset 5, -8
 2666              		.cfi_offset 14, -4
 2667              	.LVL208:
1540:drivers/inv_mpu.c ****         return 0;
 2668              		.loc 1 1540 0
 2669 0d4e 164B     		ldr	r3, .L283
 2670 0d50 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2671 0d54 ABB9     		cbnz	r3, .L279
1543:drivers/inv_mpu.c ****             return -1;
 2672              		.loc 1 1543 0
 2673 0d56 144B     		ldr	r3, .L283
 2674 0d58 9C7A     		ldrb	r4, [r3, #10]	@ zero_extendqisi2
 2675 0d5a ACB1     		cbz	r4, .L280
1538:drivers/inv_mpu.c **** 
 2676              		.loc 1 1538 0
 2677 0d5c 00F0FE00 		and	r0, r0, #254
 2678              	.LVL209:
1545:drivers/inv_mpu.c ****         st.chip_cfg.fifo_enable = sensors & st.chip_cfg.sensors;
 2679              		.loc 1 1545 0
 2680 0d60 1D7C     		ldrb	r5, [r3, #16]	@ zero_extendqisi2
 2681              	.LVL210:
1546:drivers/inv_mpu.c ****         if (st.chip_cfg.fifo_enable != sensors)
 2682              		.loc 1 1546 0
 2683 0d62 0440     		ands	r4, r4, r0
 2684 0d64 1C74     		strb	r4, [r3, #16]
1547:drivers/inv_mpu.c ****             /* You're not getting what you asked for. Some sensors are
 2685              		.loc 1 1547 0
 2686 0d66 041B     		subs	r4, r0, r4
 2687 0d68 18BF     		it	ne
 2688 0d6a 4FF0FF34 		movne	r4, #-1
 2689              	.LVL211:
1554:drivers/inv_mpu.c ****             set_int_enable(1);
 2690              		.loc 1 1554 0
 2691 0d6e 70B9     		cbnz	r0, .L276
1554:drivers/inv_mpu.c ****             set_int_enable(1);
 2692              		.loc 1 1554 0 is_stmt 0 discriminator 1
 2693 0d70 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2694 0d72 1BB1     		cbz	r3, .L282
1555:drivers/inv_mpu.c ****         else
 2695              		.loc 1 1555 0 is_stmt 1
 2696 0d74 0120     		movs	r0, #1
 2697 0d76 FFF743F9 		bl	set_int_enable
 2698              	.LVL212:
 2699 0d7a 03E0     		b	.L274
 2700              	.L282:
1557:drivers/inv_mpu.c ****         if (sensors) {
 2701              		.loc 1 1557 0
 2702 0d7c FFF740F9 		bl	set_int_enable
 2703              	.LVL213:
 2704 0d80 00E0     		b	.L274
 2705              	.LVL214:
 2706              	.L279:
1541:drivers/inv_mpu.c ****     else {
ARM GAS  /tmp/cci8Vpl3.s 			page 92


 2707              		.loc 1 1541 0
 2708 0d82 0024     		movs	r4, #0
 2709              	.LVL215:
 2710              	.L274:
1567:drivers/inv_mpu.c **** 
 2711              		.loc 1 1567 0
 2712 0d84 2046     		mov	r0, r4
 2713 0d86 38BD     		pop	{r3, r4, r5, pc}
 2714              	.LVL216:
 2715              	.L280:
1544:drivers/inv_mpu.c ****         prev = st.chip_cfg.fifo_enable;
 2716              		.loc 1 1544 0
 2717 0d88 4FF0FF34 		mov	r4, #-1
 2718 0d8c FAE7     		b	.L274
 2719              	.LVL217:
 2720              	.L276:
1555:drivers/inv_mpu.c ****         else
 2721              		.loc 1 1555 0
 2722 0d8e 0120     		movs	r0, #1
 2723 0d90 FFF736F9 		bl	set_int_enable
 2724              	.LVL218:
1559:drivers/inv_mpu.c ****                 st.chip_cfg.fifo_enable = prev;
 2725              		.loc 1 1559 0
 2726 0d94 FFF7FEFF 		bl	mpu_reset_fifo
 2727              	.LVL219:
 2728 0d98 0028     		cmp	r0, #0
 2729 0d9a F3D0     		beq	.L274
1560:drivers/inv_mpu.c ****                 return -1;
 2730              		.loc 1 1560 0
 2731 0d9c 024B     		ldr	r3, .L283
 2732 0d9e 1D74     		strb	r5, [r3, #16]
1561:drivers/inv_mpu.c ****             }
 2733              		.loc 1 1561 0
 2734 0da0 4FF0FF34 		mov	r4, #-1
 2735              	.LVL220:
 2736 0da4 EEE7     		b	.L274
 2737              	.L284:
 2738 0da6 00BF     		.align	2
 2739              	.L283:
 2740 0da8 00000000 		.word	.LANCHOR0
 2741              		.cfi_endproc
 2742              	.LFE87:
 2743              		.size	mpu_configure_fifo, .-mpu_configure_fifo
 2744              		.align	1
 2745              		.global	mpu_get_power_state
 2746              		.syntax unified
 2747              		.thumb
 2748              		.thumb_func
 2749              		.fpu softvfp
 2750              		.type	mpu_get_power_state, %function
 2751              	mpu_get_power_state:
 2752              	.LFB88:
1575:drivers/inv_mpu.c ****     if (st.chip_cfg.sensors)
 2753              		.loc 1 1575 0
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 0
 2756              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cci8Vpl3.s 			page 93


 2757              		@ link register save eliminated.
 2758              	.LVL221:
1576:drivers/inv_mpu.c ****         power_on[0] = 1;
 2759              		.loc 1 1576 0
 2760 0dac 044B     		ldr	r3, .L289
 2761 0dae 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2762 0db0 1BB9     		cbnz	r3, .L288
1579:drivers/inv_mpu.c ****     return 0;
 2763              		.loc 1 1579 0
 2764 0db2 0023     		movs	r3, #0
 2765 0db4 0370     		strb	r3, [r0]
 2766              	.L287:
1581:drivers/inv_mpu.c **** 
 2767              		.loc 1 1581 0
 2768 0db6 0020     		movs	r0, #0
 2769              	.LVL222:
 2770 0db8 7047     		bx	lr
 2771              	.LVL223:
 2772              	.L288:
1577:drivers/inv_mpu.c ****     else
 2773              		.loc 1 1577 0
 2774 0dba 0123     		movs	r3, #1
 2775 0dbc 0370     		strb	r3, [r0]
 2776 0dbe FAE7     		b	.L287
 2777              	.L290:
 2778              		.align	2
 2779              	.L289:
 2780 0dc0 00000000 		.word	.LANCHOR0
 2781              		.cfi_endproc
 2782              	.LFE88:
 2783              		.size	mpu_get_power_state, .-mpu_get_power_state
 2784              		.align	1
 2785              		.global	mpu_get_int_status
 2786              		.syntax unified
 2787              		.thumb
 2788              		.thumb_func
 2789              		.fpu softvfp
 2790              		.type	mpu_get_int_status, %function
 2791              	mpu_get_int_status:
 2792              	.LFB90:
1671:drivers/inv_mpu.c ****     unsigned char tmp[2];
 2793              		.loc 1 1671 0
 2794              		.cfi_startproc
 2795              		@ args = 0, pretend = 0, frame = 8
 2796              		@ frame_needed = 0, uses_anonymous_args = 0
 2797              	.LVL224:
1673:drivers/inv_mpu.c ****         return -1;
 2798              		.loc 1 1673 0
 2799 0dc4 104B     		ldr	r3, .L299
 2800 0dc6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2801 0dc8 BBB1     		cbz	r3, .L293
1671:drivers/inv_mpu.c ****     unsigned char tmp[2];
 2802              		.loc 1 1671 0
 2803 0dca 10B5     		push	{r4, lr}
 2804              		.cfi_def_cfa_offset 8
 2805              		.cfi_offset 4, -8
 2806              		.cfi_offset 14, -4
ARM GAS  /tmp/cci8Vpl3.s 			page 94


 2807 0dcc 82B0     		sub	sp, sp, #8
 2808              		.cfi_def_cfa_offset 16
 2809 0dce 0446     		mov	r4, r0
1675:drivers/inv_mpu.c ****         return -1;
 2810              		.loc 1 1675 0
 2811 0dd0 0D4B     		ldr	r3, .L299
 2812 0dd2 1968     		ldr	r1, [r3]
 2813 0dd4 5868     		ldr	r0, [r3, #4]
 2814              	.LVL225:
 2815 0dd6 01AB     		add	r3, sp, #4
 2816 0dd8 0222     		movs	r2, #2
 2817 0dda 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 2818 0ddc 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2819 0dde FFF7FEFF 		bl	i2cRead
 2820              	.LVL226:
 2821 0de2 0246     		mov	r2, r0
 2822 0de4 68B9     		cbnz	r0, .L294
1677:drivers/inv_mpu.c ****     return 0;
 2823              		.loc 1 1677 0
 2824 0de6 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 2825 0dea 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 2826 0dee 43EA0123 		orr	r3, r3, r1, lsl #8
 2827 0df2 2380     		strh	r3, [r4]	@ movhi
 2828              	.L291:
1679:drivers/inv_mpu.c **** 
 2829              		.loc 1 1679 0
 2830 0df4 1046     		mov	r0, r2
 2831 0df6 02B0     		add	sp, sp, #8
 2832              		.cfi_def_cfa_offset 8
 2833              		@ sp needed
 2834 0df8 10BD     		pop	{r4, pc}
 2835              	.LVL227:
 2836              	.L293:
 2837              		.cfi_def_cfa_offset 0
 2838              		.cfi_restore 4
 2839              		.cfi_restore 14
1674:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->dmp_int_status, 2, tmp))
 2840              		.loc 1 1674 0
 2841 0dfa 4FF0FF32 		mov	r2, #-1
1679:drivers/inv_mpu.c **** 
 2842              		.loc 1 1679 0
 2843 0dfe 1046     		mov	r0, r2
 2844              	.LVL228:
 2845 0e00 7047     		bx	lr
 2846              	.LVL229:
 2847              	.L294:
 2848              		.cfi_def_cfa_offset 16
 2849              		.cfi_offset 4, -8
 2850              		.cfi_offset 14, -4
1676:drivers/inv_mpu.c ****     status[0] = (tmp[0] << 8) | tmp[1];
 2851              		.loc 1 1676 0
 2852 0e02 4FF0FF32 		mov	r2, #-1
 2853 0e06 F5E7     		b	.L291
 2854              	.L300:
 2855              		.align	2
 2856              	.L299:
 2857 0e08 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cci8Vpl3.s 			page 95


 2858              		.cfi_endproc
 2859              	.LFE90:
 2860              		.size	mpu_get_int_status, .-mpu_get_int_status
 2861              		.align	1
 2862              		.global	mpu_read_fifo
 2863              		.syntax unified
 2864              		.thumb
 2865              		.thumb_func
 2866              		.fpu softvfp
 2867              		.type	mpu_read_fifo, %function
 2868              	mpu_read_fifo:
 2869              	.LFB91:
1701:drivers/inv_mpu.c ****     /* Assumes maximum packet size is gyro (6) + accel (6). */
 2870              		.loc 1 1701 0
 2871              		.cfi_startproc
 2872              		@ args = 4, pretend = 0, frame = 16
 2873              		@ frame_needed = 0, uses_anonymous_args = 0
 2874              	.LVL230:
1707:drivers/inv_mpu.c ****         return -1;
 2875              		.loc 1 1707 0
 2876 0e0c 764A     		ldr	r2, .L323
 2877              	.LVL231:
 2878 0e0e 92F82420 		ldrb	r2, [r2, #36]	@ zero_extendqisi2
 2879 0e12 002A     		cmp	r2, #0
 2880 0e14 40F0D580 		bne	.L311
1710:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 2881              		.loc 1 1710 0
 2882 0e18 1A70     		strb	r2, [r3]
1711:drivers/inv_mpu.c ****         return -1;
 2883              		.loc 1 1711 0
 2884 0e1a 734A     		ldr	r2, .L323
 2885 0e1c 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 2886 0e1e 002A     		cmp	r2, #0
 2887 0e20 00F0D380 		beq	.L312
1713:drivers/inv_mpu.c ****         return -1;
 2888              		.loc 1 1713 0
 2889 0e24 704A     		ldr	r2, .L323
 2890 0e26 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 2891 0e28 002A     		cmp	r2, #0
 2892 0e2a 00F0D180 		beq	.L313
1701:drivers/inv_mpu.c ****     /* Assumes maximum packet size is gyro (6) + accel (6). */
 2893              		.loc 1 1701 0
 2894 0e2e 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2895              		.cfi_def_cfa_offset 28
 2896              		.cfi_offset 4, -28
 2897              		.cfi_offset 5, -24
 2898              		.cfi_offset 6, -20
 2899              		.cfi_offset 7, -16
 2900              		.cfi_offset 8, -12
 2901              		.cfi_offset 9, -8
 2902              		.cfi_offset 14, -4
 2903 0e32 85B0     		sub	sp, sp, #20
 2904              		.cfi_def_cfa_offset 48
 2905 0e34 02F04004 		and	r4, r2, #64
1717:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Y_GYRO)
 2906              		.loc 1 1717 0
 2907 0e38 002C     		cmp	r4, #0
ARM GAS  /tmp/cci8Vpl3.s 			page 96


 2908 0e3a 18BF     		it	ne
 2909 0e3c 0224     		movne	r4, #2
 2910              	.LVL232:
1718:drivers/inv_mpu.c ****         packet_size += 2;
 2911              		.loc 1 1718 0
 2912 0e3e 12F0200F 		tst	r2, #32
1719:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Z_GYRO)
 2913              		.loc 1 1719 0
 2914 0e42 18BF     		it	ne
 2915 0e44 0234     		addne	r4, r4, #2
 2916              	.LVL233:
1720:drivers/inv_mpu.c ****         packet_size += 2;
 2917              		.loc 1 1720 0
 2918 0e46 12F0100F 		tst	r2, #16
1721:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_XYZ_ACCEL)
 2919              		.loc 1 1721 0
 2920 0e4a 1CBF     		itt	ne
 2921 0e4c 0234     		addne	r4, r4, #2
 2922              	.LVL234:
 2923 0e4e E4B2     		uxtbne	r4, r4
 2924              	.LVL235:
1722:drivers/inv_mpu.c ****         packet_size += 6;
 2925              		.loc 1 1722 0
 2926 0e50 12F0080F 		tst	r2, #8
1723:drivers/inv_mpu.c **** 
 2927              		.loc 1 1723 0
 2928 0e54 1CBF     		itt	ne
 2929 0e56 0634     		addne	r4, r4, #6
 2930              	.LVL236:
 2931 0e58 E4B2     		uxtbne	r4, r4
 2932              	.LVL237:
 2933 0e5a 1E46     		mov	r6, r3
 2934 0e5c 8946     		mov	r9, r1
 2935 0e5e 0746     		mov	r7, r0
1725:drivers/inv_mpu.c ****         return -1;
 2936              		.loc 1 1725 0
 2937 0e60 614B     		ldr	r3, .L323
 2938              	.LVL238:
 2939 0e62 1968     		ldr	r1, [r3]
 2940              	.LVL239:
 2941 0e64 5868     		ldr	r0, [r3, #4]
 2942              	.LVL240:
 2943 0e66 01AB     		add	r3, sp, #4
 2944 0e68 0222     		movs	r2, #2
 2945 0e6a 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 2946 0e6c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2947 0e6e FFF7FEFF 		bl	i2cRead
 2948              	.LVL241:
 2949 0e72 0346     		mov	r3, r0
 2950 0e74 0028     		cmp	r0, #0
 2951 0e76 40F0AE80 		bne	.L314
1727:drivers/inv_mpu.c ****     if (fifo_count < packet_size)
 2952              		.loc 1 1727 0
 2953 0e7a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 2954 0e7e 9DF80550 		ldrb	r5, [sp, #5]	@ zero_extendqisi2
 2955 0e82 45EA0225 		orr	r5, r5, r2, lsl #8
 2956              	.LVL242:
ARM GAS  /tmp/cci8Vpl3.s 			page 97


1728:drivers/inv_mpu.c ****         return 0;
 2957              		.loc 1 1728 0
 2958 0e86 1FFA84F8 		uxth	r8, r4
 2959 0e8a 4545     		cmp	r5, r8
 2960 0e8c C0F08E80 		bcc	.L301
1731:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
 2961              		.loc 1 1731 0
 2962 0e90 554B     		ldr	r3, .L323
 2963 0e92 5868     		ldr	r0, [r3, #4]
 2964 0e94 4388     		ldrh	r3, [r0, #2]
 2965 0e96 B5EB530F 		cmp	r5, r3, lsr #1
 2966 0e9a 0FD9     		bls	.L307
1733:drivers/inv_mpu.c ****             return -1;
 2967              		.loc 1 1733 0
 2968 0e9c 524B     		ldr	r3, .L323
 2969 0e9e 1968     		ldr	r1, [r3]
 2970 0ea0 01AB     		add	r3, sp, #4
 2971 0ea2 0122     		movs	r2, #1
 2972 0ea4 497C     		ldrb	r1, [r1, #17]	@ zero_extendqisi2
 2973 0ea6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2974 0ea8 FFF7FEFF 		bl	i2cRead
 2975              	.LVL243:
 2976 0eac 0028     		cmp	r0, #0
 2977 0eae 40F09580 		bne	.L315
1735:drivers/inv_mpu.c ****             mpu_reset_fifo();
 2978              		.loc 1 1735 0
 2979 0eb2 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 2980 0eb6 13F0100F 		tst	r3, #16
 2981 0eba 7BD1     		bne	.L322
 2982              	.L307:
1742:drivers/inv_mpu.c ****         return -1;
 2983              		.loc 1 1742 0
 2984 0ebc 4A4B     		ldr	r3, .L323
 2985 0ebe 1968     		ldr	r1, [r3]
 2986 0ec0 5868     		ldr	r0, [r3, #4]
 2987 0ec2 01AB     		add	r3, sp, #4
 2988 0ec4 2246     		mov	r2, r4
 2989 0ec6 C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 2990 0ec8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2991 0eca FFF7FEFF 		bl	i2cRead
 2992              	.LVL244:
 2993 0ece 0346     		mov	r3, r0
 2994 0ed0 0028     		cmp	r0, #0
 2995 0ed2 40F08680 		bne	.L316
1744:drivers/inv_mpu.c ****     sensors[0] = 0;
 2996              		.loc 1 1744 0
 2997 0ed6 95FBF4F5 		sdiv	r5, r5, r4
 2998              	.LVL245:
 2999 0eda 013D     		subs	r5, r5, #1
 3000 0edc 0C9A     		ldr	r2, [sp, #48]
 3001 0ede 1570     		strb	r5, [r2]
1745:drivers/inv_mpu.c **** 
 3002              		.loc 1 1745 0
 3003 0ee0 0022     		movs	r2, #0
 3004 0ee2 3270     		strb	r2, [r6]
1747:drivers/inv_mpu.c ****         accel[0] = (data[index+0] << 8) | data[index+1];
 3005              		.loc 1 1747 0
ARM GAS  /tmp/cci8Vpl3.s 			page 98


 3006 0ee4 002C     		cmp	r4, #0
 3007 0ee6 61D0     		beq	.L301
1747:drivers/inv_mpu.c ****         accel[0] = (data[index+0] << 8) | data[index+1];
 3008              		.loc 1 1747 0 is_stmt 0 discriminator 1
 3009 0ee8 3F4A     		ldr	r2, .L323
 3010 0eea 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 3011 0eec 12F0080F 		tst	r2, #8
 3012 0ef0 65D0     		beq	.L317
1748:drivers/inv_mpu.c ****         accel[1] = (data[index+2] << 8) | data[index+3];
 3013              		.loc 1 1748 0 is_stmt 1
 3014 0ef2 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 3015 0ef6 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 3016 0efa 42EA0122 		orr	r2, r2, r1, lsl #8
 3017 0efe A9F80020 		strh	r2, [r9]	@ movhi
1749:drivers/inv_mpu.c ****         accel[2] = (data[index+4] << 8) | data[index+5];
 3018              		.loc 1 1749 0
 3019 0f02 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 3020 0f06 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 3021 0f0a 42EA0122 		orr	r2, r2, r1, lsl #8
 3022 0f0e A9F80220 		strh	r2, [r9, #2]	@ movhi
1750:drivers/inv_mpu.c ****         sensors[0] |= INV_XYZ_ACCEL;
 3023              		.loc 1 1750 0
 3024 0f12 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 3025 0f16 9DF80920 		ldrb	r2, [sp, #9]	@ zero_extendqisi2
 3026 0f1a 42EA0122 		orr	r2, r2, r1, lsl #8
 3027 0f1e A9F80420 		strh	r2, [r9, #4]	@ movhi
1751:drivers/inv_mpu.c ****         index += 6;
 3028              		.loc 1 1751 0
 3029 0f22 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 3030 0f24 42F00802 		orr	r2, r2, #8
 3031 0f28 3270     		strb	r2, [r6]
 3032              	.LVL246:
1752:drivers/inv_mpu.c ****     }
 3033              		.loc 1 1752 0
 3034 0f2a 0622     		movs	r2, #6
 3035              	.LVL247:
 3036              	.L308:
1754:drivers/inv_mpu.c ****         gyro[0] = (data[index+0] << 8) | data[index+1];
 3037              		.loc 1 1754 0
 3038 0f2c 4245     		cmp	r2, r8
 3039 0f2e 3DD0     		beq	.L301
1754:drivers/inv_mpu.c ****         gyro[0] = (data[index+0] << 8) | data[index+1];
 3040              		.loc 1 1754 0 is_stmt 0 discriminator 1
 3041 0f30 2D49     		ldr	r1, .L323
 3042 0f32 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 3043 0f34 11F0400F 		tst	r1, #64
 3044 0f38 10D0     		beq	.L309
1755:drivers/inv_mpu.c ****         sensors[0] |= INV_X_GYRO;
 3045              		.loc 1 1755 0 is_stmt 1
 3046 0f3a 04A9     		add	r1, sp, #16
 3047 0f3c 8818     		adds	r0, r1, r2
 3048 0f3e 10F80C4C 		ldrb	r4, [r0, #-12]	@ zero_extendqisi2
 3049              	.LVL248:
 3050 0f42 10F80B1C 		ldrb	r1, [r0, #-11]	@ zero_extendqisi2
 3051 0f46 41EA0421 		orr	r1, r1, r4, lsl #8
 3052 0f4a 3980     		strh	r1, [r7]	@ movhi
1756:drivers/inv_mpu.c ****         index += 2;
ARM GAS  /tmp/cci8Vpl3.s 			page 99


 3053              		.loc 1 1756 0
 3054 0f4c 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 3055 0f4e 41F04001 		orr	r1, r1, #64
 3056 0f52 3170     		strb	r1, [r6]
1757:drivers/inv_mpu.c ****     }
 3057              		.loc 1 1757 0
 3058 0f54 0232     		adds	r2, r2, #2
 3059              	.LVL249:
 3060 0f56 92B2     		uxth	r2, r2
1759:drivers/inv_mpu.c ****         gyro[1] = (data[index+0] << 8) | data[index+1];
 3061              		.loc 1 1759 0
 3062 0f58 9045     		cmp	r8, r2
 3063 0f5a 27D0     		beq	.L301
 3064              	.LVL250:
 3065              	.L309:
1759:drivers/inv_mpu.c ****         gyro[1] = (data[index+0] << 8) | data[index+1];
 3066              		.loc 1 1759 0 is_stmt 0 discriminator 1
 3067 0f5c 2249     		ldr	r1, .L323
 3068 0f5e 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 3069 0f60 11F0200F 		tst	r1, #32
 3070 0f64 10D0     		beq	.L310
1760:drivers/inv_mpu.c ****         sensors[0] |= INV_Y_GYRO;
 3071              		.loc 1 1760 0 is_stmt 1
 3072 0f66 04A9     		add	r1, sp, #16
 3073 0f68 8818     		adds	r0, r1, r2
 3074 0f6a 10F80C4C 		ldrb	r4, [r0, #-12]	@ zero_extendqisi2
 3075 0f6e 10F80B1C 		ldrb	r1, [r0, #-11]	@ zero_extendqisi2
 3076 0f72 41EA0421 		orr	r1, r1, r4, lsl #8
 3077 0f76 7980     		strh	r1, [r7, #2]	@ movhi
1761:drivers/inv_mpu.c ****         index += 2;
 3078              		.loc 1 1761 0
 3079 0f78 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 3080 0f7a 41F02001 		orr	r1, r1, #32
 3081 0f7e 3170     		strb	r1, [r6]
1762:drivers/inv_mpu.c ****     }
 3082              		.loc 1 1762 0
 3083 0f80 0232     		adds	r2, r2, #2
 3084              	.LVL251:
 3085 0f82 92B2     		uxth	r2, r2
1764:drivers/inv_mpu.c ****         gyro[2] = (data[index+0] << 8) | data[index+1];
 3086              		.loc 1 1764 0
 3087 0f84 9045     		cmp	r8, r2
 3088 0f86 11D0     		beq	.L301
 3089              	.LVL252:
 3090              	.L310:
1764:drivers/inv_mpu.c ****         gyro[2] = (data[index+0] << 8) | data[index+1];
 3091              		.loc 1 1764 0 is_stmt 0 discriminator 1
 3092 0f88 1749     		ldr	r1, .L323
 3093 0f8a 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 3094 0f8c 11F0100F 		tst	r1, #16
 3095 0f90 0CD0     		beq	.L301
1765:drivers/inv_mpu.c ****         sensors[0] |= INV_Z_GYRO;
 3096              		.loc 1 1765 0 is_stmt 1
 3097 0f92 04A9     		add	r1, sp, #16
 3098 0f94 0A44     		add	r2, r2, r1
 3099 0f96 12F80C1C 		ldrb	r1, [r2, #-12]	@ zero_extendqisi2
 3100 0f9a 12F80B2C 		ldrb	r2, [r2, #-11]	@ zero_extendqisi2
ARM GAS  /tmp/cci8Vpl3.s 			page 100


 3101 0f9e 42EA0122 		orr	r2, r2, r1, lsl #8
 3102 0fa2 BA80     		strh	r2, [r7, #4]	@ movhi
1766:drivers/inv_mpu.c ****         index += 2;
 3103              		.loc 1 1766 0
 3104 0fa4 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 3105 0fa6 42F01002 		orr	r2, r2, #16
 3106 0faa 3270     		strb	r2, [r6]
 3107              	.L301:
1771:drivers/inv_mpu.c **** 
 3108              		.loc 1 1771 0
 3109 0fac 1846     		mov	r0, r3
 3110 0fae 05B0     		add	sp, sp, #20
 3111              		.cfi_remember_state
 3112              		.cfi_def_cfa_offset 28
 3113              		@ sp needed
 3114 0fb0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3115              	.LVL253:
 3116              	.L322:
 3117              		.cfi_restore_state
1736:drivers/inv_mpu.c ****             return -2;
 3118              		.loc 1 1736 0
 3119 0fb4 FFF7FEFF 		bl	mpu_reset_fifo
 3120              	.LVL254:
1737:drivers/inv_mpu.c ****         }
 3121              		.loc 1 1737 0
 3122 0fb8 6FF00103 		mvn	r3, #1
 3123 0fbc F6E7     		b	.L301
 3124              	.LVL255:
 3125              	.L317:
1705:drivers/inv_mpu.c **** 
 3126              		.loc 1 1705 0
 3127 0fbe 0022     		movs	r2, #0
 3128 0fc0 B4E7     		b	.L308
 3129              	.LVL256:
 3130              	.L311:
 3131              		.cfi_def_cfa_offset 0
 3132              		.cfi_restore 4
 3133              		.cfi_restore 5
 3134              		.cfi_restore 6
 3135              		.cfi_restore 7
 3136              		.cfi_restore 8
 3137              		.cfi_restore 9
 3138              		.cfi_restore 14
1708:drivers/inv_mpu.c **** 
 3139              		.loc 1 1708 0
 3140 0fc2 4FF0FF33 		mov	r3, #-1
 3141              	.LVL257:
 3142              	.L319:
1771:drivers/inv_mpu.c **** 
 3143              		.loc 1 1771 0
 3144 0fc6 1846     		mov	r0, r3
 3145              	.LVL258:
 3146 0fc8 7047     		bx	lr
 3147              	.LVL259:
 3148              	.L312:
1712:drivers/inv_mpu.c ****     if (!st.chip_cfg.fifo_enable)
 3149              		.loc 1 1712 0
ARM GAS  /tmp/cci8Vpl3.s 			page 101


 3150 0fca 4FF0FF33 		mov	r3, #-1
 3151              	.LVL260:
 3152 0fce FAE7     		b	.L319
 3153              	.LVL261:
 3154              	.L313:
1714:drivers/inv_mpu.c **** 
 3155              		.loc 1 1714 0
 3156 0fd0 4FF0FF33 		mov	r3, #-1
 3157              	.LVL262:
 3158 0fd4 F7E7     		b	.L319
 3159              	.LVL263:
 3160              	.L314:
 3161              		.cfi_def_cfa_offset 48
 3162              		.cfi_offset 4, -28
 3163              		.cfi_offset 5, -24
 3164              		.cfi_offset 6, -20
 3165              		.cfi_offset 7, -16
 3166              		.cfi_offset 8, -12
 3167              		.cfi_offset 9, -8
 3168              		.cfi_offset 14, -4
1726:drivers/inv_mpu.c ****     fifo_count = (data[0] << 8) | data[1];
 3169              		.loc 1 1726 0
 3170 0fd6 4FF0FF33 		mov	r3, #-1
 3171 0fda E7E7     		b	.L301
 3172              	.LVL264:
 3173              	.L315:
1734:drivers/inv_mpu.c ****         if (data[0] & BIT_FIFO_OVERFLOW) {
 3174              		.loc 1 1734 0
 3175 0fdc 4FF0FF33 		mov	r3, #-1
 3176 0fe0 E4E7     		b	.L301
 3177              	.L316:
1743:drivers/inv_mpu.c ****     more[0] = fifo_count / packet_size - 1;
 3178              		.loc 1 1743 0
 3179 0fe2 4FF0FF33 		mov	r3, #-1
 3180 0fe6 E1E7     		b	.L301
 3181              	.L324:
 3182              		.align	2
 3183              	.L323:
 3184 0fe8 00000000 		.word	.LANCHOR0
 3185              		.cfi_endproc
 3186              	.LFE91:
 3187              		.size	mpu_read_fifo, .-mpu_read_fifo
 3188              		.align	1
 3189              		.global	mpu_read_fifo_stream
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu softvfp
 3194              		.type	mpu_read_fifo_stream, %function
 3195              	mpu_read_fifo_stream:
 3196              	.LFB92:
1782:drivers/inv_mpu.c ****     unsigned char tmp[2];
 3197              		.loc 1 1782 0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 8
 3200              		@ frame_needed = 0, uses_anonymous_args = 0
 3201              	.LVL265:
ARM GAS  /tmp/cci8Vpl3.s 			page 102


 3202 0fec F0B5     		push	{r4, r5, r6, r7, lr}
 3203              		.cfi_def_cfa_offset 20
 3204              		.cfi_offset 4, -20
 3205              		.cfi_offset 5, -16
 3206              		.cfi_offset 6, -12
 3207              		.cfi_offset 7, -8
 3208              		.cfi_offset 14, -4
 3209 0fee 83B0     		sub	sp, sp, #12
 3210              		.cfi_def_cfa_offset 32
1785:drivers/inv_mpu.c ****         return -1;
 3211              		.loc 1 1785 0
 3212 0ff0 2E4F     		ldr	r7, .L337
 3213 0ff2 97F82470 		ldrb	r7, [r7, #36]	@ zero_extendqisi2
 3214 0ff6 002F     		cmp	r7, #0
 3215 0ff8 49D0     		beq	.L329
1787:drivers/inv_mpu.c ****         return -1;
 3216              		.loc 1 1787 0
 3217 0ffa 2C4F     		ldr	r7, .L337
 3218 0ffc BF7A     		ldrb	r7, [r7, #10]	@ zero_extendqisi2
 3219 0ffe 002F     		cmp	r7, #0
 3220 1000 48D0     		beq	.L330
 3221 1002 1646     		mov	r6, r2
 3222 1004 0F46     		mov	r7, r1
 3223 1006 0546     		mov	r5, r0
1790:drivers/inv_mpu.c ****         return -1;
 3224              		.loc 1 1790 0
 3225 1008 284B     		ldr	r3, .L337
 3226 100a 1968     		ldr	r1, [r3]
 3227              	.LVL266:
 3228 100c 5868     		ldr	r0, [r3, #4]
 3229              	.LVL267:
 3230 100e 01AB     		add	r3, sp, #4
 3231 1010 0222     		movs	r2, #2
 3232              	.LVL268:
 3233 1012 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 3234 1014 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3235 1016 FFF7FEFF 		bl	i2cRead
 3236              	.LVL269:
 3237 101a 0028     		cmp	r0, #0
 3238 101c 3DD1     		bne	.L331
1792:drivers/inv_mpu.c ****     if (fifo_count < length) {
 3239              		.loc 1 1792 0
 3240 101e 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 3241 1022 9DF80540 		ldrb	r4, [sp, #5]	@ zero_extendqisi2
 3242 1026 44EA0024 		orr	r4, r4, r0, lsl #8
 3243              	.LVL270:
1793:drivers/inv_mpu.c ****         more[0] = 0;
 3244              		.loc 1 1793 0
 3245 102a AC42     		cmp	r4, r5
 3246 102c 25D3     		bcc	.L335
1797:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
 3247              		.loc 1 1797 0
 3248 102e 1F4B     		ldr	r3, .L337
 3249 1030 5868     		ldr	r0, [r3, #4]
 3250 1032 4388     		ldrh	r3, [r0, #2]
 3251 1034 B4EB530F 		cmp	r4, r3, lsr #1
 3252 1038 0DD9     		bls	.L328
ARM GAS  /tmp/cci8Vpl3.s 			page 103


1799:drivers/inv_mpu.c ****             return -1;
 3253              		.loc 1 1799 0
 3254 103a 1C4B     		ldr	r3, .L337
 3255 103c 1968     		ldr	r1, [r3]
 3256 103e 01AB     		add	r3, sp, #4
 3257 1040 0122     		movs	r2, #1
 3258 1042 497C     		ldrb	r1, [r1, #17]	@ zero_extendqisi2
 3259 1044 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3260 1046 FFF7FEFF 		bl	i2cRead
 3261              	.LVL271:
 3262 104a 48BB     		cbnz	r0, .L332
1801:drivers/inv_mpu.c ****             mpu_reset_fifo();
 3263              		.loc 1 1801 0
 3264 104c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 3265 1050 13F0100F 		tst	r3, #16
 3266 1054 16D1     		bne	.L336
 3267              	.L328:
1807:drivers/inv_mpu.c ****         return -1;
 3268              		.loc 1 1807 0
 3269 1056 154B     		ldr	r3, .L337
 3270 1058 1968     		ldr	r1, [r3]
 3271 105a 5868     		ldr	r0, [r3, #4]
 3272 105c 3B46     		mov	r3, r7
 3273 105e EAB2     		uxtb	r2, r5
 3274 1060 C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 3275 1062 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3276 1064 FFF7FEFF 		bl	i2cRead
 3277              	.LVL272:
 3278 1068 0346     		mov	r3, r0
 3279 106a E0B9     		cbnz	r0, .L333
1809:drivers/inv_mpu.c ****     return 0;
 3280              		.loc 1 1809 0
 3281 106c B4FBF5F4 		udiv	r4, r4, r5
 3282              	.LVL273:
 3283 1070 013C     		subs	r4, r4, #1
 3284 1072 3470     		strb	r4, [r6]
 3285              	.LVL274:
 3286              	.L325:
1811:drivers/inv_mpu.c **** 
 3287              		.loc 1 1811 0
 3288 1074 1846     		mov	r0, r3
 3289 1076 03B0     		add	sp, sp, #12
 3290              		.cfi_remember_state
 3291              		.cfi_def_cfa_offset 20
 3292              		@ sp needed
 3293 1078 F0BD     		pop	{r4, r5, r6, r7, pc}
 3294              	.LVL275:
 3295              	.L335:
 3296              		.cfi_restore_state
1794:drivers/inv_mpu.c ****         return -1;
 3297              		.loc 1 1794 0
 3298 107a 0023     		movs	r3, #0
 3299 107c 3370     		strb	r3, [r6]
1795:drivers/inv_mpu.c ****     }
 3300              		.loc 1 1795 0
 3301 107e 4FF0FF33 		mov	r3, #-1
 3302 1082 F7E7     		b	.L325
ARM GAS  /tmp/cci8Vpl3.s 			page 104


 3303              	.L336:
1802:drivers/inv_mpu.c ****             return -2;
 3304              		.loc 1 1802 0
 3305 1084 FFF7FEFF 		bl	mpu_reset_fifo
 3306              	.LVL276:
1803:drivers/inv_mpu.c ****         }
 3307              		.loc 1 1803 0
 3308 1088 6FF00103 		mvn	r3, #1
 3309 108c F2E7     		b	.L325
 3310              	.LVL277:
 3311              	.L329:
1786:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 3312              		.loc 1 1786 0
 3313 108e 4FF0FF33 		mov	r3, #-1
 3314 1092 EFE7     		b	.L325
 3315              	.L330:
1788:drivers/inv_mpu.c **** 
 3316              		.loc 1 1788 0
 3317 1094 4FF0FF33 		mov	r3, #-1
 3318 1098 ECE7     		b	.L325
 3319              	.LVL278:
 3320              	.L331:
1791:drivers/inv_mpu.c ****     fifo_count = (tmp[0] << 8) | tmp[1];
 3321              		.loc 1 1791 0
 3322 109a 4FF0FF33 		mov	r3, #-1
 3323 109e E9E7     		b	.L325
 3324              	.LVL279:
 3325              	.L332:
1800:drivers/inv_mpu.c ****         if (tmp[0] & BIT_FIFO_OVERFLOW) {
 3326              		.loc 1 1800 0
 3327 10a0 4FF0FF33 		mov	r3, #-1
 3328 10a4 E6E7     		b	.L325
 3329              	.L333:
1808:drivers/inv_mpu.c ****     more[0] = fifo_count / length - 1;
 3330              		.loc 1 1808 0
 3331 10a6 4FF0FF33 		mov	r3, #-1
 3332 10aa E3E7     		b	.L325
 3333              	.L338:
 3334              		.align	2
 3335              	.L337:
 3336 10ac 00000000 		.word	.LANCHOR0
 3337              		.cfi_endproc
 3338              	.LFE92:
 3339              		.size	mpu_read_fifo_stream, .-mpu_read_fifo_stream
 3340              		.align	1
 3341              		.global	mpu_set_bypass
 3342              		.syntax unified
 3343              		.thumb
 3344              		.thumb_func
 3345              		.fpu softvfp
 3346              		.type	mpu_set_bypass, %function
 3347              	mpu_set_bypass:
 3348              	.LFB93:
1819:drivers/inv_mpu.c ****     unsigned char tmp;
 3349              		.loc 1 1819 0
 3350              		.cfi_startproc
 3351              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cci8Vpl3.s 			page 105


 3352              		@ frame_needed = 0, uses_anonymous_args = 0
 3353              	.LVL280:
1822:drivers/inv_mpu.c ****         return 0;
 3354              		.loc 1 1822 0
 3355 10b0 554B     		ldr	r3, .L361
 3356 10b2 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 3357 10b4 8342     		cmp	r3, r0
 3358 10b6 00F09580 		beq	.L350
1819:drivers/inv_mpu.c ****     unsigned char tmp;
 3359              		.loc 1 1819 0
 3360 10ba 10B5     		push	{r4, lr}
 3361              		.cfi_def_cfa_offset 8
 3362              		.cfi_offset 4, -8
 3363              		.cfi_offset 14, -4
 3364 10bc 82B0     		sub	sp, sp, #8
 3365              		.cfi_def_cfa_offset 16
 3366 10be 0446     		mov	r4, r0
1825:drivers/inv_mpu.c ****         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
 3367              		.loc 1 1825 0
 3368 10c0 0028     		cmp	r0, #0
 3369 10c2 43D0     		beq	.L341
1826:drivers/inv_mpu.c ****             return -1;
 3370              		.loc 1 1826 0
 3371 10c4 504B     		ldr	r3, .L361
 3372 10c6 1968     		ldr	r1, [r3]
 3373 10c8 5868     		ldr	r0, [r3, #4]
 3374              	.LVL281:
 3375 10ca 0DF10703 		add	r3, sp, #7
 3376 10ce 0122     		movs	r2, #1
 3377 10d0 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3378 10d2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3379 10d4 FFF7FEFF 		bl	i2cRead
 3380              	.LVL282:
 3381 10d8 0028     		cmp	r0, #0
 3382 10da 40F08580 		bne	.L351
1828:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
 3383              		.loc 1 1828 0
 3384 10de 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 3385 10e2 22F02002 		bic	r2, r2, #32
 3386 10e6 02AB     		add	r3, sp, #8
 3387 10e8 03F8012D 		strb	r2, [r3, #-1]!
1829:drivers/inv_mpu.c ****             return -1;
 3388              		.loc 1 1829 0
 3389 10ec 464A     		ldr	r2, .L361
 3390 10ee 1168     		ldr	r1, [r2]
 3391 10f0 5068     		ldr	r0, [r2, #4]
 3392 10f2 0122     		movs	r2, #1
 3393 10f4 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3394 10f6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3395 10f8 FFF7FEFF 		bl	i2cWrite
 3396              	.LVL283:
 3397 10fc 0028     		cmp	r0, #0
 3398 10fe 76D1     		bne	.L352
1831:drivers/inv_mpu.c ****         tmp = BIT_BYPASS_EN;
 3399              		.loc 1 1831 0
 3400 1100 0320     		movs	r0, #3
 3401 1102 FFF7FEFF 		bl	DelayMs
ARM GAS  /tmp/cci8Vpl3.s 			page 106


 3402              	.LVL284:
1832:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
 3403              		.loc 1 1832 0
 3404 1106 0223     		movs	r3, #2
 3405 1108 8DF80730 		strb	r3, [sp, #7]
1833:drivers/inv_mpu.c ****             tmp |= BIT_ACTL;
 3406              		.loc 1 1833 0
 3407 110c 3E4B     		ldr	r3, .L361
 3408 110e 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3409 1112 13B1     		cbz	r3, .L342
1834:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
 3410              		.loc 1 1834 0
 3411 1114 8223     		movs	r3, #130
 3412 1116 8DF80730 		strb	r3, [sp, #7]
 3413              	.L342:
1835:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
 3414              		.loc 1 1835 0
 3415 111a 3B4B     		ldr	r3, .L361
 3416 111c 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3417 1120 2BB1     		cbz	r3, .L343
1836:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
 3418              		.loc 1 1836 0
 3419 1122 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3420 1126 43F03003 		orr	r3, r3, #48
 3421 112a 8DF80730 		strb	r3, [sp, #7]
 3422              	.L343:
1837:drivers/inv_mpu.c ****             return -1;
 3423              		.loc 1 1837 0
 3424 112e 364B     		ldr	r3, .L361
 3425 1130 1968     		ldr	r1, [r3]
 3426 1132 5868     		ldr	r0, [r3, #4]
 3427 1134 0DF10703 		add	r3, sp, #7
 3428 1138 0122     		movs	r2, #1
 3429 113a 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 3430 113c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3431 113e FFF7FEFF 		bl	i2cWrite
 3432              	.LVL285:
 3433 1142 0028     		cmp	r0, #0
 3434 1144 45D0     		beq	.L344
1838:drivers/inv_mpu.c ****     } else {
 3435              		.loc 1 1838 0
 3436 1146 4FF0FF30 		mov	r0, #-1
 3437 114a 45E0     		b	.L339
 3438              	.LVL286:
 3439              	.L341:
1841:drivers/inv_mpu.c ****             return -1;
 3440              		.loc 1 1841 0
 3441 114c 2E4B     		ldr	r3, .L361
 3442 114e 1968     		ldr	r1, [r3]
 3443 1150 5868     		ldr	r0, [r3, #4]
 3444              	.LVL287:
 3445 1152 0DF10703 		add	r3, sp, #7
 3446 1156 0122     		movs	r2, #1
 3447 1158 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3448 115a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3449 115c FFF7FEFF 		bl	i2cRead
 3450              	.LVL288:
ARM GAS  /tmp/cci8Vpl3.s 			page 107


 3451 1160 0028     		cmp	r0, #0
 3452 1162 47D1     		bne	.L354
1843:drivers/inv_mpu.c ****             tmp |= BIT_AUX_IF_EN;
 3453              		.loc 1 1843 0
 3454 1164 284B     		ldr	r3, .L361
 3455 1166 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 3456 1168 13F0010F 		tst	r3, #1
1844:drivers/inv_mpu.c ****         else
 3457              		.loc 1 1844 0
 3458 116c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3459 1170 14BF     		ite	ne
 3460 1172 43F02003 		orrne	r3, r3, #32
1846:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
 3461              		.loc 1 1846 0
 3462 1176 23F02003 		biceq	r3, r3, #32
 3463 117a 8DF80730 		strb	r3, [sp, #7]
1847:drivers/inv_mpu.c ****             return -1;
 3464              		.loc 1 1847 0
 3465 117e 224B     		ldr	r3, .L361
 3466 1180 1968     		ldr	r1, [r3]
 3467 1182 5868     		ldr	r0, [r3, #4]
 3468 1184 0DF10703 		add	r3, sp, #7
 3469 1188 0122     		movs	r2, #1
 3470 118a 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3471 118c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3472 118e FFF7FEFF 		bl	i2cWrite
 3473              	.LVL289:
 3474 1192 90BB     		cbnz	r0, .L355
1849:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
 3475              		.loc 1 1849 0
 3476 1194 0320     		movs	r0, #3
 3477 1196 FFF7FEFF 		bl	DelayMs
 3478              	.LVL290:
1850:drivers/inv_mpu.c ****             tmp = BIT_ACTL;
 3479              		.loc 1 1850 0
 3480 119a 1B4B     		ldr	r3, .L361
 3481 119c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3482 11a0 E3B1     		cbz	r3, .L347
1851:drivers/inv_mpu.c ****         else
 3483              		.loc 1 1851 0
 3484 11a2 8023     		movs	r3, #128
 3485 11a4 8DF80730 		strb	r3, [sp, #7]
 3486              	.L348:
1854:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
 3487              		.loc 1 1854 0
 3488 11a8 174B     		ldr	r3, .L361
 3489 11aa 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3490 11ae 2BB1     		cbz	r3, .L349
1855:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
 3491              		.loc 1 1855 0
 3492 11b0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3493 11b4 43F03003 		orr	r3, r3, #48
 3494 11b8 8DF80730 		strb	r3, [sp, #7]
 3495              	.L349:
1856:drivers/inv_mpu.c ****             return -1;
 3496              		.loc 1 1856 0
 3497 11bc 124B     		ldr	r3, .L361
ARM GAS  /tmp/cci8Vpl3.s 			page 108


 3498 11be 1968     		ldr	r1, [r3]
 3499 11c0 5868     		ldr	r0, [r3, #4]
 3500 11c2 0DF10703 		add	r3, sp, #7
 3501 11c6 0122     		movs	r2, #1
 3502 11c8 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 3503 11ca 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3504 11cc FFF7FEFF 		bl	i2cWrite
 3505              	.LVL291:
 3506 11d0 B0B9     		cbnz	r0, .L356
 3507              	.L344:
1859:drivers/inv_mpu.c ****     return 0;
 3508              		.loc 1 1859 0
 3509 11d2 0D4B     		ldr	r3, .L361
 3510 11d4 9C74     		strb	r4, [r3, #18]
1860:drivers/inv_mpu.c **** }
 3511              		.loc 1 1860 0
 3512 11d6 0020     		movs	r0, #0
 3513              	.L339:
1861:drivers/inv_mpu.c **** 
 3514              		.loc 1 1861 0
 3515 11d8 02B0     		add	sp, sp, #8
 3516              		.cfi_remember_state
 3517              		.cfi_def_cfa_offset 8
 3518              		@ sp needed
 3519 11da 10BD     		pop	{r4, pc}
 3520              	.L347:
 3521              		.cfi_restore_state
1853:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
 3522              		.loc 1 1853 0
 3523 11dc 0023     		movs	r3, #0
 3524 11de 8DF80730 		strb	r3, [sp, #7]
 3525 11e2 E1E7     		b	.L348
 3526              	.LVL292:
 3527              	.L350:
 3528              		.cfi_def_cfa_offset 0
 3529              		.cfi_restore 4
 3530              		.cfi_restore 14
1823:drivers/inv_mpu.c **** 
 3531              		.loc 1 1823 0
 3532 11e4 0020     		movs	r0, #0
 3533              	.LVL293:
 3534 11e6 7047     		bx	lr
 3535              	.L351:
 3536              		.cfi_def_cfa_offset 16
 3537              		.cfi_offset 4, -8
 3538              		.cfi_offset 14, -4
1827:drivers/inv_mpu.c ****         tmp &= ~BIT_AUX_IF_EN;
 3539              		.loc 1 1827 0
 3540 11e8 4FF0FF30 		mov	r0, #-1
 3541 11ec F4E7     		b	.L339
 3542              	.L352:
1830:drivers/inv_mpu.c ****         delay_ms(3);
 3543              		.loc 1 1830 0
 3544 11ee 4FF0FF30 		mov	r0, #-1
 3545 11f2 F1E7     		b	.L339
 3546              	.L354:
1842:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
ARM GAS  /tmp/cci8Vpl3.s 			page 109


 3547              		.loc 1 1842 0
 3548 11f4 4FF0FF30 		mov	r0, #-1
 3549 11f8 EEE7     		b	.L339
 3550              	.L355:
1848:drivers/inv_mpu.c ****         delay_ms(3);
 3551              		.loc 1 1848 0
 3552 11fa 4FF0FF30 		mov	r0, #-1
 3553 11fe EBE7     		b	.L339
 3554              	.L356:
1857:drivers/inv_mpu.c ****     }
 3555              		.loc 1 1857 0
 3556 1200 4FF0FF30 		mov	r0, #-1
 3557 1204 E8E7     		b	.L339
 3558              	.L362:
 3559 1206 00BF     		.align	2
 3560              	.L361:
 3561 1208 00000000 		.word	.LANCHOR0
 3562              		.cfi_endproc
 3563              	.LFE93:
 3564              		.size	mpu_set_bypass, .-mpu_set_bypass
 3565              		.align	1
 3566              		.global	mpu_set_int_level
 3567              		.syntax unified
 3568              		.thumb
 3569              		.thumb_func
 3570              		.fpu softvfp
 3571              		.type	mpu_set_int_level, %function
 3572              	mpu_set_int_level:
 3573              	.LFB94:
1869:drivers/inv_mpu.c ****     st.chip_cfg.active_low_int = active_low;
 3574              		.loc 1 1869 0
 3575              		.cfi_startproc
 3576              		@ args = 0, pretend = 0, frame = 0
 3577              		@ frame_needed = 0, uses_anonymous_args = 0
 3578              		@ link register save eliminated.
 3579              	.LVL294:
1870:drivers/inv_mpu.c ****     return 0;
 3580              		.loc 1 1870 0
 3581 120c 024B     		ldr	r3, .L364
 3582 120e 83F82200 		strb	r0, [r3, #34]
1872:drivers/inv_mpu.c **** 
 3583              		.loc 1 1872 0
 3584 1212 0020     		movs	r0, #0
 3585              	.LVL295:
 3586 1214 7047     		bx	lr
 3587              	.L365:
 3588 1216 00BF     		.align	2
 3589              	.L364:
 3590 1218 00000000 		.word	.LANCHOR0
 3591              		.cfi_endproc
 3592              	.LFE94:
 3593              		.size	mpu_set_int_level, .-mpu_set_int_level
 3594              		.align	1
 3595              		.global	mpu_set_int_latched
 3596              		.syntax unified
 3597              		.thumb
 3598              		.thumb_func
ARM GAS  /tmp/cci8Vpl3.s 			page 110


 3599              		.fpu softvfp
 3600              		.type	mpu_set_int_latched, %function
 3601              	mpu_set_int_latched:
 3602              	.LFB95:
1881:drivers/inv_mpu.c ****     unsigned char tmp;
 3603              		.loc 1 1881 0
 3604              		.cfi_startproc
 3605              		@ args = 0, pretend = 0, frame = 8
 3606              		@ frame_needed = 0, uses_anonymous_args = 0
 3607              	.LVL296:
1883:drivers/inv_mpu.c ****         return 0;
 3608              		.loc 1 1883 0
 3609 121c 1D4B     		ldr	r3, .L378
 3610 121e 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3611 1222 8342     		cmp	r3, r0
 3612 1224 2FD0     		beq	.L372
1881:drivers/inv_mpu.c ****     unsigned char tmp;
 3613              		.loc 1 1881 0
 3614 1226 10B5     		push	{r4, lr}
 3615              		.cfi_def_cfa_offset 8
 3616              		.cfi_offset 4, -8
 3617              		.cfi_offset 14, -4
 3618 1228 82B0     		sub	sp, sp, #8
 3619              		.cfi_def_cfa_offset 16
1886:drivers/inv_mpu.c ****         tmp = BIT_LATCH_EN | BIT_ANY_RD_CLR;
 3620              		.loc 1 1886 0
 3621 122a 40B3     		cbz	r0, .L368
1887:drivers/inv_mpu.c ****     else
 3622              		.loc 1 1887 0
 3623 122c 3023     		movs	r3, #48
 3624 122e 8DF80730 		strb	r3, [sp, #7]
 3625              	.L369:
1890:drivers/inv_mpu.c ****         tmp |= BIT_BYPASS_EN;
 3626              		.loc 1 1890 0
 3627 1232 184B     		ldr	r3, .L378
 3628 1234 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 3629 1236 2BB1     		cbz	r3, .L370
1891:drivers/inv_mpu.c ****     if (st.chip_cfg.active_low_int)
 3630              		.loc 1 1891 0
 3631 1238 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3632 123c 43F00203 		orr	r3, r3, #2
 3633 1240 8DF80730 		strb	r3, [sp, #7]
 3634              	.L370:
1892:drivers/inv_mpu.c ****         tmp |= BIT_ACTL;
 3635              		.loc 1 1892 0
 3636 1244 134B     		ldr	r3, .L378
 3637 1246 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3638 124a 2BB1     		cbz	r3, .L371
1893:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
 3639              		.loc 1 1893 0
 3640 124c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3641 1250 63F07F03 		orn	r3, r3, #127
 3642 1254 8DF80730 		strb	r3, [sp, #7]
 3643              	.L371:
 3644 1258 0446     		mov	r4, r0
1894:drivers/inv_mpu.c ****         return -1;
 3645              		.loc 1 1894 0
ARM GAS  /tmp/cci8Vpl3.s 			page 111


 3646 125a 0E4B     		ldr	r3, .L378
 3647 125c 1968     		ldr	r1, [r3]
 3648 125e 5868     		ldr	r0, [r3, #4]
 3649              	.LVL297:
 3650 1260 0DF10703 		add	r3, sp, #7
 3651 1264 0122     		movs	r2, #1
 3652 1266 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 3653 1268 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3654 126a FFF7FEFF 		bl	i2cWrite
 3655              	.LVL298:
 3656 126e 0346     		mov	r3, r0
 3657 1270 60B9     		cbnz	r0, .L373
1896:drivers/inv_mpu.c ****     return 0;
 3658              		.loc 1 1896 0
 3659 1272 084A     		ldr	r2, .L378
 3660 1274 82F82340 		strb	r4, [r2, #35]
 3661              	.L366:
1898:drivers/inv_mpu.c **** 
 3662              		.loc 1 1898 0
 3663 1278 1846     		mov	r0, r3
 3664 127a 02B0     		add	sp, sp, #8
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 8
 3667              		@ sp needed
 3668 127c 10BD     		pop	{r4, pc}
 3669              	.LVL299:
 3670              	.L368:
 3671              		.cfi_restore_state
1889:drivers/inv_mpu.c ****     if (st.chip_cfg.bypass_mode)
 3672              		.loc 1 1889 0
 3673 127e 0023     		movs	r3, #0
 3674 1280 8DF80730 		strb	r3, [sp, #7]
 3675 1284 D5E7     		b	.L369
 3676              	.L372:
 3677              		.cfi_def_cfa_offset 0
 3678              		.cfi_restore 4
 3679              		.cfi_restore 14
1884:drivers/inv_mpu.c **** 
 3680              		.loc 1 1884 0
 3681 1286 0023     		movs	r3, #0
1898:drivers/inv_mpu.c **** 
 3682              		.loc 1 1898 0
 3683 1288 1846     		mov	r0, r3
 3684              	.LVL300:
 3685 128a 7047     		bx	lr
 3686              	.L373:
 3687              		.cfi_def_cfa_offset 16
 3688              		.cfi_offset 4, -8
 3689              		.cfi_offset 14, -4
1895:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = enable;
 3690              		.loc 1 1895 0
 3691 128c 4FF0FF33 		mov	r3, #-1
 3692 1290 F2E7     		b	.L366
 3693              	.L379:
 3694 1292 00BF     		.align	2
 3695              	.L378:
 3696 1294 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cci8Vpl3.s 			page 112


 3697              		.cfi_endproc
 3698              	.LFE95:
 3699              		.size	mpu_set_int_latched, .-mpu_set_int_latched
 3700              		.align	1
 3701              		.global	mpu_lp_accel_mode
 3702              		.syntax unified
 3703              		.thumb
 3704              		.thumb_func
 3705              		.fpu softvfp
 3706              		.type	mpu_lp_accel_mode, %function
 3707              	mpu_lp_accel_mode:
 3708              	.LFB68:
 890:drivers/inv_mpu.c ****     unsigned char tmp[2];
 3709              		.loc 1 890 0
 3710              		.cfi_startproc
 3711              		@ args = 0, pretend = 0, frame = 8
 3712              		@ frame_needed = 0, uses_anonymous_args = 0
 3713              	.LVL301:
 3714 1298 10B5     		push	{r4, lr}
 3715              		.cfi_def_cfa_offset 8
 3716              		.cfi_offset 4, -8
 3717              		.cfi_offset 14, -4
 3718 129a 82B0     		sub	sp, sp, #8
 3719              		.cfi_def_cfa_offset 16
 893:drivers/inv_mpu.c ****         return -1;
 3720              		.loc 1 893 0
 3721 129c 2828     		cmp	r0, #40
 3722 129e 5ED8     		bhi	.L387
 3723 12a0 0446     		mov	r4, r0
 896:drivers/inv_mpu.c ****         mpu_set_int_latched(0);
 3724              		.loc 1 896 0
 3725 12a2 D0B9     		cbnz	r0, .L382
 897:drivers/inv_mpu.c ****         tmp[0] = 0;
 3726              		.loc 1 897 0
 3727 12a4 0020     		movs	r0, #0
 3728              	.LVL302:
 3729 12a6 FFF7FEFF 		bl	mpu_set_int_latched
 3730              	.LVL303:
 898:drivers/inv_mpu.c ****         tmp[1] = BIT_STBY_XYZG;
 3731              		.loc 1 898 0
 3732 12aa 0023     		movs	r3, #0
 3733 12ac 8DF80430 		strb	r3, [sp, #4]
 899:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 3734              		.loc 1 899 0
 3735 12b0 0723     		movs	r3, #7
 3736 12b2 8DF80530 		strb	r3, [sp, #5]
 900:drivers/inv_mpu.c ****             return -1;
 3737              		.loc 1 900 0
 3738 12b6 2E4B     		ldr	r3, .L393
 3739 12b8 1968     		ldr	r1, [r3]
 3740 12ba 5868     		ldr	r0, [r3, #4]
 3741 12bc 01AB     		add	r3, sp, #4
 3742 12be 0222     		movs	r2, #2
 3743 12c0 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 3744 12c2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3745 12c4 FFF7FEFF 		bl	i2cWrite
 3746              	.LVL304:
ARM GAS  /tmp/cci8Vpl3.s 			page 113


 3747 12c8 0446     		mov	r4, r0
 3748 12ca 0028     		cmp	r0, #0
 3749 12cc 4AD1     		bne	.L388
 902:drivers/inv_mpu.c ****         return 0;
 3750              		.loc 1 902 0
 3751 12ce 0022     		movs	r2, #0
 3752 12d0 274B     		ldr	r3, .L393
 3753 12d2 1A75     		strb	r2, [r3, #20]
 3754              	.L380:
 965:drivers/inv_mpu.c **** 
 3755              		.loc 1 965 0
 3756 12d4 2046     		mov	r0, r4
 3757 12d6 02B0     		add	sp, sp, #8
 3758              		.cfi_remember_state
 3759              		.cfi_def_cfa_offset 8
 3760              		@ sp needed
 3761 12d8 10BD     		pop	{r4, pc}
 3762              	.LVL305:
 3763              	.L382:
 3764              		.cfi_restore_state
 912:drivers/inv_mpu.c **** #if defined MPU6050
 3765              		.loc 1 912 0
 3766 12da 0120     		movs	r0, #1
 3767              	.LVL306:
 3768 12dc FFF7FEFF 		bl	mpu_set_int_latched
 3769              	.LVL307:
 914:drivers/inv_mpu.c ****     if (rate == 1) {
 3770              		.loc 1 914 0
 3771 12e0 2023     		movs	r3, #32
 3772 12e2 8DF80430 		strb	r3, [sp, #4]
 915:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_1_25HZ;
 3773              		.loc 1 915 0
 3774 12e6 012C     		cmp	r4, #1
 3775 12e8 24D0     		beq	.L391
 918:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_5HZ;
 3776              		.loc 1 918 0
 3777 12ea 052C     		cmp	r4, #5
 3778 12ec 29D9     		bls	.L392
 921:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_20HZ;
 3779              		.loc 1 921 0
 3780 12ee 142C     		cmp	r4, #20
 3781 12f0 2ED8     		bhi	.L386
 922:drivers/inv_mpu.c ****         mpu_set_lpf(10);
 3782              		.loc 1 922 0
 3783 12f2 0223     		movs	r3, #2
 3784 12f4 8DF80530 		strb	r3, [sp, #5]
 923:drivers/inv_mpu.c ****     } else {
 3785              		.loc 1 923 0
 3786 12f8 0A20     		movs	r0, #10
 3787 12fa FFF7FEFF 		bl	mpu_set_lpf
 3788              	.LVL308:
 3789              	.L384:
 928:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 3790              		.loc 1 928 0
 3791 12fe 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 3792 1302 9B01     		lsls	r3, r3, #6
 3793 1304 43F00703 		orr	r3, r3, #7
ARM GAS  /tmp/cci8Vpl3.s 			page 114


 3794 1308 8DF80530 		strb	r3, [sp, #5]
 929:drivers/inv_mpu.c ****         return -1;
 3795              		.loc 1 929 0
 3796 130c 184B     		ldr	r3, .L393
 3797 130e 1968     		ldr	r1, [r3]
 3798 1310 5868     		ldr	r0, [r3, #4]
 3799 1312 01AB     		add	r3, sp, #4
 3800 1314 0222     		movs	r2, #2
 3801 1316 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 3802 1318 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3803 131a FFF7FEFF 		bl	i2cWrite
 3804              	.LVL309:
 3805 131e 0446     		mov	r4, r0
 3806 1320 18BB     		cbnz	r0, .L389
 959:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = 0;
 3807              		.loc 1 959 0
 3808 1322 134B     		ldr	r3, .L393
 3809 1324 0822     		movs	r2, #8
 3810 1326 9A72     		strb	r2, [r3, #10]
 960:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 1;
 3811              		.loc 1 960 0
 3812 1328 1873     		strb	r0, [r3, #12]
 961:drivers/inv_mpu.c ****     mpu_configure_fifo(0);
 3813              		.loc 1 961 0
 3814 132a 0122     		movs	r2, #1
 3815 132c 1A75     		strb	r2, [r3, #20]
 962:drivers/inv_mpu.c **** 
 3816              		.loc 1 962 0
 3817 132e FFF7FEFF 		bl	mpu_configure_fifo
 3818              	.LVL310:
 964:drivers/inv_mpu.c **** }
 3819              		.loc 1 964 0
 3820 1332 CFE7     		b	.L380
 3821              	.L391:
 916:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 3822              		.loc 1 916 0
 3823 1334 0023     		movs	r3, #0
 3824 1336 8DF80530 		strb	r3, [sp, #5]
 917:drivers/inv_mpu.c ****     } else if (rate <= 5) {
 3825              		.loc 1 917 0
 3826 133a 0520     		movs	r0, #5
 3827 133c FFF7FEFF 		bl	mpu_set_lpf
 3828              	.LVL311:
 3829 1340 DDE7     		b	.L384
 3830              	.L392:
 919:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 3831              		.loc 1 919 0
 3832 1342 0123     		movs	r3, #1
 3833 1344 8DF80530 		strb	r3, [sp, #5]
 920:drivers/inv_mpu.c ****     } else if (rate <= 20) {
 3834              		.loc 1 920 0
 3835 1348 0520     		movs	r0, #5
 3836 134a FFF7FEFF 		bl	mpu_set_lpf
 3837              	.LVL312:
 3838 134e D6E7     		b	.L384
 3839              	.L386:
 925:drivers/inv_mpu.c ****         mpu_set_lpf(20);
ARM GAS  /tmp/cci8Vpl3.s 			page 115


 3840              		.loc 1 925 0
 3841 1350 0323     		movs	r3, #3
 3842 1352 8DF80530 		strb	r3, [sp, #5]
 926:drivers/inv_mpu.c ****     }
 3843              		.loc 1 926 0
 3844 1356 1420     		movs	r0, #20
 3845 1358 FFF7FEFF 		bl	mpu_set_lpf
 3846              	.LVL313:
 3847 135c CFE7     		b	.L384
 3848              	.LVL314:
 3849              	.L387:
 894:drivers/inv_mpu.c **** 
 3850              		.loc 1 894 0
 3851 135e 4FF0FF34 		mov	r4, #-1
 3852 1362 B7E7     		b	.L380
 3853              	.LVL315:
 3854              	.L388:
 901:drivers/inv_mpu.c ****         st.chip_cfg.lp_accel_mode = 0;
 3855              		.loc 1 901 0
 3856 1364 4FF0FF34 		mov	r4, #-1
 3857 1368 B4E7     		b	.L380
 3858              	.L389:
 930:drivers/inv_mpu.c **** #elif defined MPU6500
 3859              		.loc 1 930 0
 3860 136a 4FF0FF34 		mov	r4, #-1
 3861 136e B1E7     		b	.L380
 3862              	.L394:
 3863              		.align	2
 3864              	.L393:
 3865 1370 00000000 		.word	.LANCHOR0
 3866              		.cfi_endproc
 3867              	.LFE68:
 3868              		.size	mpu_lp_accel_mode, .-mpu_lp_accel_mode
 3869              		.align	1
 3870              		.global	mpu_set_sample_rate
 3871              		.syntax unified
 3872              		.thumb
 3873              		.thumb_func
 3874              		.fpu softvfp
 3875              		.type	mpu_set_sample_rate, %function
 3876              	mpu_set_sample_rate:
 3877              	.LFB81:
1369:drivers/inv_mpu.c ****     unsigned char data;
 3878              		.loc 1 1369 0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 8
 3881              		@ frame_needed = 0, uses_anonymous_args = 0
 3882              	.LVL316:
 3883 1374 10B5     		push	{r4, lr}
 3884              		.cfi_def_cfa_offset 8
 3885              		.cfi_offset 4, -8
 3886              		.cfi_offset 14, -4
 3887 1376 82B0     		sub	sp, sp, #8
 3888              		.cfi_def_cfa_offset 16
1372:drivers/inv_mpu.c ****         return -1;
 3889              		.loc 1 1372 0
 3890 1378 254B     		ldr	r3, .L404
ARM GAS  /tmp/cci8Vpl3.s 			page 116


 3891 137a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 3892 137c 002B     		cmp	r3, #0
 3893 137e 3DD0     		beq	.L399
1375:drivers/inv_mpu.c ****         return -1;
 3894              		.loc 1 1375 0
 3895 1380 234B     		ldr	r3, .L404
 3896 1382 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3897 1386 002B     		cmp	r3, #0
 3898 1388 3BD1     		bne	.L400
 3899 138a 0446     		mov	r4, r0
1378:drivers/inv_mpu.c ****             if (rate && (rate <= 40)) {
 3900              		.loc 1 1378 0
 3901 138c 204B     		ldr	r3, .L404
 3902 138e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 3903 1390 33B1     		cbz	r3, .L397
1379:drivers/inv_mpu.c ****                 /* Just stay in low-power accel mode. */
 3904              		.loc 1 1379 0
 3905 1392 431E     		subs	r3, r0, #1
 3906 1394 9BB2     		uxth	r3, r3
 3907 1396 272B     		cmp	r3, #39
 3908 1398 2BD9     		bls	.L403
1387:drivers/inv_mpu.c ****         }
 3909              		.loc 1 1387 0
 3910 139a 0020     		movs	r0, #0
 3911              	.LVL317:
 3912 139c FFF7FEFF 		bl	mpu_lp_accel_mode
 3913              	.LVL318:
 3914              	.L397:
 3915 13a0 B4F57A7F 		cmp	r4, #1000
 3916 13a4 28BF     		it	cs
 3917 13a6 4FF47A74 		movcs	r4, #1000
 3918              	.LVL319:
1394:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->rate_div, 1, &data))
 3919              		.loc 1 1394 0
 3920 13aa 042C     		cmp	r4, #4
 3921 13ac 38BF     		it	cc
 3922 13ae 0424     		movcc	r4, #4
 3923              	.LVL320:
 3924 13b0 4FF47A73 		mov	r3, #1000
 3925 13b4 93FBF4F4 		sdiv	r4, r3, r4
 3926 13b8 013C     		subs	r4, r4, #1
 3927 13ba 02AB     		add	r3, sp, #8
 3928 13bc 03F8014D 		strb	r4, [r3, #-1]!
1395:drivers/inv_mpu.c ****             return -1;
 3929              		.loc 1 1395 0
 3930 13c0 134A     		ldr	r2, .L404
 3931 13c2 1168     		ldr	r1, [r2]
 3932 13c4 5068     		ldr	r0, [r2, #4]
 3933 13c6 0122     		movs	r2, #1
 3934 13c8 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 3935 13ca 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3936 13cc FFF7FEFF 		bl	i2cWrite
 3937              	.LVL321:
 3938 13d0 0446     		mov	r4, r0
 3939 13d2 C8B9     		cbnz	r0, .L401
1398:drivers/inv_mpu.c **** 
 3940              		.loc 1 1398 0
ARM GAS  /tmp/cci8Vpl3.s 			page 117


 3941 13d4 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3942 13d8 431C     		adds	r3, r0, #1
 3943 13da 4FF47A70 		mov	r0, #1000
 3944 13de 90FBF3F0 		sdiv	r0, r0, r3
 3945 13e2 0B4B     		ldr	r3, .L404
 3946 13e4 D881     		strh	r0, [r3, #14]	@ movhi
1405:drivers/inv_mpu.c ****         return 0;
 3947              		.loc 1 1405 0
 3948 13e6 4008     		lsrs	r0, r0, #1
 3949 13e8 FFF7FEFF 		bl	mpu_set_lpf
 3950              	.LVL322:
 3951              	.L395:
1408:drivers/inv_mpu.c **** 
 3952              		.loc 1 1408 0
 3953 13ec 2046     		mov	r0, r4
 3954 13ee 02B0     		add	sp, sp, #8
 3955              		.cfi_remember_state
 3956              		.cfi_def_cfa_offset 8
 3957              		@ sp needed
 3958 13f0 10BD     		pop	{r4, pc}
 3959              	.LVL323:
 3960              	.L403:
 3961              		.cfi_restore_state
1381:drivers/inv_mpu.c ****                 return 0;
 3962              		.loc 1 1381 0
 3963 13f2 C0B2     		uxtb	r0, r0
 3964              	.LVL324:
 3965 13f4 FFF7FEFF 		bl	mpu_lp_accel_mode
 3966              	.LVL325:
1382:drivers/inv_mpu.c ****             }
 3967              		.loc 1 1382 0
 3968 13f8 0024     		movs	r4, #0
 3969 13fa F7E7     		b	.L395
 3970              	.LVL326:
 3971              	.L399:
1373:drivers/inv_mpu.c **** 
 3972              		.loc 1 1373 0
 3973 13fc 4FF0FF34 		mov	r4, #-1
 3974 1400 F4E7     		b	.L395
 3975              	.L400:
1376:drivers/inv_mpu.c ****     else {
 3976              		.loc 1 1376 0
 3977 1402 4FF0FF34 		mov	r4, #-1
 3978 1406 F1E7     		b	.L395
 3979              	.LVL327:
 3980              	.L401:
1396:drivers/inv_mpu.c **** 
 3981              		.loc 1 1396 0
 3982 1408 4FF0FF34 		mov	r4, #-1
 3983 140c EEE7     		b	.L395
 3984              	.L405:
 3985 140e 00BF     		.align	2
 3986              	.L404:
 3987 1410 00000000 		.word	.LANCHOR0
 3988              		.cfi_endproc
 3989              	.LFE81:
 3990              		.size	mpu_set_sample_rate, .-mpu_set_sample_rate
ARM GAS  /tmp/cci8Vpl3.s 			page 118


 3991              		.align	1
 3992              		.global	mpu_set_sensors
 3993              		.syntax unified
 3994              		.thumb
 3995              		.thumb_func
 3996              		.fpu softvfp
 3997              		.type	mpu_set_sensors, %function
 3998              	mpu_set_sensors:
 3999              	.LFB89:
1594:drivers/inv_mpu.c ****     unsigned char data;
 4000              		.loc 1 1594 0
 4001              		.cfi_startproc
 4002              		@ args = 0, pretend = 0, frame = 8
 4003              		@ frame_needed = 0, uses_anonymous_args = 0
 4004              	.LVL328:
 4005 1414 30B5     		push	{r4, r5, lr}
 4006              		.cfi_def_cfa_offset 12
 4007              		.cfi_offset 4, -12
 4008              		.cfi_offset 5, -8
 4009              		.cfi_offset 14, -4
 4010 1416 83B0     		sub	sp, sp, #12
 4011              		.cfi_def_cfa_offset 24
 4012 1418 0446     		mov	r4, r0
1600:drivers/inv_mpu.c ****         data = INV_CLK_PLL;
 4013              		.loc 1 1600 0
 4014 141a 10F0700F 		tst	r0, #112
 4015 141e 51D0     		beq	.L407
1601:drivers/inv_mpu.c ****     else if (sensors)
 4016              		.loc 1 1601 0
 4017 1420 0123     		movs	r3, #1
 4018 1422 8DF80730 		strb	r3, [sp, #7]
 4019              	.L408:
1606:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
 4020              		.loc 1 1606 0
 4021 1426 3B4B     		ldr	r3, .L424
 4022 1428 1968     		ldr	r1, [r3]
 4023 142a 5868     		ldr	r0, [r3, #4]
 4024              	.LVL329:
 4025 142c 0DF10703 		add	r3, sp, #7
 4026 1430 0122     		movs	r2, #1
 4027 1432 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4028 1434 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4029 1436 FFF7FEFF 		bl	i2cWrite
 4030              	.LVL330:
 4031 143a 0028     		cmp	r0, #0
 4032 143c 5ED1     		bne	.L410
1610:drivers/inv_mpu.c **** 
 4033              		.loc 1 1610 0
 4034 143e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4035 1442 23F04003 		bic	r3, r3, #64
 4036 1446 334A     		ldr	r2, .L424
 4037 1448 1373     		strb	r3, [r2, #12]
1612:drivers/inv_mpu.c ****     if (!(sensors & INV_X_GYRO))
 4038              		.loc 1 1612 0
 4039 144a 0023     		movs	r3, #0
 4040 144c 8DF80730 		strb	r3, [sp, #7]
1613:drivers/inv_mpu.c ****         data |= BIT_STBY_XG;
ARM GAS  /tmp/cci8Vpl3.s 			page 119


 4041              		.loc 1 1613 0
 4042 1450 14F0400F 		tst	r4, #64
 4043 1454 4ED0     		beq	.L420
 4044              	.L414:
1615:drivers/inv_mpu.c ****         data |= BIT_STBY_YG;
 4045              		.loc 1 1615 0
 4046 1456 14F0200F 		tst	r4, #32
 4047 145a 05D1     		bne	.L415
1616:drivers/inv_mpu.c ****     if (!(sensors & INV_Z_GYRO))
 4048              		.loc 1 1616 0
 4049 145c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4050 1460 43F00203 		orr	r3, r3, #2
 4051 1464 8DF80730 		strb	r3, [sp, #7]
 4052              	.L415:
1617:drivers/inv_mpu.c ****         data |= BIT_STBY_ZG;
 4053              		.loc 1 1617 0
 4054 1468 14F0100F 		tst	r4, #16
 4055 146c 05D1     		bne	.L416
1618:drivers/inv_mpu.c ****     if (!(sensors & INV_XYZ_ACCEL))
 4056              		.loc 1 1618 0
 4057 146e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4058 1472 43F00103 		orr	r3, r3, #1
 4059 1476 8DF80730 		strb	r3, [sp, #7]
 4060              	.L416:
1619:drivers/inv_mpu.c ****         data |= BIT_STBY_XYZA;
 4061              		.loc 1 1619 0
 4062 147a 14F0080F 		tst	r4, #8
 4063 147e 05D1     		bne	.L417
1620:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_2, 1, &data)) {
 4064              		.loc 1 1620 0
 4065 1480 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4066 1484 43F03803 		orr	r3, r3, #56
 4067 1488 8DF80730 		strb	r3, [sp, #7]
 4068              	.L417:
1621:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
 4069              		.loc 1 1621 0
 4070 148c 214B     		ldr	r3, .L424
 4071 148e 1968     		ldr	r1, [r3]
 4072 1490 5868     		ldr	r0, [r3, #4]
 4073 1492 0DF10703 		add	r3, sp, #7
 4074 1496 0122     		movs	r2, #1
 4075 1498 C97C     		ldrb	r1, [r1, #19]	@ zero_extendqisi2
 4076 149a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4077 149c FFF7FEFF 		bl	i2cWrite
 4078              	.LVL331:
 4079 14a0 0546     		mov	r5, r0
 4080 14a2 88BB     		cbnz	r0, .L423
1626:drivers/inv_mpu.c ****         /* Latched interrupts only used in LP accel mode. */
 4081              		.loc 1 1626 0
 4082 14a4 14F0F70F 		tst	r4, #247
 4083 14a8 02D0     		beq	.L419
1628:drivers/inv_mpu.c **** 
 4084              		.loc 1 1628 0
 4085 14aa 0020     		movs	r0, #0
 4086 14ac FFF7FEFF 		bl	mpu_set_int_latched
 4087              	.LVL332:
 4088              	.L419:
ARM GAS  /tmp/cci8Vpl3.s 			page 120


1659:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
 4089              		.loc 1 1659 0
 4090 14b0 184B     		ldr	r3, .L424
 4091 14b2 9C72     		strb	r4, [r3, #10]
1660:drivers/inv_mpu.c ****     delay_ms(50);
 4092              		.loc 1 1660 0
 4093 14b4 0022     		movs	r2, #0
 4094 14b6 1A75     		strb	r2, [r3, #20]
1661:drivers/inv_mpu.c ****     return 0;
 4095              		.loc 1 1661 0
 4096 14b8 3220     		movs	r0, #50
 4097 14ba FFF7FEFF 		bl	DelayMs
 4098              	.LVL333:
 4099              	.L406:
1663:drivers/inv_mpu.c **** 
 4100              		.loc 1 1663 0
 4101 14be 2846     		mov	r0, r5
 4102 14c0 03B0     		add	sp, sp, #12
 4103              		.cfi_remember_state
 4104              		.cfi_def_cfa_offset 12
 4105              		@ sp needed
 4106 14c2 30BD     		pop	{r4, r5, pc}
 4107              	.LVL334:
 4108              	.L407:
 4109              		.cfi_restore_state
1602:drivers/inv_mpu.c ****         data = 0;
 4110              		.loc 1 1602 0
 4111 14c4 18B1     		cbz	r0, .L409
1603:drivers/inv_mpu.c ****     else
 4112              		.loc 1 1603 0
 4113 14c6 0023     		movs	r3, #0
 4114 14c8 8DF80730 		strb	r3, [sp, #7]
 4115 14cc ABE7     		b	.L408
 4116              	.L409:
1605:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &data)) {
 4117              		.loc 1 1605 0
 4118 14ce 02AB     		add	r3, sp, #8
 4119 14d0 4022     		movs	r2, #64
 4120 14d2 03F8012D 		strb	r2, [r3, #-1]!
1606:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
 4121              		.loc 1 1606 0
 4122 14d6 0F4A     		ldr	r2, .L424
 4123 14d8 1168     		ldr	r1, [r2]
 4124 14da 5068     		ldr	r0, [r2, #4]
 4125              	.LVL335:
 4126 14dc 0122     		movs	r2, #1
 4127 14de 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4128 14e0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4129 14e2 FFF7FEFF 		bl	i2cWrite
 4130              	.LVL336:
 4131 14e6 48B9     		cbnz	r0, .L410
1610:drivers/inv_mpu.c **** 
 4132              		.loc 1 1610 0
 4133 14e8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4134 14ec 23F04003 		bic	r3, r3, #64
 4135 14f0 084A     		ldr	r2, .L424
 4136 14f2 1373     		strb	r3, [r2, #12]
ARM GAS  /tmp/cci8Vpl3.s 			page 121


 4137              	.L420:
1614:drivers/inv_mpu.c ****     if (!(sensors & INV_Y_GYRO))
 4138              		.loc 1 1614 0
 4139 14f4 0423     		movs	r3, #4
 4140 14f6 8DF80730 		strb	r3, [sp, #7]
 4141 14fa ACE7     		b	.L414
 4142              	.L410:
1607:drivers/inv_mpu.c ****         return -1;
 4143              		.loc 1 1607 0
 4144 14fc 0022     		movs	r2, #0
 4145 14fe 054B     		ldr	r3, .L424
 4146 1500 9A72     		strb	r2, [r3, #10]
1608:drivers/inv_mpu.c ****     }
 4147              		.loc 1 1608 0
 4148 1502 4FF0FF35 		mov	r5, #-1
 4149 1506 DAE7     		b	.L406
 4150              	.L423:
1622:drivers/inv_mpu.c ****         return -1;
 4151              		.loc 1 1622 0
 4152 1508 0022     		movs	r2, #0
 4153 150a 024B     		ldr	r3, .L424
 4154 150c 9A72     		strb	r2, [r3, #10]
1623:drivers/inv_mpu.c ****     }
 4155              		.loc 1 1623 0
 4156 150e 4FF0FF35 		mov	r5, #-1
 4157 1512 D4E7     		b	.L406
 4158              	.L425:
 4159              		.align	2
 4160              	.L424:
 4161 1514 00000000 		.word	.LANCHOR0
 4162              		.cfi_endproc
 4163              	.LFE89:
 4164              		.size	mpu_set_sensors, .-mpu_set_sensors
 4165              		.align	1
 4166              		.global	mpu_init
 4167              		.syntax unified
 4168              		.thumb
 4169              		.thumb_func
 4170              		.fpu softvfp
 4171              		.type	mpu_init, %function
 4172              	mpu_init:
 4173              	.LFB67:
 760:drivers/inv_mpu.c ****     unsigned char data[6], rev;
 4174              		.loc 1 760 0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 8
 4177              		@ frame_needed = 0, uses_anonymous_args = 0
 4178 1518 10B5     		push	{r4, lr}
 4179              		.cfi_def_cfa_offset 8
 4180              		.cfi_offset 4, -8
 4181              		.cfi_offset 14, -4
 4182 151a 82B0     		sub	sp, sp, #8
 4183              		.cfi_def_cfa_offset 16
 764:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 4184              		.loc 1 764 0
 4185 151c 02AB     		add	r3, sp, #8
 4186 151e 8022     		movs	r2, #128
ARM GAS  /tmp/cci8Vpl3.s 			page 122


 4187 1520 03F8082D 		strb	r2, [r3, #-8]!
 765:drivers/inv_mpu.c ****         return -1;
 4188              		.loc 1 765 0
 4189 1524 664A     		ldr	r2, .L448
 4190 1526 1168     		ldr	r1, [r2]
 4191 1528 5068     		ldr	r0, [r2, #4]
 4192 152a 0122     		movs	r2, #1
 4193 152c 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4194 152e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4195 1530 FFF7FEFF 		bl	i2cWrite
 4196              	.LVL337:
 4197 1534 0028     		cmp	r0, #0
 4198 1536 40F0A480 		bne	.L434
 767:drivers/inv_mpu.c **** 
 4199              		.loc 1 767 0
 4200 153a 6420     		movs	r0, #100
 4201 153c FFF7FEFF 		bl	DelayMs
 4202              	.LVL338:
 770:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 4203              		.loc 1 770 0
 4204 1540 02AB     		add	r3, sp, #8
 4205 1542 0022     		movs	r2, #0
 4206 1544 03F8082D 		strb	r2, [r3, #-8]!
 771:drivers/inv_mpu.c ****         return -1;
 4207              		.loc 1 771 0
 4208 1548 5D4A     		ldr	r2, .L448
 4209 154a 1168     		ldr	r1, [r2]
 4210 154c 5068     		ldr	r0, [r2, #4]
 4211 154e 0122     		movs	r2, #1
 4212 1550 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4213 1552 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4214 1554 FFF7FEFF 		bl	i2cWrite
 4215              	.LVL339:
 4216 1558 0028     		cmp	r0, #0
 4217 155a 40F09580 		bne	.L435
 776:drivers/inv_mpu.c ****         return -1;
 4218              		.loc 1 776 0
 4219 155e 584B     		ldr	r3, .L448
 4220 1560 1968     		ldr	r1, [r3]
 4221 1562 5868     		ldr	r0, [r3, #4]
 4222 1564 6B46     		mov	r3, sp
 4223 1566 0622     		movs	r2, #6
 4224 1568 897D     		ldrb	r1, [r1, #22]	@ zero_extendqisi2
 4225 156a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4226 156c FFF7FEFF 		bl	i2cRead
 4227              	.LVL340:
 4228 1570 0028     		cmp	r0, #0
 4229 1572 40F08C80 		bne	.L436
 778:drivers/inv_mpu.c ****         (data[1] & 0x01);
 4230              		.loc 1 778 0
 4231 1576 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 4232 157a 8900     		lsls	r1, r1, #2
 4233 157c 01F00401 		and	r1, r1, #4
 4234 1580 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 4235 1584 5B00     		lsls	r3, r3, #1
 4236 1586 03F00203 		and	r3, r3, #2
 4237 158a 1943     		orrs	r1, r1, r3
ARM GAS  /tmp/cci8Vpl3.s 			page 123


 779:drivers/inv_mpu.c **** 
 4238              		.loc 1 779 0
 4239 158c 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 4240 1590 03F00103 		and	r3, r3, #1
 4241              	.LVL341:
 781:drivers/inv_mpu.c ****         /* Congrats, these parts are better. */
 4242              		.loc 1 781 0
 4243 1594 1943     		orrs	r1, r1, r3
 4244              	.LVL342:
 4245 1596 52D0     		beq	.L428
 783:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 4246              		.loc 1 783 0
 4247 1598 0129     		cmp	r1, #1
 4248 159a 46D0     		beq	.L445
 785:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 0;
 4249              		.loc 1 785 0
 4250 159c 0229     		cmp	r1, #2
 4251 159e 48D1     		bne	.L431
 786:drivers/inv_mpu.c ****         else {
 4252              		.loc 1 786 0
 4253 15a0 0022     		movs	r2, #0
 4254 15a2 474B     		ldr	r3, .L448
 4255              	.LVL343:
 4256 15a4 DA74     		strb	r2, [r3, #19]
 4257              	.LVL344:
 4258              	.L430:
 824:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
 4259              		.loc 1 824 0
 4260 15a6 464B     		ldr	r3, .L448
 4261 15a8 FF22     		movs	r2, #255
 4262 15aa 9A72     		strb	r2, [r3, #10]
 825:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 4263              		.loc 1 825 0
 4264 15ac 1A72     		strb	r2, [r3, #8]
 826:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 4265              		.loc 1 826 0
 4266 15ae 5A72     		strb	r2, [r3, #9]
 827:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 4267              		.loc 1 827 0
 4268 15b0 DA72     		strb	r2, [r3, #11]
 828:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 4269              		.loc 1 828 0
 4270 15b2 4FF6FF71 		movw	r1, #65535
 4271 15b6 D981     		strh	r1, [r3, #14]	@ movhi
 829:drivers/inv_mpu.c ****     st.chip_cfg.bypass_mode = 0xFF;
 4272              		.loc 1 829 0
 4273 15b8 1A74     		strb	r2, [r3, #16]
 830:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 4274              		.loc 1 830 0
 4275 15ba 9A74     		strb	r2, [r3, #18]
 835:drivers/inv_mpu.c ****     /* Handled in next call to mpu_set_bypass. */
 4276              		.loc 1 835 0
 4277 15bc 0122     		movs	r2, #1
 4278 15be 1A73     		strb	r2, [r3, #12]
 837:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = 0;
 4279              		.loc 1 837 0
 4280 15c0 83F82220 		strb	r2, [r3, #34]
ARM GAS  /tmp/cci8Vpl3.s 			page 124


 838:drivers/inv_mpu.c ****     st.chip_cfg.int_motion_only = 0;
 4281              		.loc 1 838 0
 4282 15c4 0022     		movs	r2, #0
 4283 15c6 83F82320 		strb	r2, [r3, #35]
 839:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
 4284              		.loc 1 839 0
 4285 15ca 5A75     		strb	r2, [r3, #21]
 840:drivers/inv_mpu.c ****     memset(&st.chip_cfg.cache, 0, sizeof(st.chip_cfg.cache));
 4286              		.loc 1 840 0
 4287 15cc 1A75     		strb	r2, [r3, #20]
 841:drivers/inv_mpu.c ****     st.chip_cfg.dmp_on = 0;
 4288              		.loc 1 841 0
 4289 15ce C3F81620 		str	r2, [r3, #22]	@ unaligned
 4290 15d2 C3F81A20 		str	r2, [r3, #26]	@ unaligned
 4291 15d6 C3F81E20 		str	r2, [r3, #30]	@ unaligned
 842:drivers/inv_mpu.c ****     st.chip_cfg.dmp_loaded = 0;
 4292              		.loc 1 842 0
 4293 15da 83F82420 		strb	r2, [r3, #36]
 843:drivers/inv_mpu.c ****     st.chip_cfg.dmp_sample_rate = 0;
 4294              		.loc 1 843 0
 4295 15de 83F82520 		strb	r2, [r3, #37]
 844:drivers/inv_mpu.c **** 
 4296              		.loc 1 844 0
 4297 15e2 DA84     		strh	r2, [r3, #38]	@ movhi
 846:drivers/inv_mpu.c ****         return -1;
 4298              		.loc 1 846 0
 4299 15e4 4FF4FA60 		mov	r0, #2000
 4300 15e8 FFF7FEFF 		bl	mpu_set_gyro_fsr
 4301              	.LVL345:
 4302 15ec 0028     		cmp	r0, #0
 4303 15ee 54D1     		bne	.L438
 848:drivers/inv_mpu.c ****         return -1;
 4304              		.loc 1 848 0
 4305 15f0 0220     		movs	r0, #2
 4306 15f2 FFF7FEFF 		bl	mpu_set_accel_fsr
 4307              	.LVL346:
 4308 15f6 0028     		cmp	r0, #0
 4309 15f8 52D1     		bne	.L439
 850:drivers/inv_mpu.c ****         return -1;
 4310              		.loc 1 850 0
 4311 15fa 2A20     		movs	r0, #42
 4312 15fc FFF7FEFF 		bl	mpu_set_lpf
 4313              	.LVL347:
 4314 1600 0028     		cmp	r0, #0
 4315 1602 50D1     		bne	.L440
 852:drivers/inv_mpu.c ****         return -1;
 4316              		.loc 1 852 0
 4317 1604 3220     		movs	r0, #50
 4318 1606 FFF7FEFF 		bl	mpu_set_sample_rate
 4319              	.LVL348:
 4320 160a 0028     		cmp	r0, #0
 4321 160c 4ED1     		bne	.L441
 854:drivers/inv_mpu.c ****         return -1;
 4322              		.loc 1 854 0
 4323 160e FFF7FEFF 		bl	mpu_configure_fifo
 4324              	.LVL349:
 4325 1612 0028     		cmp	r0, #0
ARM GAS  /tmp/cci8Vpl3.s 			page 125


 4326 1614 4DD1     		bne	.L442
 866:drivers/inv_mpu.c ****         return -1;
 4327              		.loc 1 866 0
 4328 1616 FFF7FEFF 		bl	mpu_set_bypass
 4329              	.LVL350:
 4330 161a 0446     		mov	r4, r0
 4331 161c 0028     		cmp	r0, #0
 4332 161e 4BD1     		bne	.L443
 870:drivers/inv_mpu.c ****     return 0;
 4333              		.loc 1 870 0
 4334 1620 FFF7FEFF 		bl	mpu_set_sensors
 4335              	.LVL351:
 4336              	.L426:
 872:drivers/inv_mpu.c **** 
 4337              		.loc 1 872 0
 4338 1624 2046     		mov	r0, r4
 4339 1626 02B0     		add	sp, sp, #8
 4340              		.cfi_remember_state
 4341              		.cfi_def_cfa_offset 8
 4342              		@ sp needed
 4343 1628 10BD     		pop	{r4, pc}
 4344              	.LVL352:
 4345              	.L445:
 4346              		.cfi_restore_state
 784:drivers/inv_mpu.c ****         else if (rev == 2)
 4347              		.loc 1 784 0
 4348 162a 0122     		movs	r2, #1
 4349 162c 244B     		ldr	r3, .L448
 4350              	.LVL353:
 4351 162e DA74     		strb	r2, [r3, #19]
 4352 1630 B9E7     		b	.L430
 4353              	.LVL354:
 4354              	.L431:
 788:drivers/inv_mpu.c ****             return -1;
 4355              		.loc 1 788 0
 4356 1632 2448     		ldr	r0, .L448+4
 4357 1634 FFF7FEFF 		bl	printf
 4358              	.LVL355:
 789:drivers/inv_mpu.c ****         }
 4359              		.loc 1 789 0
 4360 1638 4FF0FF34 		mov	r4, #-1
 4361 163c F2E7     		b	.L426
 4362              	.LVL356:
 4363              	.L428:
 792:drivers/inv_mpu.c ****             return -1;
 4364              		.loc 1 792 0
 4365 163e 204B     		ldr	r3, .L448
 4366              	.LVL357:
 4367 1640 1968     		ldr	r1, [r3]
 4368 1642 5868     		ldr	r0, [r3, #4]
 4369 1644 6B46     		mov	r3, sp
 4370 1646 0122     		movs	r2, #1
 4371 1648 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 4372 164a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4373 164c FFF7FEFF 		bl	i2cRead
 4374              	.LVL358:
 4375 1650 00BB     		cbnz	r0, .L437
ARM GAS  /tmp/cci8Vpl3.s 			page 126


 794:drivers/inv_mpu.c ****         if (!rev) {
 4376              		.loc 1 794 0
 4377 1652 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 4378              	.LVL359:
 795:drivers/inv_mpu.c ****             log_e("Product ID read as 0 indicates device is either incompatible or an MPU3050.\r\n"
 4379              		.loc 1 795 0
 4380 1656 13F00F03 		ands	r3, r3, #15
 4381              	.LVL360:
 4382 165a 05D0     		beq	.L446
 798:drivers/inv_mpu.c ****             log_i("Half sensitivity part found.\r\n");
 4383              		.loc 1 798 0
 4384 165c 042B     		cmp	r3, #4
 4385 165e 09D0     		beq	.L447
 802:drivers/inv_mpu.c ****     }
 4386              		.loc 1 802 0
 4387 1660 0022     		movs	r2, #0
 4388 1662 174B     		ldr	r3, .L448
 4389 1664 DA74     		strb	r2, [r3, #19]
 4390 1666 9EE7     		b	.L430
 4391              	.L446:
 796:drivers/inv_mpu.c ****             return -1;
 4392              		.loc 1 796 0
 4393 1668 1748     		ldr	r0, .L448+8
 4394 166a FFF7FEFF 		bl	puts
 4395              	.LVL361:
 797:drivers/inv_mpu.c ****         } else if (rev == 4) {
 4396              		.loc 1 797 0
 4397 166e 4FF0FF34 		mov	r4, #-1
 4398 1672 D7E7     		b	.L426
 4399              	.LVL362:
 4400              	.L447:
 799:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 4401              		.loc 1 799 0
 4402 1674 1548     		ldr	r0, .L448+12
 4403 1676 FFF7FEFF 		bl	puts
 4404              	.LVL363:
 800:drivers/inv_mpu.c ****         } else
 4405              		.loc 1 800 0
 4406 167a 0122     		movs	r2, #1
 4407 167c 104B     		ldr	r3, .L448
 4408 167e DA74     		strb	r2, [r3, #19]
 4409 1680 91E7     		b	.L430
 4410              	.L434:
 766:drivers/inv_mpu.c ****     delay_ms(100);
 4411              		.loc 1 766 0
 4412 1682 4FF0FF34 		mov	r4, #-1
 4413 1686 CDE7     		b	.L426
 4414              	.L435:
 772:drivers/inv_mpu.c **** 
 4415              		.loc 1 772 0
 4416 1688 4FF0FF34 		mov	r4, #-1
 4417 168c CAE7     		b	.L426
 4418              	.L436:
 777:drivers/inv_mpu.c ****     rev = ((data[5] & 0x01) << 2) | ((data[3] & 0x01) << 1) |
 4419              		.loc 1 777 0
 4420 168e 4FF0FF34 		mov	r4, #-1
 4421 1692 C7E7     		b	.L426
ARM GAS  /tmp/cci8Vpl3.s 			page 127


 4422              	.L437:
 793:drivers/inv_mpu.c ****         rev = data[0] & 0x0F;
 4423              		.loc 1 793 0
 4424 1694 4FF0FF34 		mov	r4, #-1
 4425 1698 C4E7     		b	.L426
 4426              	.L438:
 847:drivers/inv_mpu.c ****     if (mpu_set_accel_fsr(2))
 4427              		.loc 1 847 0
 4428 169a 4FF0FF34 		mov	r4, #-1
 4429 169e C1E7     		b	.L426
 4430              	.L439:
 849:drivers/inv_mpu.c ****     if (mpu_set_lpf(42))
 4431              		.loc 1 849 0
 4432 16a0 4FF0FF34 		mov	r4, #-1
 4433 16a4 BEE7     		b	.L426
 4434              	.L440:
 851:drivers/inv_mpu.c ****     if (mpu_set_sample_rate(50))
 4435              		.loc 1 851 0
 4436 16a6 4FF0FF34 		mov	r4, #-1
 4437 16aa BBE7     		b	.L426
 4438              	.L441:
 853:drivers/inv_mpu.c ****     if (mpu_configure_fifo(0))
 4439              		.loc 1 853 0
 4440 16ac 4FF0FF34 		mov	r4, #-1
 4441 16b0 B8E7     		b	.L426
 4442              	.L442:
 855:drivers/inv_mpu.c **** 
 4443              		.loc 1 855 0
 4444 16b2 4FF0FF34 		mov	r4, #-1
 4445 16b6 B5E7     		b	.L426
 4446              	.L443:
 867:drivers/inv_mpu.c **** #endif
 4447              		.loc 1 867 0
 4448 16b8 4FF0FF34 		mov	r4, #-1
 4449 16bc B2E7     		b	.L426
 4450              	.L449:
 4451 16be 00BF     		.align	2
 4452              	.L448:
 4453 16c0 00000000 		.word	.LANCHOR0
 4454 16c4 00000000 		.word	.LC0
 4455 16c8 28000000 		.word	.LC1
 4456 16cc 78000000 		.word	.LC2
 4457              		.cfi_endproc
 4458              	.LFE67:
 4459              		.size	mpu_init, .-mpu_init
 4460              		.align	1
 4461              		.global	mpu_write_mem
 4462              		.syntax unified
 4463              		.thumb
 4464              		.thumb_func
 4465              		.fpu softvfp
 4466              		.type	mpu_write_mem, %function
 4467              	mpu_write_mem:
 4468              	.LFB101:
2149:drivers/inv_mpu.c **** 
2150:drivers/inv_mpu.c **** /**
2151:drivers/inv_mpu.c ****  *  @brief      Trigger gyro/accel/compass self-test.
ARM GAS  /tmp/cci8Vpl3.s 			page 128


2152:drivers/inv_mpu.c ****  *  On success/error, the self-test returns a mask representing the sensor(s)
2153:drivers/inv_mpu.c ****  *  that failed. For each bit, a one (1) represents a "pass" case; conversely,
2154:drivers/inv_mpu.c ****  *  a zero (0) indicates a failure.
2155:drivers/inv_mpu.c ****  *
2156:drivers/inv_mpu.c ****  *  \n The mask is defined as follows:
2157:drivers/inv_mpu.c ****  *  \n Bit 0:   Gyro.
2158:drivers/inv_mpu.c ****  *  \n Bit 1:   Accel.
2159:drivers/inv_mpu.c ****  *  \n Bit 2:   Compass.
2160:drivers/inv_mpu.c ****  *
2161:drivers/inv_mpu.c ****  *  \n Currently, the hardware self-test is unsupported for MPU6500. However,
2162:drivers/inv_mpu.c ****  *  this function can still be used to obtain the accel and gyro biases.
2163:drivers/inv_mpu.c ****  *
2164:drivers/inv_mpu.c ****  *  \n This function must be called with the device either face-up or face-down
2165:drivers/inv_mpu.c ****  *  (z-axis is parallel to gravity).
2166:drivers/inv_mpu.c ****  *  @param[out] gyro        Gyro biases in q16 format.
2167:drivers/inv_mpu.c ****  *  @param[out] accel       Accel biases (if applicable) in q16 format.
2168:drivers/inv_mpu.c ****  *  @return     Result mask (see above).
2169:drivers/inv_mpu.c ****  */
2170:drivers/inv_mpu.c **** int mpu_run_self_test(long *gyro, long *accel)
2171:drivers/inv_mpu.c **** {
2172:drivers/inv_mpu.c **** #ifdef MPU6050
2173:drivers/inv_mpu.c ****     const unsigned char tries = 2;
2174:drivers/inv_mpu.c ****     long gyro_st[3], accel_st[3];
2175:drivers/inv_mpu.c ****     unsigned char accel_result, gyro_result;
2176:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2177:drivers/inv_mpu.c ****     unsigned char compass_result;
2178:drivers/inv_mpu.c **** #endif
2179:drivers/inv_mpu.c ****     int ii;
2180:drivers/inv_mpu.c **** #endif
2181:drivers/inv_mpu.c ****     int result;
2182:drivers/inv_mpu.c ****     unsigned char accel_fsr, fifo_sensors, sensors_on;
2183:drivers/inv_mpu.c ****     unsigned short gyro_fsr, sample_rate, lpf;
2184:drivers/inv_mpu.c ****     unsigned char dmp_was_on;
2185:drivers/inv_mpu.c **** 
2186:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on) {
2187:drivers/inv_mpu.c ****         mpu_set_dmp_state(0);
2188:drivers/inv_mpu.c ****         dmp_was_on = 1;
2189:drivers/inv_mpu.c ****     } else
2190:drivers/inv_mpu.c ****         dmp_was_on = 0;
2191:drivers/inv_mpu.c **** 
2192:drivers/inv_mpu.c ****     /* Get initial settings. */
2193:drivers/inv_mpu.c ****     mpu_get_gyro_fsr(&gyro_fsr);
2194:drivers/inv_mpu.c ****     mpu_get_accel_fsr(&accel_fsr);
2195:drivers/inv_mpu.c ****     mpu_get_lpf(&lpf);
2196:drivers/inv_mpu.c ****     mpu_get_sample_rate(&sample_rate);
2197:drivers/inv_mpu.c ****     sensors_on = st.chip_cfg.sensors;
2198:drivers/inv_mpu.c ****     mpu_get_fifo_config(&fifo_sensors);
2199:drivers/inv_mpu.c **** 
2200:drivers/inv_mpu.c ****     /* For older chips, the self-test will be different. */
2201:drivers/inv_mpu.c **** #if defined MPU6050
2202:drivers/inv_mpu.c ****     for (ii = 0; ii < tries; ii++)
2203:drivers/inv_mpu.c ****         if (!get_st_biases(gyro, accel, 0))
2204:drivers/inv_mpu.c ****             break;
2205:drivers/inv_mpu.c ****     if (ii == tries) {
2206:drivers/inv_mpu.c ****         /* If we reach this point, we most likely encountered an I2C error.
2207:drivers/inv_mpu.c ****          * We'll just report an error for all three sensors.
2208:drivers/inv_mpu.c ****          */
ARM GAS  /tmp/cci8Vpl3.s 			page 129


2209:drivers/inv_mpu.c ****         result = 0;
2210:drivers/inv_mpu.c ****         goto restore;
2211:drivers/inv_mpu.c ****     }
2212:drivers/inv_mpu.c ****     for (ii = 0; ii < tries; ii++)
2213:drivers/inv_mpu.c ****         if (!get_st_biases(gyro_st, accel_st, 1))
2214:drivers/inv_mpu.c ****             break;
2215:drivers/inv_mpu.c ****     if (ii == tries) {
2216:drivers/inv_mpu.c ****         /* Again, probably an I2C error. */
2217:drivers/inv_mpu.c ****         result = 0;
2218:drivers/inv_mpu.c ****         goto restore;
2219:drivers/inv_mpu.c ****     }
2220:drivers/inv_mpu.c ****     accel_result = accel_self_test(accel, accel_st);
2221:drivers/inv_mpu.c ****     gyro_result = gyro_self_test(gyro, gyro_st);
2222:drivers/inv_mpu.c **** 
2223:drivers/inv_mpu.c ****     result = 0;
2224:drivers/inv_mpu.c ****     if (!gyro_result)
2225:drivers/inv_mpu.c ****         result |= 0x01;
2226:drivers/inv_mpu.c ****     if (!accel_result)
2227:drivers/inv_mpu.c ****         result |= 0x02;
2228:drivers/inv_mpu.c **** 
2229:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2230:drivers/inv_mpu.c ****     compass_result = compass_self_test();
2231:drivers/inv_mpu.c ****     if (!compass_result)
2232:drivers/inv_mpu.c ****         result |= 0x04;
2233:drivers/inv_mpu.c **** #endif
2234:drivers/inv_mpu.c **** restore:
2235:drivers/inv_mpu.c **** #elif defined MPU6500
2236:drivers/inv_mpu.c ****     /* For now, this function will return a "pass" result for all three sensors
2237:drivers/inv_mpu.c ****      * for compatibility with current test applications.
2238:drivers/inv_mpu.c ****      */
2239:drivers/inv_mpu.c ****     get_st_biases(gyro, accel, 0);
2240:drivers/inv_mpu.c ****     result = 0x7;
2241:drivers/inv_mpu.c **** #endif
2242:drivers/inv_mpu.c ****     /* Set to invalid values to ensure no I2C writes are skipped. */
2243:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
2244:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
2245:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
2246:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
2247:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
2248:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
2249:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
2250:drivers/inv_mpu.c ****     mpu_set_gyro_fsr(gyro_fsr);
2251:drivers/inv_mpu.c ****     mpu_set_accel_fsr(accel_fsr);
2252:drivers/inv_mpu.c ****     mpu_set_lpf(lpf);
2253:drivers/inv_mpu.c ****     mpu_set_sample_rate(sample_rate);
2254:drivers/inv_mpu.c ****     mpu_set_sensors(sensors_on);
2255:drivers/inv_mpu.c ****     mpu_configure_fifo(fifo_sensors);
2256:drivers/inv_mpu.c **** 
2257:drivers/inv_mpu.c ****     if (dmp_was_on)
2258:drivers/inv_mpu.c ****         mpu_set_dmp_state(1);
2259:drivers/inv_mpu.c **** 
2260:drivers/inv_mpu.c ****     return result;
2261:drivers/inv_mpu.c **** }
2262:drivers/inv_mpu.c **** 
2263:drivers/inv_mpu.c **** /**
2264:drivers/inv_mpu.c ****  *  @brief      Write to the DMP memory.
2265:drivers/inv_mpu.c ****  *  This function prevents I2C writes past the bank boundaries. The DMP memory
ARM GAS  /tmp/cci8Vpl3.s 			page 130


2266:drivers/inv_mpu.c ****  *  is only accessible when the chip is awake.
2267:drivers/inv_mpu.c ****  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
2268:drivers/inv_mpu.c ****  *  @param[in]  length      Number of bytes to write.
2269:drivers/inv_mpu.c ****  *  @param[in]  data        Bytes to write to memory.
2270:drivers/inv_mpu.c ****  *  @return     0 if successful.
2271:drivers/inv_mpu.c ****  */
2272:drivers/inv_mpu.c **** int mpu_write_mem(unsigned short mem_addr, unsigned short length,
2273:drivers/inv_mpu.c ****         unsigned char *data)
2274:drivers/inv_mpu.c **** {
 4469              		.loc 1 2274 0
 4470              		.cfi_startproc
 4471              		@ args = 0, pretend = 0, frame = 8
 4472              		@ frame_needed = 0, uses_anonymous_args = 0
 4473              	.LVL364:
2275:drivers/inv_mpu.c ****     unsigned char tmp[2];
2276:drivers/inv_mpu.c **** 
2277:drivers/inv_mpu.c ****     if (!data)
 4474              		.loc 1 2277 0
 4475 16d0 002A     		cmp	r2, #0
 4476 16d2 2AD0     		beq	.L452
2274:drivers/inv_mpu.c ****     unsigned char tmp[2];
 4477              		.loc 1 2274 0
 4478 16d4 70B5     		push	{r4, r5, r6, lr}
 4479              		.cfi_def_cfa_offset 16
 4480              		.cfi_offset 4, -16
 4481              		.cfi_offset 5, -12
 4482              		.cfi_offset 6, -8
 4483              		.cfi_offset 14, -4
 4484 16d6 82B0     		sub	sp, sp, #8
 4485              		.cfi_def_cfa_offset 24
 4486 16d8 1646     		mov	r6, r2
2278:drivers/inv_mpu.c ****         return -1;
2279:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4487              		.loc 1 2279 0
 4488 16da 1A4A     		ldr	r2, .L460
 4489              	.LVL365:
 4490 16dc 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4491 16de 3AB3     		cbz	r2, .L453
2280:drivers/inv_mpu.c ****         return -1;
2281:drivers/inv_mpu.c **** 
2282:drivers/inv_mpu.c ****     tmp[0] = (unsigned char)(mem_addr >> 8);
 4492              		.loc 1 2282 0
 4493 16e0 020A     		lsrs	r2, r0, #8
 4494 16e2 8DF80420 		strb	r2, [sp, #4]
2283:drivers/inv_mpu.c ****     tmp[1] = (unsigned char)(mem_addr & 0xFF);
 4495              		.loc 1 2283 0
 4496 16e6 C0B2     		uxtb	r0, r0
 4497              	.LVL366:
 4498 16e8 8DF80500 		strb	r0, [sp, #5]
2284:drivers/inv_mpu.c **** 
2285:drivers/inv_mpu.c ****     /* Check bank boundaries. */
2286:drivers/inv_mpu.c ****     if (tmp[1] + length > st.hw->bank_size)
 4499              		.loc 1 2286 0
 4500 16ec 154A     		ldr	r2, .L460
 4501 16ee 5568     		ldr	r5, [r2, #4]
 4502 16f0 0844     		add	r0, r0, r1
 4503 16f2 6A89     		ldrh	r2, [r5, #10]
ARM GAS  /tmp/cci8Vpl3.s 			page 131


 4504 16f4 9042     		cmp	r0, r2
 4505 16f6 1EDC     		bgt	.L454
 4506 16f8 0C46     		mov	r4, r1
2287:drivers/inv_mpu.c ****         return -1;
2288:drivers/inv_mpu.c **** 
2289:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->bank_sel, 2, tmp))
 4507              		.loc 1 2289 0
 4508 16fa 124B     		ldr	r3, .L460
 4509 16fc 1968     		ldr	r1, [r3]
 4510              	.LVL367:
 4511 16fe 01AB     		add	r3, sp, #4
 4512 1700 0222     		movs	r2, #2
 4513 1702 097E     		ldrb	r1, [r1, #24]	@ zero_extendqisi2
 4514 1704 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4515 1706 FFF7FEFF 		bl	i2cWrite
 4516              	.LVL368:
 4517 170a B8B9     		cbnz	r0, .L455
2290:drivers/inv_mpu.c ****         return -1;
2291:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->mem_r_w, length, data))
 4518              		.loc 1 2291 0
 4519 170c 0D4B     		ldr	r3, .L460
 4520 170e 1968     		ldr	r1, [r3]
 4521 1710 5868     		ldr	r0, [r3, #4]
 4522 1712 3346     		mov	r3, r6
 4523 1714 E2B2     		uxtb	r2, r4
 4524 1716 497D     		ldrb	r1, [r1, #21]	@ zero_extendqisi2
 4525 1718 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4526 171a FFF7FEFF 		bl	i2cWrite
 4527              	.LVL369:
 4528 171e 0030     		adds	r0, r0, #0
 4529 1720 18BF     		it	ne
 4530 1722 0120     		movne	r0, #1
 4531 1724 4042     		negs	r0, r0
 4532              	.L450:
2292:drivers/inv_mpu.c ****         return -1;
2293:drivers/inv_mpu.c ****     return 0;
2294:drivers/inv_mpu.c **** }
 4533              		.loc 1 2294 0
 4534 1726 02B0     		add	sp, sp, #8
 4535              		.cfi_def_cfa_offset 16
 4536              		@ sp needed
 4537 1728 70BD     		pop	{r4, r5, r6, pc}
 4538              	.LVL370:
 4539              	.L452:
 4540              		.cfi_def_cfa_offset 0
 4541              		.cfi_restore 4
 4542              		.cfi_restore 5
 4543              		.cfi_restore 6
 4544              		.cfi_restore 14
2278:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4545              		.loc 1 2278 0
 4546 172a 4FF0FF30 		mov	r0, #-1
 4547              	.LVL371:
 4548 172e 7047     		bx	lr
 4549              	.LVL372:
 4550              	.L453:
 4551              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cci8Vpl3.s 			page 132


 4552              		.cfi_offset 4, -16
 4553              		.cfi_offset 5, -12
 4554              		.cfi_offset 6, -8
 4555              		.cfi_offset 14, -4
2280:drivers/inv_mpu.c **** 
 4556              		.loc 1 2280 0
 4557 1730 4FF0FF30 		mov	r0, #-1
 4558              	.LVL373:
 4559 1734 F7E7     		b	.L450
 4560              	.L454:
2287:drivers/inv_mpu.c **** 
 4561              		.loc 1 2287 0
 4562 1736 4FF0FF30 		mov	r0, #-1
 4563 173a F4E7     		b	.L450
 4564              	.LVL374:
 4565              	.L455:
2290:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->mem_r_w, length, data))
 4566              		.loc 1 2290 0
 4567 173c 4FF0FF30 		mov	r0, #-1
 4568 1740 F1E7     		b	.L450
 4569              	.L461:
 4570 1742 00BF     		.align	2
 4571              	.L460:
 4572 1744 00000000 		.word	.LANCHOR0
 4573              		.cfi_endproc
 4574              	.LFE101:
 4575              		.size	mpu_write_mem, .-mpu_write_mem
 4576              		.align	1
 4577              		.global	mpu_read_mem
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu softvfp
 4582              		.type	mpu_read_mem, %function
 4583              	mpu_read_mem:
 4584              	.LFB102:
2295:drivers/inv_mpu.c **** 
2296:drivers/inv_mpu.c **** /**
2297:drivers/inv_mpu.c ****  *  @brief      Read from the DMP memory.
2298:drivers/inv_mpu.c ****  *  This function prevents I2C reads past the bank boundaries. The DMP memory
2299:drivers/inv_mpu.c ****  *  is only accessible when the chip is awake.
2300:drivers/inv_mpu.c ****  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
2301:drivers/inv_mpu.c ****  *  @param[in]  length      Number of bytes to read.
2302:drivers/inv_mpu.c ****  *  @param[out] data        Bytes read from memory.
2303:drivers/inv_mpu.c ****  *  @return     0 if successful.
2304:drivers/inv_mpu.c ****  */
2305:drivers/inv_mpu.c **** int mpu_read_mem(unsigned short mem_addr, unsigned short length,
2306:drivers/inv_mpu.c ****         unsigned char *data)
2307:drivers/inv_mpu.c **** {
 4585              		.loc 1 2307 0
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 8
 4588              		@ frame_needed = 0, uses_anonymous_args = 0
 4589              	.LVL375:
2308:drivers/inv_mpu.c ****     unsigned char tmp[2];
2309:drivers/inv_mpu.c **** 
2310:drivers/inv_mpu.c ****     if (!data)
ARM GAS  /tmp/cci8Vpl3.s 			page 133


 4590              		.loc 1 2310 0
 4591 1748 002A     		cmp	r2, #0
 4592 174a 2AD0     		beq	.L464
2307:drivers/inv_mpu.c ****     unsigned char tmp[2];
 4593              		.loc 1 2307 0
 4594 174c 70B5     		push	{r4, r5, r6, lr}
 4595              		.cfi_def_cfa_offset 16
 4596              		.cfi_offset 4, -16
 4597              		.cfi_offset 5, -12
 4598              		.cfi_offset 6, -8
 4599              		.cfi_offset 14, -4
 4600 174e 82B0     		sub	sp, sp, #8
 4601              		.cfi_def_cfa_offset 24
 4602 1750 1646     		mov	r6, r2
2311:drivers/inv_mpu.c ****         return -1;
2312:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4603              		.loc 1 2312 0
 4604 1752 1A4A     		ldr	r2, .L472
 4605              	.LVL376:
 4606 1754 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4607 1756 3AB3     		cbz	r2, .L465
2313:drivers/inv_mpu.c ****         return -1;
2314:drivers/inv_mpu.c **** 
2315:drivers/inv_mpu.c ****     tmp[0] = (unsigned char)(mem_addr >> 8);
 4608              		.loc 1 2315 0
 4609 1758 020A     		lsrs	r2, r0, #8
 4610 175a 8DF80420 		strb	r2, [sp, #4]
2316:drivers/inv_mpu.c ****     tmp[1] = (unsigned char)(mem_addr & 0xFF);
 4611              		.loc 1 2316 0
 4612 175e C0B2     		uxtb	r0, r0
 4613              	.LVL377:
 4614 1760 8DF80500 		strb	r0, [sp, #5]
2317:drivers/inv_mpu.c **** 
2318:drivers/inv_mpu.c ****     /* Check bank boundaries. */
2319:drivers/inv_mpu.c ****     if (tmp[1] + length > st.hw->bank_size)
 4615              		.loc 1 2319 0
 4616 1764 154A     		ldr	r2, .L472
 4617 1766 5568     		ldr	r5, [r2, #4]
 4618 1768 0844     		add	r0, r0, r1
 4619 176a 6A89     		ldrh	r2, [r5, #10]
 4620 176c 9042     		cmp	r0, r2
 4621 176e 1EDC     		bgt	.L466
 4622 1770 0C46     		mov	r4, r1
2320:drivers/inv_mpu.c ****         return -1;
2321:drivers/inv_mpu.c **** 
2322:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->bank_sel, 2, tmp))
 4623              		.loc 1 2322 0
 4624 1772 124B     		ldr	r3, .L472
 4625 1774 1968     		ldr	r1, [r3]
 4626              	.LVL378:
 4627 1776 01AB     		add	r3, sp, #4
 4628 1778 0222     		movs	r2, #2
 4629 177a 097E     		ldrb	r1, [r1, #24]	@ zero_extendqisi2
 4630 177c 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4631 177e FFF7FEFF 		bl	i2cWrite
 4632              	.LVL379:
 4633 1782 B8B9     		cbnz	r0, .L467
ARM GAS  /tmp/cci8Vpl3.s 			page 134


2323:drivers/inv_mpu.c ****         return -1;
2324:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->mem_r_w, length, data))
 4634              		.loc 1 2324 0
 4635 1784 0D4B     		ldr	r3, .L472
 4636 1786 1968     		ldr	r1, [r3]
 4637 1788 5868     		ldr	r0, [r3, #4]
 4638 178a 3346     		mov	r3, r6
 4639 178c E2B2     		uxtb	r2, r4
 4640 178e 497D     		ldrb	r1, [r1, #21]	@ zero_extendqisi2
 4641 1790 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4642 1792 FFF7FEFF 		bl	i2cRead
 4643              	.LVL380:
 4644 1796 0030     		adds	r0, r0, #0
 4645 1798 18BF     		it	ne
 4646 179a 0120     		movne	r0, #1
 4647 179c 4042     		negs	r0, r0
 4648              	.L462:
2325:drivers/inv_mpu.c ****         return -1;
2326:drivers/inv_mpu.c ****     return 0;
2327:drivers/inv_mpu.c **** }
 4649              		.loc 1 2327 0
 4650 179e 02B0     		add	sp, sp, #8
 4651              		.cfi_def_cfa_offset 16
 4652              		@ sp needed
 4653 17a0 70BD     		pop	{r4, r5, r6, pc}
 4654              	.LVL381:
 4655              	.L464:
 4656              		.cfi_def_cfa_offset 0
 4657              		.cfi_restore 4
 4658              		.cfi_restore 5
 4659              		.cfi_restore 6
 4660              		.cfi_restore 14
2311:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4661              		.loc 1 2311 0
 4662 17a2 4FF0FF30 		mov	r0, #-1
 4663              	.LVL382:
 4664 17a6 7047     		bx	lr
 4665              	.LVL383:
 4666              	.L465:
 4667              		.cfi_def_cfa_offset 24
 4668              		.cfi_offset 4, -16
 4669              		.cfi_offset 5, -12
 4670              		.cfi_offset 6, -8
 4671              		.cfi_offset 14, -4
2313:drivers/inv_mpu.c **** 
 4672              		.loc 1 2313 0
 4673 17a8 4FF0FF30 		mov	r0, #-1
 4674              	.LVL384:
 4675 17ac F7E7     		b	.L462
 4676              	.L466:
2320:drivers/inv_mpu.c **** 
 4677              		.loc 1 2320 0
 4678 17ae 4FF0FF30 		mov	r0, #-1
 4679 17b2 F4E7     		b	.L462
 4680              	.LVL385:
 4681              	.L467:
2323:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->mem_r_w, length, data))
ARM GAS  /tmp/cci8Vpl3.s 			page 135


 4682              		.loc 1 2323 0
 4683 17b4 4FF0FF30 		mov	r0, #-1
 4684 17b8 F1E7     		b	.L462
 4685              	.L473:
 4686 17ba 00BF     		.align	2
 4687              	.L472:
 4688 17bc 00000000 		.word	.LANCHOR0
 4689              		.cfi_endproc
 4690              	.LFE102:
 4691              		.size	mpu_read_mem, .-mpu_read_mem
 4692              		.align	1
 4693              		.global	mpu_load_firmware
 4694              		.syntax unified
 4695              		.thumb
 4696              		.thumb_func
 4697              		.fpu softvfp
 4698              		.type	mpu_load_firmware, %function
 4699              	mpu_load_firmware:
 4700              	.LFB103:
2328:drivers/inv_mpu.c **** 
2329:drivers/inv_mpu.c **** /**
2330:drivers/inv_mpu.c ****  *  @brief      Load and verify DMP image.
2331:drivers/inv_mpu.c ****  *  @param[in]  length      Length of DMP image.
2332:drivers/inv_mpu.c ****  *  @param[in]  firmware    DMP code.
2333:drivers/inv_mpu.c ****  *  @param[in]  start_addr  Starting address of DMP code memory.
2334:drivers/inv_mpu.c ****  *  @param[in]  sample_rate Fixed sampling rate used when DMP is enabled.
2335:drivers/inv_mpu.c ****  *  @return     0 if successful.
2336:drivers/inv_mpu.c ****  */
2337:drivers/inv_mpu.c **** int mpu_load_firmware(unsigned short length, const unsigned char *firmware,
2338:drivers/inv_mpu.c ****     unsigned short start_addr, unsigned short sample_rate)
2339:drivers/inv_mpu.c **** {
 4701              		.loc 1 2339 0
 4702              		.cfi_startproc
 4703              		@ args = 0, pretend = 0, frame = 24
 4704              		@ frame_needed = 0, uses_anonymous_args = 0
 4705              	.LVL386:
 4706 17c0 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4707              		.cfi_def_cfa_offset 36
 4708              		.cfi_offset 4, -36
 4709              		.cfi_offset 5, -32
 4710              		.cfi_offset 6, -28
 4711              		.cfi_offset 7, -24
 4712              		.cfi_offset 8, -20
 4713              		.cfi_offset 9, -16
 4714              		.cfi_offset 10, -12
 4715              		.cfi_offset 11, -8
 4716              		.cfi_offset 14, -4
 4717 17c4 87B0     		sub	sp, sp, #28
 4718              		.cfi_def_cfa_offset 64
2340:drivers/inv_mpu.c ****     unsigned short ii;
2341:drivers/inv_mpu.c ****     unsigned short this_write;
2342:drivers/inv_mpu.c ****     /* Must divide evenly into st.hw->bank_size to avoid bank crossings. */
2343:drivers/inv_mpu.c **** #define LOAD_CHUNK  (16)
2344:drivers/inv_mpu.c ****     unsigned char cur[LOAD_CHUNK], tmp[2];
2345:drivers/inv_mpu.c **** 
2346:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_loaded)
 4719              		.loc 1 2346 0
ARM GAS  /tmp/cci8Vpl3.s 			page 136


 4720 17c6 2B4C     		ldr	r4, .L486
 4721 17c8 94F82540 		ldrb	r4, [r4, #37]	@ zero_extendqisi2
 4722 17cc 002C     		cmp	r4, #0
 4723 17ce 3BD1     		bne	.L478
2347:drivers/inv_mpu.c ****         /* DMP should only be loaded once. */
2348:drivers/inv_mpu.c ****         return -1;
2349:drivers/inv_mpu.c **** 
2350:drivers/inv_mpu.c ****     if (!firmware)
 4724              		.loc 1 2350 0
 4725 17d0 0029     		cmp	r1, #0
 4726 17d2 3CD0     		beq	.L479
 4727 17d4 9A46     		mov	r10, r3
 4728 17d6 9146     		mov	r9, r2
 4729 17d8 8846     		mov	r8, r1
 4730 17da 0746     		mov	r7, r0
 4731              	.LVL387:
2351:drivers/inv_mpu.c ****         return -1;
2352:drivers/inv_mpu.c ****     for (ii = 0; ii < length; ii += this_write) {
 4732              		.loc 1 2352 0 discriminator 1
 4733 17dc E0B1     		cbz	r0, .L476
 4734              	.LVL388:
 4735              	.L477:
2353:drivers/inv_mpu.c ****         this_write = min(LOAD_CHUNK, length - ii);
 4736              		.loc 1 2353 0
 4737 17de 3D1B     		subs	r5, r7, r4
 4738 17e0 102D     		cmp	r5, #16
 4739 17e2 A8BF     		it	ge
 4740 17e4 1025     		movge	r5, #16
 4741 17e6 AEB2     		uxth	r6, r5
 4742              	.LVL389:
2354:drivers/inv_mpu.c ****         if (mpu_write_mem(ii, this_write, (unsigned char*)&firmware[ii]))
 4743              		.loc 1 2354 0
 4744 17e8 08EB040B 		add	fp, r8, r4
 4745 17ec 5A46     		mov	r2, fp
 4746 17ee 3146     		mov	r1, r6
 4747 17f0 2046     		mov	r0, r4
 4748 17f2 FFF7FEFF 		bl	mpu_write_mem
 4749              	.LVL390:
 4750 17f6 68BB     		cbnz	r0, .L480
2355:drivers/inv_mpu.c ****             return -1;
2356:drivers/inv_mpu.c ****         if (mpu_read_mem(ii, this_write, cur))
 4751              		.loc 1 2356 0
 4752 17f8 02AA     		add	r2, sp, #8
 4753 17fa 3146     		mov	r1, r6
 4754 17fc 2046     		mov	r0, r4
 4755 17fe FFF7FEFF 		bl	mpu_read_mem
 4756              	.LVL391:
 4757 1802 68BB     		cbnz	r0, .L481
2357:drivers/inv_mpu.c ****             return -1;
2358:drivers/inv_mpu.c ****         if (memcmp(firmware+ii, cur, this_write))
 4758              		.loc 1 2358 0
 4759 1804 3246     		mov	r2, r6
 4760 1806 02A9     		add	r1, sp, #8
 4761 1808 5846     		mov	r0, fp
 4762 180a FFF7FEFF 		bl	memcmp
 4763              	.LVL392:
 4764 180e 50BB     		cbnz	r0, .L482
ARM GAS  /tmp/cci8Vpl3.s 			page 137


2352:drivers/inv_mpu.c ****         this_write = min(LOAD_CHUNK, length - ii);
 4765              		.loc 1 2352 0 discriminator 2
 4766 1810 3444     		add	r4, r4, r6
 4767              	.LVL393:
 4768 1812 A4B2     		uxth	r4, r4
 4769              	.LVL394:
 4770 1814 A742     		cmp	r7, r4
 4771 1816 E2D8     		bhi	.L477
 4772              	.LVL395:
 4773              	.L476:
2359:drivers/inv_mpu.c ****             return -2;
2360:drivers/inv_mpu.c ****     }
2361:drivers/inv_mpu.c **** 
2362:drivers/inv_mpu.c ****     /* Set program start address. */
2363:drivers/inv_mpu.c ****     tmp[0] = start_addr >> 8;
 4774              		.loc 1 2363 0
 4775 1818 4FEA1923 		lsr	r3, r9, #8
 4776 181c 8DF80430 		strb	r3, [sp, #4]
2364:drivers/inv_mpu.c ****     tmp[1] = start_addr & 0xFF;
 4777              		.loc 1 2364 0
 4778 1820 8DF80590 		strb	r9, [sp, #5]
2365:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->prgm_start_h, 2, tmp))
 4779              		.loc 1 2365 0
 4780 1824 134B     		ldr	r3, .L486
 4781 1826 1968     		ldr	r1, [r3]
 4782 1828 5868     		ldr	r0, [r3, #4]
 4783 182a 01AB     		add	r3, sp, #4
 4784 182c 0222     		movs	r2, #2
 4785 182e 897E     		ldrb	r1, [r1, #26]	@ zero_extendqisi2
 4786 1830 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4787 1832 FFF7FEFF 		bl	i2cWrite
 4788              	.LVL396:
 4789 1836 0346     		mov	r3, r0
 4790 1838 C0B9     		cbnz	r0, .L483
2366:drivers/inv_mpu.c ****         return -1;
2367:drivers/inv_mpu.c **** 
2368:drivers/inv_mpu.c ****     st.chip_cfg.dmp_loaded = 1;
 4791              		.loc 1 2368 0
 4792 183a 0E4A     		ldr	r2, .L486
 4793 183c 0121     		movs	r1, #1
 4794 183e 82F82510 		strb	r1, [r2, #37]
2369:drivers/inv_mpu.c ****     st.chip_cfg.dmp_sample_rate = sample_rate;
 4795              		.loc 1 2369 0
 4796 1842 A2F826A0 		strh	r10, [r2, #38]	@ movhi
2370:drivers/inv_mpu.c ****     return 0;
 4797              		.loc 1 2370 0
 4798 1846 07E0     		b	.L474
 4799              	.LVL397:
 4800              	.L478:
2348:drivers/inv_mpu.c **** 
 4801              		.loc 1 2348 0
 4802 1848 4FF0FF33 		mov	r3, #-1
 4803              	.LVL398:
 4804 184c 04E0     		b	.L474
 4805              	.LVL399:
 4806              	.L479:
2351:drivers/inv_mpu.c ****     for (ii = 0; ii < length; ii += this_write) {
ARM GAS  /tmp/cci8Vpl3.s 			page 138


 4807              		.loc 1 2351 0
 4808 184e 4FF0FF33 		mov	r3, #-1
 4809              	.LVL400:
 4810 1852 01E0     		b	.L474
 4811              	.LVL401:
 4812              	.L480:
2355:drivers/inv_mpu.c ****         if (mpu_read_mem(ii, this_write, cur))
 4813              		.loc 1 2355 0
 4814 1854 4FF0FF33 		mov	r3, #-1
 4815              	.LVL402:
 4816              	.L474:
2371:drivers/inv_mpu.c **** }
 4817              		.loc 1 2371 0
 4818 1858 1846     		mov	r0, r3
 4819 185a 07B0     		add	sp, sp, #28
 4820              		.cfi_remember_state
 4821              		.cfi_def_cfa_offset 36
 4822              		@ sp needed
 4823 185c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4824              	.LVL403:
 4825              	.L481:
 4826              		.cfi_restore_state
2357:drivers/inv_mpu.c ****         if (memcmp(firmware+ii, cur, this_write))
 4827              		.loc 1 2357 0
 4828 1860 4FF0FF33 		mov	r3, #-1
 4829 1864 F8E7     		b	.L474
 4830              	.L482:
2359:drivers/inv_mpu.c ****     }
 4831              		.loc 1 2359 0
 4832 1866 6FF00103 		mvn	r3, #1
 4833 186a F5E7     		b	.L474
 4834              	.LVL404:
 4835              	.L483:
2366:drivers/inv_mpu.c **** 
 4836              		.loc 1 2366 0
 4837 186c 4FF0FF33 		mov	r3, #-1
 4838 1870 F2E7     		b	.L474
 4839              	.L487:
 4840 1872 00BF     		.align	2
 4841              	.L486:
 4842 1874 00000000 		.word	.LANCHOR0
 4843              		.cfi_endproc
 4844              	.LFE103:
 4845              		.size	mpu_load_firmware, .-mpu_load_firmware
 4846              		.align	1
 4847              		.global	mpu_set_dmp_state
 4848              		.syntax unified
 4849              		.thumb
 4850              		.thumb_func
 4851              		.fpu softvfp
 4852              		.type	mpu_set_dmp_state, %function
 4853              	mpu_set_dmp_state:
 4854              	.LFB104:
2372:drivers/inv_mpu.c **** 
2373:drivers/inv_mpu.c **** /**
2374:drivers/inv_mpu.c ****  *  @brief      Enable/disable DMP support.
2375:drivers/inv_mpu.c ****  *  @param[in]  enable  1 to turn on the DMP.
ARM GAS  /tmp/cci8Vpl3.s 			page 139


2376:drivers/inv_mpu.c ****  *  @return     0 if successful.
2377:drivers/inv_mpu.c ****  */
2378:drivers/inv_mpu.c **** int mpu_set_dmp_state(unsigned char enable)
2379:drivers/inv_mpu.c **** {
 4855              		.loc 1 2379 0
 4856              		.cfi_startproc
 4857              		@ args = 0, pretend = 0, frame = 8
 4858              		@ frame_needed = 0, uses_anonymous_args = 0
 4859              	.LVL405:
2380:drivers/inv_mpu.c ****     unsigned char tmp;
2381:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on == enable)
 4860              		.loc 1 2381 0
 4861 1878 224B     		ldr	r3, .L497
 4862 187a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 4863 187e 8342     		cmp	r3, r0
 4864 1880 3AD0     		beq	.L491
2379:drivers/inv_mpu.c ****     unsigned char tmp;
 4865              		.loc 1 2379 0
 4866 1882 30B5     		push	{r4, r5, lr}
 4867              		.cfi_def_cfa_offset 12
 4868              		.cfi_offset 4, -12
 4869              		.cfi_offset 5, -8
 4870              		.cfi_offset 14, -4
 4871 1884 83B0     		sub	sp, sp, #12
 4872              		.cfi_def_cfa_offset 24
2382:drivers/inv_mpu.c ****         return 0;
2383:drivers/inv_mpu.c **** 
2384:drivers/inv_mpu.c ****     if (enable) {
 4873              		.loc 1 2384 0
 4874 1886 10B3     		cbz	r0, .L490
2385:drivers/inv_mpu.c ****         if (!st.chip_cfg.dmp_loaded)
 4875              		.loc 1 2385 0
 4876 1888 1E4B     		ldr	r3, .L497
 4877 188a 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 4878 188e 002B     		cmp	r3, #0
 4879 1890 34D0     		beq	.L492
2386:drivers/inv_mpu.c ****             return -1;
2387:drivers/inv_mpu.c ****         /* Disable data ready interrupt. */
2388:drivers/inv_mpu.c ****         set_int_enable(0);
 4880              		.loc 1 2388 0
 4881 1892 0020     		movs	r0, #0
 4882              	.LVL406:
 4883 1894 FEF7B4FB 		bl	set_int_enable
 4884              	.LVL407:
2389:drivers/inv_mpu.c ****         /* Disable bypass mode. */
2390:drivers/inv_mpu.c ****         mpu_set_bypass(0);
 4885              		.loc 1 2390 0
 4886 1898 0020     		movs	r0, #0
 4887 189a FFF7FEFF 		bl	mpu_set_bypass
 4888              	.LVL408:
2391:drivers/inv_mpu.c ****         /* Keep constant sample rate, FIFO rate controlled by DMP. */
2392:drivers/inv_mpu.c ****         mpu_set_sample_rate(st.chip_cfg.dmp_sample_rate);
 4889              		.loc 1 2392 0
 4890 189e 194D     		ldr	r5, .L497
 4891 18a0 E88C     		ldrh	r0, [r5, #38]
 4892 18a2 FFF7FEFF 		bl	mpu_set_sample_rate
 4893              	.LVL409:
ARM GAS  /tmp/cci8Vpl3.s 			page 140


2393:drivers/inv_mpu.c ****         /* Remove FIFO elements. */
2394:drivers/inv_mpu.c ****         tmp = 0;
 4894              		.loc 1 2394 0
 4895 18a6 0024     		movs	r4, #0
 4896 18a8 02AB     		add	r3, sp, #8
 4897 18aa 03F8014D 		strb	r4, [r3, #-1]!
2395:drivers/inv_mpu.c ****         i2c_write(st.hw->addr, 0x23, 1, &tmp);
 4898              		.loc 1 2395 0
 4899 18ae 6868     		ldr	r0, [r5, #4]
 4900 18b0 0122     		movs	r2, #1
 4901 18b2 2321     		movs	r1, #35
 4902 18b4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4903 18b6 FFF7FEFF 		bl	i2cWrite
 4904              	.LVL410:
2396:drivers/inv_mpu.c ****         st.chip_cfg.dmp_on = 1;
 4905              		.loc 1 2396 0
 4906 18ba 0120     		movs	r0, #1
 4907 18bc 85F82400 		strb	r0, [r5, #36]
2397:drivers/inv_mpu.c ****         /* Enable DMP interrupt. */
2398:drivers/inv_mpu.c ****         set_int_enable(1);
 4908              		.loc 1 2398 0
 4909 18c0 FEF79EFB 		bl	set_int_enable
 4910              	.LVL411:
2399:drivers/inv_mpu.c ****         mpu_reset_fifo();
 4911              		.loc 1 2399 0
 4912 18c4 FFF7FEFF 		bl	mpu_reset_fifo
 4913              	.LVL412:
2400:drivers/inv_mpu.c ****     } else {
2401:drivers/inv_mpu.c ****         /* Disable DMP interrupt. */
2402:drivers/inv_mpu.c ****         set_int_enable(0);
2403:drivers/inv_mpu.c ****         /* Restore FIFO settings. */
2404:drivers/inv_mpu.c ****         tmp = st.chip_cfg.fifo_enable;
2405:drivers/inv_mpu.c ****         i2c_write(st.hw->addr, 0x23, 1, &tmp);
2406:drivers/inv_mpu.c ****         st.chip_cfg.dmp_on = 0;
2407:drivers/inv_mpu.c ****         mpu_reset_fifo();
2408:drivers/inv_mpu.c ****     }
2409:drivers/inv_mpu.c ****     return 0;
 4914              		.loc 1 2409 0
 4915 18c8 2046     		mov	r0, r4
 4916              	.L488:
2410:drivers/inv_mpu.c **** }
 4917              		.loc 1 2410 0
 4918 18ca 03B0     		add	sp, sp, #12
 4919              		.cfi_remember_state
 4920              		.cfi_def_cfa_offset 12
 4921              		@ sp needed
 4922 18cc 30BD     		pop	{r4, r5, pc}
 4923              	.LVL413:
 4924              	.L490:
 4925              		.cfi_restore_state
2402:drivers/inv_mpu.c ****         /* Restore FIFO settings. */
 4926              		.loc 1 2402 0
 4927 18ce 0020     		movs	r0, #0
 4928              	.LVL414:
 4929 18d0 FEF796FB 		bl	set_int_enable
 4930              	.LVL415:
2404:drivers/inv_mpu.c ****         i2c_write(st.hw->addr, 0x23, 1, &tmp);
ARM GAS  /tmp/cci8Vpl3.s 			page 141


 4931              		.loc 1 2404 0
 4932 18d4 0B4D     		ldr	r5, .L497
 4933 18d6 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 4934 18d8 02AB     		add	r3, sp, #8
 4935 18da 03F8012D 		strb	r2, [r3, #-1]!
2405:drivers/inv_mpu.c ****         st.chip_cfg.dmp_on = 0;
 4936              		.loc 1 2405 0
 4937 18de 6868     		ldr	r0, [r5, #4]
 4938 18e0 0122     		movs	r2, #1
 4939 18e2 2321     		movs	r1, #35
 4940 18e4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4941 18e6 FFF7FEFF 		bl	i2cWrite
 4942              	.LVL416:
2406:drivers/inv_mpu.c ****         mpu_reset_fifo();
 4943              		.loc 1 2406 0
 4944 18ea 0024     		movs	r4, #0
 4945 18ec 85F82440 		strb	r4, [r5, #36]
2407:drivers/inv_mpu.c ****     }
 4946              		.loc 1 2407 0
 4947 18f0 FFF7FEFF 		bl	mpu_reset_fifo
 4948              	.LVL417:
2409:drivers/inv_mpu.c **** }
 4949              		.loc 1 2409 0
 4950 18f4 2046     		mov	r0, r4
 4951 18f6 E8E7     		b	.L488
 4952              	.LVL418:
 4953              	.L491:
 4954              		.cfi_def_cfa_offset 0
 4955              		.cfi_restore 4
 4956              		.cfi_restore 5
 4957              		.cfi_restore 14
2382:drivers/inv_mpu.c **** 
 4958              		.loc 1 2382 0
 4959 18f8 0020     		movs	r0, #0
 4960              	.LVL419:
 4961 18fa 7047     		bx	lr
 4962              	.LVL420:
 4963              	.L492:
 4964              		.cfi_def_cfa_offset 24
 4965              		.cfi_offset 4, -12
 4966              		.cfi_offset 5, -8
 4967              		.cfi_offset 14, -4
2386:drivers/inv_mpu.c ****         /* Disable data ready interrupt. */
 4968              		.loc 1 2386 0
 4969 18fc 4FF0FF30 		mov	r0, #-1
 4970              	.LVL421:
 4971 1900 E3E7     		b	.L488
 4972              	.L498:
 4973 1902 00BF     		.align	2
 4974              	.L497:
 4975 1904 00000000 		.word	.LANCHOR0
 4976              		.cfi_endproc
 4977              	.LFE104:
 4978              		.size	mpu_set_dmp_state, .-mpu_set_dmp_state
 4979              		.global	__aeabi_fcmpeq
 4980              		.global	__aeabi_fcmpgt
 4981              		.global	__aeabi_fcmplt
ARM GAS  /tmp/cci8Vpl3.s 			page 142


 4982              		.align	1
 4983              		.global	mpu_run_self_test
 4984              		.syntax unified
 4985              		.thumb
 4986              		.thumb_func
 4987              		.fpu softvfp
 4988              		.type	mpu_run_self_test, %function
 4989              	mpu_run_self_test:
 4990              	.LFB100:
2171:drivers/inv_mpu.c **** #ifdef MPU6050
 4991              		.loc 1 2171 0
 4992              		.cfi_startproc
 4993              		@ args = 0, pretend = 0, frame = 80
 4994              		@ frame_needed = 0, uses_anonymous_args = 0
 4995              	.LVL422:
 4996 1908 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4997              		.cfi_def_cfa_offset 36
 4998              		.cfi_offset 4, -36
 4999              		.cfi_offset 5, -32
 5000              		.cfi_offset 6, -28
 5001              		.cfi_offset 7, -24
 5002              		.cfi_offset 8, -20
 5003              		.cfi_offset 9, -16
 5004              		.cfi_offset 10, -12
 5005              		.cfi_offset 11, -8
 5006              		.cfi_offset 14, -4
 5007 190c 95B0     		sub	sp, sp, #84
 5008              		.cfi_def_cfa_offset 120
 5009 190e 0290     		str	r0, [sp, #8]
 5010 1910 0D46     		mov	r5, r1
 5011              	.LVL423:
2186:drivers/inv_mpu.c ****         mpu_set_dmp_state(0);
 5012              		.loc 1 2186 0
 5013 1912 BB4B     		ldr	r3, .L546
 5014 1914 93F82460 		ldrb	r6, [r3, #36]	@ zero_extendqisi2
 5015 1918 002E     		cmp	r6, #0
 5016 191a 4DD1     		bne	.L541
 5017              	.LVL424:
 5018              	.L500:
2193:drivers/inv_mpu.c ****     mpu_get_accel_fsr(&accel_fsr);
 5019              		.loc 1 2193 0
 5020 191c 0DA8     		add	r0, sp, #52
 5021 191e FFF7FEFF 		bl	mpu_get_gyro_fsr
 5022              	.LVL425:
2194:drivers/inv_mpu.c ****     mpu_get_lpf(&lpf);
 5023              		.loc 1 2194 0
 5024 1922 0DF13700 		add	r0, sp, #55
 5025 1926 FFF7FEFF 		bl	mpu_get_accel_fsr
 5026              	.LVL426:
2195:drivers/inv_mpu.c ****     mpu_get_sample_rate(&sample_rate);
 5027              		.loc 1 2195 0
 5028 192a 0CA8     		add	r0, sp, #48
 5029 192c FFF7FEFF 		bl	mpu_get_lpf
 5030              	.LVL427:
2196:drivers/inv_mpu.c ****     sensors_on = st.chip_cfg.sensors;
 5031              		.loc 1 2196 0
 5032 1930 0DF13200 		add	r0, sp, #50
ARM GAS  /tmp/cci8Vpl3.s 			page 143


 5033 1934 FFF7FEFF 		bl	mpu_get_sample_rate
 5034              	.LVL428:
2197:drivers/inv_mpu.c ****     mpu_get_fifo_config(&fifo_sensors);
 5035              		.loc 1 2197 0
 5036 1938 B14B     		ldr	r3, .L546
 5037 193a 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 5038 193c 0392     		str	r2, [sp, #12]
 5039              	.LVL429:
 5040              	.LBB12:
 5041              	.LBB13:
1519:drivers/inv_mpu.c ****     return 0;
 5042              		.loc 1 1519 0
 5043 193e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5044 1940 0493     		str	r3, [sp, #16]
 5045              	.LVL430:
 5046              	.LBE13:
 5047              	.LBE12:
2203:drivers/inv_mpu.c ****             break;
 5048              		.loc 1 2203 0
 5049 1942 0022     		movs	r2, #0
 5050 1944 2946     		mov	r1, r5
 5051 1946 029C     		ldr	r4, [sp, #8]
 5052 1948 2046     		mov	r0, r4
 5053 194a FEF7A7FB 		bl	get_st_biases
 5054              	.LVL431:
 5055 194e 0028     		cmp	r0, #0
 5056 1950 00F04781 		beq	.L501
 5057              	.LVL432:
 5058 1954 0022     		movs	r2, #0
 5059 1956 2946     		mov	r1, r5
 5060 1958 2046     		mov	r0, r4
 5061 195a FEF79FFB 		bl	get_st_biases
 5062              	.LVL433:
 5063 195e 0028     		cmp	r0, #0
 5064 1960 00F03F81 		beq	.L501
2209:drivers/inv_mpu.c ****         goto restore;
 5065              		.loc 1 2209 0
 5066 1964 0024     		movs	r4, #0
 5067              	.LVL434:
 5068              	.L502:
2243:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 5069              		.loc 1 2243 0
 5070 1966 A64B     		ldr	r3, .L546
 5071 1968 FF22     		movs	r2, #255
 5072 196a 1A72     		strb	r2, [r3, #8]
2244:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 5073              		.loc 1 2244 0
 5074 196c 5A72     		strb	r2, [r3, #9]
2245:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 5075              		.loc 1 2245 0
 5076 196e DA72     		strb	r2, [r3, #11]
2246:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
 5077              		.loc 1 2246 0
 5078 1970 4FF6FF71 		movw	r1, #65535
 5079 1974 D981     		strh	r1, [r3, #14]	@ movhi
2247:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 5080              		.loc 1 2247 0
ARM GAS  /tmp/cci8Vpl3.s 			page 144


 5081 1976 9A72     		strb	r2, [r3, #10]
2248:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
 5082              		.loc 1 2248 0
 5083 1978 1A74     		strb	r2, [r3, #16]
2249:drivers/inv_mpu.c ****     mpu_set_gyro_fsr(gyro_fsr);
 5084              		.loc 1 2249 0
 5085 197a 0122     		movs	r2, #1
 5086 197c 1A73     		strb	r2, [r3, #12]
2250:drivers/inv_mpu.c ****     mpu_set_accel_fsr(accel_fsr);
 5087              		.loc 1 2250 0
 5088 197e BDF83400 		ldrh	r0, [sp, #52]
 5089 1982 FFF7FEFF 		bl	mpu_set_gyro_fsr
 5090              	.LVL435:
2251:drivers/inv_mpu.c ****     mpu_set_lpf(lpf);
 5091              		.loc 1 2251 0
 5092 1986 9DF83700 		ldrb	r0, [sp, #55]	@ zero_extendqisi2
 5093 198a FFF7FEFF 		bl	mpu_set_accel_fsr
 5094              	.LVL436:
2252:drivers/inv_mpu.c ****     mpu_set_sample_rate(sample_rate);
 5095              		.loc 1 2252 0
 5096 198e BDF83000 		ldrh	r0, [sp, #48]
 5097 1992 FFF7FEFF 		bl	mpu_set_lpf
 5098              	.LVL437:
2253:drivers/inv_mpu.c ****     mpu_set_sensors(sensors_on);
 5099              		.loc 1 2253 0
 5100 1996 BDF83200 		ldrh	r0, [sp, #50]
 5101 199a FFF7FEFF 		bl	mpu_set_sample_rate
 5102              	.LVL438:
2254:drivers/inv_mpu.c ****     mpu_configure_fifo(fifo_sensors);
 5103              		.loc 1 2254 0
 5104 199e 0398     		ldr	r0, [sp, #12]
 5105 19a0 FFF7FEFF 		bl	mpu_set_sensors
 5106              	.LVL439:
2255:drivers/inv_mpu.c **** 
 5107              		.loc 1 2255 0
 5108 19a4 0498     		ldr	r0, [sp, #16]
 5109 19a6 FFF7FEFF 		bl	mpu_configure_fifo
 5110              	.LVL440:
2257:drivers/inv_mpu.c ****         mpu_set_dmp_state(1);
 5111              		.loc 1 2257 0
 5112 19aa 002E     		cmp	r6, #0
 5113 19ac 40F01581 		bne	.L542
 5114              	.LVL441:
 5115              	.L499:
2261:drivers/inv_mpu.c **** 
 5116              		.loc 1 2261 0
 5117 19b0 2046     		mov	r0, r4
 5118 19b2 15B0     		add	sp, sp, #84
 5119              		.cfi_remember_state
 5120              		.cfi_def_cfa_offset 36
 5121              		@ sp needed
 5122 19b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5123              	.LVL442:
 5124              	.L541:
 5125              		.cfi_restore_state
2187:drivers/inv_mpu.c ****         dmp_was_on = 1;
 5126              		.loc 1 2187 0
ARM GAS  /tmp/cci8Vpl3.s 			page 145


 5127 19b8 0020     		movs	r0, #0
 5128              	.LVL443:
 5129 19ba FFF7FEFF 		bl	mpu_set_dmp_state
 5130              	.LVL444:
2188:drivers/inv_mpu.c ****     } else
 5131              		.loc 1 2188 0
 5132 19be 0126     		movs	r6, #1
 5133 19c0 ACE7     		b	.L500
 5134              	.LVL445:
 5135              	.L545:
 5136              	.LBB14:
 5137              	.LBB15:
 5138              	.LBB16:
 5139              	.LBB17:
1908:drivers/inv_mpu.c ****     shift_code[1] = ((tmp[1] & 0xE0) >> 3) | ((tmp[3] & 0x0C) >> 2);
 5140              		.loc 1 1908 0
 5141 19c2 9DF82310 		ldrb	r1, [sp, #35]	@ zero_extendqisi2
 5142 19c6 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 5143 19ca D210     		asrs	r2, r2, #3
 5144 19cc 02F01C02 		and	r2, r2, #28
 5145 19d0 C1F30113 		ubfx	r3, r1, #4, #2
 5146 19d4 1A43     		orrs	r2, r2, r3
 5147 19d6 8DF81C20 		strb	r2, [sp, #28]
1909:drivers/inv_mpu.c ****     shift_code[2] = ((tmp[2] & 0xE0) >> 3) | (tmp[3] & 0x03);
 5148              		.loc 1 1909 0
 5149 19da 9DF82120 		ldrb	r2, [sp, #33]	@ zero_extendqisi2
 5150 19de D210     		asrs	r2, r2, #3
 5151 19e0 02F01C02 		and	r2, r2, #28
 5152 19e4 C1F38103 		ubfx	r3, r1, #2, #2
 5153 19e8 1A43     		orrs	r2, r2, r3
 5154 19ea 8DF81D20 		strb	r2, [sp, #29]
1910:drivers/inv_mpu.c ****     for (ii = 0; ii < 3; ii++) {
 5155              		.loc 1 1910 0
 5156 19ee 9DF82230 		ldrb	r3, [sp, #34]	@ zero_extendqisi2
 5157 19f2 DB10     		asrs	r3, r3, #3
 5158 19f4 03F01C03 		and	r3, r3, #28
 5159 19f8 01F00301 		and	r1, r1, #3
 5160 19fc 0B43     		orrs	r3, r3, r1
 5161 19fe 8DF81E30 		strb	r3, [sp, #30]
 5162              	.LVL446:
 5163 1a02 07AF     		add	r7, sp, #28
 5164 1a04 0DF12408 		add	r8, sp, #36
 5165              	.LVL447:
 5166 1a08 0DF11F0A 		add	r10, sp, #31
1919:drivers/inv_mpu.c ****         while (--shift_code[ii])
 5167              		.loc 1 1919 0
 5168 1a0c DFF810B2 		ldr	fp, .L546+32
1921:drivers/inv_mpu.c ****     }
 5169              		.loc 1 1921 0
 5170 1a10 DFF81092 		ldr	r9, .L546+36
 5171 1a14 1BE0     		b	.L507
 5172              	.LVL448:
 5173              	.L504:
 5174 1a16 CDF81480 		str	r8, [sp, #20]
1919:drivers/inv_mpu.c ****         while (--shift_code[ii])
 5175              		.loc 1 1919 0
 5176 1a1a C8F800B0 		str	fp, [r8]	@ float
ARM GAS  /tmp/cci8Vpl3.s 			page 146


1920:drivers/inv_mpu.c ****             st_shift[ii] *= 1.034f;
 5177              		.loc 1 1920 0
 5178 1a1e 013C     		subs	r4, r4, #1
 5179 1a20 E4B2     		uxtb	r4, r4
 5180 1a22 3C70     		strb	r4, [r7]
 5181 1a24 6CB1     		cbz	r4, .L505
 5182 1a26 5846     		mov	r0, fp
 5183              	.L506:
1921:drivers/inv_mpu.c ****     }
 5184              		.loc 1 1921 0
 5185 1a28 4946     		mov	r1, r9
 5186 1a2a FFF7FEFF 		bl	__aeabi_fmul
 5187              	.LVL449:
1920:drivers/inv_mpu.c ****             st_shift[ii] *= 1.034f;
 5188              		.loc 1 1920 0
 5189 1a2e 013C     		subs	r4, r4, #1
 5190 1a30 14F0FF04 		ands	r4, r4, #255
 5191 1a34 F8D1     		bne	.L506
 5192 1a36 059B     		ldr	r3, [sp, #20]
 5193 1a38 1860     		str	r0, [r3]	@ float
 5194 1a3a 019B     		ldr	r3, [sp, #4]
 5195 1a3c 4FF00002 		mov	r2, #0
 5196 1a40 1A70     		strb	r2, [r3]
 5197              	.L505:
 5198              	.LVL450:
 5199 1a42 0137     		adds	r7, r7, #1
 5200              	.LVL451:
 5201 1a44 08F10408 		add	r8, r8, #4
1911:drivers/inv_mpu.c ****         if (!shift_code[ii]) {
 5202              		.loc 1 1911 0
 5203 1a48 5745     		cmp	r7, r10
 5204 1a4a 00F0F880 		beq	.L526
 5205              	.L507:
 5206              	.LVL452:
 5207 1a4e 0197     		str	r7, [sp, #4]
1912:drivers/inv_mpu.c ****             st_shift[ii] = 0.f;
 5208              		.loc 1 1912 0
 5209 1a50 3C78     		ldrb	r4, [r7]	@ zero_extendqisi2
 5210 1a52 002C     		cmp	r4, #0
 5211 1a54 DFD1     		bne	.L504
1913:drivers/inv_mpu.c ****             continue;
 5212              		.loc 1 1913 0
 5213 1a56 0023     		movs	r3, #0
 5214 1a58 C8F80030 		str	r3, [r8]	@ float
 5215 1a5c F1E7     		b	.L505
 5216              	.LVL453:
 5217              	.L538:
 5218              	.LBE17:
 5219              	.LBE16:
1938:drivers/inv_mpu.c ****             (st_shift_cust > test.max_g))
 5220              		.loc 1 1938 0
 5221 1a5e 6949     		ldr	r1, .L546+4
 5222 1a60 019E     		ldr	r6, [sp, #4]	@ float
 5223 1a62 3046     		mov	r0, r6
 5224 1a64 FFF7FEFF 		bl	__aeabi_fcmplt
 5225              	.LVL454:
 5226 1a68 20B9     		cbnz	r0, .L512
ARM GAS  /tmp/cci8Vpl3.s 			page 147


 5227 1a6a 6749     		ldr	r1, .L546+8
 5228 1a6c 3046     		mov	r0, r6
 5229 1a6e FFF7FEFF 		bl	__aeabi_fcmpgt
 5230              	.LVL455:
 5231 1a72 18B1     		cbz	r0, .L510
 5232              	.L512:
1940:drivers/inv_mpu.c ****     }
 5233              		.loc 1 1940 0
 5234 1a74 08FA04F3 		lsl	r3, r8, r4
 5235 1a78 49EA0309 		orr	r9, r9, r3
 5236              	.LVL456:
 5237              	.L510:
1932:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5238              		.loc 1 1932 0
 5239 1a7c 0134     		adds	r4, r4, #1
 5240              	.LVL457:
 5241 1a7e 032C     		cmp	r4, #3
 5242 1a80 2AD0     		beq	.L543
 5243              	.LVL458:
 5244              	.L514:
1933:drivers/inv_mpu.c ****         if (st_shift[jj]) {
 5245              		.loc 1 1933 0
 5246 1a82 55F8040F 		ldr	r0, [r5, #4]!
 5247 1a86 5BF82430 		ldr	r3, [fp, r4, lsl #2]
 5248 1a8a C01A     		subs	r0, r0, r3
 5249 1a8c 0028     		cmp	r0, #0
 5250 1a8e B8BF     		it	lt
 5251 1a90 4042     		rsblt	r0, r0, #0
 5252 1a92 FFF7FEFF 		bl	__aeabi_i2f
 5253              	.LVL459:
 5254 1a96 4FF05E51 		mov	r1, #931135488
 5255 1a9a FFF7FEFF 		bl	__aeabi_fmul
 5256              	.LVL460:
 5257 1a9e 0190     		str	r0, [sp, #4]	@ float
 5258              	.LVL461:
1934:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
 5259              		.loc 1 1934 0
 5260 1aa0 5AF82460 		ldr	r6, [r10, r4, lsl #2]	@ float
 5261 1aa4 0021     		movs	r1, #0
 5262 1aa6 3046     		mov	r0, r6
 5263              	.LVL462:
 5264 1aa8 FFF7FEFF 		bl	__aeabi_fcmpeq
 5265              	.LVL463:
 5266 1aac 0028     		cmp	r0, #0
 5267 1aae D6D1     		bne	.L538
 5268              	.LVL464:
1935:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_accel_var)
 5269              		.loc 1 1935 0
 5270 1ab0 3146     		mov	r1, r6
 5271 1ab2 0198     		ldr	r0, [sp, #4]	@ float
 5272 1ab4 FFF7FEFF 		bl	__aeabi_fdiv
 5273              	.LVL465:
 5274 1ab8 4FF07E51 		mov	r1, #1065353216
 5275 1abc FFF7FEFF 		bl	__aeabi_fsub
 5276              	.LVL466:
1936:drivers/inv_mpu.c ****                 result |= 1 << jj;
 5277              		.loc 1 1936 0
ARM GAS  /tmp/cci8Vpl3.s 			page 148


 5278 1ac0 20F00040 		bic	r0, r0, #-2147483648
 5279 1ac4 5149     		ldr	r1, .L546+12
 5280 1ac6 FFF7FEFF 		bl	__aeabi_fcmpgt
 5281              	.LVL467:
 5282 1aca 0028     		cmp	r0, #0
 5283 1acc D6D0     		beq	.L510
1937:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_g) ||
 5284              		.loc 1 1937 0
 5285 1ace 08FA04F3 		lsl	r3, r8, r4
 5286 1ad2 49EA0309 		orr	r9, r9, r3
 5287              	.LVL468:
 5288 1ad6 D1E7     		b	.L510
 5289              	.LVL469:
 5290              	.L543:
 5291 1ad8 3E46     		mov	r6, r7
 5292              	.LVL470:
 5293              	.LBE15:
 5294              	.LBE14:
2220:drivers/inv_mpu.c ****     gyro_result = gyro_self_test(gyro, gyro_st);
 5295              		.loc 1 2220 0
 5296 1ada 5FFA89F9 		uxtb	r9, r9
 5297              	.LVL471:
 5298              	.LBB21:
 5299              	.LBB22:
1952:drivers/inv_mpu.c ****         return 0x07;
 5300              		.loc 1 1952 0
 5301 1ade 484B     		ldr	r3, .L546
 5302 1ae0 5868     		ldr	r0, [r3, #4]
 5303 1ae2 09AB     		add	r3, sp, #36
 5304 1ae4 0322     		movs	r2, #3
 5305 1ae6 0D21     		movs	r1, #13
 5306 1ae8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5307 1aea FFF7FEFF 		bl	i2cRead
 5308              	.LVL472:
 5309 1aee 0546     		mov	r5, r0
 5310 1af0 68B1     		cbz	r0, .L544
1953:drivers/inv_mpu.c **** 
 5311              		.loc 1 1953 0
 5312 1af2 4FF00708 		mov	r8, #7
 5313              	.LVL473:
 5314              	.L515:
 5315              	.LBE22:
 5316              	.LBE21:
2224:drivers/inv_mpu.c ****         result |= 0x01;
 5317              		.loc 1 2224 0
 5318 1af6 18F0FF0F 		tst	r8, #255
 5319 1afa 0CBF     		ite	eq
 5320 1afc 0124     		moveq	r4, #1
 5321 1afe 0024     		movne	r4, #0
 5322              	.LVL474:
2226:drivers/inv_mpu.c ****         result |= 0x02;
 5323              		.loc 1 2226 0
 5324 1b00 B9F1000F 		cmp	r9, #0
 5325 1b04 7FF42FAF 		bne	.L502
2227:drivers/inv_mpu.c **** 
 5326              		.loc 1 2227 0
 5327 1b08 44F00204 		orr	r4, r4, #2
ARM GAS  /tmp/cci8Vpl3.s 			page 149


 5328              	.LVL475:
 5329 1b0c 2BE7     		b	.L502
 5330              	.LVL476:
 5331              	.L544:
 5332              	.LBB24:
 5333              	.LBB23:
1955:drivers/inv_mpu.c ****     tmp[1] &= 0x1F;
 5334              		.loc 1 1955 0
 5335 1b0e 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 5336 1b12 03F01F03 		and	r3, r3, #31
 5337 1b16 8DF82430 		strb	r3, [sp, #36]
1956:drivers/inv_mpu.c ****     tmp[2] &= 0x1F;
 5338              		.loc 1 1956 0
 5339 1b1a 9DF82530 		ldrb	r3, [sp, #37]	@ zero_extendqisi2
 5340 1b1e 03F01F03 		and	r3, r3, #31
 5341 1b22 8DF82530 		strb	r3, [sp, #37]
1957:drivers/inv_mpu.c **** 
 5342              		.loc 1 1957 0
 5343 1b26 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 5344 1b2a 03F01F03 		and	r3, r3, #31
 5345 1b2e 8DF82630 		strb	r3, [sp, #38]
 5346              	.LVL477:
 5347 1b32 029B     		ldr	r3, [sp, #8]
 5348 1b34 A3F1040A 		sub	r10, r3, #4
 5349              	.LVL478:
 5350 1b38 09AF     		add	r7, sp, #36
1948:drivers/inv_mpu.c ****     unsigned char tmp[3];
 5351              		.loc 1 1948 0
 5352 1b3a 8046     		mov	r8, r0
1960:drivers/inv_mpu.c ****         if (tmp[jj]) {
 5353              		.loc 1 1960 0
 5354 1b3c 0DF1440B 		add	fp, sp, #68
 5355              	.LVL479:
 5356 1b40 14E0     		b	.L523
 5357              	.LVL480:
 5358              	.L529:
1963:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
 5359              		.loc 1 1963 0
 5360 1b42 3348     		ldr	r0, .L546+16
 5361              	.LVL481:
 5362 1b44 35E0     		b	.L517
 5363              	.LVL482:
 5364              	.L516:
1968:drivers/inv_mpu.c ****             (st_shift_cust > test.max_dps))
 5365              		.loc 1 1968 0
 5366 1b46 3349     		ldr	r1, .L546+20
 5367 1b48 019C     		ldr	r4, [sp, #4]	@ float
 5368 1b4a 2046     		mov	r0, r4
 5369              	.LVL483:
 5370 1b4c FFF7FEFF 		bl	__aeabi_fcmplt
 5371              	.LVL484:
 5372 1b50 20B9     		cbnz	r0, .L521
 5373 1b52 3149     		ldr	r1, .L546+24
 5374 1b54 2046     		mov	r0, r4
 5375 1b56 FFF7FEFF 		bl	__aeabi_fcmpgt
 5376              	.LVL485:
 5377 1b5a 18B1     		cbz	r0, .L519
ARM GAS  /tmp/cci8Vpl3.s 			page 150


 5378              	.L521:
1970:drivers/inv_mpu.c ****     }
 5379              		.loc 1 1970 0
 5380 1b5c 0123     		movs	r3, #1
 5381 1b5e AB40     		lsls	r3, r3, r5
 5382 1b60 48EA0308 		orr	r8, r8, r3
 5383              	.LVL486:
 5384              	.L519:
1959:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5385              		.loc 1 1959 0
 5386 1b64 0135     		adds	r5, r5, #1
 5387              	.LVL487:
 5388 1b66 0137     		adds	r7, r7, #1
 5389 1b68 032D     		cmp	r5, #3
 5390 1b6a C4D0     		beq	.L515
 5391              	.LVL488:
 5392              	.L523:
1960:drivers/inv_mpu.c ****         if (tmp[jj]) {
 5393              		.loc 1 1960 0
 5394 1b6c 5AF8040F 		ldr	r0, [r10, #4]!
 5395 1b70 5BF82530 		ldr	r3, [fp, r5, lsl #2]
 5396 1b74 C01A     		subs	r0, r0, r3
 5397 1b76 0028     		cmp	r0, #0
 5398 1b78 B8BF     		it	lt
 5399 1b7a 4042     		rsblt	r0, r0, #0
 5400 1b7c FFF7FEFF 		bl	__aeabi_i2f
 5401              	.LVL489:
 5402 1b80 4FF05E51 		mov	r1, #931135488
 5403 1b84 FFF7FEFF 		bl	__aeabi_fmul
 5404              	.LVL490:
 5405 1b88 0190     		str	r0, [sp, #4]	@ float
 5406              	.LVL491:
 5407 1b8a 0297     		str	r7, [sp, #8]
1961:drivers/inv_mpu.c ****             st_shift = 3275.f / test.gyro_sens;
 5408              		.loc 1 1961 0
 5409 1b8c 3C78     		ldrb	r4, [r7]	@ zero_extendqisi2
 5410 1b8e 002C     		cmp	r4, #0
 5411 1b90 D9D0     		beq	.L516
 5412              	.LVL492:
1963:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
 5413              		.loc 1 1963 0
 5414 1b92 013C     		subs	r4, r4, #1
 5415 1b94 E4B2     		uxtb	r4, r4
 5416 1b96 3C70     		strb	r4, [r7]
 5417 1b98 002C     		cmp	r4, #0
 5418 1b9a D2D0     		beq	.L529
 5419 1b9c 1C48     		ldr	r0, .L546+16
 5420              	.LVL493:
 5421              	.L518:
1964:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift - 1.f;
 5422              		.loc 1 1964 0
 5423 1b9e 1F49     		ldr	r1, .L546+28
 5424 1ba0 FFF7FEFF 		bl	__aeabi_fmul
 5425              	.LVL494:
1963:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
 5426              		.loc 1 1963 0
 5427 1ba4 013C     		subs	r4, r4, #1
ARM GAS  /tmp/cci8Vpl3.s 			page 151


 5428 1ba6 14F0FF04 		ands	r4, r4, #255
 5429 1baa F8D1     		bne	.L518
 5430 1bac 0023     		movs	r3, #0
 5431 1bae 029A     		ldr	r2, [sp, #8]
 5432 1bb0 1370     		strb	r3, [r2]
 5433              	.LVL495:
 5434              	.L517:
1965:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_gyro_var)
 5435              		.loc 1 1965 0
 5436 1bb2 0146     		mov	r1, r0
 5437 1bb4 0198     		ldr	r0, [sp, #4]	@ float
 5438              	.LVL496:
 5439 1bb6 FFF7FEFF 		bl	__aeabi_fdiv
 5440              	.LVL497:
 5441 1bba 4FF07E51 		mov	r1, #1065353216
 5442 1bbe FFF7FEFF 		bl	__aeabi_fsub
 5443              	.LVL498:
1966:drivers/inv_mpu.c ****                 result |= 1 << jj;
 5444              		.loc 1 1966 0
 5445 1bc2 20F00040 		bic	r0, r0, #-2147483648
 5446 1bc6 1149     		ldr	r1, .L546+12
 5447 1bc8 FFF7FEFF 		bl	__aeabi_fcmpgt
 5448              	.LVL499:
 5449 1bcc 0028     		cmp	r0, #0
 5450 1bce C9D0     		beq	.L519
1967:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_dps) ||
 5451              		.loc 1 1967 0
 5452 1bd0 0123     		movs	r3, #1
 5453 1bd2 AB40     		lsls	r3, r3, r5
 5454 1bd4 48EA0308 		orr	r8, r8, r3
 5455              	.LVL500:
 5456 1bd8 C4E7     		b	.L519
 5457              	.LVL501:
 5458              	.L542:
 5459              	.LBE23:
 5460              	.LBE24:
2258:drivers/inv_mpu.c **** 
 5461              		.loc 1 2258 0
 5462 1bda 0120     		movs	r0, #1
 5463 1bdc FFF7FEFF 		bl	mpu_set_dmp_state
 5464              	.LVL502:
2260:drivers/inv_mpu.c **** }
 5465              		.loc 1 2260 0
 5466 1be0 E6E6     		b	.L499
 5467              	.LVL503:
 5468              	.L501:
2213:drivers/inv_mpu.c ****             break;
 5469              		.loc 1 2213 0
 5470 1be2 0122     		movs	r2, #1
 5471 1be4 0EA9     		add	r1, sp, #56
 5472 1be6 11A8     		add	r0, sp, #68
 5473 1be8 FEF758FA 		bl	get_st_biases
 5474              	.LVL504:
 5475 1bec E0B1     		cbz	r0, .L503
 5476              	.LVL505:
 5477 1bee 0122     		movs	r2, #1
 5478 1bf0 0EA9     		add	r1, sp, #56
ARM GAS  /tmp/cci8Vpl3.s 			page 152


 5479 1bf2 11A8     		add	r0, sp, #68
 5480 1bf4 FEF752FA 		bl	get_st_biases
 5481              	.LVL506:
 5482 1bf8 B0B1     		cbz	r0, .L503
2217:drivers/inv_mpu.c ****         goto restore;
 5483              		.loc 1 2217 0
 5484 1bfa 0024     		movs	r4, #0
 5485 1bfc B3E6     		b	.L502
 5486              	.L547:
 5487 1bfe 00BF     		.align	2
 5488              	.L546:
 5489 1c00 00000000 		.word	.LANCHOR0
 5490 1c04 9A99993E 		.word	1050253722
 5491 1c08 3333733F 		.word	1064514355
 5492 1c0c 295C0F3E 		.word	1041194025
 5493 1c10 0000C841 		.word	1103626240
 5494 1c14 00002041 		.word	1092616192
 5495 1c18 0000D242 		.word	1121058816
 5496 1c1c 54E3853F 		.word	1065739092
 5497 1c20 7B14AE3E 		.word	1051595899
 5498 1c24 1D5A843F 		.word	1065638429
 5499              	.LVL507:
 5500              	.L503:
 5501              	.LBB25:
 5502              	.LBB20:
 5503              	.LBB19:
 5504              	.LBB18:
1905:drivers/inv_mpu.c ****         return 0x07;
 5505              		.loc 1 1905 0
 5506 1c28 0B4B     		ldr	r3, .L548
 5507 1c2a 5868     		ldr	r0, [r3, #4]
 5508 1c2c 08AB     		add	r3, sp, #32
 5509 1c2e 0422     		movs	r2, #4
 5510 1c30 0D21     		movs	r1, #13
 5511 1c32 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5512 1c34 FFF7FEFF 		bl	i2cRead
 5513              	.LVL508:
 5514 1c38 0028     		cmp	r0, #0
 5515 1c3a 3FF4C2AE 		beq	.L545
 5516              	.L526:
 5517              	.LVL509:
 5518 1c3e 043D     		subs	r5, r5, #4
 5519              	.LVL510:
 5520              	.LBE18:
 5521              	.LBE19:
1928:drivers/inv_mpu.c ****     float st_shift[3], st_shift_cust, st_shift_var;
 5522              		.loc 1 1928 0
 5523 1c40 4FF00009 		mov	r9, #0
1932:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5524              		.loc 1 1932 0
 5525 1c44 4C46     		mov	r4, r9
1933:drivers/inv_mpu.c ****         if (st_shift[jj]) {
 5526              		.loc 1 1933 0
 5527 1c46 0DF1380B 		add	fp, sp, #56
 5528              	.LVL511:
1934:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
 5529              		.loc 1 1934 0
ARM GAS  /tmp/cci8Vpl3.s 			page 153


 5530 1c4a 0DF1240A 		add	r10, sp, #36
 5531              	.LVL512:
1940:drivers/inv_mpu.c ****     }
 5532              		.loc 1 1940 0
 5533 1c4e 4FF00108 		mov	r8, #1
1936:drivers/inv_mpu.c ****                 result |= 1 << jj;
 5534              		.loc 1 1936 0
 5535 1c52 3746     		mov	r7, r6
 5536 1c54 15E7     		b	.L514
 5537              	.L549:
 5538 1c56 00BF     		.align	2
 5539              	.L548:
 5540 1c58 00000000 		.word	.LANCHOR0
 5541              	.LBE20:
 5542              	.LBE25:
 5543              		.cfi_endproc
 5544              	.LFE100:
 5545              		.size	mpu_run_self_test, .-mpu_run_self_test
 5546              		.align	1
 5547              		.global	mpu_get_dmp_state
 5548              		.syntax unified
 5549              		.thumb
 5550              		.thumb_func
 5551              		.fpu softvfp
 5552              		.type	mpu_get_dmp_state, %function
 5553              	mpu_get_dmp_state:
 5554              	.LFB105:
2411:drivers/inv_mpu.c **** 
2412:drivers/inv_mpu.c **** /**
2413:drivers/inv_mpu.c ****  *  @brief      Get DMP state.
2414:drivers/inv_mpu.c ****  *  @param[out] enabled 1 if enabled.
2415:drivers/inv_mpu.c ****  *  @return     0 if successful.
2416:drivers/inv_mpu.c ****  */
2417:drivers/inv_mpu.c **** int mpu_get_dmp_state(unsigned char *enabled)
2418:drivers/inv_mpu.c **** {
 5555              		.loc 1 2418 0
 5556              		.cfi_startproc
 5557              		@ args = 0, pretend = 0, frame = 0
 5558              		@ frame_needed = 0, uses_anonymous_args = 0
 5559              		@ link register save eliminated.
 5560              	.LVL513:
2419:drivers/inv_mpu.c ****     enabled[0] = st.chip_cfg.dmp_on;
 5561              		.loc 1 2419 0
 5562 1c5c 024B     		ldr	r3, .L551
 5563 1c5e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 5564 1c62 0370     		strb	r3, [r0]
2420:drivers/inv_mpu.c ****     return 0;
2421:drivers/inv_mpu.c **** }
 5565              		.loc 1 2421 0
 5566 1c64 0020     		movs	r0, #0
 5567              	.LVL514:
 5568 1c66 7047     		bx	lr
 5569              	.L552:
 5570              		.align	2
 5571              	.L551:
 5572 1c68 00000000 		.word	.LANCHOR0
 5573              		.cfi_endproc
ARM GAS  /tmp/cci8Vpl3.s 			page 154


 5574              	.LFE105:
 5575              		.size	mpu_get_dmp_state, .-mpu_get_dmp_state
 5576              		.align	1
 5577              		.global	mpu_get_compass_reg
 5578              		.syntax unified
 5579              		.thumb
 5580              		.thumb_func
 5581              		.fpu softvfp
 5582              		.type	mpu_get_compass_reg, %function
 5583              	mpu_get_compass_reg:
 5584              	.LFB106:
2422:drivers/inv_mpu.c **** 
2423:drivers/inv_mpu.c **** 
2424:drivers/inv_mpu.c **** /* This initialization is similar to the one in ak8975.c. */
2425:drivers/inv_mpu.c **** //static int setup_compass(void)
2426:drivers/inv_mpu.c **** //{
2427:drivers/inv_mpu.c **** //#ifdef AK89xx_SECONDARY
2428:drivers/inv_mpu.c **** //    unsigned char data[4], akm_addr;
2429:drivers/inv_mpu.c **** //
2430:drivers/inv_mpu.c **** //    mpu_set_bypass(1);
2431:drivers/inv_mpu.c **** //
2432:drivers/inv_mpu.c **** //    /* Find compass. Possible addresses range from 0x0C to 0x0F. */
2433:drivers/inv_mpu.c **** //    for (akm_addr = 0x0C; akm_addr <= 0x0F; akm_addr++) {
2434:drivers/inv_mpu.c **** //        int result;
2435:drivers/inv_mpu.c **** //        result = i2c_read(akm_addr, AKM_REG_WHOAMI, 1, data);
2436:drivers/inv_mpu.c **** //        if (!result && (data[0] == AKM_WHOAMI))
2437:drivers/inv_mpu.c **** //            break;
2438:drivers/inv_mpu.c **** //    }
2439:drivers/inv_mpu.c **** //
2440:drivers/inv_mpu.c **** //    if (akm_addr > 0x0F) {
2441:drivers/inv_mpu.c **** //        /* TODO: Handle this case in all compass-related functions. */
2442:drivers/inv_mpu.c **** //        log_e("Compass not found.\n");
2443:drivers/inv_mpu.c **** //        return -1;
2444:drivers/inv_mpu.c **** //    }
2445:drivers/inv_mpu.c **** //
2446:drivers/inv_mpu.c **** //    st.chip_cfg.compass_addr = akm_addr;
2447:drivers/inv_mpu.c **** //
2448:drivers/inv_mpu.c **** //    data[0] = AKM_POWER_DOWN;
2449:drivers/inv_mpu.c **** //    if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
2450:drivers/inv_mpu.c **** //        return -1;
2451:drivers/inv_mpu.c **** //    delay_ms(1);
2452:drivers/inv_mpu.c **** //
2453:drivers/inv_mpu.c **** //    data[0] = AKM_FUSE_ROM_ACCESS;
2454:drivers/inv_mpu.c **** //    if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
2455:drivers/inv_mpu.c **** //        return -1;
2456:drivers/inv_mpu.c **** //    delay_ms(1);
2457:drivers/inv_mpu.c **** //
2458:drivers/inv_mpu.c **** //    /* Get sensitivity adjustment data from fuse ROM. */
2459:drivers/inv_mpu.c **** //    if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ASAX, 3, data))
2460:drivers/inv_mpu.c **** //        return -1;
2461:drivers/inv_mpu.c **** //    st.chip_cfg.mag_sens_adj[0] = (long)data[0] + 128;
2462:drivers/inv_mpu.c **** //    st.chip_cfg.mag_sens_adj[1] = (long)data[1] + 128;
2463:drivers/inv_mpu.c **** //    st.chip_cfg.mag_sens_adj[2] = (long)data[2] + 128;
2464:drivers/inv_mpu.c **** //
2465:drivers/inv_mpu.c **** //    data[0] = AKM_POWER_DOWN;
2466:drivers/inv_mpu.c **** //    if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
2467:drivers/inv_mpu.c **** //        return -1;
ARM GAS  /tmp/cci8Vpl3.s 			page 155


2468:drivers/inv_mpu.c **** //    delay_ms(1);
2469:drivers/inv_mpu.c **** //
2470:drivers/inv_mpu.c **** //    mpu_set_bypass(0);
2471:drivers/inv_mpu.c **** //
2472:drivers/inv_mpu.c **** //    /* Set up master mode, master clock, and ES bit. */
2473:drivers/inv_mpu.c **** //    data[0] = 0x40;
2474:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
2475:drivers/inv_mpu.c **** //        return -1;
2476:drivers/inv_mpu.c **** //
2477:drivers/inv_mpu.c **** //    /* Slave 0 reads from AKM data registers. */
2478:drivers/inv_mpu.c **** //    data[0] = BIT_I2C_READ | st.chip_cfg.compass_addr;
2479:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s0_addr, 1, data))
2480:drivers/inv_mpu.c **** //        return -1;
2481:drivers/inv_mpu.c **** //
2482:drivers/inv_mpu.c **** //    /* Compass reads start at this register. */
2483:drivers/inv_mpu.c **** //    data[0] = AKM_REG_ST1;
2484:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s0_reg, 1, data))
2485:drivers/inv_mpu.c **** //        return -1;
2486:drivers/inv_mpu.c **** //
2487:drivers/inv_mpu.c **** //    /* Enable slave 0, 8-byte reads. */
2488:drivers/inv_mpu.c **** //    data[0] = BIT_SLAVE_EN | 8;
2489:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s0_ctrl, 1, data))
2490:drivers/inv_mpu.c **** //        return -1;
2491:drivers/inv_mpu.c **** //
2492:drivers/inv_mpu.c **** //    /* Slave 1 changes AKM measurement mode. */
2493:drivers/inv_mpu.c **** //    data[0] = st.chip_cfg.compass_addr;
2494:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s1_addr, 1, data))
2495:drivers/inv_mpu.c **** //        return -1;
2496:drivers/inv_mpu.c **** //
2497:drivers/inv_mpu.c **** //    /* AKM measurement mode register. */
2498:drivers/inv_mpu.c **** //    data[0] = AKM_REG_CNTL;
2499:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s1_reg, 1, data))
2500:drivers/inv_mpu.c **** //        return -1;
2501:drivers/inv_mpu.c **** //
2502:drivers/inv_mpu.c **** //    /* Enable slave 1, 1-byte writes. */
2503:drivers/inv_mpu.c **** //    data[0] = BIT_SLAVE_EN | 1;
2504:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s1_ctrl, 1, data))
2505:drivers/inv_mpu.c **** //        return -1;
2506:drivers/inv_mpu.c **** //
2507:drivers/inv_mpu.c **** //    /* Set slave 1 data. */
2508:drivers/inv_mpu.c **** //    data[0] = AKM_SINGLE_MEASUREMENT;
2509:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->s1_do, 1, data))
2510:drivers/inv_mpu.c **** //        return -1;
2511:drivers/inv_mpu.c **** //
2512:drivers/inv_mpu.c **** //    /* Trigger slave 0 and slave 1 actions at each sample. */
2513:drivers/inv_mpu.c **** //    data[0] = 0x03;
2514:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->i2c_delay_ctrl, 1, data))
2515:drivers/inv_mpu.c **** //        return -1;
2516:drivers/inv_mpu.c **** //
2517:drivers/inv_mpu.c **** //#ifdef MPU9150
2518:drivers/inv_mpu.c **** //    /* For the MPU9150, the auxiliary I2C bus needs to be set to VDD. */
2519:drivers/inv_mpu.c **** //    data[0] = BIT_I2C_MST_VDDIO;
2520:drivers/inv_mpu.c **** //    if (i2c_write(st.hw->addr, st.reg->yg_offs_tc, 1, data))
2521:drivers/inv_mpu.c **** //        return -1;
2522:drivers/inv_mpu.c **** //#endif
2523:drivers/inv_mpu.c **** //
2524:drivers/inv_mpu.c **** //    return 0;
ARM GAS  /tmp/cci8Vpl3.s 			page 156


2525:drivers/inv_mpu.c **** //#else
2526:drivers/inv_mpu.c **** //    return -1;
2527:drivers/inv_mpu.c **** //#endif
2528:drivers/inv_mpu.c **** //}
2529:drivers/inv_mpu.c **** 
2530:drivers/inv_mpu.c **** /**
2531:drivers/inv_mpu.c ****  *  @brief      Read raw compass data.
2532:drivers/inv_mpu.c ****  *  @param[out] data        Raw data in hardware units.
2533:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
2534:drivers/inv_mpu.c ****  *  @return     0 if successful.
2535:drivers/inv_mpu.c ****  */
2536:drivers/inv_mpu.c **** int mpu_get_compass_reg(short *data, unsigned long *timestamp)
2537:drivers/inv_mpu.c **** {
 5585              		.loc 1 2537 0
 5586              		.cfi_startproc
 5587              		@ args = 0, pretend = 0, frame = 0
 5588              		@ frame_needed = 0, uses_anonymous_args = 0
 5589              		@ link register save eliminated.
 5590              	.LVL515:
2538:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2539:drivers/inv_mpu.c ****     unsigned char tmp[9];
2540:drivers/inv_mpu.c **** 
2541:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors & INV_XYZ_COMPASS))
2542:drivers/inv_mpu.c ****         return -1;
2543:drivers/inv_mpu.c **** 
2544:drivers/inv_mpu.c **** #ifdef AK89xx_BYPASS
2545:drivers/inv_mpu.c ****     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ST1, 8, tmp))
2546:drivers/inv_mpu.c ****         return -1;
2547:drivers/inv_mpu.c ****     tmp[8] = AKM_SINGLE_MEASUREMENT;
2548:drivers/inv_mpu.c ****     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp+8))
2549:drivers/inv_mpu.c ****         return -1;
2550:drivers/inv_mpu.c **** #else
2551:drivers/inv_mpu.c ****     if (i2c_read(st.hw->addr, st.reg->raw_compass, 8, tmp))
2552:drivers/inv_mpu.c ****         return -1;
2553:drivers/inv_mpu.c **** #endif
2554:drivers/inv_mpu.c **** 
2555:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY
2556:drivers/inv_mpu.c ****     /* AK8975 doesn't have the overrun error bit. */
2557:drivers/inv_mpu.c ****     if (!(tmp[0] & AKM_DATA_READY))
2558:drivers/inv_mpu.c ****         return -2;
2559:drivers/inv_mpu.c ****     if ((tmp[7] & AKM_OVERFLOW) || (tmp[7] & AKM_DATA_ERROR))
2560:drivers/inv_mpu.c ****         return -3;
2561:drivers/inv_mpu.c **** #elif defined AK8963_SECONDARY
2562:drivers/inv_mpu.c ****     /* AK8963 doesn't have the data read error bit. */
2563:drivers/inv_mpu.c ****     if (!(tmp[0] & AKM_DATA_READY) || (tmp[0] & AKM_DATA_OVERRUN))
2564:drivers/inv_mpu.c ****         return -2;
2565:drivers/inv_mpu.c ****     if (tmp[7] & AKM_OVERFLOW)
2566:drivers/inv_mpu.c ****         return -3;
2567:drivers/inv_mpu.c **** #endif
2568:drivers/inv_mpu.c ****     data[0] = (tmp[2] << 8) | tmp[1];
2569:drivers/inv_mpu.c ****     data[1] = (tmp[4] << 8) | tmp[3];
2570:drivers/inv_mpu.c ****     data[2] = (tmp[6] << 8) | tmp[5];
2571:drivers/inv_mpu.c **** 
2572:drivers/inv_mpu.c ****     data[0] = ((long)data[0] * st.chip_cfg.mag_sens_adj[0]) >> 8;
2573:drivers/inv_mpu.c ****     data[1] = ((long)data[1] * st.chip_cfg.mag_sens_adj[1]) >> 8;
2574:drivers/inv_mpu.c ****     data[2] = ((long)data[2] * st.chip_cfg.mag_sens_adj[2]) >> 8;
2575:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cci8Vpl3.s 			page 157


2576:drivers/inv_mpu.c ****     if (timestamp)
2577:drivers/inv_mpu.c ****         get_ms(timestamp);
2578:drivers/inv_mpu.c ****     return 0;
2579:drivers/inv_mpu.c **** #else
2580:drivers/inv_mpu.c ****     return -1;
2581:drivers/inv_mpu.c **** #endif
2582:drivers/inv_mpu.c **** }
 5591              		.loc 1 2582 0
 5592 1c6c 4FF0FF30 		mov	r0, #-1
 5593              	.LVL516:
 5594 1c70 7047     		bx	lr
 5595              		.cfi_endproc
 5596              	.LFE106:
 5597              		.size	mpu_get_compass_reg, .-mpu_get_compass_reg
 5598              		.align	1
 5599              		.global	mpu_get_compass_fsr
 5600              		.syntax unified
 5601              		.thumb
 5602              		.thumb_func
 5603              		.fpu softvfp
 5604              		.type	mpu_get_compass_fsr, %function
 5605              	mpu_get_compass_fsr:
 5606              	.LFB107:
2583:drivers/inv_mpu.c **** 
2584:drivers/inv_mpu.c **** /**
2585:drivers/inv_mpu.c ****  *  @brief      Get the compass full-scale range.
2586:drivers/inv_mpu.c ****  *  @param[out] fsr Current full-scale range.
2587:drivers/inv_mpu.c ****  *  @return     0 if successful.
2588:drivers/inv_mpu.c ****  */
2589:drivers/inv_mpu.c **** int mpu_get_compass_fsr(unsigned short *fsr)
2590:drivers/inv_mpu.c **** {
 5607              		.loc 1 2590 0
 5608              		.cfi_startproc
 5609              		@ args = 0, pretend = 0, frame = 0
 5610              		@ frame_needed = 0, uses_anonymous_args = 0
 5611              		@ link register save eliminated.
 5612              	.LVL517:
2591:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2592:drivers/inv_mpu.c ****     fsr[0] = st.hw->compass_fsr;
2593:drivers/inv_mpu.c ****     return 0;
2594:drivers/inv_mpu.c **** #else
2595:drivers/inv_mpu.c ****     return -1;
2596:drivers/inv_mpu.c **** #endif
2597:drivers/inv_mpu.c **** }
 5613              		.loc 1 2597 0
 5614 1c72 4FF0FF30 		mov	r0, #-1
 5615              	.LVL518:
 5616 1c76 7047     		bx	lr
 5617              		.cfi_endproc
 5618              	.LFE107:
 5619              		.size	mpu_get_compass_fsr, .-mpu_get_compass_fsr
 5620              		.align	1
 5621              		.global	mpu_lp_motion_interrupt
 5622              		.syntax unified
 5623              		.thumb
 5624              		.thumb_func
 5625              		.fpu softvfp
ARM GAS  /tmp/cci8Vpl3.s 			page 158


 5626              		.type	mpu_lp_motion_interrupt, %function
 5627              	mpu_lp_motion_interrupt:
 5628              	.LFB108:
2598:drivers/inv_mpu.c **** 
2599:drivers/inv_mpu.c **** /**
2600:drivers/inv_mpu.c ****  *  @brief      Enters LP accel motion interrupt mode.
2601:drivers/inv_mpu.c ****  *  The behavior of this feature is very different between the MPU6050 and the
2602:drivers/inv_mpu.c ****  *  MPU6500. Each chip's version of this feature is explained below.
2603:drivers/inv_mpu.c ****  *
2604:drivers/inv_mpu.c ****  *  \n MPU6050:
2605:drivers/inv_mpu.c ****  *  \n When this mode is first enabled, the hardware captures a single accel
2606:drivers/inv_mpu.c ****  *  sample, and subsequent samples are compared with this one to determine if
2607:drivers/inv_mpu.c ****  *  the device is in motion. Therefore, whenever this "locked" sample needs to
2608:drivers/inv_mpu.c ****  *  be changed, this function must be called again.
2609:drivers/inv_mpu.c ****  *
2610:drivers/inv_mpu.c ****  *  \n The hardware motion threshold can be between 32mg and 8160mg in 32mg
2611:drivers/inv_mpu.c ****  *  increments.
2612:drivers/inv_mpu.c ****  *
2613:drivers/inv_mpu.c ****  *  \n Low-power accel mode supports the following frequencies:
2614:drivers/inv_mpu.c ****  *  \n 1.25Hz, 5Hz, 20Hz, 40Hz
2615:drivers/inv_mpu.c ****  *
2616:drivers/inv_mpu.c ****  *  \n MPU6500:
2617:drivers/inv_mpu.c ****  *  \n Unlike the MPU6050 version, the hardware does not "lock in" a reference
2618:drivers/inv_mpu.c ****  *  sample. The hardware monitors the accel data and detects any large change
2619:drivers/inv_mpu.c ****  *  over a short period of time.
2620:drivers/inv_mpu.c ****  *
2621:drivers/inv_mpu.c ****  *  \n The hardware motion threshold can be between 4mg and 1020mg in 4mg
2622:drivers/inv_mpu.c ****  *  increments.
2623:drivers/inv_mpu.c ****  *
2624:drivers/inv_mpu.c ****  *  \n MPU6500 Low-power accel mode supports the following frequencies:
2625:drivers/inv_mpu.c ****  *  \n 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
2626:drivers/inv_mpu.c ****  *
2627:drivers/inv_mpu.c ****  *  \n\n NOTES:
2628:drivers/inv_mpu.c ****  *  \n The driver will round down @e thresh to the nearest supported value if
2629:drivers/inv_mpu.c ****  *  an unsupported threshold is selected.
2630:drivers/inv_mpu.c ****  *  \n To select a fractional wake-up frequency, round down the value passed to
2631:drivers/inv_mpu.c ****  *  @e lpa_freq.
2632:drivers/inv_mpu.c ****  *  \n The MPU6500 does not support a delay parameter. If this function is used
2633:drivers/inv_mpu.c ****  *  for the MPU6500, the value passed to @e time will be ignored.
2634:drivers/inv_mpu.c ****  *  \n To disable this mode, set @e lpa_freq to zero. The driver will restore
2635:drivers/inv_mpu.c ****  *  the previous configuration.
2636:drivers/inv_mpu.c ****  *
2637:drivers/inv_mpu.c ****  *  @param[in]  thresh      Motion threshold in mg.
2638:drivers/inv_mpu.c ****  *  @param[in]  time        Duration in milliseconds that the accel data must
2639:drivers/inv_mpu.c ****  *                          exceed @e thresh before motion is reported.
2640:drivers/inv_mpu.c ****  *  @param[in]  lpa_freq    Minimum sampling rate, or zero to disable.
2641:drivers/inv_mpu.c ****  *  @return     0 if successful.
2642:drivers/inv_mpu.c ****  */
2643:drivers/inv_mpu.c **** int mpu_lp_motion_interrupt(unsigned short thresh, unsigned char time,
2644:drivers/inv_mpu.c ****     unsigned char lpa_freq)
2645:drivers/inv_mpu.c **** {
 5629              		.loc 1 2645 0
 5630              		.cfi_startproc
 5631              		@ args = 0, pretend = 0, frame = 8
 5632              		@ frame_needed = 0, uses_anonymous_args = 0
 5633              	.LVL519:
 5634 1c78 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/cci8Vpl3.s 			page 159


 5635              		.cfi_def_cfa_offset 20
 5636              		.cfi_offset 4, -20
 5637              		.cfi_offset 5, -16
 5638              		.cfi_offset 6, -12
 5639              		.cfi_offset 7, -8
 5640              		.cfi_offset 14, -4
 5641 1c7a 83B0     		sub	sp, sp, #12
 5642              		.cfi_def_cfa_offset 32
2646:drivers/inv_mpu.c ****     unsigned char data[3];
2647:drivers/inv_mpu.c **** 
2648:drivers/inv_mpu.c ****     if (lpa_freq) {
 5643              		.loc 1 2648 0
 5644 1c7c 82B9     		cbnz	r2, .L556
 5645              	.LVL520:
 5646              	.LBB30:
2649:drivers/inv_mpu.c ****         unsigned char thresh_hw;
2650:drivers/inv_mpu.c **** 
2651:drivers/inv_mpu.c **** #if defined MPU6050
2652:drivers/inv_mpu.c ****         /* TODO: Make these const/#defines. */
2653:drivers/inv_mpu.c ****         /* 1LSb = 32mg. */
2654:drivers/inv_mpu.c ****         if (thresh > 8160)
2655:drivers/inv_mpu.c ****             thresh_hw = 255;
2656:drivers/inv_mpu.c ****         else if (thresh < 32)
2657:drivers/inv_mpu.c ****             thresh_hw = 1;
2658:drivers/inv_mpu.c ****         else
2659:drivers/inv_mpu.c ****             thresh_hw = thresh >> 5;
2660:drivers/inv_mpu.c **** #elif defined MPU6500
2661:drivers/inv_mpu.c ****         /* 1LSb = 4mg. */
2662:drivers/inv_mpu.c ****         if (thresh > 1020)
2663:drivers/inv_mpu.c ****             thresh_hw = 255;
2664:drivers/inv_mpu.c ****         else if (thresh < 4)
2665:drivers/inv_mpu.c ****             thresh_hw = 1;
2666:drivers/inv_mpu.c ****         else
2667:drivers/inv_mpu.c ****             thresh_hw = thresh >> 2;
2668:drivers/inv_mpu.c **** #endif
2669:drivers/inv_mpu.c **** 
2670:drivers/inv_mpu.c ****         if (!time)
2671:drivers/inv_mpu.c ****             /* Minimum duration must be 1ms. */
2672:drivers/inv_mpu.c ****             time = 1;
2673:drivers/inv_mpu.c **** 
2674:drivers/inv_mpu.c **** #if defined MPU6050
2675:drivers/inv_mpu.c ****         if (lpa_freq > 40)
2676:drivers/inv_mpu.c **** #elif defined MPU6500
2677:drivers/inv_mpu.c ****         if (lpa_freq > 640)
2678:drivers/inv_mpu.c **** #endif
2679:drivers/inv_mpu.c ****             /* At this point, the chip has not been re-configured, so the
2680:drivers/inv_mpu.c ****              * function can safely exit.
2681:drivers/inv_mpu.c ****              */
2682:drivers/inv_mpu.c ****             return -1;
2683:drivers/inv_mpu.c **** 
2684:drivers/inv_mpu.c ****         if (!st.chip_cfg.int_motion_only) {
2685:drivers/inv_mpu.c ****             /* Store current settings for later. */
2686:drivers/inv_mpu.c ****             if (st.chip_cfg.dmp_on) {
2687:drivers/inv_mpu.c ****                 mpu_set_dmp_state(0);
2688:drivers/inv_mpu.c ****                 st.chip_cfg.cache.dmp_on = 1;
2689:drivers/inv_mpu.c ****             } else
2690:drivers/inv_mpu.c ****                 st.chip_cfg.cache.dmp_on = 0;
ARM GAS  /tmp/cci8Vpl3.s 			page 160


2691:drivers/inv_mpu.c ****             mpu_get_gyro_fsr(&st.chip_cfg.cache.gyro_fsr);
2692:drivers/inv_mpu.c ****             mpu_get_accel_fsr(&st.chip_cfg.cache.accel_fsr);
2693:drivers/inv_mpu.c ****             mpu_get_lpf(&st.chip_cfg.cache.lpf);
2694:drivers/inv_mpu.c ****             mpu_get_sample_rate(&st.chip_cfg.cache.sample_rate);
2695:drivers/inv_mpu.c ****             st.chip_cfg.cache.sensors_on = st.chip_cfg.sensors;
2696:drivers/inv_mpu.c ****             mpu_get_fifo_config(&st.chip_cfg.cache.fifo_sensors);
2697:drivers/inv_mpu.c ****         }
2698:drivers/inv_mpu.c **** 
2699:drivers/inv_mpu.c **** #ifdef MPU6050
2700:drivers/inv_mpu.c ****         /* Disable hardware interrupts for now. */
2701:drivers/inv_mpu.c ****         set_int_enable(0);
2702:drivers/inv_mpu.c **** 
2703:drivers/inv_mpu.c ****         /* Enter full-power accel-only mode. */
2704:drivers/inv_mpu.c ****         mpu_lp_accel_mode(0);
2705:drivers/inv_mpu.c **** 
2706:drivers/inv_mpu.c ****         /* Override current LPF (and HPF) settings to obtain a valid accel
2707:drivers/inv_mpu.c ****          * reading.
2708:drivers/inv_mpu.c ****          */
2709:drivers/inv_mpu.c ****         data[0] = INV_FILTER_256HZ_NOLPF2;
2710:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
2711:drivers/inv_mpu.c ****             return -1;
2712:drivers/inv_mpu.c **** 
2713:drivers/inv_mpu.c ****         /* NOTE: Digital high pass filter should be configured here. Since this
2714:drivers/inv_mpu.c ****          * driver doesn't modify those bits anywhere, they should already be
2715:drivers/inv_mpu.c ****          * cleared by default.
2716:drivers/inv_mpu.c ****          */
2717:drivers/inv_mpu.c **** 
2718:drivers/inv_mpu.c ****         /* Configure the device to send motion interrupts. */
2719:drivers/inv_mpu.c ****         /* Enable motion interrupt. */
2720:drivers/inv_mpu.c ****         data[0] = BIT_MOT_INT_EN;
2721:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
2722:drivers/inv_mpu.c ****             goto lp_int_restore;
2723:drivers/inv_mpu.c **** 
2724:drivers/inv_mpu.c ****         /* Set motion interrupt parameters. */
2725:drivers/inv_mpu.c ****         data[0] = thresh_hw;
2726:drivers/inv_mpu.c ****         data[1] = time;
2727:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->motion_thr, 2, data))
2728:drivers/inv_mpu.c ****             goto lp_int_restore;
2729:drivers/inv_mpu.c **** 
2730:drivers/inv_mpu.c ****         /* Force hardware to "lock" current accel sample. */
2731:drivers/inv_mpu.c ****         delay_ms(5);
2732:drivers/inv_mpu.c ****         data[0] = (st.chip_cfg.accel_fsr << 3) | BITS_HPF;
2733:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
2734:drivers/inv_mpu.c ****             goto lp_int_restore;
2735:drivers/inv_mpu.c **** 
2736:drivers/inv_mpu.c ****         /* Set up LP accel mode. */
2737:drivers/inv_mpu.c ****         data[0] = BIT_LPA_CYCLE;
2738:drivers/inv_mpu.c ****         if (lpa_freq == 1)
2739:drivers/inv_mpu.c ****             data[1] = INV_LPA_1_25HZ;
2740:drivers/inv_mpu.c ****         else if (lpa_freq <= 5)
2741:drivers/inv_mpu.c ****             data[1] = INV_LPA_5HZ;
2742:drivers/inv_mpu.c ****         else if (lpa_freq <= 20)
2743:drivers/inv_mpu.c ****             data[1] = INV_LPA_20HZ;
2744:drivers/inv_mpu.c ****         else
2745:drivers/inv_mpu.c ****             data[1] = INV_LPA_40HZ;
2746:drivers/inv_mpu.c ****         data[1] = (data[1] << 6) | BIT_STBY_XYZG;
2747:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
ARM GAS  /tmp/cci8Vpl3.s 			page 161


2748:drivers/inv_mpu.c ****             goto lp_int_restore;
2749:drivers/inv_mpu.c **** 
2750:drivers/inv_mpu.c ****         st.chip_cfg.int_motion_only = 1;
2751:drivers/inv_mpu.c ****         return 0;
2752:drivers/inv_mpu.c **** #elif defined MPU6500
2753:drivers/inv_mpu.c ****         /* Disable hardware interrupts. */
2754:drivers/inv_mpu.c ****         set_int_enable(0);
2755:drivers/inv_mpu.c **** 
2756:drivers/inv_mpu.c ****         /* Enter full-power accel-only mode, no FIFO/DMP. */
2757:drivers/inv_mpu.c ****         data[0] = 0;
2758:drivers/inv_mpu.c ****         data[1] = 0;
2759:drivers/inv_mpu.c ****         data[2] = BIT_STBY_XYZG;
2760:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 3, data))
2761:drivers/inv_mpu.c ****             goto lp_int_restore;
2762:drivers/inv_mpu.c **** 
2763:drivers/inv_mpu.c ****         /* Set motion threshold. */
2764:drivers/inv_mpu.c ****         data[0] = thresh_hw;
2765:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->motion_thr, 1, data))
2766:drivers/inv_mpu.c ****             goto lp_int_restore;
2767:drivers/inv_mpu.c **** 
2768:drivers/inv_mpu.c ****         /* Set wake frequency. */
2769:drivers/inv_mpu.c ****         if (lpa_freq == 1)
2770:drivers/inv_mpu.c ****             data[0] = INV_LPA_1_25HZ;
2771:drivers/inv_mpu.c ****         else if (lpa_freq == 2)
2772:drivers/inv_mpu.c ****             data[0] = INV_LPA_2_5HZ;
2773:drivers/inv_mpu.c ****         else if (lpa_freq <= 5)
2774:drivers/inv_mpu.c ****             data[0] = INV_LPA_5HZ;
2775:drivers/inv_mpu.c ****         else if (lpa_freq <= 10)
2776:drivers/inv_mpu.c ****             data[0] = INV_LPA_10HZ;
2777:drivers/inv_mpu.c ****         else if (lpa_freq <= 20)
2778:drivers/inv_mpu.c ****             data[0] = INV_LPA_20HZ;
2779:drivers/inv_mpu.c ****         else if (lpa_freq <= 40)
2780:drivers/inv_mpu.c ****             data[0] = INV_LPA_40HZ;
2781:drivers/inv_mpu.c ****         else if (lpa_freq <= 80)
2782:drivers/inv_mpu.c ****             data[0] = INV_LPA_80HZ;
2783:drivers/inv_mpu.c ****         else if (lpa_freq <= 160)
2784:drivers/inv_mpu.c ****             data[0] = INV_LPA_160HZ;
2785:drivers/inv_mpu.c ****         else if (lpa_freq <= 320)
2786:drivers/inv_mpu.c ****             data[0] = INV_LPA_320HZ;
2787:drivers/inv_mpu.c ****         else
2788:drivers/inv_mpu.c ****             data[0] = INV_LPA_640HZ;
2789:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->lp_accel_odr, 1, data))
2790:drivers/inv_mpu.c ****             goto lp_int_restore;
2791:drivers/inv_mpu.c **** 
2792:drivers/inv_mpu.c ****         /* Enable motion interrupt (MPU6500 version). */
2793:drivers/inv_mpu.c ****         data[0] = BITS_WOM_EN;
2794:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->accel_intel, 1, data))
2795:drivers/inv_mpu.c ****             goto lp_int_restore;
2796:drivers/inv_mpu.c **** 
2797:drivers/inv_mpu.c ****         /* Enable cycle mode. */
2798:drivers/inv_mpu.c ****         data[0] = BIT_LPA_CYCLE;
2799:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
2800:drivers/inv_mpu.c ****             goto lp_int_restore;
2801:drivers/inv_mpu.c **** 
2802:drivers/inv_mpu.c ****         /* Enable interrupt. */
2803:drivers/inv_mpu.c ****         data[0] = BIT_MOT_INT_EN;
2804:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
ARM GAS  /tmp/cci8Vpl3.s 			page 162


2805:drivers/inv_mpu.c ****             goto lp_int_restore;
2806:drivers/inv_mpu.c **** 
2807:drivers/inv_mpu.c ****         st.chip_cfg.int_motion_only = 1;
2808:drivers/inv_mpu.c ****         return 0;
2809:drivers/inv_mpu.c **** #endif
2810:drivers/inv_mpu.c ****     } else {
2811:drivers/inv_mpu.c ****         /* Don't "restore" the previous state if no state has been saved. */
2812:drivers/inv_mpu.c ****         int ii;
2813:drivers/inv_mpu.c ****         char *cache_ptr = (char*)&st.chip_cfg.cache;
2814:drivers/inv_mpu.c ****         for (ii = 0; ii < sizeof(st.chip_cfg.cache); ii++) {
2815:drivers/inv_mpu.c ****             if (cache_ptr[ii] != 0)
 5647              		.loc 1 2815 0 discriminator 1
 5648 1c7e 784B     		ldr	r3, .L582
 5649 1c80 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 5650 1c82 002B     		cmp	r3, #0
 5651 1c84 60D1     		bne	.L557
 5652 1c86 7649     		ldr	r1, .L582
 5653              	.LVL521:
 5654 1c88 01F11703 		add	r3, r1, #23
 5655 1c8c 2231     		adds	r1, r1, #34
 5656              	.LVL522:
 5657              	.L569:
 5658              		.loc 1 2815 0 is_stmt 0
 5659 1c8e 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 5660              	.LVL523:
 5661 1c92 002A     		cmp	r2, #0
 5662 1c94 58D1     		bne	.L557
 5663              	.LVL524:
2814:drivers/inv_mpu.c ****             if (cache_ptr[ii] != 0)
 5664              		.loc 1 2814 0 is_stmt 1 discriminator 2
 5665 1c96 8B42     		cmp	r3, r1
 5666 1c98 F9D1     		bne	.L569
2816:drivers/inv_mpu.c ****                 goto lp_int_restore;
2817:drivers/inv_mpu.c ****         }
2818:drivers/inv_mpu.c ****         /* If we reach this point, motion interrupt mode hasn't been used yet. */
2819:drivers/inv_mpu.c ****         return -1;
 5667              		.loc 1 2819 0
 5668 1c9a 4FF0FF33 		mov	r3, #-1
 5669              	.LVL525:
 5670 1c9e 78E0     		b	.L555
 5671              	.LVL526:
 5672              	.L556:
 5673 1ca0 0C46     		mov	r4, r1
 5674 1ca2 1746     		mov	r7, r2
 5675              	.LBE30:
 5676              	.LBB31:
2654:drivers/inv_mpu.c ****             thresh_hw = 255;
 5677              		.loc 1 2654 0
 5678 1ca4 B0F5FF5F 		cmp	r0, #8160
 5679 1ca8 04D8     		bhi	.L571
2656:drivers/inv_mpu.c ****             thresh_hw = 1;
 5680              		.loc 1 2656 0
 5681 1caa 1F28     		cmp	r0, #31
 5682 1cac 74D9     		bls	.L572
2659:drivers/inv_mpu.c **** #elif defined MPU6500
 5683              		.loc 1 2659 0
 5684 1cae C0F34716 		ubfx	r6, r0, #5, #8
ARM GAS  /tmp/cci8Vpl3.s 			page 163


 5685              	.LVL527:
 5686 1cb2 00E0     		b	.L559
 5687              	.LVL528:
 5688              	.L571:
2655:drivers/inv_mpu.c ****         else if (thresh < 32)
 5689              		.loc 1 2655 0
 5690 1cb4 FF26     		movs	r6, #255
 5691              	.L559:
 5692              	.LVL529:
2672:drivers/inv_mpu.c **** 
 5693              		.loc 1 2672 0
 5694 1cb6 002C     		cmp	r4, #0
 5695 1cb8 08BF     		it	eq
 5696 1cba 0124     		moveq	r4, #1
 5697              	.LVL530:
2675:drivers/inv_mpu.c **** #elif defined MPU6500
 5698              		.loc 1 2675 0
 5699 1cbc 282F     		cmp	r7, #40
 5700 1cbe 00F2C880 		bhi	.L573
2684:drivers/inv_mpu.c ****             /* Store current settings for later. */
 5701              		.loc 1 2684 0
 5702 1cc2 674B     		ldr	r3, .L582
 5703 1cc4 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 5704 1cc6 EBB9     		cbnz	r3, .L562
2686:drivers/inv_mpu.c ****                 mpu_set_dmp_state(0);
 5705              		.loc 1 2686 0
 5706 1cc8 654B     		ldr	r3, .L582
 5707 1cca 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 5708 1cce 002B     		cmp	r3, #0
 5709 1cd0 64D1     		bne	.L578
2690:drivers/inv_mpu.c ****             mpu_get_gyro_fsr(&st.chip_cfg.cache.gyro_fsr);
 5710              		.loc 1 2690 0
 5711 1cd2 0022     		movs	r2, #0
 5712              	.LVL531:
 5713 1cd4 624B     		ldr	r3, .L582
 5714 1cd6 83F82020 		strb	r2, [r3, #32]
 5715              	.LVL532:
 5716              	.L564:
2691:drivers/inv_mpu.c ****             mpu_get_accel_fsr(&st.chip_cfg.cache.accel_fsr);
 5717              		.loc 1 2691 0
 5718 1cda 614D     		ldr	r5, .L582
 5719 1cdc 05F11600 		add	r0, r5, #22
 5720 1ce0 FFF7FEFF 		bl	mpu_get_gyro_fsr
 5721              	.LVL533:
2692:drivers/inv_mpu.c ****             mpu_get_lpf(&st.chip_cfg.cache.lpf);
 5722              		.loc 1 2692 0
 5723 1ce4 05F11800 		add	r0, r5, #24
 5724 1ce8 FFF7FEFF 		bl	mpu_get_accel_fsr
 5725              	.LVL534:
2693:drivers/inv_mpu.c ****             mpu_get_sample_rate(&st.chip_cfg.cache.sample_rate);
 5726              		.loc 1 2693 0
 5727 1cec 05F11A00 		add	r0, r5, #26
 5728 1cf0 FFF7FEFF 		bl	mpu_get_lpf
 5729              	.LVL535:
2694:drivers/inv_mpu.c ****             st.chip_cfg.cache.sensors_on = st.chip_cfg.sensors;
 5730              		.loc 1 2694 0
 5731 1cf4 05F11C00 		add	r0, r5, #28
ARM GAS  /tmp/cci8Vpl3.s 			page 164


 5732 1cf8 FFF7FEFF 		bl	mpu_get_sample_rate
 5733              	.LVL536:
2695:drivers/inv_mpu.c ****             mpu_get_fifo_config(&st.chip_cfg.cache.fifo_sensors);
 5734              		.loc 1 2695 0
 5735 1cfc AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 5736 1cfe AB77     		strb	r3, [r5, #30]
 5737              	.LVL537:
 5738              	.LBB32:
 5739              	.LBB33:
1519:drivers/inv_mpu.c ****     return 0;
 5740              		.loc 1 1519 0
 5741 1d00 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5742 1d02 EB77     		strb	r3, [r5, #31]
 5743              	.LVL538:
 5744              	.L562:
 5745              	.LBE33:
 5746              	.LBE32:
2701:drivers/inv_mpu.c **** 
 5747              		.loc 1 2701 0
 5748 1d04 0020     		movs	r0, #0
 5749 1d06 FEF77BF9 		bl	set_int_enable
 5750              	.LVL539:
2704:drivers/inv_mpu.c **** 
 5751              		.loc 1 2704 0
 5752 1d0a 0020     		movs	r0, #0
 5753 1d0c FFF7FEFF 		bl	mpu_lp_accel_mode
 5754              	.LVL540:
2709:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
 5755              		.loc 1 2709 0
 5756 1d10 02AB     		add	r3, sp, #8
 5757 1d12 0022     		movs	r2, #0
 5758 1d14 03F8042D 		strb	r2, [r3, #-4]!
2710:drivers/inv_mpu.c ****             return -1;
 5759              		.loc 1 2710 0
 5760 1d18 514A     		ldr	r2, .L582
 5761 1d1a 1168     		ldr	r1, [r2]
 5762 1d1c 5068     		ldr	r0, [r2, #4]
 5763 1d1e 0122     		movs	r2, #1
 5764 1d20 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 5765 1d22 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5766 1d24 FFF7FEFF 		bl	i2cWrite
 5767              	.LVL541:
 5768 1d28 0028     		cmp	r0, #0
 5769 1d2a 40F09580 		bne	.L574
2720:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
 5770              		.loc 1 2720 0
 5771 1d2e 02AB     		add	r3, sp, #8
 5772 1d30 4022     		movs	r2, #64
 5773 1d32 03F8042D 		strb	r2, [r3, #-4]!
2721:drivers/inv_mpu.c ****             goto lp_int_restore;
 5774              		.loc 1 2721 0
 5775 1d36 4A4A     		ldr	r2, .L582
 5776 1d38 1168     		ldr	r1, [r2]
 5777 1d3a 5068     		ldr	r0, [r2, #4]
 5778 1d3c 0122     		movs	r2, #1
 5779 1d3e C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 5780 1d40 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  /tmp/cci8Vpl3.s 			page 165


 5781 1d42 FFF7FEFF 		bl	i2cWrite
 5782              	.LVL542:
 5783 1d46 88B3     		cbz	r0, .L579
 5784              	.LVL543:
 5785              	.L557:
 5786              	.LBE31:
2820:drivers/inv_mpu.c ****     }
2821:drivers/inv_mpu.c **** lp_int_restore:
2822:drivers/inv_mpu.c ****     /* Set to invalid values to ensure no I2C writes are skipped. */
2823:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
 5787              		.loc 1 2823 0
 5788 1d48 454C     		ldr	r4, .L582
 5789 1d4a FF23     		movs	r3, #255
 5790 1d4c 2372     		strb	r3, [r4, #8]
2824:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 5791              		.loc 1 2824 0
 5792 1d4e 6372     		strb	r3, [r4, #9]
2825:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 5793              		.loc 1 2825 0
 5794 1d50 E372     		strb	r3, [r4, #11]
2826:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 5795              		.loc 1 2826 0
 5796 1d52 4FF6FF72 		movw	r2, #65535
 5797 1d56 E281     		strh	r2, [r4, #14]	@ movhi
2827:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
 5798              		.loc 1 2827 0
 5799 1d58 A372     		strb	r3, [r4, #10]
2828:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 5800              		.loc 1 2828 0
 5801 1d5a 2374     		strb	r3, [r4, #16]
2829:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
 5802              		.loc 1 2829 0
 5803 1d5c 0123     		movs	r3, #1
 5804 1d5e 2373     		strb	r3, [r4, #12]
2830:drivers/inv_mpu.c ****     mpu_set_sensors(st.chip_cfg.cache.sensors_on);
 5805              		.loc 1 2830 0
 5806 1d60 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 5807 1d62 FFF7FEFF 		bl	mpu_set_sensors
 5808              	.LVL544:
2831:drivers/inv_mpu.c ****     mpu_set_gyro_fsr(st.chip_cfg.cache.gyro_fsr);
 5809              		.loc 1 2831 0
 5810 1d66 E08A     		ldrh	r0, [r4, #22]
 5811 1d68 FFF7FEFF 		bl	mpu_set_gyro_fsr
 5812              	.LVL545:
2832:drivers/inv_mpu.c ****     mpu_set_accel_fsr(st.chip_cfg.cache.accel_fsr);
 5813              		.loc 1 2832 0
 5814 1d6c 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 5815 1d6e FFF7FEFF 		bl	mpu_set_accel_fsr
 5816              	.LVL546:
2833:drivers/inv_mpu.c ****     mpu_set_lpf(st.chip_cfg.cache.lpf);
 5817              		.loc 1 2833 0
 5818 1d72 608B     		ldrh	r0, [r4, #26]
 5819 1d74 FFF7FEFF 		bl	mpu_set_lpf
 5820              	.LVL547:
2834:drivers/inv_mpu.c ****     mpu_set_sample_rate(st.chip_cfg.cache.sample_rate);
 5821              		.loc 1 2834 0
 5822 1d78 A08B     		ldrh	r0, [r4, #28]
ARM GAS  /tmp/cci8Vpl3.s 			page 166


 5823 1d7a FFF7FEFF 		bl	mpu_set_sample_rate
 5824              	.LVL548:
2835:drivers/inv_mpu.c ****     mpu_configure_fifo(st.chip_cfg.cache.fifo_sensors);
 5825              		.loc 1 2835 0
 5826 1d7e E07F     		ldrb	r0, [r4, #31]	@ zero_extendqisi2
 5827 1d80 FFF7FEFF 		bl	mpu_configure_fifo
 5828              	.LVL549:
2836:drivers/inv_mpu.c **** 
2837:drivers/inv_mpu.c ****     if (st.chip_cfg.cache.dmp_on)
 5829              		.loc 1 2837 0
 5830 1d84 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 5831 1d88 002B     		cmp	r3, #0
 5832 1d8a 5ED1     		bne	.L580
 5833              	.L570:
2838:drivers/inv_mpu.c ****         mpu_set_dmp_state(1);
2839:drivers/inv_mpu.c **** 
2840:drivers/inv_mpu.c **** #ifdef MPU6500
2841:drivers/inv_mpu.c ****     /* Disable motion interrupt (MPU6500 version). */
2842:drivers/inv_mpu.c ****     data[0] = 0;
2843:drivers/inv_mpu.c ****     if (i2c_write(st.hw->addr, st.reg->accel_intel, 1, data))
2844:drivers/inv_mpu.c ****         goto lp_int_restore;
2845:drivers/inv_mpu.c **** #endif
2846:drivers/inv_mpu.c **** 
2847:drivers/inv_mpu.c ****     st.chip_cfg.int_motion_only = 0;
 5834              		.loc 1 2847 0
 5835 1d8c 0023     		movs	r3, #0
 5836 1d8e 344A     		ldr	r2, .L582
 5837 1d90 5375     		strb	r3, [r2, #21]
 5838              	.L555:
2848:drivers/inv_mpu.c ****     return 0;
2849:drivers/inv_mpu.c **** }
 5839              		.loc 1 2849 0
 5840 1d92 1846     		mov	r0, r3
 5841 1d94 03B0     		add	sp, sp, #12
 5842              		.cfi_remember_state
 5843              		.cfi_def_cfa_offset 20
 5844              		@ sp needed
 5845 1d96 F0BD     		pop	{r4, r5, r6, r7, pc}
 5846              	.LVL550:
 5847              	.L572:
 5848              		.cfi_restore_state
 5849              	.LBB34:
2657:drivers/inv_mpu.c ****         else
 5850              		.loc 1 2657 0
 5851 1d98 0126     		movs	r6, #1
 5852 1d9a 8CE7     		b	.L559
 5853              	.LVL551:
 5854              	.L578:
2687:drivers/inv_mpu.c ****                 st.chip_cfg.cache.dmp_on = 1;
 5855              		.loc 1 2687 0
 5856 1d9c 0020     		movs	r0, #0
 5857              	.LVL552:
 5858 1d9e FFF7FEFF 		bl	mpu_set_dmp_state
 5859              	.LVL553:
2688:drivers/inv_mpu.c ****             } else
 5860              		.loc 1 2688 0
 5861 1da2 0122     		movs	r2, #1
ARM GAS  /tmp/cci8Vpl3.s 			page 167


 5862 1da4 2E4B     		ldr	r3, .L582
 5863 1da6 83F82020 		strb	r2, [r3, #32]
 5864 1daa 96E7     		b	.L564
 5865              	.L579:
2725:drivers/inv_mpu.c ****         data[1] = time;
 5866              		.loc 1 2725 0
 5867 1dac 8DF80460 		strb	r6, [sp, #4]
2726:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->motion_thr, 2, data))
 5868              		.loc 1 2726 0
 5869 1db0 8DF80540 		strb	r4, [sp, #5]
2727:drivers/inv_mpu.c ****             goto lp_int_restore;
 5870              		.loc 1 2727 0
 5871 1db4 2A4B     		ldr	r3, .L582
 5872 1db6 1968     		ldr	r1, [r3]
 5873 1db8 5868     		ldr	r0, [r3, #4]
 5874 1dba 01AB     		add	r3, sp, #4
 5875 1dbc 0222     		movs	r2, #2
 5876 1dbe 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 5877 1dc0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5878 1dc2 FFF7FEFF 		bl	i2cWrite
 5879              	.LVL554:
 5880 1dc6 0028     		cmp	r0, #0
 5881 1dc8 BED1     		bne	.L557
2731:drivers/inv_mpu.c ****         data[0] = (st.chip_cfg.accel_fsr << 3) | BITS_HPF;
 5882              		.loc 1 2731 0
 5883 1dca 0520     		movs	r0, #5
 5884 1dcc FFF7FEFF 		bl	DelayMs
 5885              	.LVL555:
2732:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
 5886              		.loc 1 2732 0
 5887 1dd0 2349     		ldr	r1, .L582
 5888 1dd2 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
 5889 1dd4 D200     		lsls	r2, r2, #3
 5890 1dd6 42F00702 		orr	r2, r2, #7
 5891 1dda 02AB     		add	r3, sp, #8
 5892 1ddc 03F8042D 		strb	r2, [r3, #-4]!
2733:drivers/inv_mpu.c ****             goto lp_int_restore;
 5893              		.loc 1 2733 0
 5894 1de0 0C68     		ldr	r4, [r1]
 5895              	.LVL556:
 5896 1de2 4868     		ldr	r0, [r1, #4]
 5897 1de4 0122     		movs	r2, #1
 5898 1de6 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 5899 1de8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5900 1dea FFF7FEFF 		bl	i2cWrite
 5901              	.LVL557:
 5902 1dee 0028     		cmp	r0, #0
 5903 1df0 AAD1     		bne	.L557
2737:drivers/inv_mpu.c ****         if (lpa_freq == 1)
 5904              		.loc 1 2737 0
 5905 1df2 2023     		movs	r3, #32
 5906 1df4 8DF80430 		strb	r3, [sp, #4]
2738:drivers/inv_mpu.c ****             data[1] = INV_LPA_1_25HZ;
 5907              		.loc 1 2738 0
 5908 1df8 012F     		cmp	r7, #1
 5909 1dfa 1BD0     		beq	.L581
2740:drivers/inv_mpu.c ****             data[1] = INV_LPA_5HZ;
ARM GAS  /tmp/cci8Vpl3.s 			page 168


 5910              		.loc 1 2740 0
 5911 1dfc 052F     		cmp	r7, #5
 5912 1dfe 1DD8     		bhi	.L567
2741:drivers/inv_mpu.c ****         else if (lpa_freq <= 20)
 5913              		.loc 1 2741 0
 5914 1e00 0123     		movs	r3, #1
 5915 1e02 8DF80530 		strb	r3, [sp, #5]
 5916              	.L566:
2746:drivers/inv_mpu.c ****         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
 5917              		.loc 1 2746 0
 5918 1e06 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 5919 1e0a 9B01     		lsls	r3, r3, #6
 5920 1e0c 43F00703 		orr	r3, r3, #7
 5921 1e10 8DF80530 		strb	r3, [sp, #5]
2747:drivers/inv_mpu.c ****             goto lp_int_restore;
 5922              		.loc 1 2747 0
 5923 1e14 124B     		ldr	r3, .L582
 5924 1e16 1968     		ldr	r1, [r3]
 5925 1e18 5868     		ldr	r0, [r3, #4]
 5926 1e1a 01AB     		add	r3, sp, #4
 5927 1e1c 0222     		movs	r2, #2
 5928 1e1e 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 5929 1e20 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5930 1e22 FFF7FEFF 		bl	i2cWrite
 5931              	.LVL558:
 5932 1e26 0346     		mov	r3, r0
 5933 1e28 0028     		cmp	r0, #0
 5934 1e2a 8DD1     		bne	.L557
2750:drivers/inv_mpu.c ****         return 0;
 5935              		.loc 1 2750 0
 5936 1e2c 0121     		movs	r1, #1
 5937 1e2e 0C4A     		ldr	r2, .L582
 5938 1e30 5175     		strb	r1, [r2, #21]
2751:drivers/inv_mpu.c **** #elif defined MPU6500
 5939              		.loc 1 2751 0
 5940 1e32 AEE7     		b	.L555
 5941              	.L581:
2739:drivers/inv_mpu.c ****         else if (lpa_freq <= 5)
 5942              		.loc 1 2739 0
 5943 1e34 0023     		movs	r3, #0
 5944 1e36 8DF80530 		strb	r3, [sp, #5]
 5945 1e3a E4E7     		b	.L566
 5946              	.L567:
2742:drivers/inv_mpu.c ****             data[1] = INV_LPA_20HZ;
 5947              		.loc 1 2742 0
 5948 1e3c 142F     		cmp	r7, #20
2743:drivers/inv_mpu.c ****         else
 5949              		.loc 1 2743 0
 5950 1e3e 94BF     		ite	ls
 5951 1e40 0223     		movls	r3, #2
2745:drivers/inv_mpu.c ****         data[1] = (data[1] << 6) | BIT_STBY_XYZG;
 5952              		.loc 1 2745 0
 5953 1e42 0323     		movhi	r3, #3
 5954 1e44 8DF80530 		strb	r3, [sp, #5]
 5955 1e48 DDE7     		b	.L566
 5956              	.LVL559:
 5957              	.L580:
ARM GAS  /tmp/cci8Vpl3.s 			page 169


 5958              	.LBE34:
2838:drivers/inv_mpu.c **** 
 5959              		.loc 1 2838 0
 5960 1e4a 0120     		movs	r0, #1
 5961 1e4c FFF7FEFF 		bl	mpu_set_dmp_state
 5962              	.LVL560:
 5963 1e50 9CE7     		b	.L570
 5964              	.LVL561:
 5965              	.L573:
 5966              	.LBB35:
2682:drivers/inv_mpu.c **** 
 5967              		.loc 1 2682 0
 5968 1e52 4FF0FF33 		mov	r3, #-1
 5969 1e56 9CE7     		b	.L555
 5970              	.LVL562:
 5971              	.L574:
2711:drivers/inv_mpu.c **** 
 5972              		.loc 1 2711 0
 5973 1e58 4FF0FF33 		mov	r3, #-1
 5974 1e5c 99E7     		b	.L555
 5975              	.L583:
 5976 1e5e 00BF     		.align	2
 5977              	.L582:
 5978 1e60 00000000 		.word	.LANCHOR0
 5979              	.LBE35:
 5980              		.cfi_endproc
 5981              	.LFE108:
 5982              		.size	mpu_lp_motion_interrupt, .-mpu_lp_motion_interrupt
 5983              		.align	1
 5984              		.global	myget_ms
 5985              		.syntax unified
 5986              		.thumb
 5987              		.thumb_func
 5988              		.fpu softvfp
 5989              		.type	myget_ms, %function
 5990              	myget_ms:
 5991              	.LFB109:
2850:drivers/inv_mpu.c **** void myget_ms(unsigned long *time)
2851:drivers/inv_mpu.c **** {
 5992              		.loc 1 2851 0
 5993              		.cfi_startproc
 5994              		@ args = 0, pretend = 0, frame = 0
 5995              		@ frame_needed = 0, uses_anonymous_args = 0
 5996              		@ link register save eliminated.
 5997              	.LVL563:
 5998 1e64 7047     		bx	lr
 5999              		.cfi_endproc
 6000              	.LFE109:
 6001              		.size	myget_ms, .-myget_ms
 6002              		.global	test
 6003              		.global	reg
 6004              		.global	hw
 6005              		.section	.rodata
 6006              		.align	2
 6007              		.type	test, %object
 6008              		.size	test, 40
 6009              	test:
ARM GAS  /tmp/cci8Vpl3.s 			page 170


 6010 0000 83000000 		.word	131
 6011 0004 00080000 		.word	2048
 6012 0008 00       		.byte	0
 6013 0009 01       		.byte	1
 6014 000a 00       		.byte	0
 6015 000b 18       		.byte	24
 6016 000c 3200     		.short	50
 6017 000e 05       		.byte	5
 6018 000f 00       		.space	1
 6019 0010 00002041 		.word	1092616192
 6020 0014 0000D242 		.word	1121058816
 6021 0018 295C0F3E 		.word	1041194025
 6022 001c 9A99993E 		.word	1050253722
 6023 0020 3333733F 		.word	1064514355
 6024 0024 295C0F3E 		.word	1041194025
 6025              		.type	reg, %object
 6026              		.size	reg, 27
 6027              	reg:
 6028 0028 75       		.byte	117
 6029 0029 19       		.byte	25
 6030 002a 1A       		.byte	26
 6031 002b 0C       		.byte	12
 6032 002c 6A       		.byte	106
 6033 002d 23       		.byte	35
 6034 002e 1B       		.byte	27
 6035 002f 1C       		.byte	28
 6036 0030 1F       		.byte	31
 6037 0031 20       		.byte	32
 6038 0032 72       		.byte	114
 6039 0033 74       		.byte	116
 6040 0034 43       		.byte	67
 6041 0035 3B       		.byte	59
 6042 0036 41       		.byte	65
 6043 0037 38       		.byte	56
 6044 0038 39       		.byte	57
 6045 0039 3A       		.byte	58
 6046 003a 6B       		.byte	107
 6047 003b 6C       		.byte	108
 6048 003c 37       		.byte	55
 6049 003d 6F       		.byte	111
 6050 003e 06       		.byte	6
 6051 003f 24       		.byte	36
 6052 0040 6D       		.byte	109
 6053 0041 6E       		.byte	110
 6054 0042 70       		.byte	112
 6055 0043 00       		.space	1
 6056              		.type	hw, %object
 6057              		.size	hw, 12
 6058              	hw:
 6059 0044 68       		.byte	104
 6060 0045 00       		.space	1
 6061 0046 0004     		.short	1024
 6062 0048 76       		.byte	118
 6063 0049 00       		.space	1
 6064 004a 5401     		.short	340
 6065 004c F7FD     		.short	-521
 6066 004e 0001     		.short	256
ARM GAS  /tmp/cci8Vpl3.s 			page 171


 6067              		.data
 6068              		.align	2
 6069              		.set	.LANCHOR0,. + 0
 6070              		.type	st, %object
 6071              		.size	st, 44
 6072              	st:
 6073 0000 00000000 		.word	reg
 6074 0004 00000000 		.word	hw
 6075 0008 00       		.byte	0
 6076 0009 00000000 		.space	31
 6076      00000000 
 6076      00000000 
 6076      00000000 
 6076      00000000 
 6077 0028 00000000 		.word	test
 6078              		.section	.rodata.str1.4,"aMS",%progbits,1
 6079              		.align	2
 6080              	.LC0:
 6081 0000 556E7375 		.ascii	"Unsupported software product rev %d.\012\000"
 6081      70706F72 
 6081      74656420 
 6081      736F6674 
 6081      77617265 
 6082 0026 0000     		.space	2
 6083              	.LC1:
 6084 0028 50726F64 		.ascii	"Product ID read as 0 indicates device is either inc"
 6084      75637420 
 6084      49442072 
 6084      65616420 
 6084      61732030 
 6085 005b 6F6D7061 		.ascii	"ompatible or an MPU3050.\015\000"
 6085      7469626C 
 6085      65206F72 
 6085      20616E20 
 6085      4D505533 
 6086 0075 000000   		.space	3
 6087              	.LC2:
 6088 0078 48616C66 		.ascii	"Half sensitivity part found.\015\000"
 6088      2073656E 
 6088      73697469 
 6088      76697479 
 6088      20706172 
 6089              		.text
 6090              	.Letext0:
 6091              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6092              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6093              		.file 4 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h"
 6094              		.file 5 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/system_stm32f10x.h"
 6095              		.file 6 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/MPU6050.h"
 6096              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 6097              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 6098              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 6099              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 6100              		.file 11 "/usr/arm-none-eabi/include/stdlib.h"
 6101              		.file 12 "/usr/arm-none-eabi/include/math.h"
 6102              		.file 13 "/usr/arm-none-eabi/include/sys/errno.h"
 6103              		.file 14 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/inv_mpu.h"
ARM GAS  /tmp/cci8Vpl3.s 			page 172


 6104              		.file 15 "drivers/IOI2C.h"
 6105              		.file 16 "drivers/tools.h"
 6106              		.file 17 "/usr/arm-none-eabi/include/string.h"
 6107              		.file 18 "/usr/arm-none-eabi/include/stdio.h"
 6108              		.file 19 "<built-in>"
 6109 1e66 00BF     		.section	.debug_info,"",%progbits
 6110              	.Ldebug_info0:
 6111 0000 922B0000 		.4byte	0x2b92
 6112 0004 0400     		.2byte	0x4
 6113 0006 00000000 		.4byte	.Ldebug_abbrev0
 6114 000a 04       		.byte	0x4
 6115 000b 01       		.uleb128 0x1
 6116 000c 22040000 		.4byte	.LASF348
 6117 0010 01       		.byte	0x1
 6118 0011 29090000 		.4byte	.LASF349
 6119 0015 51010000 		.4byte	.LASF350
 6120 0019 00000000 		.4byte	.Ltext0
 6121 001d 661E0000 		.4byte	.Letext0-.Ltext0
 6122 0021 00000000 		.4byte	.Ldebug_line0
 6123 0025 02       		.uleb128 0x2
 6124 0026 04       		.byte	0x4
 6125 0027 04       		.byte	0x4
 6126 0028 0B0F0000 		.4byte	.LASF0
 6127 002c 02       		.uleb128 0x2
 6128 002d 01       		.byte	0x1
 6129 002e 06       		.byte	0x6
 6130 002f 12030000 		.4byte	.LASF1
 6131 0033 02       		.uleb128 0x2
 6132 0034 01       		.byte	0x1
 6133 0035 08       		.byte	0x8
 6134 0036 83030000 		.4byte	.LASF2
 6135 003a 03       		.uleb128 0x3
 6136 003b 33000000 		.4byte	0x33
 6137 003f 04       		.uleb128 0x4
 6138 0040 F90B0000 		.4byte	.LASF4
 6139 0044 02       		.byte	0x2
 6140 0045 29       		.byte	0x29
 6141 0046 4A000000 		.4byte	0x4a
 6142 004a 02       		.uleb128 0x2
 6143 004b 02       		.byte	0x2
 6144 004c 05       		.byte	0x5
 6145 004d E00C0000 		.4byte	.LASF3
 6146 0051 04       		.uleb128 0x4
 6147 0052 A5040000 		.4byte	.LASF5
 6148 0056 02       		.byte	0x2
 6149 0057 2B       		.byte	0x2b
 6150 0058 5C000000 		.4byte	0x5c
 6151 005c 02       		.uleb128 0x2
 6152 005d 02       		.byte	0x2
 6153 005e 07       		.byte	0x7
 6154 005f 8D020000 		.4byte	.LASF6
 6155 0063 04       		.uleb128 0x4
 6156 0064 4D0F0000 		.4byte	.LASF7
 6157 0068 02       		.byte	0x2
 6158 0069 3F       		.byte	0x3f
 6159 006a 6E000000 		.4byte	0x6e
 6160 006e 02       		.uleb128 0x2
ARM GAS  /tmp/cci8Vpl3.s 			page 173


 6161 006f 04       		.byte	0x4
 6162 0070 05       		.byte	0x5
 6163 0071 28020000 		.4byte	.LASF8
 6164 0075 03       		.uleb128 0x3
 6165 0076 6E000000 		.4byte	0x6e
 6166 007a 04       		.uleb128 0x4
 6167 007b 9C070000 		.4byte	.LASF9
 6168 007f 02       		.byte	0x2
 6169 0080 41       		.byte	0x41
 6170 0081 85000000 		.4byte	0x85
 6171 0085 02       		.uleb128 0x2
 6172 0086 04       		.byte	0x4
 6173 0087 07       		.byte	0x7
 6174 0088 52060000 		.4byte	.LASF10
 6175 008c 02       		.uleb128 0x2
 6176 008d 08       		.byte	0x8
 6177 008e 05       		.byte	0x5
 6178 008f B7070000 		.4byte	.LASF11
 6179 0093 02       		.uleb128 0x2
 6180 0094 08       		.byte	0x8
 6181 0095 07       		.byte	0x7
 6182 0096 C40A0000 		.4byte	.LASF12
 6183 009a 05       		.uleb128 0x5
 6184 009b 04       		.byte	0x4
 6185 009c 05       		.byte	0x5
 6186 009d 696E7400 		.ascii	"int\000"
 6187 00a1 02       		.uleb128 0x2
 6188 00a2 04       		.byte	0x4
 6189 00a3 07       		.byte	0x7
 6190 00a4 C1080000 		.4byte	.LASF13
 6191 00a8 04       		.uleb128 0x4
 6192 00a9 2B0D0000 		.4byte	.LASF14
 6193 00ad 03       		.byte	0x3
 6194 00ae 20       		.byte	0x20
 6195 00af 3F000000 		.4byte	0x3f
 6196 00b3 04       		.uleb128 0x4
 6197 00b4 120B0000 		.4byte	.LASF15
 6198 00b8 03       		.byte	0x3
 6199 00b9 24       		.byte	0x24
 6200 00ba 51000000 		.4byte	0x51
 6201 00be 04       		.uleb128 0x4
 6202 00bf 85000000 		.4byte	.LASF16
 6203 00c3 03       		.byte	0x3
 6204 00c4 2C       		.byte	0x2c
 6205 00c5 63000000 		.4byte	0x63
 6206 00c9 06       		.uleb128 0x6
 6207 00ca BE000000 		.4byte	0xbe
 6208 00ce 04       		.uleb128 0x4
 6209 00cf 510E0000 		.4byte	.LASF17
 6210 00d3 03       		.byte	0x3
 6211 00d4 30       		.byte	0x30
 6212 00d5 7A000000 		.4byte	0x7a
 6213 00d9 02       		.uleb128 0x2
 6214 00da 04       		.byte	0x4
 6215 00db 07       		.byte	0x7
 6216 00dc 14000000 		.4byte	.LASF18
 6217 00e0 07       		.uleb128 0x7
ARM GAS  /tmp/cci8Vpl3.s 			page 174


 6218 00e1 70080000 		.4byte	.LASF19
 6219 00e5 04       		.byte	0x4
 6220 00e6 9606     		.2byte	0x696
 6221 00e8 C9000000 		.4byte	0xc9
 6222 00ec 08       		.uleb128 0x8
 6223 00ed A2060000 		.4byte	.LASF20
 6224 00f1 05       		.byte	0x5
 6225 00f2 35       		.byte	0x35
 6226 00f3 CE000000 		.4byte	0xce
 6227 00f7 09       		.uleb128 0x9
 6228 00f8 0A       		.uleb128 0xa
 6229 00f9 04       		.byte	0x4
 6230 00fa F7000000 		.4byte	0xf7
 6231 00fe 0B       		.uleb128 0xb
 6232 00ff 4A000000 		.4byte	0x4a
 6233 0103 0E010000 		.4byte	0x10e
 6234 0107 0C       		.uleb128 0xc
 6235 0108 D9000000 		.4byte	0xd9
 6236 010c 02       		.byte	0x2
 6237 010d 00       		.byte	0
 6238 010e 07       		.uleb128 0x7
 6239 010f 0A040000 		.4byte	.LASF21
 6240 0113 06       		.byte	0x6
 6241 0114 6401     		.2byte	0x164
 6242 0116 FE000000 		.4byte	0xfe
 6243 011a 07       		.uleb128 0x7
 6244 011b D90D0000 		.4byte	.LASF22
 6245 011f 06       		.byte	0x6
 6246 0120 6401     		.2byte	0x164
 6247 0122 FE000000 		.4byte	0xfe
 6248 0126 07       		.uleb128 0x7
 6249 0127 E90D0000 		.4byte	.LASF23
 6250 012b 06       		.byte	0x6
 6251 012c 6501     		.2byte	0x165
 6252 012e A8000000 		.4byte	0xa8
 6253 0132 07       		.uleb128 0x7
 6254 0133 D3070000 		.4byte	.LASF24
 6255 0137 06       		.byte	0x6
 6256 0138 6501     		.2byte	0x165
 6257 013a A8000000 		.4byte	0xa8
 6258 013e 07       		.uleb128 0x7
 6259 013f 01020000 		.4byte	.LASF25
 6260 0143 06       		.byte	0x6
 6261 0144 6501     		.2byte	0x165
 6262 0146 A8000000 		.4byte	0xa8
 6263 014a 07       		.uleb128 0x7
 6264 014b EE060000 		.4byte	.LASF26
 6265 014f 06       		.byte	0x6
 6266 0150 6601     		.2byte	0x166
 6267 0152 25000000 		.4byte	0x25
 6268 0156 07       		.uleb128 0x7
 6269 0157 430E0000 		.4byte	.LASF27
 6270 015b 06       		.byte	0x6
 6271 015c 6701     		.2byte	0x167
 6272 015e 25000000 		.4byte	0x25
 6273 0162 07       		.uleb128 0x7
 6274 0163 E9040000 		.4byte	.LASF28
ARM GAS  /tmp/cci8Vpl3.s 			page 175


 6275 0167 06       		.byte	0x6
 6276 0168 6801     		.2byte	0x168
 6277 016a B3000000 		.4byte	0xb3
 6278 016e 0D       		.uleb128 0xd
 6279 016f 04       		.byte	0x4
 6280 0170 04       		.uleb128 0x4
 6281 0171 D5060000 		.4byte	.LASF29
 6282 0175 07       		.byte	0x7
 6283 0176 07       		.byte	0x7
 6284 0177 9A000000 		.4byte	0x9a
 6285 017b 04       		.uleb128 0x4
 6286 017c AD0E0000 		.4byte	.LASF30
 6287 0180 08       		.byte	0x8
 6288 0181 2C       		.byte	0x2c
 6289 0182 6E000000 		.4byte	0x6e
 6290 0186 04       		.uleb128 0x4
 6291 0187 6A0A0000 		.4byte	.LASF31
 6292 018b 08       		.byte	0x8
 6293 018c 72       		.byte	0x72
 6294 018d 6E000000 		.4byte	0x6e
 6295 0191 0E       		.uleb128 0xe
 6296 0192 3B0C0000 		.4byte	.LASF32
 6297 0196 09       		.byte	0x9
 6298 0197 6501     		.2byte	0x165
 6299 0199 A1000000 		.4byte	0xa1
 6300 019d 0F       		.uleb128 0xf
 6301 019e 04       		.byte	0x4
 6302 019f 08       		.byte	0x8
 6303 01a0 A6       		.byte	0xa6
 6304 01a1 BC010000 		.4byte	0x1bc
 6305 01a5 10       		.uleb128 0x10
 6306 01a6 B0010000 		.4byte	.LASF33
 6307 01aa 08       		.byte	0x8
 6308 01ab A8       		.byte	0xa8
 6309 01ac 91010000 		.4byte	0x191
 6310 01b0 10       		.uleb128 0x10
 6311 01b1 720A0000 		.4byte	.LASF34
 6312 01b5 08       		.byte	0x8
 6313 01b6 A9       		.byte	0xa9
 6314 01b7 BC010000 		.4byte	0x1bc
 6315 01bb 00       		.byte	0
 6316 01bc 0B       		.uleb128 0xb
 6317 01bd 33000000 		.4byte	0x33
 6318 01c1 CC010000 		.4byte	0x1cc
 6319 01c5 0C       		.uleb128 0xc
 6320 01c6 D9000000 		.4byte	0xd9
 6321 01ca 03       		.byte	0x3
 6322 01cb 00       		.byte	0
 6323 01cc 11       		.uleb128 0x11
 6324 01cd 08       		.byte	0x8
 6325 01ce 08       		.byte	0x8
 6326 01cf A3       		.byte	0xa3
 6327 01d0 ED010000 		.4byte	0x1ed
 6328 01d4 12       		.uleb128 0x12
 6329 01d5 F4090000 		.4byte	.LASF35
 6330 01d9 08       		.byte	0x8
 6331 01da A5       		.byte	0xa5
ARM GAS  /tmp/cci8Vpl3.s 			page 176


 6332 01db 9A000000 		.4byte	0x9a
 6333 01df 00       		.byte	0
 6334 01e0 12       		.uleb128 0x12
 6335 01e1 1D000000 		.4byte	.LASF36
 6336 01e5 08       		.byte	0x8
 6337 01e6 AA       		.byte	0xaa
 6338 01e7 9D010000 		.4byte	0x19d
 6339 01eb 04       		.byte	0x4
 6340 01ec 00       		.byte	0
 6341 01ed 04       		.uleb128 0x4
 6342 01ee 030C0000 		.4byte	.LASF37
 6343 01f2 08       		.byte	0x8
 6344 01f3 AB       		.byte	0xab
 6345 01f4 CC010000 		.4byte	0x1cc
 6346 01f8 04       		.uleb128 0x4
 6347 01f9 E90B0000 		.4byte	.LASF38
 6348 01fd 08       		.byte	0x8
 6349 01fe AF       		.byte	0xaf
 6350 01ff 70010000 		.4byte	0x170
 6351 0203 04       		.uleb128 0x4
 6352 0204 490E0000 		.4byte	.LASF39
 6353 0208 0A       		.byte	0xa
 6354 0209 16       		.byte	0x16
 6355 020a 85000000 		.4byte	0x85
 6356 020e 13       		.uleb128 0x13
 6357 020f 3E070000 		.4byte	.LASF44
 6358 0213 18       		.byte	0x18
 6359 0214 0A       		.byte	0xa
 6360 0215 2D       		.byte	0x2d
 6361 0216 61020000 		.4byte	0x261
 6362 021a 12       		.uleb128 0x12
 6363 021b 420C0000 		.4byte	.LASF40
 6364 021f 0A       		.byte	0xa
 6365 0220 2F       		.byte	0x2f
 6366 0221 61020000 		.4byte	0x261
 6367 0225 00       		.byte	0
 6368 0226 14       		.uleb128 0x14
 6369 0227 5F6B00   		.ascii	"_k\000"
 6370 022a 0A       		.byte	0xa
 6371 022b 30       		.byte	0x30
 6372 022c 9A000000 		.4byte	0x9a
 6373 0230 04       		.byte	0x4
 6374 0231 12       		.uleb128 0x12
 6375 0232 46070000 		.4byte	.LASF41
 6376 0236 0A       		.byte	0xa
 6377 0237 30       		.byte	0x30
 6378 0238 9A000000 		.4byte	0x9a
 6379 023c 08       		.byte	0x8
 6380 023d 12       		.uleb128 0x12
 6381 023e 7D080000 		.4byte	.LASF42
 6382 0242 0A       		.byte	0xa
 6383 0243 30       		.byte	0x30
 6384 0244 9A000000 		.4byte	0x9a
 6385 0248 0C       		.byte	0xc
 6386 0249 12       		.uleb128 0x12
 6387 024a A7050000 		.4byte	.LASF43
 6388 024e 0A       		.byte	0xa
ARM GAS  /tmp/cci8Vpl3.s 			page 177


 6389 024f 30       		.byte	0x30
 6390 0250 9A000000 		.4byte	0x9a
 6391 0254 10       		.byte	0x10
 6392 0255 14       		.uleb128 0x14
 6393 0256 5F7800   		.ascii	"_x\000"
 6394 0259 0A       		.byte	0xa
 6395 025a 31       		.byte	0x31
 6396 025b 67020000 		.4byte	0x267
 6397 025f 14       		.byte	0x14
 6398 0260 00       		.byte	0
 6399 0261 0A       		.uleb128 0xa
 6400 0262 04       		.byte	0x4
 6401 0263 0E020000 		.4byte	0x20e
 6402 0267 0B       		.uleb128 0xb
 6403 0268 03020000 		.4byte	0x203
 6404 026c 77020000 		.4byte	0x277
 6405 0270 0C       		.uleb128 0xc
 6406 0271 D9000000 		.4byte	0xd9
 6407 0275 00       		.byte	0
 6408 0276 00       		.byte	0
 6409 0277 13       		.uleb128 0x13
 6410 0278 C7000000 		.4byte	.LASF45
 6411 027c 24       		.byte	0x24
 6412 027d 0A       		.byte	0xa
 6413 027e 35       		.byte	0x35
 6414 027f F0020000 		.4byte	0x2f0
 6415 0283 12       		.uleb128 0x12
 6416 0284 E3000000 		.4byte	.LASF46
 6417 0288 0A       		.byte	0xa
 6418 0289 37       		.byte	0x37
 6419 028a 9A000000 		.4byte	0x9a
 6420 028e 00       		.byte	0
 6421 028f 12       		.uleb128 0x12
 6422 0290 CE0F0000 		.4byte	.LASF47
 6423 0294 0A       		.byte	0xa
 6424 0295 38       		.byte	0x38
 6425 0296 9A000000 		.4byte	0x9a
 6426 029a 04       		.byte	0x4
 6427 029b 12       		.uleb128 0x12
 6428 029c 110F0000 		.4byte	.LASF48
 6429 02a0 0A       		.byte	0xa
 6430 02a1 39       		.byte	0x39
 6431 02a2 9A000000 		.4byte	0x9a
 6432 02a6 08       		.byte	0x8
 6433 02a7 12       		.uleb128 0x12
 6434 02a8 55090000 		.4byte	.LASF49
 6435 02ac 0A       		.byte	0xa
 6436 02ad 3A       		.byte	0x3a
 6437 02ae 9A000000 		.4byte	0x9a
 6438 02b2 0C       		.byte	0xc
 6439 02b3 12       		.uleb128 0x12
 6440 02b4 A8020000 		.4byte	.LASF50
 6441 02b8 0A       		.byte	0xa
 6442 02b9 3B       		.byte	0x3b
 6443 02ba 9A000000 		.4byte	0x9a
 6444 02be 10       		.byte	0x10
 6445 02bf 12       		.uleb128 0x12
ARM GAS  /tmp/cci8Vpl3.s 			page 178


 6446 02c0 890D0000 		.4byte	.LASF51
 6447 02c4 0A       		.byte	0xa
 6448 02c5 3C       		.byte	0x3c
 6449 02c6 9A000000 		.4byte	0x9a
 6450 02ca 14       		.byte	0x14
 6451 02cb 12       		.uleb128 0x12
 6452 02cc 1C0A0000 		.4byte	.LASF52
 6453 02d0 0A       		.byte	0xa
 6454 02d1 3D       		.byte	0x3d
 6455 02d2 9A000000 		.4byte	0x9a
 6456 02d6 18       		.byte	0x18
 6457 02d7 12       		.uleb128 0x12
 6458 02d8 450A0000 		.4byte	.LASF53
 6459 02dc 0A       		.byte	0xa
 6460 02dd 3E       		.byte	0x3e
 6461 02de 9A000000 		.4byte	0x9a
 6462 02e2 1C       		.byte	0x1c
 6463 02e3 12       		.uleb128 0x12
 6464 02e4 9C0F0000 		.4byte	.LASF54
 6465 02e8 0A       		.byte	0xa
 6466 02e9 3F       		.byte	0x3f
 6467 02ea 9A000000 		.4byte	0x9a
 6468 02ee 20       		.byte	0x20
 6469 02ef 00       		.byte	0
 6470 02f0 15       		.uleb128 0x15
 6471 02f1 D2010000 		.4byte	.LASF55
 6472 02f5 0801     		.2byte	0x108
 6473 02f7 0A       		.byte	0xa
 6474 02f8 48       		.byte	0x48
 6475 02f9 30030000 		.4byte	0x330
 6476 02fd 12       		.uleb128 0x12
 6477 02fe 940F0000 		.4byte	.LASF56
 6478 0302 0A       		.byte	0xa
 6479 0303 49       		.byte	0x49
 6480 0304 30030000 		.4byte	0x330
 6481 0308 00       		.byte	0
 6482 0309 12       		.uleb128 0x12
 6483 030a 1B0B0000 		.4byte	.LASF57
 6484 030e 0A       		.byte	0xa
 6485 030f 4A       		.byte	0x4a
 6486 0310 30030000 		.4byte	0x330
 6487 0314 80       		.byte	0x80
 6488 0315 16       		.uleb128 0x16
 6489 0316 5D0D0000 		.4byte	.LASF58
 6490 031a 0A       		.byte	0xa
 6491 031b 4C       		.byte	0x4c
 6492 031c 03020000 		.4byte	0x203
 6493 0320 0001     		.2byte	0x100
 6494 0322 16       		.uleb128 0x16
 6495 0323 080E0000 		.4byte	.LASF59
 6496 0327 0A       		.byte	0xa
 6497 0328 4F       		.byte	0x4f
 6498 0329 03020000 		.4byte	0x203
 6499 032d 0401     		.2byte	0x104
 6500 032f 00       		.byte	0
 6501 0330 0B       		.uleb128 0xb
 6502 0331 6E010000 		.4byte	0x16e
ARM GAS  /tmp/cci8Vpl3.s 			page 179


 6503 0335 40030000 		.4byte	0x340
 6504 0339 0C       		.uleb128 0xc
 6505 033a D9000000 		.4byte	0xd9
 6506 033e 1F       		.byte	0x1f
 6507 033f 00       		.byte	0
 6508 0340 15       		.uleb128 0x15
 6509 0341 CB090000 		.4byte	.LASF60
 6510 0345 9001     		.2byte	0x190
 6511 0347 0A       		.byte	0xa
 6512 0348 5B       		.byte	0x5b
 6513 0349 7E030000 		.4byte	0x37e
 6514 034d 12       		.uleb128 0x12
 6515 034e 420C0000 		.4byte	.LASF40
 6516 0352 0A       		.byte	0xa
 6517 0353 5C       		.byte	0x5c
 6518 0354 7E030000 		.4byte	0x37e
 6519 0358 00       		.byte	0
 6520 0359 12       		.uleb128 0x12
 6521 035a E40D0000 		.4byte	.LASF61
 6522 035e 0A       		.byte	0xa
 6523 035f 5D       		.byte	0x5d
 6524 0360 9A000000 		.4byte	0x9a
 6525 0364 04       		.byte	0x4
 6526 0365 12       		.uleb128 0x12
 6527 0366 05040000 		.4byte	.LASF62
 6528 036a 0A       		.byte	0xa
 6529 036b 5F       		.byte	0x5f
 6530 036c 84030000 		.4byte	0x384
 6531 0370 08       		.byte	0x8
 6532 0371 12       		.uleb128 0x12
 6533 0372 D2010000 		.4byte	.LASF55
 6534 0376 0A       		.byte	0xa
 6535 0377 60       		.byte	0x60
 6536 0378 F0020000 		.4byte	0x2f0
 6537 037c 88       		.byte	0x88
 6538 037d 00       		.byte	0
 6539 037e 0A       		.uleb128 0xa
 6540 037f 04       		.byte	0x4
 6541 0380 40030000 		.4byte	0x340
 6542 0384 0B       		.uleb128 0xb
 6543 0385 F8000000 		.4byte	0xf8
 6544 0389 94030000 		.4byte	0x394
 6545 038d 0C       		.uleb128 0xc
 6546 038e D9000000 		.4byte	0xd9
 6547 0392 1F       		.byte	0x1f
 6548 0393 00       		.byte	0
 6549 0394 13       		.uleb128 0x13
 6550 0395 010E0000 		.4byte	.LASF63
 6551 0399 08       		.byte	0x8
 6552 039a 0A       		.byte	0xa
 6553 039b 73       		.byte	0x73
 6554 039c B9030000 		.4byte	0x3b9
 6555 03a0 12       		.uleb128 0x12
 6556 03a1 800B0000 		.4byte	.LASF64
 6557 03a5 0A       		.byte	0xa
 6558 03a6 74       		.byte	0x74
 6559 03a7 B9030000 		.4byte	0x3b9
ARM GAS  /tmp/cci8Vpl3.s 			page 180


 6560 03ab 00       		.byte	0
 6561 03ac 12       		.uleb128 0x12
 6562 03ad 50020000 		.4byte	.LASF65
 6563 03b1 0A       		.byte	0xa
 6564 03b2 75       		.byte	0x75
 6565 03b3 9A000000 		.4byte	0x9a
 6566 03b7 04       		.byte	0x4
 6567 03b8 00       		.byte	0
 6568 03b9 0A       		.uleb128 0xa
 6569 03ba 04       		.byte	0x4
 6570 03bb 33000000 		.4byte	0x33
 6571 03bf 13       		.uleb128 0x13
 6572 03c0 87060000 		.4byte	.LASF66
 6573 03c4 68       		.byte	0x68
 6574 03c5 0A       		.byte	0xa
 6575 03c6 B3       		.byte	0xb3
 6576 03c7 E9040000 		.4byte	0x4e9
 6577 03cb 14       		.uleb128 0x14
 6578 03cc 5F7000   		.ascii	"_p\000"
 6579 03cf 0A       		.byte	0xa
 6580 03d0 B4       		.byte	0xb4
 6581 03d1 B9030000 		.4byte	0x3b9
 6582 03d5 00       		.byte	0
 6583 03d6 14       		.uleb128 0x14
 6584 03d7 5F7200   		.ascii	"_r\000"
 6585 03da 0A       		.byte	0xa
 6586 03db B5       		.byte	0xb5
 6587 03dc 9A000000 		.4byte	0x9a
 6588 03e0 04       		.byte	0x4
 6589 03e1 14       		.uleb128 0x14
 6590 03e2 5F7700   		.ascii	"_w\000"
 6591 03e5 0A       		.byte	0xa
 6592 03e6 B6       		.byte	0xb6
 6593 03e7 9A000000 		.4byte	0x9a
 6594 03eb 08       		.byte	0x8
 6595 03ec 12       		.uleb128 0x12
 6596 03ed C4090000 		.4byte	.LASF67
 6597 03f1 0A       		.byte	0xa
 6598 03f2 B7       		.byte	0xb7
 6599 03f3 4A000000 		.4byte	0x4a
 6600 03f7 0C       		.byte	0xc
 6601 03f8 12       		.uleb128 0x12
 6602 03f9 C5010000 		.4byte	.LASF68
 6603 03fd 0A       		.byte	0xa
 6604 03fe B8       		.byte	0xb8
 6605 03ff 4A000000 		.4byte	0x4a
 6606 0403 0E       		.byte	0xe
 6607 0404 14       		.uleb128 0x14
 6608 0405 5F626600 		.ascii	"_bf\000"
 6609 0409 0A       		.byte	0xa
 6610 040a B9       		.byte	0xb9
 6611 040b 94030000 		.4byte	0x394
 6612 040f 10       		.byte	0x10
 6613 0410 12       		.uleb128 0x12
 6614 0411 D00D0000 		.4byte	.LASF69
 6615 0415 0A       		.byte	0xa
 6616 0416 BA       		.byte	0xba
ARM GAS  /tmp/cci8Vpl3.s 			page 181


 6617 0417 9A000000 		.4byte	0x9a
 6618 041b 18       		.byte	0x18
 6619 041c 12       		.uleb128 0x12
 6620 041d 9F050000 		.4byte	.LASF70
 6621 0421 0A       		.byte	0xa
 6622 0422 C1       		.byte	0xc1
 6623 0423 6E010000 		.4byte	0x16e
 6624 0427 1C       		.byte	0x1c
 6625 0428 12       		.uleb128 0x12
 6626 0429 3C000000 		.4byte	.LASF71
 6627 042d 0A       		.byte	0xa
 6628 042e C3       		.byte	0xc3
 6629 042f 56060000 		.4byte	0x656
 6630 0433 20       		.byte	0x20
 6631 0434 12       		.uleb128 0x12
 6632 0435 73000000 		.4byte	.LASF72
 6633 0439 0A       		.byte	0xa
 6634 043a C5       		.byte	0xc5
 6635 043b 85060000 		.4byte	0x685
 6636 043f 24       		.byte	0x24
 6637 0440 12       		.uleb128 0x12
 6638 0441 550A0000 		.4byte	.LASF73
 6639 0445 0A       		.byte	0xa
 6640 0446 C8       		.byte	0xc8
 6641 0447 A9060000 		.4byte	0x6a9
 6642 044b 28       		.byte	0x28
 6643 044c 12       		.uleb128 0x12
 6644 044d 1B040000 		.4byte	.LASF74
 6645 0451 0A       		.byte	0xa
 6646 0452 C9       		.byte	0xc9
 6647 0453 C3060000 		.4byte	0x6c3
 6648 0457 2C       		.byte	0x2c
 6649 0458 14       		.uleb128 0x14
 6650 0459 5F756200 		.ascii	"_ub\000"
 6651 045d 0A       		.byte	0xa
 6652 045e CC       		.byte	0xcc
 6653 045f 94030000 		.4byte	0x394
 6654 0463 30       		.byte	0x30
 6655 0464 14       		.uleb128 0x14
 6656 0465 5F757000 		.ascii	"_up\000"
 6657 0469 0A       		.byte	0xa
 6658 046a CD       		.byte	0xcd
 6659 046b B9030000 		.4byte	0x3b9
 6660 046f 38       		.byte	0x38
 6661 0470 14       		.uleb128 0x14
 6662 0471 5F757200 		.ascii	"_ur\000"
 6663 0475 0A       		.byte	0xa
 6664 0476 CE       		.byte	0xce
 6665 0477 9A000000 		.4byte	0x9a
 6666 047b 3C       		.byte	0x3c
 6667 047c 12       		.uleb128 0x12
 6668 047d 72090000 		.4byte	.LASF75
 6669 0481 0A       		.byte	0xa
 6670 0482 D1       		.byte	0xd1
 6671 0483 C9060000 		.4byte	0x6c9
 6672 0487 40       		.byte	0x40
 6673 0488 12       		.uleb128 0x12
ARM GAS  /tmp/cci8Vpl3.s 			page 182


 6674 0489 DD000000 		.4byte	.LASF76
 6675 048d 0A       		.byte	0xa
 6676 048e D2       		.byte	0xd2
 6677 048f D9060000 		.4byte	0x6d9
 6678 0493 43       		.byte	0x43
 6679 0494 14       		.uleb128 0x14
 6680 0495 5F6C6200 		.ascii	"_lb\000"
 6681 0499 0A       		.byte	0xa
 6682 049a D5       		.byte	0xd5
 6683 049b 94030000 		.4byte	0x394
 6684 049f 44       		.byte	0x44
 6685 04a0 12       		.uleb128 0x12
 6686 04a1 5D0B0000 		.4byte	.LASF77
 6687 04a5 0A       		.byte	0xa
 6688 04a6 D8       		.byte	0xd8
 6689 04a7 9A000000 		.4byte	0x9a
 6690 04ab 4C       		.byte	0x4c
 6691 04ac 12       		.uleb128 0x12
 6692 04ad D3050000 		.4byte	.LASF78
 6693 04b1 0A       		.byte	0xa
 6694 04b2 D9       		.byte	0xd9
 6695 04b3 7B010000 		.4byte	0x17b
 6696 04b7 50       		.byte	0x50
 6697 04b8 12       		.uleb128 0x12
 6698 04b9 550C0000 		.4byte	.LASF79
 6699 04bd 0A       		.byte	0xa
 6700 04be DC       		.byte	0xdc
 6701 04bf 07050000 		.4byte	0x507
 6702 04c3 54       		.byte	0x54
 6703 04c4 12       		.uleb128 0x12
 6704 04c5 2B010000 		.4byte	.LASF80
 6705 04c9 0A       		.byte	0xa
 6706 04ca E0       		.byte	0xe0
 6707 04cb F8010000 		.4byte	0x1f8
 6708 04cf 58       		.byte	0x58
 6709 04d0 12       		.uleb128 0x12
 6710 04d1 9D090000 		.4byte	.LASF81
 6711 04d5 0A       		.byte	0xa
 6712 04d6 E2       		.byte	0xe2
 6713 04d7 ED010000 		.4byte	0x1ed
 6714 04db 5C       		.byte	0x5c
 6715 04dc 12       		.uleb128 0x12
 6716 04dd 9A060000 		.4byte	.LASF82
 6717 04e1 0A       		.byte	0xa
 6718 04e2 E3       		.byte	0xe3
 6719 04e3 9A000000 		.4byte	0x9a
 6720 04e7 64       		.byte	0x64
 6721 04e8 00       		.byte	0
 6722 04e9 17       		.uleb128 0x17
 6723 04ea 9A000000 		.4byte	0x9a
 6724 04ee 07050000 		.4byte	0x507
 6725 04f2 18       		.uleb128 0x18
 6726 04f3 07050000 		.4byte	0x507
 6727 04f7 18       		.uleb128 0x18
 6728 04f8 6E010000 		.4byte	0x16e
 6729 04fc 18       		.uleb128 0x18
 6730 04fd 44060000 		.4byte	0x644
ARM GAS  /tmp/cci8Vpl3.s 			page 183


 6731 0501 18       		.uleb128 0x18
 6732 0502 9A000000 		.4byte	0x9a
 6733 0506 00       		.byte	0
 6734 0507 0A       		.uleb128 0xa
 6735 0508 04       		.byte	0x4
 6736 0509 12050000 		.4byte	0x512
 6737 050d 03       		.uleb128 0x3
 6738 050e 07050000 		.4byte	0x507
 6739 0512 19       		.uleb128 0x19
 6740 0513 C0030000 		.4byte	.LASF83
 6741 0517 2804     		.2byte	0x428
 6742 0519 0A       		.byte	0xa
 6743 051a 3802     		.2byte	0x238
 6744 051c 44060000 		.4byte	0x644
 6745 0520 1A       		.uleb128 0x1a
 6746 0521 E7060000 		.4byte	.LASF84
 6747 0525 0A       		.byte	0xa
 6748 0526 3A02     		.2byte	0x23a
 6749 0528 9A000000 		.4byte	0x9a
 6750 052c 00       		.byte	0
 6751 052d 1A       		.uleb128 0x1a
 6752 052e D1040000 		.4byte	.LASF85
 6753 0532 0A       		.byte	0xa
 6754 0533 3F02     		.2byte	0x23f
 6755 0535 30070000 		.4byte	0x730
 6756 0539 04       		.byte	0x4
 6757 053a 1A       		.uleb128 0x1a
 6758 053b 2F0B0000 		.4byte	.LASF86
 6759 053f 0A       		.byte	0xa
 6760 0540 3F02     		.2byte	0x23f
 6761 0542 30070000 		.4byte	0x730
 6762 0546 08       		.byte	0x8
 6763 0547 1A       		.uleb128 0x1a
 6764 0548 87090000 		.4byte	.LASF87
 6765 054c 0A       		.byte	0xa
 6766 054d 3F02     		.2byte	0x23f
 6767 054f 30070000 		.4byte	0x730
 6768 0553 0C       		.byte	0xc
 6769 0554 1A       		.uleb128 0x1a
 6770 0555 DF0D0000 		.4byte	.LASF88
 6771 0559 0A       		.byte	0xa
 6772 055a 4102     		.2byte	0x241
 6773 055c 9A000000 		.4byte	0x9a
 6774 0560 10       		.byte	0x10
 6775 0561 1A       		.uleb128 0x1a
 6776 0562 A7070000 		.4byte	.LASF89
 6777 0566 0A       		.byte	0xa
 6778 0567 4202     		.2byte	0x242
 6779 0569 12090000 		.4byte	0x912
 6780 056d 14       		.byte	0x14
 6781 056e 1A       		.uleb128 0x1a
 6782 056f D6020000 		.4byte	.LASF90
 6783 0573 0A       		.byte	0xa
 6784 0574 4402     		.2byte	0x244
 6785 0576 9A000000 		.4byte	0x9a
 6786 057a 30       		.byte	0x30
 6787 057b 1A       		.uleb128 0x1a
ARM GAS  /tmp/cci8Vpl3.s 			page 184


 6788 057c 29080000 		.4byte	.LASF91
 6789 0580 0A       		.byte	0xa
 6790 0581 4502     		.2byte	0x245
 6791 0583 7A060000 		.4byte	0x67a
 6792 0587 34       		.byte	0x34
 6793 0588 1A       		.uleb128 0x1a
 6794 0589 8F060000 		.4byte	.LASF92
 6795 058d 0A       		.byte	0xa
 6796 058e 4702     		.2byte	0x247
 6797 0590 9A000000 		.4byte	0x9a
 6798 0594 38       		.byte	0x38
 6799 0595 1A       		.uleb128 0x1a
 6800 0596 5B070000 		.4byte	.LASF93
 6801 059a 0A       		.byte	0xa
 6802 059b 4902     		.2byte	0x249
 6803 059d 2D090000 		.4byte	0x92d
 6804 05a1 3C       		.byte	0x3c
 6805 05a2 1A       		.uleb128 0x1a
 6806 05a3 6E0E0000 		.4byte	.LASF94
 6807 05a7 0A       		.byte	0xa
 6808 05a8 4C02     		.2byte	0x24c
 6809 05aa 61020000 		.4byte	0x261
 6810 05ae 40       		.byte	0x40
 6811 05af 1A       		.uleb128 0x1a
 6812 05b0 3D020000 		.4byte	.LASF95
 6813 05b4 0A       		.byte	0xa
 6814 05b5 4D02     		.2byte	0x24d
 6815 05b7 9A000000 		.4byte	0x9a
 6816 05bb 44       		.byte	0x44
 6817 05bc 1A       		.uleb128 0x1a
 6818 05bd 4D060000 		.4byte	.LASF96
 6819 05c1 0A       		.byte	0xa
 6820 05c2 4E02     		.2byte	0x24e
 6821 05c4 61020000 		.4byte	0x261
 6822 05c8 48       		.byte	0x48
 6823 05c9 1A       		.uleb128 0x1a
 6824 05ca 43080000 		.4byte	.LASF97
 6825 05ce 0A       		.byte	0xa
 6826 05cf 4F02     		.2byte	0x24f
 6827 05d1 33090000 		.4byte	0x933
 6828 05d5 4C       		.byte	0x4c
 6829 05d6 1A       		.uleb128 0x1a
 6830 05d7 9A000000 		.4byte	.LASF98
 6831 05db 0A       		.byte	0xa
 6832 05dc 5202     		.2byte	0x252
 6833 05de 9A000000 		.4byte	0x9a
 6834 05e2 50       		.byte	0x50
 6835 05e3 1A       		.uleb128 0x1a
 6836 05e4 DB050000 		.4byte	.LASF99
 6837 05e8 0A       		.byte	0xa
 6838 05e9 5302     		.2byte	0x253
 6839 05eb 44060000 		.4byte	0x644
 6840 05ef 54       		.byte	0x54
 6841 05f0 1A       		.uleb128 0x1a
 6842 05f1 6D090000 		.4byte	.LASF100
 6843 05f5 0A       		.byte	0xa
 6844 05f6 7602     		.2byte	0x276
ARM GAS  /tmp/cci8Vpl3.s 			page 185


 6845 05f8 F0080000 		.4byte	0x8f0
 6846 05fc 58       		.byte	0x58
 6847 05fd 1B       		.uleb128 0x1b
 6848 05fe CB090000 		.4byte	.LASF60
 6849 0602 0A       		.byte	0xa
 6850 0603 7A02     		.2byte	0x27a
 6851 0605 7E030000 		.4byte	0x37e
 6852 0609 4801     		.2byte	0x148
 6853 060b 1B       		.uleb128 0x1b
 6854 060c 65070000 		.4byte	.LASF101
 6855 0610 0A       		.byte	0xa
 6856 0611 7B02     		.2byte	0x27b
 6857 0613 40030000 		.4byte	0x340
 6858 0617 4C01     		.2byte	0x14c
 6859 0619 1B       		.uleb128 0x1b
 6860 061a BE050000 		.4byte	.LASF102
 6861 061e 0A       		.byte	0xa
 6862 061f 7F02     		.2byte	0x27f
 6863 0621 44090000 		.4byte	0x944
 6864 0625 DC02     		.2byte	0x2dc
 6865 0627 1B       		.uleb128 0x1b
 6866 0628 DD070000 		.4byte	.LASF103
 6867 062c 0A       		.byte	0xa
 6868 062d 8402     		.2byte	0x284
 6869 062f F5060000 		.4byte	0x6f5
 6870 0633 E002     		.2byte	0x2e0
 6871 0635 1B       		.uleb128 0x1b
 6872 0636 2E000000 		.4byte	.LASF104
 6873 063a 0A       		.byte	0xa
 6874 063b 8502     		.2byte	0x285
 6875 063d 50090000 		.4byte	0x950
 6876 0641 EC02     		.2byte	0x2ec
 6877 0643 00       		.byte	0
 6878 0644 0A       		.uleb128 0xa
 6879 0645 04       		.byte	0x4
 6880 0646 4A060000 		.4byte	0x64a
 6881 064a 02       		.uleb128 0x2
 6882 064b 01       		.byte	0x1
 6883 064c 08       		.byte	0x8
 6884 064d 00040000 		.4byte	.LASF105
 6885 0651 03       		.uleb128 0x3
 6886 0652 4A060000 		.4byte	0x64a
 6887 0656 0A       		.uleb128 0xa
 6888 0657 04       		.byte	0x4
 6889 0658 E9040000 		.4byte	0x4e9
 6890 065c 17       		.uleb128 0x17
 6891 065d 9A000000 		.4byte	0x9a
 6892 0661 7A060000 		.4byte	0x67a
 6893 0665 18       		.uleb128 0x18
 6894 0666 07050000 		.4byte	0x507
 6895 066a 18       		.uleb128 0x18
 6896 066b 6E010000 		.4byte	0x16e
 6897 066f 18       		.uleb128 0x18
 6898 0670 7A060000 		.4byte	0x67a
 6899 0674 18       		.uleb128 0x18
 6900 0675 9A000000 		.4byte	0x9a
 6901 0679 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 186


 6902 067a 0A       		.uleb128 0xa
 6903 067b 04       		.byte	0x4
 6904 067c 51060000 		.4byte	0x651
 6905 0680 03       		.uleb128 0x3
 6906 0681 7A060000 		.4byte	0x67a
 6907 0685 0A       		.uleb128 0xa
 6908 0686 04       		.byte	0x4
 6909 0687 5C060000 		.4byte	0x65c
 6910 068b 17       		.uleb128 0x17
 6911 068c 86010000 		.4byte	0x186
 6912 0690 A9060000 		.4byte	0x6a9
 6913 0694 18       		.uleb128 0x18
 6914 0695 07050000 		.4byte	0x507
 6915 0699 18       		.uleb128 0x18
 6916 069a 6E010000 		.4byte	0x16e
 6917 069e 18       		.uleb128 0x18
 6918 069f 86010000 		.4byte	0x186
 6919 06a3 18       		.uleb128 0x18
 6920 06a4 9A000000 		.4byte	0x9a
 6921 06a8 00       		.byte	0
 6922 06a9 0A       		.uleb128 0xa
 6923 06aa 04       		.byte	0x4
 6924 06ab 8B060000 		.4byte	0x68b
 6925 06af 17       		.uleb128 0x17
 6926 06b0 9A000000 		.4byte	0x9a
 6927 06b4 C3060000 		.4byte	0x6c3
 6928 06b8 18       		.uleb128 0x18
 6929 06b9 07050000 		.4byte	0x507
 6930 06bd 18       		.uleb128 0x18
 6931 06be 6E010000 		.4byte	0x16e
 6932 06c2 00       		.byte	0
 6933 06c3 0A       		.uleb128 0xa
 6934 06c4 04       		.byte	0x4
 6935 06c5 AF060000 		.4byte	0x6af
 6936 06c9 0B       		.uleb128 0xb
 6937 06ca 33000000 		.4byte	0x33
 6938 06ce D9060000 		.4byte	0x6d9
 6939 06d2 0C       		.uleb128 0xc
 6940 06d3 D9000000 		.4byte	0xd9
 6941 06d7 02       		.byte	0x2
 6942 06d8 00       		.byte	0
 6943 06d9 0B       		.uleb128 0xb
 6944 06da 33000000 		.4byte	0x33
 6945 06de E9060000 		.4byte	0x6e9
 6946 06e2 0C       		.uleb128 0xc
 6947 06e3 D9000000 		.4byte	0xd9
 6948 06e7 00       		.byte	0
 6949 06e8 00       		.byte	0
 6950 06e9 0E       		.uleb128 0xe
 6951 06ea F20B0000 		.4byte	.LASF106
 6952 06ee 0A       		.byte	0xa
 6953 06ef 1D01     		.2byte	0x11d
 6954 06f1 BF030000 		.4byte	0x3bf
 6955 06f5 1C       		.uleb128 0x1c
 6956 06f6 5E080000 		.4byte	.LASF107
 6957 06fa 0C       		.byte	0xc
 6958 06fb 0A       		.byte	0xa
ARM GAS  /tmp/cci8Vpl3.s 			page 187


 6959 06fc 2101     		.2byte	0x121
 6960 06fe 2A070000 		.4byte	0x72a
 6961 0702 1A       		.uleb128 0x1a
 6962 0703 420C0000 		.4byte	.LASF40
 6963 0707 0A       		.byte	0xa
 6964 0708 2301     		.2byte	0x123
 6965 070a 2A070000 		.4byte	0x72a
 6966 070e 00       		.byte	0
 6967 070f 1A       		.uleb128 0x1a
 6968 0710 C5070000 		.4byte	.LASF108
 6969 0714 0A       		.byte	0xa
 6970 0715 2401     		.2byte	0x124
 6971 0717 9A000000 		.4byte	0x9a
 6972 071b 04       		.byte	0x4
 6973 071c 1A       		.uleb128 0x1a
 6974 071d 58080000 		.4byte	.LASF109
 6975 0721 0A       		.byte	0xa
 6976 0722 2501     		.2byte	0x125
 6977 0724 30070000 		.4byte	0x730
 6978 0728 08       		.byte	0x8
 6979 0729 00       		.byte	0
 6980 072a 0A       		.uleb128 0xa
 6981 072b 04       		.byte	0x4
 6982 072c F5060000 		.4byte	0x6f5
 6983 0730 0A       		.uleb128 0xa
 6984 0731 04       		.byte	0x4
 6985 0732 E9060000 		.4byte	0x6e9
 6986 0736 1C       		.uleb128 0x1c
 6987 0737 270B0000 		.4byte	.LASF110
 6988 073b 0E       		.byte	0xe
 6989 073c 0A       		.byte	0xa
 6990 073d 3D01     		.2byte	0x13d
 6991 073f 6B070000 		.4byte	0x76b
 6992 0743 1A       		.uleb128 0x1a
 6993 0744 4F0A0000 		.4byte	.LASF111
 6994 0748 0A       		.byte	0xa
 6995 0749 3E01     		.2byte	0x13e
 6996 074b 6B070000 		.4byte	0x76b
 6997 074f 00       		.byte	0
 6998 0750 1A       		.uleb128 0x1a
 6999 0751 83010000 		.4byte	.LASF112
 7000 0755 0A       		.byte	0xa
 7001 0756 3F01     		.2byte	0x13f
 7002 0758 6B070000 		.4byte	0x76b
 7003 075c 06       		.byte	0x6
 7004 075d 1A       		.uleb128 0x1a
 7005 075e 060F0000 		.4byte	.LASF113
 7006 0762 0A       		.byte	0xa
 7007 0763 4001     		.2byte	0x140
 7008 0765 5C000000 		.4byte	0x5c
 7009 0769 0C       		.byte	0xc
 7010 076a 00       		.byte	0
 7011 076b 0B       		.uleb128 0xb
 7012 076c 5C000000 		.4byte	0x5c
 7013 0770 7B070000 		.4byte	0x77b
 7014 0774 0C       		.uleb128 0xc
 7015 0775 D9000000 		.4byte	0xd9
ARM GAS  /tmp/cci8Vpl3.s 			page 188


 7016 0779 02       		.byte	0x2
 7017 077a 00       		.byte	0
 7018 077b 1D       		.uleb128 0x1d
 7019 077c D0       		.byte	0xd0
 7020 077d 0A       		.byte	0xa
 7021 077e 5702     		.2byte	0x257
 7022 0780 7C080000 		.4byte	0x87c
 7023 0784 1A       		.uleb128 0x1a
 7024 0785 FB020000 		.4byte	.LASF114
 7025 0789 0A       		.byte	0xa
 7026 078a 5902     		.2byte	0x259
 7027 078c A1000000 		.4byte	0xa1
 7028 0790 00       		.byte	0
 7029 0791 1A       		.uleb128 0x1a
 7030 0792 9F0B0000 		.4byte	.LASF115
 7031 0796 0A       		.byte	0xa
 7032 0797 5A02     		.2byte	0x25a
 7033 0799 44060000 		.4byte	0x644
 7034 079d 04       		.byte	0x4
 7035 079e 1A       		.uleb128 0x1a
 7036 079f 8D000000 		.4byte	.LASF116
 7037 07a3 0A       		.byte	0xa
 7038 07a4 5B02     		.2byte	0x25b
 7039 07a6 7C080000 		.4byte	0x87c
 7040 07aa 08       		.byte	0x8
 7041 07ab 1A       		.uleb128 0x1a
 7042 07ac 64020000 		.4byte	.LASF117
 7043 07b0 0A       		.byte	0xa
 7044 07b1 5C02     		.2byte	0x25c
 7045 07b3 77020000 		.4byte	0x277
 7046 07b7 24       		.byte	0x24
 7047 07b8 1A       		.uleb128 0x1a
 7048 07b9 00080000 		.4byte	.LASF118
 7049 07bd 0A       		.byte	0xa
 7050 07be 5D02     		.2byte	0x25d
 7051 07c0 9A000000 		.4byte	0x9a
 7052 07c4 48       		.byte	0x48
 7053 07c5 1A       		.uleb128 0x1a
 7054 07c6 A6090000 		.4byte	.LASF119
 7055 07ca 0A       		.byte	0xa
 7056 07cb 5E02     		.2byte	0x25e
 7057 07cd 93000000 		.4byte	0x93
 7058 07d1 50       		.byte	0x50
 7059 07d2 1A       		.uleb128 0x1a
 7060 07d3 240C0000 		.4byte	.LASF120
 7061 07d7 0A       		.byte	0xa
 7062 07d8 5F02     		.2byte	0x25f
 7063 07da 36070000 		.4byte	0x736
 7064 07de 58       		.byte	0x58
 7065 07df 1A       		.uleb128 0x1a
 7066 07e0 D30C0000 		.4byte	.LASF121
 7067 07e4 0A       		.byte	0xa
 7068 07e5 6002     		.2byte	0x260
 7069 07e7 ED010000 		.4byte	0x1ed
 7070 07eb 68       		.byte	0x68
 7071 07ec 1A       		.uleb128 0x1a
 7072 07ed 910A0000 		.4byte	.LASF122
ARM GAS  /tmp/cci8Vpl3.s 			page 189


 7073 07f1 0A       		.byte	0xa
 7074 07f2 6102     		.2byte	0x261
 7075 07f4 ED010000 		.4byte	0x1ed
 7076 07f8 70       		.byte	0x70
 7077 07f9 1A       		.uleb128 0x1a
 7078 07fa 8F090000 		.4byte	.LASF123
 7079 07fe 0A       		.byte	0xa
 7080 07ff 6202     		.2byte	0x262
 7081 0801 ED010000 		.4byte	0x1ed
 7082 0805 78       		.byte	0x78
 7083 0806 1A       		.uleb128 0x1a
 7084 0807 F2000000 		.4byte	.LASF124
 7085 080b 0A       		.byte	0xa
 7086 080c 6302     		.2byte	0x263
 7087 080e 8C080000 		.4byte	0x88c
 7088 0812 80       		.byte	0x80
 7089 0813 1A       		.uleb128 0x1a
 7090 0814 0D070000 		.4byte	.LASF125
 7091 0818 0A       		.byte	0xa
 7092 0819 6402     		.2byte	0x264
 7093 081b 9C080000 		.4byte	0x89c
 7094 081f 88       		.byte	0x88
 7095 0820 1A       		.uleb128 0x1a
 7096 0821 D70F0000 		.4byte	.LASF126
 7097 0825 0A       		.byte	0xa
 7098 0826 6502     		.2byte	0x265
 7099 0828 9A000000 		.4byte	0x9a
 7100 082c A0       		.byte	0xa0
 7101 082d 1A       		.uleb128 0x1a
 7102 082e 1A020000 		.4byte	.LASF127
 7103 0832 0A       		.byte	0xa
 7104 0833 6602     		.2byte	0x266
 7105 0835 ED010000 		.4byte	0x1ed
 7106 0839 A4       		.byte	0xa4
 7107 083a 1A       		.uleb128 0x1a
 7108 083b BD0B0000 		.4byte	.LASF128
 7109 083f 0A       		.byte	0xa
 7110 0840 6702     		.2byte	0x267
 7111 0842 ED010000 		.4byte	0x1ed
 7112 0846 AC       		.byte	0xac
 7113 0847 1A       		.uleb128 0x1a
 7114 0848 370F0000 		.4byte	.LASF129
 7115 084c 0A       		.byte	0xa
 7116 084d 6802     		.2byte	0x268
 7117 084f ED010000 		.4byte	0x1ed
 7118 0853 B4       		.byte	0xb4
 7119 0854 1A       		.uleb128 0x1a
 7120 0855 3B090000 		.4byte	.LASF130
 7121 0859 0A       		.byte	0xa
 7122 085a 6902     		.2byte	0x269
 7123 085c ED010000 		.4byte	0x1ed
 7124 0860 BC       		.byte	0xbc
 7125 0861 1A       		.uleb128 0x1a
 7126 0862 CC000000 		.4byte	.LASF131
 7127 0866 0A       		.byte	0xa
 7128 0867 6A02     		.2byte	0x26a
 7129 0869 ED010000 		.4byte	0x1ed
ARM GAS  /tmp/cci8Vpl3.s 			page 190


 7130 086d C4       		.byte	0xc4
 7131 086e 1A       		.uleb128 0x1a
 7132 086f FF080000 		.4byte	.LASF132
 7133 0873 0A       		.byte	0xa
 7134 0874 6B02     		.2byte	0x26b
 7135 0876 9A000000 		.4byte	0x9a
 7136 087a CC       		.byte	0xcc
 7137 087b 00       		.byte	0
 7138 087c 0B       		.uleb128 0xb
 7139 087d 4A060000 		.4byte	0x64a
 7140 0881 8C080000 		.4byte	0x88c
 7141 0885 0C       		.uleb128 0xc
 7142 0886 D9000000 		.4byte	0xd9
 7143 088a 19       		.byte	0x19
 7144 088b 00       		.byte	0
 7145 088c 0B       		.uleb128 0xb
 7146 088d 4A060000 		.4byte	0x64a
 7147 0891 9C080000 		.4byte	0x89c
 7148 0895 0C       		.uleb128 0xc
 7149 0896 D9000000 		.4byte	0xd9
 7150 089a 07       		.byte	0x7
 7151 089b 00       		.byte	0
 7152 089c 0B       		.uleb128 0xb
 7153 089d 4A060000 		.4byte	0x64a
 7154 08a1 AC080000 		.4byte	0x8ac
 7155 08a5 0C       		.uleb128 0xc
 7156 08a6 D9000000 		.4byte	0xd9
 7157 08aa 17       		.byte	0x17
 7158 08ab 00       		.byte	0
 7159 08ac 1D       		.uleb128 0x1d
 7160 08ad F0       		.byte	0xf0
 7161 08ae 0A       		.byte	0xa
 7162 08af 7002     		.2byte	0x270
 7163 08b1 D0080000 		.4byte	0x8d0
 7164 08b5 1A       		.uleb128 0x1a
 7165 08b6 100E0000 		.4byte	.LASF133
 7166 08ba 0A       		.byte	0xa
 7167 08bb 7302     		.2byte	0x273
 7168 08bd D0080000 		.4byte	0x8d0
 7169 08c1 00       		.byte	0
 7170 08c2 1A       		.uleb128 0x1a
 7171 08c3 E5070000 		.4byte	.LASF134
 7172 08c7 0A       		.byte	0xa
 7173 08c8 7402     		.2byte	0x274
 7174 08ca E0080000 		.4byte	0x8e0
 7175 08ce 78       		.byte	0x78
 7176 08cf 00       		.byte	0
 7177 08d0 0B       		.uleb128 0xb
 7178 08d1 B9030000 		.4byte	0x3b9
 7179 08d5 E0080000 		.4byte	0x8e0
 7180 08d9 0C       		.uleb128 0xc
 7181 08da D9000000 		.4byte	0xd9
 7182 08de 1D       		.byte	0x1d
 7183 08df 00       		.byte	0
 7184 08e0 0B       		.uleb128 0xb
 7185 08e1 A1000000 		.4byte	0xa1
 7186 08e5 F0080000 		.4byte	0x8f0
ARM GAS  /tmp/cci8Vpl3.s 			page 191


 7187 08e9 0C       		.uleb128 0xc
 7188 08ea D9000000 		.4byte	0xd9
 7189 08ee 1D       		.byte	0x1d
 7190 08ef 00       		.byte	0
 7191 08f0 1E       		.uleb128 0x1e
 7192 08f1 F0       		.byte	0xf0
 7193 08f2 0A       		.byte	0xa
 7194 08f3 5502     		.2byte	0x255
 7195 08f5 12090000 		.4byte	0x912
 7196 08f9 1F       		.uleb128 0x1f
 7197 08fa C0030000 		.4byte	.LASF83
 7198 08fe 0A       		.byte	0xa
 7199 08ff 6C02     		.2byte	0x26c
 7200 0901 7B070000 		.4byte	0x77b
 7201 0905 1F       		.uleb128 0x1f
 7202 0906 BF000000 		.4byte	.LASF135
 7203 090a 0A       		.byte	0xa
 7204 090b 7502     		.2byte	0x275
 7205 090d AC080000 		.4byte	0x8ac
 7206 0911 00       		.byte	0
 7207 0912 0B       		.uleb128 0xb
 7208 0913 4A060000 		.4byte	0x64a
 7209 0917 22090000 		.4byte	0x922
 7210 091b 0C       		.uleb128 0xc
 7211 091c D9000000 		.4byte	0xd9
 7212 0920 18       		.byte	0x18
 7213 0921 00       		.byte	0
 7214 0922 20       		.uleb128 0x20
 7215 0923 2D090000 		.4byte	0x92d
 7216 0927 18       		.uleb128 0x18
 7217 0928 07050000 		.4byte	0x507
 7218 092c 00       		.byte	0
 7219 092d 0A       		.uleb128 0xa
 7220 092e 04       		.byte	0x4
 7221 092f 22090000 		.4byte	0x922
 7222 0933 0A       		.uleb128 0xa
 7223 0934 04       		.byte	0x4
 7224 0935 61020000 		.4byte	0x261
 7225 0939 20       		.uleb128 0x20
 7226 093a 44090000 		.4byte	0x944
 7227 093e 18       		.uleb128 0x18
 7228 093f 9A000000 		.4byte	0x9a
 7229 0943 00       		.byte	0
 7230 0944 0A       		.uleb128 0xa
 7231 0945 04       		.byte	0x4
 7232 0946 4A090000 		.4byte	0x94a
 7233 094a 0A       		.uleb128 0xa
 7234 094b 04       		.byte	0x4
 7235 094c 39090000 		.4byte	0x939
 7236 0950 0B       		.uleb128 0xb
 7237 0951 E9060000 		.4byte	0x6e9
 7238 0955 60090000 		.4byte	0x960
 7239 0959 0C       		.uleb128 0xc
 7240 095a D9000000 		.4byte	0xd9
 7241 095e 02       		.byte	0x2
 7242 095f 00       		.byte	0
 7243 0960 07       		.uleb128 0x7
ARM GAS  /tmp/cci8Vpl3.s 			page 192


 7244 0961 31020000 		.4byte	.LASF136
 7245 0965 0A       		.byte	0xa
 7246 0966 FD02     		.2byte	0x2fd
 7247 0968 07050000 		.4byte	0x507
 7248 096c 07       		.uleb128 0x7
 7249 096d E3030000 		.4byte	.LASF137
 7250 0971 0A       		.byte	0xa
 7251 0972 FE02     		.2byte	0x2fe
 7252 0974 0D050000 		.4byte	0x50d
 7253 0978 08       		.uleb128 0x8
 7254 0979 530D0000 		.4byte	.LASF138
 7255 097d 0B       		.byte	0xb
 7256 097e 5F       		.byte	0x5f
 7257 097f 44060000 		.4byte	0x644
 7258 0983 02       		.uleb128 0x2
 7259 0984 08       		.byte	0x8
 7260 0985 04       		.byte	0x4
 7261 0986 F9070000 		.4byte	.LASF139
 7262 098a 02       		.uleb128 0x2
 7263 098b 08       		.byte	0x8
 7264 098c 04       		.byte	0x4
 7265 098d 2C0A0000 		.4byte	.LASF140
 7266 0991 21       		.uleb128 0x21
 7267 0992 370B0000 		.4byte	.LASF220
 7268 0996 01       		.byte	0x1
 7269 0997 2C000000 		.4byte	0x2c
 7270 099b 0C       		.byte	0xc
 7271 099c 9902     		.2byte	0x299
 7272 099e BB090000 		.4byte	0x9bb
 7273 09a2 22       		.uleb128 0x22
 7274 09a3 F30D0000 		.4byte	.LASF141
 7275 09a7 7F       		.sleb128 -1
 7276 09a8 23       		.uleb128 0x23
 7277 09a9 7D070000 		.4byte	.LASF142
 7278 09ad 00       		.byte	0
 7279 09ae 23       		.uleb128 0x23
 7280 09af FC0C0000 		.4byte	.LASF143
 7281 09b3 01       		.byte	0x1
 7282 09b4 23       		.uleb128 0x23
 7283 09b5 B40C0000 		.4byte	.LASF144
 7284 09b9 02       		.byte	0x2
 7285 09ba 00       		.byte	0
 7286 09bb 07       		.uleb128 0x7
 7287 09bc 35060000 		.4byte	.LASF145
 7288 09c0 0C       		.byte	0xc
 7289 09c1 A402     		.2byte	0x2a4
 7290 09c3 91090000 		.4byte	0x991
 7291 09c7 0B       		.uleb128 0xb
 7292 09c8 80060000 		.4byte	0x680
 7293 09cc D2090000 		.4byte	0x9d2
 7294 09d0 24       		.uleb128 0x24
 7295 09d1 00       		.byte	0
 7296 09d2 03       		.uleb128 0x3
 7297 09d3 C7090000 		.4byte	0x9c7
 7298 09d7 08       		.uleb128 0x8
 7299 09d8 7C0D0000 		.4byte	.LASF146
 7300 09dc 0D       		.byte	0xd
ARM GAS  /tmp/cci8Vpl3.s 			page 193


 7301 09dd 14       		.byte	0x14
 7302 09de D2090000 		.4byte	0x9d2
 7303 09e2 08       		.uleb128 0x8
 7304 09e3 E6010000 		.4byte	.LASF147
 7305 09e7 0D       		.byte	0xd
 7306 09e8 15       		.byte	0x15
 7307 09e9 9A000000 		.4byte	0x9a
 7308 09ed 13       		.uleb128 0x13
 7309 09ee 4A090000 		.4byte	.LASF148
 7310 09f2 1B       		.byte	0x1b
 7311 09f3 01       		.byte	0x1
 7312 09f4 96       		.byte	0x96
 7313 09f5 3E0B0000 		.4byte	0xb3e
 7314 09f9 12       		.uleb128 0x12
 7315 09fa 84020000 		.4byte	.LASF149
 7316 09fe 01       		.byte	0x1
 7317 09ff 97       		.byte	0x97
 7318 0a00 33000000 		.4byte	0x33
 7319 0a04 00       		.byte	0
 7320 0a05 12       		.uleb128 0x12
 7321 0a06 08090000 		.4byte	.LASF150
 7322 0a0a 01       		.byte	0x1
 7323 0a0b 98       		.byte	0x98
 7324 0a0c 33000000 		.4byte	0x33
 7325 0a10 01       		.byte	0x1
 7326 0a11 14       		.uleb128 0x14
 7327 0a12 6C706600 		.ascii	"lpf\000"
 7328 0a16 01       		.byte	0x1
 7329 0a17 99       		.byte	0x99
 7330 0a18 33000000 		.4byte	0x33
 7331 0a1c 02       		.byte	0x2
 7332 0a1d 12       		.uleb128 0x12
 7333 0a1e 45060000 		.4byte	.LASF151
 7334 0a22 01       		.byte	0x1
 7335 0a23 9A       		.byte	0x9a
 7336 0a24 33000000 		.4byte	0x33
 7337 0a28 03       		.byte	0x3
 7338 0a29 12       		.uleb128 0x12
 7339 0a2a 1E030000 		.4byte	.LASF152
 7340 0a2e 01       		.byte	0x1
 7341 0a2f 9B       		.byte	0x9b
 7342 0a30 33000000 		.4byte	0x33
 7343 0a34 04       		.byte	0x4
 7344 0a35 12       		.uleb128 0x12
 7345 0a36 5A0E0000 		.4byte	.LASF153
 7346 0a3a 01       		.byte	0x1
 7347 0a3b 9C       		.byte	0x9c
 7348 0a3c 33000000 		.4byte	0x33
 7349 0a40 05       		.byte	0x5
 7350 0a41 12       		.uleb128 0x12
 7351 0a42 86050000 		.4byte	.LASF154
 7352 0a46 01       		.byte	0x1
 7353 0a47 9D       		.byte	0x9d
 7354 0a48 33000000 		.4byte	0x33
 7355 0a4c 06       		.byte	0x6
 7356 0a4d 12       		.uleb128 0x12
 7357 0a4e 010B0000 		.4byte	.LASF155
ARM GAS  /tmp/cci8Vpl3.s 			page 194


 7358 0a52 01       		.byte	0x1
 7359 0a53 9E       		.byte	0x9e
 7360 0a54 33000000 		.4byte	0x33
 7361 0a58 07       		.byte	0x7
 7362 0a59 12       		.uleb128 0x12
 7363 0a5a 850E0000 		.4byte	.LASF156
 7364 0a5e 01       		.byte	0x1
 7365 0a5f A4       		.byte	0xa4
 7366 0a60 33000000 		.4byte	0x33
 7367 0a64 08       		.byte	0x8
 7368 0a65 12       		.uleb128 0x12
 7369 0a66 A5010000 		.4byte	.LASF157
 7370 0a6a 01       		.byte	0x1
 7371 0a6b A5       		.byte	0xa5
 7372 0a6c 33000000 		.4byte	0x33
 7373 0a70 09       		.byte	0x9
 7374 0a71 12       		.uleb128 0x12
 7375 0a72 4E070000 		.4byte	.LASF158
 7376 0a76 01       		.byte	0x1
 7377 0a77 A6       		.byte	0xa6
 7378 0a78 33000000 		.4byte	0x33
 7379 0a7c 0A       		.byte	0xa
 7380 0a7d 12       		.uleb128 0x12
 7381 0a7e 540B0000 		.4byte	.LASF159
 7382 0a82 01       		.byte	0x1
 7383 0a83 A7       		.byte	0xa7
 7384 0a84 33000000 		.4byte	0x33
 7385 0a88 0B       		.byte	0xb
 7386 0a89 12       		.uleb128 0x12
 7387 0a8a 900E0000 		.4byte	.LASF160
 7388 0a8e 01       		.byte	0x1
 7389 0a8f A8       		.byte	0xa8
 7390 0a90 33000000 		.4byte	0x33
 7391 0a94 0C       		.byte	0xc
 7392 0a95 12       		.uleb128 0x12
 7393 0a96 BA0D0000 		.4byte	.LASF161
 7394 0a9a 01       		.byte	0x1
 7395 0a9b A9       		.byte	0xa9
 7396 0a9c 33000000 		.4byte	0x33
 7397 0aa0 0D       		.byte	0xd
 7398 0aa1 12       		.uleb128 0x12
 7399 0aa2 870F0000 		.4byte	.LASF162
 7400 0aa6 01       		.byte	0x1
 7401 0aa7 AA       		.byte	0xaa
 7402 0aa8 33000000 		.4byte	0x33
 7403 0aac 0E       		.byte	0xe
 7404 0aad 12       		.uleb128 0x12
 7405 0aae C6040000 		.4byte	.LASF163
 7406 0ab2 01       		.byte	0x1
 7407 0ab3 AB       		.byte	0xab
 7408 0ab4 33000000 		.4byte	0x33
 7409 0ab8 0F       		.byte	0xf
 7410 0ab9 12       		.uleb128 0x12
 7411 0aba 0B020000 		.4byte	.LASF164
 7412 0abe 01       		.byte	0x1
 7413 0abf AC       		.byte	0xac
 7414 0ac0 33000000 		.4byte	0x33
ARM GAS  /tmp/cci8Vpl3.s 			page 195


 7415 0ac4 10       		.byte	0x10
 7416 0ac5 12       		.uleb128 0x12
 7417 0ac6 32030000 		.4byte	.LASF165
 7418 0aca 01       		.byte	0x1
 7419 0acb AD       		.byte	0xad
 7420 0acc 33000000 		.4byte	0x33
 7421 0ad0 11       		.byte	0x11
 7422 0ad1 12       		.uleb128 0x12
 7423 0ad2 FC040000 		.4byte	.LASF166
 7424 0ad6 01       		.byte	0x1
 7425 0ad7 B1       		.byte	0xb1
 7426 0ad8 33000000 		.4byte	0x33
 7427 0adc 12       		.byte	0x12
 7428 0add 12       		.uleb128 0x12
 7429 0ade 07050000 		.4byte	.LASF167
 7430 0ae2 01       		.byte	0x1
 7431 0ae3 B2       		.byte	0xb2
 7432 0ae4 33000000 		.4byte	0x33
 7433 0ae8 13       		.byte	0x13
 7434 0ae9 12       		.uleb128 0x12
 7435 0aea AE0D0000 		.4byte	.LASF168
 7436 0aee 01       		.byte	0x1
 7437 0aef B3       		.byte	0xb3
 7438 0af0 33000000 		.4byte	0x33
 7439 0af4 14       		.byte	0x14
 7440 0af5 12       		.uleb128 0x12
 7441 0af6 1B0F0000 		.4byte	.LASF169
 7442 0afa 01       		.byte	0x1
 7443 0afb B4       		.byte	0xb4
 7444 0afc 33000000 		.4byte	0x33
 7445 0b00 15       		.byte	0x15
 7446 0b01 12       		.uleb128 0x12
 7447 0b02 CA060000 		.4byte	.LASF170
 7448 0b06 01       		.byte	0x1
 7449 0b07 B5       		.byte	0xb5
 7450 0b08 33000000 		.4byte	0x33
 7451 0b0c 16       		.byte	0x16
 7452 0b0d 12       		.uleb128 0x12
 7453 0b0e 77050000 		.4byte	.LASF171
 7454 0b12 01       		.byte	0x1
 7455 0b13 B6       		.byte	0xb6
 7456 0b14 33000000 		.4byte	0x33
 7457 0b18 17       		.byte	0x17
 7458 0b19 12       		.uleb128 0x12
 7459 0b1a 8F050000 		.4byte	.LASF172
 7460 0b1e 01       		.byte	0x1
 7461 0b1f B7       		.byte	0xb7
 7462 0b20 33000000 		.4byte	0x33
 7463 0b24 18       		.byte	0x18
 7464 0b25 12       		.uleb128 0x12
 7465 0b26 B50F0000 		.4byte	.LASF173
 7466 0b2a 01       		.byte	0x1
 7467 0b2b B8       		.byte	0xb8
 7468 0b2c 33000000 		.4byte	0x33
 7469 0b30 19       		.byte	0x19
 7470 0b31 12       		.uleb128 0x12
 7471 0b32 600F0000 		.4byte	.LASF174
ARM GAS  /tmp/cci8Vpl3.s 			page 196


 7472 0b36 01       		.byte	0x1
 7473 0b37 B9       		.byte	0xb9
 7474 0b38 33000000 		.4byte	0x33
 7475 0b3c 1A       		.byte	0x1a
 7476 0b3d 00       		.byte	0
 7477 0b3e 03       		.uleb128 0x3
 7478 0b3f ED090000 		.4byte	0x9ed
 7479 0b43 13       		.uleb128 0x13
 7480 0b44 0E0C0000 		.4byte	.LASF175
 7481 0b48 0C       		.byte	0xc
 7482 0b49 01       		.byte	0x1
 7483 0b4a CC       		.byte	0xcc
 7484 0b4b 980B0000 		.4byte	0xb98
 7485 0b4f 12       		.uleb128 0x12
 7486 0b50 9B080000 		.4byte	.LASF176
 7487 0b54 01       		.byte	0x1
 7488 0b55 CD       		.byte	0xcd
 7489 0b56 33000000 		.4byte	0x33
 7490 0b5a 00       		.byte	0
 7491 0b5b 12       		.uleb128 0x12
 7492 0b5c 7A030000 		.4byte	.LASF177
 7493 0b60 01       		.byte	0x1
 7494 0b61 CE       		.byte	0xce
 7495 0b62 5C000000 		.4byte	0x5c
 7496 0b66 02       		.byte	0x2
 7497 0b67 12       		.uleb128 0x12
 7498 0b68 8C0F0000 		.4byte	.LASF178
 7499 0b6c 01       		.byte	0x1
 7500 0b6d CF       		.byte	0xcf
 7501 0b6e 33000000 		.4byte	0x33
 7502 0b72 04       		.byte	0x4
 7503 0b73 12       		.uleb128 0x12
 7504 0b74 39080000 		.4byte	.LASF179
 7505 0b78 01       		.byte	0x1
 7506 0b79 D0       		.byte	0xd0
 7507 0b7a 5C000000 		.4byte	0x5c
 7508 0b7e 06       		.byte	0x6
 7509 0b7f 12       		.uleb128 0x12
 7510 0b80 D3090000 		.4byte	.LASF180
 7511 0b84 01       		.byte	0x1
 7512 0b85 D1       		.byte	0xd1
 7513 0b86 4A000000 		.4byte	0x4a
 7514 0b8a 08       		.byte	0x8
 7515 0b8b 12       		.uleb128 0x12
 7516 0b8c 0F080000 		.4byte	.LASF181
 7517 0b90 01       		.byte	0x1
 7518 0b91 D2       		.byte	0xd2
 7519 0b92 5C000000 		.4byte	0x5c
 7520 0b96 0A       		.byte	0xa
 7521 0b97 00       		.byte	0
 7522 0b98 03       		.uleb128 0x3
 7523 0b99 430B0000 		.4byte	0xb43
 7524 0b9d 13       		.uleb128 0x13
 7525 0b9e B1090000 		.4byte	.LASF182
 7526 0ba2 0C       		.byte	0xc
 7527 0ba3 01       		.byte	0x1
 7528 0ba4 DC       		.byte	0xdc
ARM GAS  /tmp/cci8Vpl3.s 			page 197


 7529 0ba5 FE0B0000 		.4byte	0xbfe
 7530 0ba9 12       		.uleb128 0x12
 7531 0baa FC050000 		.4byte	.LASF183
 7532 0bae 01       		.byte	0x1
 7533 0baf DD       		.byte	0xdd
 7534 0bb0 5C000000 		.4byte	0x5c
 7535 0bb4 00       		.byte	0
 7536 0bb5 12       		.uleb128 0x12
 7537 0bb6 AC0B0000 		.4byte	.LASF184
 7538 0bba 01       		.byte	0x1
 7539 0bbb DE       		.byte	0xde
 7540 0bbc 33000000 		.4byte	0x33
 7541 0bc0 02       		.byte	0x2
 7542 0bc1 14       		.uleb128 0x14
 7543 0bc2 6C706600 		.ascii	"lpf\000"
 7544 0bc6 01       		.byte	0x1
 7545 0bc7 DF       		.byte	0xdf
 7546 0bc8 5C000000 		.4byte	0x5c
 7547 0bcc 04       		.byte	0x4
 7548 0bcd 12       		.uleb128 0x12
 7549 0bce C40D0000 		.4byte	.LASF185
 7550 0bd2 01       		.byte	0x1
 7551 0bd3 E0       		.byte	0xe0
 7552 0bd4 5C000000 		.4byte	0x5c
 7553 0bd8 06       		.byte	0x6
 7554 0bd9 12       		.uleb128 0x12
 7555 0bda 27070000 		.4byte	.LASF186
 7556 0bde 01       		.byte	0x1
 7557 0bdf E1       		.byte	0xe1
 7558 0be0 33000000 		.4byte	0x33
 7559 0be4 08       		.byte	0x8
 7560 0be5 12       		.uleb128 0x12
 7561 0be6 B1050000 		.4byte	.LASF187
 7562 0bea 01       		.byte	0x1
 7563 0beb E2       		.byte	0xe2
 7564 0bec 33000000 		.4byte	0x33
 7565 0bf0 09       		.byte	0x9
 7566 0bf1 12       		.uleb128 0x12
 7567 0bf2 AD0C0000 		.4byte	.LASF188
 7568 0bf6 01       		.byte	0x1
 7569 0bf7 E3       		.byte	0xe3
 7570 0bf8 33000000 		.4byte	0x33
 7571 0bfc 0A       		.byte	0xa
 7572 0bfd 00       		.byte	0
 7573 0bfe 13       		.uleb128 0x13
 7574 0bff C8050000 		.4byte	.LASF189
 7575 0c03 20       		.byte	0x20
 7576 0c04 01       		.byte	0x1
 7577 0c05 E9       		.byte	0xe9
 7578 0c06 EB0C0000 		.4byte	0xceb
 7579 0c0a 12       		.uleb128 0x12
 7580 0c0b FC050000 		.4byte	.LASF183
 7581 0c0f 01       		.byte	0x1
 7582 0c10 EB       		.byte	0xeb
 7583 0c11 33000000 		.4byte	0x33
 7584 0c15 00       		.byte	0
 7585 0c16 12       		.uleb128 0x12
ARM GAS  /tmp/cci8Vpl3.s 			page 198


 7586 0c17 AC0B0000 		.4byte	.LASF184
 7587 0c1b 01       		.byte	0x1
 7588 0c1c ED       		.byte	0xed
 7589 0c1d 33000000 		.4byte	0x33
 7590 0c21 01       		.byte	0x1
 7591 0c22 12       		.uleb128 0x12
 7592 0c23 21080000 		.4byte	.LASF190
 7593 0c27 01       		.byte	0x1
 7594 0c28 EF       		.byte	0xef
 7595 0c29 33000000 		.4byte	0x33
 7596 0c2d 02       		.byte	0x2
 7597 0c2e 14       		.uleb128 0x14
 7598 0c2f 6C706600 		.ascii	"lpf\000"
 7599 0c33 01       		.byte	0x1
 7600 0c34 F1       		.byte	0xf1
 7601 0c35 33000000 		.4byte	0x33
 7602 0c39 03       		.byte	0x3
 7603 0c3a 12       		.uleb128 0x12
 7604 0c3b 19080000 		.4byte	.LASF191
 7605 0c3f 01       		.byte	0x1
 7606 0c40 F2       		.byte	0xf2
 7607 0c41 33000000 		.4byte	0x33
 7608 0c45 04       		.byte	0x4
 7609 0c46 12       		.uleb128 0x12
 7610 0c47 C40D0000 		.4byte	.LASF185
 7611 0c4b 01       		.byte	0x1
 7612 0c4c F4       		.byte	0xf4
 7613 0c4d 5C000000 		.4byte	0x5c
 7614 0c51 06       		.byte	0x6
 7615 0c52 12       		.uleb128 0x12
 7616 0c53 0F040000 		.4byte	.LASF192
 7617 0c57 01       		.byte	0x1
 7618 0c58 F6       		.byte	0xf6
 7619 0c59 33000000 		.4byte	0x33
 7620 0c5d 08       		.byte	0x8
 7621 0c5e 12       		.uleb128 0x12
 7622 0c5f C6040000 		.4byte	.LASF163
 7623 0c63 01       		.byte	0x1
 7624 0c64 F8       		.byte	0xf8
 7625 0c65 33000000 		.4byte	0x33
 7626 0c69 09       		.byte	0x9
 7627 0c6a 12       		.uleb128 0x12
 7628 0c6b 32070000 		.4byte	.LASF193
 7629 0c6f 01       		.byte	0x1
 7630 0c70 FA       		.byte	0xfa
 7631 0c71 33000000 		.4byte	0x33
 7632 0c75 0A       		.byte	0xa
 7633 0c76 12       		.uleb128 0x12
 7634 0c77 36010000 		.4byte	.LASF194
 7635 0c7b 01       		.byte	0x1
 7636 0c7c FF       		.byte	0xff
 7637 0c7d 33000000 		.4byte	0x33
 7638 0c81 0B       		.byte	0xb
 7639 0c82 1A       		.uleb128 0x1a
 7640 0c83 910B0000 		.4byte	.LASF195
 7641 0c87 01       		.byte	0x1
 7642 0c88 0101     		.2byte	0x101
ARM GAS  /tmp/cci8Vpl3.s 			page 199


 7643 0c8a 33000000 		.4byte	0x33
 7644 0c8e 0C       		.byte	0xc
 7645 0c8f 1A       		.uleb128 0x1a
 7646 0c90 41010000 		.4byte	.LASF196
 7647 0c94 01       		.byte	0x1
 7648 0c95 0301     		.2byte	0x103
 7649 0c97 33000000 		.4byte	0x33
 7650 0c9b 0D       		.byte	0xd
 7651 0c9c 1A       		.uleb128 0x1a
 7652 0c9d 260A0000 		.4byte	.LASF197
 7653 0ca1 01       		.byte	0x1
 7654 0ca2 0401     		.2byte	0x104
 7655 0ca4 9D0B0000 		.4byte	0xb9d
 7656 0ca8 0E       		.byte	0xe
 7657 0ca9 1A       		.uleb128 0x1a
 7658 0caa B6010000 		.4byte	.LASF198
 7659 0cae 01       		.byte	0x1
 7660 0caf 0601     		.2byte	0x106
 7661 0cb1 33000000 		.4byte	0x33
 7662 0cb5 1A       		.byte	0x1a
 7663 0cb6 1A       		.uleb128 0x1a
 7664 0cb7 A20D0000 		.4byte	.LASF199
 7665 0cbb 01       		.byte	0x1
 7666 0cbc 0801     		.2byte	0x108
 7667 0cbe 33000000 		.4byte	0x33
 7668 0cc2 1B       		.byte	0x1b
 7669 0cc3 1A       		.uleb128 0x1a
 7670 0cc4 AD0C0000 		.4byte	.LASF188
 7671 0cc8 01       		.byte	0x1
 7672 0cc9 0A01     		.2byte	0x10a
 7673 0ccb 33000000 		.4byte	0x33
 7674 0ccf 1C       		.byte	0x1c
 7675 0cd0 1A       		.uleb128 0x1a
 7676 0cd1 2A060000 		.4byte	.LASF200
 7677 0cd5 01       		.byte	0x1
 7678 0cd6 0C01     		.2byte	0x10c
 7679 0cd8 33000000 		.4byte	0x33
 7680 0cdc 1D       		.byte	0x1d
 7681 0cdd 1A       		.uleb128 0x1a
 7682 0cde C30C0000 		.4byte	.LASF201
 7683 0ce2 01       		.byte	0x1
 7684 0ce3 0E01     		.2byte	0x10e
 7685 0ce5 5C000000 		.4byte	0x5c
 7686 0ce9 1E       		.byte	0x1e
 7687 0cea 00       		.byte	0
 7688 0ceb 1C       		.uleb128 0x1c
 7689 0cec B60B0000 		.4byte	.LASF202
 7690 0cf0 28       		.byte	0x28
 7691 0cf1 01       		.byte	0x1
 7692 0cf2 1801     		.2byte	0x118
 7693 0cf4 AF0D0000 		.4byte	0xdaf
 7694 0cf8 1A       		.uleb128 0x1a
 7695 0cf9 C40F0000 		.4byte	.LASF203
 7696 0cfd 01       		.byte	0x1
 7697 0cfe 1901     		.2byte	0x119
 7698 0d00 85000000 		.4byte	0x85
 7699 0d04 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 200


 7700 0d05 1A       		.uleb128 0x1a
 7701 0d06 EE070000 		.4byte	.LASF204
 7702 0d0a 01       		.byte	0x1
 7703 0d0b 1A01     		.2byte	0x11a
 7704 0d0d 85000000 		.4byte	0x85
 7705 0d11 04       		.byte	0x4
 7706 0d12 1A       		.uleb128 0x1a
 7707 0d13 6B0C0000 		.4byte	.LASF205
 7708 0d17 01       		.byte	0x1
 7709 0d18 1B01     		.2byte	0x11b
 7710 0d1a 33000000 		.4byte	0x33
 7711 0d1e 08       		.byte	0x8
 7712 0d1f 1A       		.uleb128 0x1a
 7713 0d20 780C0000 		.4byte	.LASF206
 7714 0d24 01       		.byte	0x1
 7715 0d25 1C01     		.2byte	0x11c
 7716 0d27 33000000 		.4byte	0x33
 7717 0d2b 09       		.byte	0x9
 7718 0d2c 1A       		.uleb128 0x1a
 7719 0d2d B40E0000 		.4byte	.LASF207
 7720 0d31 01       		.byte	0x1
 7721 0d32 1D01     		.2byte	0x11d
 7722 0d34 33000000 		.4byte	0x33
 7723 0d38 0A       		.byte	0xa
 7724 0d39 1A       		.uleb128 0x1a
 7725 0d3a CC0B0000 		.4byte	.LASF208
 7726 0d3e 01       		.byte	0x1
 7727 0d3f 1E01     		.2byte	0x11e
 7728 0d41 33000000 		.4byte	0x33
 7729 0d45 0B       		.byte	0xb
 7730 0d46 1A       		.uleb128 0x1a
 7731 0d47 190D0000 		.4byte	.LASF209
 7732 0d4b 01       		.byte	0x1
 7733 0d4c 1F01     		.2byte	0x11f
 7734 0d4e 5C000000 		.4byte	0x5c
 7735 0d52 0C       		.byte	0xc
 7736 0d53 1A       		.uleb128 0x1a
 7737 0d54 19070000 		.4byte	.LASF210
 7738 0d58 01       		.byte	0x1
 7739 0d59 2001     		.2byte	0x120
 7740 0d5b 33000000 		.4byte	0x33
 7741 0d5f 0E       		.byte	0xe
 7742 0d60 1A       		.uleb128 0x1a
 7743 0d61 FC090000 		.4byte	.LASF211
 7744 0d65 01       		.byte	0x1
 7745 0d66 2101     		.2byte	0x121
 7746 0d68 25000000 		.4byte	0x25
 7747 0d6c 10       		.byte	0x10
 7748 0d6d 1A       		.uleb128 0x1a
 7749 0d6e A0020000 		.4byte	.LASF212
 7750 0d72 01       		.byte	0x1
 7751 0d73 2201     		.2byte	0x122
 7752 0d75 25000000 		.4byte	0x25
 7753 0d79 14       		.byte	0x14
 7754 0d7a 1A       		.uleb128 0x1a
 7755 0d7b 480C0000 		.4byte	.LASF213
 7756 0d7f 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 201


 7757 0d80 2301     		.2byte	0x123
 7758 0d82 25000000 		.4byte	0x25
 7759 0d86 18       		.byte	0x18
 7760 0d87 1A       		.uleb128 0x1a
 7761 0d88 EC000000 		.4byte	.LASF214
 7762 0d8c 01       		.byte	0x1
 7763 0d8d 2401     		.2byte	0x124
 7764 0d8f 25000000 		.4byte	0x25
 7765 0d93 1C       		.byte	0x1c
 7766 0d94 1A       		.uleb128 0x1a
 7767 0d95 6D000000 		.4byte	.LASF215
 7768 0d99 01       		.byte	0x1
 7769 0d9a 2501     		.2byte	0x125
 7770 0d9c 25000000 		.4byte	0x25
 7771 0da0 20       		.byte	0x20
 7772 0da1 1A       		.uleb128 0x1a
 7773 0da2 0B0D0000 		.4byte	.LASF216
 7774 0da6 01       		.byte	0x1
 7775 0da7 2601     		.2byte	0x126
 7776 0da9 25000000 		.4byte	0x25
 7777 0dad 24       		.byte	0x24
 7778 0dae 00       		.byte	0
 7779 0daf 03       		.uleb128 0x3
 7780 0db0 EB0C0000 		.4byte	0xceb
 7781 0db4 1C       		.uleb128 0x1c
 7782 0db5 61050000 		.4byte	.LASF217
 7783 0db9 2C       		.byte	0x2c
 7784 0dba 01       		.byte	0x1
 7785 0dbb 2A01     		.2byte	0x12a
 7786 0dbd F50D0000 		.4byte	0xdf5
 7787 0dc1 25       		.uleb128 0x25
 7788 0dc2 72656700 		.ascii	"reg\000"
 7789 0dc6 01       		.byte	0x1
 7790 0dc7 2B01     		.2byte	0x12b
 7791 0dc9 F50D0000 		.4byte	0xdf5
 7792 0dcd 00       		.byte	0
 7793 0dce 25       		.uleb128 0x25
 7794 0dcf 687700   		.ascii	"hw\000"
 7795 0dd2 01       		.byte	0x1
 7796 0dd3 2C01     		.2byte	0x12c
 7797 0dd5 FB0D0000 		.4byte	0xdfb
 7798 0dd9 04       		.byte	0x4
 7799 0dda 1A       		.uleb128 0x1a
 7800 0ddb A70F0000 		.4byte	.LASF218
 7801 0ddf 01       		.byte	0x1
 7802 0de0 2D01     		.2byte	0x12d
 7803 0de2 FE0B0000 		.4byte	0xbfe
 7804 0de6 08       		.byte	0x8
 7805 0de7 1A       		.uleb128 0x1a
 7806 0de8 73020000 		.4byte	.LASF219
 7807 0dec 01       		.byte	0x1
 7808 0ded 2E01     		.2byte	0x12e
 7809 0def 010E0000 		.4byte	0xe01
 7810 0df3 28       		.byte	0x28
 7811 0df4 00       		.byte	0
 7812 0df5 0A       		.uleb128 0xa
 7813 0df6 04       		.byte	0x4
ARM GAS  /tmp/cci8Vpl3.s 			page 202


 7814 0df7 3E0B0000 		.4byte	0xb3e
 7815 0dfb 0A       		.uleb128 0xa
 7816 0dfc 04       		.byte	0x4
 7817 0dfd 980B0000 		.4byte	0xb98
 7818 0e01 0A       		.uleb128 0xa
 7819 0e02 04       		.byte	0x4
 7820 0e03 AF0D0000 		.4byte	0xdaf
 7821 0e07 21       		.uleb128 0x21
 7822 0e08 E0010000 		.4byte	.LASF221
 7823 0e0c 01       		.byte	0x1
 7824 0e0d 33000000 		.4byte	0x33
 7825 0e11 01       		.byte	0x1
 7826 0e12 3201     		.2byte	0x132
 7827 0e14 4F0E0000 		.4byte	0xe4f
 7828 0e18 23       		.uleb128 0x23
 7829 0e19 6F060000 		.4byte	.LASF222
 7830 0e1d 00       		.byte	0
 7831 0e1e 23       		.uleb128 0x23
 7832 0e1f 130C0000 		.4byte	.LASF223
 7833 0e23 01       		.byte	0x1
 7834 0e24 23       		.uleb128 0x23
 7835 0e25 19090000 		.4byte	.LASF224
 7836 0e29 02       		.byte	0x2
 7837 0e2a 23       		.uleb128 0x23
 7838 0e2b 6C0D0000 		.4byte	.LASF225
 7839 0e2f 03       		.byte	0x3
 7840 0e30 23       		.uleb128 0x23
 7841 0e31 B2060000 		.4byte	.LASF226
 7842 0e35 04       		.byte	0x4
 7843 0e36 23       		.uleb128 0x23
 7844 0e37 C10E0000 		.4byte	.LASF227
 7845 0e3b 05       		.byte	0x5
 7846 0e3c 23       		.uleb128 0x23
 7847 0e3d 6E070000 		.4byte	.LASF228
 7848 0e41 06       		.byte	0x6
 7849 0e42 23       		.uleb128 0x23
 7850 0e43 2B0E0000 		.4byte	.LASF229
 7851 0e47 07       		.byte	0x7
 7852 0e48 23       		.uleb128 0x23
 7853 0e49 83080000 		.4byte	.LASF230
 7854 0e4d 08       		.byte	0x8
 7855 0e4e 00       		.byte	0
 7856 0e4f 21       		.uleb128 0x21
 7857 0e50 860B0000 		.4byte	.LASF231
 7858 0e54 01       		.byte	0x1
 7859 0e55 33000000 		.4byte	0x33
 7860 0e59 01       		.byte	0x1
 7861 0e5a 3F01     		.2byte	0x13f
 7862 0e5c 7F0E0000 		.4byte	0xe7f
 7863 0e60 23       		.uleb128 0x23
 7864 0e61 760E0000 		.4byte	.LASF232
 7865 0e65 00       		.byte	0
 7866 0e66 23       		.uleb128 0x23
 7867 0e67 710B0000 		.4byte	.LASF233
 7868 0e6b 01       		.byte	0x1
 7869 0e6c 23       		.uleb128 0x23
 7870 0e6d 55000000 		.4byte	.LASF234
ARM GAS  /tmp/cci8Vpl3.s 			page 203


 7871 0e71 02       		.byte	0x2
 7872 0e72 23       		.uleb128 0x23
 7873 0e73 1B010000 		.4byte	.LASF235
 7874 0e77 03       		.byte	0x3
 7875 0e78 23       		.uleb128 0x23
 7876 0e79 47030000 		.4byte	.LASF236
 7877 0e7d 04       		.byte	0x4
 7878 0e7e 00       		.byte	0
 7879 0e7f 21       		.uleb128 0x21
 7880 0e80 54030000 		.4byte	.LASF237
 7881 0e84 01       		.byte	0x1
 7882 0e85 33000000 		.4byte	0x33
 7883 0e89 01       		.byte	0x1
 7884 0e8a 4801     		.2byte	0x148
 7885 0e8c AF0E0000 		.4byte	0xeaf
 7886 0e90 23       		.uleb128 0x23
 7887 0e91 4A050000 		.4byte	.LASF238
 7888 0e95 00       		.byte	0
 7889 0e96 23       		.uleb128 0x23
 7890 0e97 05060000 		.4byte	.LASF239
 7891 0e9b 01       		.byte	0x1
 7892 0e9c 23       		.uleb128 0x23
 7893 0e9d 4D080000 		.4byte	.LASF240
 7894 0ea1 02       		.byte	0x2
 7895 0ea2 23       		.uleb128 0x23
 7896 0ea3 78020000 		.4byte	.LASF241
 7897 0ea7 03       		.byte	0x3
 7898 0ea8 23       		.uleb128 0x23
 7899 0ea9 2B050000 		.4byte	.LASF242
 7900 0ead 04       		.byte	0x4
 7901 0eae 00       		.byte	0
 7902 0eaf 21       		.uleb128 0x21
 7903 0eb0 620E0000 		.4byte	.LASF243
 7904 0eb4 01       		.byte	0x1
 7905 0eb5 33000000 		.4byte	0x33
 7906 0eb9 01       		.byte	0x1
 7907 0eba 5101     		.2byte	0x151
 7908 0ebc D30E0000 		.4byte	0xed3
 7909 0ec0 23       		.uleb128 0x23
 7910 0ec1 8B070000 		.4byte	.LASF244
 7911 0ec5 00       		.byte	0
 7912 0ec6 23       		.uleb128 0x23
 7913 0ec7 A10C0000 		.4byte	.LASF245
 7914 0ecb 01       		.byte	0x1
 7915 0ecc 23       		.uleb128 0x23
 7916 0ecd 9D010000 		.4byte	.LASF246
 7917 0ed1 02       		.byte	0x2
 7918 0ed2 00       		.byte	0
 7919 0ed3 21       		.uleb128 0x21
 7920 0ed4 90040000 		.4byte	.LASF247
 7921 0ed8 01       		.byte	0x1
 7922 0ed9 33000000 		.4byte	0x33
 7923 0edd 01       		.byte	0x1
 7924 0ede 5801     		.2byte	0x158
 7925 0ee0 FD0E0000 		.4byte	0xefd
 7926 0ee4 23       		.uleb128 0x23
 7927 0ee5 930D0000 		.4byte	.LASF248
ARM GAS  /tmp/cci8Vpl3.s 			page 204


 7928 0ee9 00       		.byte	0
 7929 0eea 23       		.uleb128 0x23
 7930 0eeb 55050000 		.4byte	.LASF249
 7931 0eef 01       		.byte	0x1
 7932 0ef0 23       		.uleb128 0x23
 7933 0ef1 040A0000 		.4byte	.LASF250
 7934 0ef5 02       		.byte	0x2
 7935 0ef6 23       		.uleb128 0x23
 7936 0ef7 380A0000 		.4byte	.LASF251
 7937 0efb 03       		.byte	0x3
 7938 0efc 00       		.byte	0
 7939 0efd 26       		.uleb128 0x26
 7940 0efe 687700   		.ascii	"hw\000"
 7941 0f01 01       		.byte	0x1
 7942 0f02 F501     		.2byte	0x1f5
 7943 0f04 980B0000 		.4byte	0xb98
 7944 0f08 05       		.uleb128 0x5
 7945 0f09 03       		.byte	0x3
 7946 0f0a 00000000 		.4byte	hw
 7947 0f0e 26       		.uleb128 0x26
 7948 0f0f 72656700 		.ascii	"reg\000"
 7949 0f13 01       		.byte	0x1
 7950 0f14 FD01     		.2byte	0x1fd
 7951 0f16 3E0B0000 		.4byte	0xb3e
 7952 0f1a 05       		.uleb128 0x5
 7953 0f1b 03       		.byte	0x3
 7954 0f1c 00000000 		.4byte	reg
 7955 0f20 27       		.uleb128 0x27
 7956 0f21 73020000 		.4byte	.LASF219
 7957 0f25 01       		.byte	0x1
 7958 0f26 2B02     		.2byte	0x22b
 7959 0f28 AF0D0000 		.4byte	0xdaf
 7960 0f2c 05       		.uleb128 0x5
 7961 0f2d 03       		.byte	0x3
 7962 0f2e 00000000 		.4byte	test
 7963 0f32 28       		.uleb128 0x28
 7964 0f33 737400   		.ascii	"st\000"
 7965 0f36 01       		.byte	0x1
 7966 0f37 4102     		.2byte	0x241
 7967 0f39 B40D0000 		.4byte	0xdb4
 7968 0f3d 05       		.uleb128 0x5
 7969 0f3e 03       		.byte	0x3
 7970 0f3f 00000000 		.4byte	st
 7971 0f43 29       		.uleb128 0x29
 7972 0f44 33000000 		.4byte	.LASF351
 7973 0f48 0E       		.byte	0xe
 7974 0f49 78       		.byte	0x78
 7975 0f4a 641E0000 		.4byte	.LFB109
 7976 0f4e 02000000 		.4byte	.LFE109-.LFB109
 7977 0f52 01       		.uleb128 0x1
 7978 0f53 9C       		.byte	0x9c
 7979 0f54 670F0000 		.4byte	0xf67
 7980 0f58 2A       		.uleb128 0x2a
 7981 0f59 480F0000 		.4byte	.LASF252
 7982 0f5d 01       		.byte	0x1
 7983 0f5e 220B     		.2byte	0xb22
 7984 0f60 670F0000 		.4byte	0xf67
ARM GAS  /tmp/cci8Vpl3.s 			page 205


 7985 0f64 01       		.uleb128 0x1
 7986 0f65 50       		.byte	0x50
 7987 0f66 00       		.byte	0
 7988 0f67 0A       		.uleb128 0xa
 7989 0f68 04       		.byte	0x4
 7990 0f69 85000000 		.4byte	0x85
 7991 0f6d 2B       		.uleb128 0x2b
 7992 0f6e 790A0000 		.4byte	.LASF257
 7993 0f72 0E       		.byte	0xe
 7994 0f73 3D       		.byte	0x3d
 7995 0f74 9A000000 		.4byte	0x9a
 7996 0f78 781C0000 		.4byte	.LFB108
 7997 0f7c EC010000 		.4byte	.LFE108-.LFB108
 7998 0f80 01       		.uleb128 0x1
 7999 0f81 9C       		.byte	0x9c
 8000 0f82 8D110000 		.4byte	0x118d
 8001 0f86 2C       		.uleb128 0x2c
 8002 0f87 F5050000 		.4byte	.LASF253
 8003 0f8b 01       		.byte	0x1
 8004 0f8c 530A     		.2byte	0xa53
 8005 0f8e 5C000000 		.4byte	0x5c
 8006 0f92 00000000 		.4byte	.LLST100
 8007 0f96 2C       		.uleb128 0x2c
 8008 0f97 480F0000 		.4byte	.LASF252
 8009 0f9b 01       		.byte	0x1
 8010 0f9c 530A     		.2byte	0xa53
 8011 0f9e 33000000 		.4byte	0x33
 8012 0fa2 53000000 		.4byte	.LLST101
 8013 0fa6 2C       		.uleb128 0x2c
 8014 0fa7 25000000 		.4byte	.LASF254
 8015 0fab 01       		.byte	0x1
 8016 0fac 540A     		.2byte	0xa54
 8017 0fae 33000000 		.4byte	0x33
 8018 0fb2 AB000000 		.4byte	.LLST102
 8019 0fb6 2D       		.uleb128 0x2d
 8020 0fb7 B00F0000 		.4byte	.LASF255
 8021 0fbb 01       		.byte	0x1
 8022 0fbc 560A     		.2byte	0xa56
 8023 0fbe C9060000 		.4byte	0x6c9
 8024 0fc2 02       		.uleb128 0x2
 8025 0fc3 91       		.byte	0x91
 8026 0fc4 64       		.sleb128 -28
 8027 0fc5 2E       		.uleb128 0x2e
 8028 0fc6 DA0B0000 		.4byte	.LASF281
 8029 0fca 01       		.byte	0x1
 8030 0fcb 050B     		.2byte	0xb05
 8031 0fcd 481D0000 		.4byte	.L557
 8032 0fd1 2F       		.uleb128 0x2f
 8033 0fd2 60000000 		.4byte	.Ldebug_ranges0+0x60
 8034 0fd6 1E110000 		.4byte	0x111e
 8035 0fda 30       		.uleb128 0x30
 8036 0fdb 08030000 		.4byte	.LASF256
 8037 0fdf 01       		.byte	0x1
 8038 0fe0 590A     		.2byte	0xa59
 8039 0fe2 33000000 		.4byte	0x33
 8040 0fe6 17010000 		.4byte	.LLST104
 8041 0fea 31       		.uleb128 0x31
ARM GAS  /tmp/cci8Vpl3.s 			page 206


 8042 0feb CA210000 		.4byte	0x21ca
 8043 0fef 001D0000 		.4byte	.LBB32
 8044 0ff3 04000000 		.4byte	.LBE32-.LBB32
 8045 0ff7 01       		.byte	0x1
 8046 0ff8 880A     		.2byte	0xa88
 8047 0ffa 08100000 		.4byte	0x1008
 8048 0ffe 32       		.uleb128 0x32
 8049 0fff DA210000 		.4byte	0x21da
 8050 1003 4B010000 		.4byte	.LLST105
 8051 1007 00       		.byte	0
 8052 1008 33       		.uleb128 0x33
 8053 1009 E41C0000 		.4byte	.LVL533
 8054 100d 6E240000 		.4byte	0x246e
 8055 1011 1C100000 		.4byte	0x101c
 8056 1015 34       		.uleb128 0x34
 8057 1016 01       		.uleb128 0x1
 8058 1017 50       		.byte	0x50
 8059 1018 02       		.uleb128 0x2
 8060 1019 75       		.byte	0x75
 8061 101a 16       		.sleb128 22
 8062 101b 00       		.byte	0
 8063 101c 33       		.uleb128 0x33
 8064 101d EC1C0000 		.4byte	.LVL534
 8065 1021 F6230000 		.4byte	0x23f6
 8066 1025 30100000 		.4byte	0x1030
 8067 1029 34       		.uleb128 0x34
 8068 102a 01       		.uleb128 0x1
 8069 102b 50       		.byte	0x50
 8070 102c 02       		.uleb128 0x2
 8071 102d 75       		.byte	0x75
 8072 102e 18       		.sleb128 24
 8073 102f 00       		.byte	0
 8074 1030 33       		.uleb128 0x33
 8075 1031 F41C0000 		.4byte	.LVL535
 8076 1035 7E230000 		.4byte	0x237e
 8077 1039 44100000 		.4byte	0x1044
 8078 103d 34       		.uleb128 0x34
 8079 103e 01       		.uleb128 0x1
 8080 103f 50       		.byte	0x50
 8081 1040 02       		.uleb128 0x2
 8082 1041 75       		.byte	0x75
 8083 1042 1A       		.sleb128 26
 8084 1043 00       		.byte	0
 8085 1044 33       		.uleb128 0x33
 8086 1045 FC1C0000 		.4byte	.LVL536
 8087 1049 06230000 		.4byte	0x2306
 8088 104d 58100000 		.4byte	0x1058
 8089 1051 34       		.uleb128 0x34
 8090 1052 01       		.uleb128 0x1
 8091 1053 50       		.byte	0x50
 8092 1054 02       		.uleb128 0x2
 8093 1055 75       		.byte	0x75
 8094 1056 1C       		.sleb128 28
 8095 1057 00       		.byte	0
 8096 1058 33       		.uleb128 0x33
 8097 1059 0A1D0000 		.4byte	.LVL539
 8098 105d CA2A0000 		.4byte	0x2aca
ARM GAS  /tmp/cci8Vpl3.s 			page 207


 8099 1061 6B100000 		.4byte	0x106b
 8100 1065 34       		.uleb128 0x34
 8101 1066 01       		.uleb128 0x1
 8102 1067 50       		.byte	0x50
 8103 1068 01       		.uleb128 0x1
 8104 1069 30       		.byte	0x30
 8105 106a 00       		.byte	0
 8106 106b 33       		.uleb128 0x33
 8107 106c 101D0000 		.4byte	.LVL540
 8108 1070 D1270000 		.4byte	0x27d1
 8109 1074 7E100000 		.4byte	0x107e
 8110 1078 34       		.uleb128 0x34
 8111 1079 01       		.uleb128 0x1
 8112 107a 50       		.byte	0x50
 8113 107b 01       		.uleb128 0x1
 8114 107c 30       		.byte	0x30
 8115 107d 00       		.byte	0
 8116 107e 33       		.uleb128 0x33
 8117 107f 281D0000 		.4byte	.LVL541
 8118 1083 4F2B0000 		.4byte	0x2b4f
 8119 1087 97100000 		.4byte	0x1097
 8120 108b 34       		.uleb128 0x34
 8121 108c 01       		.uleb128 0x1
 8122 108d 52       		.byte	0x52
 8123 108e 01       		.uleb128 0x1
 8124 108f 31       		.byte	0x31
 8125 1090 34       		.uleb128 0x34
 8126 1091 01       		.uleb128 0x1
 8127 1092 53       		.byte	0x53
 8128 1093 02       		.uleb128 0x2
 8129 1094 91       		.byte	0x91
 8130 1095 64       		.sleb128 -28
 8131 1096 00       		.byte	0
 8132 1097 33       		.uleb128 0x33
 8133 1098 461D0000 		.4byte	.LVL542
 8134 109c 4F2B0000 		.4byte	0x2b4f
 8135 10a0 B0100000 		.4byte	0x10b0
 8136 10a4 34       		.uleb128 0x34
 8137 10a5 01       		.uleb128 0x1
 8138 10a6 52       		.byte	0x52
 8139 10a7 01       		.uleb128 0x1
 8140 10a8 31       		.byte	0x31
 8141 10a9 34       		.uleb128 0x34
 8142 10aa 01       		.uleb128 0x1
 8143 10ab 53       		.byte	0x53
 8144 10ac 02       		.uleb128 0x2
 8145 10ad 91       		.byte	0x91
 8146 10ae 64       		.sleb128 -28
 8147 10af 00       		.byte	0
 8148 10b0 33       		.uleb128 0x33
 8149 10b1 A21D0000 		.4byte	.LVL553
 8150 10b5 25120000 		.4byte	0x1225
 8151 10b9 C3100000 		.4byte	0x10c3
 8152 10bd 34       		.uleb128 0x34
 8153 10be 01       		.uleb128 0x1
 8154 10bf 50       		.byte	0x50
 8155 10c0 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 208


 8156 10c1 30       		.byte	0x30
 8157 10c2 00       		.byte	0
 8158 10c3 33       		.uleb128 0x33
 8159 10c4 C61D0000 		.4byte	.LVL554
 8160 10c8 4F2B0000 		.4byte	0x2b4f
 8161 10cc DC100000 		.4byte	0x10dc
 8162 10d0 34       		.uleb128 0x34
 8163 10d1 01       		.uleb128 0x1
 8164 10d2 52       		.byte	0x52
 8165 10d3 01       		.uleb128 0x1
 8166 10d4 32       		.byte	0x32
 8167 10d5 34       		.uleb128 0x34
 8168 10d6 01       		.uleb128 0x1
 8169 10d7 53       		.byte	0x53
 8170 10d8 02       		.uleb128 0x2
 8171 10d9 91       		.byte	0x91
 8172 10da 64       		.sleb128 -28
 8173 10db 00       		.byte	0
 8174 10dc 33       		.uleb128 0x33
 8175 10dd D01D0000 		.4byte	.LVL555
 8176 10e1 5A2B0000 		.4byte	0x2b5a
 8177 10e5 EF100000 		.4byte	0x10ef
 8178 10e9 34       		.uleb128 0x34
 8179 10ea 01       		.uleb128 0x1
 8180 10eb 50       		.byte	0x50
 8181 10ec 01       		.uleb128 0x1
 8182 10ed 35       		.byte	0x35
 8183 10ee 00       		.byte	0
 8184 10ef 33       		.uleb128 0x33
 8185 10f0 EE1D0000 		.4byte	.LVL557
 8186 10f4 4F2B0000 		.4byte	0x2b4f
 8187 10f8 08110000 		.4byte	0x1108
 8188 10fc 34       		.uleb128 0x34
 8189 10fd 01       		.uleb128 0x1
 8190 10fe 52       		.byte	0x52
 8191 10ff 01       		.uleb128 0x1
 8192 1100 31       		.byte	0x31
 8193 1101 34       		.uleb128 0x34
 8194 1102 01       		.uleb128 0x1
 8195 1103 53       		.byte	0x53
 8196 1104 02       		.uleb128 0x2
 8197 1105 91       		.byte	0x91
 8198 1106 64       		.sleb128 -28
 8199 1107 00       		.byte	0
 8200 1108 35       		.uleb128 0x35
 8201 1109 261E0000 		.4byte	.LVL558
 8202 110d 4F2B0000 		.4byte	0x2b4f
 8203 1111 34       		.uleb128 0x34
 8204 1112 01       		.uleb128 0x1
 8205 1113 52       		.byte	0x52
 8206 1114 01       		.uleb128 0x1
 8207 1115 32       		.byte	0x32
 8208 1116 34       		.uleb128 0x34
 8209 1117 01       		.uleb128 0x1
 8210 1118 53       		.byte	0x53
 8211 1119 02       		.uleb128 0x2
 8212 111a 91       		.byte	0x91
ARM GAS  /tmp/cci8Vpl3.s 			page 209


 8213 111b 64       		.sleb128 -28
 8214 111c 00       		.byte	0
 8215 111d 00       		.byte	0
 8216 111e 36       		.uleb128 0x36
 8217 111f 7E1C0000 		.4byte	.LBB30
 8218 1123 26000000 		.4byte	.LBE30-.LBB30
 8219 1127 47110000 		.4byte	0x1147
 8220 112b 37       		.uleb128 0x37
 8221 112c 696900   		.ascii	"ii\000"
 8222 112f 01       		.byte	0x1
 8223 1130 FC0A     		.2byte	0xafc
 8224 1132 9A000000 		.4byte	0x9a
 8225 1136 63010000 		.4byte	.LLST103
 8226 113a 38       		.uleb128 0x38
 8227 113b 28030000 		.4byte	.LASF290
 8228 113f 01       		.byte	0x1
 8229 1140 FD0A     		.2byte	0xafd
 8230 1142 44060000 		.4byte	0x644
 8231 1146 00       		.byte	0
 8232 1147 39       		.uleb128 0x39
 8233 1148 661D0000 		.4byte	.LVL544
 8234 114c 77200000 		.4byte	0x2077
 8235 1150 39       		.uleb128 0x39
 8236 1151 6C1D0000 		.4byte	.LVL545
 8237 1155 20240000 		.4byte	0x2420
 8238 1159 39       		.uleb128 0x39
 8239 115a 721D0000 		.4byte	.LVL546
 8240 115e A8230000 		.4byte	0x23a8
 8241 1162 39       		.uleb128 0x39
 8242 1163 781D0000 		.4byte	.LVL547
 8243 1167 30230000 		.4byte	0x2330
 8244 116b 39       		.uleb128 0x39
 8245 116c 7E1D0000 		.4byte	.LVL548
 8246 1170 8F220000 		.4byte	0x228f
 8247 1174 39       		.uleb128 0x39
 8248 1175 841D0000 		.4byte	.LVL549
 8249 1179 48210000 		.4byte	0x2148
 8250 117d 35       		.uleb128 0x35
 8251 117e 501E0000 		.4byte	.LVL560
 8252 1182 25120000 		.4byte	0x1225
 8253 1186 34       		.uleb128 0x34
 8254 1187 01       		.uleb128 0x1
 8255 1188 50       		.byte	0x50
 8256 1189 01       		.uleb128 0x1
 8257 118a 31       		.byte	0x31
 8258 118b 00       		.byte	0
 8259 118c 00       		.byte	0
 8260 118d 2B       		.uleb128 0x2b
 8261 118e AD080000 		.4byte	.LASF258
 8262 1192 0E       		.byte	0xe
 8263 1193 4E       		.byte	0x4e
 8264 1194 9A000000 		.4byte	0x9a
 8265 1198 721C0000 		.4byte	.LFB107
 8266 119c 06000000 		.4byte	.LFE107-.LFB107
 8267 11a0 01       		.uleb128 0x1
 8268 11a1 9C       		.byte	0x9c
 8269 11a2 B7110000 		.4byte	0x11b7
ARM GAS  /tmp/cci8Vpl3.s 			page 210


 8270 11a6 3A       		.uleb128 0x3a
 8271 11a7 66737200 		.ascii	"fsr\000"
 8272 11ab 01       		.byte	0x1
 8273 11ac 1D0A     		.2byte	0xa1d
 8274 11ae B7110000 		.4byte	0x11b7
 8275 11b2 B0010000 		.4byte	.LLST99
 8276 11b6 00       		.byte	0
 8277 11b7 0A       		.uleb128 0xa
 8278 11b8 04       		.byte	0x4
 8279 11b9 5C000000 		.4byte	0x5c
 8280 11bd 2B       		.uleb128 0x2b
 8281 11be 89010000 		.4byte	.LASF259
 8282 11c2 0E       		.byte	0xe
 8283 11c3 63       		.byte	0x63
 8284 11c4 9A000000 		.4byte	0x9a
 8285 11c8 6C1C0000 		.4byte	.LFB106
 8286 11cc 06000000 		.4byte	.LFE106-.LFB106
 8287 11d0 01       		.uleb128 0x1
 8288 11d1 9C       		.byte	0x9c
 8289 11d2 F5110000 		.4byte	0x11f5
 8290 11d6 2C       		.uleb128 0x2c
 8291 11d7 B00F0000 		.4byte	.LASF255
 8292 11db 01       		.byte	0x1
 8293 11dc E809     		.2byte	0x9e8
 8294 11de F5110000 		.4byte	0x11f5
 8295 11e2 D1010000 		.4byte	.LLST98
 8296 11e6 2A       		.uleb128 0x2a
 8297 11e7 3D030000 		.4byte	.LASF260
 8298 11eb 01       		.byte	0x1
 8299 11ec E809     		.2byte	0x9e8
 8300 11ee 670F0000 		.4byte	0xf67
 8301 11f2 01       		.uleb128 0x1
 8302 11f3 51       		.byte	0x51
 8303 11f4 00       		.byte	0
 8304 11f5 0A       		.uleb128 0xa
 8305 11f6 04       		.byte	0x4
 8306 11f7 4A000000 		.4byte	0x4a
 8307 11fb 2B       		.uleb128 0x2b
 8308 11fc 60030000 		.4byte	.LASF261
 8309 1200 0E       		.byte	0xe
 8310 1201 43       		.byte	0x43
 8311 1202 9A000000 		.4byte	0x9a
 8312 1206 5C1C0000 		.4byte	.LFB105
 8313 120a 10000000 		.4byte	.LFE105-.LFB105
 8314 120e 01       		.uleb128 0x1
 8315 120f 9C       		.byte	0x9c
 8316 1210 25120000 		.4byte	0x1225
 8317 1214 2C       		.uleb128 0x2c
 8318 1215 22060000 		.4byte	.LASF262
 8319 1219 01       		.byte	0x1
 8320 121a 7109     		.2byte	0x971
 8321 121c B9030000 		.4byte	0x3b9
 8322 1220 F2010000 		.4byte	.LLST97
 8323 1224 00       		.byte	0
 8324 1225 2B       		.uleb128 0x2b
 8325 1226 FC000000 		.4byte	.LASF263
 8326 122a 0E       		.byte	0xe
ARM GAS  /tmp/cci8Vpl3.s 			page 211


 8327 122b 42       		.byte	0x42
 8328 122c 9A000000 		.4byte	0x9a
 8329 1230 78180000 		.4byte	.LFB104
 8330 1234 90000000 		.4byte	.LFE104-.LFB104
 8331 1238 01       		.uleb128 0x1
 8332 1239 9C       		.byte	0x9c
 8333 123a 03130000 		.4byte	0x1303
 8334 123e 2C       		.uleb128 0x2c
 8335 123f CC070000 		.4byte	.LASF264
 8336 1243 01       		.byte	0x1
 8337 1244 4A09     		.2byte	0x94a
 8338 1246 33000000 		.4byte	0x33
 8339 124a 13020000 		.4byte	.LLST71
 8340 124e 28       		.uleb128 0x28
 8341 124f 746D7000 		.ascii	"tmp\000"
 8342 1253 01       		.byte	0x1
 8343 1254 4C09     		.2byte	0x94c
 8344 1256 33000000 		.4byte	0x33
 8345 125a 02       		.uleb128 0x2
 8346 125b 91       		.byte	0x91
 8347 125c 6F       		.sleb128 -17
 8348 125d 33       		.uleb128 0x33
 8349 125e 98180000 		.4byte	.LVL407
 8350 1262 CA2A0000 		.4byte	0x2aca
 8351 1266 70120000 		.4byte	0x1270
 8352 126a 34       		.uleb128 0x34
 8353 126b 01       		.uleb128 0x1
 8354 126c 50       		.byte	0x50
 8355 126d 01       		.uleb128 0x1
 8356 126e 30       		.byte	0x30
 8357 126f 00       		.byte	0
 8358 1270 33       		.uleb128 0x33
 8359 1271 9E180000 		.4byte	.LVL408
 8360 1275 7C1D0000 		.4byte	0x1d7c
 8361 1279 83120000 		.4byte	0x1283
 8362 127d 34       		.uleb128 0x34
 8363 127e 01       		.uleb128 0x1
 8364 127f 50       		.byte	0x50
 8365 1280 01       		.uleb128 0x1
 8366 1281 30       		.byte	0x30
 8367 1282 00       		.byte	0
 8368 1283 39       		.uleb128 0x39
 8369 1284 A6180000 		.4byte	.LVL409
 8370 1288 8F220000 		.4byte	0x228f
 8371 128c 33       		.uleb128 0x33
 8372 128d BA180000 		.4byte	.LVL410
 8373 1291 4F2B0000 		.4byte	0x2b4f
 8374 1295 AB120000 		.4byte	0x12ab
 8375 1299 34       		.uleb128 0x34
 8376 129a 01       		.uleb128 0x1
 8377 129b 51       		.byte	0x51
 8378 129c 02       		.uleb128 0x2
 8379 129d 08       		.byte	0x8
 8380 129e 23       		.byte	0x23
 8381 129f 34       		.uleb128 0x34
 8382 12a0 01       		.uleb128 0x1
 8383 12a1 52       		.byte	0x52
ARM GAS  /tmp/cci8Vpl3.s 			page 212


 8384 12a2 01       		.uleb128 0x1
 8385 12a3 31       		.byte	0x31
 8386 12a4 34       		.uleb128 0x34
 8387 12a5 01       		.uleb128 0x1
 8388 12a6 53       		.byte	0x53
 8389 12a7 02       		.uleb128 0x2
 8390 12a8 91       		.byte	0x91
 8391 12a9 6F       		.sleb128 -17
 8392 12aa 00       		.byte	0
 8393 12ab 33       		.uleb128 0x33
 8394 12ac C4180000 		.4byte	.LVL411
 8395 12b0 CA2A0000 		.4byte	0x2aca
 8396 12b4 BE120000 		.4byte	0x12be
 8397 12b8 34       		.uleb128 0x34
 8398 12b9 01       		.uleb128 0x1
 8399 12ba 50       		.byte	0x50
 8400 12bb 01       		.uleb128 0x1
 8401 12bc 31       		.byte	0x31
 8402 12bd 00       		.byte	0
 8403 12be 39       		.uleb128 0x39
 8404 12bf C8180000 		.4byte	.LVL412
 8405 12c3 98240000 		.4byte	0x2498
 8406 12c7 33       		.uleb128 0x33
 8407 12c8 D4180000 		.4byte	.LVL415
 8408 12cc CA2A0000 		.4byte	0x2aca
 8409 12d0 DA120000 		.4byte	0x12da
 8410 12d4 34       		.uleb128 0x34
 8411 12d5 01       		.uleb128 0x1
 8412 12d6 50       		.byte	0x50
 8413 12d7 01       		.uleb128 0x1
 8414 12d8 30       		.byte	0x30
 8415 12d9 00       		.byte	0
 8416 12da 33       		.uleb128 0x33
 8417 12db EA180000 		.4byte	.LVL416
 8418 12df 4F2B0000 		.4byte	0x2b4f
 8419 12e3 F9120000 		.4byte	0x12f9
 8420 12e7 34       		.uleb128 0x34
 8421 12e8 01       		.uleb128 0x1
 8422 12e9 51       		.byte	0x51
 8423 12ea 02       		.uleb128 0x2
 8424 12eb 08       		.byte	0x8
 8425 12ec 23       		.byte	0x23
 8426 12ed 34       		.uleb128 0x34
 8427 12ee 01       		.uleb128 0x1
 8428 12ef 52       		.byte	0x52
 8429 12f0 01       		.uleb128 0x1
 8430 12f1 31       		.byte	0x31
 8431 12f2 34       		.uleb128 0x34
 8432 12f3 01       		.uleb128 0x1
 8433 12f4 53       		.byte	0x53
 8434 12f5 02       		.uleb128 0x2
 8435 12f6 91       		.byte	0x91
 8436 12f7 6F       		.sleb128 -17
 8437 12f8 00       		.byte	0
 8438 12f9 39       		.uleb128 0x39
 8439 12fa F4180000 		.4byte	.LVL417
 8440 12fe 98240000 		.4byte	0x2498
ARM GAS  /tmp/cci8Vpl3.s 			page 213


 8441 1302 00       		.byte	0
 8442 1303 2B       		.uleb128 0x2b
 8443 1304 E3050000 		.4byte	.LASF265
 8444 1308 0E       		.byte	0xe
 8445 1309 71       		.byte	0x71
 8446 130a 9A000000 		.4byte	0x9a
 8447 130e C0170000 		.4byte	.LFB103
 8448 1312 B8000000 		.4byte	.LFE103-.LFB103
 8449 1316 01       		.uleb128 0x1
 8450 1317 9C       		.byte	0x9c
 8451 1318 0F140000 		.4byte	0x140f
 8452 131c 2C       		.uleb128 0x2c
 8453 131d 0B0B0000 		.4byte	.LASF266
 8454 1321 01       		.byte	0x1
 8455 1322 2109     		.2byte	0x921
 8456 1324 5C000000 		.4byte	0x5c
 8457 1328 7F020000 		.4byte	.LLST65
 8458 132c 2C       		.uleb128 0x2c
 8459 132d BD040000 		.4byte	.LASF267
 8460 1331 01       		.byte	0x1
 8461 1332 2109     		.2byte	0x921
 8462 1334 0F140000 		.4byte	0x140f
 8463 1338 B9020000 		.4byte	.LLST66
 8464 133c 2C       		.uleb128 0x2c
 8465 133d 7A000000 		.4byte	.LASF268
 8466 1341 01       		.byte	0x1
 8467 1342 2209     		.2byte	0x922
 8468 1344 5C000000 		.4byte	0x5c
 8469 1348 06030000 		.4byte	.LLST67
 8470 134c 2C       		.uleb128 0x2c
 8471 134d C40D0000 		.4byte	.LASF185
 8472 1351 01       		.byte	0x1
 8473 1352 2209     		.2byte	0x922
 8474 1354 5C000000 		.4byte	0x5c
 8475 1358 40030000 		.4byte	.LLST68
 8476 135c 37       		.uleb128 0x37
 8477 135d 696900   		.ascii	"ii\000"
 8478 1360 01       		.byte	0x1
 8479 1361 2409     		.2byte	0x924
 8480 1363 5C000000 		.4byte	0x5c
 8481 1367 93030000 		.4byte	.LLST69
 8482 136b 30       		.uleb128 0x30
 8483 136c B1020000 		.4byte	.LASF269
 8484 1370 01       		.byte	0x1
 8485 1371 2509     		.2byte	0x925
 8486 1373 5C000000 		.4byte	0x5c
 8487 1377 D3030000 		.4byte	.LLST70
 8488 137b 28       		.uleb128 0x28
 8489 137c 63757200 		.ascii	"cur\000"
 8490 1380 01       		.byte	0x1
 8491 1381 2809     		.2byte	0x928
 8492 1383 15140000 		.4byte	0x1415
 8493 1387 02       		.uleb128 0x2
 8494 1388 91       		.byte	0x91
 8495 1389 48       		.sleb128 -56
 8496 138a 28       		.uleb128 0x28
 8497 138b 746D7000 		.ascii	"tmp\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 214


 8498 138f 01       		.byte	0x1
 8499 1390 2809     		.2byte	0x928
 8500 1392 25140000 		.4byte	0x1425
 8501 1396 02       		.uleb128 0x2
 8502 1397 91       		.byte	0x91
 8503 1398 44       		.sleb128 -60
 8504 1399 33       		.uleb128 0x33
 8505 139a F6170000 		.4byte	.LVL390
 8506 139e BD140000 		.4byte	0x14bd
 8507 13a2 B9130000 		.4byte	0x13b9
 8508 13a6 34       		.uleb128 0x34
 8509 13a7 01       		.uleb128 0x1
 8510 13a8 50       		.byte	0x50
 8511 13a9 02       		.uleb128 0x2
 8512 13aa 74       		.byte	0x74
 8513 13ab 00       		.sleb128 0
 8514 13ac 34       		.uleb128 0x34
 8515 13ad 01       		.uleb128 0x1
 8516 13ae 51       		.byte	0x51
 8517 13af 02       		.uleb128 0x2
 8518 13b0 76       		.byte	0x76
 8519 13b1 00       		.sleb128 0
 8520 13b2 34       		.uleb128 0x34
 8521 13b3 01       		.uleb128 0x1
 8522 13b4 52       		.byte	0x52
 8523 13b5 02       		.uleb128 0x2
 8524 13b6 7B       		.byte	0x7b
 8525 13b7 00       		.sleb128 0
 8526 13b8 00       		.byte	0
 8527 13b9 33       		.uleb128 0x33
 8528 13ba 02180000 		.4byte	.LVL391
 8529 13be 35140000 		.4byte	0x1435
 8530 13c2 D9130000 		.4byte	0x13d9
 8531 13c6 34       		.uleb128 0x34
 8532 13c7 01       		.uleb128 0x1
 8533 13c8 50       		.byte	0x50
 8534 13c9 02       		.uleb128 0x2
 8535 13ca 74       		.byte	0x74
 8536 13cb 00       		.sleb128 0
 8537 13cc 34       		.uleb128 0x34
 8538 13cd 01       		.uleb128 0x1
 8539 13ce 51       		.byte	0x51
 8540 13cf 02       		.uleb128 0x2
 8541 13d0 76       		.byte	0x76
 8542 13d1 00       		.sleb128 0
 8543 13d2 34       		.uleb128 0x34
 8544 13d3 01       		.uleb128 0x1
 8545 13d4 52       		.byte	0x52
 8546 13d5 02       		.uleb128 0x2
 8547 13d6 91       		.byte	0x91
 8548 13d7 48       		.sleb128 -56
 8549 13d8 00       		.byte	0
 8550 13d9 33       		.uleb128 0x33
 8551 13da 0E180000 		.4byte	.LVL392
 8552 13de 652B0000 		.4byte	0x2b65
 8553 13e2 F9130000 		.4byte	0x13f9
 8554 13e6 34       		.uleb128 0x34
ARM GAS  /tmp/cci8Vpl3.s 			page 215


 8555 13e7 01       		.uleb128 0x1
 8556 13e8 50       		.byte	0x50
 8557 13e9 02       		.uleb128 0x2
 8558 13ea 7B       		.byte	0x7b
 8559 13eb 00       		.sleb128 0
 8560 13ec 34       		.uleb128 0x34
 8561 13ed 01       		.uleb128 0x1
 8562 13ee 51       		.byte	0x51
 8563 13ef 02       		.uleb128 0x2
 8564 13f0 91       		.byte	0x91
 8565 13f1 48       		.sleb128 -56
 8566 13f2 34       		.uleb128 0x34
 8567 13f3 01       		.uleb128 0x1
 8568 13f4 52       		.byte	0x52
 8569 13f5 02       		.uleb128 0x2
 8570 13f6 76       		.byte	0x76
 8571 13f7 00       		.sleb128 0
 8572 13f8 00       		.byte	0
 8573 13f9 35       		.uleb128 0x35
 8574 13fa 36180000 		.4byte	.LVL396
 8575 13fe 4F2B0000 		.4byte	0x2b4f
 8576 1402 34       		.uleb128 0x34
 8577 1403 01       		.uleb128 0x1
 8578 1404 52       		.byte	0x52
 8579 1405 01       		.uleb128 0x1
 8580 1406 32       		.byte	0x32
 8581 1407 34       		.uleb128 0x34
 8582 1408 01       		.uleb128 0x1
 8583 1409 53       		.byte	0x53
 8584 140a 02       		.uleb128 0x2
 8585 140b 91       		.byte	0x91
 8586 140c 44       		.sleb128 -60
 8587 140d 00       		.byte	0
 8588 140e 00       		.byte	0
 8589 140f 0A       		.uleb128 0xa
 8590 1410 04       		.byte	0x4
 8591 1411 3A000000 		.4byte	0x3a
 8592 1415 0B       		.uleb128 0xb
 8593 1416 33000000 		.4byte	0x33
 8594 141a 25140000 		.4byte	0x1425
 8595 141e 0C       		.uleb128 0xc
 8596 141f D9000000 		.4byte	0xd9
 8597 1423 0F       		.byte	0xf
 8598 1424 00       		.byte	0
 8599 1425 0B       		.uleb128 0xb
 8600 1426 33000000 		.4byte	0x33
 8601 142a 35140000 		.4byte	0x1435
 8602 142e 0C       		.uleb128 0xc
 8603 142f D9000000 		.4byte	0xd9
 8604 1433 01       		.byte	0x1
 8605 1434 00       		.byte	0
 8606 1435 2B       		.uleb128 0x2b
 8607 1436 A0080000 		.4byte	.LASF270
 8608 143a 0E       		.byte	0xe
 8609 143b 6F       		.byte	0x6f
 8610 143c 9A000000 		.4byte	0x9a
 8611 1440 48170000 		.4byte	.LFB102
ARM GAS  /tmp/cci8Vpl3.s 			page 216


 8612 1444 78000000 		.4byte	.LFE102-.LFB102
 8613 1448 01       		.uleb128 0x1
 8614 1449 9C       		.byte	0x9c
 8615 144a BD140000 		.4byte	0x14bd
 8616 144e 2C       		.uleb128 0x2c
 8617 144f EB090000 		.4byte	.LASF271
 8618 1453 01       		.byte	0x1
 8619 1454 0109     		.2byte	0x901
 8620 1456 5C000000 		.4byte	0x5c
 8621 145a FC030000 		.4byte	.LLST62
 8622 145e 2C       		.uleb128 0x2c
 8623 145f 0B0B0000 		.4byte	.LASF266
 8624 1463 01       		.byte	0x1
 8625 1464 0109     		.2byte	0x901
 8626 1466 5C000000 		.4byte	0x5c
 8627 146a 4F040000 		.4byte	.LLST63
 8628 146e 2C       		.uleb128 0x2c
 8629 146f B00F0000 		.4byte	.LASF255
 8630 1473 01       		.byte	0x1
 8631 1474 0209     		.2byte	0x902
 8632 1476 B9030000 		.4byte	0x3b9
 8633 147a 89040000 		.4byte	.LLST64
 8634 147e 28       		.uleb128 0x28
 8635 147f 746D7000 		.ascii	"tmp\000"
 8636 1483 01       		.byte	0x1
 8637 1484 0409     		.2byte	0x904
 8638 1486 25140000 		.4byte	0x1425
 8639 148a 02       		.uleb128 0x2
 8640 148b 91       		.byte	0x91
 8641 148c 6C       		.sleb128 -20
 8642 148d 33       		.uleb128 0x33
 8643 148e 82170000 		.4byte	.LVL379
 8644 1492 4F2B0000 		.4byte	0x2b4f
 8645 1496 A6140000 		.4byte	0x14a6
 8646 149a 34       		.uleb128 0x34
 8647 149b 01       		.uleb128 0x1
 8648 149c 52       		.byte	0x52
 8649 149d 01       		.uleb128 0x1
 8650 149e 32       		.byte	0x32
 8651 149f 34       		.uleb128 0x34
 8652 14a0 01       		.uleb128 0x1
 8653 14a1 53       		.byte	0x53
 8654 14a2 02       		.uleb128 0x2
 8655 14a3 91       		.byte	0x91
 8656 14a4 6C       		.sleb128 -20
 8657 14a5 00       		.byte	0
 8658 14a6 35       		.uleb128 0x35
 8659 14a7 96170000 		.4byte	.LVL380
 8660 14ab 702B0000 		.4byte	0x2b70
 8661 14af 34       		.uleb128 0x34
 8662 14b0 01       		.uleb128 0x1
 8663 14b1 52       		.byte	0x52
 8664 14b2 02       		.uleb128 0x2
 8665 14b3 74       		.byte	0x74
 8666 14b4 00       		.sleb128 0
 8667 14b5 34       		.uleb128 0x34
 8668 14b6 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 217


 8669 14b7 53       		.byte	0x53
 8670 14b8 02       		.uleb128 0x2
 8671 14b9 76       		.byte	0x76
 8672 14ba 00       		.sleb128 0
 8673 14bb 00       		.byte	0
 8674 14bc 00       		.byte	0
 8675 14bd 2B       		.uleb128 0x2b
 8676 14be AD0A0000 		.4byte	.LASF272
 8677 14c2 0E       		.byte	0xe
 8678 14c3 6D       		.byte	0x6d
 8679 14c4 9A000000 		.4byte	0x9a
 8680 14c8 D0160000 		.4byte	.LFB101
 8681 14cc 78000000 		.4byte	.LFE101-.LFB101
 8682 14d0 01       		.uleb128 0x1
 8683 14d1 9C       		.byte	0x9c
 8684 14d2 45150000 		.4byte	0x1545
 8685 14d6 2C       		.uleb128 0x2c
 8686 14d7 EB090000 		.4byte	.LASF271
 8687 14db 01       		.byte	0x1
 8688 14dc E008     		.2byte	0x8e0
 8689 14de 5C000000 		.4byte	0x5c
 8690 14e2 BD040000 		.4byte	.LLST59
 8691 14e6 2C       		.uleb128 0x2c
 8692 14e7 0B0B0000 		.4byte	.LASF266
 8693 14eb 01       		.byte	0x1
 8694 14ec E008     		.2byte	0x8e0
 8695 14ee 5C000000 		.4byte	0x5c
 8696 14f2 10050000 		.4byte	.LLST60
 8697 14f6 2C       		.uleb128 0x2c
 8698 14f7 B00F0000 		.4byte	.LASF255
 8699 14fb 01       		.byte	0x1
 8700 14fc E108     		.2byte	0x8e1
 8701 14fe B9030000 		.4byte	0x3b9
 8702 1502 4A050000 		.4byte	.LLST61
 8703 1506 28       		.uleb128 0x28
 8704 1507 746D7000 		.ascii	"tmp\000"
 8705 150b 01       		.byte	0x1
 8706 150c E308     		.2byte	0x8e3
 8707 150e 25140000 		.4byte	0x1425
 8708 1512 02       		.uleb128 0x2
 8709 1513 91       		.byte	0x91
 8710 1514 6C       		.sleb128 -20
 8711 1515 33       		.uleb128 0x33
 8712 1516 0A170000 		.4byte	.LVL368
 8713 151a 4F2B0000 		.4byte	0x2b4f
 8714 151e 2E150000 		.4byte	0x152e
 8715 1522 34       		.uleb128 0x34
 8716 1523 01       		.uleb128 0x1
 8717 1524 52       		.byte	0x52
 8718 1525 01       		.uleb128 0x1
 8719 1526 32       		.byte	0x32
 8720 1527 34       		.uleb128 0x34
 8721 1528 01       		.uleb128 0x1
 8722 1529 53       		.byte	0x53
 8723 152a 02       		.uleb128 0x2
 8724 152b 91       		.byte	0x91
 8725 152c 6C       		.sleb128 -20
ARM GAS  /tmp/cci8Vpl3.s 			page 218


 8726 152d 00       		.byte	0
 8727 152e 35       		.uleb128 0x35
 8728 152f 1E170000 		.4byte	.LVL369
 8729 1533 4F2B0000 		.4byte	0x2b4f
 8730 1537 34       		.uleb128 0x34
 8731 1538 01       		.uleb128 0x1
 8732 1539 52       		.byte	0x52
 8733 153a 02       		.uleb128 0x2
 8734 153b 74       		.byte	0x74
 8735 153c 00       		.sleb128 0
 8736 153d 34       		.uleb128 0x34
 8737 153e 01       		.uleb128 0x1
 8738 153f 53       		.byte	0x53
 8739 1540 02       		.uleb128 0x2
 8740 1541 76       		.byte	0x76
 8741 1542 00       		.sleb128 0
 8742 1543 00       		.byte	0
 8743 1544 00       		.byte	0
 8744 1545 3B       		.uleb128 0x3b
 8745 1546 EA0C0000 		.4byte	.LASF273
 8746 154a 0E       		.byte	0xe
 8747 154b 76       		.byte	0x76
 8748 154c 9A000000 		.4byte	0x9a
 8749 1550 08190000 		.4byte	.LFB100
 8750 1554 54030000 		.4byte	.LFE100-.LFB100
 8751 1558 01       		.uleb128 0x1
 8752 1559 9C       		.byte	0x9c
 8753 155a F4180000 		.4byte	0x18f4
 8754 155e 2C       		.uleb128 0x2c
 8755 155f 0A040000 		.4byte	.LASF21
 8756 1563 01       		.byte	0x1
 8757 1564 7A08     		.2byte	0x87a
 8758 1566 F4180000 		.4byte	0x18f4
 8759 156a 7E050000 		.4byte	.LLST72
 8760 156e 2C       		.uleb128 0x2c
 8761 156f D90D0000 		.4byte	.LASF22
 8762 1573 01       		.byte	0x1
 8763 1574 7A08     		.2byte	0x87a
 8764 1576 F4180000 		.4byte	0x18f4
 8765 157a FA050000 		.4byte	.LLST73
 8766 157e 3C       		.uleb128 0x3c
 8767 157f D8040000 		.4byte	.LASF274
 8768 1583 01       		.byte	0x1
 8769 1584 7D08     		.2byte	0x87d
 8770 1586 3A000000 		.4byte	0x3a
 8771 158a 02       		.byte	0x2
 8772 158b 2D       		.uleb128 0x2d
 8773 158c 65000000 		.4byte	.LASF275
 8774 1590 01       		.byte	0x1
 8775 1591 7E08     		.2byte	0x87e
 8776 1593 FA180000 		.4byte	0x18fa
 8777 1597 02       		.uleb128 0x2
 8778 1598 91       		.byte	0x91
 8779 1599 4C       		.sleb128 -52
 8780 159a 2D       		.uleb128 0x2d
 8781 159b BB0A0000 		.4byte	.LASF276
 8782 159f 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 219


 8783 15a0 7E08     		.2byte	0x87e
 8784 15a2 FA180000 		.4byte	0x18fa
 8785 15a6 02       		.uleb128 0x2
 8786 15a7 91       		.byte	0x91
 8787 15a8 40       		.sleb128 -64
 8788 15a9 30       		.uleb128 0x30
 8789 15aa B0040000 		.4byte	.LASF277
 8790 15ae 01       		.byte	0x1
 8791 15af 7F08     		.2byte	0x87f
 8792 15b1 33000000 		.4byte	0x33
 8793 15b5 62060000 		.4byte	.LLST74
 8794 15b9 30       		.uleb128 0x30
 8795 15ba F0040000 		.4byte	.LASF278
 8796 15be 01       		.byte	0x1
 8797 15bf 7F08     		.2byte	0x87f
 8798 15c1 33000000 		.4byte	0x33
 8799 15c5 75060000 		.4byte	.LLST75
 8800 15c9 37       		.uleb128 0x37
 8801 15ca 696900   		.ascii	"ii\000"
 8802 15cd 01       		.byte	0x1
 8803 15ce 8308     		.2byte	0x883
 8804 15d0 9A000000 		.4byte	0x9a
 8805 15d4 88060000 		.4byte	.LLST76
 8806 15d8 30       		.uleb128 0x30
 8807 15d9 CB010000 		.4byte	.LASF279
 8808 15dd 01       		.byte	0x1
 8809 15de 8508     		.2byte	0x885
 8810 15e0 9A000000 		.4byte	0x9a
 8811 15e4 C0060000 		.4byte	.LLST77
 8812 15e8 2D       		.uleb128 0x2d
 8813 15e9 AC0B0000 		.4byte	.LASF184
 8814 15ed 01       		.byte	0x1
 8815 15ee 8608     		.2byte	0x886
 8816 15f0 33000000 		.4byte	0x33
 8817 15f4 03       		.uleb128 0x3
 8818 15f5 91       		.byte	0x91
 8819 15f6 BF7F     		.sleb128 -65
 8820 15f8 30       		.uleb128 0x30
 8821 15f9 B1050000 		.4byte	.LASF187
 8822 15fd 01       		.byte	0x1
 8823 15fe 8608     		.2byte	0x886
 8824 1600 33000000 		.4byte	0x33
 8825 1604 F5060000 		.4byte	.LLST78
 8826 1608 30       		.uleb128 0x30
 8827 1609 27070000 		.4byte	.LASF186
 8828 160d 01       		.byte	0x1
 8829 160e 8608     		.2byte	0x886
 8830 1610 33000000 		.4byte	0x33
 8831 1614 24070000 		.4byte	.LLST79
 8832 1618 2D       		.uleb128 0x2d
 8833 1619 FC050000 		.4byte	.LASF183
 8834 161d 01       		.byte	0x1
 8835 161e 8708     		.2byte	0x887
 8836 1620 5C000000 		.4byte	0x5c
 8837 1624 03       		.uleb128 0x3
 8838 1625 91       		.byte	0x91
 8839 1626 BC7F     		.sleb128 -68
ARM GAS  /tmp/cci8Vpl3.s 			page 220


 8840 1628 2D       		.uleb128 0x2d
 8841 1629 C40D0000 		.4byte	.LASF185
 8842 162d 01       		.byte	0x1
 8843 162e 8708     		.2byte	0x887
 8844 1630 5C000000 		.4byte	0x5c
 8845 1634 03       		.uleb128 0x3
 8846 1635 91       		.byte	0x91
 8847 1636 BA7F     		.sleb128 -70
 8848 1638 28       		.uleb128 0x28
 8849 1639 6C706600 		.ascii	"lpf\000"
 8850 163d 01       		.byte	0x1
 8851 163e 8708     		.2byte	0x887
 8852 1640 5C000000 		.4byte	0x5c
 8853 1644 03       		.uleb128 0x3
 8854 1645 91       		.byte	0x91
 8855 1646 B87F     		.sleb128 -72
 8856 1648 30       		.uleb128 0x30
 8857 1649 F0020000 		.4byte	.LASF280
 8858 164d 01       		.byte	0x1
 8859 164e 8808     		.2byte	0x888
 8860 1650 33000000 		.4byte	0x33
 8861 1654 46070000 		.4byte	.LLST80
 8862 1658 2E       		.uleb128 0x2e
 8863 1659 E8020000 		.4byte	.LASF282
 8864 165d 01       		.byte	0x1
 8865 165e BA08     		.2byte	0x8ba
 8866 1660 66190000 		.4byte	.L502
 8867 1664 31       		.uleb128 0x31
 8868 1665 CA210000 		.4byte	0x21ca
 8869 1669 3E190000 		.4byte	.LBB12
 8870 166d 04000000 		.4byte	.LBE12-.LBB12
 8871 1671 01       		.byte	0x1
 8872 1672 9608     		.2byte	0x896
 8873 1674 82160000 		.4byte	0x1682
 8874 1678 32       		.uleb128 0x32
 8875 1679 DA210000 		.4byte	0x21da
 8876 167d 7B070000 		.4byte	.LLST81
 8877 1681 00       		.byte	0
 8878 1682 3D       		.uleb128 0x3d
 8879 1683 481C0000 		.4byte	0x1c48
 8880 1687 C2190000 		.4byte	.LBB14
 8881 168b 18000000 		.4byte	.Ldebug_ranges0+0x18
 8882 168f 01       		.byte	0x1
 8883 1690 AC08     		.2byte	0x8ac
 8884 1692 32170000 		.4byte	0x1732
 8885 1696 32       		.uleb128 0x32
 8886 1697 651C0000 		.4byte	0x1c65
 8887 169b A3070000 		.4byte	.LLST82
 8888 169f 32       		.uleb128 0x32
 8889 16a0 591C0000 		.4byte	0x1c59
 8890 16a4 DB070000 		.4byte	.LLST83
 8891 16a8 3E       		.uleb128 0x3e
 8892 16a9 18000000 		.4byte	.Ldebug_ranges0+0x18
 8893 16ad 3F       		.uleb128 0x3f
 8894 16ae 711C0000 		.4byte	0x1c71
 8895 16b2 14080000 		.4byte	.LLST84
 8896 16b6 3F       		.uleb128 0x3f
ARM GAS  /tmp/cci8Vpl3.s 			page 221


 8897 16b7 7C1C0000 		.4byte	0x1c7c
 8898 16bb 33080000 		.4byte	.LLST85
 8899 16bf 40       		.uleb128 0x40
 8900 16c0 881C0000 		.4byte	0x1c88
 8901 16c4 03       		.uleb128 0x3
 8902 16c5 91       		.byte	0x91
 8903 16c6 AC7F     		.sleb128 -84
 8904 16c8 3F       		.uleb128 0x3f
 8905 16c9 941C0000 		.4byte	0x1c94
 8906 16cd 5E080000 		.4byte	.LLST86
 8907 16d1 3F       		.uleb128 0x3f
 8908 16d2 A01C0000 		.4byte	0x1ca0
 8909 16d6 8B080000 		.4byte	.LLST87
 8910 16da 41       		.uleb128 0x41
 8911 16db BD1C0000 		.4byte	0x1cbd
 8912 16df C2190000 		.4byte	.LBB16
 8913 16e3 30000000 		.4byte	.Ldebug_ranges0+0x30
 8914 16e7 01       		.byte	0x1
 8915 16e8 8B07     		.2byte	0x78b
 8916 16ea 32       		.uleb128 0x32
 8917 16eb CE1C0000 		.4byte	0x1cce
 8918 16ef B0080000 		.4byte	.LLST88
 8919 16f3 3E       		.uleb128 0x3e
 8920 16f4 30000000 		.4byte	.Ldebug_ranges0+0x30
 8921 16f8 40       		.uleb128 0x40
 8922 16f9 DA1C0000 		.4byte	0x1cda
 8923 16fd 03       		.uleb128 0x3
 8924 16fe 91       		.byte	0x91
 8925 16ff A87F     		.sleb128 -88
 8926 1701 40       		.uleb128 0x40
 8927 1702 E61C0000 		.4byte	0x1ce6
 8928 1706 03       		.uleb128 0x3
 8929 1707 91       		.byte	0x91
 8930 1708 A47F     		.sleb128 -92
 8931 170a 3F       		.uleb128 0x3f
 8932 170b F21C0000 		.4byte	0x1cf2
 8933 170f 2A090000 		.4byte	.LLST89
 8934 1713 35       		.uleb128 0x35
 8935 1714 381C0000 		.4byte	.LVL508
 8936 1718 702B0000 		.4byte	0x2b70
 8937 171c 34       		.uleb128 0x34
 8938 171d 01       		.uleb128 0x1
 8939 171e 51       		.byte	0x51
 8940 171f 01       		.uleb128 0x1
 8941 1720 3D       		.byte	0x3d
 8942 1721 34       		.uleb128 0x34
 8943 1722 01       		.uleb128 0x1
 8944 1723 52       		.byte	0x52
 8945 1724 01       		.uleb128 0x1
 8946 1725 34       		.byte	0x34
 8947 1726 34       		.uleb128 0x34
 8948 1727 01       		.uleb128 0x1
 8949 1728 53       		.byte	0x53
 8950 1729 03       		.uleb128 0x3
 8951 172a 91       		.byte	0x91
 8952 172b A87F     		.sleb128 -88
 8953 172d 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 222


 8954 172e 00       		.byte	0
 8955 172f 00       		.byte	0
 8956 1730 00       		.byte	0
 8957 1731 00       		.byte	0
 8958 1732 3D       		.uleb128 0x3d
 8959 1733 D71B0000 		.4byte	0x1bd7
 8960 1737 DE1A0000 		.4byte	.LBB21
 8961 173b 48000000 		.4byte	.Ldebug_ranges0+0x48
 8962 173f 01       		.byte	0x1
 8963 1740 AD08     		.2byte	0x8ad
 8964 1742 AF170000 		.4byte	0x17af
 8965 1746 32       		.uleb128 0x32
 8966 1747 F41B0000 		.4byte	0x1bf4
 8967 174b 73090000 		.4byte	.LLST90
 8968 174f 32       		.uleb128 0x32
 8969 1750 E81B0000 		.4byte	0x1be8
 8970 1754 A0090000 		.4byte	.LLST91
 8971 1758 3E       		.uleb128 0x3e
 8972 1759 48000000 		.4byte	.Ldebug_ranges0+0x48
 8973 175d 3F       		.uleb128 0x3f
 8974 175e 001C0000 		.4byte	0x1c00
 8975 1762 C2090000 		.4byte	.LLST92
 8976 1766 3F       		.uleb128 0x3f
 8977 1767 0B1C0000 		.4byte	0x1c0b
 8978 176b E1090000 		.4byte	.LLST93
 8979 176f 40       		.uleb128 0x40
 8980 1770 171C0000 		.4byte	0x1c17
 8981 1774 03       		.uleb128 0x3
 8982 1775 91       		.byte	0x91
 8983 1776 AC7F     		.sleb128 -84
 8984 1778 3F       		.uleb128 0x3f
 8985 1779 231C0000 		.4byte	0x1c23
 8986 177d 0C0A0000 		.4byte	.LLST94
 8987 1781 3F       		.uleb128 0x3f
 8988 1782 2F1C0000 		.4byte	0x1c2f
 8989 1786 4A0A0000 		.4byte	.LLST95
 8990 178a 3F       		.uleb128 0x3f
 8991 178b 3B1C0000 		.4byte	0x1c3b
 8992 178f 9A0A0000 		.4byte	.LLST96
 8993 1793 35       		.uleb128 0x35
 8994 1794 EE1A0000 		.4byte	.LVL472
 8995 1798 702B0000 		.4byte	0x2b70
 8996 179c 34       		.uleb128 0x34
 8997 179d 01       		.uleb128 0x1
 8998 179e 51       		.byte	0x51
 8999 179f 01       		.uleb128 0x1
 9000 17a0 3D       		.byte	0x3d
 9001 17a1 34       		.uleb128 0x34
 9002 17a2 01       		.uleb128 0x1
 9003 17a3 52       		.byte	0x52
 9004 17a4 01       		.uleb128 0x1
 9005 17a5 33       		.byte	0x33
 9006 17a6 34       		.uleb128 0x34
 9007 17a7 01       		.uleb128 0x1
 9008 17a8 53       		.byte	0x53
 9009 17a9 02       		.uleb128 0x2
 9010 17aa 7A       		.byte	0x7a
ARM GAS  /tmp/cci8Vpl3.s 			page 223


 9011 17ab 00       		.sleb128 0
 9012 17ac 00       		.byte	0
 9013 17ad 00       		.byte	0
 9014 17ae 00       		.byte	0
 9015 17af 33       		.uleb128 0x33
 9016 17b0 22190000 		.4byte	.LVL425
 9017 17b4 6E240000 		.4byte	0x246e
 9018 17b8 C4170000 		.4byte	0x17c4
 9019 17bc 34       		.uleb128 0x34
 9020 17bd 01       		.uleb128 0x1
 9021 17be 50       		.byte	0x50
 9022 17bf 03       		.uleb128 0x3
 9023 17c0 91       		.byte	0x91
 9024 17c1 BC7F     		.sleb128 -68
 9025 17c3 00       		.byte	0
 9026 17c4 33       		.uleb128 0x33
 9027 17c5 2A190000 		.4byte	.LVL426
 9028 17c9 F6230000 		.4byte	0x23f6
 9029 17cd D9170000 		.4byte	0x17d9
 9030 17d1 34       		.uleb128 0x34
 9031 17d2 01       		.uleb128 0x1
 9032 17d3 50       		.byte	0x50
 9033 17d4 03       		.uleb128 0x3
 9034 17d5 91       		.byte	0x91
 9035 17d6 BF7F     		.sleb128 -65
 9036 17d8 00       		.byte	0
 9037 17d9 33       		.uleb128 0x33
 9038 17da 30190000 		.4byte	.LVL427
 9039 17de 7E230000 		.4byte	0x237e
 9040 17e2 EE170000 		.4byte	0x17ee
 9041 17e6 34       		.uleb128 0x34
 9042 17e7 01       		.uleb128 0x1
 9043 17e8 50       		.byte	0x50
 9044 17e9 03       		.uleb128 0x3
 9045 17ea 91       		.byte	0x91
 9046 17eb B87F     		.sleb128 -72
 9047 17ed 00       		.byte	0
 9048 17ee 33       		.uleb128 0x33
 9049 17ef 38190000 		.4byte	.LVL428
 9050 17f3 06230000 		.4byte	0x2306
 9051 17f7 03180000 		.4byte	0x1803
 9052 17fb 34       		.uleb128 0x34
 9053 17fc 01       		.uleb128 0x1
 9054 17fd 50       		.byte	0x50
 9055 17fe 03       		.uleb128 0x3
 9056 17ff 91       		.byte	0x91
 9057 1800 BA7F     		.sleb128 -70
 9058 1802 00       		.byte	0
 9059 1803 33       		.uleb128 0x33
 9060 1804 4E190000 		.4byte	.LVL431
 9061 1808 0A190000 		.4byte	0x190a
 9062 180c 22180000 		.4byte	0x1822
 9063 1810 34       		.uleb128 0x34
 9064 1811 01       		.uleb128 0x1
 9065 1812 50       		.byte	0x50
 9066 1813 02       		.uleb128 0x2
 9067 1814 74       		.byte	0x74
ARM GAS  /tmp/cci8Vpl3.s 			page 224


 9068 1815 00       		.sleb128 0
 9069 1816 34       		.uleb128 0x34
 9070 1817 01       		.uleb128 0x1
 9071 1818 51       		.byte	0x51
 9072 1819 02       		.uleb128 0x2
 9073 181a 75       		.byte	0x75
 9074 181b 00       		.sleb128 0
 9075 181c 34       		.uleb128 0x34
 9076 181d 01       		.uleb128 0x1
 9077 181e 52       		.byte	0x52
 9078 181f 01       		.uleb128 0x1
 9079 1820 30       		.byte	0x30
 9080 1821 00       		.byte	0
 9081 1822 33       		.uleb128 0x33
 9082 1823 5E190000 		.4byte	.LVL433
 9083 1827 0A190000 		.4byte	0x190a
 9084 182b 41180000 		.4byte	0x1841
 9085 182f 34       		.uleb128 0x34
 9086 1830 01       		.uleb128 0x1
 9087 1831 50       		.byte	0x50
 9088 1832 02       		.uleb128 0x2
 9089 1833 74       		.byte	0x74
 9090 1834 00       		.sleb128 0
 9091 1835 34       		.uleb128 0x34
 9092 1836 01       		.uleb128 0x1
 9093 1837 51       		.byte	0x51
 9094 1838 02       		.uleb128 0x2
 9095 1839 75       		.byte	0x75
 9096 183a 00       		.sleb128 0
 9097 183b 34       		.uleb128 0x34
 9098 183c 01       		.uleb128 0x1
 9099 183d 52       		.byte	0x52
 9100 183e 01       		.uleb128 0x1
 9101 183f 30       		.byte	0x30
 9102 1840 00       		.byte	0
 9103 1841 39       		.uleb128 0x39
 9104 1842 86190000 		.4byte	.LVL435
 9105 1846 20240000 		.4byte	0x2420
 9106 184a 39       		.uleb128 0x39
 9107 184b 8E190000 		.4byte	.LVL436
 9108 184f A8230000 		.4byte	0x23a8
 9109 1853 39       		.uleb128 0x39
 9110 1854 96190000 		.4byte	.LVL437
 9111 1858 30230000 		.4byte	0x2330
 9112 185c 39       		.uleb128 0x39
 9113 185d 9E190000 		.4byte	.LVL438
 9114 1861 8F220000 		.4byte	0x228f
 9115 1865 33       		.uleb128 0x33
 9116 1866 A4190000 		.4byte	.LVL439
 9117 186a 77200000 		.4byte	0x2077
 9118 186e 7C180000 		.4byte	0x187c
 9119 1872 34       		.uleb128 0x34
 9120 1873 01       		.uleb128 0x1
 9121 1874 50       		.byte	0x50
 9122 1875 05       		.uleb128 0x5
 9123 1876 91       		.byte	0x91
 9124 1877 947F     		.sleb128 -108
ARM GAS  /tmp/cci8Vpl3.s 			page 225


 9125 1879 94       		.byte	0x94
 9126 187a 01       		.byte	0x1
 9127 187b 00       		.byte	0
 9128 187c 33       		.uleb128 0x33
 9129 187d AA190000 		.4byte	.LVL440
 9130 1881 48210000 		.4byte	0x2148
 9131 1885 93180000 		.4byte	0x1893
 9132 1889 34       		.uleb128 0x34
 9133 188a 01       		.uleb128 0x1
 9134 188b 50       		.byte	0x50
 9135 188c 05       		.uleb128 0x5
 9136 188d 91       		.byte	0x91
 9137 188e 987F     		.sleb128 -104
 9138 1890 94       		.byte	0x94
 9139 1891 01       		.byte	0x1
 9140 1892 00       		.byte	0
 9141 1893 33       		.uleb128 0x33
 9142 1894 BE190000 		.4byte	.LVL444
 9143 1898 25120000 		.4byte	0x1225
 9144 189c A6180000 		.4byte	0x18a6
 9145 18a0 34       		.uleb128 0x34
 9146 18a1 01       		.uleb128 0x1
 9147 18a2 50       		.byte	0x50
 9148 18a3 01       		.uleb128 0x1
 9149 18a4 30       		.byte	0x30
 9150 18a5 00       		.byte	0
 9151 18a6 33       		.uleb128 0x33
 9152 18a7 E01B0000 		.4byte	.LVL502
 9153 18ab 25120000 		.4byte	0x1225
 9154 18af B9180000 		.4byte	0x18b9
 9155 18b3 34       		.uleb128 0x34
 9156 18b4 01       		.uleb128 0x1
 9157 18b5 50       		.byte	0x50
 9158 18b6 01       		.uleb128 0x1
 9159 18b7 31       		.byte	0x31
 9160 18b8 00       		.byte	0
 9161 18b9 33       		.uleb128 0x33
 9162 18ba EC1B0000 		.4byte	.LVL504
 9163 18be 0A190000 		.4byte	0x190a
 9164 18c2 D8180000 		.4byte	0x18d8
 9165 18c6 34       		.uleb128 0x34
 9166 18c7 01       		.uleb128 0x1
 9167 18c8 50       		.byte	0x50
 9168 18c9 02       		.uleb128 0x2
 9169 18ca 91       		.byte	0x91
 9170 18cb 4C       		.sleb128 -52
 9171 18cc 34       		.uleb128 0x34
 9172 18cd 01       		.uleb128 0x1
 9173 18ce 51       		.byte	0x51
 9174 18cf 02       		.uleb128 0x2
 9175 18d0 91       		.byte	0x91
 9176 18d1 40       		.sleb128 -64
 9177 18d2 34       		.uleb128 0x34
 9178 18d3 01       		.uleb128 0x1
 9179 18d4 52       		.byte	0x52
 9180 18d5 01       		.uleb128 0x1
 9181 18d6 31       		.byte	0x31
ARM GAS  /tmp/cci8Vpl3.s 			page 226


 9182 18d7 00       		.byte	0
 9183 18d8 35       		.uleb128 0x35
 9184 18d9 F81B0000 		.4byte	.LVL506
 9185 18dd 0A190000 		.4byte	0x190a
 9186 18e1 34       		.uleb128 0x34
 9187 18e2 01       		.uleb128 0x1
 9188 18e3 50       		.byte	0x50
 9189 18e4 02       		.uleb128 0x2
 9190 18e5 91       		.byte	0x91
 9191 18e6 4C       		.sleb128 -52
 9192 18e7 34       		.uleb128 0x34
 9193 18e8 01       		.uleb128 0x1
 9194 18e9 51       		.byte	0x51
 9195 18ea 02       		.uleb128 0x2
 9196 18eb 91       		.byte	0x91
 9197 18ec 40       		.sleb128 -64
 9198 18ed 34       		.uleb128 0x34
 9199 18ee 01       		.uleb128 0x1
 9200 18ef 52       		.byte	0x52
 9201 18f0 01       		.uleb128 0x1
 9202 18f1 31       		.byte	0x31
 9203 18f2 00       		.byte	0
 9204 18f3 00       		.byte	0
 9205 18f4 0A       		.uleb128 0xa
 9206 18f5 04       		.byte	0x4
 9207 18f6 6E000000 		.4byte	0x6e
 9208 18fa 0B       		.uleb128 0xb
 9209 18fb 6E000000 		.4byte	0x6e
 9210 18ff 0A190000 		.4byte	0x190a
 9211 1903 0C       		.uleb128 0xc
 9212 1904 D9000000 		.4byte	0xd9
 9213 1908 02       		.byte	0x2
 9214 1909 00       		.byte	0
 9215 190a 42       		.uleb128 0x42
 9216 190b 5F090000 		.4byte	.LASF341
 9217 190f 01       		.byte	0x1
 9218 1910 EE07     		.2byte	0x7ee
 9219 1912 9A000000 		.4byte	0x9a
 9220 1916 9C000000 		.4byte	.LFB99
 9221 191a 74040000 		.4byte	.LFE99-.LFB99
 9222 191e 01       		.uleb128 0x1
 9223 191f 9C       		.byte	0x9c
 9224 1920 C71B0000 		.4byte	0x1bc7
 9225 1924 2C       		.uleb128 0x2c
 9226 1925 0A040000 		.4byte	.LASF21
 9227 1929 01       		.byte	0x1
 9228 192a EE07     		.2byte	0x7ee
 9229 192c F4180000 		.4byte	0x18f4
 9230 1930 DC0A0000 		.4byte	.LLST1
 9231 1934 2C       		.uleb128 0x2c
 9232 1935 D90D0000 		.4byte	.LASF22
 9233 1939 01       		.byte	0x1
 9234 193a EE07     		.2byte	0x7ee
 9235 193c F4180000 		.4byte	0x18f4
 9236 1940 FA0A0000 		.4byte	.LLST2
 9237 1944 2C       		.uleb128 0x2c
 9238 1945 C2060000 		.4byte	.LASF283
ARM GAS  /tmp/cci8Vpl3.s 			page 227


 9239 1949 01       		.byte	0x1
 9240 194a EE07     		.2byte	0x7ee
 9241 194c 33000000 		.4byte	0x33
 9242 1950 180B0000 		.4byte	.LLST3
 9243 1954 2D       		.uleb128 0x2d
 9244 1955 B00F0000 		.4byte	.LASF255
 9245 1959 01       		.byte	0x1
 9246 195a F007     		.2byte	0x7f0
 9247 195c C71B0000 		.4byte	0x1bc7
 9248 1960 02       		.uleb128 0x2
 9249 1961 91       		.byte	0x91
 9250 1962 54       		.sleb128 -44
 9251 1963 30       		.uleb128 0x30
 9252 1964 330D0000 		.4byte	.LASF284
 9253 1968 01       		.byte	0x1
 9254 1969 F107     		.2byte	0x7f1
 9255 196b 33000000 		.4byte	0x33
 9256 196f 390B0000 		.4byte	.LLST4
 9257 1973 37       		.uleb128 0x37
 9258 1974 696900   		.ascii	"ii\000"
 9259 1977 01       		.byte	0x1
 9260 1978 F107     		.2byte	0x7f1
 9261 197a 33000000 		.4byte	0x33
 9262 197e 620B0000 		.4byte	.LLST5
 9263 1982 30       		.uleb128 0x30
 9264 1983 110A0000 		.4byte	.LASF285
 9265 1987 01       		.byte	0x1
 9266 1988 F207     		.2byte	0x7f2
 9267 198a 5C000000 		.4byte	0x5c
 9268 198e 990B0000 		.4byte	.LLST6
 9269 1992 2F       		.uleb128 0x2f
 9270 1993 00000000 		.4byte	.Ldebug_ranges0+0
 9271 1997 D2190000 		.4byte	0x19d2
 9272 199b 30       		.uleb128 0x30
 9273 199c CC020000 		.4byte	.LASF286
 9274 19a0 01       		.byte	0x1
 9275 19a1 3408     		.2byte	0x834
 9276 19a3 FE000000 		.4byte	0xfe
 9277 19a7 BD0B0000 		.4byte	.LLST7
 9278 19ab 30       		.uleb128 0x30
 9279 19ac 47020000 		.4byte	.LASF287
 9280 19b0 01       		.byte	0x1
 9281 19b1 3408     		.2byte	0x834
 9282 19b3 FE000000 		.4byte	0xfe
 9283 19b7 A70C0000 		.4byte	.LLST8
 9284 19bb 35       		.uleb128 0x35
 9285 19bc 06030000 		.4byte	.LVL39
 9286 19c0 702B0000 		.4byte	0x2b70
 9287 19c4 34       		.uleb128 0x34
 9288 19c5 01       		.uleb128 0x1
 9289 19c6 52       		.byte	0x52
 9290 19c7 02       		.uleb128 0x2
 9291 19c8 79       		.byte	0x79
 9292 19c9 00       		.sleb128 0
 9293 19ca 34       		.uleb128 0x34
 9294 19cb 01       		.uleb128 0x1
 9295 19cc 53       		.byte	0x53
ARM GAS  /tmp/cci8Vpl3.s 			page 228


 9296 19cd 02       		.uleb128 0x2
 9297 19ce 91       		.byte	0x91
 9298 19cf 54       		.sleb128 -44
 9299 19d0 00       		.byte	0
 9300 19d1 00       		.byte	0
 9301 19d2 33       		.uleb128 0x33
 9302 19d3 C6000000 		.4byte	.LVL14
 9303 19d7 4F2B0000 		.4byte	0x2b4f
 9304 19db EB190000 		.4byte	0x19eb
 9305 19df 34       		.uleb128 0x34
 9306 19e0 01       		.uleb128 0x1
 9307 19e1 52       		.byte	0x52
 9308 19e2 01       		.uleb128 0x1
 9309 19e3 32       		.byte	0x32
 9310 19e4 34       		.uleb128 0x34
 9311 19e5 01       		.uleb128 0x1
 9312 19e6 53       		.byte	0x53
 9313 19e7 02       		.uleb128 0x2
 9314 19e8 91       		.byte	0x91
 9315 19e9 54       		.sleb128 -44
 9316 19ea 00       		.byte	0
 9317 19eb 33       		.uleb128 0x33
 9318 19ec D2000000 		.4byte	.LVL15
 9319 19f0 5A2B0000 		.4byte	0x2b5a
 9320 19f4 FF190000 		.4byte	0x19ff
 9321 19f8 34       		.uleb128 0x34
 9322 19f9 01       		.uleb128 0x1
 9323 19fa 50       		.byte	0x50
 9324 19fb 02       		.uleb128 0x2
 9325 19fc 08       		.byte	0x8
 9326 19fd C8       		.byte	0xc8
 9327 19fe 00       		.byte	0
 9328 19ff 33       		.uleb128 0x33
 9329 1a00 EA000000 		.4byte	.LVL16
 9330 1a04 4F2B0000 		.4byte	0x2b4f
 9331 1a08 181A0000 		.4byte	0x1a18
 9332 1a0c 34       		.uleb128 0x34
 9333 1a0d 01       		.uleb128 0x1
 9334 1a0e 52       		.byte	0x52
 9335 1a0f 01       		.uleb128 0x1
 9336 1a10 31       		.byte	0x31
 9337 1a11 34       		.uleb128 0x34
 9338 1a12 01       		.uleb128 0x1
 9339 1a13 53       		.byte	0x53
 9340 1a14 02       		.uleb128 0x2
 9341 1a15 91       		.byte	0x91
 9342 1a16 54       		.sleb128 -44
 9343 1a17 00       		.byte	0
 9344 1a18 33       		.uleb128 0x33
 9345 1a19 02010000 		.4byte	.LVL17
 9346 1a1d 4F2B0000 		.4byte	0x2b4f
 9347 1a21 311A0000 		.4byte	0x1a31
 9348 1a25 34       		.uleb128 0x34
 9349 1a26 01       		.uleb128 0x1
 9350 1a27 52       		.byte	0x52
 9351 1a28 01       		.uleb128 0x1
 9352 1a29 31       		.byte	0x31
ARM GAS  /tmp/cci8Vpl3.s 			page 229


 9353 1a2a 34       		.uleb128 0x34
 9354 1a2b 01       		.uleb128 0x1
 9355 1a2c 53       		.byte	0x53
 9356 1a2d 02       		.uleb128 0x2
 9357 1a2e 91       		.byte	0x91
 9358 1a2f 54       		.sleb128 -44
 9359 1a30 00       		.byte	0
 9360 1a31 33       		.uleb128 0x33
 9361 1a32 1A010000 		.4byte	.LVL18
 9362 1a36 4F2B0000 		.4byte	0x2b4f
 9363 1a3a 4A1A0000 		.4byte	0x1a4a
 9364 1a3e 34       		.uleb128 0x34
 9365 1a3f 01       		.uleb128 0x1
 9366 1a40 52       		.byte	0x52
 9367 1a41 01       		.uleb128 0x1
 9368 1a42 31       		.byte	0x31
 9369 1a43 34       		.uleb128 0x34
 9370 1a44 01       		.uleb128 0x1
 9371 1a45 53       		.byte	0x53
 9372 1a46 02       		.uleb128 0x2
 9373 1a47 91       		.byte	0x91
 9374 1a48 54       		.sleb128 -44
 9375 1a49 00       		.byte	0
 9376 1a4a 33       		.uleb128 0x33
 9377 1a4b 32010000 		.4byte	.LVL19
 9378 1a4f 4F2B0000 		.4byte	0x2b4f
 9379 1a53 631A0000 		.4byte	0x1a63
 9380 1a57 34       		.uleb128 0x34
 9381 1a58 01       		.uleb128 0x1
 9382 1a59 52       		.byte	0x52
 9383 1a5a 01       		.uleb128 0x1
 9384 1a5b 31       		.byte	0x31
 9385 1a5c 34       		.uleb128 0x34
 9386 1a5d 01       		.uleb128 0x1
 9387 1a5e 53       		.byte	0x53
 9388 1a5f 02       		.uleb128 0x2
 9389 1a60 91       		.byte	0x91
 9390 1a61 54       		.sleb128 -44
 9391 1a62 00       		.byte	0
 9392 1a63 33       		.uleb128 0x33
 9393 1a64 4A010000 		.4byte	.LVL20
 9394 1a68 4F2B0000 		.4byte	0x2b4f
 9395 1a6c 7C1A0000 		.4byte	0x1a7c
 9396 1a70 34       		.uleb128 0x34
 9397 1a71 01       		.uleb128 0x1
 9398 1a72 52       		.byte	0x52
 9399 1a73 01       		.uleb128 0x1
 9400 1a74 31       		.byte	0x31
 9401 1a75 34       		.uleb128 0x34
 9402 1a76 01       		.uleb128 0x1
 9403 1a77 53       		.byte	0x53
 9404 1a78 02       		.uleb128 0x2
 9405 1a79 91       		.byte	0x91
 9406 1a7a 54       		.sleb128 -44
 9407 1a7b 00       		.byte	0
 9408 1a7c 33       		.uleb128 0x33
 9409 1a7d 68010000 		.4byte	.LVL21
ARM GAS  /tmp/cci8Vpl3.s 			page 230


 9410 1a81 4F2B0000 		.4byte	0x2b4f
 9411 1a85 951A0000 		.4byte	0x1a95
 9412 1a89 34       		.uleb128 0x34
 9413 1a8a 01       		.uleb128 0x1
 9414 1a8b 52       		.byte	0x52
 9415 1a8c 01       		.uleb128 0x1
 9416 1a8d 31       		.byte	0x31
 9417 1a8e 34       		.uleb128 0x34
 9418 1a8f 01       		.uleb128 0x1
 9419 1a90 53       		.byte	0x53
 9420 1a91 02       		.uleb128 0x2
 9421 1a92 91       		.byte	0x91
 9422 1a93 54       		.sleb128 -44
 9423 1a94 00       		.byte	0
 9424 1a95 33       		.uleb128 0x33
 9425 1a96 74010000 		.4byte	.LVL22
 9426 1a9a 5A2B0000 		.4byte	0x2b5a
 9427 1a9e A81A0000 		.4byte	0x1aa8
 9428 1aa2 34       		.uleb128 0x34
 9429 1aa3 01       		.uleb128 0x1
 9430 1aa4 50       		.byte	0x50
 9431 1aa5 01       		.uleb128 0x1
 9432 1aa6 3F       		.byte	0x3f
 9433 1aa7 00       		.byte	0
 9434 1aa8 33       		.uleb128 0x33
 9435 1aa9 8E010000 		.4byte	.LVL23
 9436 1aad 4F2B0000 		.4byte	0x2b4f
 9437 1ab1 C11A0000 		.4byte	0x1ac1
 9438 1ab5 34       		.uleb128 0x34
 9439 1ab6 01       		.uleb128 0x1
 9440 1ab7 52       		.byte	0x52
 9441 1ab8 01       		.uleb128 0x1
 9442 1ab9 31       		.byte	0x31
 9443 1aba 34       		.uleb128 0x34
 9444 1abb 01       		.uleb128 0x1
 9445 1abc 53       		.byte	0x53
 9446 1abd 02       		.uleb128 0x2
 9447 1abe 91       		.byte	0x91
 9448 1abf 54       		.sleb128 -44
 9449 1ac0 00       		.byte	0
 9450 1ac1 33       		.uleb128 0x33
 9451 1ac2 AE010000 		.4byte	.LVL24
 9452 1ac6 4F2B0000 		.4byte	0x2b4f
 9453 1aca DA1A0000 		.4byte	0x1ada
 9454 1ace 34       		.uleb128 0x34
 9455 1acf 01       		.uleb128 0x1
 9456 1ad0 52       		.byte	0x52
 9457 1ad1 01       		.uleb128 0x1
 9458 1ad2 31       		.byte	0x31
 9459 1ad3 34       		.uleb128 0x34
 9460 1ad4 01       		.uleb128 0x1
 9461 1ad5 53       		.byte	0x53
 9462 1ad6 02       		.uleb128 0x2
 9463 1ad7 91       		.byte	0x91
 9464 1ad8 54       		.sleb128 -44
 9465 1ad9 00       		.byte	0
 9466 1ada 33       		.uleb128 0x33
ARM GAS  /tmp/cci8Vpl3.s 			page 231


 9467 1adb D4010000 		.4byte	.LVL25
 9468 1adf 4F2B0000 		.4byte	0x2b4f
 9469 1ae3 F31A0000 		.4byte	0x1af3
 9470 1ae7 34       		.uleb128 0x34
 9471 1ae8 01       		.uleb128 0x1
 9472 1ae9 52       		.byte	0x52
 9473 1aea 01       		.uleb128 0x1
 9474 1aeb 31       		.byte	0x31
 9475 1aec 34       		.uleb128 0x34
 9476 1aed 01       		.uleb128 0x1
 9477 1aee 53       		.byte	0x53
 9478 1aef 02       		.uleb128 0x2
 9479 1af0 91       		.byte	0x91
 9480 1af1 54       		.sleb128 -44
 9481 1af2 00       		.byte	0
 9482 1af3 33       		.uleb128 0x33
 9483 1af4 F8010000 		.4byte	.LVL26
 9484 1af8 4F2B0000 		.4byte	0x2b4f
 9485 1afc 0C1B0000 		.4byte	0x1b0c
 9486 1b00 34       		.uleb128 0x34
 9487 1b01 01       		.uleb128 0x1
 9488 1b02 52       		.byte	0x52
 9489 1b03 01       		.uleb128 0x1
 9490 1b04 31       		.byte	0x31
 9491 1b05 34       		.uleb128 0x34
 9492 1b06 01       		.uleb128 0x1
 9493 1b07 53       		.byte	0x53
 9494 1b08 02       		.uleb128 0x2
 9495 1b09 91       		.byte	0x91
 9496 1b0a 54       		.sleb128 -44
 9497 1b0b 00       		.byte	0
 9498 1b0c 33       		.uleb128 0x33
 9499 1b0d 04020000 		.4byte	.LVL27
 9500 1b11 5A2B0000 		.4byte	0x2b5a
 9501 1b15 201B0000 		.4byte	0x1b20
 9502 1b19 34       		.uleb128 0x34
 9503 1b1a 01       		.uleb128 0x1
 9504 1b1b 50       		.byte	0x50
 9505 1b1c 02       		.uleb128 0x2
 9506 1b1d 08       		.byte	0x8
 9507 1b1e C8       		.byte	0xc8
 9508 1b1f 00       		.byte	0
 9509 1b20 33       		.uleb128 0x33
 9510 1b21 26020000 		.4byte	.LVL28
 9511 1b25 4F2B0000 		.4byte	0x2b4f
 9512 1b29 391B0000 		.4byte	0x1b39
 9513 1b2d 34       		.uleb128 0x34
 9514 1b2e 01       		.uleb128 0x1
 9515 1b2f 52       		.byte	0x52
 9516 1b30 01       		.uleb128 0x1
 9517 1b31 31       		.byte	0x31
 9518 1b32 34       		.uleb128 0x34
 9519 1b33 01       		.uleb128 0x1
 9520 1b34 53       		.byte	0x53
 9521 1b35 02       		.uleb128 0x2
 9522 1b36 91       		.byte	0x91
 9523 1b37 54       		.sleb128 -44
ARM GAS  /tmp/cci8Vpl3.s 			page 232


 9524 1b38 00       		.byte	0
 9525 1b39 33       		.uleb128 0x33
 9526 1b3a 44020000 		.4byte	.LVL29
 9527 1b3e 4F2B0000 		.4byte	0x2b4f
 9528 1b42 521B0000 		.4byte	0x1b52
 9529 1b46 34       		.uleb128 0x34
 9530 1b47 01       		.uleb128 0x1
 9531 1b48 52       		.byte	0x52
 9532 1b49 01       		.uleb128 0x1
 9533 1b4a 31       		.byte	0x31
 9534 1b4b 34       		.uleb128 0x34
 9535 1b4c 01       		.uleb128 0x1
 9536 1b4d 53       		.byte	0x53
 9537 1b4e 02       		.uleb128 0x2
 9538 1b4f 91       		.byte	0x91
 9539 1b50 54       		.sleb128 -44
 9540 1b51 00       		.byte	0
 9541 1b52 33       		.uleb128 0x33
 9542 1b53 62020000 		.4byte	.LVL30
 9543 1b57 4F2B0000 		.4byte	0x2b4f
 9544 1b5b 6B1B0000 		.4byte	0x1b6b
 9545 1b5f 34       		.uleb128 0x34
 9546 1b60 01       		.uleb128 0x1
 9547 1b61 52       		.byte	0x52
 9548 1b62 01       		.uleb128 0x1
 9549 1b63 31       		.byte	0x31
 9550 1b64 34       		.uleb128 0x34
 9551 1b65 01       		.uleb128 0x1
 9552 1b66 53       		.byte	0x53
 9553 1b67 02       		.uleb128 0x2
 9554 1b68 91       		.byte	0x91
 9555 1b69 54       		.sleb128 -44
 9556 1b6a 00       		.byte	0
 9557 1b6b 33       		.uleb128 0x33
 9558 1b6c 80020000 		.4byte	.LVL31
 9559 1b70 4F2B0000 		.4byte	0x2b4f
 9560 1b74 841B0000 		.4byte	0x1b84
 9561 1b78 34       		.uleb128 0x34
 9562 1b79 01       		.uleb128 0x1
 9563 1b7a 52       		.byte	0x52
 9564 1b7b 01       		.uleb128 0x1
 9565 1b7c 31       		.byte	0x31
 9566 1b7d 34       		.uleb128 0x34
 9567 1b7e 01       		.uleb128 0x1
 9568 1b7f 53       		.byte	0x53
 9569 1b80 02       		.uleb128 0x2
 9570 1b81 91       		.byte	0x91
 9571 1b82 54       		.sleb128 -44
 9572 1b83 00       		.byte	0
 9573 1b84 33       		.uleb128 0x33
 9574 1b85 8C020000 		.4byte	.LVL32
 9575 1b89 5A2B0000 		.4byte	0x2b5a
 9576 1b8d 981B0000 		.4byte	0x1b98
 9577 1b91 34       		.uleb128 0x34
 9578 1b92 01       		.uleb128 0x1
 9579 1b93 50       		.byte	0x50
 9580 1b94 02       		.uleb128 0x2
ARM GAS  /tmp/cci8Vpl3.s 			page 233


 9581 1b95 08       		.byte	0x8
 9582 1b96 32       		.byte	0x32
 9583 1b97 00       		.byte	0
 9584 1b98 33       		.uleb128 0x33
 9585 1b99 A4020000 		.4byte	.LVL33
 9586 1b9d 4F2B0000 		.4byte	0x2b4f
 9587 1ba1 B11B0000 		.4byte	0x1bb1
 9588 1ba5 34       		.uleb128 0x34
 9589 1ba6 01       		.uleb128 0x1
 9590 1ba7 52       		.byte	0x52
 9591 1ba8 01       		.uleb128 0x1
 9592 1ba9 31       		.byte	0x31
 9593 1baa 34       		.uleb128 0x34
 9594 1bab 01       		.uleb128 0x1
 9595 1bac 53       		.byte	0x53
 9596 1bad 02       		.uleb128 0x2
 9597 1bae 91       		.byte	0x91
 9598 1baf 54       		.sleb128 -44
 9599 1bb0 00       		.byte	0
 9600 1bb1 35       		.uleb128 0x35
 9601 1bb2 BC020000 		.4byte	.LVL34
 9602 1bb6 702B0000 		.4byte	0x2b70
 9603 1bba 34       		.uleb128 0x34
 9604 1bbb 01       		.uleb128 0x1
 9605 1bbc 52       		.byte	0x52
 9606 1bbd 01       		.uleb128 0x1
 9607 1bbe 32       		.byte	0x32
 9608 1bbf 34       		.uleb128 0x34
 9609 1bc0 01       		.uleb128 0x1
 9610 1bc1 53       		.byte	0x53
 9611 1bc2 02       		.uleb128 0x2
 9612 1bc3 91       		.byte	0x91
 9613 1bc4 54       		.sleb128 -44
 9614 1bc5 00       		.byte	0
 9615 1bc6 00       		.byte	0
 9616 1bc7 0B       		.uleb128 0xb
 9617 1bc8 33000000 		.4byte	0x33
 9618 1bcc D71B0000 		.4byte	0x1bd7
 9619 1bd0 0C       		.uleb128 0xc
 9620 1bd1 D9000000 		.4byte	0xd9
 9621 1bd5 0B       		.byte	0xb
 9622 1bd6 00       		.byte	0
 9623 1bd7 43       		.uleb128 0x43
 9624 1bd8 800C0000 		.4byte	.LASF294
 9625 1bdc 01       		.byte	0x1
 9626 1bdd 9A07     		.2byte	0x79a
 9627 1bdf 9A000000 		.4byte	0x9a
 9628 1be3 01       		.byte	0x1
 9629 1be4 481C0000 		.4byte	0x1c48
 9630 1be8 44       		.uleb128 0x44
 9631 1be9 720F0000 		.4byte	.LASF288
 9632 1bed 01       		.byte	0x1
 9633 1bee 9A07     		.2byte	0x79a
 9634 1bf0 F4180000 		.4byte	0x18f4
 9635 1bf4 44       		.uleb128 0x44
 9636 1bf5 7F0F0000 		.4byte	.LASF289
 9637 1bf9 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 234


 9638 1bfa 9A07     		.2byte	0x79a
 9639 1bfc F4180000 		.4byte	0x18f4
 9640 1c00 45       		.uleb128 0x45
 9641 1c01 6A6A00   		.ascii	"jj\000"
 9642 1c04 01       		.byte	0x1
 9643 1c05 9C07     		.2byte	0x79c
 9644 1c07 9A000000 		.4byte	0x9a
 9645 1c0b 38       		.uleb128 0x38
 9646 1c0c CB010000 		.4byte	.LASF279
 9647 1c10 01       		.byte	0x1
 9648 1c11 9C07     		.2byte	0x79c
 9649 1c13 9A000000 		.4byte	0x9a
 9650 1c17 45       		.uleb128 0x45
 9651 1c18 746D7000 		.ascii	"tmp\000"
 9652 1c1c 01       		.byte	0x1
 9653 1c1d 9D07     		.2byte	0x79d
 9654 1c1f C9060000 		.4byte	0x6c9
 9655 1c23 38       		.uleb128 0x38
 9656 1c24 5B0C0000 		.4byte	.LASF291
 9657 1c28 01       		.byte	0x1
 9658 1c29 9E07     		.2byte	0x79e
 9659 1c2b 25000000 		.4byte	0x25
 9660 1c2f 38       		.uleb128 0x38
 9661 1c30 9F0A0000 		.4byte	.LASF292
 9662 1c34 01       		.byte	0x1
 9663 1c35 9E07     		.2byte	0x79e
 9664 1c37 25000000 		.4byte	0x25
 9665 1c3b 38       		.uleb128 0x38
 9666 1c3c 8E080000 		.4byte	.LASF293
 9667 1c40 01       		.byte	0x1
 9668 1c41 9E07     		.2byte	0x79e
 9669 1c43 25000000 		.4byte	0x25
 9670 1c47 00       		.byte	0
 9671 1c48 43       		.uleb128 0x43
 9672 1c49 1B050000 		.4byte	.LASF295
 9673 1c4d 01       		.byte	0x1
 9674 1c4e 8607     		.2byte	0x786
 9675 1c50 9A000000 		.4byte	0x9a
 9676 1c54 01       		.byte	0x1
 9677 1c55 AD1C0000 		.4byte	0x1cad
 9678 1c59 44       		.uleb128 0x44
 9679 1c5a 720F0000 		.4byte	.LASF288
 9680 1c5e 01       		.byte	0x1
 9681 1c5f 8607     		.2byte	0x786
 9682 1c61 F4180000 		.4byte	0x18f4
 9683 1c65 44       		.uleb128 0x44
 9684 1c66 7F0F0000 		.4byte	.LASF289
 9685 1c6a 01       		.byte	0x1
 9686 1c6b 8607     		.2byte	0x786
 9687 1c6d F4180000 		.4byte	0x18f4
 9688 1c71 45       		.uleb128 0x45
 9689 1c72 6A6A00   		.ascii	"jj\000"
 9690 1c75 01       		.byte	0x1
 9691 1c76 8807     		.2byte	0x788
 9692 1c78 9A000000 		.4byte	0x9a
 9693 1c7c 38       		.uleb128 0x38
 9694 1c7d CB010000 		.4byte	.LASF279
ARM GAS  /tmp/cci8Vpl3.s 			page 235


 9695 1c81 01       		.byte	0x1
 9696 1c82 8807     		.2byte	0x788
 9697 1c84 9A000000 		.4byte	0x9a
 9698 1c88 38       		.uleb128 0x38
 9699 1c89 5B0C0000 		.4byte	.LASF291
 9700 1c8d 01       		.byte	0x1
 9701 1c8e 8907     		.2byte	0x789
 9702 1c90 AD1C0000 		.4byte	0x1cad
 9703 1c94 38       		.uleb128 0x38
 9704 1c95 9F0A0000 		.4byte	.LASF292
 9705 1c99 01       		.byte	0x1
 9706 1c9a 8907     		.2byte	0x789
 9707 1c9c 25000000 		.4byte	0x25
 9708 1ca0 38       		.uleb128 0x38
 9709 1ca1 8E080000 		.4byte	.LASF293
 9710 1ca5 01       		.byte	0x1
 9711 1ca6 8907     		.2byte	0x789
 9712 1ca8 25000000 		.4byte	0x25
 9713 1cac 00       		.byte	0
 9714 1cad 0B       		.uleb128 0xb
 9715 1cae 25000000 		.4byte	0x25
 9716 1cb2 BD1C0000 		.4byte	0x1cbd
 9717 1cb6 0C       		.uleb128 0xc
 9718 1cb7 D9000000 		.4byte	0xd9
 9719 1cbb 02       		.byte	0x2
 9720 1cbc 00       		.byte	0
 9721 1cbd 43       		.uleb128 0x43
 9722 1cbe E20E0000 		.4byte	.LASF296
 9723 1cc2 01       		.byte	0x1
 9724 1cc3 6D07     		.2byte	0x76d
 9725 1cc5 9A000000 		.4byte	0x9a
 9726 1cc9 01       		.byte	0x1
 9727 1cca FE1C0000 		.4byte	0x1cfe
 9728 1cce 44       		.uleb128 0x44
 9729 1ccf 5B0C0000 		.4byte	.LASF291
 9730 1cd3 01       		.byte	0x1
 9731 1cd4 6D07     		.2byte	0x76d
 9732 1cd6 FE1C0000 		.4byte	0x1cfe
 9733 1cda 45       		.uleb128 0x45
 9734 1cdb 746D7000 		.ascii	"tmp\000"
 9735 1cdf 01       		.byte	0x1
 9736 1ce0 6F07     		.2byte	0x76f
 9737 1ce2 BC010000 		.4byte	0x1bc
 9738 1ce6 38       		.uleb128 0x38
 9739 1ce7 64060000 		.4byte	.LASF297
 9740 1ceb 01       		.byte	0x1
 9741 1cec 6F07     		.2byte	0x76f
 9742 1cee C9060000 		.4byte	0x6c9
 9743 1cf2 45       		.uleb128 0x45
 9744 1cf3 696900   		.ascii	"ii\000"
 9745 1cf6 01       		.byte	0x1
 9746 1cf7 6F07     		.2byte	0x76f
 9747 1cf9 33000000 		.4byte	0x33
 9748 1cfd 00       		.byte	0
 9749 1cfe 0A       		.uleb128 0xa
 9750 1cff 04       		.byte	0x4
 9751 1d00 25000000 		.4byte	0x25
ARM GAS  /tmp/cci8Vpl3.s 			page 236


 9752 1d04 2B       		.uleb128 0x2b
 9753 1d05 170E0000 		.4byte	.LASF298
 9754 1d09 0E       		.byte	0xe
 9755 1d0a 40       		.byte	0x40
 9756 1d0b 9A000000 		.4byte	0x9a
 9757 1d0f 1C120000 		.4byte	.LFB95
 9758 1d13 7C000000 		.4byte	.LFE95-.LFB95
 9759 1d17 01       		.uleb128 0x1
 9760 1d18 9C       		.byte	0x9c
 9761 1d19 521D0000 		.4byte	0x1d52
 9762 1d1d 2C       		.uleb128 0x2c
 9763 1d1e CC070000 		.4byte	.LASF264
 9764 1d22 01       		.byte	0x1
 9765 1d23 5807     		.2byte	0x758
 9766 1d25 33000000 		.4byte	0x33
 9767 1d29 910D0000 		.4byte	.LLST54
 9768 1d2d 28       		.uleb128 0x28
 9769 1d2e 746D7000 		.ascii	"tmp\000"
 9770 1d32 01       		.byte	0x1
 9771 1d33 5A07     		.2byte	0x75a
 9772 1d35 33000000 		.4byte	0x33
 9773 1d39 02       		.uleb128 0x2
 9774 1d3a 91       		.byte	0x91
 9775 1d3b 77       		.sleb128 -9
 9776 1d3c 35       		.uleb128 0x35
 9777 1d3d 6E120000 		.4byte	.LVL298
 9778 1d41 4F2B0000 		.4byte	0x2b4f
 9779 1d45 34       		.uleb128 0x34
 9780 1d46 01       		.uleb128 0x1
 9781 1d47 52       		.byte	0x52
 9782 1d48 01       		.uleb128 0x1
 9783 1d49 31       		.byte	0x31
 9784 1d4a 34       		.uleb128 0x34
 9785 1d4b 01       		.uleb128 0x1
 9786 1d4c 53       		.byte	0x53
 9787 1d4d 02       		.uleb128 0x2
 9788 1d4e 91       		.byte	0x91
 9789 1d4f 77       		.sleb128 -9
 9790 1d50 00       		.byte	0
 9791 1d51 00       		.byte	0
 9792 1d52 2B       		.uleb128 0x2b
 9793 1d53 8F0C0000 		.4byte	.LASF299
 9794 1d57 0E       		.byte	0xe
 9795 1d58 3F       		.byte	0x3f
 9796 1d59 9A000000 		.4byte	0x9a
 9797 1d5d 0C120000 		.4byte	.LFB94
 9798 1d61 10000000 		.4byte	.LFE94-.LFB94
 9799 1d65 01       		.uleb128 0x1
 9800 1d66 9C       		.byte	0x9c
 9801 1d67 7C1D0000 		.4byte	0x1d7c
 9802 1d6b 2C       		.uleb128 0x2c
 9803 1d6c 660B0000 		.4byte	.LASF300
 9804 1d70 01       		.byte	0x1
 9805 1d71 4C07     		.2byte	0x74c
 9806 1d73 33000000 		.4byte	0x33
 9807 1d77 CB0D0000 		.4byte	.LLST53
 9808 1d7b 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 237


 9809 1d7c 2B       		.uleb128 0x2b
 9810 1d7d F0080000 		.4byte	.LASF301
 9811 1d81 0E       		.byte	0xe
 9812 1d82 39       		.byte	0x39
 9813 1d83 9A000000 		.4byte	0x9a
 9814 1d87 B0100000 		.4byte	.LFB93
 9815 1d8b 5C010000 		.4byte	.LFE93-.LFB93
 9816 1d8f 01       		.uleb128 0x1
 9817 1d90 9C       		.byte	0x9c
 9818 1d91 6D1E0000 		.4byte	0x1e6d
 9819 1d95 2C       		.uleb128 0x2c
 9820 1d96 F6030000 		.4byte	.LASF302
 9821 1d9a 01       		.byte	0x1
 9822 1d9b 1A07     		.2byte	0x71a
 9823 1d9d 33000000 		.4byte	0x33
 9824 1da1 ED0D0000 		.4byte	.LLST52
 9825 1da5 28       		.uleb128 0x28
 9826 1da6 746D7000 		.ascii	"tmp\000"
 9827 1daa 01       		.byte	0x1
 9828 1dab 1C07     		.2byte	0x71c
 9829 1dad 33000000 		.4byte	0x33
 9830 1db1 02       		.uleb128 0x2
 9831 1db2 91       		.byte	0x91
 9832 1db3 77       		.sleb128 -9
 9833 1db4 33       		.uleb128 0x33
 9834 1db5 D8100000 		.4byte	.LVL282
 9835 1db9 702B0000 		.4byte	0x2b70
 9836 1dbd CD1D0000 		.4byte	0x1dcd
 9837 1dc1 34       		.uleb128 0x34
 9838 1dc2 01       		.uleb128 0x1
 9839 1dc3 52       		.byte	0x52
 9840 1dc4 01       		.uleb128 0x1
 9841 1dc5 31       		.byte	0x31
 9842 1dc6 34       		.uleb128 0x34
 9843 1dc7 01       		.uleb128 0x1
 9844 1dc8 53       		.byte	0x53
 9845 1dc9 02       		.uleb128 0x2
 9846 1dca 91       		.byte	0x91
 9847 1dcb 77       		.sleb128 -9
 9848 1dcc 00       		.byte	0
 9849 1dcd 33       		.uleb128 0x33
 9850 1dce FC100000 		.4byte	.LVL283
 9851 1dd2 4F2B0000 		.4byte	0x2b4f
 9852 1dd6 E61D0000 		.4byte	0x1de6
 9853 1dda 34       		.uleb128 0x34
 9854 1ddb 01       		.uleb128 0x1
 9855 1ddc 52       		.byte	0x52
 9856 1ddd 01       		.uleb128 0x1
 9857 1dde 31       		.byte	0x31
 9858 1ddf 34       		.uleb128 0x34
 9859 1de0 01       		.uleb128 0x1
 9860 1de1 53       		.byte	0x53
 9861 1de2 02       		.uleb128 0x2
 9862 1de3 91       		.byte	0x91
 9863 1de4 77       		.sleb128 -9
 9864 1de5 00       		.byte	0
 9865 1de6 33       		.uleb128 0x33
ARM GAS  /tmp/cci8Vpl3.s 			page 238


 9866 1de7 06110000 		.4byte	.LVL284
 9867 1deb 5A2B0000 		.4byte	0x2b5a
 9868 1def F91D0000 		.4byte	0x1df9
 9869 1df3 34       		.uleb128 0x34
 9870 1df4 01       		.uleb128 0x1
 9871 1df5 50       		.byte	0x50
 9872 1df6 01       		.uleb128 0x1
 9873 1df7 33       		.byte	0x33
 9874 1df8 00       		.byte	0
 9875 1df9 33       		.uleb128 0x33
 9876 1dfa 42110000 		.4byte	.LVL285
 9877 1dfe 4F2B0000 		.4byte	0x2b4f
 9878 1e02 121E0000 		.4byte	0x1e12
 9879 1e06 34       		.uleb128 0x34
 9880 1e07 01       		.uleb128 0x1
 9881 1e08 52       		.byte	0x52
 9882 1e09 01       		.uleb128 0x1
 9883 1e0a 31       		.byte	0x31
 9884 1e0b 34       		.uleb128 0x34
 9885 1e0c 01       		.uleb128 0x1
 9886 1e0d 53       		.byte	0x53
 9887 1e0e 02       		.uleb128 0x2
 9888 1e0f 91       		.byte	0x91
 9889 1e10 77       		.sleb128 -9
 9890 1e11 00       		.byte	0
 9891 1e12 33       		.uleb128 0x33
 9892 1e13 60110000 		.4byte	.LVL288
 9893 1e17 702B0000 		.4byte	0x2b70
 9894 1e1b 2B1E0000 		.4byte	0x1e2b
 9895 1e1f 34       		.uleb128 0x34
 9896 1e20 01       		.uleb128 0x1
 9897 1e21 52       		.byte	0x52
 9898 1e22 01       		.uleb128 0x1
 9899 1e23 31       		.byte	0x31
 9900 1e24 34       		.uleb128 0x34
 9901 1e25 01       		.uleb128 0x1
 9902 1e26 53       		.byte	0x53
 9903 1e27 02       		.uleb128 0x2
 9904 1e28 91       		.byte	0x91
 9905 1e29 77       		.sleb128 -9
 9906 1e2a 00       		.byte	0
 9907 1e2b 33       		.uleb128 0x33
 9908 1e2c 92110000 		.4byte	.LVL289
 9909 1e30 4F2B0000 		.4byte	0x2b4f
 9910 1e34 441E0000 		.4byte	0x1e44
 9911 1e38 34       		.uleb128 0x34
 9912 1e39 01       		.uleb128 0x1
 9913 1e3a 52       		.byte	0x52
 9914 1e3b 01       		.uleb128 0x1
 9915 1e3c 31       		.byte	0x31
 9916 1e3d 34       		.uleb128 0x34
 9917 1e3e 01       		.uleb128 0x1
 9918 1e3f 53       		.byte	0x53
 9919 1e40 02       		.uleb128 0x2
 9920 1e41 91       		.byte	0x91
 9921 1e42 77       		.sleb128 -9
 9922 1e43 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 239


 9923 1e44 33       		.uleb128 0x33
 9924 1e45 9A110000 		.4byte	.LVL290
 9925 1e49 5A2B0000 		.4byte	0x2b5a
 9926 1e4d 571E0000 		.4byte	0x1e57
 9927 1e51 34       		.uleb128 0x34
 9928 1e52 01       		.uleb128 0x1
 9929 1e53 50       		.byte	0x50
 9930 1e54 01       		.uleb128 0x1
 9931 1e55 33       		.byte	0x33
 9932 1e56 00       		.byte	0
 9933 1e57 35       		.uleb128 0x35
 9934 1e58 D0110000 		.4byte	.LVL291
 9935 1e5c 4F2B0000 		.4byte	0x2b4f
 9936 1e60 34       		.uleb128 0x34
 9937 1e61 01       		.uleb128 0x1
 9938 1e62 52       		.byte	0x52
 9939 1e63 01       		.uleb128 0x1
 9940 1e64 31       		.byte	0x31
 9941 1e65 34       		.uleb128 0x34
 9942 1e66 01       		.uleb128 0x1
 9943 1e67 53       		.byte	0x53
 9944 1e68 02       		.uleb128 0x2
 9945 1e69 91       		.byte	0x91
 9946 1e6a 77       		.sleb128 -9
 9947 1e6b 00       		.byte	0
 9948 1e6c 00       		.byte	0
 9949 1e6d 2B       		.uleb128 0x2b
 9950 1e6e DB080000 		.4byte	.LASF303
 9951 1e72 0E       		.byte	0xe
 9952 1e73 69       		.byte	0x69
 9953 1e74 9A000000 		.4byte	0x9a
 9954 1e78 EC0F0000 		.4byte	.LFB92
 9955 1e7c C4000000 		.4byte	.LFE92-.LFB92
 9956 1e80 01       		.uleb128 0x1
 9957 1e81 9C       		.byte	0x9c
 9958 1e82 2B1F0000 		.4byte	0x1f2b
 9959 1e86 2C       		.uleb128 0x2c
 9960 1e87 0B0B0000 		.4byte	.LASF266
 9961 1e8b 01       		.byte	0x1
 9962 1e8c F406     		.2byte	0x6f4
 9963 1e8e 5C000000 		.4byte	0x5c
 9964 1e92 400E0000 		.4byte	.LLST48
 9965 1e96 2C       		.uleb128 0x2c
 9966 1e97 B00F0000 		.4byte	.LASF255
 9967 1e9b 01       		.byte	0x1
 9968 1e9c F406     		.2byte	0x6f4
 9969 1e9e B9030000 		.4byte	0x3b9
 9970 1ea2 7A0E0000 		.4byte	.LLST49
 9971 1ea6 2C       		.uleb128 0x2c
 9972 1ea7 A0040000 		.4byte	.LASF304
 9973 1eab 01       		.byte	0x1
 9974 1eac F506     		.2byte	0x6f5
 9975 1eae B9030000 		.4byte	0x3b9
 9976 1eb2 C70E0000 		.4byte	.LLST50
 9977 1eb6 28       		.uleb128 0x28
 9978 1eb7 746D7000 		.ascii	"tmp\000"
 9979 1ebb 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 240


 9980 1ebc F706     		.2byte	0x6f7
 9981 1ebe 25140000 		.4byte	0x1425
 9982 1ec2 02       		.uleb128 0x2
 9983 1ec3 91       		.byte	0x91
 9984 1ec4 64       		.sleb128 -28
 9985 1ec5 30       		.uleb128 0x30
 9986 1ec6 110A0000 		.4byte	.LASF285
 9987 1eca 01       		.byte	0x1
 9988 1ecb F806     		.2byte	0x6f8
 9989 1ecd 5C000000 		.4byte	0x5c
 9990 1ed1 140F0000 		.4byte	.LLST51
 9991 1ed5 33       		.uleb128 0x33
 9992 1ed6 1A100000 		.4byte	.LVL269
 9993 1eda 702B0000 		.4byte	0x2b70
 9994 1ede EE1E0000 		.4byte	0x1eee
 9995 1ee2 34       		.uleb128 0x34
 9996 1ee3 01       		.uleb128 0x1
 9997 1ee4 52       		.byte	0x52
 9998 1ee5 01       		.uleb128 0x1
 9999 1ee6 32       		.byte	0x32
 10000 1ee7 34       		.uleb128 0x34
 10001 1ee8 01       		.uleb128 0x1
 10002 1ee9 53       		.byte	0x53
 10003 1eea 02       		.uleb128 0x2
 10004 1eeb 91       		.byte	0x91
 10005 1eec 64       		.sleb128 -28
 10006 1eed 00       		.byte	0
 10007 1eee 33       		.uleb128 0x33
 10008 1eef 4A100000 		.4byte	.LVL271
 10009 1ef3 702B0000 		.4byte	0x2b70
 10010 1ef7 071F0000 		.4byte	0x1f07
 10011 1efb 34       		.uleb128 0x34
 10012 1efc 01       		.uleb128 0x1
 10013 1efd 52       		.byte	0x52
 10014 1efe 01       		.uleb128 0x1
 10015 1eff 31       		.byte	0x31
 10016 1f00 34       		.uleb128 0x34
 10017 1f01 01       		.uleb128 0x1
 10018 1f02 53       		.byte	0x53
 10019 1f03 02       		.uleb128 0x2
 10020 1f04 91       		.byte	0x91
 10021 1f05 64       		.sleb128 -28
 10022 1f06 00       		.byte	0
 10023 1f07 33       		.uleb128 0x33
 10024 1f08 68100000 		.4byte	.LVL272
 10025 1f0c 702B0000 		.4byte	0x2b70
 10026 1f10 211F0000 		.4byte	0x1f21
 10027 1f14 34       		.uleb128 0x34
 10028 1f15 01       		.uleb128 0x1
 10029 1f16 52       		.byte	0x52
 10030 1f17 02       		.uleb128 0x2
 10031 1f18 75       		.byte	0x75
 10032 1f19 00       		.sleb128 0
 10033 1f1a 34       		.uleb128 0x34
 10034 1f1b 01       		.uleb128 0x1
 10035 1f1c 53       		.byte	0x53
 10036 1f1d 02       		.uleb128 0x2
ARM GAS  /tmp/cci8Vpl3.s 			page 241


 10037 1f1e 77       		.byte	0x77
 10038 1f1f 00       		.sleb128 0
 10039 1f20 00       		.byte	0
 10040 1f21 39       		.uleb128 0x39
 10041 1f22 88100000 		.4byte	.LVL276
 10042 1f26 98240000 		.4byte	0x2498
 10043 1f2a 00       		.byte	0
 10044 1f2b 2B       		.uleb128 0x2b
 10045 1f2c 56020000 		.4byte	.LASF305
 10046 1f30 0E       		.byte	0xe
 10047 1f31 67       		.byte	0x67
 10048 1f32 9A000000 		.4byte	0x9a
 10049 1f36 0C0E0000 		.4byte	.LFB91
 10050 1f3a E0010000 		.4byte	.LFE91-.LFB91
 10051 1f3e 01       		.uleb128 0x1
 10052 1f3f 9C       		.byte	0x9c
 10053 1f40 29200000 		.4byte	0x2029
 10054 1f44 2C       		.uleb128 0x2c
 10055 1f45 0A040000 		.4byte	.LASF21
 10056 1f49 01       		.byte	0x1
 10057 1f4a A306     		.2byte	0x6a3
 10058 1f4c F5110000 		.4byte	0x11f5
 10059 1f50 3D0F0000 		.4byte	.LLST40
 10060 1f54 2C       		.uleb128 0x2c
 10061 1f55 D90D0000 		.4byte	.LASF22
 10062 1f59 01       		.byte	0x1
 10063 1f5a A306     		.2byte	0x6a3
 10064 1f5c F5110000 		.4byte	0x11f5
 10065 1f60 8A0F0000 		.4byte	.LLST41
 10066 1f64 2C       		.uleb128 0x2c
 10067 1f65 3D030000 		.4byte	.LASF260
 10068 1f69 01       		.byte	0x1
 10069 1f6a A306     		.2byte	0x6a3
 10070 1f6c 670F0000 		.4byte	0xf67
 10071 1f70 BE0F0000 		.4byte	.LLST42
 10072 1f74 2C       		.uleb128 0x2c
 10073 1f75 21080000 		.4byte	.LASF190
 10074 1f79 01       		.byte	0x1
 10075 1f7a A406     		.2byte	0x6a4
 10076 1f7c B9030000 		.4byte	0x3b9
 10077 1f80 DF0F0000 		.4byte	.LLST43
 10078 1f84 2C       		.uleb128 0x2c
 10079 1f85 A0040000 		.4byte	.LASF304
 10080 1f89 01       		.byte	0x1
 10081 1f8a A406     		.2byte	0x6a4
 10082 1f8c B9030000 		.4byte	0x3b9
 10083 1f90 53100000 		.4byte	.LLST44
 10084 1f94 2D       		.uleb128 0x2d
 10085 1f95 B00F0000 		.4byte	.LASF255
 10086 1f99 01       		.byte	0x1
 10087 1f9a A706     		.2byte	0x6a7
 10088 1f9c C71B0000 		.4byte	0x1bc7
 10089 1fa0 02       		.uleb128 0x2
 10090 1fa1 91       		.byte	0x91
 10091 1fa2 54       		.sleb128 -44
 10092 1fa3 30       		.uleb128 0x30
 10093 1fa4 480B0000 		.4byte	.LASF306
ARM GAS  /tmp/cci8Vpl3.s 			page 242


 10094 1fa8 01       		.byte	0x1
 10095 1fa9 A806     		.2byte	0x6a8
 10096 1fab 33000000 		.4byte	0x33
 10097 1faf 73100000 		.4byte	.LLST45
 10098 1fb3 30       		.uleb128 0x30
 10099 1fb4 110A0000 		.4byte	.LASF285
 10100 1fb8 01       		.byte	0x1
 10101 1fb9 A906     		.2byte	0x6a9
 10102 1fbb 5C000000 		.4byte	0x5c
 10103 1fbf 15120000 		.4byte	.LLST46
 10104 1fc3 30       		.uleb128 0x30
 10105 1fc4 660D0000 		.4byte	.LASF307
 10106 1fc8 01       		.byte	0x1
 10107 1fc9 A906     		.2byte	0x6a9
 10108 1fcb 5C000000 		.4byte	0x5c
 10109 1fcf 3E120000 		.4byte	.LLST47
 10110 1fd3 33       		.uleb128 0x33
 10111 1fd4 720E0000 		.4byte	.LVL241
 10112 1fd8 702B0000 		.4byte	0x2b70
 10113 1fdc EC1F0000 		.4byte	0x1fec
 10114 1fe0 34       		.uleb128 0x34
 10115 1fe1 01       		.uleb128 0x1
 10116 1fe2 52       		.byte	0x52
 10117 1fe3 01       		.uleb128 0x1
 10118 1fe4 32       		.byte	0x32
 10119 1fe5 34       		.uleb128 0x34
 10120 1fe6 01       		.uleb128 0x1
 10121 1fe7 53       		.byte	0x53
 10122 1fe8 02       		.uleb128 0x2
 10123 1fe9 91       		.byte	0x91
 10124 1fea 54       		.sleb128 -44
 10125 1feb 00       		.byte	0
 10126 1fec 33       		.uleb128 0x33
 10127 1fed AC0E0000 		.4byte	.LVL243
 10128 1ff1 702B0000 		.4byte	0x2b70
 10129 1ff5 05200000 		.4byte	0x2005
 10130 1ff9 34       		.uleb128 0x34
 10131 1ffa 01       		.uleb128 0x1
 10132 1ffb 52       		.byte	0x52
 10133 1ffc 01       		.uleb128 0x1
 10134 1ffd 31       		.byte	0x31
 10135 1ffe 34       		.uleb128 0x34
 10136 1fff 01       		.uleb128 0x1
 10137 2000 53       		.byte	0x53
 10138 2001 02       		.uleb128 0x2
 10139 2002 91       		.byte	0x91
 10140 2003 54       		.sleb128 -44
 10141 2004 00       		.byte	0
 10142 2005 33       		.uleb128 0x33
 10143 2006 CE0E0000 		.4byte	.LVL244
 10144 200a 702B0000 		.4byte	0x2b70
 10145 200e 1F200000 		.4byte	0x201f
 10146 2012 34       		.uleb128 0x34
 10147 2013 01       		.uleb128 0x1
 10148 2014 52       		.byte	0x52
 10149 2015 02       		.uleb128 0x2
 10150 2016 74       		.byte	0x74
ARM GAS  /tmp/cci8Vpl3.s 			page 243


 10151 2017 00       		.sleb128 0
 10152 2018 34       		.uleb128 0x34
 10153 2019 01       		.uleb128 0x1
 10154 201a 53       		.byte	0x53
 10155 201b 02       		.uleb128 0x2
 10156 201c 91       		.byte	0x91
 10157 201d 54       		.sleb128 -44
 10158 201e 00       		.byte	0
 10159 201f 39       		.uleb128 0x39
 10160 2020 B80F0000 		.4byte	.LVL254
 10161 2024 98240000 		.4byte	0x2498
 10162 2028 00       		.byte	0
 10163 2029 2B       		.uleb128 0x2b
 10164 202a 42000000 		.4byte	.LASF308
 10165 202e 0E       		.byte	0xe
 10166 202f 66       		.byte	0x66
 10167 2030 9A000000 		.4byte	0x9a
 10168 2034 C40D0000 		.4byte	.LFB90
 10169 2038 48000000 		.4byte	.LFE90-.LFB90
 10170 203c 01       		.uleb128 0x1
 10171 203d 9C       		.byte	0x9c
 10172 203e 77200000 		.4byte	0x2077
 10173 2042 2C       		.uleb128 0x2c
 10174 2043 98050000 		.4byte	.LASF309
 10175 2047 01       		.byte	0x1
 10176 2048 8606     		.2byte	0x686
 10177 204a F5110000 		.4byte	0x11f5
 10178 204e 80120000 		.4byte	.LLST39
 10179 2052 28       		.uleb128 0x28
 10180 2053 746D7000 		.ascii	"tmp\000"
 10181 2057 01       		.byte	0x1
 10182 2058 8806     		.2byte	0x688
 10183 205a 25140000 		.4byte	0x1425
 10184 205e 02       		.uleb128 0x2
 10185 205f 91       		.byte	0x91
 10186 2060 74       		.sleb128 -12
 10187 2061 35       		.uleb128 0x35
 10188 2062 E20D0000 		.4byte	.LVL226
 10189 2066 702B0000 		.4byte	0x2b70
 10190 206a 34       		.uleb128 0x34
 10191 206b 01       		.uleb128 0x1
 10192 206c 52       		.byte	0x52
 10193 206d 01       		.uleb128 0x1
 10194 206e 32       		.byte	0x32
 10195 206f 34       		.uleb128 0x34
 10196 2070 01       		.uleb128 0x1
 10197 2071 53       		.byte	0x53
 10198 2072 02       		.uleb128 0x2
 10199 2073 91       		.byte	0x91
 10200 2074 74       		.sleb128 -12
 10201 2075 00       		.byte	0
 10202 2076 00       		.byte	0
 10203 2077 2B       		.uleb128 0x2b
 10204 2078 BC020000 		.4byte	.LASF310
 10205 207c 0E       		.byte	0xe
 10206 207d 5C       		.byte	0x5c
 10207 207e 9A000000 		.4byte	0x9a
ARM GAS  /tmp/cci8Vpl3.s 			page 244


 10208 2082 14140000 		.4byte	.LFB89
 10209 2086 04010000 		.4byte	.LFE89-.LFB89
 10210 208a 01       		.uleb128 0x1
 10211 208b 9C       		.byte	0x9c
 10212 208c 1E210000 		.4byte	0x211e
 10213 2090 2C       		.uleb128 0x2c
 10214 2091 21080000 		.4byte	.LASF190
 10215 2095 01       		.byte	0x1
 10216 2096 3906     		.2byte	0x639
 10217 2098 33000000 		.4byte	0x33
 10218 209c C2120000 		.4byte	.LLST57
 10219 20a0 2D       		.uleb128 0x2d
 10220 20a1 B00F0000 		.4byte	.LASF255
 10221 20a5 01       		.byte	0x1
 10222 20a6 3B06     		.2byte	0x63b
 10223 20a8 33000000 		.4byte	0x33
 10224 20ac 02       		.uleb128 0x2
 10225 20ad 91       		.byte	0x91
 10226 20ae 6F       		.sleb128 -17
 10227 20af 33       		.uleb128 0x33
 10228 20b0 3A140000 		.4byte	.LVL330
 10229 20b4 4F2B0000 		.4byte	0x2b4f
 10230 20b8 C8200000 		.4byte	0x20c8
 10231 20bc 34       		.uleb128 0x34
 10232 20bd 01       		.uleb128 0x1
 10233 20be 52       		.byte	0x52
 10234 20bf 01       		.uleb128 0x1
 10235 20c0 31       		.byte	0x31
 10236 20c1 34       		.uleb128 0x34
 10237 20c2 01       		.uleb128 0x1
 10238 20c3 53       		.byte	0x53
 10239 20c4 02       		.uleb128 0x2
 10240 20c5 91       		.byte	0x91
 10241 20c6 6F       		.sleb128 -17
 10242 20c7 00       		.byte	0
 10243 20c8 33       		.uleb128 0x33
 10244 20c9 A0140000 		.4byte	.LVL331
 10245 20cd 4F2B0000 		.4byte	0x2b4f
 10246 20d1 E1200000 		.4byte	0x20e1
 10247 20d5 34       		.uleb128 0x34
 10248 20d6 01       		.uleb128 0x1
 10249 20d7 52       		.byte	0x52
 10250 20d8 01       		.uleb128 0x1
 10251 20d9 31       		.byte	0x31
 10252 20da 34       		.uleb128 0x34
 10253 20db 01       		.uleb128 0x1
 10254 20dc 53       		.byte	0x53
 10255 20dd 02       		.uleb128 0x2
 10256 20de 91       		.byte	0x91
 10257 20df 6F       		.sleb128 -17
 10258 20e0 00       		.byte	0
 10259 20e1 33       		.uleb128 0x33
 10260 20e2 B0140000 		.4byte	.LVL332
 10261 20e6 041D0000 		.4byte	0x1d04
 10262 20ea F4200000 		.4byte	0x20f4
 10263 20ee 34       		.uleb128 0x34
 10264 20ef 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 245


 10265 20f0 50       		.byte	0x50
 10266 20f1 01       		.uleb128 0x1
 10267 20f2 30       		.byte	0x30
 10268 20f3 00       		.byte	0
 10269 20f4 33       		.uleb128 0x33
 10270 20f5 BE140000 		.4byte	.LVL333
 10271 20f9 5A2B0000 		.4byte	0x2b5a
 10272 20fd 08210000 		.4byte	0x2108
 10273 2101 34       		.uleb128 0x34
 10274 2102 01       		.uleb128 0x1
 10275 2103 50       		.byte	0x50
 10276 2104 02       		.uleb128 0x2
 10277 2105 08       		.byte	0x8
 10278 2106 32       		.byte	0x32
 10279 2107 00       		.byte	0
 10280 2108 35       		.uleb128 0x35
 10281 2109 E6140000 		.4byte	.LVL336
 10282 210d 4F2B0000 		.4byte	0x2b4f
 10283 2111 34       		.uleb128 0x34
 10284 2112 01       		.uleb128 0x1
 10285 2113 52       		.byte	0x52
 10286 2114 01       		.uleb128 0x1
 10287 2115 31       		.byte	0x31
 10288 2116 34       		.uleb128 0x34
 10289 2117 01       		.uleb128 0x1
 10290 2118 53       		.byte	0x53
 10291 2119 02       		.uleb128 0x2
 10292 211a 91       		.byte	0x91
 10293 211b 6F       		.sleb128 -17
 10294 211c 00       		.byte	0
 10295 211d 00       		.byte	0
 10296 211e 2B       		.uleb128 0x2b
 10297 211f ED0A0000 		.4byte	.LASF311
 10298 2123 0E       		.byte	0xe
 10299 2124 5B       		.byte	0x5b
 10300 2125 9A000000 		.4byte	0x9a
 10301 2129 AC0D0000 		.4byte	.LFB88
 10302 212d 18000000 		.4byte	.LFE88-.LFB88
 10303 2131 01       		.uleb128 0x1
 10304 2132 9C       		.byte	0x9c
 10305 2133 48210000 		.4byte	0x2148
 10306 2137 2C       		.uleb128 0x2c
 10307 2138 570F0000 		.4byte	.LASF312
 10308 213c 01       		.byte	0x1
 10309 213d 2606     		.2byte	0x626
 10310 213f B9030000 		.4byte	0x3b9
 10311 2143 FC120000 		.4byte	.LLST38
 10312 2147 00       		.byte	0
 10313 2148 2B       		.uleb128 0x2b
 10314 2149 E40F0000 		.4byte	.LASF313
 10315 214d 0E       		.byte	0xe
 10316 214e 59       		.byte	0x59
 10317 214f 9A000000 		.4byte	0x9a
 10318 2153 4C0D0000 		.4byte	.LFB87
 10319 2157 60000000 		.4byte	.LFE87-.LFB87
 10320 215b 01       		.uleb128 0x1
 10321 215c 9C       		.byte	0x9c
ARM GAS  /tmp/cci8Vpl3.s 			page 246


 10322 215d CA210000 		.4byte	0x21ca
 10323 2161 2C       		.uleb128 0x2c
 10324 2162 21080000 		.4byte	.LASF190
 10325 2166 01       		.byte	0x1
 10326 2167 FC05     		.2byte	0x5fc
 10327 2169 33000000 		.4byte	0x33
 10328 216d 28130000 		.4byte	.LLST35
 10329 2171 30       		.uleb128 0x30
 10330 2172 6D0F0000 		.4byte	.LASF314
 10331 2176 01       		.byte	0x1
 10332 2177 FE05     		.2byte	0x5fe
 10333 2179 33000000 		.4byte	0x33
 10334 217d 9E130000 		.4byte	.LLST36
 10335 2181 30       		.uleb128 0x30
 10336 2182 CB010000 		.4byte	.LASF279
 10337 2186 01       		.byte	0x1
 10338 2187 FF05     		.2byte	0x5ff
 10339 2189 9A000000 		.4byte	0x9a
 10340 218d BC130000 		.4byte	.LLST37
 10341 2191 33       		.uleb128 0x33
 10342 2192 7A0D0000 		.4byte	.LVL212
 10343 2196 CA2A0000 		.4byte	0x2aca
 10344 219a A4210000 		.4byte	0x21a4
 10345 219e 34       		.uleb128 0x34
 10346 219f 01       		.uleb128 0x1
 10347 21a0 50       		.byte	0x50
 10348 21a1 01       		.uleb128 0x1
 10349 21a2 31       		.byte	0x31
 10350 21a3 00       		.byte	0
 10351 21a4 39       		.uleb128 0x39
 10352 21a5 800D0000 		.4byte	.LVL213
 10353 21a9 CA2A0000 		.4byte	0x2aca
 10354 21ad 33       		.uleb128 0x33
 10355 21ae 940D0000 		.4byte	.LVL218
 10356 21b2 CA2A0000 		.4byte	0x2aca
 10357 21b6 C0210000 		.4byte	0x21c0
 10358 21ba 34       		.uleb128 0x34
 10359 21bb 01       		.uleb128 0x1
 10360 21bc 50       		.byte	0x50
 10361 21bd 01       		.uleb128 0x1
 10362 21be 31       		.byte	0x31
 10363 21bf 00       		.byte	0
 10364 21c0 39       		.uleb128 0x39
 10365 21c1 980D0000 		.4byte	.LVL219
 10366 21c5 98240000 		.4byte	0x2498
 10367 21c9 00       		.byte	0
 10368 21ca 46       		.uleb128 0x46
 10369 21cb 00000000 		.4byte	.LASF352
 10370 21cf 0E       		.byte	0xe
 10371 21d0 58       		.byte	0x58
 10372 21d1 9A000000 		.4byte	0x9a
 10373 21d5 01       		.byte	0x1
 10374 21d6 E7210000 		.4byte	0x21e7
 10375 21da 44       		.uleb128 0x44
 10376 21db 21080000 		.4byte	.LASF190
 10377 21df 01       		.byte	0x1
 10378 21e0 ED05     		.2byte	0x5ed
ARM GAS  /tmp/cci8Vpl3.s 			page 247


 10379 21e2 B9030000 		.4byte	0x3b9
 10380 21e6 00       		.byte	0
 10381 21e7 2B       		.uleb128 0x2b
 10382 21e8 400D0000 		.4byte	.LASF315
 10383 21ec 0E       		.byte	0xe
 10384 21ed 51       		.byte	0x51
 10385 21ee 9A000000 		.4byte	0x9a
 10386 21f2 F00C0000 		.4byte	.LFB85
 10387 21f6 4C000000 		.4byte	.LFE85-.LFB85
 10388 21fa 01       		.uleb128 0x1
 10389 21fb 9C       		.byte	0x9c
 10390 21fc 11220000 		.4byte	0x2211
 10391 2200 2C       		.uleb128 0x2c
 10392 2201 B2070000 		.4byte	.LASF316
 10393 2205 01       		.byte	0x1
 10394 2206 CD05     		.2byte	0x5cd
 10395 2208 B7110000 		.4byte	0x11b7
 10396 220c FE130000 		.4byte	.LLST33
 10397 2210 00       		.byte	0
 10398 2211 2B       		.uleb128 0x2b
 10399 2212 DB0A0000 		.4byte	.LASF317
 10400 2216 0E       		.byte	0xe
 10401 2217 50       		.byte	0x50
 10402 2218 9A000000 		.4byte	0x9a
 10403 221c A40C0000 		.4byte	.LFB84
 10404 2220 4C000000 		.4byte	.LFE84-.LFB84
 10405 2224 01       		.uleb128 0x1
 10406 2225 9C       		.byte	0x9c
 10407 2226 3B220000 		.4byte	0x223b
 10408 222a 2C       		.uleb128 0x2c
 10409 222b B2070000 		.4byte	.LASF316
 10410 222f 01       		.byte	0x1
 10411 2230 B305     		.2byte	0x5b3
 10412 2232 FE1C0000 		.4byte	0x1cfe
 10413 2236 51140000 		.4byte	.LLST32
 10414 223a 00       		.byte	0
 10415 223b 2B       		.uleb128 0x2b
 10416 223c 91030000 		.4byte	.LASF318
 10417 2240 0E       		.byte	0xe
 10418 2241 56       		.byte	0x56
 10419 2242 9A000000 		.4byte	0x9a
 10420 2246 9E0C0000 		.4byte	.LFB83
 10421 224a 06000000 		.4byte	.LFE83-.LFB83
 10422 224e 01       		.uleb128 0x1
 10423 224f 9C       		.byte	0x9c
 10424 2250 65220000 		.4byte	0x2265
 10425 2254 2C       		.uleb128 0x2c
 10426 2255 AC050000 		.4byte	.LASF319
 10427 2259 01       		.byte	0x1
 10428 225a 9D05     		.2byte	0x59d
 10429 225c 5C000000 		.4byte	0x5c
 10430 2260 D6140000 		.4byte	.LLST31
 10431 2264 00       		.byte	0
 10432 2265 2B       		.uleb128 0x2b
 10433 2266 C7030000 		.4byte	.LASF320
 10434 226a 0E       		.byte	0xe
 10435 226b 55       		.byte	0x55
ARM GAS  /tmp/cci8Vpl3.s 			page 248


 10436 226c 9A000000 		.4byte	0x9a
 10437 2270 940C0000 		.4byte	.LFB82
 10438 2274 0A000000 		.4byte	.LFE82-.LFB82
 10439 2278 01       		.uleb128 0x1
 10440 2279 9C       		.byte	0x9c
 10441 227a 8F220000 		.4byte	0x228f
 10442 227e 2C       		.uleb128 0x2c
 10443 227f AC050000 		.4byte	.LASF319
 10444 2283 01       		.byte	0x1
 10445 2284 8705     		.2byte	0x587
 10446 2286 B7110000 		.4byte	0x11b7
 10447 228a F7140000 		.4byte	.LLST30
 10448 228e 00       		.byte	0
 10449 228f 2B       		.uleb128 0x2b
 10450 2290 230F0000 		.4byte	.LASF321
 10451 2294 0E       		.byte	0xe
 10452 2295 54       		.byte	0x54
 10453 2296 9A000000 		.4byte	0x9a
 10454 229a 74130000 		.4byte	.LFB81
 10455 229e A0000000 		.4byte	.LFE81-.LFB81
 10456 22a2 01       		.uleb128 0x1
 10457 22a3 9C       		.byte	0x9c
 10458 22a4 06230000 		.4byte	0x2306
 10459 22a8 2C       		.uleb128 0x2c
 10460 22a9 AC050000 		.4byte	.LASF319
 10461 22ad 01       		.byte	0x1
 10462 22ae 5805     		.2byte	0x558
 10463 22b0 5C000000 		.4byte	0x5c
 10464 22b4 18150000 		.4byte	.LLST56
 10465 22b8 2D       		.uleb128 0x2d
 10466 22b9 B00F0000 		.4byte	.LASF255
 10467 22bd 01       		.byte	0x1
 10468 22be 5A05     		.2byte	0x55a
 10469 22c0 33000000 		.4byte	0x33
 10470 22c4 02       		.uleb128 0x2
 10471 22c5 91       		.byte	0x91
 10472 22c6 77       		.sleb128 -9
 10473 22c7 33       		.uleb128 0x33
 10474 22c8 A0130000 		.4byte	.LVL318
 10475 22cc D1270000 		.4byte	0x27d1
 10476 22d0 DA220000 		.4byte	0x22da
 10477 22d4 34       		.uleb128 0x34
 10478 22d5 01       		.uleb128 0x1
 10479 22d6 50       		.byte	0x50
 10480 22d7 01       		.uleb128 0x1
 10481 22d8 30       		.byte	0x30
 10482 22d9 00       		.byte	0
 10483 22da 33       		.uleb128 0x33
 10484 22db D0130000 		.4byte	.LVL321
 10485 22df 4F2B0000 		.4byte	0x2b4f
 10486 22e3 F3220000 		.4byte	0x22f3
 10487 22e7 34       		.uleb128 0x34
 10488 22e8 01       		.uleb128 0x1
 10489 22e9 52       		.byte	0x52
 10490 22ea 01       		.uleb128 0x1
 10491 22eb 31       		.byte	0x31
 10492 22ec 34       		.uleb128 0x34
ARM GAS  /tmp/cci8Vpl3.s 			page 249


 10493 22ed 01       		.uleb128 0x1
 10494 22ee 53       		.byte	0x53
 10495 22ef 02       		.uleb128 0x2
 10496 22f0 91       		.byte	0x91
 10497 22f1 77       		.sleb128 -9
 10498 22f2 00       		.byte	0
 10499 22f3 39       		.uleb128 0x39
 10500 22f4 EC130000 		.4byte	.LVL322
 10501 22f8 30230000 		.4byte	0x2330
 10502 22fc 39       		.uleb128 0x39
 10503 22fd F8130000 		.4byte	.LVL325
 10504 2301 D1270000 		.4byte	0x27d1
 10505 2305 00       		.byte	0
 10506 2306 2B       		.uleb128 0x2b
 10507 2307 AB000000 		.4byte	.LASF322
 10508 230b 0E       		.byte	0xe
 10509 230c 53       		.byte	0x53
 10510 230d 9A000000 		.4byte	0x9a
 10511 2311 780C0000 		.4byte	.LFB80
 10512 2315 1C000000 		.4byte	.LFE80-.LFB80
 10513 2319 01       		.uleb128 0x1
 10514 231a 9C       		.byte	0x9c
 10515 231b 30230000 		.4byte	0x2330
 10516 231f 2C       		.uleb128 0x2c
 10517 2320 AC050000 		.4byte	.LASF319
 10518 2324 01       		.byte	0x1
 10519 2325 4905     		.2byte	0x549
 10520 2327 B7110000 		.4byte	0x11b7
 10521 232b 7C150000 		.4byte	.LLST29
 10522 232f 00       		.byte	0
 10523 2330 2B       		.uleb128 0x2b
 10524 2331 64080000 		.4byte	.LASF323
 10525 2335 0E       		.byte	0xe
 10526 2336 46       		.byte	0x46
 10527 2337 9A000000 		.4byte	0x9a
 10528 233b E40B0000 		.4byte	.LFB79
 10529 233f 94000000 		.4byte	.LFE79-.LFB79
 10530 2343 01       		.uleb128 0x1
 10531 2344 9C       		.byte	0x9c
 10532 2345 7E230000 		.4byte	0x237e
 10533 2349 3A       		.uleb128 0x3a
 10534 234a 6C706600 		.ascii	"lpf\000"
 10535 234e 01       		.byte	0x1
 10536 234f 2805     		.2byte	0x528
 10537 2351 5C000000 		.4byte	0x5c
 10538 2355 B6150000 		.4byte	.LLST28
 10539 2359 2D       		.uleb128 0x2d
 10540 235a B00F0000 		.4byte	.LASF255
 10541 235e 01       		.byte	0x1
 10542 235f 2A05     		.2byte	0x52a
 10543 2361 33000000 		.4byte	0x33
 10544 2365 02       		.uleb128 0x2
 10545 2366 91       		.byte	0x91
 10546 2367 77       		.sleb128 -9
 10547 2368 35       		.uleb128 0x35
 10548 2369 1A0C0000 		.4byte	.LVL176
 10549 236d 4F2B0000 		.4byte	0x2b4f
ARM GAS  /tmp/cci8Vpl3.s 			page 250


 10550 2371 34       		.uleb128 0x34
 10551 2372 01       		.uleb128 0x1
 10552 2373 52       		.byte	0x52
 10553 2374 01       		.uleb128 0x1
 10554 2375 31       		.byte	0x31
 10555 2376 34       		.uleb128 0x34
 10556 2377 01       		.uleb128 0x1
 10557 2378 53       		.byte	0x53
 10558 2379 02       		.uleb128 0x2
 10559 237a 91       		.byte	0x91
 10560 237b 77       		.sleb128 -9
 10561 237c 00       		.byte	0
 10562 237d 00       		.byte	0
 10563 237e 2B       		.uleb128 0x2b
 10564 237f DF090000 		.4byte	.LASF324
 10565 2383 0E       		.byte	0xe
 10566 2384 45       		.byte	0x45
 10567 2385 9A000000 		.4byte	0x9a
 10568 2389 A00B0000 		.4byte	.LFB78
 10569 238d 44000000 		.4byte	.LFE78-.LFB78
 10570 2391 01       		.uleb128 0x1
 10571 2392 9C       		.byte	0x9c
 10572 2393 A8230000 		.4byte	0x23a8
 10573 2397 3A       		.uleb128 0x3a
 10574 2398 6C706600 		.ascii	"lpf\000"
 10575 239c 01       		.byte	0x1
 10576 239d 0405     		.2byte	0x504
 10577 239f B7110000 		.4byte	0x11b7
 10578 23a3 09160000 		.4byte	.LLST27
 10579 23a7 00       		.byte	0
 10580 23a8 2B       		.uleb128 0x2b
 10581 23a9 290C0000 		.4byte	.LASF325
 10582 23ad 0E       		.byte	0xe
 10583 23ae 4C       		.byte	0x4c
 10584 23af 9A000000 		.4byte	0x9a
 10585 23b3 080B0000 		.4byte	.LFB77
 10586 23b7 98000000 		.4byte	.LFE77-.LFB77
 10587 23bb 01       		.uleb128 0x1
 10588 23bc 9C       		.byte	0x9c
 10589 23bd F6230000 		.4byte	0x23f6
 10590 23c1 3A       		.uleb128 0x3a
 10591 23c2 66737200 		.ascii	"fsr\000"
 10592 23c6 01       		.byte	0x1
 10593 23c7 DF04     		.2byte	0x4df
 10594 23c9 33000000 		.4byte	0x33
 10595 23cd 35160000 		.4byte	.LLST26
 10596 23d1 2D       		.uleb128 0x2d
 10597 23d2 B00F0000 		.4byte	.LASF255
 10598 23d6 01       		.byte	0x1
 10599 23d7 E104     		.2byte	0x4e1
 10600 23d9 33000000 		.4byte	0x33
 10601 23dd 02       		.uleb128 0x2
 10602 23de 91       		.byte	0x91
 10603 23df 77       		.sleb128 -9
 10604 23e0 35       		.uleb128 0x35
 10605 23e1 560B0000 		.4byte	.LVL168
 10606 23e5 4F2B0000 		.4byte	0x2b4f
ARM GAS  /tmp/cci8Vpl3.s 			page 251


 10607 23e9 34       		.uleb128 0x34
 10608 23ea 01       		.uleb128 0x1
 10609 23eb 52       		.byte	0x52
 10610 23ec 01       		.uleb128 0x1
 10611 23ed 31       		.byte	0x31
 10612 23ee 34       		.uleb128 0x34
 10613 23ef 01       		.uleb128 0x1
 10614 23f0 53       		.byte	0x53
 10615 23f1 02       		.uleb128 0x2
 10616 23f2 91       		.byte	0x91
 10617 23f3 77       		.sleb128 -9
 10618 23f4 00       		.byte	0
 10619 23f5 00       		.byte	0
 10620 23f6 2B       		.uleb128 0x2b
 10621 23f7 FB060000 		.4byte	.LASF326
 10622 23fb 0E       		.byte	0xe
 10623 23fc 4B       		.byte	0x4b
 10624 23fd 9A000000 		.4byte	0x9a
 10625 2401 C40A0000 		.4byte	.LFB76
 10626 2405 44000000 		.4byte	.LFE76-.LFB76
 10627 2409 01       		.uleb128 0x1
 10628 240a 9C       		.byte	0x9c
 10629 240b 20240000 		.4byte	0x2420
 10630 240f 3A       		.uleb128 0x3a
 10631 2410 66737200 		.ascii	"fsr\000"
 10632 2414 01       		.byte	0x1
 10633 2415 C304     		.2byte	0x4c3
 10634 2417 B9030000 		.4byte	0x3b9
 10635 241b 6F160000 		.4byte	.LLST25
 10636 241f 00       		.byte	0
 10637 2420 2B       		.uleb128 0x2b
 10638 2421 F0010000 		.4byte	.LASF327
 10639 2425 0E       		.byte	0xe
 10640 2426 49       		.byte	0x49
 10641 2427 9A000000 		.4byte	0x9a
 10642 242b 2C0A0000 		.4byte	.LFB75
 10643 242f 98000000 		.4byte	.LFE75-.LFB75
 10644 2433 01       		.uleb128 0x1
 10645 2434 9C       		.byte	0x9c
 10646 2435 6E240000 		.4byte	0x246e
 10647 2439 3A       		.uleb128 0x3a
 10648 243a 66737200 		.ascii	"fsr\000"
 10649 243e 01       		.byte	0x1
 10650 243f 9E04     		.2byte	0x49e
 10651 2441 5C000000 		.4byte	0x5c
 10652 2445 C2160000 		.4byte	.LLST24
 10653 2449 2D       		.uleb128 0x2d
 10654 244a B00F0000 		.4byte	.LASF255
 10655 244e 01       		.byte	0x1
 10656 244f A004     		.2byte	0x4a0
 10657 2451 33000000 		.4byte	0x33
 10658 2455 02       		.uleb128 0x2
 10659 2456 91       		.byte	0x91
 10660 2457 77       		.sleb128 -9
 10661 2458 35       		.uleb128 0x35
 10662 2459 800A0000 		.4byte	.LVL155
 10663 245d 4F2B0000 		.4byte	0x2b4f
ARM GAS  /tmp/cci8Vpl3.s 			page 252


 10664 2461 34       		.uleb128 0x34
 10665 2462 01       		.uleb128 0x1
 10666 2463 52       		.byte	0x52
 10667 2464 01       		.uleb128 0x1
 10668 2465 31       		.byte	0x31
 10669 2466 34       		.uleb128 0x34
 10670 2467 01       		.uleb128 0x1
 10671 2468 53       		.byte	0x53
 10672 2469 02       		.uleb128 0x2
 10673 246a 91       		.byte	0x91
 10674 246b 77       		.sleb128 -9
 10675 246c 00       		.byte	0
 10676 246d 00       		.byte	0
 10677 246e 2B       		.uleb128 0x2b
 10678 246f D10E0000 		.4byte	.LASF328
 10679 2473 0E       		.byte	0xe
 10680 2474 48       		.byte	0x48
 10681 2475 9A000000 		.4byte	0x9a
 10682 2479 F0090000 		.4byte	.LFB74
 10683 247d 3C000000 		.4byte	.LFE74-.LFB74
 10684 2481 01       		.uleb128 0x1
 10685 2482 9C       		.byte	0x9c
 10686 2483 98240000 		.4byte	0x2498
 10687 2487 3A       		.uleb128 0x3a
 10688 2488 66737200 		.ascii	"fsr\000"
 10689 248c 01       		.byte	0x1
 10690 248d 8304     		.2byte	0x483
 10691 248f B7110000 		.4byte	0x11b7
 10692 2493 15170000 		.4byte	.LLST23
 10693 2497 00       		.byte	0
 10694 2498 2B       		.uleb128 0x2b
 10695 2499 78090000 		.4byte	.LASF329
 10696 249d 0E       		.byte	0xe
 10697 249e 6B       		.byte	0x6b
 10698 249f 9A000000 		.4byte	0x9a
 10699 24a3 0C080000 		.4byte	.LFB73
 10700 24a7 E4010000 		.4byte	.LFE73-.LFB73
 10701 24ab 01       		.uleb128 0x1
 10702 24ac 9C       		.byte	0x9c
 10703 24ad D3250000 		.4byte	0x25d3
 10704 24b1 2D       		.uleb128 0x2d
 10705 24b2 B00F0000 		.4byte	.LASF255
 10706 24b6 01       		.byte	0x1
 10707 24b7 4704     		.2byte	0x447
 10708 24b9 33000000 		.4byte	0x33
 10709 24bd 02       		.uleb128 0x2
 10710 24be 91       		.byte	0x91
 10711 24bf 77       		.sleb128 -9
 10712 24c0 33       		.uleb128 0x33
 10713 24c1 32080000 		.4byte	.LVL139
 10714 24c5 4F2B0000 		.4byte	0x2b4f
 10715 24c9 D9240000 		.4byte	0x24d9
 10716 24cd 34       		.uleb128 0x34
 10717 24ce 01       		.uleb128 0x1
 10718 24cf 52       		.byte	0x52
 10719 24d0 01       		.uleb128 0x1
 10720 24d1 31       		.byte	0x31
ARM GAS  /tmp/cci8Vpl3.s 			page 253


 10721 24d2 34       		.uleb128 0x34
 10722 24d3 01       		.uleb128 0x1
 10723 24d4 53       		.byte	0x53
 10724 24d5 02       		.uleb128 0x2
 10725 24d6 91       		.byte	0x91
 10726 24d7 77       		.sleb128 -9
 10727 24d8 00       		.byte	0
 10728 24d9 33       		.uleb128 0x33
 10729 24da 4C080000 		.4byte	.LVL140
 10730 24de 4F2B0000 		.4byte	0x2b4f
 10731 24e2 F2240000 		.4byte	0x24f2
 10732 24e6 34       		.uleb128 0x34
 10733 24e7 01       		.uleb128 0x1
 10734 24e8 52       		.byte	0x52
 10735 24e9 01       		.uleb128 0x1
 10736 24ea 31       		.byte	0x31
 10737 24eb 34       		.uleb128 0x34
 10738 24ec 01       		.uleb128 0x1
 10739 24ed 53       		.byte	0x53
 10740 24ee 02       		.uleb128 0x2
 10741 24ef 91       		.byte	0x91
 10742 24f0 77       		.sleb128 -9
 10743 24f1 00       		.byte	0
 10744 24f2 33       		.uleb128 0x33
 10745 24f3 66080000 		.4byte	.LVL141
 10746 24f7 4F2B0000 		.4byte	0x2b4f
 10747 24fb 0B250000 		.4byte	0x250b
 10748 24ff 34       		.uleb128 0x34
 10749 2500 01       		.uleb128 0x1
 10750 2501 52       		.byte	0x52
 10751 2502 01       		.uleb128 0x1
 10752 2503 31       		.byte	0x31
 10753 2504 34       		.uleb128 0x34
 10754 2505 01       		.uleb128 0x1
 10755 2506 53       		.byte	0x53
 10756 2507 02       		.uleb128 0x2
 10757 2508 91       		.byte	0x91
 10758 2509 77       		.sleb128 -9
 10759 250a 00       		.byte	0
 10760 250b 33       		.uleb128 0x33
 10761 250c 8E080000 		.4byte	.LVL142
 10762 2510 4F2B0000 		.4byte	0x2b4f
 10763 2514 24250000 		.4byte	0x2524
 10764 2518 34       		.uleb128 0x34
 10765 2519 01       		.uleb128 0x1
 10766 251a 52       		.byte	0x52
 10767 251b 01       		.uleb128 0x1
 10768 251c 31       		.byte	0x31
 10769 251d 34       		.uleb128 0x34
 10770 251e 01       		.uleb128 0x1
 10771 251f 53       		.byte	0x53
 10772 2520 02       		.uleb128 0x2
 10773 2521 91       		.byte	0x91
 10774 2522 77       		.sleb128 -9
 10775 2523 00       		.byte	0
 10776 2524 33       		.uleb128 0x33
 10777 2525 BE080000 		.4byte	.LVL143
ARM GAS  /tmp/cci8Vpl3.s 			page 254


 10778 2529 4F2B0000 		.4byte	0x2b4f
 10779 252d 3D250000 		.4byte	0x253d
 10780 2531 34       		.uleb128 0x34
 10781 2532 01       		.uleb128 0x1
 10782 2533 52       		.byte	0x52
 10783 2534 01       		.uleb128 0x1
 10784 2535 31       		.byte	0x31
 10785 2536 34       		.uleb128 0x34
 10786 2537 01       		.uleb128 0x1
 10787 2538 53       		.byte	0x53
 10788 2539 02       		.uleb128 0x2
 10789 253a 91       		.byte	0x91
 10790 253b 77       		.sleb128 -9
 10791 253c 00       		.byte	0
 10792 253d 33       		.uleb128 0x33
 10793 253e E4080000 		.4byte	.LVL144
 10794 2542 4F2B0000 		.4byte	0x2b4f
 10795 2546 56250000 		.4byte	0x2556
 10796 254a 34       		.uleb128 0x34
 10797 254b 01       		.uleb128 0x1
 10798 254c 52       		.byte	0x52
 10799 254d 01       		.uleb128 0x1
 10800 254e 31       		.byte	0x31
 10801 254f 34       		.uleb128 0x34
 10802 2550 01       		.uleb128 0x1
 10803 2551 53       		.byte	0x53
 10804 2552 02       		.uleb128 0x2
 10805 2553 91       		.byte	0x91
 10806 2554 77       		.sleb128 -9
 10807 2555 00       		.byte	0
 10808 2556 33       		.uleb128 0x33
 10809 2557 00090000 		.4byte	.LVL145
 10810 255b 4F2B0000 		.4byte	0x2b4f
 10811 255f 6F250000 		.4byte	0x256f
 10812 2563 34       		.uleb128 0x34
 10813 2564 01       		.uleb128 0x1
 10814 2565 52       		.byte	0x52
 10815 2566 01       		.uleb128 0x1
 10816 2567 31       		.byte	0x31
 10817 2568 34       		.uleb128 0x34
 10818 2569 01       		.uleb128 0x1
 10819 256a 53       		.byte	0x53
 10820 256b 02       		.uleb128 0x2
 10821 256c 91       		.byte	0x91
 10822 256d 77       		.sleb128 -9
 10823 256e 00       		.byte	0
 10824 256f 33       		.uleb128 0x33
 10825 2570 2E090000 		.4byte	.LVL146
 10826 2574 4F2B0000 		.4byte	0x2b4f
 10827 2578 88250000 		.4byte	0x2588
 10828 257c 34       		.uleb128 0x34
 10829 257d 01       		.uleb128 0x1
 10830 257e 52       		.byte	0x52
 10831 257f 01       		.uleb128 0x1
 10832 2580 31       		.byte	0x31
 10833 2581 34       		.uleb128 0x34
 10834 2582 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 255


 10835 2583 53       		.byte	0x53
 10836 2584 02       		.uleb128 0x2
 10837 2585 91       		.byte	0x91
 10838 2586 77       		.sleb128 -9
 10839 2587 00       		.byte	0
 10840 2588 33       		.uleb128 0x33
 10841 2589 5C090000 		.4byte	.LVL147
 10842 258d 4F2B0000 		.4byte	0x2b4f
 10843 2591 A1250000 		.4byte	0x25a1
 10844 2595 34       		.uleb128 0x34
 10845 2596 01       		.uleb128 0x1
 10846 2597 52       		.byte	0x52
 10847 2598 01       		.uleb128 0x1
 10848 2599 31       		.byte	0x31
 10849 259a 34       		.uleb128 0x34
 10850 259b 01       		.uleb128 0x1
 10851 259c 53       		.byte	0x53
 10852 259d 02       		.uleb128 0x2
 10853 259e 91       		.byte	0x91
 10854 259f 77       		.sleb128 -9
 10855 25a0 00       		.byte	0
 10856 25a1 33       		.uleb128 0x33
 10857 25a2 80090000 		.4byte	.LVL148
 10858 25a6 4F2B0000 		.4byte	0x2b4f
 10859 25aa BA250000 		.4byte	0x25ba
 10860 25ae 34       		.uleb128 0x34
 10861 25af 01       		.uleb128 0x1
 10862 25b0 52       		.byte	0x52
 10863 25b1 01       		.uleb128 0x1
 10864 25b2 31       		.byte	0x31
 10865 25b3 34       		.uleb128 0x34
 10866 25b4 01       		.uleb128 0x1
 10867 25b5 53       		.byte	0x53
 10868 25b6 02       		.uleb128 0x2
 10869 25b7 91       		.byte	0x91
 10870 25b8 77       		.sleb128 -9
 10871 25b9 00       		.byte	0
 10872 25ba 35       		.uleb128 0x35
 10873 25bb 94090000 		.4byte	.LVL149
 10874 25bf 4F2B0000 		.4byte	0x2b4f
 10875 25c3 34       		.uleb128 0x34
 10876 25c4 01       		.uleb128 0x1
 10877 25c5 52       		.byte	0x52
 10878 25c6 01       		.uleb128 0x1
 10879 25c7 31       		.byte	0x31
 10880 25c8 34       		.uleb128 0x34
 10881 25c9 01       		.uleb128 0x1
 10882 25ca 53       		.byte	0x53
 10883 25cb 05       		.uleb128 0x5
 10884 25cc 03       		.byte	0x3
 10885 25cd 10000000 		.4byte	.LANCHOR0+16
 10886 25d1 00       		.byte	0
 10887 25d2 00       		.byte	0
 10888 25d3 2B       		.uleb128 0x2b
 10889 25d4 AD030000 		.4byte	.LASF330
 10890 25d8 0E       		.byte	0xe
 10891 25d9 5E       		.byte	0x5e
ARM GAS  /tmp/cci8Vpl3.s 			page 256


 10892 25da 9A000000 		.4byte	0x9a
 10893 25de 00070000 		.4byte	.LFB72
 10894 25e2 0C010000 		.4byte	.LFE72-.LFB72
 10895 25e6 01       		.uleb128 0x1
 10896 25e7 9C       		.byte	0x9c
 10897 25e8 91260000 		.4byte	0x2691
 10898 25ec 2C       		.uleb128 0x2c
 10899 25ed DE040000 		.4byte	.LASF331
 10900 25f1 01       		.byte	0x1
 10901 25f2 1404     		.2byte	0x414
 10902 25f4 91260000 		.4byte	0x2691
 10903 25f8 41170000 		.4byte	.LLST19
 10904 25fc 2D       		.uleb128 0x2d
 10905 25fd B00F0000 		.4byte	.LASF255
 10906 2601 01       		.byte	0x1
 10907 2602 1604     		.2byte	0x416
 10908 2604 97260000 		.4byte	0x2697
 10909 2608 02       		.uleb128 0x2
 10910 2609 91       		.byte	0x91
 10911 260a 68       		.sleb128 -24
 10912 260b 30       		.uleb128 0x30
 10913 260c 12050000 		.4byte	.LASF332
 10914 2610 01       		.byte	0x1
 10915 2611 1704     		.2byte	0x417
 10916 2613 FE000000 		.4byte	0xfe
 10917 2617 AA170000 		.4byte	.LLST20
 10918 261b 30       		.uleb128 0x30
 10919 261c 210D0000 		.4byte	.LASF333
 10920 2620 01       		.byte	0x1
 10921 2621 1804     		.2byte	0x418
 10922 2623 FE000000 		.4byte	0xfe
 10923 2627 65180000 		.4byte	.LLST21
 10924 262b 37       		.uleb128 0x37
 10925 262c 666700   		.ascii	"fg\000"
 10926 262f 01       		.byte	0x1
 10927 2630 1904     		.2byte	0x419
 10928 2632 FE000000 		.4byte	0xfe
 10929 2636 07190000 		.4byte	.LLST22
 10930 263a 33       		.uleb128 0x33
 10931 263b 28070000 		.4byte	.LVL115
 10932 263f 702B0000 		.4byte	0x2b70
 10933 2643 58260000 		.4byte	0x2658
 10934 2647 34       		.uleb128 0x34
 10935 2648 01       		.uleb128 0x1
 10936 2649 51       		.byte	0x51
 10937 264a 01       		.uleb128 0x1
 10938 264b 33       		.byte	0x33
 10939 264c 34       		.uleb128 0x34
 10940 264d 01       		.uleb128 0x1
 10941 264e 52       		.byte	0x52
 10942 264f 01       		.uleb128 0x1
 10943 2650 33       		.byte	0x33
 10944 2651 34       		.uleb128 0x34
 10945 2652 01       		.uleb128 0x1
 10946 2653 53       		.byte	0x53
 10947 2654 02       		.uleb128 0x2
 10948 2655 7D       		.byte	0x7d
ARM GAS  /tmp/cci8Vpl3.s 			page 257


 10949 2656 00       		.sleb128 0
 10950 2657 00       		.byte	0
 10951 2658 33       		.uleb128 0x33
 10952 2659 7E070000 		.4byte	.LVL121
 10953 265d 702B0000 		.4byte	0x2b70
 10954 2661 76260000 		.4byte	0x2676
 10955 2665 34       		.uleb128 0x34
 10956 2666 01       		.uleb128 0x1
 10957 2667 51       		.byte	0x51
 10958 2668 01       		.uleb128 0x1
 10959 2669 36       		.byte	0x36
 10960 266a 34       		.uleb128 0x34
 10961 266b 01       		.uleb128 0x1
 10962 266c 52       		.byte	0x52
 10963 266d 01       		.uleb128 0x1
 10964 266e 36       		.byte	0x36
 10965 266f 34       		.uleb128 0x34
 10966 2670 01       		.uleb128 0x1
 10967 2671 53       		.byte	0x53
 10968 2672 02       		.uleb128 0x2
 10969 2673 7D       		.byte	0x7d
 10970 2674 00       		.sleb128 0
 10971 2675 00       		.byte	0
 10972 2676 35       		.uleb128 0x35
 10973 2677 E6070000 		.4byte	.LVL132
 10974 267b 4F2B0000 		.4byte	0x2b4f
 10975 267f 34       		.uleb128 0x34
 10976 2680 01       		.uleb128 0x1
 10977 2681 51       		.byte	0x51
 10978 2682 01       		.uleb128 0x1
 10979 2683 36       		.byte	0x36
 10980 2684 34       		.uleb128 0x34
 10981 2685 01       		.uleb128 0x1
 10982 2686 52       		.byte	0x52
 10983 2687 01       		.uleb128 0x1
 10984 2688 36       		.byte	0x36
 10985 2689 34       		.uleb128 0x34
 10986 268a 01       		.uleb128 0x1
 10987 268b 53       		.byte	0x53
 10988 268c 02       		.uleb128 0x2
 10989 268d 7D       		.byte	0x7d
 10990 268e 00       		.sleb128 0
 10991 268f 00       		.byte	0
 10992 2690 00       		.byte	0
 10993 2691 0A       		.uleb128 0xa
 10994 2692 04       		.byte	0x4
 10995 2693 75000000 		.4byte	0x75
 10996 2697 0B       		.uleb128 0xb
 10997 2698 33000000 		.4byte	0x33
 10998 269c A7260000 		.4byte	0x26a7
 10999 26a0 0C       		.uleb128 0xc
 11000 26a1 D9000000 		.4byte	0xd9
 11001 26a5 05       		.byte	0x5
 11002 26a6 00       		.byte	0
 11003 26a7 3B       		.uleb128 0x3b
 11004 26a8 990E0000 		.4byte	.LASF334
 11005 26ac 0E       		.byte	0xe
ARM GAS  /tmp/cci8Vpl3.s 			page 258


 11006 26ad 64       		.byte	0x64
 11007 26ae 9A000000 		.4byte	0x9a
 11008 26b2 74060000 		.4byte	.LFB71
 11009 26b6 8C000000 		.4byte	.LFE71-.LFB71
 11010 26ba 01       		.uleb128 0x1
 11011 26bb 9C       		.byte	0x9c
 11012 26bc 15270000 		.4byte	0x2715
 11013 26c0 2C       		.uleb128 0x2c
 11014 26c1 B00F0000 		.4byte	.LASF255
 11015 26c5 01       		.byte	0x1
 11016 26c6 FB03     		.2byte	0x3fb
 11017 26c8 F4180000 		.4byte	0x18f4
 11018 26cc 49190000 		.4byte	.LLST16
 11019 26d0 2C       		.uleb128 0x2c
 11020 26d1 3D030000 		.4byte	.LASF260
 11021 26d5 01       		.byte	0x1
 11022 26d6 FB03     		.2byte	0x3fb
 11023 26d8 670F0000 		.4byte	0xf67
 11024 26dc 8B190000 		.4byte	.LLST17
 11025 26e0 28       		.uleb128 0x28
 11026 26e1 746D7000 		.ascii	"tmp\000"
 11027 26e5 01       		.byte	0x1
 11028 26e6 FD03     		.2byte	0x3fd
 11029 26e8 25140000 		.4byte	0x1425
 11030 26ec 02       		.uleb128 0x2
 11031 26ed 91       		.byte	0x91
 11032 26ee 64       		.sleb128 -28
 11033 26ef 37       		.uleb128 0x37
 11034 26f0 72617700 		.ascii	"raw\000"
 11035 26f4 01       		.byte	0x1
 11036 26f5 FE03     		.2byte	0x3fe
 11037 26f7 4A000000 		.4byte	0x4a
 11038 26fb C5190000 		.4byte	.LLST18
 11039 26ff 35       		.uleb128 0x35
 11040 2700 94060000 		.4byte	.LVL100
 11041 2704 702B0000 		.4byte	0x2b70
 11042 2708 34       		.uleb128 0x34
 11043 2709 01       		.uleb128 0x1
 11044 270a 52       		.byte	0x52
 11045 270b 01       		.uleb128 0x1
 11046 270c 32       		.byte	0x32
 11047 270d 34       		.uleb128 0x34
 11048 270e 01       		.uleb128 0x1
 11049 270f 53       		.byte	0x53
 11050 2710 02       		.uleb128 0x2
 11051 2711 91       		.byte	0x91
 11052 2712 64       		.sleb128 -28
 11053 2713 00       		.byte	0
 11054 2714 00       		.byte	0
 11055 2715 2B       		.uleb128 0x2b
 11056 2716 10060000 		.4byte	.LASF335
 11057 271a 0E       		.byte	0xe
 11058 271b 62       		.byte	0x62
 11059 271c 9A000000 		.4byte	0x9a
 11060 2720 0C060000 		.4byte	.LFB70
 11061 2724 68000000 		.4byte	.LFE70-.LFB70
 11062 2728 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 259


 11063 2729 9C       		.byte	0x9c
 11064 272a 73270000 		.4byte	0x2773
 11065 272e 2C       		.uleb128 0x2c
 11066 272f B00F0000 		.4byte	.LASF255
 11067 2733 01       		.byte	0x1
 11068 2734 E403     		.2byte	0x3e4
 11069 2736 F5110000 		.4byte	0x11f5
 11070 273a E9190000 		.4byte	.LLST14
 11071 273e 2C       		.uleb128 0x2c
 11072 273f 3D030000 		.4byte	.LASF260
 11073 2743 01       		.byte	0x1
 11074 2744 E403     		.2byte	0x3e4
 11075 2746 670F0000 		.4byte	0xf67
 11076 274a 2B1A0000 		.4byte	.LLST15
 11077 274e 28       		.uleb128 0x28
 11078 274f 746D7000 		.ascii	"tmp\000"
 11079 2753 01       		.byte	0x1
 11080 2754 E603     		.2byte	0x3e6
 11081 2756 97260000 		.4byte	0x2697
 11082 275a 02       		.uleb128 0x2
 11083 275b 91       		.byte	0x91
 11084 275c 70       		.sleb128 -16
 11085 275d 35       		.uleb128 0x35
 11086 275e 2E060000 		.4byte	.LVL93
 11087 2762 702B0000 		.4byte	0x2b70
 11088 2766 34       		.uleb128 0x34
 11089 2767 01       		.uleb128 0x1
 11090 2768 52       		.byte	0x52
 11091 2769 01       		.uleb128 0x1
 11092 276a 36       		.byte	0x36
 11093 276b 34       		.uleb128 0x34
 11094 276c 01       		.uleb128 0x1
 11095 276d 53       		.byte	0x53
 11096 276e 02       		.uleb128 0x2
 11097 276f 7D       		.byte	0x7d
 11098 2770 00       		.sleb128 0
 11099 2771 00       		.byte	0
 11100 2772 00       		.byte	0
 11101 2773 2B       		.uleb128 0x2b
 11102 2774 39050000 		.4byte	.LASF336
 11103 2778 0E       		.byte	0xe
 11104 2779 61       		.byte	0x61
 11105 277a 9A000000 		.4byte	0x9a
 11106 277e A4050000 		.4byte	.LFB69
 11107 2782 68000000 		.4byte	.LFE69-.LFB69
 11108 2786 01       		.uleb128 0x1
 11109 2787 9C       		.byte	0x9c
 11110 2788 D1270000 		.4byte	0x27d1
 11111 278c 2C       		.uleb128 0x2c
 11112 278d B00F0000 		.4byte	.LASF255
 11113 2791 01       		.byte	0x1
 11114 2792 CD03     		.2byte	0x3cd
 11115 2794 F5110000 		.4byte	0x11f5
 11116 2798 651A0000 		.4byte	.LLST12
 11117 279c 2C       		.uleb128 0x2c
 11118 279d 3D030000 		.4byte	.LASF260
 11119 27a1 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 260


 11120 27a2 CD03     		.2byte	0x3cd
 11121 27a4 670F0000 		.4byte	0xf67
 11122 27a8 A71A0000 		.4byte	.LLST13
 11123 27ac 28       		.uleb128 0x28
 11124 27ad 746D7000 		.ascii	"tmp\000"
 11125 27b1 01       		.byte	0x1
 11126 27b2 CF03     		.2byte	0x3cf
 11127 27b4 97260000 		.4byte	0x2697
 11128 27b8 02       		.uleb128 0x2
 11129 27b9 91       		.byte	0x91
 11130 27ba 70       		.sleb128 -16
 11131 27bb 35       		.uleb128 0x35
 11132 27bc C6050000 		.4byte	.LVL86
 11133 27c0 702B0000 		.4byte	0x2b70
 11134 27c4 34       		.uleb128 0x34
 11135 27c5 01       		.uleb128 0x1
 11136 27c6 52       		.byte	0x52
 11137 27c7 01       		.uleb128 0x1
 11138 27c8 36       		.byte	0x36
 11139 27c9 34       		.uleb128 0x34
 11140 27ca 01       		.uleb128 0x1
 11141 27cb 53       		.byte	0x53
 11142 27cc 02       		.uleb128 0x2
 11143 27cd 7D       		.byte	0x7d
 11144 27ce 00       		.sleb128 0
 11145 27cf 00       		.byte	0
 11146 27d0 00       		.byte	0
 11147 27d1 2B       		.uleb128 0x2b
 11148 27d2 F70F0000 		.4byte	.LASF337
 11149 27d6 0E       		.byte	0xe
 11150 27d7 3C       		.byte	0x3c
 11151 27d8 9A000000 		.4byte	0x9a
 11152 27dc 98120000 		.4byte	.LFB68
 11153 27e0 DC000000 		.4byte	.LFE68-.LFB68
 11154 27e4 01       		.uleb128 0x1
 11155 27e5 9C       		.byte	0x9c
 11156 27e6 BE280000 		.4byte	0x28be
 11157 27ea 2C       		.uleb128 0x2c
 11158 27eb AC050000 		.4byte	.LASF319
 11159 27ef 01       		.byte	0x1
 11160 27f0 7903     		.2byte	0x379
 11161 27f2 33000000 		.4byte	0x33
 11162 27f6 E11A0000 		.4byte	.LLST55
 11163 27fa 28       		.uleb128 0x28
 11164 27fb 746D7000 		.ascii	"tmp\000"
 11165 27ff 01       		.byte	0x1
 11166 2800 7B03     		.2byte	0x37b
 11167 2802 25140000 		.4byte	0x1425
 11168 2806 02       		.uleb128 0x2
 11169 2807 91       		.byte	0x91
 11170 2808 74       		.sleb128 -12
 11171 2809 33       		.uleb128 0x33
 11172 280a AA120000 		.4byte	.LVL303
 11173 280e 041D0000 		.4byte	0x1d04
 11174 2812 1C280000 		.4byte	0x281c
 11175 2816 34       		.uleb128 0x34
 11176 2817 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 261


 11177 2818 50       		.byte	0x50
 11178 2819 01       		.uleb128 0x1
 11179 281a 30       		.byte	0x30
 11180 281b 00       		.byte	0
 11181 281c 33       		.uleb128 0x33
 11182 281d C8120000 		.4byte	.LVL304
 11183 2821 4F2B0000 		.4byte	0x2b4f
 11184 2825 35280000 		.4byte	0x2835
 11185 2829 34       		.uleb128 0x34
 11186 282a 01       		.uleb128 0x1
 11187 282b 52       		.byte	0x52
 11188 282c 01       		.uleb128 0x1
 11189 282d 32       		.byte	0x32
 11190 282e 34       		.uleb128 0x34
 11191 282f 01       		.uleb128 0x1
 11192 2830 53       		.byte	0x53
 11193 2831 02       		.uleb128 0x2
 11194 2832 91       		.byte	0x91
 11195 2833 74       		.sleb128 -12
 11196 2834 00       		.byte	0
 11197 2835 33       		.uleb128 0x33
 11198 2836 E0120000 		.4byte	.LVL307
 11199 283a 041D0000 		.4byte	0x1d04
 11200 283e 48280000 		.4byte	0x2848
 11201 2842 34       		.uleb128 0x34
 11202 2843 01       		.uleb128 0x1
 11203 2844 50       		.byte	0x50
 11204 2845 01       		.uleb128 0x1
 11205 2846 31       		.byte	0x31
 11206 2847 00       		.byte	0
 11207 2848 33       		.uleb128 0x33
 11208 2849 FE120000 		.4byte	.LVL308
 11209 284d 30230000 		.4byte	0x2330
 11210 2851 5B280000 		.4byte	0x285b
 11211 2855 34       		.uleb128 0x34
 11212 2856 01       		.uleb128 0x1
 11213 2857 50       		.byte	0x50
 11214 2858 01       		.uleb128 0x1
 11215 2859 3A       		.byte	0x3a
 11216 285a 00       		.byte	0
 11217 285b 33       		.uleb128 0x33
 11218 285c 1E130000 		.4byte	.LVL309
 11219 2860 4F2B0000 		.4byte	0x2b4f
 11220 2864 74280000 		.4byte	0x2874
 11221 2868 34       		.uleb128 0x34
 11222 2869 01       		.uleb128 0x1
 11223 286a 52       		.byte	0x52
 11224 286b 01       		.uleb128 0x1
 11225 286c 32       		.byte	0x32
 11226 286d 34       		.uleb128 0x34
 11227 286e 01       		.uleb128 0x1
 11228 286f 53       		.byte	0x53
 11229 2870 02       		.uleb128 0x2
 11230 2871 91       		.byte	0x91
 11231 2872 74       		.sleb128 -12
 11232 2873 00       		.byte	0
 11233 2874 33       		.uleb128 0x33
ARM GAS  /tmp/cci8Vpl3.s 			page 262


 11234 2875 32130000 		.4byte	.LVL310
 11235 2879 48210000 		.4byte	0x2148
 11236 287d 88280000 		.4byte	0x2888
 11237 2881 34       		.uleb128 0x34
 11238 2882 01       		.uleb128 0x1
 11239 2883 50       		.byte	0x50
 11240 2884 02       		.uleb128 0x2
 11241 2885 74       		.byte	0x74
 11242 2886 00       		.sleb128 0
 11243 2887 00       		.byte	0
 11244 2888 33       		.uleb128 0x33
 11245 2889 40130000 		.4byte	.LVL311
 11246 288d 30230000 		.4byte	0x2330
 11247 2891 9B280000 		.4byte	0x289b
 11248 2895 34       		.uleb128 0x34
 11249 2896 01       		.uleb128 0x1
 11250 2897 50       		.byte	0x50
 11251 2898 01       		.uleb128 0x1
 11252 2899 35       		.byte	0x35
 11253 289a 00       		.byte	0
 11254 289b 33       		.uleb128 0x33
 11255 289c 4E130000 		.4byte	.LVL312
 11256 28a0 30230000 		.4byte	0x2330
 11257 28a4 AE280000 		.4byte	0x28ae
 11258 28a8 34       		.uleb128 0x34
 11259 28a9 01       		.uleb128 0x1
 11260 28aa 50       		.byte	0x50
 11261 28ab 01       		.uleb128 0x1
 11262 28ac 35       		.byte	0x35
 11263 28ad 00       		.byte	0
 11264 28ae 35       		.uleb128 0x35
 11265 28af 5C130000 		.4byte	.LVL313
 11266 28b3 30230000 		.4byte	0x2330
 11267 28b7 34       		.uleb128 0x34
 11268 28b8 01       		.uleb128 0x1
 11269 28b9 50       		.byte	0x50
 11270 28ba 01       		.uleb128 0x1
 11271 28bb 44       		.byte	0x44
 11272 28bc 00       		.byte	0
 11273 28bd 00       		.byte	0
 11274 28be 2B       		.uleb128 0x2b
 11275 28bf A2000000 		.4byte	.LASF338
 11276 28c3 0E       		.byte	0xe
 11277 28c4 37       		.byte	0x37
 11278 28c5 9A000000 		.4byte	0x9a
 11279 28c9 18150000 		.4byte	.LFB67
 11280 28cd B8010000 		.4byte	.LFE67-.LFB67
 11281 28d1 01       		.uleb128 0x1
 11282 28d2 9C       		.byte	0x9c
 11283 28d3 262A0000 		.4byte	0x2a26
 11284 28d7 2D       		.uleb128 0x2d
 11285 28d8 B00F0000 		.4byte	.LASF255
 11286 28dc 01       		.byte	0x1
 11287 28dd F902     		.2byte	0x2f9
 11288 28df 97260000 		.4byte	0x2697
 11289 28e3 02       		.uleb128 0x2
 11290 28e4 91       		.byte	0x91
ARM GAS  /tmp/cci8Vpl3.s 			page 263


 11291 28e5 70       		.sleb128 -16
 11292 28e6 37       		.uleb128 0x37
 11293 28e7 72657600 		.ascii	"rev\000"
 11294 28eb 01       		.byte	0x1
 11295 28ec F902     		.2byte	0x2f9
 11296 28ee 33000000 		.4byte	0x33
 11297 28f2 341B0000 		.4byte	.LLST58
 11298 28f6 33       		.uleb128 0x33
 11299 28f7 34150000 		.4byte	.LVL337
 11300 28fb 4F2B0000 		.4byte	0x2b4f
 11301 28ff 0F290000 		.4byte	0x290f
 11302 2903 34       		.uleb128 0x34
 11303 2904 01       		.uleb128 0x1
 11304 2905 52       		.byte	0x52
 11305 2906 01       		.uleb128 0x1
 11306 2907 31       		.byte	0x31
 11307 2908 34       		.uleb128 0x34
 11308 2909 01       		.uleb128 0x1
 11309 290a 53       		.byte	0x53
 11310 290b 02       		.uleb128 0x2
 11311 290c 91       		.byte	0x91
 11312 290d 70       		.sleb128 -16
 11313 290e 00       		.byte	0
 11314 290f 33       		.uleb128 0x33
 11315 2910 40150000 		.4byte	.LVL338
 11316 2914 5A2B0000 		.4byte	0x2b5a
 11317 2918 23290000 		.4byte	0x2923
 11318 291c 34       		.uleb128 0x34
 11319 291d 01       		.uleb128 0x1
 11320 291e 50       		.byte	0x50
 11321 291f 02       		.uleb128 0x2
 11322 2920 08       		.byte	0x8
 11323 2921 64       		.byte	0x64
 11324 2922 00       		.byte	0
 11325 2923 33       		.uleb128 0x33
 11326 2924 58150000 		.4byte	.LVL339
 11327 2928 4F2B0000 		.4byte	0x2b4f
 11328 292c 3C290000 		.4byte	0x293c
 11329 2930 34       		.uleb128 0x34
 11330 2931 01       		.uleb128 0x1
 11331 2932 52       		.byte	0x52
 11332 2933 01       		.uleb128 0x1
 11333 2934 31       		.byte	0x31
 11334 2935 34       		.uleb128 0x34
 11335 2936 01       		.uleb128 0x1
 11336 2937 53       		.byte	0x53
 11337 2938 02       		.uleb128 0x2
 11338 2939 91       		.byte	0x91
 11339 293a 70       		.sleb128 -16
 11340 293b 00       		.byte	0
 11341 293c 33       		.uleb128 0x33
 11342 293d 70150000 		.4byte	.LVL340
 11343 2941 702B0000 		.4byte	0x2b70
 11344 2945 55290000 		.4byte	0x2955
 11345 2949 34       		.uleb128 0x34
 11346 294a 01       		.uleb128 0x1
 11347 294b 52       		.byte	0x52
ARM GAS  /tmp/cci8Vpl3.s 			page 264


 11348 294c 01       		.uleb128 0x1
 11349 294d 36       		.byte	0x36
 11350 294e 34       		.uleb128 0x34
 11351 294f 01       		.uleb128 0x1
 11352 2950 53       		.byte	0x53
 11353 2951 02       		.uleb128 0x2
 11354 2952 7D       		.byte	0x7d
 11355 2953 00       		.sleb128 0
 11356 2954 00       		.byte	0
 11357 2955 33       		.uleb128 0x33
 11358 2956 EC150000 		.4byte	.LVL345
 11359 295a 20240000 		.4byte	0x2420
 11360 295e 6A290000 		.4byte	0x296a
 11361 2962 34       		.uleb128 0x34
 11362 2963 01       		.uleb128 0x1
 11363 2964 50       		.byte	0x50
 11364 2965 03       		.uleb128 0x3
 11365 2966 0A       		.byte	0xa
 11366 2967 D007     		.2byte	0x7d0
 11367 2969 00       		.byte	0
 11368 296a 33       		.uleb128 0x33
 11369 296b F6150000 		.4byte	.LVL346
 11370 296f A8230000 		.4byte	0x23a8
 11371 2973 7D290000 		.4byte	0x297d
 11372 2977 34       		.uleb128 0x34
 11373 2978 01       		.uleb128 0x1
 11374 2979 50       		.byte	0x50
 11375 297a 01       		.uleb128 0x1
 11376 297b 32       		.byte	0x32
 11377 297c 00       		.byte	0
 11378 297d 33       		.uleb128 0x33
 11379 297e 00160000 		.4byte	.LVL347
 11380 2982 30230000 		.4byte	0x2330
 11381 2986 91290000 		.4byte	0x2991
 11382 298a 34       		.uleb128 0x34
 11383 298b 01       		.uleb128 0x1
 11384 298c 50       		.byte	0x50
 11385 298d 02       		.uleb128 0x2
 11386 298e 08       		.byte	0x8
 11387 298f 2A       		.byte	0x2a
 11388 2990 00       		.byte	0
 11389 2991 33       		.uleb128 0x33
 11390 2992 0A160000 		.4byte	.LVL348
 11391 2996 8F220000 		.4byte	0x228f
 11392 299a A5290000 		.4byte	0x29a5
 11393 299e 34       		.uleb128 0x34
 11394 299f 01       		.uleb128 0x1
 11395 29a0 50       		.byte	0x50
 11396 29a1 02       		.uleb128 0x2
 11397 29a2 08       		.byte	0x8
 11398 29a3 32       		.byte	0x32
 11399 29a4 00       		.byte	0
 11400 29a5 39       		.uleb128 0x39
 11401 29a6 12160000 		.4byte	.LVL349
 11402 29aa 48210000 		.4byte	0x2148
 11403 29ae 39       		.uleb128 0x39
 11404 29af 1A160000 		.4byte	.LVL350
ARM GAS  /tmp/cci8Vpl3.s 			page 265


 11405 29b3 7C1D0000 		.4byte	0x1d7c
 11406 29b7 33       		.uleb128 0x33
 11407 29b8 24160000 		.4byte	.LVL351
 11408 29bc 77200000 		.4byte	0x2077
 11409 29c0 CB290000 		.4byte	0x29cb
 11410 29c4 34       		.uleb128 0x34
 11411 29c5 01       		.uleb128 0x1
 11412 29c6 50       		.byte	0x50
 11413 29c7 02       		.uleb128 0x2
 11414 29c8 74       		.byte	0x74
 11415 29c9 00       		.sleb128 0
 11416 29ca 00       		.byte	0
 11417 29cb 33       		.uleb128 0x33
 11418 29cc 38160000 		.4byte	.LVL355
 11419 29d0 7B2B0000 		.4byte	0x2b7b
 11420 29d4 E2290000 		.4byte	0x29e2
 11421 29d8 34       		.uleb128 0x34
 11422 29d9 01       		.uleb128 0x1
 11423 29da 50       		.byte	0x50
 11424 29db 05       		.uleb128 0x5
 11425 29dc 03       		.byte	0x3
 11426 29dd 00000000 		.4byte	.LC0
 11427 29e1 00       		.byte	0
 11428 29e2 33       		.uleb128 0x33
 11429 29e3 50160000 		.4byte	.LVL358
 11430 29e7 702B0000 		.4byte	0x2b70
 11431 29eb FB290000 		.4byte	0x29fb
 11432 29ef 34       		.uleb128 0x34
 11433 29f0 01       		.uleb128 0x1
 11434 29f1 52       		.byte	0x52
 11435 29f2 01       		.uleb128 0x1
 11436 29f3 31       		.byte	0x31
 11437 29f4 34       		.uleb128 0x34
 11438 29f5 01       		.uleb128 0x1
 11439 29f6 53       		.byte	0x53
 11440 29f7 02       		.uleb128 0x2
 11441 29f8 7D       		.byte	0x7d
 11442 29f9 00       		.sleb128 0
 11443 29fa 00       		.byte	0
 11444 29fb 33       		.uleb128 0x33
 11445 29fc 6E160000 		.4byte	.LVL361
 11446 2a00 862B0000 		.4byte	0x2b86
 11447 2a04 122A0000 		.4byte	0x2a12
 11448 2a08 34       		.uleb128 0x34
 11449 2a09 01       		.uleb128 0x1
 11450 2a0a 50       		.byte	0x50
 11451 2a0b 05       		.uleb128 0x5
 11452 2a0c 03       		.byte	0x3
 11453 2a0d 28000000 		.4byte	.LC1
 11454 2a11 00       		.byte	0
 11455 2a12 35       		.uleb128 0x35
 11456 2a13 7A160000 		.4byte	.LVL363
 11457 2a17 862B0000 		.4byte	0x2b86
 11458 2a1b 34       		.uleb128 0x34
 11459 2a1c 01       		.uleb128 0x1
 11460 2a1d 50       		.byte	0x50
 11461 2a1e 05       		.uleb128 0x5
ARM GAS  /tmp/cci8Vpl3.s 			page 266


 11462 2a1f 03       		.byte	0x3
 11463 2a20 78000000 		.4byte	.LC2
 11464 2a24 00       		.byte	0
 11465 2a25 00       		.byte	0
 11466 2a26 2B       		.uleb128 0x2b
 11467 2a27 CE080000 		.4byte	.LASF339
 11468 2a2b 0E       		.byte	0xe
 11469 2a2c 75       		.byte	0x75
 11470 2a2d 9A000000 		.4byte	0x9a
 11471 2a31 64050000 		.4byte	.LFB66
 11472 2a35 40000000 		.4byte	.LFE66-.LFB66
 11473 2a39 01       		.uleb128 0x1
 11474 2a3a 9C       		.byte	0x9c
 11475 2a3b 762A0000 		.4byte	0x2a76
 11476 2a3f 3A       		.uleb128 0x3a
 11477 2a40 72656700 		.ascii	"reg\000"
 11478 2a44 01       		.byte	0x1
 11479 2a45 E102     		.2byte	0x2e1
 11480 2a47 33000000 		.4byte	0x33
 11481 2a4b 951C0000 		.4byte	.LLST10
 11482 2a4f 2C       		.uleb128 0x2c
 11483 2a50 B00F0000 		.4byte	.LASF255
 11484 2a54 01       		.byte	0x1
 11485 2a55 E102     		.2byte	0x2e1
 11486 2a57 B9030000 		.4byte	0x3b9
 11487 2a5b 011D0000 		.4byte	.LLST11
 11488 2a5f 35       		.uleb128 0x35
 11489 2a60 8C050000 		.4byte	.LVL76
 11490 2a64 702B0000 		.4byte	0x2b70
 11491 2a68 34       		.uleb128 0x34
 11492 2a69 01       		.uleb128 0x1
 11493 2a6a 52       		.byte	0x52
 11494 2a6b 01       		.uleb128 0x1
 11495 2a6c 31       		.byte	0x31
 11496 2a6d 34       		.uleb128 0x34
 11497 2a6e 01       		.uleb128 0x1
 11498 2a6f 53       		.byte	0x53
 11499 2a70 03       		.uleb128 0x3
 11500 2a71 F3       		.byte	0xf3
 11501 2a72 01       		.uleb128 0x1
 11502 2a73 51       		.byte	0x51
 11503 2a74 00       		.byte	0
 11504 2a75 00       		.byte	0
 11505 2a76 2B       		.uleb128 0x2b
 11506 2a77 0E010000 		.4byte	.LASF340
 11507 2a7b 0E       		.byte	0xe
 11508 2a7c 74       		.byte	0x74
 11509 2a7d 9A000000 		.4byte	0x9a
 11510 2a81 10050000 		.4byte	.LFB65
 11511 2a85 54000000 		.4byte	.LFE65-.LFB65
 11512 2a89 01       		.uleb128 0x1
 11513 2a8a 9C       		.byte	0x9c
 11514 2a8b CA2A0000 		.4byte	0x2aca
 11515 2a8f 37       		.uleb128 0x37
 11516 2a90 696900   		.ascii	"ii\000"
 11517 2a93 01       		.byte	0x1
 11518 2a94 CD02     		.2byte	0x2cd
ARM GAS  /tmp/cci8Vpl3.s 			page 267


 11519 2a96 33000000 		.4byte	0x33
 11520 2a9a 381D0000 		.4byte	.LLST9
 11521 2a9e 2D       		.uleb128 0x2d
 11522 2a9f B00F0000 		.4byte	.LASF255
 11523 2aa3 01       		.byte	0x1
 11524 2aa4 CE02     		.2byte	0x2ce
 11525 2aa6 33000000 		.4byte	0x33
 11526 2aaa 02       		.uleb128 0x2
 11527 2aab 91       		.byte	0x91
 11528 2aac 6F       		.sleb128 -17
 11529 2aad 35       		.uleb128 0x35
 11530 2aae 4C050000 		.4byte	.LVL71
 11531 2ab2 702B0000 		.4byte	0x2b70
 11532 2ab6 34       		.uleb128 0x34
 11533 2ab7 01       		.uleb128 0x1
 11534 2ab8 51       		.byte	0x51
 11535 2ab9 02       		.uleb128 0x2
 11536 2aba 74       		.byte	0x74
 11537 2abb 00       		.sleb128 0
 11538 2abc 34       		.uleb128 0x34
 11539 2abd 01       		.uleb128 0x1
 11540 2abe 52       		.byte	0x52
 11541 2abf 02       		.uleb128 0x2
 11542 2ac0 76       		.byte	0x76
 11543 2ac1 00       		.sleb128 0
 11544 2ac2 34       		.uleb128 0x34
 11545 2ac3 01       		.uleb128 0x1
 11546 2ac4 53       		.byte	0x53
 11547 2ac5 02       		.uleb128 0x2
 11548 2ac6 91       		.byte	0x91
 11549 2ac7 6F       		.sleb128 -17
 11550 2ac8 00       		.byte	0
 11551 2ac9 00       		.byte	0
 11552 2aca 47       		.uleb128 0x47
 11553 2acb F70E0000 		.4byte	.LASF342
 11554 2acf 01       		.byte	0x1
 11555 2ad0 AA02     		.2byte	0x2aa
 11556 2ad2 9A000000 		.4byte	0x9a
 11557 2ad6 00000000 		.4byte	.LFB64
 11558 2ada 9C000000 		.4byte	.LFE64-.LFB64
 11559 2ade 01       		.uleb128 0x1
 11560 2adf 9C       		.byte	0x9c
 11561 2ae0 322B0000 		.4byte	0x2b32
 11562 2ae4 2C       		.uleb128 0x2c
 11563 2ae5 CC070000 		.4byte	.LASF264
 11564 2ae9 01       		.byte	0x1
 11565 2aea AA02     		.2byte	0x2aa
 11566 2aec 33000000 		.4byte	0x33
 11567 2af0 6E1D0000 		.4byte	.LLST0
 11568 2af4 28       		.uleb128 0x28
 11569 2af5 746D7000 		.ascii	"tmp\000"
 11570 2af9 01       		.byte	0x1
 11571 2afa AC02     		.2byte	0x2ac
 11572 2afc 33000000 		.4byte	0x33
 11573 2b00 02       		.uleb128 0x2
 11574 2b01 91       		.byte	0x91
 11575 2b02 77       		.sleb128 -9
ARM GAS  /tmp/cci8Vpl3.s 			page 268


 11576 2b03 33       		.uleb128 0x33
 11577 2b04 28000000 		.4byte	.LVL2
 11578 2b08 4F2B0000 		.4byte	0x2b4f
 11579 2b0c 1C2B0000 		.4byte	0x2b1c
 11580 2b10 34       		.uleb128 0x34
 11581 2b11 01       		.uleb128 0x1
 11582 2b12 52       		.byte	0x52
 11583 2b13 01       		.uleb128 0x1
 11584 2b14 31       		.byte	0x31
 11585 2b15 34       		.uleb128 0x34
 11586 2b16 01       		.uleb128 0x1
 11587 2b17 53       		.byte	0x53
 11588 2b18 02       		.uleb128 0x2
 11589 2b19 91       		.byte	0x91
 11590 2b1a 77       		.sleb128 -9
 11591 2b1b 00       		.byte	0
 11592 2b1c 35       		.uleb128 0x35
 11593 2b1d 6C000000 		.4byte	.LVL5
 11594 2b21 4F2B0000 		.4byte	0x2b4f
 11595 2b25 34       		.uleb128 0x34
 11596 2b26 01       		.uleb128 0x1
 11597 2b27 52       		.byte	0x52
 11598 2b28 01       		.uleb128 0x1
 11599 2b29 31       		.byte	0x31
 11600 2b2a 34       		.uleb128 0x34
 11601 2b2b 01       		.uleb128 0x1
 11602 2b2c 53       		.byte	0x53
 11603 2b2d 02       		.uleb128 0x2
 11604 2b2e 91       		.byte	0x91
 11605 2b2f 77       		.sleb128 -9
 11606 2b30 00       		.byte	0
 11607 2b31 00       		.byte	0
 11608 2b32 48       		.uleb128 0x48
 11609 2b33 CA210000 		.4byte	0x21ca
 11610 2b37 3C0D0000 		.4byte	.LFB86
 11611 2b3b 10000000 		.4byte	.LFE86-.LFB86
 11612 2b3f 01       		.uleb128 0x1
 11613 2b40 9C       		.byte	0x9c
 11614 2b41 4F2B0000 		.4byte	0x2b4f
 11615 2b45 32       		.uleb128 0x32
 11616 2b46 DA210000 		.4byte	0x21da
 11617 2b4a DA1D0000 		.4byte	.LLST34
 11618 2b4e 00       		.byte	0
 11619 2b4f 49       		.uleb128 0x49
 11620 2b50 6E050000 		.4byte	.LASF343
 11621 2b54 6E050000 		.4byte	.LASF343
 11622 2b58 0F       		.byte	0xf
 11623 2b59 46       		.byte	0x46
 11624 2b5a 49       		.uleb128 0x49
 11625 2b5b 72030000 		.4byte	.LASF344
 11626 2b5f 72030000 		.4byte	.LASF344
 11627 2b63 10       		.byte	0x10
 11628 2b64 0B       		.byte	0xb
 11629 2b65 49       		.uleb128 0x49
 11630 2b66 640C0000 		.4byte	.LASF345
 11631 2b6a 640C0000 		.4byte	.LASF345
 11632 2b6e 11       		.byte	0x11
ARM GAS  /tmp/cci8Vpl3.s 			page 269


 11633 2b6f 16       		.byte	0x16
 11634 2b70 49       		.uleb128 0x49
 11635 2b71 11090000 		.4byte	.LASF346
 11636 2b75 11090000 		.4byte	.LASF346
 11637 2b79 0F       		.byte	0xf
 11638 2b7a 47       		.byte	0x47
 11639 2b7b 49       		.uleb128 0x49
 11640 2b7c 7F050000 		.4byte	.LASF347
 11641 2b80 7F050000 		.4byte	.LASF347
 11642 2b84 12       		.byte	0x12
 11643 2b85 BB       		.byte	0xbb
 11644 2b86 4A       		.uleb128 0x4a
 11645 2b87 31010000 		.4byte	.LASF353
 11646 2b8b 5B0A0000 		.4byte	.LASF354
 11647 2b8f 13       		.byte	0x13
 11648 2b90 00       		.byte	0
 11649 2b91 31010000 		.4byte	.LASF353
 11650 2b95 00       		.byte	0
 11651              		.section	.debug_abbrev,"",%progbits
 11652              	.Ldebug_abbrev0:
 11653 0000 01       		.uleb128 0x1
 11654 0001 11       		.uleb128 0x11
 11655 0002 01       		.byte	0x1
 11656 0003 25       		.uleb128 0x25
 11657 0004 0E       		.uleb128 0xe
 11658 0005 13       		.uleb128 0x13
 11659 0006 0B       		.uleb128 0xb
 11660 0007 03       		.uleb128 0x3
 11661 0008 0E       		.uleb128 0xe
 11662 0009 1B       		.uleb128 0x1b
 11663 000a 0E       		.uleb128 0xe
 11664 000b 11       		.uleb128 0x11
 11665 000c 01       		.uleb128 0x1
 11666 000d 12       		.uleb128 0x12
 11667 000e 06       		.uleb128 0x6
 11668 000f 10       		.uleb128 0x10
 11669 0010 17       		.uleb128 0x17
 11670 0011 00       		.byte	0
 11671 0012 00       		.byte	0
 11672 0013 02       		.uleb128 0x2
 11673 0014 24       		.uleb128 0x24
 11674 0015 00       		.byte	0
 11675 0016 0B       		.uleb128 0xb
 11676 0017 0B       		.uleb128 0xb
 11677 0018 3E       		.uleb128 0x3e
 11678 0019 0B       		.uleb128 0xb
 11679 001a 03       		.uleb128 0x3
 11680 001b 0E       		.uleb128 0xe
 11681 001c 00       		.byte	0
 11682 001d 00       		.byte	0
 11683 001e 03       		.uleb128 0x3
 11684 001f 26       		.uleb128 0x26
 11685 0020 00       		.byte	0
 11686 0021 49       		.uleb128 0x49
 11687 0022 13       		.uleb128 0x13
 11688 0023 00       		.byte	0
 11689 0024 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 270


 11690 0025 04       		.uleb128 0x4
 11691 0026 16       		.uleb128 0x16
 11692 0027 00       		.byte	0
 11693 0028 03       		.uleb128 0x3
 11694 0029 0E       		.uleb128 0xe
 11695 002a 3A       		.uleb128 0x3a
 11696 002b 0B       		.uleb128 0xb
 11697 002c 3B       		.uleb128 0x3b
 11698 002d 0B       		.uleb128 0xb
 11699 002e 49       		.uleb128 0x49
 11700 002f 13       		.uleb128 0x13
 11701 0030 00       		.byte	0
 11702 0031 00       		.byte	0
 11703 0032 05       		.uleb128 0x5
 11704 0033 24       		.uleb128 0x24
 11705 0034 00       		.byte	0
 11706 0035 0B       		.uleb128 0xb
 11707 0036 0B       		.uleb128 0xb
 11708 0037 3E       		.uleb128 0x3e
 11709 0038 0B       		.uleb128 0xb
 11710 0039 03       		.uleb128 0x3
 11711 003a 08       		.uleb128 0x8
 11712 003b 00       		.byte	0
 11713 003c 00       		.byte	0
 11714 003d 06       		.uleb128 0x6
 11715 003e 35       		.uleb128 0x35
 11716 003f 00       		.byte	0
 11717 0040 49       		.uleb128 0x49
 11718 0041 13       		.uleb128 0x13
 11719 0042 00       		.byte	0
 11720 0043 00       		.byte	0
 11721 0044 07       		.uleb128 0x7
 11722 0045 34       		.uleb128 0x34
 11723 0046 00       		.byte	0
 11724 0047 03       		.uleb128 0x3
 11725 0048 0E       		.uleb128 0xe
 11726 0049 3A       		.uleb128 0x3a
 11727 004a 0B       		.uleb128 0xb
 11728 004b 3B       		.uleb128 0x3b
 11729 004c 05       		.uleb128 0x5
 11730 004d 49       		.uleb128 0x49
 11731 004e 13       		.uleb128 0x13
 11732 004f 3F       		.uleb128 0x3f
 11733 0050 19       		.uleb128 0x19
 11734 0051 3C       		.uleb128 0x3c
 11735 0052 19       		.uleb128 0x19
 11736 0053 00       		.byte	0
 11737 0054 00       		.byte	0
 11738 0055 08       		.uleb128 0x8
 11739 0056 34       		.uleb128 0x34
 11740 0057 00       		.byte	0
 11741 0058 03       		.uleb128 0x3
 11742 0059 0E       		.uleb128 0xe
 11743 005a 3A       		.uleb128 0x3a
 11744 005b 0B       		.uleb128 0xb
 11745 005c 3B       		.uleb128 0x3b
 11746 005d 0B       		.uleb128 0xb
ARM GAS  /tmp/cci8Vpl3.s 			page 271


 11747 005e 49       		.uleb128 0x49
 11748 005f 13       		.uleb128 0x13
 11749 0060 3F       		.uleb128 0x3f
 11750 0061 19       		.uleb128 0x19
 11751 0062 3C       		.uleb128 0x3c
 11752 0063 19       		.uleb128 0x19
 11753 0064 00       		.byte	0
 11754 0065 00       		.byte	0
 11755 0066 09       		.uleb128 0x9
 11756 0067 15       		.uleb128 0x15
 11757 0068 00       		.byte	0
 11758 0069 27       		.uleb128 0x27
 11759 006a 19       		.uleb128 0x19
 11760 006b 00       		.byte	0
 11761 006c 00       		.byte	0
 11762 006d 0A       		.uleb128 0xa
 11763 006e 0F       		.uleb128 0xf
 11764 006f 00       		.byte	0
 11765 0070 0B       		.uleb128 0xb
 11766 0071 0B       		.uleb128 0xb
 11767 0072 49       		.uleb128 0x49
 11768 0073 13       		.uleb128 0x13
 11769 0074 00       		.byte	0
 11770 0075 00       		.byte	0
 11771 0076 0B       		.uleb128 0xb
 11772 0077 01       		.uleb128 0x1
 11773 0078 01       		.byte	0x1
 11774 0079 49       		.uleb128 0x49
 11775 007a 13       		.uleb128 0x13
 11776 007b 01       		.uleb128 0x1
 11777 007c 13       		.uleb128 0x13
 11778 007d 00       		.byte	0
 11779 007e 00       		.byte	0
 11780 007f 0C       		.uleb128 0xc
 11781 0080 21       		.uleb128 0x21
 11782 0081 00       		.byte	0
 11783 0082 49       		.uleb128 0x49
 11784 0083 13       		.uleb128 0x13
 11785 0084 2F       		.uleb128 0x2f
 11786 0085 0B       		.uleb128 0xb
 11787 0086 00       		.byte	0
 11788 0087 00       		.byte	0
 11789 0088 0D       		.uleb128 0xd
 11790 0089 0F       		.uleb128 0xf
 11791 008a 00       		.byte	0
 11792 008b 0B       		.uleb128 0xb
 11793 008c 0B       		.uleb128 0xb
 11794 008d 00       		.byte	0
 11795 008e 00       		.byte	0
 11796 008f 0E       		.uleb128 0xe
 11797 0090 16       		.uleb128 0x16
 11798 0091 00       		.byte	0
 11799 0092 03       		.uleb128 0x3
 11800 0093 0E       		.uleb128 0xe
 11801 0094 3A       		.uleb128 0x3a
 11802 0095 0B       		.uleb128 0xb
 11803 0096 3B       		.uleb128 0x3b
ARM GAS  /tmp/cci8Vpl3.s 			page 272


 11804 0097 05       		.uleb128 0x5
 11805 0098 49       		.uleb128 0x49
 11806 0099 13       		.uleb128 0x13
 11807 009a 00       		.byte	0
 11808 009b 00       		.byte	0
 11809 009c 0F       		.uleb128 0xf
 11810 009d 17       		.uleb128 0x17
 11811 009e 01       		.byte	0x1
 11812 009f 0B       		.uleb128 0xb
 11813 00a0 0B       		.uleb128 0xb
 11814 00a1 3A       		.uleb128 0x3a
 11815 00a2 0B       		.uleb128 0xb
 11816 00a3 3B       		.uleb128 0x3b
 11817 00a4 0B       		.uleb128 0xb
 11818 00a5 01       		.uleb128 0x1
 11819 00a6 13       		.uleb128 0x13
 11820 00a7 00       		.byte	0
 11821 00a8 00       		.byte	0
 11822 00a9 10       		.uleb128 0x10
 11823 00aa 0D       		.uleb128 0xd
 11824 00ab 00       		.byte	0
 11825 00ac 03       		.uleb128 0x3
 11826 00ad 0E       		.uleb128 0xe
 11827 00ae 3A       		.uleb128 0x3a
 11828 00af 0B       		.uleb128 0xb
 11829 00b0 3B       		.uleb128 0x3b
 11830 00b1 0B       		.uleb128 0xb
 11831 00b2 49       		.uleb128 0x49
 11832 00b3 13       		.uleb128 0x13
 11833 00b4 00       		.byte	0
 11834 00b5 00       		.byte	0
 11835 00b6 11       		.uleb128 0x11
 11836 00b7 13       		.uleb128 0x13
 11837 00b8 01       		.byte	0x1
 11838 00b9 0B       		.uleb128 0xb
 11839 00ba 0B       		.uleb128 0xb
 11840 00bb 3A       		.uleb128 0x3a
 11841 00bc 0B       		.uleb128 0xb
 11842 00bd 3B       		.uleb128 0x3b
 11843 00be 0B       		.uleb128 0xb
 11844 00bf 01       		.uleb128 0x1
 11845 00c0 13       		.uleb128 0x13
 11846 00c1 00       		.byte	0
 11847 00c2 00       		.byte	0
 11848 00c3 12       		.uleb128 0x12
 11849 00c4 0D       		.uleb128 0xd
 11850 00c5 00       		.byte	0
 11851 00c6 03       		.uleb128 0x3
 11852 00c7 0E       		.uleb128 0xe
 11853 00c8 3A       		.uleb128 0x3a
 11854 00c9 0B       		.uleb128 0xb
 11855 00ca 3B       		.uleb128 0x3b
 11856 00cb 0B       		.uleb128 0xb
 11857 00cc 49       		.uleb128 0x49
 11858 00cd 13       		.uleb128 0x13
 11859 00ce 38       		.uleb128 0x38
 11860 00cf 0B       		.uleb128 0xb
ARM GAS  /tmp/cci8Vpl3.s 			page 273


 11861 00d0 00       		.byte	0
 11862 00d1 00       		.byte	0
 11863 00d2 13       		.uleb128 0x13
 11864 00d3 13       		.uleb128 0x13
 11865 00d4 01       		.byte	0x1
 11866 00d5 03       		.uleb128 0x3
 11867 00d6 0E       		.uleb128 0xe
 11868 00d7 0B       		.uleb128 0xb
 11869 00d8 0B       		.uleb128 0xb
 11870 00d9 3A       		.uleb128 0x3a
 11871 00da 0B       		.uleb128 0xb
 11872 00db 3B       		.uleb128 0x3b
 11873 00dc 0B       		.uleb128 0xb
 11874 00dd 01       		.uleb128 0x1
 11875 00de 13       		.uleb128 0x13
 11876 00df 00       		.byte	0
 11877 00e0 00       		.byte	0
 11878 00e1 14       		.uleb128 0x14
 11879 00e2 0D       		.uleb128 0xd
 11880 00e3 00       		.byte	0
 11881 00e4 03       		.uleb128 0x3
 11882 00e5 08       		.uleb128 0x8
 11883 00e6 3A       		.uleb128 0x3a
 11884 00e7 0B       		.uleb128 0xb
 11885 00e8 3B       		.uleb128 0x3b
 11886 00e9 0B       		.uleb128 0xb
 11887 00ea 49       		.uleb128 0x49
 11888 00eb 13       		.uleb128 0x13
 11889 00ec 38       		.uleb128 0x38
 11890 00ed 0B       		.uleb128 0xb
 11891 00ee 00       		.byte	0
 11892 00ef 00       		.byte	0
 11893 00f0 15       		.uleb128 0x15
 11894 00f1 13       		.uleb128 0x13
 11895 00f2 01       		.byte	0x1
 11896 00f3 03       		.uleb128 0x3
 11897 00f4 0E       		.uleb128 0xe
 11898 00f5 0B       		.uleb128 0xb
 11899 00f6 05       		.uleb128 0x5
 11900 00f7 3A       		.uleb128 0x3a
 11901 00f8 0B       		.uleb128 0xb
 11902 00f9 3B       		.uleb128 0x3b
 11903 00fa 0B       		.uleb128 0xb
 11904 00fb 01       		.uleb128 0x1
 11905 00fc 13       		.uleb128 0x13
 11906 00fd 00       		.byte	0
 11907 00fe 00       		.byte	0
 11908 00ff 16       		.uleb128 0x16
 11909 0100 0D       		.uleb128 0xd
 11910 0101 00       		.byte	0
 11911 0102 03       		.uleb128 0x3
 11912 0103 0E       		.uleb128 0xe
 11913 0104 3A       		.uleb128 0x3a
 11914 0105 0B       		.uleb128 0xb
 11915 0106 3B       		.uleb128 0x3b
 11916 0107 0B       		.uleb128 0xb
 11917 0108 49       		.uleb128 0x49
ARM GAS  /tmp/cci8Vpl3.s 			page 274


 11918 0109 13       		.uleb128 0x13
 11919 010a 38       		.uleb128 0x38
 11920 010b 05       		.uleb128 0x5
 11921 010c 00       		.byte	0
 11922 010d 00       		.byte	0
 11923 010e 17       		.uleb128 0x17
 11924 010f 15       		.uleb128 0x15
 11925 0110 01       		.byte	0x1
 11926 0111 27       		.uleb128 0x27
 11927 0112 19       		.uleb128 0x19
 11928 0113 49       		.uleb128 0x49
 11929 0114 13       		.uleb128 0x13
 11930 0115 01       		.uleb128 0x1
 11931 0116 13       		.uleb128 0x13
 11932 0117 00       		.byte	0
 11933 0118 00       		.byte	0
 11934 0119 18       		.uleb128 0x18
 11935 011a 05       		.uleb128 0x5
 11936 011b 00       		.byte	0
 11937 011c 49       		.uleb128 0x49
 11938 011d 13       		.uleb128 0x13
 11939 011e 00       		.byte	0
 11940 011f 00       		.byte	0
 11941 0120 19       		.uleb128 0x19
 11942 0121 13       		.uleb128 0x13
 11943 0122 01       		.byte	0x1
 11944 0123 03       		.uleb128 0x3
 11945 0124 0E       		.uleb128 0xe
 11946 0125 0B       		.uleb128 0xb
 11947 0126 05       		.uleb128 0x5
 11948 0127 3A       		.uleb128 0x3a
 11949 0128 0B       		.uleb128 0xb
 11950 0129 3B       		.uleb128 0x3b
 11951 012a 05       		.uleb128 0x5
 11952 012b 01       		.uleb128 0x1
 11953 012c 13       		.uleb128 0x13
 11954 012d 00       		.byte	0
 11955 012e 00       		.byte	0
 11956 012f 1A       		.uleb128 0x1a
 11957 0130 0D       		.uleb128 0xd
 11958 0131 00       		.byte	0
 11959 0132 03       		.uleb128 0x3
 11960 0133 0E       		.uleb128 0xe
 11961 0134 3A       		.uleb128 0x3a
 11962 0135 0B       		.uleb128 0xb
 11963 0136 3B       		.uleb128 0x3b
 11964 0137 05       		.uleb128 0x5
 11965 0138 49       		.uleb128 0x49
 11966 0139 13       		.uleb128 0x13
 11967 013a 38       		.uleb128 0x38
 11968 013b 0B       		.uleb128 0xb
 11969 013c 00       		.byte	0
 11970 013d 00       		.byte	0
 11971 013e 1B       		.uleb128 0x1b
 11972 013f 0D       		.uleb128 0xd
 11973 0140 00       		.byte	0
 11974 0141 03       		.uleb128 0x3
ARM GAS  /tmp/cci8Vpl3.s 			page 275


 11975 0142 0E       		.uleb128 0xe
 11976 0143 3A       		.uleb128 0x3a
 11977 0144 0B       		.uleb128 0xb
 11978 0145 3B       		.uleb128 0x3b
 11979 0146 05       		.uleb128 0x5
 11980 0147 49       		.uleb128 0x49
 11981 0148 13       		.uleb128 0x13
 11982 0149 38       		.uleb128 0x38
 11983 014a 05       		.uleb128 0x5
 11984 014b 00       		.byte	0
 11985 014c 00       		.byte	0
 11986 014d 1C       		.uleb128 0x1c
 11987 014e 13       		.uleb128 0x13
 11988 014f 01       		.byte	0x1
 11989 0150 03       		.uleb128 0x3
 11990 0151 0E       		.uleb128 0xe
 11991 0152 0B       		.uleb128 0xb
 11992 0153 0B       		.uleb128 0xb
 11993 0154 3A       		.uleb128 0x3a
 11994 0155 0B       		.uleb128 0xb
 11995 0156 3B       		.uleb128 0x3b
 11996 0157 05       		.uleb128 0x5
 11997 0158 01       		.uleb128 0x1
 11998 0159 13       		.uleb128 0x13
 11999 015a 00       		.byte	0
 12000 015b 00       		.byte	0
 12001 015c 1D       		.uleb128 0x1d
 12002 015d 13       		.uleb128 0x13
 12003 015e 01       		.byte	0x1
 12004 015f 0B       		.uleb128 0xb
 12005 0160 0B       		.uleb128 0xb
 12006 0161 3A       		.uleb128 0x3a
 12007 0162 0B       		.uleb128 0xb
 12008 0163 3B       		.uleb128 0x3b
 12009 0164 05       		.uleb128 0x5
 12010 0165 01       		.uleb128 0x1
 12011 0166 13       		.uleb128 0x13
 12012 0167 00       		.byte	0
 12013 0168 00       		.byte	0
 12014 0169 1E       		.uleb128 0x1e
 12015 016a 17       		.uleb128 0x17
 12016 016b 01       		.byte	0x1
 12017 016c 0B       		.uleb128 0xb
 12018 016d 0B       		.uleb128 0xb
 12019 016e 3A       		.uleb128 0x3a
 12020 016f 0B       		.uleb128 0xb
 12021 0170 3B       		.uleb128 0x3b
 12022 0171 05       		.uleb128 0x5
 12023 0172 01       		.uleb128 0x1
 12024 0173 13       		.uleb128 0x13
 12025 0174 00       		.byte	0
 12026 0175 00       		.byte	0
 12027 0176 1F       		.uleb128 0x1f
 12028 0177 0D       		.uleb128 0xd
 12029 0178 00       		.byte	0
 12030 0179 03       		.uleb128 0x3
 12031 017a 0E       		.uleb128 0xe
ARM GAS  /tmp/cci8Vpl3.s 			page 276


 12032 017b 3A       		.uleb128 0x3a
 12033 017c 0B       		.uleb128 0xb
 12034 017d 3B       		.uleb128 0x3b
 12035 017e 05       		.uleb128 0x5
 12036 017f 49       		.uleb128 0x49
 12037 0180 13       		.uleb128 0x13
 12038 0181 00       		.byte	0
 12039 0182 00       		.byte	0
 12040 0183 20       		.uleb128 0x20
 12041 0184 15       		.uleb128 0x15
 12042 0185 01       		.byte	0x1
 12043 0186 27       		.uleb128 0x27
 12044 0187 19       		.uleb128 0x19
 12045 0188 01       		.uleb128 0x1
 12046 0189 13       		.uleb128 0x13
 12047 018a 00       		.byte	0
 12048 018b 00       		.byte	0
 12049 018c 21       		.uleb128 0x21
 12050 018d 04       		.uleb128 0x4
 12051 018e 01       		.byte	0x1
 12052 018f 03       		.uleb128 0x3
 12053 0190 0E       		.uleb128 0xe
 12054 0191 0B       		.uleb128 0xb
 12055 0192 0B       		.uleb128 0xb
 12056 0193 49       		.uleb128 0x49
 12057 0194 13       		.uleb128 0x13
 12058 0195 3A       		.uleb128 0x3a
 12059 0196 0B       		.uleb128 0xb
 12060 0197 3B       		.uleb128 0x3b
 12061 0198 05       		.uleb128 0x5
 12062 0199 01       		.uleb128 0x1
 12063 019a 13       		.uleb128 0x13
 12064 019b 00       		.byte	0
 12065 019c 00       		.byte	0
 12066 019d 22       		.uleb128 0x22
 12067 019e 28       		.uleb128 0x28
 12068 019f 00       		.byte	0
 12069 01a0 03       		.uleb128 0x3
 12070 01a1 0E       		.uleb128 0xe
 12071 01a2 1C       		.uleb128 0x1c
 12072 01a3 0D       		.uleb128 0xd
 12073 01a4 00       		.byte	0
 12074 01a5 00       		.byte	0
 12075 01a6 23       		.uleb128 0x23
 12076 01a7 28       		.uleb128 0x28
 12077 01a8 00       		.byte	0
 12078 01a9 03       		.uleb128 0x3
 12079 01aa 0E       		.uleb128 0xe
 12080 01ab 1C       		.uleb128 0x1c
 12081 01ac 0B       		.uleb128 0xb
 12082 01ad 00       		.byte	0
 12083 01ae 00       		.byte	0
 12084 01af 24       		.uleb128 0x24
 12085 01b0 21       		.uleb128 0x21
 12086 01b1 00       		.byte	0
 12087 01b2 00       		.byte	0
 12088 01b3 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 277


 12089 01b4 25       		.uleb128 0x25
 12090 01b5 0D       		.uleb128 0xd
 12091 01b6 00       		.byte	0
 12092 01b7 03       		.uleb128 0x3
 12093 01b8 08       		.uleb128 0x8
 12094 01b9 3A       		.uleb128 0x3a
 12095 01ba 0B       		.uleb128 0xb
 12096 01bb 3B       		.uleb128 0x3b
 12097 01bc 05       		.uleb128 0x5
 12098 01bd 49       		.uleb128 0x49
 12099 01be 13       		.uleb128 0x13
 12100 01bf 38       		.uleb128 0x38
 12101 01c0 0B       		.uleb128 0xb
 12102 01c1 00       		.byte	0
 12103 01c2 00       		.byte	0
 12104 01c3 26       		.uleb128 0x26
 12105 01c4 34       		.uleb128 0x34
 12106 01c5 00       		.byte	0
 12107 01c6 03       		.uleb128 0x3
 12108 01c7 08       		.uleb128 0x8
 12109 01c8 3A       		.uleb128 0x3a
 12110 01c9 0B       		.uleb128 0xb
 12111 01ca 3B       		.uleb128 0x3b
 12112 01cb 05       		.uleb128 0x5
 12113 01cc 49       		.uleb128 0x49
 12114 01cd 13       		.uleb128 0x13
 12115 01ce 3F       		.uleb128 0x3f
 12116 01cf 19       		.uleb128 0x19
 12117 01d0 02       		.uleb128 0x2
 12118 01d1 18       		.uleb128 0x18
 12119 01d2 00       		.byte	0
 12120 01d3 00       		.byte	0
 12121 01d4 27       		.uleb128 0x27
 12122 01d5 34       		.uleb128 0x34
 12123 01d6 00       		.byte	0
 12124 01d7 03       		.uleb128 0x3
 12125 01d8 0E       		.uleb128 0xe
 12126 01d9 3A       		.uleb128 0x3a
 12127 01da 0B       		.uleb128 0xb
 12128 01db 3B       		.uleb128 0x3b
 12129 01dc 05       		.uleb128 0x5
 12130 01dd 49       		.uleb128 0x49
 12131 01de 13       		.uleb128 0x13
 12132 01df 3F       		.uleb128 0x3f
 12133 01e0 19       		.uleb128 0x19
 12134 01e1 02       		.uleb128 0x2
 12135 01e2 18       		.uleb128 0x18
 12136 01e3 00       		.byte	0
 12137 01e4 00       		.byte	0
 12138 01e5 28       		.uleb128 0x28
 12139 01e6 34       		.uleb128 0x34
 12140 01e7 00       		.byte	0
 12141 01e8 03       		.uleb128 0x3
 12142 01e9 08       		.uleb128 0x8
 12143 01ea 3A       		.uleb128 0x3a
 12144 01eb 0B       		.uleb128 0xb
 12145 01ec 3B       		.uleb128 0x3b
ARM GAS  /tmp/cci8Vpl3.s 			page 278


 12146 01ed 05       		.uleb128 0x5
 12147 01ee 49       		.uleb128 0x49
 12148 01ef 13       		.uleb128 0x13
 12149 01f0 02       		.uleb128 0x2
 12150 01f1 18       		.uleb128 0x18
 12151 01f2 00       		.byte	0
 12152 01f3 00       		.byte	0
 12153 01f4 29       		.uleb128 0x29
 12154 01f5 2E       		.uleb128 0x2e
 12155 01f6 01       		.byte	0x1
 12156 01f7 3F       		.uleb128 0x3f
 12157 01f8 19       		.uleb128 0x19
 12158 01f9 03       		.uleb128 0x3
 12159 01fa 0E       		.uleb128 0xe
 12160 01fb 3A       		.uleb128 0x3a
 12161 01fc 0B       		.uleb128 0xb
 12162 01fd 3B       		.uleb128 0x3b
 12163 01fe 0B       		.uleb128 0xb
 12164 01ff 27       		.uleb128 0x27
 12165 0200 19       		.uleb128 0x19
 12166 0201 11       		.uleb128 0x11
 12167 0202 01       		.uleb128 0x1
 12168 0203 12       		.uleb128 0x12
 12169 0204 06       		.uleb128 0x6
 12170 0205 40       		.uleb128 0x40
 12171 0206 18       		.uleb128 0x18
 12172 0207 9742     		.uleb128 0x2117
 12173 0209 19       		.uleb128 0x19
 12174 020a 01       		.uleb128 0x1
 12175 020b 13       		.uleb128 0x13
 12176 020c 00       		.byte	0
 12177 020d 00       		.byte	0
 12178 020e 2A       		.uleb128 0x2a
 12179 020f 05       		.uleb128 0x5
 12180 0210 00       		.byte	0
 12181 0211 03       		.uleb128 0x3
 12182 0212 0E       		.uleb128 0xe
 12183 0213 3A       		.uleb128 0x3a
 12184 0214 0B       		.uleb128 0xb
 12185 0215 3B       		.uleb128 0x3b
 12186 0216 05       		.uleb128 0x5
 12187 0217 49       		.uleb128 0x49
 12188 0218 13       		.uleb128 0x13
 12189 0219 02       		.uleb128 0x2
 12190 021a 18       		.uleb128 0x18
 12191 021b 00       		.byte	0
 12192 021c 00       		.byte	0
 12193 021d 2B       		.uleb128 0x2b
 12194 021e 2E       		.uleb128 0x2e
 12195 021f 01       		.byte	0x1
 12196 0220 3F       		.uleb128 0x3f
 12197 0221 19       		.uleb128 0x19
 12198 0222 03       		.uleb128 0x3
 12199 0223 0E       		.uleb128 0xe
 12200 0224 3A       		.uleb128 0x3a
 12201 0225 0B       		.uleb128 0xb
 12202 0226 3B       		.uleb128 0x3b
ARM GAS  /tmp/cci8Vpl3.s 			page 279


 12203 0227 0B       		.uleb128 0xb
 12204 0228 27       		.uleb128 0x27
 12205 0229 19       		.uleb128 0x19
 12206 022a 49       		.uleb128 0x49
 12207 022b 13       		.uleb128 0x13
 12208 022c 11       		.uleb128 0x11
 12209 022d 01       		.uleb128 0x1
 12210 022e 12       		.uleb128 0x12
 12211 022f 06       		.uleb128 0x6
 12212 0230 40       		.uleb128 0x40
 12213 0231 18       		.uleb128 0x18
 12214 0232 9742     		.uleb128 0x2117
 12215 0234 19       		.uleb128 0x19
 12216 0235 01       		.uleb128 0x1
 12217 0236 13       		.uleb128 0x13
 12218 0237 00       		.byte	0
 12219 0238 00       		.byte	0
 12220 0239 2C       		.uleb128 0x2c
 12221 023a 05       		.uleb128 0x5
 12222 023b 00       		.byte	0
 12223 023c 03       		.uleb128 0x3
 12224 023d 0E       		.uleb128 0xe
 12225 023e 3A       		.uleb128 0x3a
 12226 023f 0B       		.uleb128 0xb
 12227 0240 3B       		.uleb128 0x3b
 12228 0241 05       		.uleb128 0x5
 12229 0242 49       		.uleb128 0x49
 12230 0243 13       		.uleb128 0x13
 12231 0244 02       		.uleb128 0x2
 12232 0245 17       		.uleb128 0x17
 12233 0246 00       		.byte	0
 12234 0247 00       		.byte	0
 12235 0248 2D       		.uleb128 0x2d
 12236 0249 34       		.uleb128 0x34
 12237 024a 00       		.byte	0
 12238 024b 03       		.uleb128 0x3
 12239 024c 0E       		.uleb128 0xe
 12240 024d 3A       		.uleb128 0x3a
 12241 024e 0B       		.uleb128 0xb
 12242 024f 3B       		.uleb128 0x3b
 12243 0250 05       		.uleb128 0x5
 12244 0251 49       		.uleb128 0x49
 12245 0252 13       		.uleb128 0x13
 12246 0253 02       		.uleb128 0x2
 12247 0254 18       		.uleb128 0x18
 12248 0255 00       		.byte	0
 12249 0256 00       		.byte	0
 12250 0257 2E       		.uleb128 0x2e
 12251 0258 0A       		.uleb128 0xa
 12252 0259 00       		.byte	0
 12253 025a 03       		.uleb128 0x3
 12254 025b 0E       		.uleb128 0xe
 12255 025c 3A       		.uleb128 0x3a
 12256 025d 0B       		.uleb128 0xb
 12257 025e 3B       		.uleb128 0x3b
 12258 025f 05       		.uleb128 0x5
 12259 0260 11       		.uleb128 0x11
ARM GAS  /tmp/cci8Vpl3.s 			page 280


 12260 0261 01       		.uleb128 0x1
 12261 0262 00       		.byte	0
 12262 0263 00       		.byte	0
 12263 0264 2F       		.uleb128 0x2f
 12264 0265 0B       		.uleb128 0xb
 12265 0266 01       		.byte	0x1
 12266 0267 55       		.uleb128 0x55
 12267 0268 17       		.uleb128 0x17
 12268 0269 01       		.uleb128 0x1
 12269 026a 13       		.uleb128 0x13
 12270 026b 00       		.byte	0
 12271 026c 00       		.byte	0
 12272 026d 30       		.uleb128 0x30
 12273 026e 34       		.uleb128 0x34
 12274 026f 00       		.byte	0
 12275 0270 03       		.uleb128 0x3
 12276 0271 0E       		.uleb128 0xe
 12277 0272 3A       		.uleb128 0x3a
 12278 0273 0B       		.uleb128 0xb
 12279 0274 3B       		.uleb128 0x3b
 12280 0275 05       		.uleb128 0x5
 12281 0276 49       		.uleb128 0x49
 12282 0277 13       		.uleb128 0x13
 12283 0278 02       		.uleb128 0x2
 12284 0279 17       		.uleb128 0x17
 12285 027a 00       		.byte	0
 12286 027b 00       		.byte	0
 12287 027c 31       		.uleb128 0x31
 12288 027d 1D       		.uleb128 0x1d
 12289 027e 01       		.byte	0x1
 12290 027f 31       		.uleb128 0x31
 12291 0280 13       		.uleb128 0x13
 12292 0281 11       		.uleb128 0x11
 12293 0282 01       		.uleb128 0x1
 12294 0283 12       		.uleb128 0x12
 12295 0284 06       		.uleb128 0x6
 12296 0285 58       		.uleb128 0x58
 12297 0286 0B       		.uleb128 0xb
 12298 0287 59       		.uleb128 0x59
 12299 0288 05       		.uleb128 0x5
 12300 0289 01       		.uleb128 0x1
 12301 028a 13       		.uleb128 0x13
 12302 028b 00       		.byte	0
 12303 028c 00       		.byte	0
 12304 028d 32       		.uleb128 0x32
 12305 028e 05       		.uleb128 0x5
 12306 028f 00       		.byte	0
 12307 0290 31       		.uleb128 0x31
 12308 0291 13       		.uleb128 0x13
 12309 0292 02       		.uleb128 0x2
 12310 0293 17       		.uleb128 0x17
 12311 0294 00       		.byte	0
 12312 0295 00       		.byte	0
 12313 0296 33       		.uleb128 0x33
 12314 0297 898201   		.uleb128 0x4109
 12315 029a 01       		.byte	0x1
 12316 029b 11       		.uleb128 0x11
ARM GAS  /tmp/cci8Vpl3.s 			page 281


 12317 029c 01       		.uleb128 0x1
 12318 029d 31       		.uleb128 0x31
 12319 029e 13       		.uleb128 0x13
 12320 029f 01       		.uleb128 0x1
 12321 02a0 13       		.uleb128 0x13
 12322 02a1 00       		.byte	0
 12323 02a2 00       		.byte	0
 12324 02a3 34       		.uleb128 0x34
 12325 02a4 8A8201   		.uleb128 0x410a
 12326 02a7 00       		.byte	0
 12327 02a8 02       		.uleb128 0x2
 12328 02a9 18       		.uleb128 0x18
 12329 02aa 9142     		.uleb128 0x2111
 12330 02ac 18       		.uleb128 0x18
 12331 02ad 00       		.byte	0
 12332 02ae 00       		.byte	0
 12333 02af 35       		.uleb128 0x35
 12334 02b0 898201   		.uleb128 0x4109
 12335 02b3 01       		.byte	0x1
 12336 02b4 11       		.uleb128 0x11
 12337 02b5 01       		.uleb128 0x1
 12338 02b6 31       		.uleb128 0x31
 12339 02b7 13       		.uleb128 0x13
 12340 02b8 00       		.byte	0
 12341 02b9 00       		.byte	0
 12342 02ba 36       		.uleb128 0x36
 12343 02bb 0B       		.uleb128 0xb
 12344 02bc 01       		.byte	0x1
 12345 02bd 11       		.uleb128 0x11
 12346 02be 01       		.uleb128 0x1
 12347 02bf 12       		.uleb128 0x12
 12348 02c0 06       		.uleb128 0x6
 12349 02c1 01       		.uleb128 0x1
 12350 02c2 13       		.uleb128 0x13
 12351 02c3 00       		.byte	0
 12352 02c4 00       		.byte	0
 12353 02c5 37       		.uleb128 0x37
 12354 02c6 34       		.uleb128 0x34
 12355 02c7 00       		.byte	0
 12356 02c8 03       		.uleb128 0x3
 12357 02c9 08       		.uleb128 0x8
 12358 02ca 3A       		.uleb128 0x3a
 12359 02cb 0B       		.uleb128 0xb
 12360 02cc 3B       		.uleb128 0x3b
 12361 02cd 05       		.uleb128 0x5
 12362 02ce 49       		.uleb128 0x49
 12363 02cf 13       		.uleb128 0x13
 12364 02d0 02       		.uleb128 0x2
 12365 02d1 17       		.uleb128 0x17
 12366 02d2 00       		.byte	0
 12367 02d3 00       		.byte	0
 12368 02d4 38       		.uleb128 0x38
 12369 02d5 34       		.uleb128 0x34
 12370 02d6 00       		.byte	0
 12371 02d7 03       		.uleb128 0x3
 12372 02d8 0E       		.uleb128 0xe
 12373 02d9 3A       		.uleb128 0x3a
ARM GAS  /tmp/cci8Vpl3.s 			page 282


 12374 02da 0B       		.uleb128 0xb
 12375 02db 3B       		.uleb128 0x3b
 12376 02dc 05       		.uleb128 0x5
 12377 02dd 49       		.uleb128 0x49
 12378 02de 13       		.uleb128 0x13
 12379 02df 00       		.byte	0
 12380 02e0 00       		.byte	0
 12381 02e1 39       		.uleb128 0x39
 12382 02e2 898201   		.uleb128 0x4109
 12383 02e5 00       		.byte	0
 12384 02e6 11       		.uleb128 0x11
 12385 02e7 01       		.uleb128 0x1
 12386 02e8 31       		.uleb128 0x31
 12387 02e9 13       		.uleb128 0x13
 12388 02ea 00       		.byte	0
 12389 02eb 00       		.byte	0
 12390 02ec 3A       		.uleb128 0x3a
 12391 02ed 05       		.uleb128 0x5
 12392 02ee 00       		.byte	0
 12393 02ef 03       		.uleb128 0x3
 12394 02f0 08       		.uleb128 0x8
 12395 02f1 3A       		.uleb128 0x3a
 12396 02f2 0B       		.uleb128 0xb
 12397 02f3 3B       		.uleb128 0x3b
 12398 02f4 05       		.uleb128 0x5
 12399 02f5 49       		.uleb128 0x49
 12400 02f6 13       		.uleb128 0x13
 12401 02f7 02       		.uleb128 0x2
 12402 02f8 17       		.uleb128 0x17
 12403 02f9 00       		.byte	0
 12404 02fa 00       		.byte	0
 12405 02fb 3B       		.uleb128 0x3b
 12406 02fc 2E       		.uleb128 0x2e
 12407 02fd 01       		.byte	0x1
 12408 02fe 3F       		.uleb128 0x3f
 12409 02ff 19       		.uleb128 0x19
 12410 0300 03       		.uleb128 0x3
 12411 0301 0E       		.uleb128 0xe
 12412 0302 3A       		.uleb128 0x3a
 12413 0303 0B       		.uleb128 0xb
 12414 0304 3B       		.uleb128 0x3b
 12415 0305 0B       		.uleb128 0xb
 12416 0306 27       		.uleb128 0x27
 12417 0307 19       		.uleb128 0x19
 12418 0308 49       		.uleb128 0x49
 12419 0309 13       		.uleb128 0x13
 12420 030a 11       		.uleb128 0x11
 12421 030b 01       		.uleb128 0x1
 12422 030c 12       		.uleb128 0x12
 12423 030d 06       		.uleb128 0x6
 12424 030e 40       		.uleb128 0x40
 12425 030f 18       		.uleb128 0x18
 12426 0310 9642     		.uleb128 0x2116
 12427 0312 19       		.uleb128 0x19
 12428 0313 01       		.uleb128 0x1
 12429 0314 13       		.uleb128 0x13
 12430 0315 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 283


 12431 0316 00       		.byte	0
 12432 0317 3C       		.uleb128 0x3c
 12433 0318 34       		.uleb128 0x34
 12434 0319 00       		.byte	0
 12435 031a 03       		.uleb128 0x3
 12436 031b 0E       		.uleb128 0xe
 12437 031c 3A       		.uleb128 0x3a
 12438 031d 0B       		.uleb128 0xb
 12439 031e 3B       		.uleb128 0x3b
 12440 031f 05       		.uleb128 0x5
 12441 0320 49       		.uleb128 0x49
 12442 0321 13       		.uleb128 0x13
 12443 0322 1C       		.uleb128 0x1c
 12444 0323 0B       		.uleb128 0xb
 12445 0324 00       		.byte	0
 12446 0325 00       		.byte	0
 12447 0326 3D       		.uleb128 0x3d
 12448 0327 1D       		.uleb128 0x1d
 12449 0328 01       		.byte	0x1
 12450 0329 31       		.uleb128 0x31
 12451 032a 13       		.uleb128 0x13
 12452 032b 52       		.uleb128 0x52
 12453 032c 01       		.uleb128 0x1
 12454 032d 55       		.uleb128 0x55
 12455 032e 17       		.uleb128 0x17
 12456 032f 58       		.uleb128 0x58
 12457 0330 0B       		.uleb128 0xb
 12458 0331 59       		.uleb128 0x59
 12459 0332 05       		.uleb128 0x5
 12460 0333 01       		.uleb128 0x1
 12461 0334 13       		.uleb128 0x13
 12462 0335 00       		.byte	0
 12463 0336 00       		.byte	0
 12464 0337 3E       		.uleb128 0x3e
 12465 0338 0B       		.uleb128 0xb
 12466 0339 01       		.byte	0x1
 12467 033a 55       		.uleb128 0x55
 12468 033b 17       		.uleb128 0x17
 12469 033c 00       		.byte	0
 12470 033d 00       		.byte	0
 12471 033e 3F       		.uleb128 0x3f
 12472 033f 34       		.uleb128 0x34
 12473 0340 00       		.byte	0
 12474 0341 31       		.uleb128 0x31
 12475 0342 13       		.uleb128 0x13
 12476 0343 02       		.uleb128 0x2
 12477 0344 17       		.uleb128 0x17
 12478 0345 00       		.byte	0
 12479 0346 00       		.byte	0
 12480 0347 40       		.uleb128 0x40
 12481 0348 34       		.uleb128 0x34
 12482 0349 00       		.byte	0
 12483 034a 31       		.uleb128 0x31
 12484 034b 13       		.uleb128 0x13
 12485 034c 02       		.uleb128 0x2
 12486 034d 18       		.uleb128 0x18
 12487 034e 00       		.byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 284


 12488 034f 00       		.byte	0
 12489 0350 41       		.uleb128 0x41
 12490 0351 1D       		.uleb128 0x1d
 12491 0352 01       		.byte	0x1
 12492 0353 31       		.uleb128 0x31
 12493 0354 13       		.uleb128 0x13
 12494 0355 52       		.uleb128 0x52
 12495 0356 01       		.uleb128 0x1
 12496 0357 55       		.uleb128 0x55
 12497 0358 17       		.uleb128 0x17
 12498 0359 58       		.uleb128 0x58
 12499 035a 0B       		.uleb128 0xb
 12500 035b 59       		.uleb128 0x59
 12501 035c 05       		.uleb128 0x5
 12502 035d 00       		.byte	0
 12503 035e 00       		.byte	0
 12504 035f 42       		.uleb128 0x42
 12505 0360 2E       		.uleb128 0x2e
 12506 0361 01       		.byte	0x1
 12507 0362 03       		.uleb128 0x3
 12508 0363 0E       		.uleb128 0xe
 12509 0364 3A       		.uleb128 0x3a
 12510 0365 0B       		.uleb128 0xb
 12511 0366 3B       		.uleb128 0x3b
 12512 0367 05       		.uleb128 0x5
 12513 0368 27       		.uleb128 0x27
 12514 0369 19       		.uleb128 0x19
 12515 036a 49       		.uleb128 0x49
 12516 036b 13       		.uleb128 0x13
 12517 036c 11       		.uleb128 0x11
 12518 036d 01       		.uleb128 0x1
 12519 036e 12       		.uleb128 0x12
 12520 036f 06       		.uleb128 0x6
 12521 0370 40       		.uleb128 0x40
 12522 0371 18       		.uleb128 0x18
 12523 0372 9642     		.uleb128 0x2116
 12524 0374 19       		.uleb128 0x19
 12525 0375 01       		.uleb128 0x1
 12526 0376 13       		.uleb128 0x13
 12527 0377 00       		.byte	0
 12528 0378 00       		.byte	0
 12529 0379 43       		.uleb128 0x43
 12530 037a 2E       		.uleb128 0x2e
 12531 037b 01       		.byte	0x1
 12532 037c 03       		.uleb128 0x3
 12533 037d 0E       		.uleb128 0xe
 12534 037e 3A       		.uleb128 0x3a
 12535 037f 0B       		.uleb128 0xb
 12536 0380 3B       		.uleb128 0x3b
 12537 0381 05       		.uleb128 0x5
 12538 0382 27       		.uleb128 0x27
 12539 0383 19       		.uleb128 0x19
 12540 0384 49       		.uleb128 0x49
 12541 0385 13       		.uleb128 0x13
 12542 0386 20       		.uleb128 0x20
 12543 0387 0B       		.uleb128 0xb
 12544 0388 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 285


 12545 0389 13       		.uleb128 0x13
 12546 038a 00       		.byte	0
 12547 038b 00       		.byte	0
 12548 038c 44       		.uleb128 0x44
 12549 038d 05       		.uleb128 0x5
 12550 038e 00       		.byte	0
 12551 038f 03       		.uleb128 0x3
 12552 0390 0E       		.uleb128 0xe
 12553 0391 3A       		.uleb128 0x3a
 12554 0392 0B       		.uleb128 0xb
 12555 0393 3B       		.uleb128 0x3b
 12556 0394 05       		.uleb128 0x5
 12557 0395 49       		.uleb128 0x49
 12558 0396 13       		.uleb128 0x13
 12559 0397 00       		.byte	0
 12560 0398 00       		.byte	0
 12561 0399 45       		.uleb128 0x45
 12562 039a 34       		.uleb128 0x34
 12563 039b 00       		.byte	0
 12564 039c 03       		.uleb128 0x3
 12565 039d 08       		.uleb128 0x8
 12566 039e 3A       		.uleb128 0x3a
 12567 039f 0B       		.uleb128 0xb
 12568 03a0 3B       		.uleb128 0x3b
 12569 03a1 05       		.uleb128 0x5
 12570 03a2 49       		.uleb128 0x49
 12571 03a3 13       		.uleb128 0x13
 12572 03a4 00       		.byte	0
 12573 03a5 00       		.byte	0
 12574 03a6 46       		.uleb128 0x46
 12575 03a7 2E       		.uleb128 0x2e
 12576 03a8 01       		.byte	0x1
 12577 03a9 3F       		.uleb128 0x3f
 12578 03aa 19       		.uleb128 0x19
 12579 03ab 03       		.uleb128 0x3
 12580 03ac 0E       		.uleb128 0xe
 12581 03ad 3A       		.uleb128 0x3a
 12582 03ae 0B       		.uleb128 0xb
 12583 03af 3B       		.uleb128 0x3b
 12584 03b0 0B       		.uleb128 0xb
 12585 03b1 27       		.uleb128 0x27
 12586 03b2 19       		.uleb128 0x19
 12587 03b3 49       		.uleb128 0x49
 12588 03b4 13       		.uleb128 0x13
 12589 03b5 20       		.uleb128 0x20
 12590 03b6 0B       		.uleb128 0xb
 12591 03b7 01       		.uleb128 0x1
 12592 03b8 13       		.uleb128 0x13
 12593 03b9 00       		.byte	0
 12594 03ba 00       		.byte	0
 12595 03bb 47       		.uleb128 0x47
 12596 03bc 2E       		.uleb128 0x2e
 12597 03bd 01       		.byte	0x1
 12598 03be 03       		.uleb128 0x3
 12599 03bf 0E       		.uleb128 0xe
 12600 03c0 3A       		.uleb128 0x3a
 12601 03c1 0B       		.uleb128 0xb
ARM GAS  /tmp/cci8Vpl3.s 			page 286


 12602 03c2 3B       		.uleb128 0x3b
 12603 03c3 05       		.uleb128 0x5
 12604 03c4 27       		.uleb128 0x27
 12605 03c5 19       		.uleb128 0x19
 12606 03c6 49       		.uleb128 0x49
 12607 03c7 13       		.uleb128 0x13
 12608 03c8 11       		.uleb128 0x11
 12609 03c9 01       		.uleb128 0x1
 12610 03ca 12       		.uleb128 0x12
 12611 03cb 06       		.uleb128 0x6
 12612 03cc 40       		.uleb128 0x40
 12613 03cd 18       		.uleb128 0x18
 12614 03ce 9742     		.uleb128 0x2117
 12615 03d0 19       		.uleb128 0x19
 12616 03d1 01       		.uleb128 0x1
 12617 03d2 13       		.uleb128 0x13
 12618 03d3 00       		.byte	0
 12619 03d4 00       		.byte	0
 12620 03d5 48       		.uleb128 0x48
 12621 03d6 2E       		.uleb128 0x2e
 12622 03d7 01       		.byte	0x1
 12623 03d8 31       		.uleb128 0x31
 12624 03d9 13       		.uleb128 0x13
 12625 03da 11       		.uleb128 0x11
 12626 03db 01       		.uleb128 0x1
 12627 03dc 12       		.uleb128 0x12
 12628 03dd 06       		.uleb128 0x6
 12629 03de 40       		.uleb128 0x40
 12630 03df 18       		.uleb128 0x18
 12631 03e0 9742     		.uleb128 0x2117
 12632 03e2 19       		.uleb128 0x19
 12633 03e3 01       		.uleb128 0x1
 12634 03e4 13       		.uleb128 0x13
 12635 03e5 00       		.byte	0
 12636 03e6 00       		.byte	0
 12637 03e7 49       		.uleb128 0x49
 12638 03e8 2E       		.uleb128 0x2e
 12639 03e9 00       		.byte	0
 12640 03ea 3F       		.uleb128 0x3f
 12641 03eb 19       		.uleb128 0x19
 12642 03ec 3C       		.uleb128 0x3c
 12643 03ed 19       		.uleb128 0x19
 12644 03ee 6E       		.uleb128 0x6e
 12645 03ef 0E       		.uleb128 0xe
 12646 03f0 03       		.uleb128 0x3
 12647 03f1 0E       		.uleb128 0xe
 12648 03f2 3A       		.uleb128 0x3a
 12649 03f3 0B       		.uleb128 0xb
 12650 03f4 3B       		.uleb128 0x3b
 12651 03f5 0B       		.uleb128 0xb
 12652 03f6 00       		.byte	0
 12653 03f7 00       		.byte	0
 12654 03f8 4A       		.uleb128 0x4a
 12655 03f9 2E       		.uleb128 0x2e
 12656 03fa 00       		.byte	0
 12657 03fb 3F       		.uleb128 0x3f
 12658 03fc 19       		.uleb128 0x19
ARM GAS  /tmp/cci8Vpl3.s 			page 287


 12659 03fd 3C       		.uleb128 0x3c
 12660 03fe 19       		.uleb128 0x19
 12661 03ff 6E       		.uleb128 0x6e
 12662 0400 0E       		.uleb128 0xe
 12663 0401 03       		.uleb128 0x3
 12664 0402 0E       		.uleb128 0xe
 12665 0403 3A       		.uleb128 0x3a
 12666 0404 0B       		.uleb128 0xb
 12667 0405 3B       		.uleb128 0x3b
 12668 0406 0B       		.uleb128 0xb
 12669 0407 6E       		.uleb128 0x6e
 12670 0408 0E       		.uleb128 0xe
 12671 0409 00       		.byte	0
 12672 040a 00       		.byte	0
 12673 040b 00       		.byte	0
 12674              		.section	.debug_loc,"",%progbits
 12675              	.Ldebug_loc0:
 12676              	.LLST100:
 12677 0000 781C0000 		.4byte	.LVL519-.Ltext0
 12678 0004 DA1C0000 		.4byte	.LVL532-.Ltext0
 12679 0008 0100     		.2byte	0x1
 12680 000a 50       		.byte	0x50
 12681 000b DA1C0000 		.4byte	.LVL532-.Ltext0
 12682 000f 981D0000 		.4byte	.LVL550-.Ltext0
 12683 0013 0400     		.2byte	0x4
 12684 0015 F3       		.byte	0xf3
 12685 0016 01       		.uleb128 0x1
 12686 0017 50       		.byte	0x50
 12687 0018 9F       		.byte	0x9f
 12688 0019 981D0000 		.4byte	.LVL550-.Ltext0
 12689 001d 9E1D0000 		.4byte	.LVL552-.Ltext0
 12690 0021 0100     		.2byte	0x1
 12691 0023 50       		.byte	0x50
 12692 0024 9E1D0000 		.4byte	.LVL552-.Ltext0
 12693 0028 521E0000 		.4byte	.LVL561-.Ltext0
 12694 002c 0400     		.2byte	0x4
 12695 002e F3       		.byte	0xf3
 12696 002f 01       		.uleb128 0x1
 12697 0030 50       		.byte	0x50
 12698 0031 9F       		.byte	0x9f
 12699 0032 521E0000 		.4byte	.LVL561-.Ltext0
 12700 0036 581E0000 		.4byte	.LVL562-.Ltext0
 12701 003a 0100     		.2byte	0x1
 12702 003c 50       		.byte	0x50
 12703 003d 581E0000 		.4byte	.LVL562-.Ltext0
 12704 0041 641E0000 		.4byte	.LFE108-.Ltext0
 12705 0045 0400     		.2byte	0x4
 12706 0047 F3       		.byte	0xf3
 12707 0048 01       		.uleb128 0x1
 12708 0049 50       		.byte	0x50
 12709 004a 9F       		.byte	0x9f
 12710 004b 00000000 		.4byte	0
 12711 004f 00000000 		.4byte	0
 12712              	.LLST101:
 12713 0053 781C0000 		.4byte	.LVL519-.Ltext0
 12714 0057 881C0000 		.4byte	.LVL521-.Ltext0
 12715 005b 0100     		.2byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 288


 12716 005d 51       		.byte	0x51
 12717 005e 881C0000 		.4byte	.LVL521-.Ltext0
 12718 0062 A01C0000 		.4byte	.LVL526-.Ltext0
 12719 0066 0400     		.2byte	0x4
 12720 0068 F3       		.byte	0xf3
 12721 0069 01       		.uleb128 0x1
 12722 006a 51       		.byte	0x51
 12723 006b 9F       		.byte	0x9f
 12724 006c A01C0000 		.4byte	.LVL526-.Ltext0
 12725 0070 BC1C0000 		.4byte	.LVL530-.Ltext0
 12726 0074 0100     		.2byte	0x1
 12727 0076 51       		.byte	0x51
 12728 0077 BC1C0000 		.4byte	.LVL530-.Ltext0
 12729 007b 481D0000 		.4byte	.LVL543-.Ltext0
 12730 007f 0100     		.2byte	0x1
 12731 0081 54       		.byte	0x54
 12732 0082 981D0000 		.4byte	.LVL550-.Ltext0
 12733 0086 9C1D0000 		.4byte	.LVL551-.Ltext0
 12734 008a 0100     		.2byte	0x1
 12735 008c 51       		.byte	0x51
 12736 008d 9C1D0000 		.4byte	.LVL551-.Ltext0
 12737 0091 E21D0000 		.4byte	.LVL556-.Ltext0
 12738 0095 0100     		.2byte	0x1
 12739 0097 54       		.byte	0x54
 12740 0098 521E0000 		.4byte	.LVL561-.Ltext0
 12741 009c 641E0000 		.4byte	.LFE108-.Ltext0
 12742 00a0 0100     		.2byte	0x1
 12743 00a2 54       		.byte	0x54
 12744 00a3 00000000 		.4byte	0
 12745 00a7 00000000 		.4byte	0
 12746              	.LLST102:
 12747 00ab 781C0000 		.4byte	.LVL519-.Ltext0
 12748 00af 8E1C0000 		.4byte	.LVL522-.Ltext0
 12749 00b3 0100     		.2byte	0x1
 12750 00b5 52       		.byte	0x52
 12751 00b6 8E1C0000 		.4byte	.LVL522-.Ltext0
 12752 00ba A01C0000 		.4byte	.LVL526-.Ltext0
 12753 00be 0400     		.2byte	0x4
 12754 00c0 F3       		.byte	0xf3
 12755 00c1 01       		.uleb128 0x1
 12756 00c2 52       		.byte	0x52
 12757 00c3 9F       		.byte	0x9f
 12758 00c4 A01C0000 		.4byte	.LVL526-.Ltext0
 12759 00c8 D41C0000 		.4byte	.LVL531-.Ltext0
 12760 00cc 0100     		.2byte	0x1
 12761 00ce 52       		.byte	0x52
 12762 00cf D41C0000 		.4byte	.LVL531-.Ltext0
 12763 00d3 981D0000 		.4byte	.LVL550-.Ltext0
 12764 00d7 0400     		.2byte	0x4
 12765 00d9 F3       		.byte	0xf3
 12766 00da 01       		.uleb128 0x1
 12767 00db 52       		.byte	0x52
 12768 00dc 9F       		.byte	0x9f
 12769 00dd 981D0000 		.4byte	.LVL550-.Ltext0
 12770 00e1 A11D0000 		.4byte	.LVL553-1-.Ltext0
 12771 00e5 0100     		.2byte	0x1
 12772 00e7 52       		.byte	0x52
ARM GAS  /tmp/cci8Vpl3.s 			page 289


 12773 00e8 A11D0000 		.4byte	.LVL553-1-.Ltext0
 12774 00ec 521E0000 		.4byte	.LVL561-.Ltext0
 12775 00f0 0400     		.2byte	0x4
 12776 00f2 F3       		.byte	0xf3
 12777 00f3 01       		.uleb128 0x1
 12778 00f4 52       		.byte	0x52
 12779 00f5 9F       		.byte	0x9f
 12780 00f6 521E0000 		.4byte	.LVL561-.Ltext0
 12781 00fa 581E0000 		.4byte	.LVL562-.Ltext0
 12782 00fe 0100     		.2byte	0x1
 12783 0100 52       		.byte	0x52
 12784 0101 581E0000 		.4byte	.LVL562-.Ltext0
 12785 0105 641E0000 		.4byte	.LFE108-.Ltext0
 12786 0109 0400     		.2byte	0x4
 12787 010b F3       		.byte	0xf3
 12788 010c 01       		.uleb128 0x1
 12789 010d 52       		.byte	0x52
 12790 010e 9F       		.byte	0x9f
 12791 010f 00000000 		.4byte	0
 12792 0113 00000000 		.4byte	0
 12793              	.LLST104:
 12794 0117 B21C0000 		.4byte	.LVL527-.Ltext0
 12795 011b B41C0000 		.4byte	.LVL528-.Ltext0
 12796 011f 0100     		.2byte	0x1
 12797 0121 56       		.byte	0x56
 12798 0122 B61C0000 		.4byte	.LVL529-.Ltext0
 12799 0126 481D0000 		.4byte	.LVL543-.Ltext0
 12800 012a 0100     		.2byte	0x1
 12801 012c 56       		.byte	0x56
 12802 012d 9C1D0000 		.4byte	.LVL551-.Ltext0
 12803 0131 4A1E0000 		.4byte	.LVL559-.Ltext0
 12804 0135 0100     		.2byte	0x1
 12805 0137 56       		.byte	0x56
 12806 0138 521E0000 		.4byte	.LVL561-.Ltext0
 12807 013c 641E0000 		.4byte	.LFE108-.Ltext0
 12808 0140 0100     		.2byte	0x1
 12809 0142 56       		.byte	0x56
 12810 0143 00000000 		.4byte	0
 12811 0147 00000000 		.4byte	0
 12812              	.LLST105:
 12813 014b 001D0000 		.4byte	.LVL537-.Ltext0
 12814 014f 041D0000 		.4byte	.LVL538-.Ltext0
 12815 0153 0600     		.2byte	0x6
 12816 0155 03       		.byte	0x3
 12817 0156 1F000000 		.4byte	st+31
 12818 015a 9F       		.byte	0x9f
 12819 015b 00000000 		.4byte	0
 12820 015f 00000000 		.4byte	0
 12821              	.LLST103:
 12822 0163 7E1C0000 		.4byte	.LVL520-.Ltext0
 12823 0167 8E1C0000 		.4byte	.LVL522-.Ltext0
 12824 016b 0200     		.2byte	0x2
 12825 016d 30       		.byte	0x30
 12826 016e 9F       		.byte	0x9f
 12827 016f 8E1C0000 		.4byte	.LVL522-.Ltext0
 12828 0173 921C0000 		.4byte	.LVL523-.Ltext0
 12829 0177 0900     		.2byte	0x9
ARM GAS  /tmp/cci8Vpl3.s 			page 290


 12830 0179 73       		.byte	0x73
 12831 017a 00       		.sleb128 0
 12832 017b 03       		.byte	0x3
 12833 017c 16000000 		.4byte	st+22
 12834 0180 1C       		.byte	0x1c
 12835 0181 9F       		.byte	0x9f
 12836 0182 921C0000 		.4byte	.LVL523-.Ltext0
 12837 0186 961C0000 		.4byte	.LVL524-.Ltext0
 12838 018a 0900     		.2byte	0x9
 12839 018c 73       		.byte	0x73
 12840 018d 00       		.sleb128 0
 12841 018e 03       		.byte	0x3
 12842 018f 17000000 		.4byte	st+23
 12843 0193 1C       		.byte	0x1c
 12844 0194 9F       		.byte	0x9f
 12845 0195 961C0000 		.4byte	.LVL524-.Ltext0
 12846 0199 9E1C0000 		.4byte	.LVL525-.Ltext0
 12847 019d 0900     		.2byte	0x9
 12848 019f 73       		.byte	0x73
 12849 01a0 00       		.sleb128 0
 12850 01a1 03       		.byte	0x3
 12851 01a2 16000000 		.4byte	st+22
 12852 01a6 1C       		.byte	0x1c
 12853 01a7 9F       		.byte	0x9f
 12854 01a8 00000000 		.4byte	0
 12855 01ac 00000000 		.4byte	0
 12856              	.LLST99:
 12857 01b0 721C0000 		.4byte	.LVL517-.Ltext0
 12858 01b4 761C0000 		.4byte	.LVL518-.Ltext0
 12859 01b8 0100     		.2byte	0x1
 12860 01ba 50       		.byte	0x50
 12861 01bb 761C0000 		.4byte	.LVL518-.Ltext0
 12862 01bf 781C0000 		.4byte	.LFE107-.Ltext0
 12863 01c3 0400     		.2byte	0x4
 12864 01c5 F3       		.byte	0xf3
 12865 01c6 01       		.uleb128 0x1
 12866 01c7 50       		.byte	0x50
 12867 01c8 9F       		.byte	0x9f
 12868 01c9 00000000 		.4byte	0
 12869 01cd 00000000 		.4byte	0
 12870              	.LLST98:
 12871 01d1 6C1C0000 		.4byte	.LVL515-.Ltext0
 12872 01d5 701C0000 		.4byte	.LVL516-.Ltext0
 12873 01d9 0100     		.2byte	0x1
 12874 01db 50       		.byte	0x50
 12875 01dc 701C0000 		.4byte	.LVL516-.Ltext0
 12876 01e0 721C0000 		.4byte	.LFE106-.Ltext0
 12877 01e4 0400     		.2byte	0x4
 12878 01e6 F3       		.byte	0xf3
 12879 01e7 01       		.uleb128 0x1
 12880 01e8 50       		.byte	0x50
 12881 01e9 9F       		.byte	0x9f
 12882 01ea 00000000 		.4byte	0
 12883 01ee 00000000 		.4byte	0
 12884              	.LLST97:
 12885 01f2 5C1C0000 		.4byte	.LVL513-.Ltext0
 12886 01f6 661C0000 		.4byte	.LVL514-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 291


 12887 01fa 0100     		.2byte	0x1
 12888 01fc 50       		.byte	0x50
 12889 01fd 661C0000 		.4byte	.LVL514-.Ltext0
 12890 0201 6C1C0000 		.4byte	.LFE105-.Ltext0
 12891 0205 0400     		.2byte	0x4
 12892 0207 F3       		.byte	0xf3
 12893 0208 01       		.uleb128 0x1
 12894 0209 50       		.byte	0x50
 12895 020a 9F       		.byte	0x9f
 12896 020b 00000000 		.4byte	0
 12897 020f 00000000 		.4byte	0
 12898              	.LLST71:
 12899 0213 78180000 		.4byte	.LVL405-.Ltext0
 12900 0217 94180000 		.4byte	.LVL406-.Ltext0
 12901 021b 0100     		.2byte	0x1
 12902 021d 50       		.byte	0x50
 12903 021e 94180000 		.4byte	.LVL406-.Ltext0
 12904 0222 CE180000 		.4byte	.LVL413-.Ltext0
 12905 0226 0400     		.2byte	0x4
 12906 0228 F3       		.byte	0xf3
 12907 0229 01       		.uleb128 0x1
 12908 022a 50       		.byte	0x50
 12909 022b 9F       		.byte	0x9f
 12910 022c CE180000 		.4byte	.LVL413-.Ltext0
 12911 0230 D0180000 		.4byte	.LVL414-.Ltext0
 12912 0234 0100     		.2byte	0x1
 12913 0236 50       		.byte	0x50
 12914 0237 D0180000 		.4byte	.LVL414-.Ltext0
 12915 023b F8180000 		.4byte	.LVL418-.Ltext0
 12916 023f 0400     		.2byte	0x4
 12917 0241 F3       		.byte	0xf3
 12918 0242 01       		.uleb128 0x1
 12919 0243 50       		.byte	0x50
 12920 0244 9F       		.byte	0x9f
 12921 0245 F8180000 		.4byte	.LVL418-.Ltext0
 12922 0249 FA180000 		.4byte	.LVL419-.Ltext0
 12923 024d 0100     		.2byte	0x1
 12924 024f 50       		.byte	0x50
 12925 0250 FA180000 		.4byte	.LVL419-.Ltext0
 12926 0254 FC180000 		.4byte	.LVL420-.Ltext0
 12927 0258 0400     		.2byte	0x4
 12928 025a F3       		.byte	0xf3
 12929 025b 01       		.uleb128 0x1
 12930 025c 50       		.byte	0x50
 12931 025d 9F       		.byte	0x9f
 12932 025e FC180000 		.4byte	.LVL420-.Ltext0
 12933 0262 00190000 		.4byte	.LVL421-.Ltext0
 12934 0266 0100     		.2byte	0x1
 12935 0268 50       		.byte	0x50
 12936 0269 00190000 		.4byte	.LVL421-.Ltext0
 12937 026d 08190000 		.4byte	.LFE104-.Ltext0
 12938 0271 0400     		.2byte	0x4
 12939 0273 F3       		.byte	0xf3
 12940 0274 01       		.uleb128 0x1
 12941 0275 50       		.byte	0x50
 12942 0276 9F       		.byte	0x9f
 12943 0277 00000000 		.4byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 292


 12944 027b 00000000 		.4byte	0
 12945              	.LLST65:
 12946 027f C0170000 		.4byte	.LVL386-.Ltext0
 12947 0283 DE170000 		.4byte	.LVL388-.Ltext0
 12948 0287 0100     		.2byte	0x1
 12949 0289 50       		.byte	0x50
 12950 028a DE170000 		.4byte	.LVL388-.Ltext0
 12951 028e 48180000 		.4byte	.LVL397-.Ltext0
 12952 0292 0400     		.2byte	0x4
 12953 0294 F3       		.byte	0xf3
 12954 0295 01       		.uleb128 0x1
 12955 0296 50       		.byte	0x50
 12956 0297 9F       		.byte	0x9f
 12957 0298 48180000 		.4byte	.LVL397-.Ltext0
 12958 029c 54180000 		.4byte	.LVL401-.Ltext0
 12959 02a0 0100     		.2byte	0x1
 12960 02a2 50       		.byte	0x50
 12961 02a3 54180000 		.4byte	.LVL401-.Ltext0
 12962 02a7 78180000 		.4byte	.LFE103-.Ltext0
 12963 02ab 0400     		.2byte	0x4
 12964 02ad F3       		.byte	0xf3
 12965 02ae 01       		.uleb128 0x1
 12966 02af 50       		.byte	0x50
 12967 02b0 9F       		.byte	0x9f
 12968 02b1 00000000 		.4byte	0
 12969 02b5 00000000 		.4byte	0
 12970              	.LLST66:
 12971 02b9 C0170000 		.4byte	.LVL386-.Ltext0
 12972 02bd DE170000 		.4byte	.LVL388-.Ltext0
 12973 02c1 0100     		.2byte	0x1
 12974 02c3 51       		.byte	0x51
 12975 02c4 DE170000 		.4byte	.LVL388-.Ltext0
 12976 02c8 48180000 		.4byte	.LVL397-.Ltext0
 12977 02cc 0100     		.2byte	0x1
 12978 02ce 58       		.byte	0x58
 12979 02cf 48180000 		.4byte	.LVL397-.Ltext0
 12980 02d3 54180000 		.4byte	.LVL401-.Ltext0
 12981 02d7 0100     		.2byte	0x1
 12982 02d9 51       		.byte	0x51
 12983 02da 54180000 		.4byte	.LVL401-.Ltext0
 12984 02de 58180000 		.4byte	.LVL402-.Ltext0
 12985 02e2 0100     		.2byte	0x1
 12986 02e4 58       		.byte	0x58
 12987 02e5 58180000 		.4byte	.LVL402-.Ltext0
 12988 02e9 60180000 		.4byte	.LVL403-.Ltext0
 12989 02ed 0400     		.2byte	0x4
 12990 02ef F3       		.byte	0xf3
 12991 02f0 01       		.uleb128 0x1
 12992 02f1 51       		.byte	0x51
 12993 02f2 9F       		.byte	0x9f
 12994 02f3 60180000 		.4byte	.LVL403-.Ltext0
 12995 02f7 78180000 		.4byte	.LFE103-.Ltext0
 12996 02fb 0100     		.2byte	0x1
 12997 02fd 58       		.byte	0x58
 12998 02fe 00000000 		.4byte	0
 12999 0302 00000000 		.4byte	0
 13000              	.LLST67:
ARM GAS  /tmp/cci8Vpl3.s 			page 293


 13001 0306 C0170000 		.4byte	.LVL386-.Ltext0
 13002 030a DE170000 		.4byte	.LVL388-.Ltext0
 13003 030e 0100     		.2byte	0x1
 13004 0310 52       		.byte	0x52
 13005 0311 DE170000 		.4byte	.LVL388-.Ltext0
 13006 0315 48180000 		.4byte	.LVL397-.Ltext0
 13007 0319 0400     		.2byte	0x4
 13008 031b F3       		.byte	0xf3
 13009 031c 01       		.uleb128 0x1
 13010 031d 52       		.byte	0x52
 13011 031e 9F       		.byte	0x9f
 13012 031f 48180000 		.4byte	.LVL397-.Ltext0
 13013 0323 54180000 		.4byte	.LVL401-.Ltext0
 13014 0327 0100     		.2byte	0x1
 13015 0329 52       		.byte	0x52
 13016 032a 54180000 		.4byte	.LVL401-.Ltext0
 13017 032e 78180000 		.4byte	.LFE103-.Ltext0
 13018 0332 0400     		.2byte	0x4
 13019 0334 F3       		.byte	0xf3
 13020 0335 01       		.uleb128 0x1
 13021 0336 52       		.byte	0x52
 13022 0337 9F       		.byte	0x9f
 13023 0338 00000000 		.4byte	0
 13024 033c 00000000 		.4byte	0
 13025              	.LLST68:
 13026 0340 C0170000 		.4byte	.LVL386-.Ltext0
 13027 0344 DE170000 		.4byte	.LVL388-.Ltext0
 13028 0348 0100     		.2byte	0x1
 13029 034a 53       		.byte	0x53
 13030 034b DE170000 		.4byte	.LVL388-.Ltext0
 13031 034f 48180000 		.4byte	.LVL397-.Ltext0
 13032 0353 0400     		.2byte	0x4
 13033 0355 F3       		.byte	0xf3
 13034 0356 01       		.uleb128 0x1
 13035 0357 53       		.byte	0x53
 13036 0358 9F       		.byte	0x9f
 13037 0359 48180000 		.4byte	.LVL397-.Ltext0
 13038 035d 4C180000 		.4byte	.LVL398-.Ltext0
 13039 0361 0100     		.2byte	0x1
 13040 0363 53       		.byte	0x53
 13041 0364 4C180000 		.4byte	.LVL398-.Ltext0
 13042 0368 4E180000 		.4byte	.LVL399-.Ltext0
 13043 036c 0400     		.2byte	0x4
 13044 036e F3       		.byte	0xf3
 13045 036f 01       		.uleb128 0x1
 13046 0370 53       		.byte	0x53
 13047 0371 9F       		.byte	0x9f
 13048 0372 4E180000 		.4byte	.LVL399-.Ltext0
 13049 0376 52180000 		.4byte	.LVL400-.Ltext0
 13050 037a 0100     		.2byte	0x1
 13051 037c 53       		.byte	0x53
 13052 037d 52180000 		.4byte	.LVL400-.Ltext0
 13053 0381 78180000 		.4byte	.LFE103-.Ltext0
 13054 0385 0400     		.2byte	0x4
 13055 0387 F3       		.byte	0xf3
 13056 0388 01       		.uleb128 0x1
 13057 0389 53       		.byte	0x53
ARM GAS  /tmp/cci8Vpl3.s 			page 294


 13058 038a 9F       		.byte	0x9f
 13059 038b 00000000 		.4byte	0
 13060 038f 00000000 		.4byte	0
 13061              	.LLST69:
 13062 0393 DC170000 		.4byte	.LVL387-.Ltext0
 13063 0397 DE170000 		.4byte	.LVL388-.Ltext0
 13064 039b 0200     		.2byte	0x2
 13065 039d 30       		.byte	0x30
 13066 039e 9F       		.byte	0x9f
 13067 039f DE170000 		.4byte	.LVL388-.Ltext0
 13068 03a3 12180000 		.4byte	.LVL393-.Ltext0
 13069 03a7 0100     		.2byte	0x1
 13070 03a9 54       		.byte	0x54
 13071 03aa 14180000 		.4byte	.LVL394-.Ltext0
 13072 03ae 18180000 		.4byte	.LVL395-.Ltext0
 13073 03b2 0100     		.2byte	0x1
 13074 03b4 54       		.byte	0x54
 13075 03b5 54180000 		.4byte	.LVL401-.Ltext0
 13076 03b9 58180000 		.4byte	.LVL402-.Ltext0
 13077 03bd 0100     		.2byte	0x1
 13078 03bf 54       		.byte	0x54
 13079 03c0 60180000 		.4byte	.LVL403-.Ltext0
 13080 03c4 6C180000 		.4byte	.LVL404-.Ltext0
 13081 03c8 0100     		.2byte	0x1
 13082 03ca 54       		.byte	0x54
 13083 03cb 00000000 		.4byte	0
 13084 03cf 00000000 		.4byte	0
 13085              	.LLST70:
 13086 03d3 E8170000 		.4byte	.LVL389-.Ltext0
 13087 03d7 18180000 		.4byte	.LVL395-.Ltext0
 13088 03db 0100     		.2byte	0x1
 13089 03dd 56       		.byte	0x56
 13090 03de 54180000 		.4byte	.LVL401-.Ltext0
 13091 03e2 58180000 		.4byte	.LVL402-.Ltext0
 13092 03e6 0100     		.2byte	0x1
 13093 03e8 56       		.byte	0x56
 13094 03e9 60180000 		.4byte	.LVL403-.Ltext0
 13095 03ed 6C180000 		.4byte	.LVL404-.Ltext0
 13096 03f1 0100     		.2byte	0x1
 13097 03f3 56       		.byte	0x56
 13098 03f4 00000000 		.4byte	0
 13099 03f8 00000000 		.4byte	0
 13100              	.LLST62:
 13101 03fc 48170000 		.4byte	.LVL375-.Ltext0
 13102 0400 60170000 		.4byte	.LVL377-.Ltext0
 13103 0404 0100     		.2byte	0x1
 13104 0406 50       		.byte	0x50
 13105 0407 60170000 		.4byte	.LVL377-.Ltext0
 13106 040b A2170000 		.4byte	.LVL381-.Ltext0
 13107 040f 0400     		.2byte	0x4
 13108 0411 F3       		.byte	0xf3
 13109 0412 01       		.uleb128 0x1
 13110 0413 50       		.byte	0x50
 13111 0414 9F       		.byte	0x9f
 13112 0415 A2170000 		.4byte	.LVL381-.Ltext0
 13113 0419 A6170000 		.4byte	.LVL382-.Ltext0
 13114 041d 0100     		.2byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 295


 13115 041f 50       		.byte	0x50
 13116 0420 A6170000 		.4byte	.LVL382-.Ltext0
 13117 0424 A8170000 		.4byte	.LVL383-.Ltext0
 13118 0428 0400     		.2byte	0x4
 13119 042a F3       		.byte	0xf3
 13120 042b 01       		.uleb128 0x1
 13121 042c 50       		.byte	0x50
 13122 042d 9F       		.byte	0x9f
 13123 042e A8170000 		.4byte	.LVL383-.Ltext0
 13124 0432 AC170000 		.4byte	.LVL384-.Ltext0
 13125 0436 0100     		.2byte	0x1
 13126 0438 50       		.byte	0x50
 13127 0439 AC170000 		.4byte	.LVL384-.Ltext0
 13128 043d C0170000 		.4byte	.LFE102-.Ltext0
 13129 0441 0400     		.2byte	0x4
 13130 0443 F3       		.byte	0xf3
 13131 0444 01       		.uleb128 0x1
 13132 0445 50       		.byte	0x50
 13133 0446 9F       		.byte	0x9f
 13134 0447 00000000 		.4byte	0
 13135 044b 00000000 		.4byte	0
 13136              	.LLST63:
 13137 044f 48170000 		.4byte	.LVL375-.Ltext0
 13138 0453 76170000 		.4byte	.LVL378-.Ltext0
 13139 0457 0100     		.2byte	0x1
 13140 0459 51       		.byte	0x51
 13141 045a 76170000 		.4byte	.LVL378-.Ltext0
 13142 045e A2170000 		.4byte	.LVL381-.Ltext0
 13143 0462 0400     		.2byte	0x4
 13144 0464 F3       		.byte	0xf3
 13145 0465 01       		.uleb128 0x1
 13146 0466 51       		.byte	0x51
 13147 0467 9F       		.byte	0x9f
 13148 0468 A2170000 		.4byte	.LVL381-.Ltext0
 13149 046c B4170000 		.4byte	.LVL385-.Ltext0
 13150 0470 0100     		.2byte	0x1
 13151 0472 51       		.byte	0x51
 13152 0473 B4170000 		.4byte	.LVL385-.Ltext0
 13153 0477 C0170000 		.4byte	.LFE102-.Ltext0
 13154 047b 0400     		.2byte	0x4
 13155 047d F3       		.byte	0xf3
 13156 047e 01       		.uleb128 0x1
 13157 047f 51       		.byte	0x51
 13158 0480 9F       		.byte	0x9f
 13159 0481 00000000 		.4byte	0
 13160 0485 00000000 		.4byte	0
 13161              	.LLST64:
 13162 0489 48170000 		.4byte	.LVL375-.Ltext0
 13163 048d 54170000 		.4byte	.LVL376-.Ltext0
 13164 0491 0100     		.2byte	0x1
 13165 0493 52       		.byte	0x52
 13166 0494 54170000 		.4byte	.LVL376-.Ltext0
 13167 0498 A2170000 		.4byte	.LVL381-.Ltext0
 13168 049c 0100     		.2byte	0x1
 13169 049e 56       		.byte	0x56
 13170 049f A2170000 		.4byte	.LVL381-.Ltext0
 13171 04a3 A8170000 		.4byte	.LVL383-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 296


 13172 04a7 0100     		.2byte	0x1
 13173 04a9 52       		.byte	0x52
 13174 04aa A8170000 		.4byte	.LVL383-.Ltext0
 13175 04ae C0170000 		.4byte	.LFE102-.Ltext0
 13176 04b2 0100     		.2byte	0x1
 13177 04b4 56       		.byte	0x56
 13178 04b5 00000000 		.4byte	0
 13179 04b9 00000000 		.4byte	0
 13180              	.LLST59:
 13181 04bd D0160000 		.4byte	.LVL364-.Ltext0
 13182 04c1 E8160000 		.4byte	.LVL366-.Ltext0
 13183 04c5 0100     		.2byte	0x1
 13184 04c7 50       		.byte	0x50
 13185 04c8 E8160000 		.4byte	.LVL366-.Ltext0
 13186 04cc 2A170000 		.4byte	.LVL370-.Ltext0
 13187 04d0 0400     		.2byte	0x4
 13188 04d2 F3       		.byte	0xf3
 13189 04d3 01       		.uleb128 0x1
 13190 04d4 50       		.byte	0x50
 13191 04d5 9F       		.byte	0x9f
 13192 04d6 2A170000 		.4byte	.LVL370-.Ltext0
 13193 04da 2E170000 		.4byte	.LVL371-.Ltext0
 13194 04de 0100     		.2byte	0x1
 13195 04e0 50       		.byte	0x50
 13196 04e1 2E170000 		.4byte	.LVL371-.Ltext0
 13197 04e5 30170000 		.4byte	.LVL372-.Ltext0
 13198 04e9 0400     		.2byte	0x4
 13199 04eb F3       		.byte	0xf3
 13200 04ec 01       		.uleb128 0x1
 13201 04ed 50       		.byte	0x50
 13202 04ee 9F       		.byte	0x9f
 13203 04ef 30170000 		.4byte	.LVL372-.Ltext0
 13204 04f3 34170000 		.4byte	.LVL373-.Ltext0
 13205 04f7 0100     		.2byte	0x1
 13206 04f9 50       		.byte	0x50
 13207 04fa 34170000 		.4byte	.LVL373-.Ltext0
 13208 04fe 48170000 		.4byte	.LFE101-.Ltext0
 13209 0502 0400     		.2byte	0x4
 13210 0504 F3       		.byte	0xf3
 13211 0505 01       		.uleb128 0x1
 13212 0506 50       		.byte	0x50
 13213 0507 9F       		.byte	0x9f
 13214 0508 00000000 		.4byte	0
 13215 050c 00000000 		.4byte	0
 13216              	.LLST60:
 13217 0510 D0160000 		.4byte	.LVL364-.Ltext0
 13218 0514 FE160000 		.4byte	.LVL367-.Ltext0
 13219 0518 0100     		.2byte	0x1
 13220 051a 51       		.byte	0x51
 13221 051b FE160000 		.4byte	.LVL367-.Ltext0
 13222 051f 2A170000 		.4byte	.LVL370-.Ltext0
 13223 0523 0400     		.2byte	0x4
 13224 0525 F3       		.byte	0xf3
 13225 0526 01       		.uleb128 0x1
 13226 0527 51       		.byte	0x51
 13227 0528 9F       		.byte	0x9f
 13228 0529 2A170000 		.4byte	.LVL370-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 297


 13229 052d 3C170000 		.4byte	.LVL374-.Ltext0
 13230 0531 0100     		.2byte	0x1
 13231 0533 51       		.byte	0x51
 13232 0534 3C170000 		.4byte	.LVL374-.Ltext0
 13233 0538 48170000 		.4byte	.LFE101-.Ltext0
 13234 053c 0400     		.2byte	0x4
 13235 053e F3       		.byte	0xf3
 13236 053f 01       		.uleb128 0x1
 13237 0540 51       		.byte	0x51
 13238 0541 9F       		.byte	0x9f
 13239 0542 00000000 		.4byte	0
 13240 0546 00000000 		.4byte	0
 13241              	.LLST61:
 13242 054a D0160000 		.4byte	.LVL364-.Ltext0
 13243 054e DC160000 		.4byte	.LVL365-.Ltext0
 13244 0552 0100     		.2byte	0x1
 13245 0554 52       		.byte	0x52
 13246 0555 DC160000 		.4byte	.LVL365-.Ltext0
 13247 0559 2A170000 		.4byte	.LVL370-.Ltext0
 13248 055d 0100     		.2byte	0x1
 13249 055f 56       		.byte	0x56
 13250 0560 2A170000 		.4byte	.LVL370-.Ltext0
 13251 0564 30170000 		.4byte	.LVL372-.Ltext0
 13252 0568 0100     		.2byte	0x1
 13253 056a 52       		.byte	0x52
 13254 056b 30170000 		.4byte	.LVL372-.Ltext0
 13255 056f 48170000 		.4byte	.LFE101-.Ltext0
 13256 0573 0100     		.2byte	0x1
 13257 0575 56       		.byte	0x56
 13258 0576 00000000 		.4byte	0
 13259 057a 00000000 		.4byte	0
 13260              	.LLST72:
 13261 057e 08190000 		.4byte	.LVL422-.Ltext0
 13262 0582 1C190000 		.4byte	.LVL424-.Ltext0
 13263 0586 0100     		.2byte	0x1
 13264 0588 50       		.byte	0x50
 13265 0589 1C190000 		.4byte	.LVL424-.Ltext0
 13266 058d 66190000 		.4byte	.LVL434-.Ltext0
 13267 0591 0300     		.2byte	0x3
 13268 0593 91       		.byte	0x91
 13269 0594 907F     		.sleb128 -112
 13270 0596 66190000 		.4byte	.LVL434-.Ltext0
 13271 059a B8190000 		.4byte	.LVL442-.Ltext0
 13272 059e 0400     		.2byte	0x4
 13273 05a0 F3       		.byte	0xf3
 13274 05a1 01       		.uleb128 0x1
 13275 05a2 50       		.byte	0x50
 13276 05a3 9F       		.byte	0x9f
 13277 05a4 B8190000 		.4byte	.LVL442-.Ltext0
 13278 05a8 BA190000 		.4byte	.LVL443-.Ltext0
 13279 05ac 0100     		.2byte	0x1
 13280 05ae 50       		.byte	0x50
 13281 05af BA190000 		.4byte	.LVL443-.Ltext0
 13282 05b3 F61A0000 		.4byte	.LVL473-.Ltext0
 13283 05b7 0300     		.2byte	0x3
 13284 05b9 91       		.byte	0x91
 13285 05ba 907F     		.sleb128 -112
ARM GAS  /tmp/cci8Vpl3.s 			page 298


 13286 05bc F61A0000 		.4byte	.LVL473-.Ltext0
 13287 05c0 0E1B0000 		.4byte	.LVL476-.Ltext0
 13288 05c4 0400     		.2byte	0x4
 13289 05c6 F3       		.byte	0xf3
 13290 05c7 01       		.uleb128 0x1
 13291 05c8 50       		.byte	0x50
 13292 05c9 9F       		.byte	0x9f
 13293 05ca 0E1B0000 		.4byte	.LVL476-.Ltext0
 13294 05ce 421B0000 		.4byte	.LVL480-.Ltext0
 13295 05d2 0300     		.2byte	0x3
 13296 05d4 91       		.byte	0x91
 13297 05d5 907F     		.sleb128 -112
 13298 05d7 421B0000 		.4byte	.LVL480-.Ltext0
 13299 05db E21B0000 		.4byte	.LVL503-.Ltext0
 13300 05df 0400     		.2byte	0x4
 13301 05e1 F3       		.byte	0xf3
 13302 05e2 01       		.uleb128 0x1
 13303 05e3 50       		.byte	0x50
 13304 05e4 9F       		.byte	0x9f
 13305 05e5 E21B0000 		.4byte	.LVL503-.Ltext0
 13306 05e9 5C1C0000 		.4byte	.LFE100-.Ltext0
 13307 05ed 0300     		.2byte	0x3
 13308 05ef 91       		.byte	0x91
 13309 05f0 907F     		.sleb128 -112
 13310 05f2 00000000 		.4byte	0
 13311 05f6 00000000 		.4byte	0
 13312              	.LLST73:
 13313 05fa 08190000 		.4byte	.LVL422-.Ltext0
 13314 05fe 1C190000 		.4byte	.LVL424-.Ltext0
 13315 0602 0100     		.2byte	0x1
 13316 0604 51       		.byte	0x51
 13317 0605 1C190000 		.4byte	.LVL424-.Ltext0
 13318 0609 66190000 		.4byte	.LVL434-.Ltext0
 13319 060d 0100     		.2byte	0x1
 13320 060f 55       		.byte	0x55
 13321 0610 66190000 		.4byte	.LVL434-.Ltext0
 13322 0614 B8190000 		.4byte	.LVL442-.Ltext0
 13323 0618 0400     		.2byte	0x4
 13324 061a F3       		.byte	0xf3
 13325 061b 01       		.uleb128 0x1
 13326 061c 51       		.byte	0x51
 13327 061d 9F       		.byte	0x9f
 13328 061e B8190000 		.4byte	.LVL442-.Ltext0
 13329 0622 BD190000 		.4byte	.LVL444-1-.Ltext0
 13330 0626 0100     		.2byte	0x1
 13331 0628 51       		.byte	0x51
 13332 0629 BD190000 		.4byte	.LVL444-1-.Ltext0
 13333 062d 5E1A0000 		.4byte	.LVL453-.Ltext0
 13334 0631 0100     		.2byte	0x1
 13335 0633 55       		.byte	0x55
 13336 0634 5E1A0000 		.4byte	.LVL453-.Ltext0
 13337 0638 E21B0000 		.4byte	.LVL503-.Ltext0
 13338 063c 0400     		.2byte	0x4
 13339 063e F3       		.byte	0xf3
 13340 063f 01       		.uleb128 0x1
 13341 0640 51       		.byte	0x51
 13342 0641 9F       		.byte	0x9f
ARM GAS  /tmp/cci8Vpl3.s 			page 299


 13343 0642 E21B0000 		.4byte	.LVL503-.Ltext0
 13344 0646 401C0000 		.4byte	.LVL510-.Ltext0
 13345 064a 0100     		.2byte	0x1
 13346 064c 55       		.byte	0x55
 13347 064d 401C0000 		.4byte	.LVL510-.Ltext0
 13348 0651 5C1C0000 		.4byte	.LFE100-.Ltext0
 13349 0655 0300     		.2byte	0x3
 13350 0657 75       		.byte	0x75
 13351 0658 04       		.sleb128 4
 13352 0659 9F       		.byte	0x9f
 13353 065a 00000000 		.4byte	0
 13354 065e 00000000 		.4byte	0
 13355              	.LLST74:
 13356 0662 DE1A0000 		.4byte	.LVL471-.Ltext0
 13357 0666 DA1B0000 		.4byte	.LVL501-.Ltext0
 13358 066a 0100     		.2byte	0x1
 13359 066c 59       		.byte	0x59
 13360 066d 00000000 		.4byte	0
 13361 0671 00000000 		.4byte	0
 13362              	.LLST75:
 13363 0675 F61A0000 		.4byte	.LVL473-.Ltext0
 13364 0679 0E1B0000 		.4byte	.LVL476-.Ltext0
 13365 067d 0100     		.2byte	0x1
 13366 067f 58       		.byte	0x58
 13367 0680 00000000 		.4byte	0
 13368 0684 00000000 		.4byte	0
 13369              	.LLST76:
 13370 0688 42190000 		.4byte	.LVL430-.Ltext0
 13371 068c 54190000 		.4byte	.LVL432-.Ltext0
 13372 0690 0200     		.2byte	0x2
 13373 0692 30       		.byte	0x30
 13374 0693 9F       		.byte	0x9f
 13375 0694 54190000 		.4byte	.LVL432-.Ltext0
 13376 0698 66190000 		.4byte	.LVL434-.Ltext0
 13377 069c 0200     		.2byte	0x2
 13378 069e 31       		.byte	0x31
 13379 069f 9F       		.byte	0x9f
 13380 06a0 E21B0000 		.4byte	.LVL503-.Ltext0
 13381 06a4 EE1B0000 		.4byte	.LVL505-.Ltext0
 13382 06a8 0200     		.2byte	0x2
 13383 06aa 30       		.byte	0x30
 13384 06ab 9F       		.byte	0x9f
 13385 06ac EE1B0000 		.4byte	.LVL505-.Ltext0
 13386 06b0 281C0000 		.4byte	.LVL507-.Ltext0
 13387 06b4 0200     		.2byte	0x2
 13388 06b6 31       		.byte	0x31
 13389 06b7 9F       		.byte	0x9f
 13390 06b8 00000000 		.4byte	0
 13391 06bc 00000000 		.4byte	0
 13392              	.LLST77:
 13393 06c0 66190000 		.4byte	.LVL434-.Ltext0
 13394 06c4 B8190000 		.4byte	.LVL442-.Ltext0
 13395 06c8 0100     		.2byte	0x1
 13396 06ca 54       		.byte	0x54
 13397 06cb F61A0000 		.4byte	.LVL473-.Ltext0
 13398 06cf 001B0000 		.4byte	.LVL474-.Ltext0
 13399 06d3 0200     		.2byte	0x2
ARM GAS  /tmp/cci8Vpl3.s 			page 300


 13400 06d5 30       		.byte	0x30
 13401 06d6 9F       		.byte	0x9f
 13402 06d7 001B0000 		.4byte	.LVL474-.Ltext0
 13403 06db 0E1B0000 		.4byte	.LVL476-.Ltext0
 13404 06df 0100     		.2byte	0x1
 13405 06e1 54       		.byte	0x54
 13406 06e2 DA1B0000 		.4byte	.LVL501-.Ltext0
 13407 06e6 E21B0000 		.4byte	.LVL503-.Ltext0
 13408 06ea 0100     		.2byte	0x1
 13409 06ec 54       		.byte	0x54
 13410 06ed 00000000 		.4byte	0
 13411 06f1 00000000 		.4byte	0
 13412              	.LLST78:
 13413 06f5 42190000 		.4byte	.LVL430-.Ltext0
 13414 06f9 B0190000 		.4byte	.LVL441-.Ltext0
 13415 06fd 0300     		.2byte	0x3
 13416 06ff 91       		.byte	0x91
 13417 0700 987F     		.sleb128 -104
 13418 0702 C2190000 		.4byte	.LVL445-.Ltext0
 13419 0706 E01B0000 		.4byte	.LVL502-.Ltext0
 13420 070a 0300     		.2byte	0x3
 13421 070c 91       		.byte	0x91
 13422 070d 987F     		.sleb128 -104
 13423 070f E21B0000 		.4byte	.LVL503-.Ltext0
 13424 0713 5C1C0000 		.4byte	.LFE100-.Ltext0
 13425 0717 0300     		.2byte	0x3
 13426 0719 91       		.byte	0x91
 13427 071a 987F     		.sleb128 -104
 13428 071c 00000000 		.4byte	0
 13429 0720 00000000 		.4byte	0
 13430              	.LLST79:
 13431 0724 3E190000 		.4byte	.LVL429-.Ltext0
 13432 0728 B8190000 		.4byte	.LVL442-.Ltext0
 13433 072c 0300     		.2byte	0x3
 13434 072e 91       		.byte	0x91
 13435 072f 947F     		.sleb128 -108
 13436 0731 C2190000 		.4byte	.LVL445-.Ltext0
 13437 0735 5C1C0000 		.4byte	.LFE100-.Ltext0
 13438 0739 0300     		.2byte	0x3
 13439 073b 91       		.byte	0x91
 13440 073c 947F     		.sleb128 -108
 13441 073e 00000000 		.4byte	0
 13442 0742 00000000 		.4byte	0
 13443              	.LLST80:
 13444 0746 1C190000 		.4byte	.LVL424-.Ltext0
 13445 074a 66190000 		.4byte	.LVL434-.Ltext0
 13446 074e 0100     		.2byte	0x1
 13447 0750 56       		.byte	0x56
 13448 0751 BE190000 		.4byte	.LVL444-.Ltext0
 13449 0755 C2190000 		.4byte	.LVL445-.Ltext0
 13450 0759 0200     		.2byte	0x2
 13451 075b 31       		.byte	0x31
 13452 075c 9F       		.byte	0x9f
 13453 075d C2190000 		.4byte	.LVL445-.Ltext0
 13454 0761 5E1A0000 		.4byte	.LVL453-.Ltext0
 13455 0765 0100     		.2byte	0x1
 13456 0767 56       		.byte	0x56
ARM GAS  /tmp/cci8Vpl3.s 			page 301


 13457 0768 E21B0000 		.4byte	.LVL503-.Ltext0
 13458 076c 5C1C0000 		.4byte	.LFE100-.Ltext0
 13459 0770 0100     		.2byte	0x1
 13460 0772 56       		.byte	0x56
 13461 0773 00000000 		.4byte	0
 13462 0777 00000000 		.4byte	0
 13463              	.LLST81:
 13464 077b 3E190000 		.4byte	.LVL429-.Ltext0
 13465 077f B8190000 		.4byte	.LVL442-.Ltext0
 13466 0783 0600     		.2byte	0x6
 13467 0785 F2       		.byte	0xf2
 13468 0786 F8150000 		.4byte	.Ldebug_info0+5624
 13469 078a 00       		.sleb128 0
 13470 078b C2190000 		.4byte	.LVL445-.Ltext0
 13471 078f 5C1C0000 		.4byte	.LFE100-.Ltext0
 13472 0793 0600     		.2byte	0x6
 13473 0795 F2       		.byte	0xf2
 13474 0796 F8150000 		.4byte	.Ldebug_info0+5624
 13475 079a 00       		.sleb128 0
 13476 079b 00000000 		.4byte	0
 13477 079f 00000000 		.4byte	0
 13478              	.LLST82:
 13479 07a3 C2190000 		.4byte	.LVL445-.Ltext0
 13480 07a7 5E1A0000 		.4byte	.LVL453-.Ltext0
 13481 07ab 0300     		.2byte	0x3
 13482 07ad 91       		.byte	0x91
 13483 07ae 40       		.sleb128 -64
 13484 07af 9F       		.byte	0x9f
 13485 07b0 5E1A0000 		.4byte	.LVL453-.Ltext0
 13486 07b4 DA1A0000 		.4byte	.LVL470-.Ltext0
 13487 07b8 0100     		.2byte	0x1
 13488 07ba 5B       		.byte	0x5b
 13489 07bb 281C0000 		.4byte	.LVL507-.Ltext0
 13490 07bf 4A1C0000 		.4byte	.LVL511-.Ltext0
 13491 07c3 0300     		.2byte	0x3
 13492 07c5 91       		.byte	0x91
 13493 07c6 40       		.sleb128 -64
 13494 07c7 9F       		.byte	0x9f
 13495 07c8 4A1C0000 		.4byte	.LVL511-.Ltext0
 13496 07cc 5C1C0000 		.4byte	.LFE100-.Ltext0
 13497 07d0 0100     		.2byte	0x1
 13498 07d2 5B       		.byte	0x5b
 13499 07d3 00000000 		.4byte	0
 13500 07d7 00000000 		.4byte	0
 13501              	.LLST83:
 13502 07db C2190000 		.4byte	.LVL445-.Ltext0
 13503 07df 5E1A0000 		.4byte	.LVL453-.Ltext0
 13504 07e3 0100     		.2byte	0x1
 13505 07e5 55       		.byte	0x55
 13506 07e6 5E1A0000 		.4byte	.LVL453-.Ltext0
 13507 07ea DA1A0000 		.4byte	.LVL470-.Ltext0
 13508 07ee 0400     		.2byte	0x4
 13509 07f0 F3       		.byte	0xf3
 13510 07f1 01       		.uleb128 0x1
 13511 07f2 51       		.byte	0x51
 13512 07f3 9F       		.byte	0x9f
 13513 07f4 281C0000 		.4byte	.LVL507-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 302


 13514 07f8 401C0000 		.4byte	.LVL510-.Ltext0
 13515 07fc 0100     		.2byte	0x1
 13516 07fe 55       		.byte	0x55
 13517 07ff 401C0000 		.4byte	.LVL510-.Ltext0
 13518 0803 5C1C0000 		.4byte	.LFE100-.Ltext0
 13519 0807 0300     		.2byte	0x3
 13520 0809 75       		.byte	0x75
 13521 080a 04       		.sleb128 4
 13522 080b 9F       		.byte	0x9f
 13523 080c 00000000 		.4byte	0
 13524 0810 00000000 		.4byte	0
 13525              	.LLST84:
 13526 0814 5E1A0000 		.4byte	.LVL453-.Ltext0
 13527 0818 DA1A0000 		.4byte	.LVL470-.Ltext0
 13528 081c 0100     		.2byte	0x1
 13529 081e 54       		.byte	0x54
 13530 081f 3E1C0000 		.4byte	.LVL509-.Ltext0
 13531 0823 5C1C0000 		.4byte	.LFE100-.Ltext0
 13532 0827 0200     		.2byte	0x2
 13533 0829 30       		.byte	0x30
 13534 082a 9F       		.byte	0x9f
 13535 082b 00000000 		.4byte	0
 13536 082f 00000000 		.4byte	0
 13537              	.LLST85:
 13538 0833 C2190000 		.4byte	.LVL445-.Ltext0
 13539 0837 5E1A0000 		.4byte	.LVL453-.Ltext0
 13540 083b 0200     		.2byte	0x2
 13541 083d 30       		.byte	0x30
 13542 083e 9F       		.byte	0x9f
 13543 083f 5E1A0000 		.4byte	.LVL453-.Ltext0
 13544 0843 DA1A0000 		.4byte	.LVL470-.Ltext0
 13545 0847 0100     		.2byte	0x1
 13546 0849 59       		.byte	0x59
 13547 084a 281C0000 		.4byte	.LVL507-.Ltext0
 13548 084e 5C1C0000 		.4byte	.LFE100-.Ltext0
 13549 0852 0200     		.2byte	0x2
 13550 0854 30       		.byte	0x30
 13551 0855 9F       		.byte	0x9f
 13552 0856 00000000 		.4byte	0
 13553 085a 00000000 		.4byte	0
 13554              	.LLST86:
 13555 085e 5E1A0000 		.4byte	.LVL453-.Ltext0
 13556 0862 821A0000 		.4byte	.LVL458-.Ltext0
 13557 0866 0300     		.2byte	0x3
 13558 0868 91       		.byte	0x91
 13559 0869 8C7F     		.sleb128 -116
 13560 086b A01A0000 		.4byte	.LVL461-.Ltext0
 13561 086f A81A0000 		.4byte	.LVL462-.Ltext0
 13562 0873 0100     		.2byte	0x1
 13563 0875 50       		.byte	0x50
 13564 0876 A81A0000 		.4byte	.LVL462-.Ltext0
 13565 087a DA1A0000 		.4byte	.LVL470-.Ltext0
 13566 087e 0300     		.2byte	0x3
 13567 0880 91       		.byte	0x91
 13568 0881 8C7F     		.sleb128 -116
 13569 0883 00000000 		.4byte	0
 13570 0887 00000000 		.4byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 303


 13571              	.LLST87:
 13572 088b B01A0000 		.4byte	.LVL464-.Ltext0
 13573 088f D81A0000 		.4byte	.LVL469-.Ltext0
 13574 0893 1300     		.2byte	0x13
 13575 0895 91       		.byte	0x91
 13576 0896 8C7F     		.sleb128 -116
 13577 0898 F6       		.byte	0xf6
 13578 0899 04       		.byte	0x4
 13579 089a 25       		.uleb128 0x25
 13580 089b F5       		.byte	0xf5
 13581 089c 06       		.uleb128 0x6
 13582 089d 25       		.uleb128 0x25
 13583 089e 1B       		.byte	0x1b
 13584 089f F4       		.byte	0xf4
 13585 08a0 25       		.uleb128 0x25
 13586 08a1 04       		.byte	0x4
 13587 08a2 0000803F 		.4byte	0x3f800000
 13588 08a6 1C       		.byte	0x1c
 13589 08a7 9F       		.byte	0x9f
 13590 08a8 00000000 		.4byte	0
 13591 08ac 00000000 		.4byte	0
 13592              	.LLST88:
 13593 08b0 C2190000 		.4byte	.LVL445-.Ltext0
 13594 08b4 081A0000 		.4byte	.LVL447-.Ltext0
 13595 08b8 0400     		.2byte	0x4
 13596 08ba 91       		.byte	0x91
 13597 08bb AC7F     		.sleb128 -84
 13598 08bd 9F       		.byte	0x9f
 13599 08be 081A0000 		.4byte	.LVL447-.Ltext0
 13600 08c2 161A0000 		.4byte	.LVL448-.Ltext0
 13601 08c6 0100     		.2byte	0x1
 13602 08c8 58       		.byte	0x58
 13603 08c9 161A0000 		.4byte	.LVL448-.Ltext0
 13604 08cd 5E1A0000 		.4byte	.LVL453-.Ltext0
 13605 08d1 0400     		.2byte	0x4
 13606 08d3 91       		.byte	0x91
 13607 08d4 AC7F     		.sleb128 -84
 13608 08d6 9F       		.byte	0x9f
 13609 08d7 5E1A0000 		.4byte	.LVL453-.Ltext0
 13610 08db F61A0000 		.4byte	.LVL473-.Ltext0
 13611 08df 0100     		.2byte	0x1
 13612 08e1 5A       		.byte	0x5a
 13613 08e2 F61A0000 		.4byte	.LVL473-.Ltext0
 13614 08e6 0E1B0000 		.4byte	.LVL476-.Ltext0
 13615 08ea 0400     		.2byte	0x4
 13616 08ec 91       		.byte	0x91
 13617 08ed AC7F     		.sleb128 -84
 13618 08ef 9F       		.byte	0x9f
 13619 08f0 0E1B0000 		.4byte	.LVL476-.Ltext0
 13620 08f4 381B0000 		.4byte	.LVL478-.Ltext0
 13621 08f8 0100     		.2byte	0x1
 13622 08fa 5A       		.byte	0x5a
 13623 08fb 381B0000 		.4byte	.LVL478-.Ltext0
 13624 08ff DA1B0000 		.4byte	.LVL501-.Ltext0
 13625 0903 0400     		.2byte	0x4
 13626 0905 91       		.byte	0x91
 13627 0906 AC7F     		.sleb128 -84
ARM GAS  /tmp/cci8Vpl3.s 			page 304


 13628 0908 9F       		.byte	0x9f
 13629 0909 281C0000 		.4byte	.LVL507-.Ltext0
 13630 090d 4E1C0000 		.4byte	.LVL512-.Ltext0
 13631 0911 0400     		.2byte	0x4
 13632 0913 91       		.byte	0x91
 13633 0914 AC7F     		.sleb128 -84
 13634 0916 9F       		.byte	0x9f
 13635 0917 4E1C0000 		.4byte	.LVL512-.Ltext0
 13636 091b 5C1C0000 		.4byte	.LFE100-.Ltext0
 13637 091f 0100     		.2byte	0x1
 13638 0921 5A       		.byte	0x5a
 13639 0922 00000000 		.4byte	0
 13640 0926 00000000 		.4byte	0
 13641              	.LLST89:
 13642 092a 021A0000 		.4byte	.LVL446-.Ltext0
 13643 092e 161A0000 		.4byte	.LVL448-.Ltext0
 13644 0932 0200     		.2byte	0x2
 13645 0934 30       		.byte	0x30
 13646 0935 9F       		.byte	0x9f
 13647 0936 161A0000 		.4byte	.LVL448-.Ltext0
 13648 093a 421A0000 		.4byte	.LVL450-.Ltext0
 13649 093e 0700     		.2byte	0x7
 13650 0940 77       		.byte	0x77
 13651 0941 00       		.sleb128 0
 13652 0942 91       		.byte	0x91
 13653 0943 A47F     		.sleb128 -92
 13654 0945 1C       		.byte	0x1c
 13655 0946 9F       		.byte	0x9f
 13656 0947 421A0000 		.4byte	.LVL450-.Ltext0
 13657 094b 441A0000 		.4byte	.LVL451-.Ltext0
 13658 094f 0900     		.2byte	0x9
 13659 0951 77       		.byte	0x77
 13660 0952 00       		.sleb128 0
 13661 0953 91       		.byte	0x91
 13662 0954 A47F     		.sleb128 -92
 13663 0956 1C       		.byte	0x1c
 13664 0957 23       		.byte	0x23
 13665 0958 01       		.uleb128 0x1
 13666 0959 9F       		.byte	0x9f
 13667 095a 4E1A0000 		.4byte	.LVL452-.Ltext0
 13668 095e 5E1A0000 		.4byte	.LVL453-.Ltext0
 13669 0962 0700     		.2byte	0x7
 13670 0964 77       		.byte	0x77
 13671 0965 00       		.sleb128 0
 13672 0966 91       		.byte	0x91
 13673 0967 A47F     		.sleb128 -92
 13674 0969 1C       		.byte	0x1c
 13675 096a 9F       		.byte	0x9f
 13676 096b 00000000 		.4byte	0
 13677 096f 00000000 		.4byte	0
 13678              	.LLST90:
 13679 0973 DE1A0000 		.4byte	.LVL471-.Ltext0
 13680 0977 F61A0000 		.4byte	.LVL473-.Ltext0
 13681 097b 0300     		.2byte	0x3
 13682 097d 91       		.byte	0x91
 13683 097e 4C       		.sleb128 -52
 13684 097f 9F       		.byte	0x9f
ARM GAS  /tmp/cci8Vpl3.s 			page 305


 13685 0980 0E1B0000 		.4byte	.LVL476-.Ltext0
 13686 0984 401B0000 		.4byte	.LVL479-.Ltext0
 13687 0988 0300     		.2byte	0x3
 13688 098a 91       		.byte	0x91
 13689 098b 4C       		.sleb128 -52
 13690 098c 9F       		.byte	0x9f
 13691 098d 401B0000 		.4byte	.LVL479-.Ltext0
 13692 0991 DA1B0000 		.4byte	.LVL501-.Ltext0
 13693 0995 0100     		.2byte	0x1
 13694 0997 5B       		.byte	0x5b
 13695 0998 00000000 		.4byte	0
 13696 099c 00000000 		.4byte	0
 13697              	.LLST91:
 13698 09a0 DE1A0000 		.4byte	.LVL471-.Ltext0
 13699 09a4 F61A0000 		.4byte	.LVL473-.Ltext0
 13700 09a8 0300     		.2byte	0x3
 13701 09aa 91       		.byte	0x91
 13702 09ab 907F     		.sleb128 -112
 13703 09ad 0E1B0000 		.4byte	.LVL476-.Ltext0
 13704 09b1 421B0000 		.4byte	.LVL480-.Ltext0
 13705 09b5 0300     		.2byte	0x3
 13706 09b7 91       		.byte	0x91
 13707 09b8 907F     		.sleb128 -112
 13708 09ba 00000000 		.4byte	0
 13709 09be 00000000 		.4byte	0
 13710              	.LLST92:
 13711 09c2 321B0000 		.4byte	.LVL477-.Ltext0
 13712 09c6 421B0000 		.4byte	.LVL480-.Ltext0
 13713 09ca 0200     		.2byte	0x2
 13714 09cc 30       		.byte	0x30
 13715 09cd 9F       		.byte	0x9f
 13716 09ce 421B0000 		.4byte	.LVL480-.Ltext0
 13717 09d2 DA1B0000 		.4byte	.LVL501-.Ltext0
 13718 09d6 0100     		.2byte	0x1
 13719 09d8 55       		.byte	0x55
 13720 09d9 00000000 		.4byte	0
 13721 09dd 00000000 		.4byte	0
 13722              	.LLST93:
 13723 09e1 DE1A0000 		.4byte	.LVL471-.Ltext0
 13724 09e5 F61A0000 		.4byte	.LVL473-.Ltext0
 13725 09e9 0200     		.2byte	0x2
 13726 09eb 30       		.byte	0x30
 13727 09ec 9F       		.byte	0x9f
 13728 09ed 0E1B0000 		.4byte	.LVL476-.Ltext0
 13729 09f1 421B0000 		.4byte	.LVL480-.Ltext0
 13730 09f5 0200     		.2byte	0x2
 13731 09f7 30       		.byte	0x30
 13732 09f8 9F       		.byte	0x9f
 13733 09f9 421B0000 		.4byte	.LVL480-.Ltext0
 13734 09fd DA1B0000 		.4byte	.LVL501-.Ltext0
 13735 0a01 0100     		.2byte	0x1
 13736 0a03 58       		.byte	0x58
 13737 0a04 00000000 		.4byte	0
 13738 0a08 00000000 		.4byte	0
 13739              	.LLST94:
 13740 0a0c 421B0000 		.4byte	.LVL480-.Ltext0
 13741 0a10 461B0000 		.4byte	.LVL482-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 306


 13742 0a14 0600     		.2byte	0x6
 13743 0a16 9E       		.byte	0x9e
 13744 0a17 04       		.uleb128 0x4
 13745 0a18 0000C841 		.4byte	0x41c80000
 13746 0a1c 921B0000 		.4byte	.LVL492-.Ltext0
 13747 0a20 9E1B0000 		.4byte	.LVL493-.Ltext0
 13748 0a24 0600     		.2byte	0x6
 13749 0a26 9E       		.byte	0x9e
 13750 0a27 04       		.uleb128 0x4
 13751 0a28 0000C841 		.4byte	0x41c80000
 13752 0a2c 9E1B0000 		.4byte	.LVL493-.Ltext0
 13753 0a30 A31B0000 		.4byte	.LVL494-1-.Ltext0
 13754 0a34 0100     		.2byte	0x1
 13755 0a36 50       		.byte	0x50
 13756 0a37 A41B0000 		.4byte	.LVL494-.Ltext0
 13757 0a3b B21B0000 		.4byte	.LVL495-.Ltext0
 13758 0a3f 0100     		.2byte	0x1
 13759 0a41 50       		.byte	0x50
 13760 0a42 00000000 		.4byte	0
 13761 0a46 00000000 		.4byte	0
 13762              	.LLST95:
 13763 0a4a 421B0000 		.4byte	.LVL480-.Ltext0
 13764 0a4e 441B0000 		.4byte	.LVL481-.Ltext0
 13765 0a52 0100     		.2byte	0x1
 13766 0a54 50       		.byte	0x50
 13767 0a55 441B0000 		.4byte	.LVL481-.Ltext0
 13768 0a59 461B0000 		.4byte	.LVL482-.Ltext0
 13769 0a5d 0300     		.2byte	0x3
 13770 0a5f 91       		.byte	0x91
 13771 0a60 8C7F     		.sleb128 -116
 13772 0a62 461B0000 		.4byte	.LVL482-.Ltext0
 13773 0a66 4C1B0000 		.4byte	.LVL483-.Ltext0
 13774 0a6a 0100     		.2byte	0x1
 13775 0a6c 50       		.byte	0x50
 13776 0a6d 4C1B0000 		.4byte	.LVL483-.Ltext0
 13777 0a71 6C1B0000 		.4byte	.LVL488-.Ltext0
 13778 0a75 0300     		.2byte	0x3
 13779 0a77 91       		.byte	0x91
 13780 0a78 8C7F     		.sleb128 -116
 13781 0a7a 8A1B0000 		.4byte	.LVL491-.Ltext0
 13782 0a7e 9E1B0000 		.4byte	.LVL493-.Ltext0
 13783 0a82 0100     		.2byte	0x1
 13784 0a84 50       		.byte	0x50
 13785 0a85 9E1B0000 		.4byte	.LVL493-.Ltext0
 13786 0a89 DA1B0000 		.4byte	.LVL501-.Ltext0
 13787 0a8d 0300     		.2byte	0x3
 13788 0a8f 91       		.byte	0x91
 13789 0a90 8C7F     		.sleb128 -116
 13790 0a92 00000000 		.4byte	0
 13791 0a96 00000000 		.4byte	0
 13792              	.LLST96:
 13793 0a9a B21B0000 		.4byte	.LVL495-.Ltext0
 13794 0a9e B61B0000 		.4byte	.LVL496-.Ltext0
 13795 0aa2 1300     		.2byte	0x13
 13796 0aa4 91       		.byte	0x91
 13797 0aa5 8C7F     		.sleb128 -116
 13798 0aa7 F6       		.byte	0xf6
ARM GAS  /tmp/cci8Vpl3.s 			page 307


 13799 0aa8 04       		.byte	0x4
 13800 0aa9 25       		.uleb128 0x25
 13801 0aaa F5       		.byte	0xf5
 13802 0aab 00       		.uleb128 0
 13803 0aac 25       		.uleb128 0x25
 13804 0aad 1B       		.byte	0x1b
 13805 0aae F4       		.byte	0xf4
 13806 0aaf 25       		.uleb128 0x25
 13807 0ab0 04       		.byte	0x4
 13808 0ab1 0000803F 		.4byte	0x3f800000
 13809 0ab5 1C       		.byte	0x1c
 13810 0ab6 9F       		.byte	0x9f
 13811 0ab7 B61B0000 		.4byte	.LVL496-.Ltext0
 13812 0abb B91B0000 		.4byte	.LVL497-1-.Ltext0
 13813 0abf 1300     		.2byte	0x13
 13814 0ac1 91       		.byte	0x91
 13815 0ac2 8C7F     		.sleb128 -116
 13816 0ac4 F6       		.byte	0xf6
 13817 0ac5 04       		.byte	0x4
 13818 0ac6 25       		.uleb128 0x25
 13819 0ac7 F5       		.byte	0xf5
 13820 0ac8 01       		.uleb128 0x1
 13821 0ac9 25       		.uleb128 0x25
 13822 0aca 1B       		.byte	0x1b
 13823 0acb F4       		.byte	0xf4
 13824 0acc 25       		.uleb128 0x25
 13825 0acd 04       		.byte	0x4
 13826 0ace 0000803F 		.4byte	0x3f800000
 13827 0ad2 1C       		.byte	0x1c
 13828 0ad3 9F       		.byte	0x9f
 13829 0ad4 00000000 		.4byte	0
 13830 0ad8 00000000 		.4byte	0
 13831              	.LLST1:
 13832 0adc 9C000000 		.4byte	.LVL10-.Ltext0
 13833 0ae0 BA000000 		.4byte	.LVL12-.Ltext0
 13834 0ae4 0100     		.2byte	0x1
 13835 0ae6 50       		.byte	0x50
 13836 0ae7 BA000000 		.4byte	.LVL12-.Ltext0
 13837 0aeb 10050000 		.4byte	.LFE99-.Ltext0
 13838 0aef 0100     		.2byte	0x1
 13839 0af1 55       		.byte	0x55
 13840 0af2 00000000 		.4byte	0
 13841 0af6 00000000 		.4byte	0
 13842              	.LLST2:
 13843 0afa 9C000000 		.4byte	.LVL10-.Ltext0
 13844 0afe B8000000 		.4byte	.LVL11-.Ltext0
 13845 0b02 0100     		.2byte	0x1
 13846 0b04 51       		.byte	0x51
 13847 0b05 B8000000 		.4byte	.LVL11-.Ltext0
 13848 0b09 10050000 		.4byte	.LFE99-.Ltext0
 13849 0b0d 0100     		.2byte	0x1
 13850 0b0f 54       		.byte	0x54
 13851 0b10 00000000 		.4byte	0
 13852 0b14 00000000 		.4byte	0
 13853              	.LLST3:
 13854 0b18 9C000000 		.4byte	.LVL10-.Ltext0
 13855 0b1c BE000000 		.4byte	.LVL13-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 308


 13856 0b20 0100     		.2byte	0x1
 13857 0b22 52       		.byte	0x52
 13858 0b23 BE000000 		.4byte	.LVL13-.Ltext0
 13859 0b27 10050000 		.4byte	.LFE99-.Ltext0
 13860 0b2b 0400     		.2byte	0x4
 13861 0b2d F3       		.byte	0xf3
 13862 0b2e 01       		.uleb128 0x1
 13863 0b2f 52       		.byte	0x52
 13864 0b30 9F       		.byte	0x9f
 13865 0b31 00000000 		.4byte	0
 13866 0b35 00000000 		.4byte	0
 13867              	.LLST4:
 13868 0b39 DA020000 		.4byte	.LVL36-.Ltext0
 13869 0b3d 6E040000 		.4byte	.LVL62-.Ltext0
 13870 0b41 0100     		.2byte	0x1
 13871 0b43 58       		.byte	0x58
 13872 0b44 76040000 		.4byte	.LVL63-.Ltext0
 13873 0b48 9A040000 		.4byte	.LVL64-.Ltext0
 13874 0b4c 0100     		.2byte	0x1
 13875 0b4e 58       		.byte	0x58
 13876 0b4f 00050000 		.4byte	.LVL65-.Ltext0
 13877 0b53 10050000 		.4byte	.LFE99-.Ltext0
 13878 0b57 0100     		.2byte	0x1
 13879 0b59 58       		.byte	0x58
 13880 0b5a 00000000 		.4byte	0
 13881 0b5e 00000000 		.4byte	0
 13882              	.LLST5:
 13883 0b62 E8020000 		.4byte	.LVL37-.Ltext0
 13884 0b66 F6020000 		.4byte	.LVL38-.Ltext0
 13885 0b6a 0200     		.2byte	0x2
 13886 0b6c 30       		.byte	0x30
 13887 0b6d 9F       		.byte	0x9f
 13888 0b6e F6020000 		.4byte	.LVL38-.Ltext0
 13889 0b72 84030000 		.4byte	.LVL50-.Ltext0
 13890 0b76 0100     		.2byte	0x1
 13891 0b78 56       		.byte	0x56
 13892 0b79 84030000 		.4byte	.LVL50-.Ltext0
 13893 0b7d 86030000 		.4byte	.LVL51-.Ltext0
 13894 0b81 0300     		.2byte	0x3
 13895 0b83 76       		.byte	0x76
 13896 0b84 01       		.sleb128 1
 13897 0b85 9F       		.byte	0x9f
 13898 0b86 00050000 		.4byte	.LVL65-.Ltext0
 13899 0b8a 10050000 		.4byte	.LFE99-.Ltext0
 13900 0b8e 0100     		.2byte	0x1
 13901 0b90 56       		.byte	0x56
 13902 0b91 00000000 		.4byte	0
 13903 0b95 00000000 		.4byte	0
 13904              	.LLST6:
 13905 0b99 C4020000 		.4byte	.LVL35-.Ltext0
 13906 0b9d F6020000 		.4byte	.LVL38-.Ltext0
 13907 0ba1 1200     		.2byte	0x12
 13908 0ba3 91       		.byte	0x91
 13909 0ba4 54       		.sleb128 -44
 13910 0ba5 94       		.byte	0x94
 13911 0ba6 01       		.byte	0x1
 13912 0ba7 08       		.byte	0x8
ARM GAS  /tmp/cci8Vpl3.s 			page 309


 13913 0ba8 FF       		.byte	0xff
 13914 0ba9 1A       		.byte	0x1a
 13915 0baa 38       		.byte	0x38
 13916 0bab 24       		.byte	0x24
 13917 0bac 91       		.byte	0x91
 13918 0bad 55       		.sleb128 -43
 13919 0bae 94       		.byte	0x94
 13920 0baf 01       		.byte	0x1
 13921 0bb0 08       		.byte	0x8
 13922 0bb1 FF       		.byte	0xff
 13923 0bb2 1A       		.byte	0x1a
 13924 0bb3 21       		.byte	0x21
 13925 0bb4 9F       		.byte	0x9f
 13926 0bb5 00000000 		.4byte	0
 13927 0bb9 00000000 		.4byte	0
 13928              	.LLST7:
 13929 0bbd 0C030000 		.4byte	.LVL40-.Ltext0
 13930 0bc1 1A030000 		.4byte	.LVL41-.Ltext0
 13931 0bc5 1600     		.2byte	0x16
 13932 0bc7 91       		.byte	0x91
 13933 0bc8 54       		.sleb128 -44
 13934 0bc9 94       		.byte	0x94
 13935 0bca 01       		.byte	0x1
 13936 0bcb 08       		.byte	0x8
 13937 0bcc FF       		.byte	0xff
 13938 0bcd 1A       		.byte	0x1a
 13939 0bce 38       		.byte	0x38
 13940 0bcf 24       		.byte	0x24
 13941 0bd0 91       		.byte	0x91
 13942 0bd1 55       		.sleb128 -43
 13943 0bd2 94       		.byte	0x94
 13944 0bd3 01       		.byte	0x1
 13945 0bd4 08       		.byte	0x8
 13946 0bd5 FF       		.byte	0xff
 13947 0bd6 1A       		.byte	0x1a
 13948 0bd7 21       		.byte	0x21
 13949 0bd8 9F       		.byte	0x9f
 13950 0bd9 93       		.byte	0x93
 13951 0bda 02       		.uleb128 0x2
 13952 0bdb 93       		.byte	0x93
 13953 0bdc 04       		.uleb128 0x4
 13954 0bdd 1A030000 		.4byte	.LVL41-.Ltext0
 13955 0be1 28030000 		.4byte	.LVL42-.Ltext0
 13956 0be5 1900     		.2byte	0x19
 13957 0be7 91       		.byte	0x91
 13958 0be8 54       		.sleb128 -44
 13959 0be9 94       		.byte	0x94
 13960 0bea 01       		.byte	0x1
 13961 0beb 08       		.byte	0x8
 13962 0bec FF       		.byte	0xff
 13963 0bed 1A       		.byte	0x1a
 13964 0bee 38       		.byte	0x38
 13965 0bef 24       		.byte	0x24
 13966 0bf0 91       		.byte	0x91
 13967 0bf1 55       		.sleb128 -43
 13968 0bf2 94       		.byte	0x94
 13969 0bf3 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 310


 13970 0bf4 08       		.byte	0x8
 13971 0bf5 FF       		.byte	0xff
 13972 0bf6 1A       		.byte	0x1a
 13973 0bf7 21       		.byte	0x21
 13974 0bf8 9F       		.byte	0x9f
 13975 0bf9 93       		.byte	0x93
 13976 0bfa 02       		.uleb128 0x2
 13977 0bfb 52       		.byte	0x52
 13978 0bfc 93       		.byte	0x93
 13979 0bfd 02       		.uleb128 0x2
 13980 0bfe 93       		.byte	0x93
 13981 0bff 02       		.uleb128 0x2
 13982 0c00 28030000 		.4byte	.LVL42-.Ltext0
 13983 0c04 40030000 		.4byte	.LVL43-.Ltext0
 13984 0c08 1A00     		.2byte	0x1a
 13985 0c0a 91       		.byte	0x91
 13986 0c0b 54       		.sleb128 -44
 13987 0c0c 94       		.byte	0x94
 13988 0c0d 01       		.byte	0x1
 13989 0c0e 08       		.byte	0x8
 13990 0c0f FF       		.byte	0xff
 13991 0c10 1A       		.byte	0x1a
 13992 0c11 38       		.byte	0x38
 13993 0c12 24       		.byte	0x24
 13994 0c13 91       		.byte	0x91
 13995 0c14 55       		.sleb128 -43
 13996 0c15 94       		.byte	0x94
 13997 0c16 01       		.byte	0x1
 13998 0c17 08       		.byte	0x8
 13999 0c18 FF       		.byte	0xff
 14000 0c19 1A       		.byte	0x1a
 14001 0c1a 21       		.byte	0x21
 14002 0c1b 9F       		.byte	0x9f
 14003 0c1c 93       		.byte	0x93
 14004 0c1d 02       		.uleb128 0x2
 14005 0c1e 52       		.byte	0x52
 14006 0c1f 93       		.byte	0x93
 14007 0c20 02       		.uleb128 0x2
 14008 0c21 53       		.byte	0x53
 14009 0c22 93       		.byte	0x93
 14010 0c23 02       		.uleb128 0x2
 14011 0c24 40030000 		.4byte	.LVL43-.Ltext0
 14012 0c28 46030000 		.4byte	.LVL44-.Ltext0
 14013 0c2c 2B00     		.2byte	0x2b
 14014 0c2e 91       		.byte	0x91
 14015 0c2f 54       		.sleb128 -44
 14016 0c30 94       		.byte	0x94
 14017 0c31 01       		.byte	0x1
 14018 0c32 08       		.byte	0x8
 14019 0c33 FF       		.byte	0xff
 14020 0c34 1A       		.byte	0x1a
 14021 0c35 38       		.byte	0x38
 14022 0c36 24       		.byte	0x24
 14023 0c37 91       		.byte	0x91
 14024 0c38 55       		.sleb128 -43
 14025 0c39 94       		.byte	0x94
 14026 0c3a 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 311


 14027 0c3b 08       		.byte	0x8
 14028 0c3c FF       		.byte	0xff
 14029 0c3d 1A       		.byte	0x1a
 14030 0c3e 21       		.byte	0x21
 14031 0c3f 9F       		.byte	0x9f
 14032 0c40 93       		.byte	0x93
 14033 0c41 02       		.uleb128 0x2
 14034 0c42 91       		.byte	0x91
 14035 0c43 56       		.sleb128 -42
 14036 0c44 94       		.byte	0x94
 14037 0c45 01       		.byte	0x1
 14038 0c46 08       		.byte	0x8
 14039 0c47 FF       		.byte	0xff
 14040 0c48 1A       		.byte	0x1a
 14041 0c49 38       		.byte	0x38
 14042 0c4a 24       		.byte	0x24
 14043 0c4b 91       		.byte	0x91
 14044 0c4c 57       		.sleb128 -41
 14045 0c4d 94       		.byte	0x94
 14046 0c4e 01       		.byte	0x1
 14047 0c4f 08       		.byte	0x8
 14048 0c50 FF       		.byte	0xff
 14049 0c51 1A       		.byte	0x1a
 14050 0c52 21       		.byte	0x21
 14051 0c53 9F       		.byte	0x9f
 14052 0c54 93       		.byte	0x93
 14053 0c55 02       		.uleb128 0x2
 14054 0c56 53       		.byte	0x53
 14055 0c57 93       		.byte	0x93
 14056 0c58 02       		.uleb128 0x2
 14057 0c59 46030000 		.4byte	.LVL44-.Ltext0
 14058 0c5d 8C030000 		.4byte	.LVL52-.Ltext0
 14059 0c61 3C00     		.2byte	0x3c
 14060 0c63 91       		.byte	0x91
 14061 0c64 54       		.sleb128 -44
 14062 0c65 94       		.byte	0x94
 14063 0c66 01       		.byte	0x1
 14064 0c67 08       		.byte	0x8
 14065 0c68 FF       		.byte	0xff
 14066 0c69 1A       		.byte	0x1a
 14067 0c6a 38       		.byte	0x38
 14068 0c6b 24       		.byte	0x24
 14069 0c6c 91       		.byte	0x91
 14070 0c6d 55       		.sleb128 -43
 14071 0c6e 94       		.byte	0x94
 14072 0c6f 01       		.byte	0x1
 14073 0c70 08       		.byte	0x8
 14074 0c71 FF       		.byte	0xff
 14075 0c72 1A       		.byte	0x1a
 14076 0c73 21       		.byte	0x21
 14077 0c74 9F       		.byte	0x9f
 14078 0c75 93       		.byte	0x93
 14079 0c76 02       		.uleb128 0x2
 14080 0c77 91       		.byte	0x91
 14081 0c78 56       		.sleb128 -42
 14082 0c79 94       		.byte	0x94
 14083 0c7a 01       		.byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 312


 14084 0c7b 08       		.byte	0x8
 14085 0c7c FF       		.byte	0xff
 14086 0c7d 1A       		.byte	0x1a
 14087 0c7e 38       		.byte	0x38
 14088 0c7f 24       		.byte	0x24
 14089 0c80 91       		.byte	0x91
 14090 0c81 57       		.sleb128 -41
 14091 0c82 94       		.byte	0x94
 14092 0c83 01       		.byte	0x1
 14093 0c84 08       		.byte	0x8
 14094 0c85 FF       		.byte	0xff
 14095 0c86 1A       		.byte	0x1a
 14096 0c87 21       		.byte	0x21
 14097 0c88 9F       		.byte	0x9f
 14098 0c89 93       		.byte	0x93
 14099 0c8a 02       		.uleb128 0x2
 14100 0c8b 91       		.byte	0x91
 14101 0c8c 58       		.sleb128 -40
 14102 0c8d 94       		.byte	0x94
 14103 0c8e 01       		.byte	0x1
 14104 0c8f 08       		.byte	0x8
 14105 0c90 FF       		.byte	0xff
 14106 0c91 1A       		.byte	0x1a
 14107 0c92 38       		.byte	0x38
 14108 0c93 24       		.byte	0x24
 14109 0c94 91       		.byte	0x91
 14110 0c95 59       		.sleb128 -39
 14111 0c96 94       		.byte	0x94
 14112 0c97 01       		.byte	0x1
 14113 0c98 08       		.byte	0x8
 14114 0c99 FF       		.byte	0xff
 14115 0c9a 1A       		.byte	0x1a
 14116 0c9b 21       		.byte	0x21
 14117 0c9c 9F       		.byte	0x9f
 14118 0c9d 93       		.byte	0x93
 14119 0c9e 02       		.uleb128 0x2
 14120 0c9f 00000000 		.4byte	0
 14121 0ca3 00000000 		.4byte	0
 14122              	.LLST8:
 14123 0ca7 48030000 		.4byte	.LVL45-.Ltext0
 14124 0cab 56030000 		.4byte	.LVL46-.Ltext0
 14125 0caf 1600     		.2byte	0x16
 14126 0cb1 91       		.byte	0x91
 14127 0cb2 5A       		.sleb128 -38
 14128 0cb3 94       		.byte	0x94
 14129 0cb4 01       		.byte	0x1
 14130 0cb5 08       		.byte	0x8
 14131 0cb6 FF       		.byte	0xff
 14132 0cb7 1A       		.byte	0x1a
 14133 0cb8 38       		.byte	0x38
 14134 0cb9 24       		.byte	0x24
 14135 0cba 91       		.byte	0x91
 14136 0cbb 5B       		.sleb128 -37
 14137 0cbc 94       		.byte	0x94
 14138 0cbd 01       		.byte	0x1
 14139 0cbe 08       		.byte	0x8
 14140 0cbf FF       		.byte	0xff
ARM GAS  /tmp/cci8Vpl3.s 			page 313


 14141 0cc0 1A       		.byte	0x1a
 14142 0cc1 21       		.byte	0x21
 14143 0cc2 9F       		.byte	0x9f
 14144 0cc3 93       		.byte	0x93
 14145 0cc4 02       		.uleb128 0x2
 14146 0cc5 93       		.byte	0x93
 14147 0cc6 04       		.uleb128 0x4
 14148 0cc7 56030000 		.4byte	.LVL46-.Ltext0
 14149 0ccb 64030000 		.4byte	.LVL47-.Ltext0
 14150 0ccf 1900     		.2byte	0x19
 14151 0cd1 91       		.byte	0x91
 14152 0cd2 5A       		.sleb128 -38
 14153 0cd3 94       		.byte	0x94
 14154 0cd4 01       		.byte	0x1
 14155 0cd5 08       		.byte	0x8
 14156 0cd6 FF       		.byte	0xff
 14157 0cd7 1A       		.byte	0x1a
 14158 0cd8 38       		.byte	0x38
 14159 0cd9 24       		.byte	0x24
 14160 0cda 91       		.byte	0x91
 14161 0cdb 5B       		.sleb128 -37
 14162 0cdc 94       		.byte	0x94
 14163 0cdd 01       		.byte	0x1
 14164 0cde 08       		.byte	0x8
 14165 0cdf FF       		.byte	0xff
 14166 0ce0 1A       		.byte	0x1a
 14167 0ce1 21       		.byte	0x21
 14168 0ce2 9F       		.byte	0x9f
 14169 0ce3 93       		.byte	0x93
 14170 0ce4 02       		.uleb128 0x2
 14171 0ce5 52       		.byte	0x52
 14172 0ce6 93       		.byte	0x93
 14173 0ce7 02       		.uleb128 0x2
 14174 0ce8 93       		.byte	0x93
 14175 0ce9 02       		.uleb128 0x2
 14176 0cea 64030000 		.4byte	.LVL47-.Ltext0
 14177 0cee 7C030000 		.4byte	.LVL48-.Ltext0
 14178 0cf2 1A00     		.2byte	0x1a
 14179 0cf4 91       		.byte	0x91
 14180 0cf5 5A       		.sleb128 -38
 14181 0cf6 94       		.byte	0x94
 14182 0cf7 01       		.byte	0x1
 14183 0cf8 08       		.byte	0x8
 14184 0cf9 FF       		.byte	0xff
 14185 0cfa 1A       		.byte	0x1a
 14186 0cfb 38       		.byte	0x38
 14187 0cfc 24       		.byte	0x24
 14188 0cfd 91       		.byte	0x91
 14189 0cfe 5B       		.sleb128 -37
 14190 0cff 94       		.byte	0x94
 14191 0d00 01       		.byte	0x1
 14192 0d01 08       		.byte	0x8
 14193 0d02 FF       		.byte	0xff
 14194 0d03 1A       		.byte	0x1a
 14195 0d04 21       		.byte	0x21
 14196 0d05 9F       		.byte	0x9f
 14197 0d06 93       		.byte	0x93
ARM GAS  /tmp/cci8Vpl3.s 			page 314


 14198 0d07 02       		.uleb128 0x2
 14199 0d08 52       		.byte	0x52
 14200 0d09 93       		.byte	0x93
 14201 0d0a 02       		.uleb128 0x2
 14202 0d0b 53       		.byte	0x53
 14203 0d0c 93       		.byte	0x93
 14204 0d0d 02       		.uleb128 0x2
 14205 0d0e 7C030000 		.4byte	.LVL48-.Ltext0
 14206 0d12 82030000 		.4byte	.LVL49-.Ltext0
 14207 0d16 2B00     		.2byte	0x2b
 14208 0d18 91       		.byte	0x91
 14209 0d19 5A       		.sleb128 -38
 14210 0d1a 94       		.byte	0x94
 14211 0d1b 01       		.byte	0x1
 14212 0d1c 08       		.byte	0x8
 14213 0d1d FF       		.byte	0xff
 14214 0d1e 1A       		.byte	0x1a
 14215 0d1f 38       		.byte	0x38
 14216 0d20 24       		.byte	0x24
 14217 0d21 91       		.byte	0x91
 14218 0d22 5B       		.sleb128 -37
 14219 0d23 94       		.byte	0x94
 14220 0d24 01       		.byte	0x1
 14221 0d25 08       		.byte	0x8
 14222 0d26 FF       		.byte	0xff
 14223 0d27 1A       		.byte	0x1a
 14224 0d28 21       		.byte	0x21
 14225 0d29 9F       		.byte	0x9f
 14226 0d2a 93       		.byte	0x93
 14227 0d2b 02       		.uleb128 0x2
 14228 0d2c 91       		.byte	0x91
 14229 0d2d 5C       		.sleb128 -36
 14230 0d2e 94       		.byte	0x94
 14231 0d2f 01       		.byte	0x1
 14232 0d30 08       		.byte	0x8
 14233 0d31 FF       		.byte	0xff
 14234 0d32 1A       		.byte	0x1a
 14235 0d33 38       		.byte	0x38
 14236 0d34 24       		.byte	0x24
 14237 0d35 91       		.byte	0x91
 14238 0d36 5D       		.sleb128 -35
 14239 0d37 94       		.byte	0x94
 14240 0d38 01       		.byte	0x1
 14241 0d39 08       		.byte	0x8
 14242 0d3a FF       		.byte	0xff
 14243 0d3b 1A       		.byte	0x1a
 14244 0d3c 21       		.byte	0x21
 14245 0d3d 9F       		.byte	0x9f
 14246 0d3e 93       		.byte	0x93
 14247 0d3f 02       		.uleb128 0x2
 14248 0d40 53       		.byte	0x53
 14249 0d41 93       		.byte	0x93
 14250 0d42 02       		.uleb128 0x2
 14251 0d43 82030000 		.4byte	.LVL49-.Ltext0
 14252 0d47 8C030000 		.4byte	.LVL52-.Ltext0
 14253 0d4b 3C00     		.2byte	0x3c
 14254 0d4d 91       		.byte	0x91
ARM GAS  /tmp/cci8Vpl3.s 			page 315


 14255 0d4e 5A       		.sleb128 -38
 14256 0d4f 94       		.byte	0x94
 14257 0d50 01       		.byte	0x1
 14258 0d51 08       		.byte	0x8
 14259 0d52 FF       		.byte	0xff
 14260 0d53 1A       		.byte	0x1a
 14261 0d54 38       		.byte	0x38
 14262 0d55 24       		.byte	0x24
 14263 0d56 91       		.byte	0x91
 14264 0d57 5B       		.sleb128 -37
 14265 0d58 94       		.byte	0x94
 14266 0d59 01       		.byte	0x1
 14267 0d5a 08       		.byte	0x8
 14268 0d5b FF       		.byte	0xff
 14269 0d5c 1A       		.byte	0x1a
 14270 0d5d 21       		.byte	0x21
 14271 0d5e 9F       		.byte	0x9f
 14272 0d5f 93       		.byte	0x93
 14273 0d60 02       		.uleb128 0x2
 14274 0d61 91       		.byte	0x91
 14275 0d62 5C       		.sleb128 -36
 14276 0d63 94       		.byte	0x94
 14277 0d64 01       		.byte	0x1
 14278 0d65 08       		.byte	0x8
 14279 0d66 FF       		.byte	0xff
 14280 0d67 1A       		.byte	0x1a
 14281 0d68 38       		.byte	0x38
 14282 0d69 24       		.byte	0x24
 14283 0d6a 91       		.byte	0x91
 14284 0d6b 5D       		.sleb128 -35
 14285 0d6c 94       		.byte	0x94
 14286 0d6d 01       		.byte	0x1
 14287 0d6e 08       		.byte	0x8
 14288 0d6f FF       		.byte	0xff
 14289 0d70 1A       		.byte	0x1a
 14290 0d71 21       		.byte	0x21
 14291 0d72 9F       		.byte	0x9f
 14292 0d73 93       		.byte	0x93
 14293 0d74 02       		.uleb128 0x2
 14294 0d75 91       		.byte	0x91
 14295 0d76 5E       		.sleb128 -34
 14296 0d77 94       		.byte	0x94
 14297 0d78 01       		.byte	0x1
 14298 0d79 08       		.byte	0x8
 14299 0d7a FF       		.byte	0xff
 14300 0d7b 1A       		.byte	0x1a
 14301 0d7c 38       		.byte	0x38
 14302 0d7d 24       		.byte	0x24
 14303 0d7e 91       		.byte	0x91
 14304 0d7f 5F       		.sleb128 -33
 14305 0d80 94       		.byte	0x94
 14306 0d81 01       		.byte	0x1
 14307 0d82 08       		.byte	0x8
 14308 0d83 FF       		.byte	0xff
 14309 0d84 1A       		.byte	0x1a
 14310 0d85 21       		.byte	0x21
 14311 0d86 9F       		.byte	0x9f
ARM GAS  /tmp/cci8Vpl3.s 			page 316


 14312 0d87 93       		.byte	0x93
 14313 0d88 02       		.uleb128 0x2
 14314 0d89 00000000 		.4byte	0
 14315 0d8d 00000000 		.4byte	0
 14316              	.LLST54:
 14317 0d91 1C120000 		.4byte	.LVL296-.Ltext0
 14318 0d95 60120000 		.4byte	.LVL297-.Ltext0
 14319 0d99 0100     		.2byte	0x1
 14320 0d9b 50       		.byte	0x50
 14321 0d9c 60120000 		.4byte	.LVL297-.Ltext0
 14322 0da0 7E120000 		.4byte	.LVL299-.Ltext0
 14323 0da4 0400     		.2byte	0x4
 14324 0da6 F3       		.byte	0xf3
 14325 0da7 01       		.uleb128 0x1
 14326 0da8 50       		.byte	0x50
 14327 0da9 9F       		.byte	0x9f
 14328 0daa 7E120000 		.4byte	.LVL299-.Ltext0
 14329 0dae 8A120000 		.4byte	.LVL300-.Ltext0
 14330 0db2 0100     		.2byte	0x1
 14331 0db4 50       		.byte	0x50
 14332 0db5 8A120000 		.4byte	.LVL300-.Ltext0
 14333 0db9 98120000 		.4byte	.LFE95-.Ltext0
 14334 0dbd 0400     		.2byte	0x4
 14335 0dbf F3       		.byte	0xf3
 14336 0dc0 01       		.uleb128 0x1
 14337 0dc1 50       		.byte	0x50
 14338 0dc2 9F       		.byte	0x9f
 14339 0dc3 00000000 		.4byte	0
 14340 0dc7 00000000 		.4byte	0
 14341              	.LLST53:
 14342 0dcb 0C120000 		.4byte	.LVL294-.Ltext0
 14343 0dcf 14120000 		.4byte	.LVL295-.Ltext0
 14344 0dd3 0100     		.2byte	0x1
 14345 0dd5 50       		.byte	0x50
 14346 0dd6 14120000 		.4byte	.LVL295-.Ltext0
 14347 0dda 1C120000 		.4byte	.LFE94-.Ltext0
 14348 0dde 0500     		.2byte	0x5
 14349 0de0 03       		.byte	0x3
 14350 0de1 22000000 		.4byte	st+34
 14351 0de5 00000000 		.4byte	0
 14352 0de9 00000000 		.4byte	0
 14353              	.LLST52:
 14354 0ded B0100000 		.4byte	.LVL280-.Ltext0
 14355 0df1 CA100000 		.4byte	.LVL281-.Ltext0
 14356 0df5 0100     		.2byte	0x1
 14357 0df7 50       		.byte	0x50
 14358 0df8 CA100000 		.4byte	.LVL281-.Ltext0
 14359 0dfc 4C110000 		.4byte	.LVL286-.Ltext0
 14360 0e00 0400     		.2byte	0x4
 14361 0e02 F3       		.byte	0xf3
 14362 0e03 01       		.uleb128 0x1
 14363 0e04 50       		.byte	0x50
 14364 0e05 9F       		.byte	0x9f
 14365 0e06 4C110000 		.4byte	.LVL286-.Ltext0
 14366 0e0a 52110000 		.4byte	.LVL287-.Ltext0
 14367 0e0e 0100     		.2byte	0x1
 14368 0e10 50       		.byte	0x50
ARM GAS  /tmp/cci8Vpl3.s 			page 317


 14369 0e11 52110000 		.4byte	.LVL287-.Ltext0
 14370 0e15 E4110000 		.4byte	.LVL292-.Ltext0
 14371 0e19 0400     		.2byte	0x4
 14372 0e1b F3       		.byte	0xf3
 14373 0e1c 01       		.uleb128 0x1
 14374 0e1d 50       		.byte	0x50
 14375 0e1e 9F       		.byte	0x9f
 14376 0e1f E4110000 		.4byte	.LVL292-.Ltext0
 14377 0e23 E6110000 		.4byte	.LVL293-.Ltext0
 14378 0e27 0100     		.2byte	0x1
 14379 0e29 50       		.byte	0x50
 14380 0e2a E6110000 		.4byte	.LVL293-.Ltext0
 14381 0e2e 0C120000 		.4byte	.LFE93-.Ltext0
 14382 0e32 0400     		.2byte	0x4
 14383 0e34 F3       		.byte	0xf3
 14384 0e35 01       		.uleb128 0x1
 14385 0e36 50       		.byte	0x50
 14386 0e37 9F       		.byte	0x9f
 14387 0e38 00000000 		.4byte	0
 14388 0e3c 00000000 		.4byte	0
 14389              	.LLST48:
 14390 0e40 EC0F0000 		.4byte	.LVL265-.Ltext0
 14391 0e44 0E100000 		.4byte	.LVL267-.Ltext0
 14392 0e48 0100     		.2byte	0x1
 14393 0e4a 50       		.byte	0x50
 14394 0e4b 0E100000 		.4byte	.LVL267-.Ltext0
 14395 0e4f 8E100000 		.4byte	.LVL277-.Ltext0
 14396 0e53 0400     		.2byte	0x4
 14397 0e55 F3       		.byte	0xf3
 14398 0e56 01       		.uleb128 0x1
 14399 0e57 50       		.byte	0x50
 14400 0e58 9F       		.byte	0x9f
 14401 0e59 8E100000 		.4byte	.LVL277-.Ltext0
 14402 0e5d 9A100000 		.4byte	.LVL278-.Ltext0
 14403 0e61 0100     		.2byte	0x1
 14404 0e63 50       		.byte	0x50
 14405 0e64 9A100000 		.4byte	.LVL278-.Ltext0
 14406 0e68 B0100000 		.4byte	.LFE92-.Ltext0
 14407 0e6c 0400     		.2byte	0x4
 14408 0e6e F3       		.byte	0xf3
 14409 0e6f 01       		.uleb128 0x1
 14410 0e70 50       		.byte	0x50
 14411 0e71 9F       		.byte	0x9f
 14412 0e72 00000000 		.4byte	0
 14413 0e76 00000000 		.4byte	0
 14414              	.LLST49:
 14415 0e7a EC0F0000 		.4byte	.LVL265-.Ltext0
 14416 0e7e 0C100000 		.4byte	.LVL266-.Ltext0
 14417 0e82 0100     		.2byte	0x1
 14418 0e84 51       		.byte	0x51
 14419 0e85 0C100000 		.4byte	.LVL266-.Ltext0
 14420 0e89 74100000 		.4byte	.LVL274-.Ltext0
 14421 0e8d 0100     		.2byte	0x1
 14422 0e8f 57       		.byte	0x57
 14423 0e90 74100000 		.4byte	.LVL274-.Ltext0
 14424 0e94 7A100000 		.4byte	.LVL275-.Ltext0
 14425 0e98 0400     		.2byte	0x4
ARM GAS  /tmp/cci8Vpl3.s 			page 318


 14426 0e9a F3       		.byte	0xf3
 14427 0e9b 01       		.uleb128 0x1
 14428 0e9c 51       		.byte	0x51
 14429 0e9d 9F       		.byte	0x9f
 14430 0e9e 7A100000 		.4byte	.LVL275-.Ltext0
 14431 0ea2 8E100000 		.4byte	.LVL277-.Ltext0
 14432 0ea6 0100     		.2byte	0x1
 14433 0ea8 57       		.byte	0x57
 14434 0ea9 8E100000 		.4byte	.LVL277-.Ltext0
 14435 0ead 9A100000 		.4byte	.LVL278-.Ltext0
 14436 0eb1 0100     		.2byte	0x1
 14437 0eb3 51       		.byte	0x51
 14438 0eb4 9A100000 		.4byte	.LVL278-.Ltext0
 14439 0eb8 B0100000 		.4byte	.LFE92-.Ltext0
 14440 0ebc 0100     		.2byte	0x1
 14441 0ebe 57       		.byte	0x57
 14442 0ebf 00000000 		.4byte	0
 14443 0ec3 00000000 		.4byte	0
 14444              	.LLST50:
 14445 0ec7 EC0F0000 		.4byte	.LVL265-.Ltext0
 14446 0ecb 12100000 		.4byte	.LVL268-.Ltext0
 14447 0ecf 0100     		.2byte	0x1
 14448 0ed1 52       		.byte	0x52
 14449 0ed2 12100000 		.4byte	.LVL268-.Ltext0
 14450 0ed6 74100000 		.4byte	.LVL274-.Ltext0
 14451 0eda 0100     		.2byte	0x1
 14452 0edc 56       		.byte	0x56
 14453 0edd 74100000 		.4byte	.LVL274-.Ltext0
 14454 0ee1 7A100000 		.4byte	.LVL275-.Ltext0
 14455 0ee5 0400     		.2byte	0x4
 14456 0ee7 F3       		.byte	0xf3
 14457 0ee8 01       		.uleb128 0x1
 14458 0ee9 52       		.byte	0x52
 14459 0eea 9F       		.byte	0x9f
 14460 0eeb 7A100000 		.4byte	.LVL275-.Ltext0
 14461 0eef 8E100000 		.4byte	.LVL277-.Ltext0
 14462 0ef3 0100     		.2byte	0x1
 14463 0ef5 56       		.byte	0x56
 14464 0ef6 8E100000 		.4byte	.LVL277-.Ltext0
 14465 0efa 9A100000 		.4byte	.LVL278-.Ltext0
 14466 0efe 0100     		.2byte	0x1
 14467 0f00 52       		.byte	0x52
 14468 0f01 9A100000 		.4byte	.LVL278-.Ltext0
 14469 0f05 B0100000 		.4byte	.LFE92-.Ltext0
 14470 0f09 0100     		.2byte	0x1
 14471 0f0b 56       		.byte	0x56
 14472 0f0c 00000000 		.4byte	0
 14473 0f10 00000000 		.4byte	0
 14474              	.LLST51:
 14475 0f14 2A100000 		.4byte	.LVL270-.Ltext0
 14476 0f18 70100000 		.4byte	.LVL273-.Ltext0
 14477 0f1c 0100     		.2byte	0x1
 14478 0f1e 54       		.byte	0x54
 14479 0f1f 7A100000 		.4byte	.LVL275-.Ltext0
 14480 0f23 8E100000 		.4byte	.LVL277-.Ltext0
 14481 0f27 0100     		.2byte	0x1
 14482 0f29 54       		.byte	0x54
ARM GAS  /tmp/cci8Vpl3.s 			page 319


 14483 0f2a A0100000 		.4byte	.LVL279-.Ltext0
 14484 0f2e B0100000 		.4byte	.LFE92-.Ltext0
 14485 0f32 0100     		.2byte	0x1
 14486 0f34 54       		.byte	0x54
 14487 0f35 00000000 		.4byte	0
 14488 0f39 00000000 		.4byte	0
 14489              	.LLST40:
 14490 0f3d 0C0E0000 		.4byte	.LVL230-.Ltext0
 14491 0f41 660E0000 		.4byte	.LVL240-.Ltext0
 14492 0f45 0100     		.2byte	0x1
 14493 0f47 50       		.byte	0x50
 14494 0f48 660E0000 		.4byte	.LVL240-.Ltext0
 14495 0f4c C20F0000 		.4byte	.LVL256-.Ltext0
 14496 0f50 0100     		.2byte	0x1
 14497 0f52 57       		.byte	0x57
 14498 0f53 C20F0000 		.4byte	.LVL256-.Ltext0
 14499 0f57 C80F0000 		.4byte	.LVL258-.Ltext0
 14500 0f5b 0100     		.2byte	0x1
 14501 0f5d 50       		.byte	0x50
 14502 0f5e C80F0000 		.4byte	.LVL258-.Ltext0
 14503 0f62 CA0F0000 		.4byte	.LVL259-.Ltext0
 14504 0f66 0400     		.2byte	0x4
 14505 0f68 F3       		.byte	0xf3
 14506 0f69 01       		.uleb128 0x1
 14507 0f6a 50       		.byte	0x50
 14508 0f6b 9F       		.byte	0x9f
 14509 0f6c CA0F0000 		.4byte	.LVL259-.Ltext0
 14510 0f70 D60F0000 		.4byte	.LVL263-.Ltext0
 14511 0f74 0100     		.2byte	0x1
 14512 0f76 50       		.byte	0x50
 14513 0f77 D60F0000 		.4byte	.LVL263-.Ltext0
 14514 0f7b EC0F0000 		.4byte	.LFE91-.Ltext0
 14515 0f7f 0100     		.2byte	0x1
 14516 0f81 57       		.byte	0x57
 14517 0f82 00000000 		.4byte	0
 14518 0f86 00000000 		.4byte	0
 14519              	.LLST41:
 14520 0f8a 0C0E0000 		.4byte	.LVL230-.Ltext0
 14521 0f8e 640E0000 		.4byte	.LVL239-.Ltext0
 14522 0f92 0100     		.2byte	0x1
 14523 0f94 51       		.byte	0x51
 14524 0f95 640E0000 		.4byte	.LVL239-.Ltext0
 14525 0f99 C20F0000 		.4byte	.LVL256-.Ltext0
 14526 0f9d 0100     		.2byte	0x1
 14527 0f9f 59       		.byte	0x59
 14528 0fa0 C20F0000 		.4byte	.LVL256-.Ltext0
 14529 0fa4 D60F0000 		.4byte	.LVL263-.Ltext0
 14530 0fa8 0100     		.2byte	0x1
 14531 0faa 51       		.byte	0x51
 14532 0fab D60F0000 		.4byte	.LVL263-.Ltext0
 14533 0faf EC0F0000 		.4byte	.LFE91-.Ltext0
 14534 0fb3 0100     		.2byte	0x1
 14535 0fb5 59       		.byte	0x59
 14536 0fb6 00000000 		.4byte	0
 14537 0fba 00000000 		.4byte	0
 14538              	.LLST42:
 14539 0fbe 0C0E0000 		.4byte	.LVL230-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 320


 14540 0fc2 0E0E0000 		.4byte	.LVL231-.Ltext0
 14541 0fc6 0100     		.2byte	0x1
 14542 0fc8 52       		.byte	0x52
 14543 0fc9 0E0E0000 		.4byte	.LVL231-.Ltext0
 14544 0fcd EC0F0000 		.4byte	.LFE91-.Ltext0
 14545 0fd1 0400     		.2byte	0x4
 14546 0fd3 F3       		.byte	0xf3
 14547 0fd4 01       		.uleb128 0x1
 14548 0fd5 52       		.byte	0x52
 14549 0fd6 9F       		.byte	0x9f
 14550 0fd7 00000000 		.4byte	0
 14551 0fdb 00000000 		.4byte	0
 14552              	.LLST43:
 14553 0fdf 0C0E0000 		.4byte	.LVL230-.Ltext0
 14554 0fe3 620E0000 		.4byte	.LVL238-.Ltext0
 14555 0fe7 0100     		.2byte	0x1
 14556 0fe9 53       		.byte	0x53
 14557 0fea 620E0000 		.4byte	.LVL238-.Ltext0
 14558 0fee C20F0000 		.4byte	.LVL256-.Ltext0
 14559 0ff2 0100     		.2byte	0x1
 14560 0ff4 56       		.byte	0x56
 14561 0ff5 C20F0000 		.4byte	.LVL256-.Ltext0
 14562 0ff9 C60F0000 		.4byte	.LVL257-.Ltext0
 14563 0ffd 0100     		.2byte	0x1
 14564 0fff 53       		.byte	0x53
 14565 1000 C60F0000 		.4byte	.LVL257-.Ltext0
 14566 1004 CA0F0000 		.4byte	.LVL259-.Ltext0
 14567 1008 0400     		.2byte	0x4
 14568 100a F3       		.byte	0xf3
 14569 100b 01       		.uleb128 0x1
 14570 100c 53       		.byte	0x53
 14571 100d 9F       		.byte	0x9f
 14572 100e CA0F0000 		.4byte	.LVL259-.Ltext0
 14573 1012 CE0F0000 		.4byte	.LVL260-.Ltext0
 14574 1016 0100     		.2byte	0x1
 14575 1018 53       		.byte	0x53
 14576 1019 CE0F0000 		.4byte	.LVL260-.Ltext0
 14577 101d D00F0000 		.4byte	.LVL261-.Ltext0
 14578 1021 0400     		.2byte	0x4
 14579 1023 F3       		.byte	0xf3
 14580 1024 01       		.uleb128 0x1
 14581 1025 53       		.byte	0x53
 14582 1026 9F       		.byte	0x9f
 14583 1027 D00F0000 		.4byte	.LVL261-.Ltext0
 14584 102b D40F0000 		.4byte	.LVL262-.Ltext0
 14585 102f 0100     		.2byte	0x1
 14586 1031 53       		.byte	0x53
 14587 1032 D40F0000 		.4byte	.LVL262-.Ltext0
 14588 1036 D60F0000 		.4byte	.LVL263-.Ltext0
 14589 103a 0400     		.2byte	0x4
 14590 103c F3       		.byte	0xf3
 14591 103d 01       		.uleb128 0x1
 14592 103e 53       		.byte	0x53
 14593 103f 9F       		.byte	0x9f
 14594 1040 D60F0000 		.4byte	.LVL263-.Ltext0
 14595 1044 EC0F0000 		.4byte	.LFE91-.Ltext0
 14596 1048 0100     		.2byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 321


 14597 104a 56       		.byte	0x56
 14598 104b 00000000 		.4byte	0
 14599 104f 00000000 		.4byte	0
 14600              	.LLST44:
 14601 1053 0C0E0000 		.4byte	.LVL230-.Ltext0
 14602 1057 B40F0000 		.4byte	.LVL253-.Ltext0
 14603 105b 0200     		.2byte	0x2
 14604 105d 91       		.byte	0x91
 14605 105e 00       		.sleb128 0
 14606 105f B40F0000 		.4byte	.LVL253-.Ltext0
 14607 1063 EC0F0000 		.4byte	.LFE91-.Ltext0
 14608 1067 0200     		.2byte	0x2
 14609 1069 91       		.byte	0x91
 14610 106a 00       		.sleb128 0
 14611 106b 00000000 		.4byte	0
 14612 106f 00000000 		.4byte	0
 14613              	.LLST45:
 14614 1073 0C0E0000 		.4byte	.LVL230-.Ltext0
 14615 1077 3E0E0000 		.4byte	.LVL232-.Ltext0
 14616 107b 0200     		.2byte	0x2
 14617 107d 30       		.byte	0x30
 14618 107e 9F       		.byte	0x9f
 14619 107f 3E0E0000 		.4byte	.LVL232-.Ltext0
 14620 1083 4E0E0000 		.4byte	.LVL234-.Ltext0
 14621 1087 0100     		.2byte	0x1
 14622 1089 54       		.byte	0x54
 14623 108a 4E0E0000 		.4byte	.LVL234-.Ltext0
 14624 108e 500E0000 		.4byte	.LVL235-.Ltext0
 14625 1092 3500     		.2byte	0x35
 14626 1094 32       		.byte	0x32
 14627 1095 72       		.byte	0x72
 14628 1096 00       		.sleb128 0
 14629 1097 08       		.byte	0x8
 14630 1098 40       		.byte	0x40
 14631 1099 1A       		.byte	0x1a
 14632 109a 72       		.byte	0x72
 14633 109b 00       		.sleb128 0
 14634 109c 08       		.byte	0x8
 14635 109d 40       		.byte	0x40
 14636 109e 1A       		.byte	0x1a
 14637 109f 30       		.byte	0x30
 14638 10a0 2E       		.byte	0x2e
 14639 10a1 28       		.byte	0x28
 14640 10a2 0100     		.2byte	0x1
 14641 10a4 16       		.byte	0x16
 14642 10a5 13       		.byte	0x13
 14643 10a6 23       		.byte	0x23
 14644 10a7 02       		.uleb128 0x2
 14645 10a8 32       		.byte	0x32
 14646 10a9 72       		.byte	0x72
 14647 10aa 00       		.sleb128 0
 14648 10ab 08       		.byte	0x8
 14649 10ac 40       		.byte	0x40
 14650 10ad 1A       		.byte	0x1a
 14651 10ae 72       		.byte	0x72
 14652 10af 00       		.sleb128 0
 14653 10b0 08       		.byte	0x8
ARM GAS  /tmp/cci8Vpl3.s 			page 322


 14654 10b1 40       		.byte	0x40
 14655 10b2 1A       		.byte	0x1a
 14656 10b3 30       		.byte	0x30
 14657 10b4 2E       		.byte	0x2e
 14658 10b5 28       		.byte	0x28
 14659 10b6 0100     		.2byte	0x1
 14660 10b8 16       		.byte	0x16
 14661 10b9 13       		.byte	0x13
 14662 10ba 72       		.byte	0x72
 14663 10bb 00       		.sleb128 0
 14664 10bc 09       		.byte	0x9
 14665 10bd FE       		.byte	0xfe
 14666 10be 24       		.byte	0x24
 14667 10bf 33       		.byte	0x33
 14668 10c0 25       		.byte	0x25
 14669 10c1 30       		.byte	0x30
 14670 10c2 2E       		.byte	0x2e
 14671 10c3 28       		.byte	0x28
 14672 10c4 0100     		.2byte	0x1
 14673 10c6 16       		.byte	0x16
 14674 10c7 13       		.byte	0x13
 14675 10c8 9F       		.byte	0x9f
 14676 10c9 500E0000 		.4byte	.LVL235-.Ltext0
 14677 10cd 580E0000 		.4byte	.LVL236-.Ltext0
 14678 10d1 0100     		.2byte	0x1
 14679 10d3 54       		.byte	0x54
 14680 10d4 580E0000 		.4byte	.LVL236-.Ltext0
 14681 10d8 5A0E0000 		.4byte	.LVL237-.Ltext0
 14682 10dc 0201     		.2byte	0x102
 14683 10de 32       		.byte	0x32
 14684 10df 72       		.byte	0x72
 14685 10e0 00       		.sleb128 0
 14686 10e1 08       		.byte	0x8
 14687 10e2 40       		.byte	0x40
 14688 10e3 1A       		.byte	0x1a
 14689 10e4 72       		.byte	0x72
 14690 10e5 00       		.sleb128 0
 14691 10e6 08       		.byte	0x8
 14692 10e7 40       		.byte	0x40
 14693 10e8 1A       		.byte	0x1a
 14694 10e9 30       		.byte	0x30
 14695 10ea 2E       		.byte	0x2e
 14696 10eb 28       		.byte	0x28
 14697 10ec 0100     		.2byte	0x1
 14698 10ee 16       		.byte	0x16
 14699 10ef 13       		.byte	0x13
 14700 10f0 23       		.byte	0x23
 14701 10f1 02       		.uleb128 0x2
 14702 10f2 32       		.byte	0x32
 14703 10f3 72       		.byte	0x72
 14704 10f4 00       		.sleb128 0
 14705 10f5 08       		.byte	0x8
 14706 10f6 40       		.byte	0x40
 14707 10f7 1A       		.byte	0x1a
 14708 10f8 72       		.byte	0x72
 14709 10f9 00       		.sleb128 0
 14710 10fa 08       		.byte	0x8
ARM GAS  /tmp/cci8Vpl3.s 			page 323


 14711 10fb 40       		.byte	0x40
 14712 10fc 1A       		.byte	0x1a
 14713 10fd 30       		.byte	0x30
 14714 10fe 2E       		.byte	0x2e
 14715 10ff 28       		.byte	0x28
 14716 1100 0100     		.2byte	0x1
 14717 1102 16       		.byte	0x16
 14718 1103 13       		.byte	0x13
 14719 1104 72       		.byte	0x72
 14720 1105 00       		.sleb128 0
 14721 1106 09       		.byte	0x9
 14722 1107 FE       		.byte	0xfe
 14723 1108 24       		.byte	0x24
 14724 1109 33       		.byte	0x33
 14725 110a 25       		.byte	0x25
 14726 110b 30       		.byte	0x30
 14727 110c 2E       		.byte	0x2e
 14728 110d 28       		.byte	0x28
 14729 110e 0100     		.2byte	0x1
 14730 1110 16       		.byte	0x16
 14731 1111 13       		.byte	0x13
 14732 1112 23       		.byte	0x23
 14733 1113 02       		.uleb128 0x2
 14734 1114 32       		.byte	0x32
 14735 1115 72       		.byte	0x72
 14736 1116 00       		.sleb128 0
 14737 1117 08       		.byte	0x8
 14738 1118 40       		.byte	0x40
 14739 1119 1A       		.byte	0x1a
 14740 111a 72       		.byte	0x72
 14741 111b 00       		.sleb128 0
 14742 111c 08       		.byte	0x8
 14743 111d 40       		.byte	0x40
 14744 111e 1A       		.byte	0x1a
 14745 111f 30       		.byte	0x30
 14746 1120 2E       		.byte	0x2e
 14747 1121 28       		.byte	0x28
 14748 1122 0100     		.2byte	0x1
 14749 1124 16       		.byte	0x16
 14750 1125 13       		.byte	0x13
 14751 1126 23       		.byte	0x23
 14752 1127 02       		.uleb128 0x2
 14753 1128 32       		.byte	0x32
 14754 1129 72       		.byte	0x72
 14755 112a 00       		.sleb128 0
 14756 112b 08       		.byte	0x8
 14757 112c 40       		.byte	0x40
 14758 112d 1A       		.byte	0x1a
 14759 112e 72       		.byte	0x72
 14760 112f 00       		.sleb128 0
 14761 1130 08       		.byte	0x8
 14762 1131 40       		.byte	0x40
 14763 1132 1A       		.byte	0x1a
 14764 1133 30       		.byte	0x30
 14765 1134 2E       		.byte	0x2e
 14766 1135 28       		.byte	0x28
 14767 1136 0100     		.2byte	0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 324


 14768 1138 16       		.byte	0x16
 14769 1139 13       		.byte	0x13
 14770 113a 72       		.byte	0x72
 14771 113b 00       		.sleb128 0
 14772 113c 09       		.byte	0x9
 14773 113d FE       		.byte	0xfe
 14774 113e 24       		.byte	0x24
 14775 113f 33       		.byte	0x33
 14776 1140 25       		.byte	0x25
 14777 1141 30       		.byte	0x30
 14778 1142 2E       		.byte	0x2e
 14779 1143 28       		.byte	0x28
 14780 1144 0100     		.2byte	0x1
 14781 1146 16       		.byte	0x16
 14782 1147 13       		.byte	0x13
 14783 1148 72       		.byte	0x72
 14784 1149 00       		.sleb128 0
 14785 114a 09       		.byte	0x9
 14786 114b FF       		.byte	0xff
 14787 114c 24       		.byte	0x24
 14788 114d 33       		.byte	0x33
 14789 114e 25       		.byte	0x25
 14790 114f 30       		.byte	0x30
 14791 1150 2E       		.byte	0x2e
 14792 1151 28       		.byte	0x28
 14793 1152 0100     		.2byte	0x1
 14794 1154 16       		.byte	0x16
 14795 1155 13       		.byte	0x13
 14796 1156 08       		.byte	0x8
 14797 1157 FF       		.byte	0xff
 14798 1158 1A       		.byte	0x1a
 14799 1159 32       		.byte	0x32
 14800 115a 72       		.byte	0x72
 14801 115b 00       		.sleb128 0
 14802 115c 08       		.byte	0x8
 14803 115d 40       		.byte	0x40
 14804 115e 1A       		.byte	0x1a
 14805 115f 72       		.byte	0x72
 14806 1160 00       		.sleb128 0
 14807 1161 08       		.byte	0x8
 14808 1162 40       		.byte	0x40
 14809 1163 1A       		.byte	0x1a
 14810 1164 30       		.byte	0x30
 14811 1165 2E       		.byte	0x2e
 14812 1166 28       		.byte	0x28
 14813 1167 0100     		.2byte	0x1
 14814 1169 16       		.byte	0x16
 14815 116a 13       		.byte	0x13
 14816 116b 23       		.byte	0x23
 14817 116c 02       		.uleb128 0x2
 14818 116d 32       		.byte	0x32
 14819 116e 72       		.byte	0x72
 14820 116f 00       		.sleb128 0
 14821 1170 08       		.byte	0x8
 14822 1171 40       		.byte	0x40
 14823 1172 1A       		.byte	0x1a
 14824 1173 72       		.byte	0x72
ARM GAS  /tmp/cci8Vpl3.s 			page 325


 14825 1174 00       		.sleb128 0
 14826 1175 08       		.byte	0x8
 14827 1176 40       		.byte	0x40
 14828 1177 1A       		.byte	0x1a
 14829 1178 30       		.byte	0x30
 14830 1179 2E       		.byte	0x2e
 14831 117a 28       		.byte	0x28
 14832 117b 0100     		.2byte	0x1
 14833 117d 16       		.byte	0x16
 14834 117e 13       		.byte	0x13
 14835 117f 72       		.byte	0x72
 14836 1180 00       		.sleb128 0
 14837 1181 09       		.byte	0x9
 14838 1182 FE       		.byte	0xfe
 14839 1183 24       		.byte	0x24
 14840 1184 33       		.byte	0x33
 14841 1185 25       		.byte	0x25
 14842 1186 30       		.byte	0x30
 14843 1187 2E       		.byte	0x2e
 14844 1188 28       		.byte	0x28
 14845 1189 0100     		.2byte	0x1
 14846 118b 16       		.byte	0x16
 14847 118c 13       		.byte	0x13
 14848 118d 23       		.byte	0x23
 14849 118e 02       		.uleb128 0x2
 14850 118f 32       		.byte	0x32
 14851 1190 72       		.byte	0x72
 14852 1191 00       		.sleb128 0
 14853 1192 08       		.byte	0x8
 14854 1193 40       		.byte	0x40
 14855 1194 1A       		.byte	0x1a
 14856 1195 72       		.byte	0x72
 14857 1196 00       		.sleb128 0
 14858 1197 08       		.byte	0x8
 14859 1198 40       		.byte	0x40
 14860 1199 1A       		.byte	0x1a
 14861 119a 30       		.byte	0x30
 14862 119b 2E       		.byte	0x2e
 14863 119c 28       		.byte	0x28
 14864 119d 0100     		.2byte	0x1
 14865 119f 16       		.byte	0x16
 14866 11a0 13       		.byte	0x13
 14867 11a1 23       		.byte	0x23
 14868 11a2 02       		.uleb128 0x2
 14869 11a3 32       		.byte	0x32
 14870 11a4 72       		.byte	0x72
 14871 11a5 00       		.sleb128 0
 14872 11a6 08       		.byte	0x8
 14873 11a7 40       		.byte	0x40
 14874 11a8 1A       		.byte	0x1a
 14875 11a9 72       		.byte	0x72
 14876 11aa 00       		.sleb128 0
 14877 11ab 08       		.byte	0x8
 14878 11ac 40       		.byte	0x40
 14879 11ad 1A       		.byte	0x1a
 14880 11ae 30       		.byte	0x30
 14881 11af 2E       		.byte	0x2e
ARM GAS  /tmp/cci8Vpl3.s 			page 326


 14882 11b0 28       		.byte	0x28
 14883 11b1 0100     		.2byte	0x1
 14884 11b3 16       		.byte	0x16
 14885 11b4 13       		.byte	0x13
 14886 11b5 72       		.byte	0x72
 14887 11b6 00       		.sleb128 0
 14888 11b7 09       		.byte	0x9
 14889 11b8 FE       		.byte	0xfe
 14890 11b9 24       		.byte	0x24
 14891 11ba 33       		.byte	0x33
 14892 11bb 25       		.byte	0x25
 14893 11bc 30       		.byte	0x30
 14894 11bd 2E       		.byte	0x2e
 14895 11be 28       		.byte	0x28
 14896 11bf 0100     		.2byte	0x1
 14897 11c1 16       		.byte	0x16
 14898 11c2 13       		.byte	0x13
 14899 11c3 72       		.byte	0x72
 14900 11c4 00       		.sleb128 0
 14901 11c5 09       		.byte	0x9
 14902 11c6 FF       		.byte	0xff
 14903 11c7 24       		.byte	0x24
 14904 11c8 33       		.byte	0x33
 14905 11c9 25       		.byte	0x25
 14906 11ca 30       		.byte	0x30
 14907 11cb 2E       		.byte	0x2e
 14908 11cc 28       		.byte	0x28
 14909 11cd 0100     		.2byte	0x1
 14910 11cf 16       		.byte	0x16
 14911 11d0 13       		.byte	0x13
 14912 11d1 72       		.byte	0x72
 14913 11d2 00       		.sleb128 0
 14914 11d3 09       		.byte	0x9
 14915 11d4 FF       		.byte	0xff
 14916 11d5 24       		.byte	0x24
 14917 11d6 33       		.byte	0x33
 14918 11d7 25       		.byte	0x25
 14919 11d8 30       		.byte	0x30
 14920 11d9 2E       		.byte	0x2e
 14921 11da 28       		.byte	0x28
 14922 11db 0100     		.2byte	0x1
 14923 11dd 16       		.byte	0x16
 14924 11de 13       		.byte	0x13
 14925 11df 9F       		.byte	0x9f
 14926 11e0 5A0E0000 		.4byte	.LVL237-.Ltext0
 14927 11e4 420F0000 		.4byte	.LVL248-.Ltext0
 14928 11e8 0100     		.2byte	0x1
 14929 11ea 54       		.byte	0x54
 14930 11eb B40F0000 		.4byte	.LVL253-.Ltext0
 14931 11ef C20F0000 		.4byte	.LVL256-.Ltext0
 14932 11f3 0100     		.2byte	0x1
 14933 11f5 54       		.byte	0x54
 14934 11f6 C20F0000 		.4byte	.LVL256-.Ltext0
 14935 11fa D60F0000 		.4byte	.LVL263-.Ltext0
 14936 11fe 0200     		.2byte	0x2
 14937 1200 30       		.byte	0x30
 14938 1201 9F       		.byte	0x9f
ARM GAS  /tmp/cci8Vpl3.s 			page 327


 14939 1202 D60F0000 		.4byte	.LVL263-.Ltext0
 14940 1206 EC0F0000 		.4byte	.LFE91-.Ltext0
 14941 120a 0100     		.2byte	0x1
 14942 120c 54       		.byte	0x54
 14943 120d 00000000 		.4byte	0
 14944 1211 00000000 		.4byte	0
 14945              	.LLST46:
 14946 1215 860E0000 		.4byte	.LVL242-.Ltext0
 14947 1219 DA0E0000 		.4byte	.LVL245-.Ltext0
 14948 121d 0100     		.2byte	0x1
 14949 121f 55       		.byte	0x55
 14950 1220 B40F0000 		.4byte	.LVL253-.Ltext0
 14951 1224 BE0F0000 		.4byte	.LVL255-.Ltext0
 14952 1228 0100     		.2byte	0x1
 14953 122a 55       		.byte	0x55
 14954 122b DC0F0000 		.4byte	.LVL264-.Ltext0
 14955 122f EC0F0000 		.4byte	.LFE91-.Ltext0
 14956 1233 0100     		.2byte	0x1
 14957 1235 55       		.byte	0x55
 14958 1236 00000000 		.4byte	0
 14959 123a 00000000 		.4byte	0
 14960              	.LLST47:
 14961 123e 0C0E0000 		.4byte	.LVL230-.Ltext0
 14962 1242 2A0F0000 		.4byte	.LVL246-.Ltext0
 14963 1246 0200     		.2byte	0x2
 14964 1248 30       		.byte	0x30
 14965 1249 9F       		.byte	0x9f
 14966 124a 2A0F0000 		.4byte	.LVL246-.Ltext0
 14967 124e 2C0F0000 		.4byte	.LVL247-.Ltext0
 14968 1252 0200     		.2byte	0x2
 14969 1254 36       		.byte	0x36
 14970 1255 9F       		.byte	0x9f
 14971 1256 560F0000 		.4byte	.LVL249-.Ltext0
 14972 125a 5C0F0000 		.4byte	.LVL250-.Ltext0
 14973 125e 0100     		.2byte	0x1
 14974 1260 52       		.byte	0x52
 14975 1261 820F0000 		.4byte	.LVL251-.Ltext0
 14976 1265 880F0000 		.4byte	.LVL252-.Ltext0
 14977 1269 0100     		.2byte	0x1
 14978 126b 52       		.byte	0x52
 14979 126c B40F0000 		.4byte	.LVL253-.Ltext0
 14980 1270 EC0F0000 		.4byte	.LFE91-.Ltext0
 14981 1274 0200     		.2byte	0x2
 14982 1276 30       		.byte	0x30
 14983 1277 9F       		.byte	0x9f
 14984 1278 00000000 		.4byte	0
 14985 127c 00000000 		.4byte	0
 14986              	.LLST39:
 14987 1280 C40D0000 		.4byte	.LVL224-.Ltext0
 14988 1284 D60D0000 		.4byte	.LVL225-.Ltext0
 14989 1288 0100     		.2byte	0x1
 14990 128a 50       		.byte	0x50
 14991 128b D60D0000 		.4byte	.LVL225-.Ltext0
 14992 128f FA0D0000 		.4byte	.LVL227-.Ltext0
 14993 1293 0100     		.2byte	0x1
 14994 1295 54       		.byte	0x54
 14995 1296 FA0D0000 		.4byte	.LVL227-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 328


 14996 129a 000E0000 		.4byte	.LVL228-.Ltext0
 14997 129e 0100     		.2byte	0x1
 14998 12a0 50       		.byte	0x50
 14999 12a1 000E0000 		.4byte	.LVL228-.Ltext0
 15000 12a5 020E0000 		.4byte	.LVL229-.Ltext0
 15001 12a9 0400     		.2byte	0x4
 15002 12ab F3       		.byte	0xf3
 15003 12ac 01       		.uleb128 0x1
 15004 12ad 50       		.byte	0x50
 15005 12ae 9F       		.byte	0x9f
 15006 12af 020E0000 		.4byte	.LVL229-.Ltext0
 15007 12b3 0C0E0000 		.4byte	.LFE90-.Ltext0
 15008 12b7 0100     		.2byte	0x1
 15009 12b9 54       		.byte	0x54
 15010 12ba 00000000 		.4byte	0
 15011 12be 00000000 		.4byte	0
 15012              	.LLST57:
 15013 12c2 14140000 		.4byte	.LVL328-.Ltext0
 15014 12c6 2C140000 		.4byte	.LVL329-.Ltext0
 15015 12ca 0100     		.2byte	0x1
 15016 12cc 50       		.byte	0x50
 15017 12cd 2C140000 		.4byte	.LVL329-.Ltext0
 15018 12d1 C4140000 		.4byte	.LVL334-.Ltext0
 15019 12d5 0400     		.2byte	0x4
 15020 12d7 F3       		.byte	0xf3
 15021 12d8 01       		.uleb128 0x1
 15022 12d9 50       		.byte	0x50
 15023 12da 9F       		.byte	0x9f
 15024 12db C4140000 		.4byte	.LVL334-.Ltext0
 15025 12df DC140000 		.4byte	.LVL335-.Ltext0
 15026 12e3 0100     		.2byte	0x1
 15027 12e5 50       		.byte	0x50
 15028 12e6 DC140000 		.4byte	.LVL335-.Ltext0
 15029 12ea 18150000 		.4byte	.LFE89-.Ltext0
 15030 12ee 0400     		.2byte	0x4
 15031 12f0 F3       		.byte	0xf3
 15032 12f1 01       		.uleb128 0x1
 15033 12f2 50       		.byte	0x50
 15034 12f3 9F       		.byte	0x9f
 15035 12f4 00000000 		.4byte	0
 15036 12f8 00000000 		.4byte	0
 15037              	.LLST38:
 15038 12fc AC0D0000 		.4byte	.LVL221-.Ltext0
 15039 1300 B80D0000 		.4byte	.LVL222-.Ltext0
 15040 1304 0100     		.2byte	0x1
 15041 1306 50       		.byte	0x50
 15042 1307 B80D0000 		.4byte	.LVL222-.Ltext0
 15043 130b BA0D0000 		.4byte	.LVL223-.Ltext0
 15044 130f 0400     		.2byte	0x4
 15045 1311 F3       		.byte	0xf3
 15046 1312 01       		.uleb128 0x1
 15047 1313 50       		.byte	0x50
 15048 1314 9F       		.byte	0x9f
 15049 1315 BA0D0000 		.4byte	.LVL223-.Ltext0
 15050 1319 C40D0000 		.4byte	.LFE88-.Ltext0
 15051 131d 0100     		.2byte	0x1
 15052 131f 50       		.byte	0x50
ARM GAS  /tmp/cci8Vpl3.s 			page 329


 15053 1320 00000000 		.4byte	0
 15054 1324 00000000 		.4byte	0
 15055              	.LLST35:
 15056 1328 4C0D0000 		.4byte	.LVL207-.Ltext0
 15057 132c 4E0D0000 		.4byte	.LVL208-.Ltext0
 15058 1330 0100     		.2byte	0x1
 15059 1332 50       		.byte	0x50
 15060 1333 4E0D0000 		.4byte	.LVL208-.Ltext0
 15061 1337 600D0000 		.4byte	.LVL209-.Ltext0
 15062 133b 0600     		.2byte	0x6
 15063 133d 70       		.byte	0x70
 15064 133e 00       		.sleb128 0
 15065 133f 09       		.byte	0x9
 15066 1340 FE       		.byte	0xfe
 15067 1341 1A       		.byte	0x1a
 15068 1342 9F       		.byte	0x9f
 15069 1343 600D0000 		.4byte	.LVL209-.Ltext0
 15070 1347 820D0000 		.4byte	.LVL214-.Ltext0
 15071 134b 0700     		.2byte	0x7
 15072 134d F3       		.byte	0xf3
 15073 134e 01       		.uleb128 0x1
 15074 134f 50       		.byte	0x50
 15075 1350 09       		.byte	0x9
 15076 1351 FE       		.byte	0xfe
 15077 1352 1A       		.byte	0x1a
 15078 1353 9F       		.byte	0x9f
 15079 1354 820D0000 		.4byte	.LVL214-.Ltext0
 15080 1358 840D0000 		.4byte	.LVL215-.Ltext0
 15081 135c 0600     		.2byte	0x6
 15082 135e 70       		.byte	0x70
 15083 135f 00       		.sleb128 0
 15084 1360 09       		.byte	0x9
 15085 1361 FE       		.byte	0xfe
 15086 1362 1A       		.byte	0x1a
 15087 1363 9F       		.byte	0x9f
 15088 1364 840D0000 		.4byte	.LVL215-.Ltext0
 15089 1368 880D0000 		.4byte	.LVL216-.Ltext0
 15090 136c 0700     		.2byte	0x7
 15091 136e F3       		.byte	0xf3
 15092 136f 01       		.uleb128 0x1
 15093 1370 50       		.byte	0x50
 15094 1371 09       		.byte	0x9
 15095 1372 FE       		.byte	0xfe
 15096 1373 1A       		.byte	0x1a
 15097 1374 9F       		.byte	0x9f
 15098 1375 880D0000 		.4byte	.LVL216-.Ltext0
 15099 1379 8E0D0000 		.4byte	.LVL217-.Ltext0
 15100 137d 0600     		.2byte	0x6
 15101 137f 70       		.byte	0x70
 15102 1380 00       		.sleb128 0
 15103 1381 09       		.byte	0x9
 15104 1382 FE       		.byte	0xfe
 15105 1383 1A       		.byte	0x1a
 15106 1384 9F       		.byte	0x9f
 15107 1385 8E0D0000 		.4byte	.LVL217-.Ltext0
 15108 1389 AC0D0000 		.4byte	.LFE87-.Ltext0
 15109 138d 0700     		.2byte	0x7
ARM GAS  /tmp/cci8Vpl3.s 			page 330


 15110 138f F3       		.byte	0xf3
 15111 1390 01       		.uleb128 0x1
 15112 1391 50       		.byte	0x50
 15113 1392 09       		.byte	0x9
 15114 1393 FE       		.byte	0xfe
 15115 1394 1A       		.byte	0x1a
 15116 1395 9F       		.byte	0x9f
 15117 1396 00000000 		.4byte	0
 15118 139a 00000000 		.4byte	0
 15119              	.LLST36:
 15120 139e 620D0000 		.4byte	.LVL210-.Ltext0
 15121 13a2 820D0000 		.4byte	.LVL214-.Ltext0
 15122 13a6 0100     		.2byte	0x1
 15123 13a8 55       		.byte	0x55
 15124 13a9 8E0D0000 		.4byte	.LVL217-.Ltext0
 15125 13ad AC0D0000 		.4byte	.LFE87-.Ltext0
 15126 13b1 0100     		.2byte	0x1
 15127 13b3 55       		.byte	0x55
 15128 13b4 00000000 		.4byte	0
 15129 13b8 00000000 		.4byte	0
 15130              	.LLST37:
 15131 13bc 4E0D0000 		.4byte	.LVL208-.Ltext0
 15132 13c0 6E0D0000 		.4byte	.LVL211-.Ltext0
 15133 13c4 0200     		.2byte	0x2
 15134 13c6 30       		.byte	0x30
 15135 13c7 9F       		.byte	0x9f
 15136 13c8 6E0D0000 		.4byte	.LVL211-.Ltext0
 15137 13cc 820D0000 		.4byte	.LVL214-.Ltext0
 15138 13d0 0100     		.2byte	0x1
 15139 13d2 54       		.byte	0x54
 15140 13d3 820D0000 		.4byte	.LVL214-.Ltext0
 15141 13d7 840D0000 		.4byte	.LVL215-.Ltext0
 15142 13db 0200     		.2byte	0x2
 15143 13dd 30       		.byte	0x30
 15144 13de 9F       		.byte	0x9f
 15145 13df 880D0000 		.4byte	.LVL216-.Ltext0
 15146 13e3 8E0D0000 		.4byte	.LVL217-.Ltext0
 15147 13e7 0200     		.2byte	0x2
 15148 13e9 30       		.byte	0x30
 15149 13ea 9F       		.byte	0x9f
 15150 13eb 8E0D0000 		.4byte	.LVL217-.Ltext0
 15151 13ef A40D0000 		.4byte	.LVL220-.Ltext0
 15152 13f3 0100     		.2byte	0x1
 15153 13f5 54       		.byte	0x54
 15154 13f6 00000000 		.4byte	0
 15155 13fa 00000000 		.4byte	0
 15156              	.LLST33:
 15157 13fe F00C0000 		.4byte	.LVL199-.Ltext0
 15158 1402 140D0000 		.4byte	.LVL200-.Ltext0
 15159 1406 0100     		.2byte	0x1
 15160 1408 50       		.byte	0x50
 15161 1409 140D0000 		.4byte	.LVL200-.Ltext0
 15162 140d 160D0000 		.4byte	.LVL201-.Ltext0
 15163 1411 0400     		.2byte	0x4
 15164 1413 F3       		.byte	0xf3
 15165 1414 01       		.uleb128 0x1
 15166 1415 50       		.byte	0x50
ARM GAS  /tmp/cci8Vpl3.s 			page 331


 15167 1416 9F       		.byte	0x9f
 15168 1417 160D0000 		.4byte	.LVL201-.Ltext0
 15169 141b 320D0000 		.4byte	.LVL202-.Ltext0
 15170 141f 0100     		.2byte	0x1
 15171 1421 50       		.byte	0x50
 15172 1422 320D0000 		.4byte	.LVL202-.Ltext0
 15173 1426 340D0000 		.4byte	.LVL203-.Ltext0
 15174 142a 0400     		.2byte	0x4
 15175 142c F3       		.byte	0xf3
 15176 142d 01       		.uleb128 0x1
 15177 142e 50       		.byte	0x50
 15178 142f 9F       		.byte	0x9f
 15179 1430 340D0000 		.4byte	.LVL203-.Ltext0
 15180 1434 360D0000 		.4byte	.LVL204-.Ltext0
 15181 1438 0100     		.2byte	0x1
 15182 143a 50       		.byte	0x50
 15183 143b 360D0000 		.4byte	.LVL204-.Ltext0
 15184 143f 3C0D0000 		.4byte	.LFE85-.Ltext0
 15185 1443 0400     		.2byte	0x4
 15186 1445 F3       		.byte	0xf3
 15187 1446 01       		.uleb128 0x1
 15188 1447 50       		.byte	0x50
 15189 1448 9F       		.byte	0x9f
 15190 1449 00000000 		.4byte	0
 15191 144d 00000000 		.4byte	0
 15192              	.LLST32:
 15193 1451 A40C0000 		.4byte	.LVL189-.Ltext0
 15194 1455 BA0C0000 		.4byte	.LVL190-.Ltext0
 15195 1459 0100     		.2byte	0x1
 15196 145b 50       		.byte	0x50
 15197 145c BA0C0000 		.4byte	.LVL190-.Ltext0
 15198 1460 BC0C0000 		.4byte	.LVL191-.Ltext0
 15199 1464 0400     		.2byte	0x4
 15200 1466 F3       		.byte	0xf3
 15201 1467 01       		.uleb128 0x1
 15202 1468 50       		.byte	0x50
 15203 1469 9F       		.byte	0x9f
 15204 146a BC0C0000 		.4byte	.LVL191-.Ltext0
 15205 146e C20C0000 		.4byte	.LVL192-.Ltext0
 15206 1472 0100     		.2byte	0x1
 15207 1474 50       		.byte	0x50
 15208 1475 C20C0000 		.4byte	.LVL192-.Ltext0
 15209 1479 C40C0000 		.4byte	.LVL193-.Ltext0
 15210 147d 0400     		.2byte	0x4
 15211 147f F3       		.byte	0xf3
 15212 1480 01       		.uleb128 0x1
 15213 1481 50       		.byte	0x50
 15214 1482 9F       		.byte	0x9f
 15215 1483 C40C0000 		.4byte	.LVL193-.Ltext0
 15216 1487 CA0C0000 		.4byte	.LVL194-.Ltext0
 15217 148b 0100     		.2byte	0x1
 15218 148d 50       		.byte	0x50
 15219 148e CA0C0000 		.4byte	.LVL194-.Ltext0
 15220 1492 CC0C0000 		.4byte	.LVL195-.Ltext0
 15221 1496 0400     		.2byte	0x4
 15222 1498 F3       		.byte	0xf3
 15223 1499 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 332


 15224 149a 50       		.byte	0x50
 15225 149b 9F       		.byte	0x9f
 15226 149c CC0C0000 		.4byte	.LVL195-.Ltext0
 15227 14a0 D20C0000 		.4byte	.LVL196-.Ltext0
 15228 14a4 0100     		.2byte	0x1
 15229 14a6 50       		.byte	0x50
 15230 14a7 D20C0000 		.4byte	.LVL196-.Ltext0
 15231 14ab D40C0000 		.4byte	.LVL197-.Ltext0
 15232 14af 0400     		.2byte	0x4
 15233 14b1 F3       		.byte	0xf3
 15234 14b2 01       		.uleb128 0x1
 15235 14b3 50       		.byte	0x50
 15236 14b4 9F       		.byte	0x9f
 15237 14b5 D40C0000 		.4byte	.LVL197-.Ltext0
 15238 14b9 D80C0000 		.4byte	.LVL198-.Ltext0
 15239 14bd 0100     		.2byte	0x1
 15240 14bf 50       		.byte	0x50
 15241 14c0 D80C0000 		.4byte	.LVL198-.Ltext0
 15242 14c4 F00C0000 		.4byte	.LFE84-.Ltext0
 15243 14c8 0400     		.2byte	0x4
 15244 14ca F3       		.byte	0xf3
 15245 14cb 01       		.uleb128 0x1
 15246 14cc 50       		.byte	0x50
 15247 14cd 9F       		.byte	0x9f
 15248 14ce 00000000 		.4byte	0
 15249 14d2 00000000 		.4byte	0
 15250              	.LLST31:
 15251 14d6 9E0C0000 		.4byte	.LVL187-.Ltext0
 15252 14da A20C0000 		.4byte	.LVL188-.Ltext0
 15253 14de 0100     		.2byte	0x1
 15254 14e0 50       		.byte	0x50
 15255 14e1 A20C0000 		.4byte	.LVL188-.Ltext0
 15256 14e5 A40C0000 		.4byte	.LFE83-.Ltext0
 15257 14e9 0400     		.2byte	0x4
 15258 14eb F3       		.byte	0xf3
 15259 14ec 01       		.uleb128 0x1
 15260 14ed 50       		.byte	0x50
 15261 14ee 9F       		.byte	0x9f
 15262 14ef 00000000 		.4byte	0
 15263 14f3 00000000 		.4byte	0
 15264              	.LLST30:
 15265 14f7 940C0000 		.4byte	.LVL185-.Ltext0
 15266 14fb 9C0C0000 		.4byte	.LVL186-.Ltext0
 15267 14ff 0100     		.2byte	0x1
 15268 1501 50       		.byte	0x50
 15269 1502 9C0C0000 		.4byte	.LVL186-.Ltext0
 15270 1506 9E0C0000 		.4byte	.LFE82-.Ltext0
 15271 150a 0400     		.2byte	0x4
 15272 150c F3       		.byte	0xf3
 15273 150d 01       		.uleb128 0x1
 15274 150e 50       		.byte	0x50
 15275 150f 9F       		.byte	0x9f
 15276 1510 00000000 		.4byte	0
 15277 1514 00000000 		.4byte	0
 15278              	.LLST56:
 15279 1518 74130000 		.4byte	.LVL316-.Ltext0
 15280 151c 9C130000 		.4byte	.LVL317-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 333


 15281 1520 0100     		.2byte	0x1
 15282 1522 50       		.byte	0x50
 15283 1523 9C130000 		.4byte	.LVL317-.Ltext0
 15284 1527 AA130000 		.4byte	.LVL319-.Ltext0
 15285 152b 0400     		.2byte	0x4
 15286 152d F3       		.byte	0xf3
 15287 152e 01       		.uleb128 0x1
 15288 152f 50       		.byte	0x50
 15289 1530 9F       		.byte	0x9f
 15290 1531 AA130000 		.4byte	.LVL319-.Ltext0
 15291 1535 B0130000 		.4byte	.LVL320-.Ltext0
 15292 1539 1500     		.2byte	0x15
 15293 153b 74       		.byte	0x74
 15294 153c 00       		.sleb128 0
 15295 153d 12       		.byte	0x12
 15296 153e 0A       		.byte	0xa
 15297 153f FFFF     		.2byte	0xffff
 15298 1541 1A       		.byte	0x1a
 15299 1542 34       		.byte	0x34
 15300 1543 16       		.byte	0x16
 15301 1544 14       		.byte	0x14
 15302 1545 0A       		.byte	0xa
 15303 1546 FFFF     		.2byte	0xffff
 15304 1548 1A       		.byte	0x1a
 15305 1549 2B       		.byte	0x2b
 15306 154a 28       		.byte	0x28
 15307 154b 0100     		.2byte	0x1
 15308 154d 16       		.byte	0x16
 15309 154e 13       		.byte	0x13
 15310 154f 9F       		.byte	0x9f
 15311 1550 F2130000 		.4byte	.LVL323-.Ltext0
 15312 1554 F4130000 		.4byte	.LVL324-.Ltext0
 15313 1558 0100     		.2byte	0x1
 15314 155a 50       		.byte	0x50
 15315 155b F4130000 		.4byte	.LVL324-.Ltext0
 15316 155f FC130000 		.4byte	.LVL326-.Ltext0
 15317 1563 0400     		.2byte	0x4
 15318 1565 F3       		.byte	0xf3
 15319 1566 01       		.uleb128 0x1
 15320 1567 50       		.byte	0x50
 15321 1568 9F       		.byte	0x9f
 15322 1569 FC130000 		.4byte	.LVL326-.Ltext0
 15323 156d 08140000 		.4byte	.LVL327-.Ltext0
 15324 1571 0100     		.2byte	0x1
 15325 1573 50       		.byte	0x50
 15326 1574 00000000 		.4byte	0
 15327 1578 00000000 		.4byte	0
 15328              	.LLST29:
 15329 157c 780C0000 		.4byte	.LVL181-.Ltext0
 15330 1580 880C0000 		.4byte	.LVL182-.Ltext0
 15331 1584 0100     		.2byte	0x1
 15332 1586 50       		.byte	0x50
 15333 1587 880C0000 		.4byte	.LVL182-.Ltext0
 15334 158b 8A0C0000 		.4byte	.LVL183-.Ltext0
 15335 158f 0400     		.2byte	0x4
 15336 1591 F3       		.byte	0xf3
 15337 1592 01       		.uleb128 0x1
ARM GAS  /tmp/cci8Vpl3.s 			page 334


 15338 1593 50       		.byte	0x50
 15339 1594 9F       		.byte	0x9f
 15340 1595 8A0C0000 		.4byte	.LVL183-.Ltext0
 15341 1599 8E0C0000 		.4byte	.LVL184-.Ltext0
 15342 159d 0100     		.2byte	0x1
 15343 159f 50       		.byte	0x50
 15344 15a0 8E0C0000 		.4byte	.LVL184-.Ltext0
 15345 15a4 940C0000 		.4byte	.LFE80-.Ltext0
 15346 15a8 0400     		.2byte	0x4
 15347 15aa F3       		.byte	0xf3
 15348 15ab 01       		.uleb128 0x1
 15349 15ac 50       		.byte	0x50
 15350 15ad 9F       		.byte	0x9f
 15351 15ae 00000000 		.4byte	0
 15352 15b2 00000000 		.4byte	0
 15353              	.LLST28:
 15354 15b6 E40B0000 		.4byte	.LVL174-.Ltext0
 15355 15ba 0C0C0000 		.4byte	.LVL175-.Ltext0
 15356 15be 0100     		.2byte	0x1
 15357 15c0 50       		.byte	0x50
 15358 15c1 0C0C0000 		.4byte	.LVL175-.Ltext0
 15359 15c5 2E0C0000 		.4byte	.LVL177-.Ltext0
 15360 15c9 0400     		.2byte	0x4
 15361 15cb F3       		.byte	0xf3
 15362 15cc 01       		.uleb128 0x1
 15363 15cd 50       		.byte	0x50
 15364 15ce 9F       		.byte	0x9f
 15365 15cf 2E0C0000 		.4byte	.LVL177-.Ltext0
 15366 15d3 660C0000 		.4byte	.LVL178-.Ltext0
 15367 15d7 0100     		.2byte	0x1
 15368 15d9 50       		.byte	0x50
 15369 15da 660C0000 		.4byte	.LVL178-.Ltext0
 15370 15de 680C0000 		.4byte	.LVL179-.Ltext0
 15371 15e2 0400     		.2byte	0x4
 15372 15e4 F3       		.byte	0xf3
 15373 15e5 01       		.uleb128 0x1
 15374 15e6 50       		.byte	0x50
 15375 15e7 9F       		.byte	0x9f
 15376 15e8 680C0000 		.4byte	.LVL179-.Ltext0
 15377 15ec 6C0C0000 		.4byte	.LVL180-.Ltext0
 15378 15f0 0100     		.2byte	0x1
 15379 15f2 50       		.byte	0x50
 15380 15f3 6C0C0000 		.4byte	.LVL180-.Ltext0
 15381 15f7 780C0000 		.4byte	.LFE79-.Ltext0
 15382 15fb 0400     		.2byte	0x4
 15383 15fd F3       		.byte	0xf3
 15384 15fe 01       		.uleb128 0x1
 15385 15ff 50       		.byte	0x50
 15386 1600 9F       		.byte	0x9f
 15387 1601 00000000 		.4byte	0
 15388 1605 00000000 		.4byte	0
 15389              	.LLST27:
 15390 1609 A00B0000 		.4byte	.LVL171-.Ltext0
 15391 160d BA0B0000 		.4byte	.LVL172-.Ltext0
 15392 1611 0100     		.2byte	0x1
 15393 1613 50       		.byte	0x50
 15394 1614 BA0B0000 		.4byte	.LVL172-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 335


 15395 1618 BC0B0000 		.4byte	.LVL173-.Ltext0
 15396 161c 0400     		.2byte	0x4
 15397 161e F3       		.byte	0xf3
 15398 161f 01       		.uleb128 0x1
 15399 1620 50       		.byte	0x50
 15400 1621 9F       		.byte	0x9f
 15401 1622 BC0B0000 		.4byte	.LVL173-.Ltext0
 15402 1626 E40B0000 		.4byte	.LFE78-.Ltext0
 15403 162a 0100     		.2byte	0x1
 15404 162c 50       		.byte	0x50
 15405 162d 00000000 		.4byte	0
 15406 1631 00000000 		.4byte	0
 15407              	.LLST26:
 15408 1635 080B0000 		.4byte	.LVL166-.Ltext0
 15409 1639 160B0000 		.4byte	.LVL167-.Ltext0
 15410 163d 0100     		.2byte	0x1
 15411 163f 50       		.byte	0x50
 15412 1640 160B0000 		.4byte	.LVL167-.Ltext0
 15413 1644 840B0000 		.4byte	.LVL169-.Ltext0
 15414 1648 0400     		.2byte	0x4
 15415 164a F3       		.byte	0xf3
 15416 164b 01       		.uleb128 0x1
 15417 164c 50       		.byte	0x50
 15418 164d 9F       		.byte	0x9f
 15419 164e 840B0000 		.4byte	.LVL169-.Ltext0
 15420 1652 8A0B0000 		.4byte	.LVL170-.Ltext0
 15421 1656 0100     		.2byte	0x1
 15422 1658 50       		.byte	0x50
 15423 1659 8A0B0000 		.4byte	.LVL170-.Ltext0
 15424 165d A00B0000 		.4byte	.LFE77-.Ltext0
 15425 1661 0400     		.2byte	0x4
 15426 1663 F3       		.byte	0xf3
 15427 1664 01       		.uleb128 0x1
 15428 1665 50       		.byte	0x50
 15429 1666 9F       		.byte	0x9f
 15430 1667 00000000 		.4byte	0
 15431 166b 00000000 		.4byte	0
 15432              	.LLST25:
 15433 166f C40A0000 		.4byte	.LVL160-.Ltext0
 15434 1673 E60A0000 		.4byte	.LVL161-.Ltext0
 15435 1677 0100     		.2byte	0x1
 15436 1679 50       		.byte	0x50
 15437 167a E60A0000 		.4byte	.LVL161-.Ltext0
 15438 167e E80A0000 		.4byte	.LVL162-.Ltext0
 15439 1682 0400     		.2byte	0x4
 15440 1684 F3       		.byte	0xf3
 15441 1685 01       		.uleb128 0x1
 15442 1686 50       		.byte	0x50
 15443 1687 9F       		.byte	0x9f
 15444 1688 E80A0000 		.4byte	.LVL162-.Ltext0
 15445 168c FE0A0000 		.4byte	.LVL163-.Ltext0
 15446 1690 0100     		.2byte	0x1
 15447 1692 50       		.byte	0x50
 15448 1693 FE0A0000 		.4byte	.LVL163-.Ltext0
 15449 1697 000B0000 		.4byte	.LVL164-.Ltext0
 15450 169b 0400     		.2byte	0x4
 15451 169d F3       		.byte	0xf3
ARM GAS  /tmp/cci8Vpl3.s 			page 336


 15452 169e 01       		.uleb128 0x1
 15453 169f 50       		.byte	0x50
 15454 16a0 9F       		.byte	0x9f
 15455 16a1 000B0000 		.4byte	.LVL164-.Ltext0
 15456 16a5 020B0000 		.4byte	.LVL165-.Ltext0
 15457 16a9 0100     		.2byte	0x1
 15458 16ab 50       		.byte	0x50
 15459 16ac 020B0000 		.4byte	.LVL165-.Ltext0
 15460 16b0 080B0000 		.4byte	.LFE76-.Ltext0
 15461 16b4 0400     		.2byte	0x4
 15462 16b6 F3       		.byte	0xf3
 15463 16b7 01       		.uleb128 0x1
 15464 16b8 50       		.byte	0x50
 15465 16b9 9F       		.byte	0x9f
 15466 16ba 00000000 		.4byte	0
 15467 16be 00000000 		.4byte	0
 15468              	.LLST24:
 15469 16c2 2C0A0000 		.4byte	.LVL153-.Ltext0
 15470 16c6 720A0000 		.4byte	.LVL154-.Ltext0
 15471 16ca 0100     		.2byte	0x1
 15472 16cc 50       		.byte	0x50
 15473 16cd 720A0000 		.4byte	.LVL154-.Ltext0
 15474 16d1 960A0000 		.4byte	.LVL156-.Ltext0
 15475 16d5 0400     		.2byte	0x4
 15476 16d7 F3       		.byte	0xf3
 15477 16d8 01       		.uleb128 0x1
 15478 16d9 50       		.byte	0x50
 15479 16da 9F       		.byte	0x9f
 15480 16db 960A0000 		.4byte	.LVL156-.Ltext0
 15481 16df AC0A0000 		.4byte	.LVL157-.Ltext0
 15482 16e3 0100     		.2byte	0x1
 15483 16e5 50       		.byte	0x50
 15484 16e6 AC0A0000 		.4byte	.LVL157-.Ltext0
 15485 16ea AE0A0000 		.4byte	.LVL158-.Ltext0
 15486 16ee 0400     		.2byte	0x4
 15487 16f0 F3       		.byte	0xf3
 15488 16f1 01       		.uleb128 0x1
 15489 16f2 50       		.byte	0x50
 15490 16f3 9F       		.byte	0x9f
 15491 16f4 AE0A0000 		.4byte	.LVL158-.Ltext0
 15492 16f8 B80A0000 		.4byte	.LVL159-.Ltext0
 15493 16fc 0100     		.2byte	0x1
 15494 16fe 50       		.byte	0x50
 15495 16ff B80A0000 		.4byte	.LVL159-.Ltext0
 15496 1703 C40A0000 		.4byte	.LFE75-.Ltext0
 15497 1707 0400     		.2byte	0x4
 15498 1709 F3       		.byte	0xf3
 15499 170a 01       		.uleb128 0x1
 15500 170b 50       		.byte	0x50
 15501 170c 9F       		.byte	0x9f
 15502 170d 00000000 		.4byte	0
 15503 1711 00000000 		.4byte	0
 15504              	.LLST23:
 15505 1715 F0090000 		.4byte	.LVL150-.Ltext0
 15506 1719 060A0000 		.4byte	.LVL151-.Ltext0
 15507 171d 0100     		.2byte	0x1
 15508 171f 50       		.byte	0x50
ARM GAS  /tmp/cci8Vpl3.s 			page 337


 15509 1720 060A0000 		.4byte	.LVL151-.Ltext0
 15510 1724 080A0000 		.4byte	.LVL152-.Ltext0
 15511 1728 0400     		.2byte	0x4
 15512 172a F3       		.byte	0xf3
 15513 172b 01       		.uleb128 0x1
 15514 172c 50       		.byte	0x50
 15515 172d 9F       		.byte	0x9f
 15516 172e 080A0000 		.4byte	.LVL152-.Ltext0
 15517 1732 2C0A0000 		.4byte	.LFE74-.Ltext0
 15518 1736 0100     		.2byte	0x1
 15519 1738 50       		.byte	0x50
 15520 1739 00000000 		.4byte	0
 15521 173d 00000000 		.4byte	0
 15522              	.LLST19:
 15523 1741 00070000 		.4byte	.LVL113-.Ltext0
 15524 1745 1C070000 		.4byte	.LVL114-.Ltext0
 15525 1749 0100     		.2byte	0x1
 15526 174b 50       		.byte	0x50
 15527 174c 1C070000 		.4byte	.LVL114-.Ltext0
 15528 1750 5A070000 		.4byte	.LVL119-.Ltext0
 15529 1754 0100     		.2byte	0x1
 15530 1756 55       		.byte	0x55
 15531 1757 5A070000 		.4byte	.LVL119-.Ltext0
 15532 175b F2070000 		.4byte	.LVL134-.Ltext0
 15533 175f 0400     		.2byte	0x4
 15534 1761 F3       		.byte	0xf3
 15535 1762 01       		.uleb128 0x1
 15536 1763 50       		.byte	0x50
 15537 1764 9F       		.byte	0x9f
 15538 1765 F2070000 		.4byte	.LVL134-.Ltext0
 15539 1769 F6070000 		.4byte	.LVL135-.Ltext0
 15540 176d 0100     		.2byte	0x1
 15541 176f 50       		.byte	0x50
 15542 1770 F6070000 		.4byte	.LVL135-.Ltext0
 15543 1774 F8070000 		.4byte	.LVL136-.Ltext0
 15544 1778 0400     		.2byte	0x4
 15545 177a F3       		.byte	0xf3
 15546 177b 01       		.uleb128 0x1
 15547 177c 50       		.byte	0x50
 15548 177d 9F       		.byte	0x9f
 15549 177e F8070000 		.4byte	.LVL136-.Ltext0
 15550 1782 FA070000 		.4byte	.LVL137-.Ltext0
 15551 1786 0100     		.2byte	0x1
 15552 1788 50       		.byte	0x50
 15553 1789 FA070000 		.4byte	.LVL137-.Ltext0
 15554 178d 02080000 		.4byte	.LVL138-.Ltext0
 15555 1791 0100     		.2byte	0x1
 15556 1793 55       		.byte	0x55
 15557 1794 02080000 		.4byte	.LVL138-.Ltext0
 15558 1798 0C080000 		.4byte	.LFE72-.Ltext0
 15559 179c 0400     		.2byte	0x4
 15560 179e F3       		.byte	0xf3
 15561 179f 01       		.uleb128 0x1
 15562 17a0 50       		.byte	0x50
 15563 17a1 9F       		.byte	0x9f
 15564 17a2 00000000 		.4byte	0
 15565 17a6 00000000 		.4byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 338


 15566              	.LLST20:
 15567 17aa 42070000 		.4byte	.LVL117-.Ltext0
 15568 17ae 58070000 		.4byte	.LVL118-.Ltext0
 15569 17b2 0500     		.2byte	0x5
 15570 17b4 54       		.byte	0x54
 15571 17b5 93       		.byte	0x93
 15572 17b6 02       		.uleb128 0x2
 15573 17b7 93       		.byte	0x93
 15574 17b8 04       		.uleb128 0x4
 15575 17b9 58070000 		.4byte	.LVL118-.Ltext0
 15576 17bd 6E070000 		.4byte	.LVL120-.Ltext0
 15577 17c1 0800     		.2byte	0x8
 15578 17c3 54       		.byte	0x54
 15579 17c4 93       		.byte	0x93
 15580 17c5 02       		.uleb128 0x2
 15581 17c6 56       		.byte	0x56
 15582 17c7 93       		.byte	0x93
 15583 17c8 02       		.uleb128 0x2
 15584 17c9 93       		.byte	0x93
 15585 17ca 02       		.uleb128 0x2
 15586 17cb 6E070000 		.4byte	.LVL120-.Ltext0
 15587 17cf 90070000 		.4byte	.LVL123-.Ltext0
 15588 17d3 0900     		.2byte	0x9
 15589 17d5 54       		.byte	0x54
 15590 17d6 93       		.byte	0x93
 15591 17d7 02       		.uleb128 0x2
 15592 17d8 56       		.byte	0x56
 15593 17d9 93       		.byte	0x93
 15594 17da 02       		.uleb128 0x2
 15595 17db 55       		.byte	0x55
 15596 17dc 93       		.byte	0x93
 15597 17dd 02       		.uleb128 0x2
 15598 17de 90070000 		.4byte	.LVL123-.Ltext0
 15599 17e2 92070000 		.4byte	.LVL124-.Ltext0
 15600 17e6 0800     		.2byte	0x8
 15601 17e8 93       		.byte	0x93
 15602 17e9 02       		.uleb128 0x2
 15603 17ea 56       		.byte	0x56
 15604 17eb 93       		.byte	0x93
 15605 17ec 02       		.uleb128 0x2
 15606 17ed 55       		.byte	0x55
 15607 17ee 93       		.byte	0x93
 15608 17ef 02       		.uleb128 0x2
 15609 17f0 92070000 		.4byte	.LVL124-.Ltext0
 15610 17f4 A2070000 		.4byte	.LVL125-.Ltext0
 15611 17f8 0900     		.2byte	0x9
 15612 17fa 54       		.byte	0x54
 15613 17fb 93       		.byte	0x93
 15614 17fc 02       		.uleb128 0x2
 15615 17fd 56       		.byte	0x56
 15616 17fe 93       		.byte	0x93
 15617 17ff 02       		.uleb128 0x2
 15618 1800 55       		.byte	0x55
 15619 1801 93       		.byte	0x93
 15620 1802 02       		.uleb128 0x2
 15621 1803 A2070000 		.4byte	.LVL125-.Ltext0
 15622 1807 B2070000 		.4byte	.LVL126-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 339


 15623 180b 0900     		.2byte	0x9
 15624 180d 54       		.byte	0x54
 15625 180e 93       		.byte	0x93
 15626 180f 02       		.uleb128 0x2
 15627 1810 52       		.byte	0x52
 15628 1811 93       		.byte	0x93
 15629 1812 02       		.uleb128 0x2
 15630 1813 55       		.byte	0x55
 15631 1814 93       		.byte	0x93
 15632 1815 02       		.uleb128 0x2
 15633 1816 B2070000 		.4byte	.LVL126-.Ltext0
 15634 181a CE070000 		.4byte	.LVL129-.Ltext0
 15635 181e 0900     		.2byte	0x9
 15636 1820 54       		.byte	0x54
 15637 1821 93       		.byte	0x93
 15638 1822 02       		.uleb128 0x2
 15639 1823 52       		.byte	0x52
 15640 1824 93       		.byte	0x93
 15641 1825 02       		.uleb128 0x2
 15642 1826 53       		.byte	0x53
 15643 1827 93       		.byte	0x93
 15644 1828 02       		.uleb128 0x2
 15645 1829 CE070000 		.4byte	.LVL129-.Ltext0
 15646 182d D8070000 		.4byte	.LVL131-.Ltext0
 15647 1831 0800     		.2byte	0x8
 15648 1833 54       		.byte	0x54
 15649 1834 93       		.byte	0x93
 15650 1835 02       		.uleb128 0x2
 15651 1836 93       		.byte	0x93
 15652 1837 02       		.uleb128 0x2
 15653 1838 53       		.byte	0x53
 15654 1839 93       		.byte	0x93
 15655 183a 02       		.uleb128 0x2
 15656 183b D8070000 		.4byte	.LVL131-.Ltext0
 15657 183f EE070000 		.4byte	.LVL133-.Ltext0
 15658 1843 0500     		.2byte	0x5
 15659 1845 54       		.byte	0x54
 15660 1846 93       		.byte	0x93
 15661 1847 02       		.uleb128 0x2
 15662 1848 93       		.byte	0x93
 15663 1849 04       		.uleb128 0x4
 15664 184a 02080000 		.4byte	.LVL138-.Ltext0
 15665 184e 0C080000 		.4byte	.LFE72-.Ltext0
 15666 1852 0900     		.2byte	0x9
 15667 1854 54       		.byte	0x54
 15668 1855 93       		.byte	0x93
 15669 1856 02       		.uleb128 0x2
 15670 1857 56       		.byte	0x56
 15671 1858 93       		.byte	0x93
 15672 1859 02       		.uleb128 0x2
 15673 185a 55       		.byte	0x55
 15674 185b 93       		.byte	0x93
 15675 185c 02       		.uleb128 0x2
 15676 185d 00000000 		.4byte	0
 15677 1861 00000000 		.4byte	0
 15678              	.LLST21:
 15679 1865 82070000 		.4byte	.LVL122-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 340


 15680 1869 BA070000 		.4byte	.LVL127-.Ltext0
 15681 186d 3C00     		.2byte	0x3c
 15682 186f 7D       		.byte	0x7d
 15683 1870 00       		.sleb128 0
 15684 1871 94       		.byte	0x94
 15685 1872 01       		.byte	0x1
 15686 1873 08       		.byte	0x8
 15687 1874 FF       		.byte	0xff
 15688 1875 1A       		.byte	0x1a
 15689 1876 38       		.byte	0x38
 15690 1877 24       		.byte	0x24
 15691 1878 91       		.byte	0x91
 15692 1879 69       		.sleb128 -23
 15693 187a 94       		.byte	0x94
 15694 187b 01       		.byte	0x1
 15695 187c 08       		.byte	0x8
 15696 187d FF       		.byte	0xff
 15697 187e 1A       		.byte	0x1a
 15698 187f 21       		.byte	0x21
 15699 1880 9F       		.byte	0x9f
 15700 1881 93       		.byte	0x93
 15701 1882 02       		.uleb128 0x2
 15702 1883 91       		.byte	0x91
 15703 1884 6A       		.sleb128 -22
 15704 1885 94       		.byte	0x94
 15705 1886 01       		.byte	0x1
 15706 1887 08       		.byte	0x8
 15707 1888 FF       		.byte	0xff
 15708 1889 1A       		.byte	0x1a
 15709 188a 38       		.byte	0x38
 15710 188b 24       		.byte	0x24
 15711 188c 91       		.byte	0x91
 15712 188d 6B       		.sleb128 -21
 15713 188e 94       		.byte	0x94
 15714 188f 01       		.byte	0x1
 15715 1890 08       		.byte	0x8
 15716 1891 FF       		.byte	0xff
 15717 1892 1A       		.byte	0x1a
 15718 1893 21       		.byte	0x21
 15719 1894 9F       		.byte	0x9f
 15720 1895 93       		.byte	0x93
 15721 1896 02       		.uleb128 0x2
 15722 1897 91       		.byte	0x91
 15723 1898 6C       		.sleb128 -20
 15724 1899 94       		.byte	0x94
 15725 189a 01       		.byte	0x1
 15726 189b 08       		.byte	0x8
 15727 189c FF       		.byte	0xff
 15728 189d 1A       		.byte	0x1a
 15729 189e 38       		.byte	0x38
 15730 189f 24       		.byte	0x24
 15731 18a0 91       		.byte	0x91
 15732 18a1 6D       		.sleb128 -19
 15733 18a2 94       		.byte	0x94
 15734 18a3 01       		.byte	0x1
 15735 18a4 08       		.byte	0x8
 15736 18a5 FF       		.byte	0xff
ARM GAS  /tmp/cci8Vpl3.s 			page 341


 15737 18a6 1A       		.byte	0x1a
 15738 18a7 21       		.byte	0x21
 15739 18a8 9F       		.byte	0x9f
 15740 18a9 93       		.byte	0x93
 15741 18aa 02       		.uleb128 0x2
 15742 18ab BA070000 		.4byte	.LVL127-.Ltext0
 15743 18af C6070000 		.4byte	.LVL128-.Ltext0
 15744 18b3 2A00     		.2byte	0x2a
 15745 18b5 93       		.byte	0x93
 15746 18b6 02       		.uleb128 0x2
 15747 18b7 91       		.byte	0x91
 15748 18b8 6A       		.sleb128 -22
 15749 18b9 94       		.byte	0x94
 15750 18ba 01       		.byte	0x1
 15751 18bb 08       		.byte	0x8
 15752 18bc FF       		.byte	0xff
 15753 18bd 1A       		.byte	0x1a
 15754 18be 38       		.byte	0x38
 15755 18bf 24       		.byte	0x24
 15756 18c0 91       		.byte	0x91
 15757 18c1 6B       		.sleb128 -21
 15758 18c2 94       		.byte	0x94
 15759 18c3 01       		.byte	0x1
 15760 18c4 08       		.byte	0x8
 15761 18c5 FF       		.byte	0xff
 15762 18c6 1A       		.byte	0x1a
 15763 18c7 21       		.byte	0x21
 15764 18c8 9F       		.byte	0x9f
 15765 18c9 93       		.byte	0x93
 15766 18ca 02       		.uleb128 0x2
 15767 18cb 91       		.byte	0x91
 15768 18cc 6C       		.sleb128 -20
 15769 18cd 94       		.byte	0x94
 15770 18ce 01       		.byte	0x1
 15771 18cf 08       		.byte	0x8
 15772 18d0 FF       		.byte	0xff
 15773 18d1 1A       		.byte	0x1a
 15774 18d2 38       		.byte	0x38
 15775 18d3 24       		.byte	0x24
 15776 18d4 91       		.byte	0x91
 15777 18d5 6D       		.sleb128 -19
 15778 18d6 94       		.byte	0x94
 15779 18d7 01       		.byte	0x1
 15780 18d8 08       		.byte	0x8
 15781 18d9 FF       		.byte	0xff
 15782 18da 1A       		.byte	0x1a
 15783 18db 21       		.byte	0x21
 15784 18dc 9F       		.byte	0x9f
 15785 18dd 93       		.byte	0x93
 15786 18de 02       		.uleb128 0x2
 15787 18df C6070000 		.4byte	.LVL128-.Ltext0
 15788 18e3 D2070000 		.4byte	.LVL130-.Ltext0
 15789 18e7 1600     		.2byte	0x16
 15790 18e9 93       		.byte	0x93
 15791 18ea 04       		.uleb128 0x4
 15792 18eb 91       		.byte	0x91
 15793 18ec 6C       		.sleb128 -20
ARM GAS  /tmp/cci8Vpl3.s 			page 342


 15794 18ed 94       		.byte	0x94
 15795 18ee 01       		.byte	0x1
 15796 18ef 08       		.byte	0x8
 15797 18f0 FF       		.byte	0xff
 15798 18f1 1A       		.byte	0x1a
 15799 18f2 38       		.byte	0x38
 15800 18f3 24       		.byte	0x24
 15801 18f4 91       		.byte	0x91
 15802 18f5 6D       		.sleb128 -19
 15803 18f6 94       		.byte	0x94
 15804 18f7 01       		.byte	0x1
 15805 18f8 08       		.byte	0x8
 15806 18f9 FF       		.byte	0xff
 15807 18fa 1A       		.byte	0x1a
 15808 18fb 21       		.byte	0x21
 15809 18fc 9F       		.byte	0x9f
 15810 18fd 93       		.byte	0x93
 15811 18fe 02       		.uleb128 0x2
 15812 18ff 00000000 		.4byte	0
 15813 1903 00000000 		.4byte	0
 15814              	.LLST22:
 15815 1907 2C070000 		.4byte	.LVL116-.Ltext0
 15816 190b 7D070000 		.4byte	.LVL121-1-.Ltext0
 15817 190f 3000     		.2byte	0x30
 15818 1911 7D       		.byte	0x7d
 15819 1912 00       		.sleb128 0
 15820 1913 94       		.byte	0x94
 15821 1914 01       		.byte	0x1
 15822 1915 34       		.byte	0x34
 15823 1916 25       		.byte	0x25
 15824 1917 08       		.byte	0x8
 15825 1918 FF       		.byte	0xff
 15826 1919 1A       		.byte	0x1a
 15827 191a 23       		.byte	0x23
 15828 191b 08       		.uleb128 0x8
 15829 191c 3F       		.byte	0x3f
 15830 191d 1A       		.byte	0x1a
 15831 191e 9F       		.byte	0x9f
 15832 191f 93       		.byte	0x93
 15833 1920 02       		.uleb128 0x2
 15834 1921 91       		.byte	0x91
 15835 1922 69       		.sleb128 -23
 15836 1923 94       		.byte	0x94
 15837 1924 01       		.byte	0x1
 15838 1925 34       		.byte	0x34
 15839 1926 25       		.byte	0x25
 15840 1927 08       		.byte	0x8
 15841 1928 FF       		.byte	0xff
 15842 1929 1A       		.byte	0x1a
 15843 192a 23       		.byte	0x23
 15844 192b 08       		.uleb128 0x8
 15845 192c 3F       		.byte	0x3f
 15846 192d 1A       		.byte	0x1a
 15847 192e 9F       		.byte	0x9f
 15848 192f 93       		.byte	0x93
 15849 1930 02       		.uleb128 0x2
 15850 1931 91       		.byte	0x91
ARM GAS  /tmp/cci8Vpl3.s 			page 343


 15851 1932 6A       		.sleb128 -22
 15852 1933 94       		.byte	0x94
 15853 1934 01       		.byte	0x1
 15854 1935 34       		.byte	0x34
 15855 1936 25       		.byte	0x25
 15856 1937 08       		.byte	0x8
 15857 1938 FF       		.byte	0xff
 15858 1939 1A       		.byte	0x1a
 15859 193a 23       		.byte	0x23
 15860 193b 08       		.uleb128 0x8
 15861 193c 3F       		.byte	0x3f
 15862 193d 1A       		.byte	0x1a
 15863 193e 9F       		.byte	0x9f
 15864 193f 93       		.byte	0x93
 15865 1940 02       		.uleb128 0x2
 15866 1941 00000000 		.4byte	0
 15867 1945 00000000 		.4byte	0
 15868              	.LLST16:
 15869 1949 74060000 		.4byte	.LVL97-.Ltext0
 15870 194d 88060000 		.4byte	.LVL99-.Ltext0
 15871 1951 0100     		.2byte	0x1
 15872 1953 50       		.byte	0x50
 15873 1954 88060000 		.4byte	.LVL99-.Ltext0
 15874 1958 E4060000 		.4byte	.LVL110-.Ltext0
 15875 195c 0100     		.2byte	0x1
 15876 195e 56       		.byte	0x56
 15877 195f E4060000 		.4byte	.LVL110-.Ltext0
 15878 1963 EA060000 		.4byte	.LVL111-.Ltext0
 15879 1967 0400     		.2byte	0x4
 15880 1969 F3       		.byte	0xf3
 15881 196a 01       		.uleb128 0x1
 15882 196b 50       		.byte	0x50
 15883 196c 9F       		.byte	0x9f
 15884 196d EA060000 		.4byte	.LVL111-.Ltext0
 15885 1971 F0060000 		.4byte	.LVL112-.Ltext0
 15886 1975 0100     		.2byte	0x1
 15887 1977 50       		.byte	0x50
 15888 1978 F0060000 		.4byte	.LVL112-.Ltext0
 15889 197c 00070000 		.4byte	.LFE71-.Ltext0
 15890 1980 0100     		.2byte	0x1
 15891 1982 56       		.byte	0x56
 15892 1983 00000000 		.4byte	0
 15893 1987 00000000 		.4byte	0
 15894              	.LLST17:
 15895 198b 74060000 		.4byte	.LVL97-.Ltext0
 15896 198f 86060000 		.4byte	.LVL98-.Ltext0
 15897 1993 0100     		.2byte	0x1
 15898 1995 51       		.byte	0x51
 15899 1996 86060000 		.4byte	.LVL98-.Ltext0
 15900 199a EA060000 		.4byte	.LVL111-.Ltext0
 15901 199e 0400     		.2byte	0x4
 15902 19a0 F3       		.byte	0xf3
 15903 19a1 01       		.uleb128 0x1
 15904 19a2 51       		.byte	0x51
 15905 19a3 9F       		.byte	0x9f
 15906 19a4 EA060000 		.4byte	.LVL111-.Ltext0
 15907 19a8 F0060000 		.4byte	.LVL112-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 344


 15908 19ac 0100     		.2byte	0x1
 15909 19ae 51       		.byte	0x51
 15910 19af F0060000 		.4byte	.LVL112-.Ltext0
 15911 19b3 00070000 		.4byte	.LFE71-.Ltext0
 15912 19b7 0400     		.2byte	0x4
 15913 19b9 F3       		.byte	0xf3
 15914 19ba 01       		.uleb128 0x1
 15915 19bb 51       		.byte	0x51
 15916 19bc 9F       		.byte	0x9f
 15917 19bd 00000000 		.4byte	0
 15918 19c1 00000000 		.4byte	0
 15919              	.LLST18:
 15920 19c5 98060000 		.4byte	.LVL101-.Ltext0
 15921 19c9 AD060000 		.4byte	.LVL102-1-.Ltext0
 15922 19cd 1200     		.2byte	0x12
 15923 19cf 91       		.byte	0x91
 15924 19d0 64       		.sleb128 -28
 15925 19d1 94       		.byte	0x94
 15926 19d2 01       		.byte	0x1
 15927 19d3 08       		.byte	0x8
 15928 19d4 FF       		.byte	0xff
 15929 19d5 1A       		.byte	0x1a
 15930 19d6 38       		.byte	0x38
 15931 19d7 24       		.byte	0x24
 15932 19d8 91       		.byte	0x91
 15933 19d9 65       		.sleb128 -27
 15934 19da 94       		.byte	0x94
 15935 19db 01       		.byte	0x1
 15936 19dc 08       		.byte	0x8
 15937 19dd FF       		.byte	0xff
 15938 19de 1A       		.byte	0x1a
 15939 19df 21       		.byte	0x21
 15940 19e0 9F       		.byte	0x9f
 15941 19e1 00000000 		.4byte	0
 15942 19e5 00000000 		.4byte	0
 15943              	.LLST14:
 15944 19e9 0C060000 		.4byte	.LVL90-.Ltext0
 15945 19ed 22060000 		.4byte	.LVL92-.Ltext0
 15946 19f1 0100     		.2byte	0x1
 15947 19f3 50       		.byte	0x50
 15948 19f4 22060000 		.4byte	.LVL92-.Ltext0
 15949 19f8 62060000 		.4byte	.LVL94-.Ltext0
 15950 19fc 0100     		.2byte	0x1
 15951 19fe 54       		.byte	0x54
 15952 19ff 62060000 		.4byte	.LVL94-.Ltext0
 15953 1a03 68060000 		.4byte	.LVL95-.Ltext0
 15954 1a07 0100     		.2byte	0x1
 15955 1a09 50       		.byte	0x50
 15956 1a0a 68060000 		.4byte	.LVL95-.Ltext0
 15957 1a0e 6A060000 		.4byte	.LVL96-.Ltext0
 15958 1a12 0400     		.2byte	0x4
 15959 1a14 F3       		.byte	0xf3
 15960 1a15 01       		.uleb128 0x1
 15961 1a16 50       		.byte	0x50
 15962 1a17 9F       		.byte	0x9f
 15963 1a18 6A060000 		.4byte	.LVL96-.Ltext0
 15964 1a1c 74060000 		.4byte	.LFE70-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 345


 15965 1a20 0100     		.2byte	0x1
 15966 1a22 54       		.byte	0x54
 15967 1a23 00000000 		.4byte	0
 15968 1a27 00000000 		.4byte	0
 15969              	.LLST15:
 15970 1a2b 0C060000 		.4byte	.LVL90-.Ltext0
 15971 1a2f 20060000 		.4byte	.LVL91-.Ltext0
 15972 1a33 0100     		.2byte	0x1
 15973 1a35 51       		.byte	0x51
 15974 1a36 20060000 		.4byte	.LVL91-.Ltext0
 15975 1a3a 62060000 		.4byte	.LVL94-.Ltext0
 15976 1a3e 0400     		.2byte	0x4
 15977 1a40 F3       		.byte	0xf3
 15978 1a41 01       		.uleb128 0x1
 15979 1a42 51       		.byte	0x51
 15980 1a43 9F       		.byte	0x9f
 15981 1a44 62060000 		.4byte	.LVL94-.Ltext0
 15982 1a48 6A060000 		.4byte	.LVL96-.Ltext0
 15983 1a4c 0100     		.2byte	0x1
 15984 1a4e 51       		.byte	0x51
 15985 1a4f 6A060000 		.4byte	.LVL96-.Ltext0
 15986 1a53 74060000 		.4byte	.LFE70-.Ltext0
 15987 1a57 0400     		.2byte	0x4
 15988 1a59 F3       		.byte	0xf3
 15989 1a5a 01       		.uleb128 0x1
 15990 1a5b 51       		.byte	0x51
 15991 1a5c 9F       		.byte	0x9f
 15992 1a5d 00000000 		.4byte	0
 15993 1a61 00000000 		.4byte	0
 15994              	.LLST12:
 15995 1a65 A4050000 		.4byte	.LVL83-.Ltext0
 15996 1a69 BA050000 		.4byte	.LVL85-.Ltext0
 15997 1a6d 0100     		.2byte	0x1
 15998 1a6f 50       		.byte	0x50
 15999 1a70 BA050000 		.4byte	.LVL85-.Ltext0
 16000 1a74 FA050000 		.4byte	.LVL87-.Ltext0
 16001 1a78 0100     		.2byte	0x1
 16002 1a7a 54       		.byte	0x54
 16003 1a7b FA050000 		.4byte	.LVL87-.Ltext0
 16004 1a7f 00060000 		.4byte	.LVL88-.Ltext0
 16005 1a83 0100     		.2byte	0x1
 16006 1a85 50       		.byte	0x50
 16007 1a86 00060000 		.4byte	.LVL88-.Ltext0
 16008 1a8a 02060000 		.4byte	.LVL89-.Ltext0
 16009 1a8e 0400     		.2byte	0x4
 16010 1a90 F3       		.byte	0xf3
 16011 1a91 01       		.uleb128 0x1
 16012 1a92 50       		.byte	0x50
 16013 1a93 9F       		.byte	0x9f
 16014 1a94 02060000 		.4byte	.LVL89-.Ltext0
 16015 1a98 0C060000 		.4byte	.LFE69-.Ltext0
 16016 1a9c 0100     		.2byte	0x1
 16017 1a9e 54       		.byte	0x54
 16018 1a9f 00000000 		.4byte	0
 16019 1aa3 00000000 		.4byte	0
 16020              	.LLST13:
 16021 1aa7 A4050000 		.4byte	.LVL83-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 346


 16022 1aab B8050000 		.4byte	.LVL84-.Ltext0
 16023 1aaf 0100     		.2byte	0x1
 16024 1ab1 51       		.byte	0x51
 16025 1ab2 B8050000 		.4byte	.LVL84-.Ltext0
 16026 1ab6 FA050000 		.4byte	.LVL87-.Ltext0
 16027 1aba 0400     		.2byte	0x4
 16028 1abc F3       		.byte	0xf3
 16029 1abd 01       		.uleb128 0x1
 16030 1abe 51       		.byte	0x51
 16031 1abf 9F       		.byte	0x9f
 16032 1ac0 FA050000 		.4byte	.LVL87-.Ltext0
 16033 1ac4 02060000 		.4byte	.LVL89-.Ltext0
 16034 1ac8 0100     		.2byte	0x1
 16035 1aca 51       		.byte	0x51
 16036 1acb 02060000 		.4byte	.LVL89-.Ltext0
 16037 1acf 0C060000 		.4byte	.LFE69-.Ltext0
 16038 1ad3 0400     		.2byte	0x4
 16039 1ad5 F3       		.byte	0xf3
 16040 1ad6 01       		.uleb128 0x1
 16041 1ad7 51       		.byte	0x51
 16042 1ad8 9F       		.byte	0x9f
 16043 1ad9 00000000 		.4byte	0
 16044 1add 00000000 		.4byte	0
 16045              	.LLST55:
 16046 1ae1 98120000 		.4byte	.LVL301-.Ltext0
 16047 1ae5 A6120000 		.4byte	.LVL302-.Ltext0
 16048 1ae9 0100     		.2byte	0x1
 16049 1aeb 50       		.byte	0x50
 16050 1aec A6120000 		.4byte	.LVL302-.Ltext0
 16051 1af0 DA120000 		.4byte	.LVL305-.Ltext0
 16052 1af4 0400     		.2byte	0x4
 16053 1af6 F3       		.byte	0xf3
 16054 1af7 01       		.uleb128 0x1
 16055 1af8 50       		.byte	0x50
 16056 1af9 9F       		.byte	0x9f
 16057 1afa DA120000 		.4byte	.LVL305-.Ltext0
 16058 1afe DC120000 		.4byte	.LVL306-.Ltext0
 16059 1b02 0100     		.2byte	0x1
 16060 1b04 50       		.byte	0x50
 16061 1b05 DC120000 		.4byte	.LVL306-.Ltext0
 16062 1b09 5E130000 		.4byte	.LVL314-.Ltext0
 16063 1b0d 0400     		.2byte	0x4
 16064 1b0f F3       		.byte	0xf3
 16065 1b10 01       		.uleb128 0x1
 16066 1b11 50       		.byte	0x50
 16067 1b12 9F       		.byte	0x9f
 16068 1b13 5E130000 		.4byte	.LVL314-.Ltext0
 16069 1b17 64130000 		.4byte	.LVL315-.Ltext0
 16070 1b1b 0100     		.2byte	0x1
 16071 1b1d 50       		.byte	0x50
 16072 1b1e 64130000 		.4byte	.LVL315-.Ltext0
 16073 1b22 74130000 		.4byte	.LFE68-.Ltext0
 16074 1b26 0400     		.2byte	0x4
 16075 1b28 F3       		.byte	0xf3
 16076 1b29 01       		.uleb128 0x1
 16077 1b2a 50       		.byte	0x50
 16078 1b2b 9F       		.byte	0x9f
ARM GAS  /tmp/cci8Vpl3.s 			page 347


 16079 1b2c 00000000 		.4byte	0
 16080 1b30 00000000 		.4byte	0
 16081              	.LLST58:
 16082 1b34 94150000 		.4byte	.LVL341-.Ltext0
 16083 1b38 96150000 		.4byte	.LVL342-.Ltext0
 16084 1b3c 0600     		.2byte	0x6
 16085 1b3e 71       		.byte	0x71
 16086 1b3f 00       		.sleb128 0
 16087 1b40 73       		.byte	0x73
 16088 1b41 00       		.sleb128 0
 16089 1b42 21       		.byte	0x21
 16090 1b43 9F       		.byte	0x9f
 16091 1b44 96150000 		.4byte	.LVL342-.Ltext0
 16092 1b48 A4150000 		.4byte	.LVL343-.Ltext0
 16093 1b4c 1B00     		.2byte	0x1b
 16094 1b4e 91       		.byte	0x91
 16095 1b4f 75       		.sleb128 -11
 16096 1b50 94       		.byte	0x94
 16097 1b51 01       		.byte	0x1
 16098 1b52 08       		.byte	0x8
 16099 1b53 FF       		.byte	0xff
 16100 1b54 1A       		.byte	0x1a
 16101 1b55 32       		.byte	0x32
 16102 1b56 24       		.byte	0x24
 16103 1b57 34       		.byte	0x34
 16104 1b58 1A       		.byte	0x1a
 16105 1b59 91       		.byte	0x91
 16106 1b5a 73       		.sleb128 -13
 16107 1b5b 94       		.byte	0x94
 16108 1b5c 01       		.byte	0x1
 16109 1b5d 08       		.byte	0x8
 16110 1b5e FF       		.byte	0xff
 16111 1b5f 1A       		.byte	0x1a
 16112 1b60 31       		.byte	0x31
 16113 1b61 24       		.byte	0x24
 16114 1b62 32       		.byte	0x32
 16115 1b63 1A       		.byte	0x1a
 16116 1b64 21       		.byte	0x21
 16117 1b65 73       		.byte	0x73
 16118 1b66 00       		.sleb128 0
 16119 1b67 21       		.byte	0x21
 16120 1b68 9F       		.byte	0x9f
 16121 1b69 A4150000 		.4byte	.LVL343-.Ltext0
 16122 1b6d A6150000 		.4byte	.LVL344-.Ltext0
 16123 1b71 2200     		.2byte	0x22
 16124 1b73 91       		.byte	0x91
 16125 1b74 75       		.sleb128 -11
 16126 1b75 94       		.byte	0x94
 16127 1b76 01       		.byte	0x1
 16128 1b77 08       		.byte	0x8
 16129 1b78 FF       		.byte	0xff
 16130 1b79 1A       		.byte	0x1a
 16131 1b7a 32       		.byte	0x32
 16132 1b7b 24       		.byte	0x24
 16133 1b7c 34       		.byte	0x34
 16134 1b7d 1A       		.byte	0x1a
 16135 1b7e 91       		.byte	0x91
ARM GAS  /tmp/cci8Vpl3.s 			page 348


 16136 1b7f 73       		.sleb128 -13
 16137 1b80 94       		.byte	0x94
 16138 1b81 01       		.byte	0x1
 16139 1b82 08       		.byte	0x8
 16140 1b83 FF       		.byte	0xff
 16141 1b84 1A       		.byte	0x1a
 16142 1b85 31       		.byte	0x31
 16143 1b86 24       		.byte	0x24
 16144 1b87 32       		.byte	0x32
 16145 1b88 1A       		.byte	0x1a
 16146 1b89 21       		.byte	0x21
 16147 1b8a 91       		.byte	0x91
 16148 1b8b 71       		.sleb128 -15
 16149 1b8c 94       		.byte	0x94
 16150 1b8d 01       		.byte	0x1
 16151 1b8e 31       		.byte	0x31
 16152 1b8f 1A       		.byte	0x1a
 16153 1b90 08       		.byte	0x8
 16154 1b91 FF       		.byte	0xff
 16155 1b92 1A       		.byte	0x1a
 16156 1b93 21       		.byte	0x21
 16157 1b94 9F       		.byte	0x9f
 16158 1b95 2A160000 		.4byte	.LVL352-.Ltext0
 16159 1b99 2E160000 		.4byte	.LVL353-.Ltext0
 16160 1b9d 1B00     		.2byte	0x1b
 16161 1b9f 91       		.byte	0x91
 16162 1ba0 75       		.sleb128 -11
 16163 1ba1 94       		.byte	0x94
 16164 1ba2 01       		.byte	0x1
 16165 1ba3 08       		.byte	0x8
 16166 1ba4 FF       		.byte	0xff
 16167 1ba5 1A       		.byte	0x1a
 16168 1ba6 32       		.byte	0x32
 16169 1ba7 24       		.byte	0x24
 16170 1ba8 34       		.byte	0x34
 16171 1ba9 1A       		.byte	0x1a
 16172 1baa 91       		.byte	0x91
 16173 1bab 73       		.sleb128 -13
 16174 1bac 94       		.byte	0x94
 16175 1bad 01       		.byte	0x1
 16176 1bae 08       		.byte	0x8
 16177 1baf FF       		.byte	0xff
 16178 1bb0 1A       		.byte	0x1a
 16179 1bb1 31       		.byte	0x31
 16180 1bb2 24       		.byte	0x24
 16181 1bb3 32       		.byte	0x32
 16182 1bb4 1A       		.byte	0x1a
 16183 1bb5 21       		.byte	0x21
 16184 1bb6 73       		.byte	0x73
 16185 1bb7 00       		.sleb128 0
 16186 1bb8 21       		.byte	0x21
 16187 1bb9 9F       		.byte	0x9f
 16188 1bba 2E160000 		.4byte	.LVL353-.Ltext0
 16189 1bbe 32160000 		.4byte	.LVL354-.Ltext0
 16190 1bc2 2200     		.2byte	0x22
 16191 1bc4 91       		.byte	0x91
 16192 1bc5 75       		.sleb128 -11
ARM GAS  /tmp/cci8Vpl3.s 			page 349


 16193 1bc6 94       		.byte	0x94
 16194 1bc7 01       		.byte	0x1
 16195 1bc8 08       		.byte	0x8
 16196 1bc9 FF       		.byte	0xff
 16197 1bca 1A       		.byte	0x1a
 16198 1bcb 32       		.byte	0x32
 16199 1bcc 24       		.byte	0x24
 16200 1bcd 34       		.byte	0x34
 16201 1bce 1A       		.byte	0x1a
 16202 1bcf 91       		.byte	0x91
 16203 1bd0 73       		.sleb128 -13
 16204 1bd1 94       		.byte	0x94
 16205 1bd2 01       		.byte	0x1
 16206 1bd3 08       		.byte	0x8
 16207 1bd4 FF       		.byte	0xff
 16208 1bd5 1A       		.byte	0x1a
 16209 1bd6 31       		.byte	0x31
 16210 1bd7 24       		.byte	0x24
 16211 1bd8 32       		.byte	0x32
 16212 1bd9 1A       		.byte	0x1a
 16213 1bda 21       		.byte	0x21
 16214 1bdb 91       		.byte	0x91
 16215 1bdc 71       		.sleb128 -15
 16216 1bdd 94       		.byte	0x94
 16217 1bde 01       		.byte	0x1
 16218 1bdf 31       		.byte	0x31
 16219 1be0 1A       		.byte	0x1a
 16220 1be1 08       		.byte	0x8
 16221 1be2 FF       		.byte	0xff
 16222 1be3 1A       		.byte	0x1a
 16223 1be4 21       		.byte	0x21
 16224 1be5 9F       		.byte	0x9f
 16225 1be6 32160000 		.4byte	.LVL354-.Ltext0
 16226 1bea 37160000 		.4byte	.LVL355-1-.Ltext0
 16227 1bee 1B00     		.2byte	0x1b
 16228 1bf0 91       		.byte	0x91
 16229 1bf1 75       		.sleb128 -11
 16230 1bf2 94       		.byte	0x94
 16231 1bf3 01       		.byte	0x1
 16232 1bf4 08       		.byte	0x8
 16233 1bf5 FF       		.byte	0xff
 16234 1bf6 1A       		.byte	0x1a
 16235 1bf7 32       		.byte	0x32
 16236 1bf8 24       		.byte	0x24
 16237 1bf9 34       		.byte	0x34
 16238 1bfa 1A       		.byte	0x1a
 16239 1bfb 91       		.byte	0x91
 16240 1bfc 73       		.sleb128 -13
 16241 1bfd 94       		.byte	0x94
 16242 1bfe 01       		.byte	0x1
 16243 1bff 08       		.byte	0x8
 16244 1c00 FF       		.byte	0xff
 16245 1c01 1A       		.byte	0x1a
 16246 1c02 31       		.byte	0x31
 16247 1c03 24       		.byte	0x24
 16248 1c04 32       		.byte	0x32
 16249 1c05 1A       		.byte	0x1a
ARM GAS  /tmp/cci8Vpl3.s 			page 350


 16250 1c06 21       		.byte	0x21
 16251 1c07 73       		.byte	0x73
 16252 1c08 00       		.sleb128 0
 16253 1c09 21       		.byte	0x21
 16254 1c0a 9F       		.byte	0x9f
 16255 1c0b 3E160000 		.4byte	.LVL356-.Ltext0
 16256 1c0f 40160000 		.4byte	.LVL357-.Ltext0
 16257 1c13 1B00     		.2byte	0x1b
 16258 1c15 91       		.byte	0x91
 16259 1c16 75       		.sleb128 -11
 16260 1c17 94       		.byte	0x94
 16261 1c18 01       		.byte	0x1
 16262 1c19 08       		.byte	0x8
 16263 1c1a FF       		.byte	0xff
 16264 1c1b 1A       		.byte	0x1a
 16265 1c1c 32       		.byte	0x32
 16266 1c1d 24       		.byte	0x24
 16267 1c1e 34       		.byte	0x34
 16268 1c1f 1A       		.byte	0x1a
 16269 1c20 91       		.byte	0x91
 16270 1c21 73       		.sleb128 -13
 16271 1c22 94       		.byte	0x94
 16272 1c23 01       		.byte	0x1
 16273 1c24 08       		.byte	0x8
 16274 1c25 FF       		.byte	0xff
 16275 1c26 1A       		.byte	0x1a
 16276 1c27 31       		.byte	0x31
 16277 1c28 24       		.byte	0x24
 16278 1c29 32       		.byte	0x32
 16279 1c2a 1A       		.byte	0x1a
 16280 1c2b 21       		.byte	0x21
 16281 1c2c 73       		.byte	0x73
 16282 1c2d 00       		.sleb128 0
 16283 1c2e 21       		.byte	0x21
 16284 1c2f 9F       		.byte	0x9f
 16285 1c30 40160000 		.4byte	.LVL357-.Ltext0
 16286 1c34 4F160000 		.4byte	.LVL358-1-.Ltext0
 16287 1c38 2200     		.2byte	0x22
 16288 1c3a 91       		.byte	0x91
 16289 1c3b 75       		.sleb128 -11
 16290 1c3c 94       		.byte	0x94
 16291 1c3d 01       		.byte	0x1
 16292 1c3e 08       		.byte	0x8
 16293 1c3f FF       		.byte	0xff
 16294 1c40 1A       		.byte	0x1a
 16295 1c41 32       		.byte	0x32
 16296 1c42 24       		.byte	0x24
 16297 1c43 34       		.byte	0x34
 16298 1c44 1A       		.byte	0x1a
 16299 1c45 91       		.byte	0x91
 16300 1c46 73       		.sleb128 -13
 16301 1c47 94       		.byte	0x94
 16302 1c48 01       		.byte	0x1
 16303 1c49 08       		.byte	0x8
 16304 1c4a FF       		.byte	0xff
 16305 1c4b 1A       		.byte	0x1a
 16306 1c4c 31       		.byte	0x31
ARM GAS  /tmp/cci8Vpl3.s 			page 351


 16307 1c4d 24       		.byte	0x24
 16308 1c4e 32       		.byte	0x32
 16309 1c4f 1A       		.byte	0x1a
 16310 1c50 21       		.byte	0x21
 16311 1c51 91       		.byte	0x91
 16312 1c52 71       		.sleb128 -15
 16313 1c53 94       		.byte	0x94
 16314 1c54 01       		.byte	0x1
 16315 1c55 31       		.byte	0x31
 16316 1c56 1A       		.byte	0x1a
 16317 1c57 08       		.byte	0x8
 16318 1c58 FF       		.byte	0xff
 16319 1c59 1A       		.byte	0x1a
 16320 1c5a 21       		.byte	0x21
 16321 1c5b 9F       		.byte	0x9f
 16322 1c5c 56160000 		.4byte	.LVL359-.Ltext0
 16323 1c60 5A160000 		.4byte	.LVL360-.Ltext0
 16324 1c64 0500     		.2byte	0x5
 16325 1c66 73       		.byte	0x73
 16326 1c67 00       		.sleb128 0
 16327 1c68 3F       		.byte	0x3f
 16328 1c69 1A       		.byte	0x1a
 16329 1c6a 9F       		.byte	0x9f
 16330 1c6b 5A160000 		.4byte	.LVL360-.Ltext0
 16331 1c6f 6D160000 		.4byte	.LVL361-1-.Ltext0
 16332 1c73 0700     		.2byte	0x7
 16333 1c75 7D       		.byte	0x7d
 16334 1c76 00       		.sleb128 0
 16335 1c77 94       		.byte	0x94
 16336 1c78 01       		.byte	0x1
 16337 1c79 3F       		.byte	0x3f
 16338 1c7a 1A       		.byte	0x1a
 16339 1c7b 9F       		.byte	0x9f
 16340 1c7c 74160000 		.4byte	.LVL362-.Ltext0
 16341 1c80 79160000 		.4byte	.LVL363-1-.Ltext0
 16342 1c84 0700     		.2byte	0x7
 16343 1c86 7D       		.byte	0x7d
 16344 1c87 00       		.sleb128 0
 16345 1c88 94       		.byte	0x94
 16346 1c89 01       		.byte	0x1
 16347 1c8a 3F       		.byte	0x3f
 16348 1c8b 1A       		.byte	0x1a
 16349 1c8c 9F       		.byte	0x9f
 16350 1c8d 00000000 		.4byte	0
 16351 1c91 00000000 		.4byte	0
 16352              	.LLST10:
 16353 1c95 64050000 		.4byte	.LVL73-.Ltext0
 16354 1c99 88050000 		.4byte	.LVL75-.Ltext0
 16355 1c9d 0100     		.2byte	0x1
 16356 1c9f 50       		.byte	0x50
 16357 1ca0 88050000 		.4byte	.LVL75-.Ltext0
 16358 1ca4 8E050000 		.4byte	.LVL77-.Ltext0
 16359 1ca8 0400     		.2byte	0x4
 16360 1caa F3       		.byte	0xf3
 16361 1cab 01       		.uleb128 0x1
 16362 1cac 50       		.byte	0x50
 16363 1cad 9F       		.byte	0x9f
ARM GAS  /tmp/cci8Vpl3.s 			page 352


 16364 1cae 8E050000 		.4byte	.LVL77-.Ltext0
 16365 1cb2 92050000 		.4byte	.LVL78-.Ltext0
 16366 1cb6 0100     		.2byte	0x1
 16367 1cb8 50       		.byte	0x50
 16368 1cb9 92050000 		.4byte	.LVL78-.Ltext0
 16369 1cbd 94050000 		.4byte	.LVL79-.Ltext0
 16370 1cc1 0400     		.2byte	0x4
 16371 1cc3 F3       		.byte	0xf3
 16372 1cc4 01       		.uleb128 0x1
 16373 1cc5 50       		.byte	0x50
 16374 1cc6 9F       		.byte	0x9f
 16375 1cc7 94050000 		.4byte	.LVL79-.Ltext0
 16376 1ccb 98050000 		.4byte	.LVL80-.Ltext0
 16377 1ccf 0100     		.2byte	0x1
 16378 1cd1 50       		.byte	0x50
 16379 1cd2 98050000 		.4byte	.LVL80-.Ltext0
 16380 1cd6 9A050000 		.4byte	.LVL81-.Ltext0
 16381 1cda 0400     		.2byte	0x4
 16382 1cdc F3       		.byte	0xf3
 16383 1cdd 01       		.uleb128 0x1
 16384 1cde 50       		.byte	0x50
 16385 1cdf 9F       		.byte	0x9f
 16386 1ce0 9A050000 		.4byte	.LVL81-.Ltext0
 16387 1ce4 9E050000 		.4byte	.LVL82-.Ltext0
 16388 1ce8 0100     		.2byte	0x1
 16389 1cea 50       		.byte	0x50
 16390 1ceb 9E050000 		.4byte	.LVL82-.Ltext0
 16391 1cef A4050000 		.4byte	.LFE66-.Ltext0
 16392 1cf3 0400     		.2byte	0x4
 16393 1cf5 F3       		.byte	0xf3
 16394 1cf6 01       		.uleb128 0x1
 16395 1cf7 50       		.byte	0x50
 16396 1cf8 9F       		.byte	0x9f
 16397 1cf9 00000000 		.4byte	0
 16398 1cfd 00000000 		.4byte	0
 16399              	.LLST11:
 16400 1d01 64050000 		.4byte	.LVL73-.Ltext0
 16401 1d05 84050000 		.4byte	.LVL74-.Ltext0
 16402 1d09 0100     		.2byte	0x1
 16403 1d0b 51       		.byte	0x51
 16404 1d0c 84050000 		.4byte	.LVL74-.Ltext0
 16405 1d10 8B050000 		.4byte	.LVL76-1-.Ltext0
 16406 1d14 0100     		.2byte	0x1
 16407 1d16 53       		.byte	0x53
 16408 1d17 8B050000 		.4byte	.LVL76-1-.Ltext0
 16409 1d1b 8E050000 		.4byte	.LVL77-.Ltext0
 16410 1d1f 0400     		.2byte	0x4
 16411 1d21 F3       		.byte	0xf3
 16412 1d22 01       		.uleb128 0x1
 16413 1d23 51       		.byte	0x51
 16414 1d24 9F       		.byte	0x9f
 16415 1d25 8E050000 		.4byte	.LVL77-.Ltext0
 16416 1d29 A4050000 		.4byte	.LFE66-.Ltext0
 16417 1d2d 0100     		.2byte	0x1
 16418 1d2f 51       		.byte	0x51
 16419 1d30 00000000 		.4byte	0
 16420 1d34 00000000 		.4byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 353


 16421              	.LLST9:
 16422 1d38 10050000 		.4byte	.LVL66-.Ltext0
 16423 1d3c 24050000 		.4byte	.LVL67-.Ltext0
 16424 1d40 0200     		.2byte	0x2
 16425 1d42 30       		.byte	0x30
 16426 1d43 9F       		.byte	0x9f
 16427 1d44 24050000 		.4byte	.LVL67-.Ltext0
 16428 1d48 26050000 		.4byte	.LVL68-.Ltext0
 16429 1d4c 0100     		.2byte	0x1
 16430 1d4e 54       		.byte	0x54
 16431 1d4f 28050000 		.4byte	.LVL69-.Ltext0
 16432 1d53 5C050000 		.4byte	.LVL72-.Ltext0
 16433 1d57 0100     		.2byte	0x1
 16434 1d59 54       		.byte	0x54
 16435 1d5a 5C050000 		.4byte	.LVL72-.Ltext0
 16436 1d5e 64050000 		.4byte	.LFE65-.Ltext0
 16437 1d62 0200     		.2byte	0x2
 16438 1d64 30       		.byte	0x30
 16439 1d65 9F       		.byte	0x9f
 16440 1d66 00000000 		.4byte	0
 16441 1d6a 00000000 		.4byte	0
 16442              	.LLST0:
 16443 1d6e 00000000 		.4byte	.LVL0-.Ltext0
 16444 1d72 1A000000 		.4byte	.LVL1-.Ltext0
 16445 1d76 0100     		.2byte	0x1
 16446 1d78 50       		.byte	0x50
 16447 1d79 1A000000 		.4byte	.LVL1-.Ltext0
 16448 1d7d 3C000000 		.4byte	.LVL3-.Ltext0
 16449 1d81 0400     		.2byte	0x4
 16450 1d83 F3       		.byte	0xf3
 16451 1d84 01       		.uleb128 0x1
 16452 1d85 50       		.byte	0x50
 16453 1d86 9F       		.byte	0x9f
 16454 1d87 3C000000 		.4byte	.LVL3-.Ltext0
 16455 1d8b 5E000000 		.4byte	.LVL4-.Ltext0
 16456 1d8f 0100     		.2byte	0x1
 16457 1d91 50       		.byte	0x50
 16458 1d92 5E000000 		.4byte	.LVL4-.Ltext0
 16459 1d96 7A000000 		.4byte	.LVL6-.Ltext0
 16460 1d9a 0400     		.2byte	0x4
 16461 1d9c F3       		.byte	0xf3
 16462 1d9d 01       		.uleb128 0x1
 16463 1d9e 50       		.byte	0x50
 16464 1d9f 9F       		.byte	0x9f
 16465 1da0 7A000000 		.4byte	.LVL6-.Ltext0
 16466 1da4 82000000 		.4byte	.LVL7-.Ltext0
 16467 1da8 0100     		.2byte	0x1
 16468 1daa 50       		.byte	0x50
 16469 1dab 82000000 		.4byte	.LVL7-.Ltext0
 16470 1daf 88000000 		.4byte	.LVL8-.Ltext0
 16471 1db3 0400     		.2byte	0x4
 16472 1db5 F3       		.byte	0xf3
 16473 1db6 01       		.uleb128 0x1
 16474 1db7 50       		.byte	0x50
 16475 1db8 9F       		.byte	0x9f
 16476 1db9 88000000 		.4byte	.LVL8-.Ltext0
 16477 1dbd 92000000 		.4byte	.LVL9-.Ltext0
ARM GAS  /tmp/cci8Vpl3.s 			page 354


 16478 1dc1 0100     		.2byte	0x1
 16479 1dc3 50       		.byte	0x50
 16480 1dc4 92000000 		.4byte	.LVL9-.Ltext0
 16481 1dc8 9C000000 		.4byte	.LFE64-.Ltext0
 16482 1dcc 0400     		.2byte	0x4
 16483 1dce F3       		.byte	0xf3
 16484 1dcf 01       		.uleb128 0x1
 16485 1dd0 50       		.byte	0x50
 16486 1dd1 9F       		.byte	0x9f
 16487 1dd2 00000000 		.4byte	0
 16488 1dd6 00000000 		.4byte	0
 16489              	.LLST34:
 16490 1dda 3C0D0000 		.4byte	.LVL205-.Ltext0
 16491 1dde 440D0000 		.4byte	.LVL206-.Ltext0
 16492 1de2 0100     		.2byte	0x1
 16493 1de4 50       		.byte	0x50
 16494 1de5 440D0000 		.4byte	.LVL206-.Ltext0
 16495 1de9 4C0D0000 		.4byte	.LFE86-.Ltext0
 16496 1ded 0400     		.2byte	0x4
 16497 1def F3       		.byte	0xf3
 16498 1df0 01       		.uleb128 0x1
 16499 1df1 50       		.byte	0x50
 16500 1df2 9F       		.byte	0x9f
 16501 1df3 00000000 		.4byte	0
 16502 1df7 00000000 		.4byte	0
 16503              		.section	.debug_aranges,"",%progbits
 16504 0000 1C000000 		.4byte	0x1c
 16505 0004 0200     		.2byte	0x2
 16506 0006 00000000 		.4byte	.Ldebug_info0
 16507 000a 04       		.byte	0x4
 16508 000b 00       		.byte	0
 16509 000c 0000     		.2byte	0
 16510 000e 0000     		.2byte	0
 16511 0010 00000000 		.4byte	.Ltext0
 16512 0014 661E0000 		.4byte	.Letext0-.Ltext0
 16513 0018 00000000 		.4byte	0
 16514 001c 00000000 		.4byte	0
 16515              		.section	.debug_ranges,"",%progbits
 16516              	.Ldebug_ranges0:
 16517 0000 F0020000 		.4byte	.LBB2-.Ltext0
 16518 0004 86030000 		.4byte	.LBE2-.Ltext0
 16519 0008 00050000 		.4byte	.LBB3-.Ltext0
 16520 000c 10050000 		.4byte	.LBE3-.Ltext0
 16521 0010 00000000 		.4byte	0
 16522 0014 00000000 		.4byte	0
 16523 0018 C2190000 		.4byte	.LBB14-.Ltext0
 16524 001c DA1A0000 		.4byte	.LBE14-.Ltext0
 16525 0020 281C0000 		.4byte	.LBB25-.Ltext0
 16526 0024 5C1C0000 		.4byte	.LBE25-.Ltext0
 16527 0028 00000000 		.4byte	0
 16528 002c 00000000 		.4byte	0
 16529 0030 C2190000 		.4byte	.LBB16-.Ltext0
 16530 0034 5E1A0000 		.4byte	.LBE16-.Ltext0
 16531 0038 281C0000 		.4byte	.LBB19-.Ltext0
 16532 003c 401C0000 		.4byte	.LBE19-.Ltext0
 16533 0040 00000000 		.4byte	0
 16534 0044 00000000 		.4byte	0
ARM GAS  /tmp/cci8Vpl3.s 			page 355


 16535 0048 DE1A0000 		.4byte	.LBB21-.Ltext0
 16536 004c F61A0000 		.4byte	.LBE21-.Ltext0
 16537 0050 0E1B0000 		.4byte	.LBB24-.Ltext0
 16538 0054 DA1B0000 		.4byte	.LBE24-.Ltext0
 16539 0058 00000000 		.4byte	0
 16540 005c 00000000 		.4byte	0
 16541 0060 A41C0000 		.4byte	.LBB31-.Ltext0
 16542 0064 481D0000 		.4byte	.LBE31-.Ltext0
 16543 0068 981D0000 		.4byte	.LBB34-.Ltext0
 16544 006c 4A1E0000 		.4byte	.LBE34-.Ltext0
 16545 0070 521E0000 		.4byte	.LBB35-.Ltext0
 16546 0074 641E0000 		.4byte	.LBE35-.Ltext0
 16547 0078 00000000 		.4byte	0
 16548 007c 00000000 		.4byte	0
 16549              		.section	.debug_line,"",%progbits
 16550              	.Ldebug_line0:
 16551 0000 D1070000 		.section	.debug_str,"MS",%progbits,1
 16551      02004202 
 16551      00000201 
 16551      FB0E0D00 
 16551      01010101 
 16552              	.LASF352:
 16553 0000 6D70755F 		.ascii	"mpu_get_fifo_config\000"
 16553      6765745F 
 16553      6669666F 
 16553      5F636F6E 
 16553      66696700 
 16554              	.LASF18:
 16555 0014 73697A65 		.ascii	"sizetype\000"
 16555      74797065 
 16555      00
 16556              	.LASF36:
 16557 001d 5F5F7661 		.ascii	"__value\000"
 16557      6C756500 
 16558              	.LASF254:
 16559 0025 6C70615F 		.ascii	"lpa_freq\000"
 16559      66726571 
 16559      00
 16560              	.LASF104:
 16561 002e 5F5F7366 		.ascii	"__sf\000"
 16561      00
 16562              	.LASF351:
 16563 0033 6D796765 		.ascii	"myget_ms\000"
 16563      745F6D73 
 16563      00
 16564              	.LASF71:
 16565 003c 5F726561 		.ascii	"_read\000"
 16565      6400
 16566              	.LASF308:
 16567 0042 6D70755F 		.ascii	"mpu_get_int_status\000"
 16567      6765745F 
 16567      696E745F 
 16567      73746174 
 16567      757300
 16568              	.LASF234:
 16569 0055 494E565F 		.ascii	"INV_FSR_1000DPS\000"
 16569      4653525F 
ARM GAS  /tmp/cci8Vpl3.s 			page 356


 16569      31303030 
 16569      44505300 
 16570              	.LASF275:
 16571 0065 6779726F 		.ascii	"gyro_st\000"
 16571      5F737400 
 16572              	.LASF215:
 16573 006d 6D61785F 		.ascii	"max_g\000"
 16573      6700
 16574              	.LASF72:
 16575 0073 5F777269 		.ascii	"_write\000"
 16575      746500
 16576              	.LASF268:
 16577 007a 73746172 		.ascii	"start_addr\000"
 16577      745F6164 
 16577      647200
 16578              	.LASF16:
 16579 0085 696E7433 		.ascii	"int32_t\000"
 16579      325F7400 
 16580              	.LASF116:
 16581 008d 5F617363 		.ascii	"_asctime_buf\000"
 16581      74696D65 
 16581      5F627566 
 16581      00
 16582              	.LASF98:
 16583 009a 5F637674 		.ascii	"_cvtlen\000"
 16583      6C656E00 
 16584              	.LASF338:
 16585 00a2 6D70755F 		.ascii	"mpu_init\000"
 16585      696E6974 
 16585      00
 16586              	.LASF322:
 16587 00ab 6D70755F 		.ascii	"mpu_get_sample_rate\000"
 16587      6765745F 
 16587      73616D70 
 16587      6C655F72 
 16587      61746500 
 16588              	.LASF135:
 16589 00bf 5F756E75 		.ascii	"_unused\000"
 16589      73656400 
 16590              	.LASF45:
 16591 00c7 5F5F746D 		.ascii	"__tm\000"
 16591      00
 16592              	.LASF131:
 16593 00cc 5F776373 		.ascii	"_wcsrtombs_state\000"
 16593      72746F6D 
 16593      62735F73 
 16593      74617465 
 16593      00
 16594              	.LASF76:
 16595 00dd 5F6E6275 		.ascii	"_nbuf\000"
 16595      6600
 16596              	.LASF46:
 16597 00e3 5F5F746D 		.ascii	"__tm_sec\000"
 16597      5F736563 
 16597      00
 16598              	.LASF214:
 16599 00ec 6D696E5F 		.ascii	"min_g\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 357


 16599      6700
 16600              	.LASF124:
 16601 00f2 5F6C3634 		.ascii	"_l64a_buf\000"
 16601      615F6275 
 16601      6600
 16602              	.LASF263:
 16603 00fc 6D70755F 		.ascii	"mpu_set_dmp_state\000"
 16603      7365745F 
 16603      646D705F 
 16603      73746174 
 16603      6500
 16604              	.LASF340:
 16605 010e 6D70755F 		.ascii	"mpu_reg_dump\000"
 16605      7265675F 
 16605      64756D70 
 16605      00
 16606              	.LASF235:
 16607 011b 494E565F 		.ascii	"INV_FSR_2000DPS\000"
 16607      4653525F 
 16607      32303030 
 16607      44505300 
 16608              	.LASF80:
 16609 012b 5F6C6F63 		.ascii	"_lock\000"
 16609      6B00
 16610              	.LASF353:
 16611 0131 70757473 		.ascii	"puts\000"
 16611      00
 16612              	.LASF194:
 16613 0136 61636365 		.ascii	"accel_half\000"
 16613      6C5F6861 
 16613      6C6600
 16614              	.LASF196:
 16615 0141 696E745F 		.ascii	"int_motion_only\000"
 16615      6D6F7469 
 16615      6F6E5F6F 
 16615      6E6C7900 
 16616              	.LASF350:
 16617 0151 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/stm32-quadrocopter\000"
 16617      652F656E 
 16617      62696E2F 
 16617      446F6375 
 16617      6D656E74 
 16618              	.LASF112:
 16619 0183 5F6D756C 		.ascii	"_mult\000"
 16619      7400
 16620              	.LASF259:
 16621 0189 6D70755F 		.ascii	"mpu_get_compass_reg\000"
 16621      6765745F 
 16621      636F6D70 
 16621      6173735F 
 16621      72656700 
 16622              	.LASF246:
 16623 019d 4E554D5F 		.ascii	"NUM_CLK\000"
 16623      434C4B00 
 16624              	.LASF157:
 16625 01a5 6D6F7469 		.ascii	"motion_dur\000"
 16625      6F6E5F64 
ARM GAS  /tmp/cci8Vpl3.s 			page 358


 16625      757200
 16626              	.LASF33:
 16627 01b0 5F5F7763 		.ascii	"__wch\000"
 16627      6800
 16628              	.LASF198:
 16629 01b6 61637469 		.ascii	"active_low_int\000"
 16629      76655F6C 
 16629      6F775F69 
 16629      6E7400
 16630              	.LASF68:
 16631 01c5 5F66696C 		.ascii	"_file\000"
 16631      6500
 16632              	.LASF279:
 16633 01cb 72657375 		.ascii	"result\000"
 16633      6C7400
 16634              	.LASF55:
 16635 01d2 5F6F6E5F 		.ascii	"_on_exit_args\000"
 16635      65786974 
 16635      5F617267 
 16635      7300
 16636              	.LASF221:
 16637 01e0 6C70665F 		.ascii	"lpf_e\000"
 16637      6500
 16638              	.LASF147:
 16639 01e6 5F737973 		.ascii	"_sys_nerr\000"
 16639      5F6E6572 
 16639      7200
 16640              	.LASF327:
 16641 01f0 6D70755F 		.ascii	"mpu_set_gyro_fsr\000"
 16641      7365745F 
 16641      6779726F 
 16641      5F667372 
 16641      00
 16642              	.LASF25:
 16643 0201 477A5F6F 		.ascii	"Gz_offset\000"
 16643      66667365 
 16643      7400
 16644              	.LASF164:
 16645 020b 646D705F 		.ascii	"dmp_int_status\000"
 16645      696E745F 
 16645      73746174 
 16645      757300
 16646              	.LASF127:
 16647 021a 5F6D6272 		.ascii	"_mbrlen_state\000"
 16647      6C656E5F 
 16647      73746174 
 16647      6500
 16648              	.LASF8:
 16649 0228 6C6F6E67 		.ascii	"long int\000"
 16649      20696E74 
 16649      00
 16650              	.LASF136:
 16651 0231 5F696D70 		.ascii	"_impure_ptr\000"
 16651      7572655F 
 16651      70747200 
 16652              	.LASF95:
 16653 023d 5F726573 		.ascii	"_result_k\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 359


 16653      756C745F 
 16653      6B00
 16654              	.LASF287:
 16655 0247 6779726F 		.ascii	"gyro_cur\000"
 16655      5F637572 
 16655      00
 16656              	.LASF65:
 16657 0250 5F73697A 		.ascii	"_size\000"
 16657      6500
 16658              	.LASF305:
 16659 0256 6D70755F 		.ascii	"mpu_read_fifo\000"
 16659      72656164 
 16659      5F666966 
 16659      6F00
 16660              	.LASF117:
 16661 0264 5F6C6F63 		.ascii	"_localtime_buf\000"
 16661      616C7469 
 16661      6D655F62 
 16661      756600
 16662              	.LASF219:
 16663 0273 74657374 		.ascii	"test\000"
 16663      00
 16664              	.LASF241:
 16665 0278 494E565F 		.ascii	"INV_FSR_16G\000"
 16665      4653525F 
 16665      31364700 
 16666              	.LASF149:
 16667 0284 77686F5F 		.ascii	"who_am_i\000"
 16667      616D5F69 
 16667      00
 16668              	.LASF6:
 16669 028d 73686F72 		.ascii	"short unsigned int\000"
 16669      7420756E 
 16669      7369676E 
 16669      65642069 
 16669      6E7400
 16670              	.LASF212:
 16671 02a0 6D61785F 		.ascii	"max_dps\000"
 16671      64707300 
 16672              	.LASF50:
 16673 02a8 5F5F746D 		.ascii	"__tm_mon\000"
 16673      5F6D6F6E 
 16673      00
 16674              	.LASF269:
 16675 02b1 74686973 		.ascii	"this_write\000"
 16675      5F777269 
 16675      746500
 16676              	.LASF310:
 16677 02bc 6D70755F 		.ascii	"mpu_set_sensors\000"
 16677      7365745F 
 16677      73656E73 
 16677      6F727300 
 16678              	.LASF286:
 16679 02cc 61636365 		.ascii	"accel_cur\000"
 16679      6C5F6375 
 16679      7200
 16680              	.LASF90:
ARM GAS  /tmp/cci8Vpl3.s 			page 360


 16681 02d6 5F637572 		.ascii	"_current_category\000"
 16681      72656E74 
 16681      5F636174 
 16681      65676F72 
 16681      7900
 16682              	.LASF282:
 16683 02e8 72657374 		.ascii	"restore\000"
 16683      6F726500 
 16684              	.LASF280:
 16685 02f0 646D705F 		.ascii	"dmp_was_on\000"
 16685      7761735F 
 16685      6F6E00
 16686              	.LASF114:
 16687 02fb 5F756E75 		.ascii	"_unused_rand\000"
 16687      7365645F 
 16687      72616E64 
 16687      00
 16688              	.LASF256:
 16689 0308 74687265 		.ascii	"thresh_hw\000"
 16689      73685F68 
 16689      7700
 16690              	.LASF1:
 16691 0312 7369676E 		.ascii	"signed char\000"
 16691      65642063 
 16691      68617200 
 16692              	.LASF152:
 16693 031e 75736572 		.ascii	"user_ctrl\000"
 16693      5F637472 
 16693      6C00
 16694              	.LASF290:
 16695 0328 63616368 		.ascii	"cache_ptr\000"
 16695      655F7074 
 16695      7200
 16696              	.LASF165:
 16697 0332 696E745F 		.ascii	"int_status\000"
 16697      73746174 
 16697      757300
 16698              	.LASF260:
 16699 033d 74696D65 		.ascii	"timestamp\000"
 16699      7374616D 
 16699      7000
 16700              	.LASF236:
 16701 0347 4E554D5F 		.ascii	"NUM_GYRO_FSR\000"
 16701      4759524F 
 16701      5F465352 
 16701      00
 16702              	.LASF237:
 16703 0354 61636365 		.ascii	"accel_fsr_e\000"
 16703      6C5F6673 
 16703      725F6500 
 16704              	.LASF261:
 16705 0360 6D70755F 		.ascii	"mpu_get_dmp_state\000"
 16705      6765745F 
 16705      646D705F 
 16705      73746174 
 16705      6500
 16706              	.LASF344:
ARM GAS  /tmp/cci8Vpl3.s 			page 361


 16707 0372 44656C61 		.ascii	"DelayMs\000"
 16707      794D7300 
 16708              	.LASF177:
 16709 037a 6D61785F 		.ascii	"max_fifo\000"
 16709      6669666F 
 16709      00
 16710              	.LASF2:
 16711 0383 756E7369 		.ascii	"unsigned char\000"
 16711      676E6564 
 16711      20636861 
 16711      7200
 16712              	.LASF318:
 16713 0391 6D70755F 		.ascii	"mpu_set_compass_sample_rate\000"
 16713      7365745F 
 16713      636F6D70 
 16713      6173735F 
 16713      73616D70 
 16714              	.LASF330:
 16715 03ad 6D70755F 		.ascii	"mpu_set_accel_bias\000"
 16715      7365745F 
 16715      61636365 
 16715      6C5F6269 
 16715      617300
 16716              	.LASF83:
 16717 03c0 5F726565 		.ascii	"_reent\000"
 16717      6E7400
 16718              	.LASF320:
 16719 03c7 6D70755F 		.ascii	"mpu_get_compass_sample_rate\000"
 16719      6765745F 
 16719      636F6D70 
 16719      6173735F 
 16719      73616D70 
 16720              	.LASF137:
 16721 03e3 5F676C6F 		.ascii	"_global_impure_ptr\000"
 16721      62616C5F 
 16721      696D7075 
 16721      72655F70 
 16721      747200
 16722              	.LASF302:
 16723 03f6 62797061 		.ascii	"bypass_on\000"
 16723      73735F6F 
 16723      6E00
 16724              	.LASF105:
 16725 0400 63686172 		.ascii	"char\000"
 16725      00
 16726              	.LASF62:
 16727 0405 5F666E73 		.ascii	"_fns\000"
 16727      00
 16728              	.LASF21:
 16729 040a 6779726F 		.ascii	"gyro\000"
 16729      00
 16730              	.LASF192:
 16731 040f 6669666F 		.ascii	"fifo_enable\000"
 16731      5F656E61 
 16731      626C6500 
 16732              	.LASF74:
 16733 041b 5F636C6F 		.ascii	"_close\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 362


 16733      736500
 16734              	.LASF348:
 16735 0422 474E5520 		.ascii	"GNU C89 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -mfl"
 16735      43383920 
 16735      362E312E 
 16735      31203230 
 16735      31363035 
 16736 0455 6F61742D 		.ascii	"oat-abi=soft -g -O1 -std=gnu90 -fno-common -fno-mat"
 16736      6162693D 
 16736      736F6674 
 16736      202D6720 
 16736      2D4F3120 
 16737 0488 682D6572 		.ascii	"h-errno\000"
 16737      726E6F00 
 16738              	.LASF247:
 16739 0490 6C705F61 		.ascii	"lp_accel_rate_e\000"
 16739      6363656C 
 16739      5F726174 
 16739      655F6500 
 16740              	.LASF304:
 16741 04a0 6D6F7265 		.ascii	"more\000"
 16741      00
 16742              	.LASF5:
 16743 04a5 5F5F7569 		.ascii	"__uint16_t\000"
 16743      6E743136 
 16743      5F7400
 16744              	.LASF277:
 16745 04b0 61636365 		.ascii	"accel_result\000"
 16745      6C5F7265 
 16745      73756C74 
 16745      00
 16746              	.LASF267:
 16747 04bd 6669726D 		.ascii	"firmware\000"
 16747      77617265 
 16747      00
 16748              	.LASF163:
 16749 04c6 696E745F 		.ascii	"int_enable\000"
 16749      656E6162 
 16749      6C6500
 16750              	.LASF85:
 16751 04d1 5F737464 		.ascii	"_stdin\000"
 16751      696E00
 16752              	.LASF274:
 16753 04d8 74726965 		.ascii	"tries\000"
 16753      7300
 16754              	.LASF331:
 16755 04de 61636365 		.ascii	"accel_bias\000"
 16755      6C5F6269 
 16755      617300
 16756              	.LASF28:
 16757 04e9 69506974 		.ascii	"iPitch\000"
 16757      636800
 16758              	.LASF278:
 16759 04f0 6779726F 		.ascii	"gyro_result\000"
 16759      5F726573 
 16759      756C7400 
 16760              	.LASF166:
ARM GAS  /tmp/cci8Vpl3.s 			page 363


 16761 04fc 7077725F 		.ascii	"pwr_mgmt_1\000"
 16761      6D676D74 
 16761      5F3100
 16762              	.LASF167:
 16763 0507 7077725F 		.ascii	"pwr_mgmt_2\000"
 16763      6D676D74 
 16763      5F3200
 16764              	.LASF332:
 16765 0512 61636365 		.ascii	"accel_hw\000"
 16765      6C5F6877 
 16765      00
 16766              	.LASF295:
 16767 051b 61636365 		.ascii	"accel_self_test\000"
 16767      6C5F7365 
 16767      6C665F74 
 16767      65737400 
 16768              	.LASF242:
 16769 052b 4E554D5F 		.ascii	"NUM_ACCEL_FSR\000"
 16769      41434345 
 16769      4C5F4653 
 16769      5200
 16770              	.LASF336:
 16771 0539 6D70755F 		.ascii	"mpu_get_gyro_reg\000"
 16771      6765745F 
 16771      6779726F 
 16771      5F726567 
 16771      00
 16772              	.LASF238:
 16773 054a 494E565F 		.ascii	"INV_FSR_2G\000"
 16773      4653525F 
 16773      324700
 16774              	.LASF249:
 16775 0555 494E565F 		.ascii	"INV_LPA_5HZ\000"
 16775      4C50415F 
 16775      35485A00 
 16776              	.LASF217:
 16777 0561 6779726F 		.ascii	"gyro_state_s\000"
 16777      5F737461 
 16777      74655F73 
 16777      00
 16778              	.LASF343:
 16779 056e 69326357 		.ascii	"i2cWrite\000"
 16779      72697465 
 16779      00
 16780              	.LASF171:
 16781 0577 6932635F 		.ascii	"i2c_mst\000"
 16781      6D737400 
 16782              	.LASF347:
 16783 057f 7072696E 		.ascii	"printf\000"
 16783      746600
 16784              	.LASF154:
 16785 0586 6779726F 		.ascii	"gyro_cfg\000"
 16785      5F636667 
 16785      00
 16786              	.LASF172:
 16787 058f 62616E6B 		.ascii	"bank_sel\000"
 16787      5F73656C 
ARM GAS  /tmp/cci8Vpl3.s 			page 364


 16787      00
 16788              	.LASF309:
 16789 0598 73746174 		.ascii	"status\000"
 16789      757300
 16790              	.LASF70:
 16791 059f 5F636F6F 		.ascii	"_cookie\000"
 16791      6B696500 
 16792              	.LASF43:
 16793 05a7 5F776473 		.ascii	"_wds\000"
 16793      00
 16794              	.LASF319:
 16795 05ac 72617465 		.ascii	"rate\000"
 16795      00
 16796              	.LASF187:
 16797 05b1 6669666F 		.ascii	"fifo_sensors\000"
 16797      5F73656E 
 16797      736F7273 
 16797      00
 16798              	.LASF102:
 16799 05be 5F736967 		.ascii	"_sig_func\000"
 16799      5F66756E 
 16799      6300
 16800              	.LASF189:
 16801 05c8 63686970 		.ascii	"chip_cfg_s\000"
 16801      5F636667 
 16801      5F7300
 16802              	.LASF78:
 16803 05d3 5F6F6666 		.ascii	"_offset\000"
 16803      73657400 
 16804              	.LASF99:
 16805 05db 5F637674 		.ascii	"_cvtbuf\000"
 16805      62756600 
 16806              	.LASF265:
 16807 05e3 6D70755F 		.ascii	"mpu_load_firmware\000"
 16807      6C6F6164 
 16807      5F666972 
 16807      6D776172 
 16807      6500
 16808              	.LASF253:
 16809 05f5 74687265 		.ascii	"thresh\000"
 16809      736800
 16810              	.LASF183:
 16811 05fc 6779726F 		.ascii	"gyro_fsr\000"
 16811      5F667372 
 16811      00
 16812              	.LASF239:
 16813 0605 494E565F 		.ascii	"INV_FSR_4G\000"
 16813      4653525F 
 16813      344700
 16814              	.LASF335:
 16815 0610 6D70755F 		.ascii	"mpu_get_accel_reg\000"
 16815      6765745F 
 16815      61636365 
 16815      6C5F7265 
 16815      6700
 16816              	.LASF262:
 16817 0622 656E6162 		.ascii	"enabled\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 365


 16817      6C656400 
 16818              	.LASF200:
 16819 062a 646D705F 		.ascii	"dmp_loaded\000"
 16819      6C6F6164 
 16819      656400
 16820              	.LASF145:
 16821 0635 5F5F6664 		.ascii	"__fdlib_version\000"
 16821      6C69625F 
 16821      76657273 
 16821      696F6E00 
 16822              	.LASF151:
 16823 0645 70726F64 		.ascii	"prod_id\000"
 16823      5F696400 
 16824              	.LASF96:
 16825 064d 5F703573 		.ascii	"_p5s\000"
 16825      00
 16826              	.LASF10:
 16827 0652 6C6F6E67 		.ascii	"long unsigned int\000"
 16827      20756E73 
 16827      69676E65 
 16827      6420696E 
 16827      7400
 16828              	.LASF297:
 16829 0664 73686966 		.ascii	"shift_code\000"
 16829      745F636F 
 16829      646500
 16830              	.LASF222:
 16831 066f 494E565F 		.ascii	"INV_FILTER_256HZ_NOLPF2\000"
 16831      46494C54 
 16831      45525F32 
 16831      3536485A 
 16831      5F4E4F4C 
 16832              	.LASF66:
 16833 0687 5F5F7346 		.ascii	"__sFILE\000"
 16833      494C4500 
 16834              	.LASF92:
 16835 068f 5F5F7364 		.ascii	"__sdidinit\000"
 16835      6964696E 
 16835      697400
 16836              	.LASF82:
 16837 069a 5F666C61 		.ascii	"_flags2\000"
 16837      67733200 
 16838              	.LASF20:
 16839 06a2 53797374 		.ascii	"SystemCoreClock\000"
 16839      656D436F 
 16839      7265436C 
 16839      6F636B00 
 16840              	.LASF226:
 16841 06b2 494E565F 		.ascii	"INV_FILTER_20HZ\000"
 16841      46494C54 
 16841      45525F32 
 16841      30485A00 
 16842              	.LASF283:
 16843 06c2 68775F74 		.ascii	"hw_test\000"
 16843      65737400 
 16844              	.LASF170:
 16845 06ca 61636365 		.ascii	"accel_offs\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 366


 16845      6C5F6F66 
 16845      667300
 16846              	.LASF29:
 16847 06d5 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 16847      4B5F5245 
 16847      43555253 
 16847      4956455F 
 16847      5400
 16848              	.LASF84:
 16849 06e7 5F657272 		.ascii	"_errno\000"
 16849      6E6F00
 16850              	.LASF26:
 16851 06ee 41636331 		.ascii	"Acc1G_Values\000"
 16851      475F5661 
 16851      6C756573 
 16851      00
 16852              	.LASF326:
 16853 06fb 6D70755F 		.ascii	"mpu_get_accel_fsr\000"
 16853      6765745F 
 16853      61636365 
 16853      6C5F6673 
 16853      7200
 16854              	.LASF125:
 16855 070d 5F736967 		.ascii	"_signal_buf\000"
 16855      6E616C5F 
 16855      62756600 
 16856              	.LASF210:
 16857 0719 7061636B 		.ascii	"packet_thresh\000"
 16857      65745F74 
 16857      68726573 
 16857      6800
 16858              	.LASF186:
 16859 0727 73656E73 		.ascii	"sensors_on\000"
 16859      6F72735F 
 16859      6F6E00
 16860              	.LASF193:
 16861 0732 62797061 		.ascii	"bypass_mode\000"
 16861      73735F6D 
 16861      6F646500 
 16862              	.LASF44:
 16863 073e 5F426967 		.ascii	"_Bigint\000"
 16863      696E7400 
 16864              	.LASF41:
 16865 0746 5F6D6178 		.ascii	"_maxwds\000"
 16865      77647300 
 16866              	.LASF158:
 16867 074e 6669666F 		.ascii	"fifo_count_h\000"
 16867      5F636F75 
 16867      6E745F68 
 16867      00
 16868              	.LASF93:
 16869 075b 5F5F636C 		.ascii	"__cleanup\000"
 16869      65616E75 
 16869      7000
 16870              	.LASF101:
 16871 0765 5F617465 		.ascii	"_atexit0\000"
 16871      78697430 
ARM GAS  /tmp/cci8Vpl3.s 			page 367


 16871      00
 16872              	.LASF228:
 16873 076e 494E565F 		.ascii	"INV_FILTER_5HZ\000"
 16873      46494C54 
 16873      45525F35 
 16873      485A00
 16874              	.LASF142:
 16875 077d 5F5F6664 		.ascii	"__fdlibm_svid\000"
 16875      6C69626D 
 16875      5F737669 
 16875      6400
 16876              	.LASF244:
 16877 078b 494E565F 		.ascii	"INV_CLK_INTERNAL\000"
 16877      434C4B5F 
 16877      494E5445 
 16877      524E414C 
 16877      00
 16878              	.LASF9:
 16879 079c 5F5F7569 		.ascii	"__uint32_t\000"
 16879      6E743332 
 16879      5F7400
 16880              	.LASF89:
 16881 07a7 5F656D65 		.ascii	"_emergency\000"
 16881      7267656E 
 16881      637900
 16882              	.LASF316:
 16883 07b2 73656E73 		.ascii	"sens\000"
 16883      00
 16884              	.LASF11:
 16885 07b7 6C6F6E67 		.ascii	"long long int\000"
 16885      206C6F6E 
 16885      6720696E 
 16885      7400
 16886              	.LASF108:
 16887 07c5 5F6E696F 		.ascii	"_niobs\000"
 16887      627300
 16888              	.LASF264:
 16889 07cc 656E6162 		.ascii	"enable\000"
 16889      6C6500
 16890              	.LASF24:
 16891 07d3 47795F6F 		.ascii	"Gy_offset\000"
 16891      66667365 
 16891      7400
 16892              	.LASF103:
 16893 07dd 5F5F7367 		.ascii	"__sglue\000"
 16893      6C756500 
 16894              	.LASF134:
 16895 07e5 5F6E6D61 		.ascii	"_nmalloc\000"
 16895      6C6C6F63 
 16895      00
 16896              	.LASF204:
 16897 07ee 61636365 		.ascii	"accel_sens\000"
 16897      6C5F7365 
 16897      6E7300
 16898              	.LASF139:
 16899 07f9 646F7562 		.ascii	"double\000"
 16899      6C6500
ARM GAS  /tmp/cci8Vpl3.s 			page 368


 16900              	.LASF118:
 16901 0800 5F67616D 		.ascii	"_gamma_signgam\000"
 16901      6D615F73 
 16901      69676E67 
 16901      616D00
 16902              	.LASF181:
 16903 080f 62616E6B 		.ascii	"bank_size\000"
 16903      5F73697A 
 16903      6500
 16904              	.LASF191:
 16905 0819 636C6B5F 		.ascii	"clk_src\000"
 16905      73726300 
 16906              	.LASF190:
 16907 0821 73656E73 		.ascii	"sensors\000"
 16907      6F727300 
 16908              	.LASF91:
 16909 0829 5F637572 		.ascii	"_current_locale\000"
 16909      72656E74 
 16909      5F6C6F63 
 16909      616C6500 
 16910              	.LASF179:
 16911 0839 74656D70 		.ascii	"temp_sens\000"
 16911      5F73656E 
 16911      7300
 16912              	.LASF97:
 16913 0843 5F667265 		.ascii	"_freelist\000"
 16913      656C6973 
 16913      7400
 16914              	.LASF240:
 16915 084d 494E565F 		.ascii	"INV_FSR_8G\000"
 16915      4653525F 
 16915      384700
 16916              	.LASF109:
 16917 0858 5F696F62 		.ascii	"_iobs\000"
 16917      7300
 16918              	.LASF107:
 16919 085e 5F676C75 		.ascii	"_glue\000"
 16919      6500
 16920              	.LASF323:
 16921 0864 6D70755F 		.ascii	"mpu_set_lpf\000"
 16921      7365745F 
 16921      6C706600 
 16922              	.LASF19:
 16923 0870 49544D5F 		.ascii	"ITM_RxBuffer\000"
 16923      52784275 
 16923      66666572 
 16923      00
 16924              	.LASF42:
 16925 087d 5F736967 		.ascii	"_sign\000"
 16925      6E00
 16926              	.LASF230:
 16927 0883 4E554D5F 		.ascii	"NUM_FILTER\000"
 16927      46494C54 
 16927      455200
 16928              	.LASF293:
 16929 088e 73745F73 		.ascii	"st_shift_var\000"
 16929      68696674 
ARM GAS  /tmp/cci8Vpl3.s 			page 369


 16929      5F766172 
 16929      00
 16930              	.LASF176:
 16931 089b 61646472 		.ascii	"addr\000"
 16931      00
 16932              	.LASF270:
 16933 08a0 6D70755F 		.ascii	"mpu_read_mem\000"
 16933      72656164 
 16933      5F6D656D 
 16933      00
 16934              	.LASF258:
 16935 08ad 6D70755F 		.ascii	"mpu_get_compass_fsr\000"
 16935      6765745F 
 16935      636F6D70 
 16935      6173735F 
 16935      66737200 
 16936              	.LASF13:
 16937 08c1 756E7369 		.ascii	"unsigned int\000"
 16937      676E6564 
 16937      20696E74 
 16937      00
 16938              	.LASF339:
 16939 08ce 6D70755F 		.ascii	"mpu_read_reg\000"
 16939      72656164 
 16939      5F726567 
 16939      00
 16940              	.LASF303:
 16941 08db 6D70755F 		.ascii	"mpu_read_fifo_stream\000"
 16941      72656164 
 16941      5F666966 
 16941      6F5F7374 
 16941      7265616D 
 16942              	.LASF301:
 16943 08f0 6D70755F 		.ascii	"mpu_set_bypass\000"
 16943      7365745F 
 16943      62797061 
 16943      737300
 16944              	.LASF132:
 16945 08ff 5F685F65 		.ascii	"_h_errno\000"
 16945      72726E6F 
 16945      00
 16946              	.LASF150:
 16947 0908 72617465 		.ascii	"rate_div\000"
 16947      5F646976 
 16947      00
 16948              	.LASF346:
 16949 0911 69326352 		.ascii	"i2cRead\000"
 16949      65616400 
 16950              	.LASF224:
 16951 0919 494E565F 		.ascii	"INV_FILTER_98HZ\000"
 16951      46494C54 
 16951      45525F39 
 16951      38485A00 
 16952              	.LASF349:
 16953 0929 64726976 		.ascii	"drivers/inv_mpu.c\000"
 16953      6572732F 
 16953      696E765F 
ARM GAS  /tmp/cci8Vpl3.s 			page 370


 16953      6D70752E 
 16953      6300
 16954              	.LASF130:
 16955 093b 5F776372 		.ascii	"_wcrtomb_state\000"
 16955      746F6D62 
 16955      5F737461 
 16955      746500
 16956              	.LASF148:
 16957 094a 6779726F 		.ascii	"gyro_reg_s\000"
 16957      5F726567 
 16957      5F7300
 16958              	.LASF49:
 16959 0955 5F5F746D 		.ascii	"__tm_mday\000"
 16959      5F6D6461 
 16959      7900
 16960              	.LASF341:
 16961 095f 6765745F 		.ascii	"get_st_biases\000"
 16961      73745F62 
 16961      69617365 
 16961      7300
 16962              	.LASF100:
 16963 096d 5F6E6577 		.ascii	"_new\000"
 16963      00
 16964              	.LASF75:
 16965 0972 5F756275 		.ascii	"_ubuf\000"
 16965      6600
 16966              	.LASF329:
 16967 0978 6D70755F 		.ascii	"mpu_reset_fifo\000"
 16967      72657365 
 16967      745F6669 
 16967      666F00
 16968              	.LASF87:
 16969 0987 5F737464 		.ascii	"_stderr\000"
 16969      65727200 
 16970              	.LASF123:
 16971 098f 5F776374 		.ascii	"_wctomb_state\000"
 16971      6F6D625F 
 16971      73746174 
 16971      6500
 16972              	.LASF81:
 16973 099d 5F6D6273 		.ascii	"_mbstate\000"
 16973      74617465 
 16973      00
 16974              	.LASF119:
 16975 09a6 5F72616E 		.ascii	"_rand_next\000"
 16975      645F6E65 
 16975      787400
 16976              	.LASF182:
 16977 09b1 6D6F7469 		.ascii	"motion_int_cache_s\000"
 16977      6F6E5F69 
 16977      6E745F63 
 16977      61636865 
 16977      5F7300
 16978              	.LASF67:
 16979 09c4 5F666C61 		.ascii	"_flags\000"
 16979      677300
 16980              	.LASF60:
ARM GAS  /tmp/cci8Vpl3.s 			page 371


 16981 09cb 5F617465 		.ascii	"_atexit\000"
 16981      78697400 
 16982              	.LASF180:
 16983 09d3 74656D70 		.ascii	"temp_offset\000"
 16983      5F6F6666 
 16983      73657400 
 16984              	.LASF324:
 16985 09df 6D70755F 		.ascii	"mpu_get_lpf\000"
 16985      6765745F 
 16985      6C706600 
 16986              	.LASF271:
 16987 09eb 6D656D5F 		.ascii	"mem_addr\000"
 16987      61646472 
 16987      00
 16988              	.LASF35:
 16989 09f4 5F5F636F 		.ascii	"__count\000"
 16989      756E7400 
 16990              	.LASF211:
 16991 09fc 6D696E5F 		.ascii	"min_dps\000"
 16991      64707300 
 16992              	.LASF250:
 16993 0a04 494E565F 		.ascii	"INV_LPA_20HZ\000"
 16993      4C50415F 
 16993      3230485A 
 16993      00
 16994              	.LASF285:
 16995 0a11 6669666F 		.ascii	"fifo_count\000"
 16995      5F636F75 
 16995      6E7400
 16996              	.LASF52:
 16997 0a1c 5F5F746D 		.ascii	"__tm_wday\000"
 16997      5F776461 
 16997      7900
 16998              	.LASF197:
 16999 0a26 63616368 		.ascii	"cache\000"
 16999      6500
 17000              	.LASF140:
 17001 0a2c 6C6F6E67 		.ascii	"long double\000"
 17001      20646F75 
 17001      626C6500 
 17002              	.LASF251:
 17003 0a38 494E565F 		.ascii	"INV_LPA_40HZ\000"
 17003      4C50415F 
 17003      3430485A 
 17003      00
 17004              	.LASF53:
 17005 0a45 5F5F746D 		.ascii	"__tm_yday\000"
 17005      5F796461 
 17005      7900
 17006              	.LASF111:
 17007 0a4f 5F736565 		.ascii	"_seed\000"
 17007      6400
 17008              	.LASF73:
 17009 0a55 5F736565 		.ascii	"_seek\000"
 17009      6B00
 17010              	.LASF354:
 17011 0a5b 5F5F6275 		.ascii	"__builtin_puts\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 372


 17011      696C7469 
 17011      6E5F7075 
 17011      747300
 17012              	.LASF31:
 17013 0a6a 5F66706F 		.ascii	"_fpos_t\000"
 17013      735F7400 
 17014              	.LASF34:
 17015 0a72 5F5F7763 		.ascii	"__wchb\000"
 17015      686200
 17016              	.LASF257:
 17017 0a79 6D70755F 		.ascii	"mpu_lp_motion_interrupt\000"
 17017      6C705F6D 
 17017      6F74696F 
 17017      6E5F696E 
 17017      74657272 
 17018              	.LASF122:
 17019 0a91 5F6D6274 		.ascii	"_mbtowc_state\000"
 17019      6F77635F 
 17019      73746174 
 17019      6500
 17020              	.LASF292:
 17021 0a9f 73745F73 		.ascii	"st_shift_cust\000"
 17021      68696674 
 17021      5F637573 
 17021      7400
 17022              	.LASF272:
 17023 0aad 6D70755F 		.ascii	"mpu_write_mem\000"
 17023      77726974 
 17023      655F6D65 
 17023      6D00
 17024              	.LASF276:
 17025 0abb 61636365 		.ascii	"accel_st\000"
 17025      6C5F7374 
 17025      00
 17026              	.LASF12:
 17027 0ac4 6C6F6E67 		.ascii	"long long unsigned int\000"
 17027      206C6F6E 
 17027      6720756E 
 17027      7369676E 
 17027      65642069 
 17028              	.LASF317:
 17029 0adb 6D70755F 		.ascii	"mpu_get_gyro_sens\000"
 17029      6765745F 
 17029      6779726F 
 17029      5F73656E 
 17029      7300
 17030              	.LASF311:
 17031 0aed 6D70755F 		.ascii	"mpu_get_power_state\000"
 17031      6765745F 
 17031      706F7765 
 17031      725F7374 
 17031      61746500 
 17032              	.LASF155:
 17033 0b01 61636365 		.ascii	"accel_cfg\000"
 17033      6C5F6366 
 17033      6700
 17034              	.LASF266:
ARM GAS  /tmp/cci8Vpl3.s 			page 373


 17035 0b0b 6C656E67 		.ascii	"length\000"
 17035      746800
 17036              	.LASF15:
 17037 0b12 75696E74 		.ascii	"uint16_t\000"
 17037      31365F74 
 17037      00
 17038              	.LASF57:
 17039 0b1b 5F64736F 		.ascii	"_dso_handle\000"
 17039      5F68616E 
 17039      646C6500 
 17040              	.LASF110:
 17041 0b27 5F72616E 		.ascii	"_rand48\000"
 17041      64343800 
 17042              	.LASF86:
 17043 0b2f 5F737464 		.ascii	"_stdout\000"
 17043      6F757400 
 17044              	.LASF220:
 17045 0b37 5F5F6664 		.ascii	"__fdlibm_version\000"
 17045      6C69626D 
 17045      5F766572 
 17045      73696F6E 
 17045      00
 17046              	.LASF306:
 17047 0b48 7061636B 		.ascii	"packet_size\000"
 17047      65745F73 
 17047      697A6500 
 17048              	.LASF159:
 17049 0b54 6669666F 		.ascii	"fifo_r_w\000"
 17049      5F725F77 
 17049      00
 17050              	.LASF77:
 17051 0b5d 5F626C6B 		.ascii	"_blksize\000"
 17051      73697A65 
 17051      00
 17052              	.LASF300:
 17053 0b66 61637469 		.ascii	"active_low\000"
 17053      76655F6C 
 17053      6F7700
 17054              	.LASF233:
 17055 0b71 494E565F 		.ascii	"INV_FSR_500DPS\000"
 17055      4653525F 
 17055      35303044 
 17055      505300
 17056              	.LASF64:
 17057 0b80 5F626173 		.ascii	"_base\000"
 17057      6500
 17058              	.LASF231:
 17059 0b86 6779726F 		.ascii	"gyro_fsr_e\000"
 17059      5F667372 
 17059      5F6500
 17060              	.LASF195:
 17061 0b91 6C705F61 		.ascii	"lp_accel_mode\000"
 17061      6363656C 
 17061      5F6D6F64 
 17061      6500
 17062              	.LASF115:
 17063 0b9f 5F737472 		.ascii	"_strtok_last\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 374


 17063      746F6B5F 
 17063      6C617374 
 17063      00
 17064              	.LASF184:
 17065 0bac 61636365 		.ascii	"accel_fsr\000"
 17065      6C5F6673 
 17065      7200
 17066              	.LASF202:
 17067 0bb6 74657374 		.ascii	"test_s\000"
 17067      5F7300
 17068              	.LASF128:
 17069 0bbd 5F6D6272 		.ascii	"_mbrtowc_state\000"
 17069      746F7763 
 17069      5F737461 
 17069      746500
 17070              	.LASF208:
 17071 0bcc 7265675F 		.ascii	"reg_accel_fsr\000"
 17071      61636365 
 17071      6C5F6673 
 17071      7200
 17072              	.LASF281:
 17073 0bda 6C705F69 		.ascii	"lp_int_restore\000"
 17073      6E745F72 
 17073      6573746F 
 17073      726500
 17074              	.LASF38:
 17075 0be9 5F666C6F 		.ascii	"_flock_t\000"
 17075      636B5F74 
 17075      00
 17076              	.LASF106:
 17077 0bf2 5F5F4649 		.ascii	"__FILE\000"
 17077      4C4500
 17078              	.LASF4:
 17079 0bf9 5F5F696E 		.ascii	"__int16_t\000"
 17079      7431365F 
 17079      7400
 17080              	.LASF37:
 17081 0c03 5F6D6273 		.ascii	"_mbstate_t\000"
 17081      74617465 
 17081      5F7400
 17082              	.LASF175:
 17083 0c0e 68775F73 		.ascii	"hw_s\000"
 17083      00
 17084              	.LASF223:
 17085 0c13 494E565F 		.ascii	"INV_FILTER_188HZ\000"
 17085      46494C54 
 17085      45525F31 
 17085      3838485A 
 17085      00
 17086              	.LASF120:
 17087 0c24 5F723438 		.ascii	"_r48\000"
 17087      00
 17088              	.LASF325:
 17089 0c29 6D70755F 		.ascii	"mpu_set_accel_fsr\000"
 17089      7365745F 
 17089      61636365 
 17089      6C5F6673 
ARM GAS  /tmp/cci8Vpl3.s 			page 375


 17089      7200
 17090              	.LASF32:
 17091 0c3b 77696E74 		.ascii	"wint_t\000"
 17091      5F7400
 17092              	.LASF40:
 17093 0c42 5F6E6578 		.ascii	"_next\000"
 17093      7400
 17094              	.LASF213:
 17095 0c48 6D61785F 		.ascii	"max_gyro_var\000"
 17095      6779726F 
 17095      5F766172 
 17095      00
 17096              	.LASF79:
 17097 0c55 5F646174 		.ascii	"_data\000"
 17097      6100
 17098              	.LASF291:
 17099 0c5b 73745F73 		.ascii	"st_shift\000"
 17099      68696674 
 17099      00
 17100              	.LASF345:
 17101 0c64 6D656D63 		.ascii	"memcmp\000"
 17101      6D7000
 17102              	.LASF205:
 17103 0c6b 7265675F 		.ascii	"reg_rate_div\000"
 17103      72617465 
 17103      5F646976 
 17103      00
 17104              	.LASF206:
 17105 0c78 7265675F 		.ascii	"reg_lpf\000"
 17105      6C706600 
 17106              	.LASF294:
 17107 0c80 6779726F 		.ascii	"gyro_self_test\000"
 17107      5F73656C 
 17107      665F7465 
 17107      737400
 17108              	.LASF299:
 17109 0c8f 6D70755F 		.ascii	"mpu_set_int_level\000"
 17109      7365745F 
 17109      696E745F 
 17109      6C657665 
 17109      6C00
 17110              	.LASF245:
 17111 0ca1 494E565F 		.ascii	"INV_CLK_PLL\000"
 17111      434C4B5F 
 17111      504C4C00 
 17112              	.LASF188:
 17113 0cad 646D705F 		.ascii	"dmp_on\000"
 17113      6F6E00
 17114              	.LASF144:
 17115 0cb4 5F5F6664 		.ascii	"__fdlibm_posix\000"
 17115      6C69626D 
 17115      5F706F73 
 17115      697800
 17116              	.LASF201:
 17117 0cc3 646D705F 		.ascii	"dmp_sample_rate\000"
 17117      73616D70 
 17117      6C655F72 
ARM GAS  /tmp/cci8Vpl3.s 			page 376


 17117      61746500 
 17118              	.LASF121:
 17119 0cd3 5F6D626C 		.ascii	"_mblen_state\000"
 17119      656E5F73 
 17119      74617465 
 17119      00
 17120              	.LASF3:
 17121 0ce0 73686F72 		.ascii	"short int\000"
 17121      7420696E 
 17121      7400
 17122              	.LASF273:
 17123 0cea 6D70755F 		.ascii	"mpu_run_self_test\000"
 17123      72756E5F 
 17123      73656C66 
 17123      5F746573 
 17123      7400
 17124              	.LASF143:
 17125 0cfc 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 17125      6C69626D 
 17125      5F786F70 
 17125      656E00
 17126              	.LASF216:
 17127 0d0b 6D61785F 		.ascii	"max_accel_var\000"
 17127      61636365 
 17127      6C5F7661 
 17127      7200
 17128              	.LASF209:
 17129 0d19 77616974 		.ascii	"wait_ms\000"
 17129      5F6D7300 
 17130              	.LASF333:
 17131 0d21 676F745F 		.ascii	"got_accel\000"
 17131      61636365 
 17131      6C00
 17132              	.LASF14:
 17133 0d2b 696E7431 		.ascii	"int16_t\000"
 17133      365F7400 
 17134              	.LASF284:
 17135 0d33 7061636B 		.ascii	"packet_count\000"
 17135      65745F63 
 17135      6F756E74 
 17135      00
 17136              	.LASF315:
 17137 0d40 6D70755F 		.ascii	"mpu_get_accel_sens\000"
 17137      6765745F 
 17137      61636365 
 17137      6C5F7365 
 17137      6E7300
 17138              	.LASF138:
 17139 0d53 7375626F 		.ascii	"suboptarg\000"
 17139      70746172 
 17139      6700
 17140              	.LASF58:
 17141 0d5d 5F666E74 		.ascii	"_fntypes\000"
 17141      79706573 
 17141      00
 17142              	.LASF307:
 17143 0d66 696E6465 		.ascii	"index\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 377


 17143      7800
 17144              	.LASF225:
 17145 0d6c 494E565F 		.ascii	"INV_FILTER_42HZ\000"
 17145      46494C54 
 17145      45525F34 
 17145      32485A00 
 17146              	.LASF146:
 17147 0d7c 5F737973 		.ascii	"_sys_errlist\000"
 17147      5F657272 
 17147      6C697374 
 17147      00
 17148              	.LASF51:
 17149 0d89 5F5F746D 		.ascii	"__tm_year\000"
 17149      5F796561 
 17149      7200
 17150              	.LASF248:
 17151 0d93 494E565F 		.ascii	"INV_LPA_1_25HZ\000"
 17151      4C50415F 
 17151      315F3235 
 17151      485A00
 17152              	.LASF199:
 17153 0da2 6C617463 		.ascii	"latched_int\000"
 17153      6865645F 
 17153      696E7400 
 17154              	.LASF168:
 17155 0dae 696E745F 		.ascii	"int_pin_cfg\000"
 17155      70696E5F 
 17155      63666700 
 17156              	.LASF161:
 17157 0dba 7261775F 		.ascii	"raw_accel\000"
 17157      61636365 
 17157      6C00
 17158              	.LASF185:
 17159 0dc4 73616D70 		.ascii	"sample_rate\000"
 17159      6C655F72 
 17159      61746500 
 17160              	.LASF69:
 17161 0dd0 5F6C6266 		.ascii	"_lbfsize\000"
 17161      73697A65 
 17161      00
 17162              	.LASF22:
 17163 0dd9 61636365 		.ascii	"accel\000"
 17163      6C00
 17164              	.LASF88:
 17165 0ddf 5F696E63 		.ascii	"_inc\000"
 17165      00
 17166              	.LASF61:
 17167 0de4 5F696E64 		.ascii	"_ind\000"
 17167      00
 17168              	.LASF23:
 17169 0de9 47785F6F 		.ascii	"Gx_offset\000"
 17169      66667365 
 17169      7400
 17170              	.LASF141:
 17171 0df3 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 17171      6C69626D 
 17171      5F696565 
ARM GAS  /tmp/cci8Vpl3.s 			page 378


 17171      6500
 17172              	.LASF63:
 17173 0e01 5F5F7362 		.ascii	"__sbuf\000"
 17173      756600
 17174              	.LASF59:
 17175 0e08 5F69735F 		.ascii	"_is_cxa\000"
 17175      63786100 
 17176              	.LASF133:
 17177 0e10 5F6E6578 		.ascii	"_nextf\000"
 17177      746600
 17178              	.LASF298:
 17179 0e17 6D70755F 		.ascii	"mpu_set_int_latched\000"
 17179      7365745F 
 17179      696E745F 
 17179      6C617463 
 17179      68656400 
 17180              	.LASF229:
 17181 0e2b 494E565F 		.ascii	"INV_FILTER_2100HZ_NOLPF\000"
 17181      46494C54 
 17181      45525F32 
 17181      31303048 
 17181      5A5F4E4F 
 17182              	.LASF27:
 17183 0e43 50697463 		.ascii	"Pitch\000"
 17183      6800
 17184              	.LASF39:
 17185 0e49 5F5F554C 		.ascii	"__ULong\000"
 17185      6F6E6700 
 17186              	.LASF17:
 17187 0e51 75696E74 		.ascii	"uint32_t\000"
 17187      33325F74 
 17187      00
 17188              	.LASF153:
 17189 0e5a 6669666F 		.ascii	"fifo_en\000"
 17189      5F656E00 
 17190              	.LASF243:
 17191 0e62 636C6F63 		.ascii	"clock_sel_e\000"
 17191      6B5F7365 
 17191      6C5F6500 
 17192              	.LASF94:
 17193 0e6e 5F726573 		.ascii	"_result\000"
 17193      756C7400 
 17194              	.LASF232:
 17195 0e76 494E565F 		.ascii	"INV_FSR_250DPS\000"
 17195      4653525F 
 17195      32353044 
 17195      505300
 17196              	.LASF156:
 17197 0e85 6D6F7469 		.ascii	"motion_thr\000"
 17197      6F6E5F74 
 17197      687200
 17198              	.LASF160:
 17199 0e90 7261775F 		.ascii	"raw_gyro\000"
 17199      6779726F 
 17199      00
 17200              	.LASF334:
 17201 0e99 6D70755F 		.ascii	"mpu_get_temperature\000"
ARM GAS  /tmp/cci8Vpl3.s 			page 379


 17201      6765745F 
 17201      74656D70 
 17201      65726174 
 17201      75726500 
 17202              	.LASF30:
 17203 0ead 5F6F6666 		.ascii	"_off_t\000"
 17203      5F7400
 17204              	.LASF207:
 17205 0eb4 7265675F 		.ascii	"reg_gyro_fsr\000"
 17205      6779726F 
 17205      5F667372 
 17205      00
 17206              	.LASF227:
 17207 0ec1 494E565F 		.ascii	"INV_FILTER_10HZ\000"
 17207      46494C54 
 17207      45525F31 
 17207      30485A00 
 17208              	.LASF328:
 17209 0ed1 6D70755F 		.ascii	"mpu_get_gyro_fsr\000"
 17209      6765745F 
 17209      6779726F 
 17209      5F667372 
 17209      00
 17210              	.LASF296:
 17211 0ee2 6765745F 		.ascii	"get_accel_prod_shift\000"
 17211      61636365 
 17211      6C5F7072 
 17211      6F645F73 
 17211      68696674 
 17212              	.LASF342:
 17213 0ef7 7365745F 		.ascii	"set_int_enable\000"
 17213      696E745F 
 17213      656E6162 
 17213      6C6500
 17214              	.LASF113:
 17215 0f06 5F616464 		.ascii	"_add\000"
 17215      00
 17216              	.LASF0:
 17217 0f0b 666C6F61 		.ascii	"float\000"
 17217      7400
 17218              	.LASF48:
 17219 0f11 5F5F746D 		.ascii	"__tm_hour\000"
 17219      5F686F75 
 17219      7200
 17220              	.LASF169:
 17221 0f1b 6D656D5F 		.ascii	"mem_r_w\000"
 17221      725F7700 
 17222              	.LASF321:
 17223 0f23 6D70755F 		.ascii	"mpu_set_sample_rate\000"
 17223      7365745F 
 17223      73616D70 
 17223      6C655F72 
 17223      61746500 
 17224              	.LASF129:
 17225 0f37 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 17225      72746F77 
 17225      63735F73 
ARM GAS  /tmp/cci8Vpl3.s 			page 380


 17225      74617465 
 17225      00
 17226              	.LASF252:
 17227 0f48 74696D65 		.ascii	"time\000"
 17227      00
 17228              	.LASF7:
 17229 0f4d 5F5F696E 		.ascii	"__int32_t\000"
 17229      7433325F 
 17229      7400
 17230              	.LASF312:
 17231 0f57 706F7765 		.ascii	"power_on\000"
 17231      725F6F6E 
 17231      00
 17232              	.LASF174:
 17233 0f60 7072676D 		.ascii	"prgm_start_h\000"
 17233      5F737461 
 17233      72745F68 
 17233      00
 17234              	.LASF314:
 17235 0f6d 70726576 		.ascii	"prev\000"
 17235      00
 17236              	.LASF288:
 17237 0f72 62696173 		.ascii	"bias_regular\000"
 17237      5F726567 
 17237      756C6172 
 17237      00
 17238              	.LASF289:
 17239 0f7f 62696173 		.ascii	"bias_st\000"
 17239      5F737400 
 17240              	.LASF162:
 17241 0f87 74656D70 		.ascii	"temp\000"
 17241      00
 17242              	.LASF178:
 17243 0f8c 6E756D5F 		.ascii	"num_reg\000"
 17243      72656700 
 17244              	.LASF56:
 17245 0f94 5F666E61 		.ascii	"_fnargs\000"
 17245      72677300 
 17246              	.LASF54:
 17247 0f9c 5F5F746D 		.ascii	"__tm_isdst\000"
 17247      5F697364 
 17247      737400
 17248              	.LASF218:
 17249 0fa7 63686970 		.ascii	"chip_cfg\000"
 17249      5F636667 
 17249      00
 17250              	.LASF255:
 17251 0fb0 64617461 		.ascii	"data\000"
 17251      00
 17252              	.LASF173:
 17253 0fb5 6D656D5F 		.ascii	"mem_start_addr\000"
 17253      73746172 
 17253      745F6164 
 17253      647200
 17254              	.LASF203:
 17255 0fc4 6779726F 		.ascii	"gyro_sens\000"
 17255      5F73656E 
ARM GAS  /tmp/cci8Vpl3.s 			page 381


 17255      7300
 17256              	.LASF47:
 17257 0fce 5F5F746D 		.ascii	"__tm_min\000"
 17257      5F6D696E 
 17257      00
 17258              	.LASF126:
 17259 0fd7 5F676574 		.ascii	"_getdate_err\000"
 17259      64617465 
 17259      5F657272 
 17259      00
 17260              	.LASF313:
 17261 0fe4 6D70755F 		.ascii	"mpu_configure_fifo\000"
 17261      636F6E66 
 17261      69677572 
 17261      655F6669 
 17261      666F00
 17262              	.LASF337:
 17263 0ff7 6D70755F 		.ascii	"mpu_lp_accel_mode\000"
 17263      6C705F61 
 17263      6363656C 
 17263      5F6D6F64 
 17263      6500
 17264              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/cci8Vpl3.s 			page 382


DEFINED SYMBOLS
                            *ABS*:0000000000000000 inv_mpu.c
     /tmp/cci8Vpl3.s:15     .text:0000000000000000 $t
     /tmp/cci8Vpl3.s:21     .text:0000000000000000 set_int_enable
     /tmp/cci8Vpl3.s:137    .text:0000000000000098 $d
     /tmp/cci8Vpl3.s:142    .text:000000000000009c $t
     /tmp/cci8Vpl3.s:148    .text:000000000000009c get_st_biases
     /tmp/cci8Vpl3.s:353    .text:0000000000000208 $d
     /tmp/cci8Vpl3.s:356    .text:000000000000020c $t
     /tmp/cci8Vpl3.s:780    .text:0000000000000508 $d
     /tmp/cci8Vpl3.s:786    .text:0000000000000510 $t
     /tmp/cci8Vpl3.s:793    .text:0000000000000510 mpu_reg_dump
     /tmp/cci8Vpl3.s:877    .text:0000000000000560 $d
     /tmp/cci8Vpl3.s:881    .text:0000000000000564 $t
     /tmp/cci8Vpl3.s:888    .text:0000000000000564 mpu_read_reg
     /tmp/cci8Vpl3.s:953    .text:00000000000005a0 $d
     /tmp/cci8Vpl3.s:957    .text:00000000000005a4 $t
     /tmp/cci8Vpl3.s:964    .text:00000000000005a4 mpu_get_gyro_reg
     /tmp/cci8Vpl3.s:1042   .text:0000000000000608 $d
     /tmp/cci8Vpl3.s:1046   .text:000000000000060c $t
     /tmp/cci8Vpl3.s:1053   .text:000000000000060c mpu_get_accel_reg
     /tmp/cci8Vpl3.s:1131   .text:0000000000000670 $d
     /tmp/cci8Vpl3.s:1141   .text:0000000000000674 $t
     /tmp/cci8Vpl3.s:1148   .text:0000000000000674 mpu_get_temperature
     /tmp/cci8Vpl3.s:1244   .text:00000000000006f8 $d
     /tmp/cci8Vpl3.s:1249   .text:0000000000000700 $t
     /tmp/cci8Vpl3.s:1256   .text:0000000000000700 mpu_set_accel_bias
     /tmp/cci8Vpl3.s:1448   .text:0000000000000808 $d
     /tmp/cci8Vpl3.s:1452   .text:000000000000080c $t
     /tmp/cci8Vpl3.s:1459   .text:000000000000080c mpu_reset_fifo
     /tmp/cci8Vpl3.s:1741   .text:00000000000009ec $d
     /tmp/cci8Vpl3.s:1745   .text:00000000000009f0 $t
     /tmp/cci8Vpl3.s:1752   .text:00000000000009f0 mpu_get_gyro_fsr
     /tmp/cci8Vpl3.s:1767   .text:00000000000009fc $d
     /tmp/cci8Vpl3.s:1771   .text:0000000000000a00 $t
     /tmp/cci8Vpl3.s:1809   .text:0000000000000a28 $d
     /tmp/cci8Vpl3.s:1813   .text:0000000000000a2c $t
     /tmp/cci8Vpl3.s:1820   .text:0000000000000a2c mpu_set_gyro_fsr
     /tmp/cci8Vpl3.s:1933   .text:0000000000000ac0 $d
     /tmp/cci8Vpl3.s:1937   .text:0000000000000ac4 $t
     /tmp/cci8Vpl3.s:1944   .text:0000000000000ac4 mpu_get_accel_fsr
     /tmp/cci8Vpl3.s:1959   .text:0000000000000ad0 $d
     /tmp/cci8Vpl3.s:1963   .text:0000000000000ad4 $t
     /tmp/cci8Vpl3.s:2015   .text:0000000000000b04 $d
     /tmp/cci8Vpl3.s:2019   .text:0000000000000b08 $t
     /tmp/cci8Vpl3.s:2026   .text:0000000000000b08 mpu_set_accel_fsr
     /tmp/cci8Vpl3.s:2051   .text:0000000000000b1e $d
     /tmp/cci8Vpl3.s:2149   .text:0000000000000b9c $d
     /tmp/cci8Vpl3.s:2153   .text:0000000000000ba0 $t
     /tmp/cci8Vpl3.s:2160   .text:0000000000000ba0 mpu_get_lpf
     /tmp/cci8Vpl3.s:2176   .text:0000000000000bae $d
     /tmp/cci8Vpl3.s:2182   .text:0000000000000bb4 $t
     /tmp/cci8Vpl3.s:2232   .text:0000000000000be0 $d
     /tmp/cci8Vpl3.s:2236   .text:0000000000000be4 $t
     /tmp/cci8Vpl3.s:2243   .text:0000000000000be4 mpu_set_lpf
     /tmp/cci8Vpl3.s:2359   .text:0000000000000c74 $d
     /tmp/cci8Vpl3.s:2363   .text:0000000000000c78 $t
ARM GAS  /tmp/cci8Vpl3.s 			page 383


     /tmp/cci8Vpl3.s:2370   .text:0000000000000c78 mpu_get_sample_rate
     /tmp/cci8Vpl3.s:2400   .text:0000000000000c90 $d
     /tmp/cci8Vpl3.s:2404   .text:0000000000000c94 $t
     /tmp/cci8Vpl3.s:2411   .text:0000000000000c94 mpu_get_compass_sample_rate
     /tmp/cci8Vpl3.s:2436   .text:0000000000000c9e mpu_set_compass_sample_rate
     /tmp/cci8Vpl3.s:2458   .text:0000000000000ca4 mpu_get_gyro_sens
     /tmp/cci8Vpl3.s:2473   .text:0000000000000cb0 $d
     /tmp/cci8Vpl3.s:2477   .text:0000000000000cb4 $t
     /tmp/cci8Vpl3.s:2527   .text:0000000000000cdc $d
     /tmp/cci8Vpl3.s:2535   .text:0000000000000cf0 $t
     /tmp/cci8Vpl3.s:2542   .text:0000000000000cf0 mpu_get_accel_sens
     /tmp/cci8Vpl3.s:2557   .text:0000000000000cfc $d
     /tmp/cci8Vpl3.s:2561   .text:0000000000000d00 $t
     /tmp/cci8Vpl3.s:2613   .text:0000000000000d38 $d
     /tmp/cci8Vpl3.s:2617   .text:0000000000000d3c $t
     /tmp/cci8Vpl3.s:2624   .text:0000000000000d3c mpu_get_fifo_config
     /tmp/cci8Vpl3.s:2643   .text:0000000000000d48 $d
     /tmp/cci8Vpl3.s:2647   .text:0000000000000d4c $t
     /tmp/cci8Vpl3.s:2654   .text:0000000000000d4c mpu_configure_fifo
     /tmp/cci8Vpl3.s:2740   .text:0000000000000da8 $d
     /tmp/cci8Vpl3.s:2744   .text:0000000000000dac $t
     /tmp/cci8Vpl3.s:2751   .text:0000000000000dac mpu_get_power_state
     /tmp/cci8Vpl3.s:2780   .text:0000000000000dc0 $d
     /tmp/cci8Vpl3.s:2784   .text:0000000000000dc4 $t
     /tmp/cci8Vpl3.s:2791   .text:0000000000000dc4 mpu_get_int_status
     /tmp/cci8Vpl3.s:2857   .text:0000000000000e08 $d
     /tmp/cci8Vpl3.s:2861   .text:0000000000000e0c $t
     /tmp/cci8Vpl3.s:2868   .text:0000000000000e0c mpu_read_fifo
     /tmp/cci8Vpl3.s:3184   .text:0000000000000fe8 $d
     /tmp/cci8Vpl3.s:3188   .text:0000000000000fec $t
     /tmp/cci8Vpl3.s:3195   .text:0000000000000fec mpu_read_fifo_stream
     /tmp/cci8Vpl3.s:3336   .text:00000000000010ac $d
     /tmp/cci8Vpl3.s:3340   .text:00000000000010b0 $t
     /tmp/cci8Vpl3.s:3347   .text:00000000000010b0 mpu_set_bypass
     /tmp/cci8Vpl3.s:3561   .text:0000000000001208 $d
     /tmp/cci8Vpl3.s:3565   .text:000000000000120c $t
     /tmp/cci8Vpl3.s:3572   .text:000000000000120c mpu_set_int_level
     /tmp/cci8Vpl3.s:3590   .text:0000000000001218 $d
     /tmp/cci8Vpl3.s:3594   .text:000000000000121c $t
     /tmp/cci8Vpl3.s:3601   .text:000000000000121c mpu_set_int_latched
     /tmp/cci8Vpl3.s:3696   .text:0000000000001294 $d
     /tmp/cci8Vpl3.s:3700   .text:0000000000001298 $t
     /tmp/cci8Vpl3.s:3707   .text:0000000000001298 mpu_lp_accel_mode
     /tmp/cci8Vpl3.s:3865   .text:0000000000001370 $d
     /tmp/cci8Vpl3.s:3869   .text:0000000000001374 $t
     /tmp/cci8Vpl3.s:3876   .text:0000000000001374 mpu_set_sample_rate
     /tmp/cci8Vpl3.s:3987   .text:0000000000001410 $d
     /tmp/cci8Vpl3.s:3991   .text:0000000000001414 $t
     /tmp/cci8Vpl3.s:3998   .text:0000000000001414 mpu_set_sensors
     /tmp/cci8Vpl3.s:4161   .text:0000000000001514 $d
     /tmp/cci8Vpl3.s:4165   .text:0000000000001518 $t
     /tmp/cci8Vpl3.s:4172   .text:0000000000001518 mpu_init
     /tmp/cci8Vpl3.s:4453   .text:00000000000016c0 $d
     /tmp/cci8Vpl3.s:4460   .text:00000000000016d0 $t
     /tmp/cci8Vpl3.s:4467   .text:00000000000016d0 mpu_write_mem
     /tmp/cci8Vpl3.s:4572   .text:0000000000001744 $d
     /tmp/cci8Vpl3.s:4576   .text:0000000000001748 $t
ARM GAS  /tmp/cci8Vpl3.s 			page 384


     /tmp/cci8Vpl3.s:4583   .text:0000000000001748 mpu_read_mem
     /tmp/cci8Vpl3.s:4688   .text:00000000000017bc $d
     /tmp/cci8Vpl3.s:4692   .text:00000000000017c0 $t
     /tmp/cci8Vpl3.s:4699   .text:00000000000017c0 mpu_load_firmware
     /tmp/cci8Vpl3.s:4842   .text:0000000000001874 $d
     /tmp/cci8Vpl3.s:4846   .text:0000000000001878 $t
     /tmp/cci8Vpl3.s:4853   .text:0000000000001878 mpu_set_dmp_state
     /tmp/cci8Vpl3.s:4975   .text:0000000000001904 $d
     /tmp/cci8Vpl3.s:4982   .text:0000000000001908 $t
     /tmp/cci8Vpl3.s:4989   .text:0000000000001908 mpu_run_self_test
     /tmp/cci8Vpl3.s:5489   .text:0000000000001c00 $d
     /tmp/cci8Vpl3.s:5506   .text:0000000000001c28 $t
     /tmp/cci8Vpl3.s:5540   .text:0000000000001c58 $d
     /tmp/cci8Vpl3.s:5546   .text:0000000000001c5c $t
     /tmp/cci8Vpl3.s:5553   .text:0000000000001c5c mpu_get_dmp_state
     /tmp/cci8Vpl3.s:5572   .text:0000000000001c68 $d
     /tmp/cci8Vpl3.s:5576   .text:0000000000001c6c $t
     /tmp/cci8Vpl3.s:5583   .text:0000000000001c6c mpu_get_compass_reg
     /tmp/cci8Vpl3.s:5605   .text:0000000000001c72 mpu_get_compass_fsr
     /tmp/cci8Vpl3.s:5627   .text:0000000000001c78 mpu_lp_motion_interrupt
     /tmp/cci8Vpl3.s:5978   .text:0000000000001e60 $d
     /tmp/cci8Vpl3.s:5983   .text:0000000000001e64 $t
     /tmp/cci8Vpl3.s:5990   .text:0000000000001e64 myget_ms
     /tmp/cci8Vpl3.s:6009   .rodata:0000000000000000 test
     /tmp/cci8Vpl3.s:6027   .rodata:0000000000000028 reg
     /tmp/cci8Vpl3.s:6058   .rodata:0000000000000044 hw
     /tmp/cci8Vpl3.s:6006   .rodata:0000000000000000 $d
     /tmp/cci8Vpl3.s:6068   .data:0000000000000000 $d
     /tmp/cci8Vpl3.s:6072   .data:0000000000000000 st
     /tmp/cci8Vpl3.s:6079   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
     /tmp/cci8Vpl3.s:2066   .text:0000000000000b2d $d
     /tmp/cci8Vpl3.s:2066   .text:0000000000000b2e $t

UNDEFINED SYMBOLS
i2cWrite
__aeabi_ldivmod
DelayMs
i2cRead
__aeabi_i2f
__aeabi_fsub
__aeabi_fdiv
__aeabi_fadd
__aeabi_fmul
__aeabi_f2iz
printf
puts
memcmp
__aeabi_fcmpeq
__aeabi_fcmpgt
__aeabi_fcmplt
