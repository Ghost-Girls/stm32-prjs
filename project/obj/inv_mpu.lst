ARM GAS  /tmp/cc18izUm.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"inv_mpu.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.syntax unified
  17              		.thumb
  18              		.thumb_func
  19              		.fpu softvfp
  20              		.type	set_int_enable, %function
  21              	set_int_enable:
  22              	.LFB64:
  23              		.file 1 "drivers/inv_mpu.c"
   1:drivers/inv_mpu.c **** 
   2:drivers/inv_mpu.c **** /**
   3:drivers/inv_mpu.c ****  *  @addtogroup  DRIVERS Sensor Driver Layer
   4:drivers/inv_mpu.c ****  *  @brief       Hardware drivers to communicate with sensors via I2C.
   5:drivers/inv_mpu.c ****  *
   6:drivers/inv_mpu.c ****  *  @{
   7:drivers/inv_mpu.c ****  *      @file       inv_mpu.c
   8:drivers/inv_mpu.c ****  *      @brief      An I2C-based driver for Invensense gyroscopes.
   9:drivers/inv_mpu.c ****  *      @details    This driver currently works for the following devices:
  10:drivers/inv_mpu.c ****  *                  MPU6050
  11:drivers/inv_mpu.c ****  *                  MPU6500
  12:drivers/inv_mpu.c ****  *                  MPU9150 (or MPU6050 w/ AK8975 on the auxiliary bus)
  13:drivers/inv_mpu.c ****  *                  MPU9250 (or MPU6500 w/ AK8963 on the auxiliary bus)
  14:drivers/inv_mpu.c ****  */
  15:drivers/inv_mpu.c **** #include "conf.h"
  16:drivers/inv_mpu.c **** #include "tools.h"
  17:drivers/inv_mpu.c **** 
  18:drivers/inv_mpu.c **** /* The following functions must be defined for this platform:
  19:drivers/inv_mpu.c ****  * I2C_Write(unsigned char slave_addr, unsigned char reg_addr,
  20:drivers/inv_mpu.c ****  *      unsigned char length, unsigned char const *data)
  21:drivers/inv_mpu.c ****  * I2C_Read(unsigned char slave_addr, unsigned char reg_addr,
  22:drivers/inv_mpu.c ****  *      unsigned char length, unsigned char *data)
  23:drivers/inv_mpu.c ****  * DelayMs(unsigned long num_ms)
  24:drivers/inv_mpu.c ****  * get_ms(unsigned long *count)
  25:drivers/inv_mpu.c ****  * reg_int_cb(void (*cb)(void), unsigned char port, unsigned char pin)
  26:drivers/inv_mpu.c ****  * labs(long x)
  27:drivers/inv_mpu.c ****  * fabsf(float x)
  28:drivers/inv_mpu.c ****  * min(int a, int b)
  29:drivers/inv_mpu.c ****  */
  30:drivers/inv_mpu.c **** #define MPU6050
  31:drivers/inv_mpu.c **** #define MOTION_DRIVER_TARGET_MSP430
  32:drivers/inv_mpu.c **** 
  33:drivers/inv_mpu.c **** #if defined MOTION_DRIVER_TARGET_MSP430
  34:drivers/inv_mpu.c **** /*#include "msp430.h"
ARM GAS  /tmp/cc18izUm.s 			page 2


  35:drivers/inv_mpu.c **** #include "msp430_i2c.h"
  36:drivers/inv_mpu.c **** #include "msp430_clock.h"
  37:drivers/inv_mpu.c **** #include "msp430_interrupt.h" */
  38:drivers/inv_mpu.c **** 
  39:drivers/inv_mpu.c **** #define get_ms      myget_ms
  40:drivers/inv_mpu.c **** 
  41:drivers/inv_mpu.c **** //static int reg_int_cb(struct int_param_s *int_param)
  42:drivers/inv_mpu.c **** //{
  43:drivers/inv_mpu.c **** //    /*return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
  44:drivers/inv_mpu.c **** //        int_param->active_low);*/
  45:drivers/inv_mpu.c **** //		return 0;
  46:drivers/inv_mpu.c **** //}	  
  47:drivers/inv_mpu.c **** //#define log_i(...)     do {} while (0)
  48:drivers/inv_mpu.c **** //#define log_e(...)     do {} while (0)
  49:drivers/inv_mpu.c **** #define log_e    printf
  50:drivers/inv_mpu.c **** #define log_i    printf
  51:drivers/inv_mpu.c **** /* labs is already defined by TI's toolchain. */
  52:drivers/inv_mpu.c **** /* fabs is for doubles. fabsf is for floats. */
  53:drivers/inv_mpu.c **** #define fabs        fabsf
  54:drivers/inv_mpu.c **** #define min(a,b) ((a<b)?a:b)
  55:drivers/inv_mpu.c **** 
  56:drivers/inv_mpu.c **** #elif defined EMPL_TARGET_MSP430
  57:drivers/inv_mpu.c **** #include "msp430.h"
  58:drivers/inv_mpu.c **** #include "msp430_i2c.h"
  59:drivers/inv_mpu.c **** #include "msp430_clock.h"
  60:drivers/inv_mpu.c **** #include "msp430_interrupt.h"
  61:drivers/inv_mpu.c **** #include "log.h"
  62:drivers/inv_mpu.c **** 
  63:drivers/inv_mpu.c **** static inline int reg_int_cb(struct int_param_s *int_param)
  64:drivers/inv_mpu.c **** {
  65:drivers/inv_mpu.c ****     return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
  66:drivers/inv_mpu.c ****         int_param->active_low);
  67:drivers/inv_mpu.c **** }
  68:drivers/inv_mpu.c **** #define log_i       MPL_LOGI
  69:drivers/inv_mpu.c **** #define log_e       MPL_LOGE
  70:drivers/inv_mpu.c **** /* labs is already defined by TI's toolchain. */
  71:drivers/inv_mpu.c **** /* fabs is for doubles. fabsf is for floats. */
  72:drivers/inv_mpu.c **** #define fabs        fabsf
  73:drivers/inv_mpu.c **** #define min(a,b) ((a<b)?a:b)
  74:drivers/inv_mpu.c **** #elif defined EMPL_TARGET_UC3L0
  75:drivers/inv_mpu.c **** /* Instead of using the standard TWI driver from the ASF library, we're using
  76:drivers/inv_mpu.c ****  * a TWI driver that follows the slave address + register address convention.
  77:drivers/inv_mpu.c ****  */
  78:drivers/inv_mpu.c **** #include "twi.h"
  79:drivers/inv_mpu.c **** #include "delay.h"
  80:drivers/inv_mpu.c **** #include "sysclk.h"
  81:drivers/inv_mpu.c **** #include "log.h"
  82:drivers/inv_mpu.c **** #include "sensors_xplained.h"
  83:drivers/inv_mpu.c **** #include "uc3l0_clock.h"
  84:drivers/inv_mpu.c **** #define I2C_Write(a, b, c, d)   twi_write(a, b, d, c)
  85:drivers/inv_mpu.c **** #define I2C_Read(a, b, c, d)    twi_read(a, b, d, c)
  86:drivers/inv_mpu.c **** /* DelayMs is a function already defined in ASF. */
  87:drivers/inv_mpu.c **** #define get_ms  uc3l0_get_clock_ms
  88:drivers/inv_mpu.c **** static inline int reg_int_cb(struct int_param_s *int_param)
  89:drivers/inv_mpu.c **** {
  90:drivers/inv_mpu.c ****     sensor_board_irq_connect(int_param->pin, int_param->cb, int_param->arg);
  91:drivers/inv_mpu.c ****     return 0;
ARM GAS  /tmp/cc18izUm.s 			page 3


  92:drivers/inv_mpu.c **** }
  93:drivers/inv_mpu.c **** #define log_i       MPL_LOGI
  94:drivers/inv_mpu.c **** #define log_e       MPL_LOGE
  95:drivers/inv_mpu.c **** /* UC3 is a 32-bit processor, so abs and labs are equivalent. */
  96:drivers/inv_mpu.c **** #define labs        abs
  97:drivers/inv_mpu.c **** #define fabs(x)     (((x)>0)?(x):-(x))
  98:drivers/inv_mpu.c **** #else
  99:drivers/inv_mpu.c **** //#error  Gyro driver is missing the system layer implementations.
 100:drivers/inv_mpu.c **** #endif
 101:drivers/inv_mpu.c **** 
 102:drivers/inv_mpu.c **** #if !defined MPU6050 && !defined MPU9150 && !defined MPU6500 && !defined MPU9250
 103:drivers/inv_mpu.c **** //#error  Which gyro are you using? Define MPUxxxx in your compiler options.
 104:drivers/inv_mpu.c **** #endif
 105:drivers/inv_mpu.c **** 
 106:drivers/inv_mpu.c **** /* Time for some messy macro work. =]
 107:drivers/inv_mpu.c ****  * #define MPU9150
 108:drivers/inv_mpu.c ****  * is equivalent to..
 109:drivers/inv_mpu.c ****  * #define MPU6050
 110:drivers/inv_mpu.c ****  * #define AK8975_SECONDARY
 111:drivers/inv_mpu.c ****  *
 112:drivers/inv_mpu.c ****  * #define MPU9250
 113:drivers/inv_mpu.c ****  * is equivalent to..
 114:drivers/inv_mpu.c ****  * #define MPU6500
 115:drivers/inv_mpu.c ****  * #define AK8963_SECONDARY
 116:drivers/inv_mpu.c ****  */
 117:drivers/inv_mpu.c **** #if defined MPU9150
 118:drivers/inv_mpu.c **** #ifndef MPU6050
 119:drivers/inv_mpu.c **** #define MPU6050
 120:drivers/inv_mpu.c **** #endif                          /* #ifndef MPU6050 */
 121:drivers/inv_mpu.c **** #if defined AK8963_SECONDARY
 122:drivers/inv_mpu.c **** #error "MPU9150 and AK8963_SECONDARY cannot both be defined."
 123:drivers/inv_mpu.c **** #elif !defined AK8975_SECONDARY /* #if defined AK8963_SECONDARY */
 124:drivers/inv_mpu.c **** #define AK8975_SECONDARY
 125:drivers/inv_mpu.c **** #endif                          /* #if defined AK8963_SECONDARY */
 126:drivers/inv_mpu.c **** #elif defined MPU9250           /* #if defined MPU9150 */
 127:drivers/inv_mpu.c **** #ifndef MPU6500
 128:drivers/inv_mpu.c **** #define MPU6500
 129:drivers/inv_mpu.c **** #endif                          /* #ifndef MPU6500 */
 130:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY
 131:drivers/inv_mpu.c **** #error "MPU9250 and AK8975_SECONDARY cannot both be defined."
 132:drivers/inv_mpu.c **** #elif !defined AK8963_SECONDARY /* #if defined AK8975_SECONDARY */
 133:drivers/inv_mpu.c **** #define AK8963_SECONDARY
 134:drivers/inv_mpu.c **** #endif                          /* #if defined AK8975_SECONDARY */
 135:drivers/inv_mpu.c **** #endif                          /* #if defined MPU9150 */
 136:drivers/inv_mpu.c **** 
 137:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY || defined AK8963_SECONDARY
 138:drivers/inv_mpu.c **** #define AK89xx_SECONDARY
 139:drivers/inv_mpu.c **** #else
 140:drivers/inv_mpu.c **** /* #warning "No compass = less profit for Invensense. Lame." */
 141:drivers/inv_mpu.c **** #endif
 142:drivers/inv_mpu.c **** 
 143:drivers/inv_mpu.c **** static int set_int_enable(unsigned char enable);
 144:drivers/inv_mpu.c **** 
 145:drivers/inv_mpu.c **** /* Hardware registers needed by driver. */
 146:drivers/inv_mpu.c **** struct gyro_reg_s {
 147:drivers/inv_mpu.c ****     unsigned char who_am_i;
 148:drivers/inv_mpu.c ****     unsigned char rate_div;
ARM GAS  /tmp/cc18izUm.s 			page 4


 149:drivers/inv_mpu.c ****     unsigned char lpf;
 150:drivers/inv_mpu.c ****     unsigned char prod_id;
 151:drivers/inv_mpu.c ****     unsigned char user_ctrl;
 152:drivers/inv_mpu.c ****     unsigned char fifo_en;
 153:drivers/inv_mpu.c ****     unsigned char gyro_cfg;
 154:drivers/inv_mpu.c ****     unsigned char accel_cfg;
 155:drivers/inv_mpu.c **** 
 156:drivers/inv_mpu.c ****     //unsigned char accel_cfg2;
 157:drivers/inv_mpu.c **** 
 158:drivers/inv_mpu.c ****     //unsigned char lp_accel_odr;
 159:drivers/inv_mpu.c **** 
 160:drivers/inv_mpu.c ****     unsigned char motion_thr;
 161:drivers/inv_mpu.c ****     unsigned char motion_dur;
 162:drivers/inv_mpu.c ****     unsigned char fifo_count_h;
 163:drivers/inv_mpu.c ****     unsigned char fifo_r_w;
 164:drivers/inv_mpu.c ****     unsigned char raw_gyro;
 165:drivers/inv_mpu.c ****     unsigned char raw_accel;
 166:drivers/inv_mpu.c ****     unsigned char temp;
 167:drivers/inv_mpu.c ****     unsigned char int_enable;
 168:drivers/inv_mpu.c ****     unsigned char dmp_int_status;
 169:drivers/inv_mpu.c ****     unsigned char int_status;
 170:drivers/inv_mpu.c **** 
 171:drivers/inv_mpu.c ****     //unsigned char accel_intel;
 172:drivers/inv_mpu.c **** 
 173:drivers/inv_mpu.c ****     unsigned char pwr_mgmt_1;
 174:drivers/inv_mpu.c ****     unsigned char pwr_mgmt_2;
 175:drivers/inv_mpu.c ****     unsigned char int_pin_cfg;
 176:drivers/inv_mpu.c ****     unsigned char mem_r_w;
 177:drivers/inv_mpu.c ****     unsigned char accel_offs;
 178:drivers/inv_mpu.c ****     unsigned char i2c_mst;
 179:drivers/inv_mpu.c ****     unsigned char bank_sel;
 180:drivers/inv_mpu.c ****     unsigned char mem_start_addr;
 181:drivers/inv_mpu.c ****     unsigned char prgm_start_h;
 182:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 183:drivers/inv_mpu.c ****     unsigned char s0_addr;
 184:drivers/inv_mpu.c ****     unsigned char s0_reg;
 185:drivers/inv_mpu.c ****     unsigned char s0_ctrl;
 186:drivers/inv_mpu.c ****     unsigned char s1_addr;
 187:drivers/inv_mpu.c ****     unsigned char s1_reg;
 188:drivers/inv_mpu.c ****     unsigned char s1_ctrl;
 189:drivers/inv_mpu.c ****     unsigned char s4_ctrl;
 190:drivers/inv_mpu.c ****     unsigned char s0_do;
 191:drivers/inv_mpu.c ****     unsigned char s1_do;
 192:drivers/inv_mpu.c ****     unsigned char i2c_delay_ctrl;
 193:drivers/inv_mpu.c ****     unsigned char raw_compass;
 194:drivers/inv_mpu.c ****     /* The I2C_MST_VDDIO bit is in this register. */
 195:drivers/inv_mpu.c ****     unsigned char yg_offs_tc;
 196:drivers/inv_mpu.c **** #endif
 197:drivers/inv_mpu.c **** };
 198:drivers/inv_mpu.c **** 
 199:drivers/inv_mpu.c **** /* Information specific to a particular device. */
 200:drivers/inv_mpu.c **** struct hw_s {
 201:drivers/inv_mpu.c ****     unsigned char addr;
 202:drivers/inv_mpu.c ****     unsigned short max_fifo;
 203:drivers/inv_mpu.c ****     unsigned char num_reg;
 204:drivers/inv_mpu.c ****     unsigned short temp_sens;
 205:drivers/inv_mpu.c ****     short temp_offset;
ARM GAS  /tmp/cc18izUm.s 			page 5


 206:drivers/inv_mpu.c ****     unsigned short bank_size;
 207:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 208:drivers/inv_mpu.c ****     unsigned short compass_fsr;
 209:drivers/inv_mpu.c **** #endif
 210:drivers/inv_mpu.c **** };
 211:drivers/inv_mpu.c **** 
 212:drivers/inv_mpu.c **** /* When entering motion interrupt mode, the driver keeps track of the
 213:drivers/inv_mpu.c ****  * previous state so that it can be restored at a later time.
 214:drivers/inv_mpu.c ****  * TODO: This is tacky. Fix it.
 215:drivers/inv_mpu.c ****  */
 216:drivers/inv_mpu.c **** struct motion_int_cache_s {
 217:drivers/inv_mpu.c ****     unsigned short gyro_fsr;
 218:drivers/inv_mpu.c ****     unsigned char accel_fsr;
 219:drivers/inv_mpu.c ****     unsigned short lpf;
 220:drivers/inv_mpu.c ****     unsigned short sample_rate;
 221:drivers/inv_mpu.c ****     unsigned char sensors_on;
 222:drivers/inv_mpu.c ****     unsigned char fifo_sensors;
 223:drivers/inv_mpu.c ****     unsigned char dmp_on;
 224:drivers/inv_mpu.c **** };
 225:drivers/inv_mpu.c **** 
 226:drivers/inv_mpu.c **** /* Cached chip configuration data.
 227:drivers/inv_mpu.c ****  * TODO: A lot of these can be handled with a bitmask.
 228:drivers/inv_mpu.c ****  */
 229:drivers/inv_mpu.c **** struct chip_cfg_s {
 230:drivers/inv_mpu.c ****     /* Matches gyro_cfg >> 3 & 0x03 */
 231:drivers/inv_mpu.c ****     unsigned char gyro_fsr;
 232:drivers/inv_mpu.c ****     /* Matches accel_cfg >> 3 & 0x03 */
 233:drivers/inv_mpu.c ****     unsigned char accel_fsr;
 234:drivers/inv_mpu.c ****     /* Enabled sensors. Uses same masks as fifo_en, NOT pwr_mgmt_2. */
 235:drivers/inv_mpu.c ****     unsigned char sensors;
 236:drivers/inv_mpu.c ****     /* Matches config register. */
 237:drivers/inv_mpu.c ****     unsigned char lpf;
 238:drivers/inv_mpu.c ****     unsigned char clk_src;
 239:drivers/inv_mpu.c ****     /* Sample rate, NOT rate divider. */
 240:drivers/inv_mpu.c ****     unsigned short sample_rate;
 241:drivers/inv_mpu.c ****     /* Matches fifo_en register. */
 242:drivers/inv_mpu.c ****     unsigned char fifo_enable;
 243:drivers/inv_mpu.c ****     /* Matches int enable register. */
 244:drivers/inv_mpu.c ****     unsigned char int_enable;
 245:drivers/inv_mpu.c ****     /* 1 if devices on auxiliary I2C bus appear on the primary. */
 246:drivers/inv_mpu.c ****     unsigned char bypass_mode;
 247:drivers/inv_mpu.c ****     /* 1 if half-sensitivity.
 248:drivers/inv_mpu.c ****      * NOTE: This doesn't belong here, but everything else in hw_s is const,
 249:drivers/inv_mpu.c ****      * and this allows us to save some precious RAM.
 250:drivers/inv_mpu.c ****      */
 251:drivers/inv_mpu.c ****     unsigned char accel_half;
 252:drivers/inv_mpu.c ****     /* 1 if device in low-power accel-only mode. */
 253:drivers/inv_mpu.c ****     unsigned char lp_accel_mode;
 254:drivers/inv_mpu.c ****     /* 1 if interrupts are only triggered on motion events. */
 255:drivers/inv_mpu.c ****     unsigned char int_motion_only;
 256:drivers/inv_mpu.c ****     struct motion_int_cache_s cache;
 257:drivers/inv_mpu.c ****     /* 1 for active low interrupts. */
 258:drivers/inv_mpu.c ****     unsigned char active_low_int;
 259:drivers/inv_mpu.c ****     /* 1 for latched interrupts. */
 260:drivers/inv_mpu.c ****     unsigned char latched_int;
 261:drivers/inv_mpu.c ****     /* 1 if DMP is enabled. */
 262:drivers/inv_mpu.c ****     unsigned char dmp_on;
ARM GAS  /tmp/cc18izUm.s 			page 6


 263:drivers/inv_mpu.c ****     /* Ensures that DMP will only be loaded once. */
 264:drivers/inv_mpu.c ****     unsigned char dmp_loaded;
 265:drivers/inv_mpu.c ****     /* Sampling rate used when DMP is enabled. */
 266:drivers/inv_mpu.c ****     unsigned short dmp_sample_rate;
 267:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 268:drivers/inv_mpu.c ****     /* Compass sample rate. */
 269:drivers/inv_mpu.c ****     unsigned short compass_sample_rate;
 270:drivers/inv_mpu.c ****     unsigned char compass_addr;
 271:drivers/inv_mpu.c ****     short mag_sens_adj[3];
 272:drivers/inv_mpu.c **** #endif
 273:drivers/inv_mpu.c **** };
 274:drivers/inv_mpu.c **** 
 275:drivers/inv_mpu.c **** /* Information for self-test. */
 276:drivers/inv_mpu.c **** struct test_s {
 277:drivers/inv_mpu.c ****     unsigned long gyro_sens;
 278:drivers/inv_mpu.c ****     unsigned long accel_sens;
 279:drivers/inv_mpu.c ****     unsigned char reg_rate_div;
 280:drivers/inv_mpu.c ****     unsigned char reg_lpf;
 281:drivers/inv_mpu.c ****     unsigned char reg_gyro_fsr;
 282:drivers/inv_mpu.c ****     unsigned char reg_accel_fsr;
 283:drivers/inv_mpu.c ****     unsigned short wait_ms;
 284:drivers/inv_mpu.c ****     unsigned char packet_thresh;
 285:drivers/inv_mpu.c ****     float min_dps;
 286:drivers/inv_mpu.c ****     float max_dps;
 287:drivers/inv_mpu.c ****     float max_gyro_var;
 288:drivers/inv_mpu.c ****     float min_g;
 289:drivers/inv_mpu.c ****     float max_g;
 290:drivers/inv_mpu.c ****     float max_accel_var;
 291:drivers/inv_mpu.c **** };
 292:drivers/inv_mpu.c **** 
 293:drivers/inv_mpu.c **** /* Gyro driver state variables. */
 294:drivers/inv_mpu.c **** struct gyro_state_s {
 295:drivers/inv_mpu.c ****     const struct gyro_reg_s *reg;
 296:drivers/inv_mpu.c ****     const struct hw_s *hw;
 297:drivers/inv_mpu.c ****     struct chip_cfg_s chip_cfg;
 298:drivers/inv_mpu.c ****     const struct test_s *test;
 299:drivers/inv_mpu.c **** };
 300:drivers/inv_mpu.c **** 
 301:drivers/inv_mpu.c **** /* Filter configurations. */
 302:drivers/inv_mpu.c **** enum lpf_e {
 303:drivers/inv_mpu.c ****     INV_FILTER_256HZ_NOLPF2 = 0,
 304:drivers/inv_mpu.c ****     INV_FILTER_188HZ,
 305:drivers/inv_mpu.c ****     INV_FILTER_98HZ,
 306:drivers/inv_mpu.c ****     INV_FILTER_42HZ,
 307:drivers/inv_mpu.c ****     INV_FILTER_20HZ,
 308:drivers/inv_mpu.c ****     INV_FILTER_10HZ,
 309:drivers/inv_mpu.c ****     INV_FILTER_5HZ,
 310:drivers/inv_mpu.c ****     INV_FILTER_2100HZ_NOLPF,
 311:drivers/inv_mpu.c ****     NUM_FILTER
 312:drivers/inv_mpu.c **** };
 313:drivers/inv_mpu.c **** 
 314:drivers/inv_mpu.c **** /* Full scale ranges. */
 315:drivers/inv_mpu.c **** enum gyro_fsr_e {
 316:drivers/inv_mpu.c ****     INV_FSR_250DPS = 0,
 317:drivers/inv_mpu.c ****     INV_FSR_500DPS,
 318:drivers/inv_mpu.c ****     INV_FSR_1000DPS,
 319:drivers/inv_mpu.c ****     INV_FSR_2000DPS,
ARM GAS  /tmp/cc18izUm.s 			page 7


 320:drivers/inv_mpu.c ****     NUM_GYRO_FSR
 321:drivers/inv_mpu.c **** };
 322:drivers/inv_mpu.c **** 
 323:drivers/inv_mpu.c **** /* Full scale ranges. */
 324:drivers/inv_mpu.c **** enum accel_fsr_e {
 325:drivers/inv_mpu.c ****     INV_FSR_2G = 0,
 326:drivers/inv_mpu.c ****     INV_FSR_4G,
 327:drivers/inv_mpu.c ****     INV_FSR_8G,
 328:drivers/inv_mpu.c ****     INV_FSR_16G,
 329:drivers/inv_mpu.c ****     NUM_ACCEL_FSR
 330:drivers/inv_mpu.c **** };
 331:drivers/inv_mpu.c **** 
 332:drivers/inv_mpu.c **** /* Clock sources. */
 333:drivers/inv_mpu.c **** enum clock_sel_e {
 334:drivers/inv_mpu.c ****     INV_CLK_INTERNAL = 0,
 335:drivers/inv_mpu.c ****     INV_CLK_PLL,
 336:drivers/inv_mpu.c ****     NUM_CLK
 337:drivers/inv_mpu.c **** };
 338:drivers/inv_mpu.c **** 
 339:drivers/inv_mpu.c **** /* Low-power accel wakeup rates. */
 340:drivers/inv_mpu.c **** enum lp_accel_rate_e {
 341:drivers/inv_mpu.c **** #if defined MPU6050
 342:drivers/inv_mpu.c ****     INV_LPA_1_25HZ,
 343:drivers/inv_mpu.c ****     INV_LPA_5HZ,
 344:drivers/inv_mpu.c ****     INV_LPA_20HZ,
 345:drivers/inv_mpu.c ****     INV_LPA_40HZ
 346:drivers/inv_mpu.c **** #elif defined MPU6500
 347:drivers/inv_mpu.c ****     INV_LPA_0_3125HZ,
 348:drivers/inv_mpu.c ****     INV_LPA_0_625HZ,
 349:drivers/inv_mpu.c ****     INV_LPA_1_25HZ,
 350:drivers/inv_mpu.c ****     INV_LPA_2_5HZ,
 351:drivers/inv_mpu.c ****     INV_LPA_5HZ,
 352:drivers/inv_mpu.c ****     INV_LPA_10HZ,
 353:drivers/inv_mpu.c ****     INV_LPA_20HZ,
 354:drivers/inv_mpu.c ****     INV_LPA_40HZ,
 355:drivers/inv_mpu.c ****     INV_LPA_80HZ,
 356:drivers/inv_mpu.c ****     INV_LPA_160HZ,
 357:drivers/inv_mpu.c ****     INV_LPA_320HZ,
 358:drivers/inv_mpu.c ****     INV_LPA_640HZ
 359:drivers/inv_mpu.c **** #endif
 360:drivers/inv_mpu.c **** };
 361:drivers/inv_mpu.c **** 
 362:drivers/inv_mpu.c **** #define BIT_I2C_MST_VDDIO   (0x80)
 363:drivers/inv_mpu.c **** #define BIT_FIFO_EN         (0x40)
 364:drivers/inv_mpu.c **** #define BIT_DMP_EN          (0x80)
 365:drivers/inv_mpu.c **** #define BIT_FIFO_RST        (0x04)
 366:drivers/inv_mpu.c **** #define BIT_DMP_RST         (0x08)
 367:drivers/inv_mpu.c **** #define BIT_FIFO_OVERFLOW   (0x10)
 368:drivers/inv_mpu.c **** #define BIT_DATA_RDY_EN     (0x01)
 369:drivers/inv_mpu.c **** #define BIT_DMP_INT_EN      (0x02)
 370:drivers/inv_mpu.c **** #define BIT_MOT_INT_EN      (0x40)
 371:drivers/inv_mpu.c **** #define BITS_FSR            (0x18)
 372:drivers/inv_mpu.c **** #define BITS_LPF            (0x07)
 373:drivers/inv_mpu.c **** #define BITS_HPF            (0x07)
 374:drivers/inv_mpu.c **** #define BITS_CLK            (0x07)
 375:drivers/inv_mpu.c **** #define BIT_FIFO_SIZE_1024  (0x40)
 376:drivers/inv_mpu.c **** #define BIT_FIFO_SIZE_2048  (0x80)
ARM GAS  /tmp/cc18izUm.s 			page 8


 377:drivers/inv_mpu.c **** #define BIT_FIFO_SIZE_4096  (0xC0)
 378:drivers/inv_mpu.c **** #define BIT_RESET           (0x80)
 379:drivers/inv_mpu.c **** #define BIT_SLEEP           (0x40)
 380:drivers/inv_mpu.c **** #define BIT_S0_DELAY_EN     (0x01)
 381:drivers/inv_mpu.c **** #define BIT_S2_DELAY_EN     (0x04)
 382:drivers/inv_mpu.c **** #define BITS_SLAVE_LENGTH   (0x0F)
 383:drivers/inv_mpu.c **** #define BIT_SLAVE_BYTE_SW   (0x40)
 384:drivers/inv_mpu.c **** #define BIT_SLAVE_GROUP     (0x10)
 385:drivers/inv_mpu.c **** #define BIT_SLAVE_EN        (0x80)
 386:drivers/inv_mpu.c **** #define BIT_I2C_READ        (0x80)
 387:drivers/inv_mpu.c **** #define BITS_I2C_MASTER_DLY (0x1F)
 388:drivers/inv_mpu.c **** #define BIT_AUX_IF_EN       (0x20)
 389:drivers/inv_mpu.c **** #define BIT_ACTL            (0x80)
 390:drivers/inv_mpu.c **** #define BIT_LATCH_EN        (0x20)
 391:drivers/inv_mpu.c **** #define BIT_ANY_RD_CLR      (0x10)
 392:drivers/inv_mpu.c **** #define BIT_BYPASS_EN       (0x02)
 393:drivers/inv_mpu.c **** #define BITS_WOM_EN         (0xC0)
 394:drivers/inv_mpu.c **** #define BIT_LPA_CYCLE       (0x20)
 395:drivers/inv_mpu.c **** #define BIT_STBY_XA         (0x20)
 396:drivers/inv_mpu.c **** #define BIT_STBY_YA         (0x10)
 397:drivers/inv_mpu.c **** #define BIT_STBY_ZA         (0x08)
 398:drivers/inv_mpu.c **** #define BIT_STBY_XG         (0x04)
 399:drivers/inv_mpu.c **** #define BIT_STBY_YG         (0x02)
 400:drivers/inv_mpu.c **** #define BIT_STBY_ZG         (0x01)
 401:drivers/inv_mpu.c **** #define BIT_STBY_XYZA       (BIT_STBY_XA | BIT_STBY_YA | BIT_STBY_ZA)
 402:drivers/inv_mpu.c **** #define BIT_STBY_XYZG       (BIT_STBY_XG | BIT_STBY_YG | BIT_STBY_ZG)
 403:drivers/inv_mpu.c **** 
 404:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY
 405:drivers/inv_mpu.c **** #define SUPPORTS_AK89xx_HIGH_SENS   (0x00)
 406:drivers/inv_mpu.c **** #define AK89xx_FSR                  (9830)
 407:drivers/inv_mpu.c **** #elif defined AK8963_SECONDARY
 408:drivers/inv_mpu.c **** #define SUPPORTS_AK89xx_HIGH_SENS   (0x10)
 409:drivers/inv_mpu.c **** #define AK89xx_FSR                  (4915)
 410:drivers/inv_mpu.c **** #endif
 411:drivers/inv_mpu.c **** 
 412:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 413:drivers/inv_mpu.c **** #define AKM_REG_WHOAMI      (0x00)
 414:drivers/inv_mpu.c **** 
 415:drivers/inv_mpu.c **** #define AKM_REG_ST1         (0x02)
 416:drivers/inv_mpu.c **** #define AKM_REG_HXL         (0x03)
 417:drivers/inv_mpu.c **** #define AKM_REG_ST2         (0x09)
 418:drivers/inv_mpu.c **** 
 419:drivers/inv_mpu.c **** #define AKM_REG_CNTL        (0x0A)
 420:drivers/inv_mpu.c **** #define AKM_REG_ASTC        (0x0C)
 421:drivers/inv_mpu.c **** #define AKM_REG_ASAX        (0x10)
 422:drivers/inv_mpu.c **** #define AKM_REG_ASAY        (0x11)
 423:drivers/inv_mpu.c **** #define AKM_REG_ASAZ        (0x12)
 424:drivers/inv_mpu.c **** 
 425:drivers/inv_mpu.c **** #define AKM_DATA_READY      (0x01)
 426:drivers/inv_mpu.c **** #define AKM_DATA_OVERRUN    (0x02)
 427:drivers/inv_mpu.c **** #define AKM_OVERFLOW        (0x80)
 428:drivers/inv_mpu.c **** #define AKM_DATA_ERROR      (0x40)
 429:drivers/inv_mpu.c **** 
 430:drivers/inv_mpu.c **** #define AKM_BIT_SELF_TEST   (0x40)
 431:drivers/inv_mpu.c **** 
 432:drivers/inv_mpu.c **** #define AKM_POWER_DOWN          (0x00 | SUPPORTS_AK89xx_HIGH_SENS)
 433:drivers/inv_mpu.c **** #define AKM_SINGLE_MEASUREMENT  (0x01 | SUPPORTS_AK89xx_HIGH_SENS)
ARM GAS  /tmp/cc18izUm.s 			page 9


 434:drivers/inv_mpu.c **** #define AKM_FUSE_ROM_ACCESS     (0x0F | SUPPORTS_AK89xx_HIGH_SENS)
 435:drivers/inv_mpu.c **** #define AKM_MODE_SELF_TEST      (0x08 | SUPPORTS_AK89xx_HIGH_SENS)
 436:drivers/inv_mpu.c **** 
 437:drivers/inv_mpu.c **** #define AKM_WHOAMI      (0x48)
 438:drivers/inv_mpu.c **** #endif
 439:drivers/inv_mpu.c **** 
 440:drivers/inv_mpu.c **** #if defined MPU6050
 441:drivers/inv_mpu.c **** /*
 442:drivers/inv_mpu.c **** const struct gyro_reg_s reg = {
 443:drivers/inv_mpu.c ****    .who_am_i       = 0x75,
 444:drivers/inv_mpu.c ****     .rate_div       = 0x19,
 445:drivers/inv_mpu.c ****     .lpf            = 0x1A,
 446:drivers/inv_mpu.c ****     .prod_id        = 0x0C,
 447:drivers/inv_mpu.c ****     .user_ctrl      = 0x6A,
 448:drivers/inv_mpu.c ****     .fifo_en        = 0x23,
 449:drivers/inv_mpu.c ****     .gyro_cfg       = 0x1B,
 450:drivers/inv_mpu.c ****     .accel_cfg      = 0x1C,
 451:drivers/inv_mpu.c ****     .motion_thr     = 0x1F,
 452:drivers/inv_mpu.c ****     .motion_dur     = 0x20,
 453:drivers/inv_mpu.c ****     .fifo_count_h   = 0x72,
 454:drivers/inv_mpu.c ****     .fifo_r_w       = 0x74,
 455:drivers/inv_mpu.c ****     .raw_gyro       = 0x43,
 456:drivers/inv_mpu.c ****     .raw_accel      = 0x3B,
 457:drivers/inv_mpu.c ****     .temp           = 0x41,
 458:drivers/inv_mpu.c ****     .int_enable     = 0x38,
 459:drivers/inv_mpu.c ****     .dmp_int_status = 0x39,
 460:drivers/inv_mpu.c ****     .int_status     = 0x3A,
 461:drivers/inv_mpu.c ****     .pwr_mgmt_1     = 0x6B,
 462:drivers/inv_mpu.c ****     .pwr_mgmt_2     = 0x6C,
 463:drivers/inv_mpu.c ****     .int_pin_cfg    = 0x37,
 464:drivers/inv_mpu.c ****     .mem_r_w        = 0x6F,
 465:drivers/inv_mpu.c ****     .accel_offs     = 0x06,
 466:drivers/inv_mpu.c ****     .i2c_mst        = 0x24,
 467:drivers/inv_mpu.c ****     .bank_sel       = 0x6D,
 468:drivers/inv_mpu.c ****     .mem_start_addr = 0x6E,
 469:drivers/inv_mpu.c ****     .prgm_start_h   = 0x70
 470:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 471:drivers/inv_mpu.c ****     ,.raw_compass   = 0x49,
 472:drivers/inv_mpu.c ****     .yg_offs_tc     = 0x01,
 473:drivers/inv_mpu.c ****     .s0_addr        = 0x25,
 474:drivers/inv_mpu.c ****     .s0_reg         = 0x26,
 475:drivers/inv_mpu.c ****     .s0_ctrl        = 0x27,
 476:drivers/inv_mpu.c ****     .s1_addr        = 0x28,
 477:drivers/inv_mpu.c ****     .s1_reg         = 0x29,
 478:drivers/inv_mpu.c ****     .s1_ctrl        = 0x2A,
 479:drivers/inv_mpu.c ****     .s4_ctrl        = 0x34,
 480:drivers/inv_mpu.c ****     .s0_do          = 0x63,
 481:drivers/inv_mpu.c ****     .s1_do          = 0x64,
 482:drivers/inv_mpu.c ****     .i2c_delay_ctrl = 0x67
 483:drivers/inv_mpu.c **** #endif
 484:drivers/inv_mpu.c **** };
 485:drivers/inv_mpu.c **** const struct hw_s hw = {
 486:drivers/inv_mpu.c ****     .addr           = 0x68,
 487:drivers/inv_mpu.c ****     .max_fifo       = 1024,
 488:drivers/inv_mpu.c ****     .num_reg        = 118,
 489:drivers/inv_mpu.c ****     .temp_sens      = 340,
 490:drivers/inv_mpu.c ****     .temp_offset    = -521,
ARM GAS  /tmp/cc18izUm.s 			page 10


 491:drivers/inv_mpu.c ****     .bank_size      = 256
 492:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 493:drivers/inv_mpu.c ****     ,.compass_fsr    = AK89xx_FSR
 494:drivers/inv_mpu.c **** #endif
 495:drivers/inv_mpu.c **** };
 496:drivers/inv_mpu.c **** */
 497:drivers/inv_mpu.c **** const struct hw_s hw={
 498:drivers/inv_mpu.c ****   0x68,	 //addr
 499:drivers/inv_mpu.c ****   1024,	 //max_fifo
 500:drivers/inv_mpu.c ****   118,	 //num_reg
 501:drivers/inv_mpu.c ****   340,	 //temp_sens
 502:drivers/inv_mpu.c ****   -521,	 //temp_offset
 503:drivers/inv_mpu.c ****   256	 //bank_size
 504:drivers/inv_mpu.c **** };
 505:drivers/inv_mpu.c **** const struct gyro_reg_s reg = {
 506:drivers/inv_mpu.c **** 0x75,  //who_am_i
 507:drivers/inv_mpu.c **** 0x19,  //rate_div
 508:drivers/inv_mpu.c **** 0x1A,  //lpf
 509:drivers/inv_mpu.c **** 0x0C,  //prod_id
 510:drivers/inv_mpu.c **** 0x6A,  //user_ctrl
 511:drivers/inv_mpu.c **** 0x23,  //fifo_en
 512:drivers/inv_mpu.c **** 0x1B,  //gyro_cfg
 513:drivers/inv_mpu.c **** 0x1C,  //accel_cfg
 514:drivers/inv_mpu.c **** 0x1F,  // motion_thr
 515:drivers/inv_mpu.c **** 0x20,  // motion_dur
 516:drivers/inv_mpu.c **** 0x72,  // fifo_count_h
 517:drivers/inv_mpu.c **** 0x74,  // fifo_r_w
 518:drivers/inv_mpu.c **** 0x43,  // raw_gyro
 519:drivers/inv_mpu.c **** 0x3B,  // raw_accel
 520:drivers/inv_mpu.c **** 0x41,  // temp
 521:drivers/inv_mpu.c **** 0x38,  // int_enable
 522:drivers/inv_mpu.c **** 0x39,  //  dmp_int_status
 523:drivers/inv_mpu.c **** 0x3A,  //  int_status
 524:drivers/inv_mpu.c **** 0x6B,  // pwr_mgmt_1
 525:drivers/inv_mpu.c **** 0x6C,  // pwr_mgmt_2
 526:drivers/inv_mpu.c **** 0x37,  // int_pin_cfg
 527:drivers/inv_mpu.c **** 0x6F,  // mem_r_w
 528:drivers/inv_mpu.c **** 0x06,  // accel_offs
 529:drivers/inv_mpu.c **** 0x24,  // i2c_mst
 530:drivers/inv_mpu.c **** 0x6D,  // bank_sel
 531:drivers/inv_mpu.c **** 0x6E,  // mem_start_addr
 532:drivers/inv_mpu.c **** 0x70   // prgm_start_h
 533:drivers/inv_mpu.c **** };
 534:drivers/inv_mpu.c **** 
 535:drivers/inv_mpu.c **** //const struct test_s test = {
 536:drivers/inv_mpu.c **** //    .gyro_sens      = 32768/250,
 537:drivers/inv_mpu.c **** //    .accel_sens     = 32768/16,	  
 538:drivers/inv_mpu.c **** //    .reg_rate_div   = 0,    /* 1kHz. */
 539:drivers/inv_mpu.c **** //    .reg_lpf        = 1,    /* 188Hz. */
 540:drivers/inv_mpu.c **** //    .reg_gyro_fsr   = 0,    /* 250dps. */
 541:drivers/inv_mpu.c **** //    .reg_accel_fsr  = 0x18, /* 16g. */
 542:drivers/inv_mpu.c **** //    .wait_ms        = 50,
 543:drivers/inv_mpu.c **** //    .packet_thresh  = 5,    /* 5% */
 544:drivers/inv_mpu.c **** //    .min_dps        = 10.f,
 545:drivers/inv_mpu.c **** //    .max_dps        = 105.f,
 546:drivers/inv_mpu.c **** //    .max_gyro_var   = 0.14f,
 547:drivers/inv_mpu.c **** //    .min_g          = 0.3f,
ARM GAS  /tmp/cc18izUm.s 			page 11


 548:drivers/inv_mpu.c **** //    .max_g          = 0.95f,
 549:drivers/inv_mpu.c **** //    .max_accel_var  = 0.14f
 550:drivers/inv_mpu.c **** //};
 551:drivers/inv_mpu.c **** const struct test_s test={
 552:drivers/inv_mpu.c **** 32768/250,		 //gyro_sens
 553:drivers/inv_mpu.c **** 32768/16,		 //	accel_sens
 554:drivers/inv_mpu.c **** 0,				 //	reg_rate_div
 555:drivers/inv_mpu.c **** 1,				//	reg_lpf
 556:drivers/inv_mpu.c **** 0,				 //	reg_gyro_fsr
 557:drivers/inv_mpu.c **** 0x18,			//	reg_accel_fsr
 558:drivers/inv_mpu.c **** 50,				//	wait_ms
 559:drivers/inv_mpu.c **** 5,				//	packet_thresh
 560:drivers/inv_mpu.c **** 10.0f,			 //	min_dps
 561:drivers/inv_mpu.c **** 105.0f,			 //	max_dps
 562:drivers/inv_mpu.c **** 0.14f,			//	max_gyro_var
 563:drivers/inv_mpu.c **** 0.3f,		   //	min_g
 564:drivers/inv_mpu.c **** 0.95f,		   //	max_g
 565:drivers/inv_mpu.c **** 0.14f		   //	max_accel_var
 566:drivers/inv_mpu.c **** };
 567:drivers/inv_mpu.c **** /*
 568:drivers/inv_mpu.c **** static struct gyro_state_s st = {
 569:drivers/inv_mpu.c ****     .reg = &reg,
 570:drivers/inv_mpu.c ****     .hw = &hw,
 571:drivers/inv_mpu.c ****     .test = &test
 572:drivers/inv_mpu.c **** };	*/
 573:drivers/inv_mpu.c **** static struct gyro_state_s st={
 574:drivers/inv_mpu.c ****   &reg,
 575:drivers/inv_mpu.c ****   &hw,
 576:drivers/inv_mpu.c ****   {0},
 577:drivers/inv_mpu.c ****   &test
 578:drivers/inv_mpu.c **** };
 579:drivers/inv_mpu.c **** //st.chip_cfg.dmp_on = 1;
 580:drivers/inv_mpu.c **** //st.dhip_cfg.fifo_enabel = 1;
 581:drivers/inv_mpu.c **** /*
 582:drivers/inv_mpu.c **** #elif defined MPU6500
 583:drivers/inv_mpu.c **** const struct gyro_reg_s reg = {
 584:drivers/inv_mpu.c ****     .who_am_i       = 0x75,
 585:drivers/inv_mpu.c ****     .rate_div       = 0x19,
 586:drivers/inv_mpu.c ****     .lpf            = 0x1A,
 587:drivers/inv_mpu.c ****     .prod_id        = 0x0C,
 588:drivers/inv_mpu.c ****     .user_ctrl      = 0x6A,
 589:drivers/inv_mpu.c ****     .fifo_en        = 0x23,
 590:drivers/inv_mpu.c ****     .gyro_cfg       = 0x1B,
 591:drivers/inv_mpu.c ****     .accel_cfg      = 0x1C,
 592:drivers/inv_mpu.c ****     .accel_cfg2     = 0x1D,
 593:drivers/inv_mpu.c ****     .lp_accel_odr   = 0x1E,
 594:drivers/inv_mpu.c ****     .motion_thr     = 0x1F,
 595:drivers/inv_mpu.c ****     .motion_dur     = 0x20,
 596:drivers/inv_mpu.c ****     .fifo_count_h   = 0x72,
 597:drivers/inv_mpu.c ****     .fifo_r_w       = 0x74,
 598:drivers/inv_mpu.c ****     .raw_gyro       = 0x43,
 599:drivers/inv_mpu.c ****     .raw_accel      = 0x3B,
 600:drivers/inv_mpu.c ****     .temp           = 0x41,
 601:drivers/inv_mpu.c ****     .int_enable     = 0x38,
 602:drivers/inv_mpu.c ****     .dmp_int_status = 0x39,
 603:drivers/inv_mpu.c ****     .int_status     = 0x3A,
 604:drivers/inv_mpu.c ****     .accel_intel    = 0x69,
ARM GAS  /tmp/cc18izUm.s 			page 12


 605:drivers/inv_mpu.c ****     .pwr_mgmt_1     = 0x6B,
 606:drivers/inv_mpu.c ****     .pwr_mgmt_2     = 0x6C,
 607:drivers/inv_mpu.c ****     .int_pin_cfg    = 0x37,
 608:drivers/inv_mpu.c ****     .mem_r_w        = 0x6F,
 609:drivers/inv_mpu.c ****     .accel_offs     = 0x77,
 610:drivers/inv_mpu.c ****     .i2c_mst        = 0x24,
 611:drivers/inv_mpu.c ****     .bank_sel       = 0x6D,
 612:drivers/inv_mpu.c ****     .mem_start_addr = 0x6E,
 613:drivers/inv_mpu.c ****     .prgm_start_h   = 0x70
 614:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 615:drivers/inv_mpu.c ****     ,.raw_compass   = 0x49,
 616:drivers/inv_mpu.c ****     .s0_addr        = 0x25,
 617:drivers/inv_mpu.c ****     .s0_reg         = 0x26,
 618:drivers/inv_mpu.c ****     .s0_ctrl        = 0x27,
 619:drivers/inv_mpu.c ****     .s1_addr        = 0x28,
 620:drivers/inv_mpu.c ****     .s1_reg         = 0x29,
 621:drivers/inv_mpu.c ****     .s1_ctrl        = 0x2A,
 622:drivers/inv_mpu.c ****     .s4_ctrl        = 0x34,
 623:drivers/inv_mpu.c ****     .s0_do          = 0x63,
 624:drivers/inv_mpu.c ****     .s1_do          = 0x64,
 625:drivers/inv_mpu.c ****     .i2c_delay_ctrl = 0x67
 626:drivers/inv_mpu.c **** #endif
 627:drivers/inv_mpu.c **** };
 628:drivers/inv_mpu.c **** const struct hw_s hw = {
 629:drivers/inv_mpu.c ****     .addr           = 0x68,
 630:drivers/inv_mpu.c ****     .max_fifo       = 1024,
 631:drivers/inv_mpu.c ****     .num_reg        = 128,
 632:drivers/inv_mpu.c ****     .temp_sens      = 321,
 633:drivers/inv_mpu.c ****     .temp_offset    = 0,
 634:drivers/inv_mpu.c ****     .bank_size      = 256
 635:drivers/inv_mpu.c **** #if defined AK89xx_SECONDARY
 636:drivers/inv_mpu.c ****     ,.compass_fsr    = AK89xx_FSR
 637:drivers/inv_mpu.c **** #endif
 638:drivers/inv_mpu.c **** };
 639:drivers/inv_mpu.c **** */
 640:drivers/inv_mpu.c **** //const struct test_s test = {
 641:drivers/inv_mpu.c **** //    .gyro_sens      = 32768/250,
 642:drivers/inv_mpu.c **** //    .accel_sens     = 32768/16,
 643:drivers/inv_mpu.c **** //    .reg_rate_div   = 0,    /* 1kHz. */
 644:drivers/inv_mpu.c **** //    .reg_lpf        = 1,    /* 188Hz. */
 645:drivers/inv_mpu.c **** //    .reg_gyro_fsr   = 0,    /* 250dps. */
 646:drivers/inv_mpu.c **** //    .reg_accel_fsr  = 0x18, /* 16g. */
 647:drivers/inv_mpu.c **** //    .wait_ms        = 50,
 648:drivers/inv_mpu.c **** //    .packet_thresh  = 5,    /* 5% */
 649:drivers/inv_mpu.c **** //    .min_dps        = 10.f,
 650:drivers/inv_mpu.c **** //    .max_dps        = 105.f,
 651:drivers/inv_mpu.c **** //    .max_gyro_var   = 0.14f,
 652:drivers/inv_mpu.c **** //    .min_g          = 0.3f,
 653:drivers/inv_mpu.c **** //    .max_g          = 0.95f,
 654:drivers/inv_mpu.c **** //    .max_accel_var  = 0.14f
 655:drivers/inv_mpu.c **** //};
 656:drivers/inv_mpu.c **** //
 657:drivers/inv_mpu.c **** //static struct gyro_state_s st = {
 658:drivers/inv_mpu.c **** //    .reg = &reg,
 659:drivers/inv_mpu.c **** //    .hw = &hw,
 660:drivers/inv_mpu.c **** //    .test = &test
 661:drivers/inv_mpu.c **** //};
ARM GAS  /tmp/cc18izUm.s 			page 13


 662:drivers/inv_mpu.c **** #endif
 663:drivers/inv_mpu.c **** 
 664:drivers/inv_mpu.c **** #define MAX_PACKET_LENGTH (12)
 665:drivers/inv_mpu.c **** 
 666:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 667:drivers/inv_mpu.c **** static int setup_compass(void);
 668:drivers/inv_mpu.c **** #define MAX_COMPASS_SAMPLE_RATE (100)
 669:drivers/inv_mpu.c **** #endif
 670:drivers/inv_mpu.c **** 
 671:drivers/inv_mpu.c **** /**
 672:drivers/inv_mpu.c ****  *  @brief      Enable/disable data ready interrupt.
 673:drivers/inv_mpu.c ****  *  If the DMP is on, the DMP interrupt is enabled. Otherwise, the data ready
 674:drivers/inv_mpu.c ****  *  interrupt is used.
 675:drivers/inv_mpu.c ****  *  @param[in]  enable      1 to enable interrupt.
 676:drivers/inv_mpu.c ****  *  @return     0 if successful.
 677:drivers/inv_mpu.c ****  */
 678:drivers/inv_mpu.c **** static int set_int_enable(unsigned char enable)
 679:drivers/inv_mpu.c **** {
  24              		.loc 1 679 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 8
  27              		@ frame_needed = 0, uses_anonymous_args = 0
  28              	.LVL0:
  29 0000 00B5     		push	{lr}
  30              		.cfi_def_cfa_offset 4
  31              		.cfi_offset 14, -4
  32 0002 83B0     		sub	sp, sp, #12
  33              		.cfi_def_cfa_offset 16
 680:drivers/inv_mpu.c ****     unsigned char tmp;
 681:drivers/inv_mpu.c **** 
 682:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on) {
  34              		.loc 1 682 0
  35 0004 234B     		ldr	r3, .L13
  36 0006 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
  37 000a CBB1     		cbz	r3, .L2
 683:drivers/inv_mpu.c ****         if (enable)
  38              		.loc 1 683 0
  39 000c A0B1     		cbz	r0, .L3
 684:drivers/inv_mpu.c ****             tmp = BIT_DMP_INT_EN;
  40              		.loc 1 684 0
  41 000e 0223     		movs	r3, #2
  42 0010 8DF80730 		strb	r3, [sp, #7]
  43              	.L4:
 685:drivers/inv_mpu.c ****         else
 686:drivers/inv_mpu.c ****             tmp = 0x00;
 687:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &tmp))
  44              		.loc 1 687 0
  45 0014 1F4B     		ldr	r3, .L13
  46 0016 1968     		ldr	r1, [r3]
  47 0018 5868     		ldr	r0, [r3, #4]
  48              	.LVL1:
  49 001a 0DF10703 		add	r3, sp, #7
  50 001e 0122     		movs	r2, #1
  51 0020 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
  52 0022 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  53 0024 FFF7FEFF 		bl	I2C_Write
  54              	.LVL2:
ARM GAS  /tmp/cc18izUm.s 			page 14


  55 0028 40BB     		cbnz	r0, .L8
 688:drivers/inv_mpu.c ****             return -1;
 689:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
  56              		.loc 1 689 0
  57 002a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
  58 002e 194B     		ldr	r3, .L13
  59 0030 5A74     		strb	r2, [r3, #17]
  60              	.L1:
 690:drivers/inv_mpu.c ****     } else {
 691:drivers/inv_mpu.c ****         if (!st.chip_cfg.sensors)
 692:drivers/inv_mpu.c ****             return -1;
 693:drivers/inv_mpu.c ****         if (enable && st.chip_cfg.int_enable)
 694:drivers/inv_mpu.c ****             return 0;
 695:drivers/inv_mpu.c ****         if (enable)
 696:drivers/inv_mpu.c ****             tmp = BIT_DATA_RDY_EN;
 697:drivers/inv_mpu.c ****         else
 698:drivers/inv_mpu.c ****             tmp = 0x00;
 699:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &tmp))
 700:drivers/inv_mpu.c ****             return -1;
 701:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
 702:drivers/inv_mpu.c ****     }
 703:drivers/inv_mpu.c ****     return 0;
 704:drivers/inv_mpu.c **** }
  61              		.loc 1 704 0
  62 0032 03B0     		add	sp, sp, #12
  63              		.cfi_remember_state
  64              		.cfi_def_cfa_offset 4
  65              		@ sp needed
  66 0034 5DF804FB 		ldr	pc, [sp], #4
  67              	.LVL3:
  68              	.L3:
  69              		.cfi_restore_state
 686:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &tmp))
  70              		.loc 1 686 0
  71 0038 0023     		movs	r3, #0
  72 003a 8DF80730 		strb	r3, [sp, #7]
  73 003e E9E7     		b	.L4
  74              	.L2:
 691:drivers/inv_mpu.c ****             return -1;
  75              		.loc 1 691 0
  76 0040 144B     		ldr	r3, .L13
  77 0042 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  78 0044 EBB1     		cbz	r3, .L9
 693:drivers/inv_mpu.c ****             return 0;
  79              		.loc 1 693 0
  80 0046 A8B1     		cbz	r0, .L6
 693:drivers/inv_mpu.c ****             return 0;
  81              		.loc 1 693 0 is_stmt 0 discriminator 1
  82 0048 124B     		ldr	r3, .L13
  83 004a 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
  84 004c E3B9     		cbnz	r3, .L10
 696:drivers/inv_mpu.c ****         else
  85              		.loc 1 696 0 is_stmt 1
  86 004e 0123     		movs	r3, #1
  87 0050 8DF80730 		strb	r3, [sp, #7]
  88              	.L7:
 699:drivers/inv_mpu.c ****             return -1;
ARM GAS  /tmp/cc18izUm.s 			page 15


  89              		.loc 1 699 0
  90 0054 0F4B     		ldr	r3, .L13
  91 0056 1968     		ldr	r1, [r3]
  92 0058 5868     		ldr	r0, [r3, #4]
  93              	.LVL4:
  94 005a 0DF10703 		add	r3, sp, #7
  95 005e 0122     		movs	r2, #1
  96 0060 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
  97 0062 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  98 0064 FFF7FEFF 		bl	I2C_Write
  99              	.LVL5:
 100 0068 80B9     		cbnz	r0, .L11
 701:drivers/inv_mpu.c ****     }
 101              		.loc 1 701 0
 102 006a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 103 006e 094B     		ldr	r3, .L13
 104 0070 5A74     		strb	r2, [r3, #17]
 105 0072 DEE7     		b	.L1
 106              	.LVL6:
 107              	.L6:
 698:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &tmp))
 108              		.loc 1 698 0
 109 0074 0023     		movs	r3, #0
 110 0076 8DF80730 		strb	r3, [sp, #7]
 111 007a EBE7     		b	.L7
 112              	.LVL7:
 113              	.L8:
 688:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
 114              		.loc 1 688 0
 115 007c 4FF0FF30 		mov	r0, #-1
 116 0080 D7E7     		b	.L1
 117              	.LVL8:
 118              	.L9:
 692:drivers/inv_mpu.c ****         if (enable && st.chip_cfg.int_enable)
 119              		.loc 1 692 0
 120 0082 4FF0FF30 		mov	r0, #-1
 121              	.LVL9:
 122 0086 D4E7     		b	.L1
 123              	.LVL10:
 124              	.L10:
 694:drivers/inv_mpu.c ****         if (enable)
 125              		.loc 1 694 0
 126 0088 0020     		movs	r0, #0
 127              	.LVL11:
 128 008a D2E7     		b	.L1
 129              	.L11:
 700:drivers/inv_mpu.c ****         st.chip_cfg.int_enable = tmp;
 130              		.loc 1 700 0
 131 008c 4FF0FF30 		mov	r0, #-1
 132 0090 CFE7     		b	.L1
 133              	.L14:
 134 0092 00BF     		.align	2
 135              	.L13:
 136 0094 00000000 		.word	.LANCHOR0
 137              		.cfi_endproc
 138              	.LFE64:
 139              		.size	set_int_enable, .-set_int_enable
ARM GAS  /tmp/cc18izUm.s 			page 16


 140              		.global	__aeabi_ldivmod
 141              		.align	1
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu softvfp
 146              		.type	get_st_biases, %function
 147              	get_st_biases:
 148              	.LFB99:
 705:drivers/inv_mpu.c **** 
 706:drivers/inv_mpu.c **** 
 707:drivers/inv_mpu.c **** /**
 708:drivers/inv_mpu.c ****  *  @brief      Register dump for testing.
 709:drivers/inv_mpu.c ****  *  @return     0 if successful.
 710:drivers/inv_mpu.c ****  */
 711:drivers/inv_mpu.c **** int mpu_reg_dump(void)
 712:drivers/inv_mpu.c **** {
 713:drivers/inv_mpu.c ****     unsigned char ii;
 714:drivers/inv_mpu.c ****     unsigned char data;
 715:drivers/inv_mpu.c **** 
 716:drivers/inv_mpu.c ****     for (ii = 0; ii < st.hw->num_reg; ii++) {
 717:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 718:drivers/inv_mpu.c ****             continue;
 719:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, ii, 1, &data))
 720:drivers/inv_mpu.c ****             return -1;
 721:drivers/inv_mpu.c ****         //log_i("%#5x: %#5x\r\n", ii, data);
 722:drivers/inv_mpu.c ****     }
 723:drivers/inv_mpu.c ****     return 0;
 724:drivers/inv_mpu.c **** }
 725:drivers/inv_mpu.c **** 
 726:drivers/inv_mpu.c **** /**
 727:drivers/inv_mpu.c ****  *  @brief      Read from a single register.
 728:drivers/inv_mpu.c ****  *  NOTE: The memory and FIFO read/write registers cannot be accessed.
 729:drivers/inv_mpu.c ****  *  @param[in]  reg     Register address.
 730:drivers/inv_mpu.c ****  *  @param[out] data    Register data.
 731:drivers/inv_mpu.c ****  *  @return     0 if successful.
 732:drivers/inv_mpu.c ****  */
 733:drivers/inv_mpu.c **** int mpu_read_reg(unsigned char reg, unsigned char *data)
 734:drivers/inv_mpu.c **** {
 735:drivers/inv_mpu.c ****     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
 736:drivers/inv_mpu.c ****         return -1;
 737:drivers/inv_mpu.c ****     if (reg >= st.hw->num_reg)
 738:drivers/inv_mpu.c ****         return -1;
 739:drivers/inv_mpu.c ****     return I2C_Read(st.hw->addr, reg, 1, data);
 740:drivers/inv_mpu.c **** }
 741:drivers/inv_mpu.c **** 
 742:drivers/inv_mpu.c **** /**
 743:drivers/inv_mpu.c ****  *  @brief      Initialize hardware.
 744:drivers/inv_mpu.c ****  *  Initial configuration:\n
 745:drivers/inv_mpu.c ****  *  Gyro FSR: +/- 2000DPS\n
 746:drivers/inv_mpu.c ****  *  Accel FSR +/- 2G\n
 747:drivers/inv_mpu.c ****  *  DLPF: 42Hz\n
 748:drivers/inv_mpu.c ****  *  FIFO rate: 50Hz\n
 749:drivers/inv_mpu.c ****  *  Clock source: Gyro PLL\n
 750:drivers/inv_mpu.c ****  *  FIFO: Disabled.\n
 751:drivers/inv_mpu.c ****  *  Data ready interrupt: Disabled, active low, unlatched.
 752:drivers/inv_mpu.c ****  *  @param[in]  int_param   Platform-specific parameters to interrupt API.
ARM GAS  /tmp/cc18izUm.s 			page 17


 753:drivers/inv_mpu.c ****  *  @return     0 if successful.
 754:drivers/inv_mpu.c ****  */
 755:drivers/inv_mpu.c **** int mpu_init(void)
 756:drivers/inv_mpu.c **** {
 757:drivers/inv_mpu.c ****     unsigned char data[6], rev;
 758:drivers/inv_mpu.c **** 
 759:drivers/inv_mpu.c ****     /* Reset device. */
 760:drivers/inv_mpu.c ****     data[0] = 0x80;//BIT_RESET;
 761:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 762:drivers/inv_mpu.c ****         return -1;
 763:drivers/inv_mpu.c ****     DelayMs(100);
 764:drivers/inv_mpu.c **** 
 765:drivers/inv_mpu.c ****     /* Wake up chip. */
 766:drivers/inv_mpu.c ****     data[0] = 0x00;
 767:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 768:drivers/inv_mpu.c ****         return -1;
 769:drivers/inv_mpu.c **** 
 770:drivers/inv_mpu.c **** #if defined MPU6050
 771:drivers/inv_mpu.c ****     /* Check product revision. */
 772:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->accel_offs, 6, data))
 773:drivers/inv_mpu.c ****         return -1;
 774:drivers/inv_mpu.c ****     rev = ((data[5] & 0x01) << 2) | ((data[3] & 0x01) << 1) |
 775:drivers/inv_mpu.c ****         (data[1] & 0x01);
 776:drivers/inv_mpu.c **** 
 777:drivers/inv_mpu.c ****     if (rev) {
 778:drivers/inv_mpu.c ****         /* Congrats, these parts are better. */
 779:drivers/inv_mpu.c ****         if (rev == 1)
 780:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 781:drivers/inv_mpu.c ****         else if (rev == 2)
 782:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 0;
 783:drivers/inv_mpu.c ****         else {
 784:drivers/inv_mpu.c ****             log_e("Unsupported software product rev %d.\n",rev);
 785:drivers/inv_mpu.c ****             return -1;
 786:drivers/inv_mpu.c ****         }
 787:drivers/inv_mpu.c ****     } else {
 788:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->prod_id, 1, &(data[0])))
 789:drivers/inv_mpu.c ****             return -1;
 790:drivers/inv_mpu.c ****         rev = data[0] & 0x0F;
 791:drivers/inv_mpu.c ****         if (!rev) {
 792:drivers/inv_mpu.c ****             log_e("Product ID read as 0 indicates device is either incompatible or an MPU3050.\r\n"
 793:drivers/inv_mpu.c ****             return -1;
 794:drivers/inv_mpu.c ****         } else if (rev == 4) {
 795:drivers/inv_mpu.c ****             log_i("Half sensitivity part found.\r\n");
 796:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 797:drivers/inv_mpu.c ****         } else
 798:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 0;
 799:drivers/inv_mpu.c ****     }
 800:drivers/inv_mpu.c **** #elif defined MPU6500
 801:drivers/inv_mpu.c **** #define MPU6500_MEM_REV_ADDR    (0x17)
 802:drivers/inv_mpu.c ****     if (mpu_read_mem(MPU6500_MEM_REV_ADDR, 1, &rev))
 803:drivers/inv_mpu.c ****         return -1;
 804:drivers/inv_mpu.c ****     if (rev == 0x1)
 805:drivers/inv_mpu.c ****         st.chip_cfg.accel_half = 0;
 806:drivers/inv_mpu.c ****     else {
 807:drivers/inv_mpu.c ****         log_e("Unsupported software product rev %d.\r\n", rev);
 808:drivers/inv_mpu.c ****         return -1;
 809:drivers/inv_mpu.c ****     }
ARM GAS  /tmp/cc18izUm.s 			page 18


 810:drivers/inv_mpu.c **** 
 811:drivers/inv_mpu.c ****     /* MPU6500 shares 4kB of memory between the DMP and the FIFO. Since the
 812:drivers/inv_mpu.c ****      * first 3kB are needed by the DMP, we'll use the last 1kB for the FIFO.
 813:drivers/inv_mpu.c ****      */
 814:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_SIZE_1024 | 0x8;
 815:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->accel_cfg2, 1, data))
 816:drivers/inv_mpu.c ****         return -1;
 817:drivers/inv_mpu.c **** #endif
 818:drivers/inv_mpu.c **** 
 819:drivers/inv_mpu.c ****     /* Set to invalid values to ensure no I2C writes are skipped. */
 820:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
 821:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
 822:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 823:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 824:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 825:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 826:drivers/inv_mpu.c ****     st.chip_cfg.bypass_mode = 0xFF;
 827:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 828:drivers/inv_mpu.c ****     st.chip_cfg.compass_sample_rate = 0xFFFF;
 829:drivers/inv_mpu.c **** #endif
 830:drivers/inv_mpu.c ****     /* mpu_set_sensors always preserves this setting. */
 831:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
 832:drivers/inv_mpu.c ****     /* Handled in next call to mpu_set_bypass. */
 833:drivers/inv_mpu.c ****     st.chip_cfg.active_low_int = 1;
 834:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = 0;
 835:drivers/inv_mpu.c ****     st.chip_cfg.int_motion_only = 0;
 836:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
 837:drivers/inv_mpu.c ****     memset(&st.chip_cfg.cache, 0, sizeof(st.chip_cfg.cache));
 838:drivers/inv_mpu.c ****     st.chip_cfg.dmp_on = 0;
 839:drivers/inv_mpu.c ****     st.chip_cfg.dmp_loaded = 0;
 840:drivers/inv_mpu.c ****     st.chip_cfg.dmp_sample_rate = 0;
 841:drivers/inv_mpu.c **** 
 842:drivers/inv_mpu.c ****     if (mpu_set_gyro_fsr(2000))
 843:drivers/inv_mpu.c ****         return -1;
 844:drivers/inv_mpu.c ****     if (mpu_set_accel_fsr(2))
 845:drivers/inv_mpu.c ****         return -1;
 846:drivers/inv_mpu.c ****     if (mpu_set_lpf(42))
 847:drivers/inv_mpu.c ****         return -1;
 848:drivers/inv_mpu.c ****     if (mpu_set_sample_rate(50))
 849:drivers/inv_mpu.c ****         return -1;
 850:drivers/inv_mpu.c ****     if (mpu_configure_fifo(0))
 851:drivers/inv_mpu.c ****         return -1;
 852:drivers/inv_mpu.c **** 
 853:drivers/inv_mpu.c ****     /*if (int_param)
 854:drivers/inv_mpu.c ****         reg_int_cb(int_param);*/
 855:drivers/inv_mpu.c **** 
 856:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 857:drivers/inv_mpu.c ****     setup_compass();
 858:drivers/inv_mpu.c ****     if (mpu_set_compass_sample_rate(10))
 859:drivers/inv_mpu.c ****         return -1;
 860:drivers/inv_mpu.c **** #else
 861:drivers/inv_mpu.c ****     /* Already disabled by setup_compass. */
 862:drivers/inv_mpu.c ****     if (mpu_set_bypass(0))
 863:drivers/inv_mpu.c ****         return -1;
 864:drivers/inv_mpu.c **** #endif
 865:drivers/inv_mpu.c **** 
 866:drivers/inv_mpu.c ****     mpu_set_sensors(0);
ARM GAS  /tmp/cc18izUm.s 			page 19


 867:drivers/inv_mpu.c ****     return 0;
 868:drivers/inv_mpu.c **** }
 869:drivers/inv_mpu.c **** 
 870:drivers/inv_mpu.c **** /**
 871:drivers/inv_mpu.c ****  *  @brief      Enter low-power accel-only mode.
 872:drivers/inv_mpu.c ****  *  In low-power accel mode, the chip goes to sleep and only wakes up to sample
 873:drivers/inv_mpu.c ****  *  the accelerometer at one of the following frequencies:
 874:drivers/inv_mpu.c ****  *  \n MPU6050: 1.25Hz, 5Hz, 20Hz, 40Hz
 875:drivers/inv_mpu.c ****  *  \n MPU6500: 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
 876:drivers/inv_mpu.c ****  *  \n If the requested rate is not one listed above, the device will be set to
 877:drivers/inv_mpu.c ****  *  the next highest rate. Requesting a rate above the maximum supported
 878:drivers/inv_mpu.c ****  *  frequency will result in an error.
 879:drivers/inv_mpu.c ****  *  \n To select a fractional wake-up frequency, round down the value passed to
 880:drivers/inv_mpu.c ****  *  @e rate.
 881:drivers/inv_mpu.c ****  *  @param[in]  rate        Minimum sampling rate, or zero to disable LP
 882:drivers/inv_mpu.c ****  *                          accel mode.
 883:drivers/inv_mpu.c ****  *  @return     0 if successful.
 884:drivers/inv_mpu.c ****  */
 885:drivers/inv_mpu.c **** int mpu_lp_accel_mode(unsigned char rate)
 886:drivers/inv_mpu.c **** {
 887:drivers/inv_mpu.c ****     unsigned char tmp[2];
 888:drivers/inv_mpu.c **** 
 889:drivers/inv_mpu.c ****     if (rate > 40)
 890:drivers/inv_mpu.c ****         return -1;
 891:drivers/inv_mpu.c **** 
 892:drivers/inv_mpu.c ****     if (!rate) {
 893:drivers/inv_mpu.c ****         mpu_set_int_latched(0);
 894:drivers/inv_mpu.c ****         tmp[0] = 0;
 895:drivers/inv_mpu.c ****         tmp[1] = BIT_STBY_XYZG;
 896:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 897:drivers/inv_mpu.c ****             return -1;
 898:drivers/inv_mpu.c ****         st.chip_cfg.lp_accel_mode = 0;
 899:drivers/inv_mpu.c ****         return 0;
 900:drivers/inv_mpu.c ****     }
 901:drivers/inv_mpu.c ****     /* For LP accel, we automatically configure the hardware to produce latched
 902:drivers/inv_mpu.c ****      * interrupts. In LP accel mode, the hardware cycles into sleep mode before
 903:drivers/inv_mpu.c ****      * it gets a chance to deassert the interrupt pin; therefore, we shift this
 904:drivers/inv_mpu.c ****      * responsibility over to the MCU.
 905:drivers/inv_mpu.c ****      *
 906:drivers/inv_mpu.c ****      * Any register read will clear the interrupt.
 907:drivers/inv_mpu.c ****      */
 908:drivers/inv_mpu.c ****     mpu_set_int_latched(1);
 909:drivers/inv_mpu.c **** #if defined MPU6050
 910:drivers/inv_mpu.c ****     tmp[0] = BIT_LPA_CYCLE;
 911:drivers/inv_mpu.c ****     if (rate == 1) {
 912:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_1_25HZ;
 913:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 914:drivers/inv_mpu.c ****     } else if (rate <= 5) {
 915:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_5HZ;
 916:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 917:drivers/inv_mpu.c ****     } else if (rate <= 20) {
 918:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_20HZ;
 919:drivers/inv_mpu.c ****         mpu_set_lpf(10);
 920:drivers/inv_mpu.c ****     } else {
 921:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_40HZ;
 922:drivers/inv_mpu.c ****         mpu_set_lpf(20);
 923:drivers/inv_mpu.c ****     }
ARM GAS  /tmp/cc18izUm.s 			page 20


 924:drivers/inv_mpu.c ****     tmp[1] = (tmp[1] << 6) | BIT_STBY_XYZG;
 925:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 926:drivers/inv_mpu.c ****         return -1;
 927:drivers/inv_mpu.c **** #elif defined MPU6500
 928:drivers/inv_mpu.c ****     /* Set wake frequency. */
 929:drivers/inv_mpu.c ****     if (rate == 1)
 930:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_1_25HZ;
 931:drivers/inv_mpu.c ****     else if (rate == 2)
 932:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_2_5HZ;
 933:drivers/inv_mpu.c ****     else if (rate <= 5)
 934:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_5HZ;
 935:drivers/inv_mpu.c ****     else if (rate <= 10)
 936:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_10HZ;
 937:drivers/inv_mpu.c ****     else if (rate <= 20)
 938:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_20HZ;
 939:drivers/inv_mpu.c ****     else if (rate <= 40)
 940:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_40HZ;
 941:drivers/inv_mpu.c ****     else if (rate <= 80)
 942:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_80HZ;
 943:drivers/inv_mpu.c ****     else if (rate <= 160)
 944:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_160HZ;
 945:drivers/inv_mpu.c ****     else if (rate <= 320)
 946:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_320HZ;
 947:drivers/inv_mpu.c ****     else
 948:drivers/inv_mpu.c ****         tmp[0] = INV_LPA_640HZ;
 949:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->lp_accel_odr, 1, tmp))
 950:drivers/inv_mpu.c ****         return -1;
 951:drivers/inv_mpu.c ****     tmp[0] = BIT_LPA_CYCLE;
 952:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, tmp))
 953:drivers/inv_mpu.c ****         return -1;
 954:drivers/inv_mpu.c **** #endif
 955:drivers/inv_mpu.c ****     st.chip_cfg.sensors = INV_XYZ_ACCEL;
 956:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = 0;
 957:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 1;
 958:drivers/inv_mpu.c ****     mpu_configure_fifo(0);
 959:drivers/inv_mpu.c **** 
 960:drivers/inv_mpu.c ****     return 0;
 961:drivers/inv_mpu.c **** }
 962:drivers/inv_mpu.c **** 
 963:drivers/inv_mpu.c **** /**
 964:drivers/inv_mpu.c ****  *  @brief      Read raw gyro data directly from the registers.
 965:drivers/inv_mpu.c ****  *  @param[out] data        Raw data in hardware units.
 966:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
 967:drivers/inv_mpu.c ****  *  @return     0 if successful.
 968:drivers/inv_mpu.c ****  */
 969:drivers/inv_mpu.c **** int mpu_get_gyro_reg(short *data, unsigned long *timestamp)
 970:drivers/inv_mpu.c **** {
 971:drivers/inv_mpu.c ****     unsigned char tmp[6];
 972:drivers/inv_mpu.c **** 
 973:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors & INV_XYZ_GYRO))
 974:drivers/inv_mpu.c ****         return -1;
 975:drivers/inv_mpu.c **** 
 976:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->raw_gyro, 6, tmp))
 977:drivers/inv_mpu.c ****         return -1;
 978:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
 979:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
 980:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
ARM GAS  /tmp/cc18izUm.s 			page 21


 981:drivers/inv_mpu.c ****     if (timestamp)
 982:drivers/inv_mpu.c ****         get_ms(timestamp);
 983:drivers/inv_mpu.c ****     return 0;
 984:drivers/inv_mpu.c **** }
 985:drivers/inv_mpu.c **** 
 986:drivers/inv_mpu.c **** /**
 987:drivers/inv_mpu.c ****  *  @brief      Read raw accel data directly from the registers.
 988:drivers/inv_mpu.c ****  *  @param[out] data        Raw data in hardware units.
 989:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
 990:drivers/inv_mpu.c ****  *  @return     0 if successful.
 991:drivers/inv_mpu.c ****  */
 992:drivers/inv_mpu.c **** int mpu_get_accel_reg(short *data, unsigned long *timestamp)
 993:drivers/inv_mpu.c **** {
 994:drivers/inv_mpu.c ****     unsigned char tmp[6];
 995:drivers/inv_mpu.c **** 
 996:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors & INV_XYZ_ACCEL))
 997:drivers/inv_mpu.c ****         return -1;
 998:drivers/inv_mpu.c **** 
 999:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->raw_accel, 6, tmp))
1000:drivers/inv_mpu.c ****         return -1;
1001:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
1002:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
1003:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
1004:drivers/inv_mpu.c ****     if (timestamp)
1005:drivers/inv_mpu.c ****         get_ms(timestamp);
1006:drivers/inv_mpu.c ****     return 0;
1007:drivers/inv_mpu.c **** }
1008:drivers/inv_mpu.c **** 
1009:drivers/inv_mpu.c **** /**
1010:drivers/inv_mpu.c ****  *  @brief      Read temperature data directly from the registers.
1011:drivers/inv_mpu.c ****  *  @param[out] data        Data in q16 format.
1012:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
1013:drivers/inv_mpu.c ****  *  @return     0 if successful.
1014:drivers/inv_mpu.c ****  */
1015:drivers/inv_mpu.c **** int mpu_get_temperature(long *data, unsigned long *timestamp)
1016:drivers/inv_mpu.c **** {
1017:drivers/inv_mpu.c ****     unsigned char tmp[2];
1018:drivers/inv_mpu.c ****     short raw;
1019:drivers/inv_mpu.c **** 
1020:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1021:drivers/inv_mpu.c ****         return -1;
1022:drivers/inv_mpu.c **** 
1023:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->temp, 2, tmp))
1024:drivers/inv_mpu.c ****         return -1;
1025:drivers/inv_mpu.c ****     raw = (tmp[0] << 8) | tmp[1];
1026:drivers/inv_mpu.c ****     if (timestamp)
1027:drivers/inv_mpu.c ****         get_ms(timestamp);
1028:drivers/inv_mpu.c **** 
1029:drivers/inv_mpu.c ****     data[0] = (long)((35 + ((raw - (float)st.hw->temp_offset) / st.hw->temp_sens)) * 65536L);
1030:drivers/inv_mpu.c ****     return 0;
1031:drivers/inv_mpu.c **** }
1032:drivers/inv_mpu.c **** 
1033:drivers/inv_mpu.c **** /**
1034:drivers/inv_mpu.c ****  *  @brief      Push biases to the accel bias registers.
1035:drivers/inv_mpu.c ****  *  This function expects biases relative to the current sensor output, and
1036:drivers/inv_mpu.c ****  *  these biases will be added to the factory-supplied values.
1037:drivers/inv_mpu.c ****  *  @param[in]  accel_bias  New biases.
ARM GAS  /tmp/cc18izUm.s 			page 22


1038:drivers/inv_mpu.c ****  *  @return     0 if successful.
1039:drivers/inv_mpu.c ****  */
1040:drivers/inv_mpu.c **** int mpu_set_accel_bias(const long *accel_bias)
1041:drivers/inv_mpu.c **** {
1042:drivers/inv_mpu.c ****     unsigned char data[6];
1043:drivers/inv_mpu.c ****     short accel_hw[3];
1044:drivers/inv_mpu.c ****     short got_accel[3];
1045:drivers/inv_mpu.c ****     short fg[3];
1046:drivers/inv_mpu.c **** 
1047:drivers/inv_mpu.c ****     if (!accel_bias)
1048:drivers/inv_mpu.c ****         return -1;
1049:drivers/inv_mpu.c ****     if (!accel_bias[0] && !accel_bias[1] && !accel_bias[2])
1050:drivers/inv_mpu.c ****         return 0;
1051:drivers/inv_mpu.c **** 
1052:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, 3, 3, data))
1053:drivers/inv_mpu.c ****         return -1;
1054:drivers/inv_mpu.c ****     fg[0] = ((data[0] >> 4) + 8) & 0xf;
1055:drivers/inv_mpu.c ****     fg[1] = ((data[1] >> 4) + 8) & 0xf;
1056:drivers/inv_mpu.c ****     fg[2] = ((data[2] >> 4) + 8) & 0xf;
1057:drivers/inv_mpu.c **** 
1058:drivers/inv_mpu.c ****     accel_hw[0] = (short)(accel_bias[0] * 2 / (64 + fg[0]));
1059:drivers/inv_mpu.c ****     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
1060:drivers/inv_mpu.c ****     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
1061:drivers/inv_mpu.c **** 
1062:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, 0x06, 6, data))
1063:drivers/inv_mpu.c ****         return -1;
1064:drivers/inv_mpu.c **** 
1065:drivers/inv_mpu.c ****     got_accel[0] = ((short)data[0] << 8) | data[1];
1066:drivers/inv_mpu.c ****     got_accel[1] = ((short)data[2] << 8) | data[3];
1067:drivers/inv_mpu.c ****     got_accel[2] = ((short)data[4] << 8) | data[5];
1068:drivers/inv_mpu.c **** 
1069:drivers/inv_mpu.c ****     accel_hw[0] += got_accel[0];
1070:drivers/inv_mpu.c ****     accel_hw[1] += got_accel[1];
1071:drivers/inv_mpu.c ****     accel_hw[2] += got_accel[2];
1072:drivers/inv_mpu.c **** 
1073:drivers/inv_mpu.c ****     data[0] = (accel_hw[0] >> 8) & 0xff;
1074:drivers/inv_mpu.c ****     data[1] = (accel_hw[0]) & 0xff;
1075:drivers/inv_mpu.c ****     data[2] = (accel_hw[1] >> 8) & 0xff;
1076:drivers/inv_mpu.c ****     data[3] = (accel_hw[1]) & 0xff;
1077:drivers/inv_mpu.c ****     data[4] = (accel_hw[2] >> 8) & 0xff;
1078:drivers/inv_mpu.c ****     data[5] = (accel_hw[2]) & 0xff;
1079:drivers/inv_mpu.c **** 
1080:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, 0x06, 6, data))
1081:drivers/inv_mpu.c ****         return -1;
1082:drivers/inv_mpu.c ****     return 0;
1083:drivers/inv_mpu.c **** }
1084:drivers/inv_mpu.c **** 
1085:drivers/inv_mpu.c **** /**
1086:drivers/inv_mpu.c ****  *  @brief  Reset FIFO read/write pointers.
1087:drivers/inv_mpu.c ****  *  @return 0 if successful.
1088:drivers/inv_mpu.c ****  */
1089:drivers/inv_mpu.c **** int mpu_reset_fifo(void)
1090:drivers/inv_mpu.c **** {
1091:drivers/inv_mpu.c ****     unsigned char data;
1092:drivers/inv_mpu.c **** 
1093:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1094:drivers/inv_mpu.c ****         return -1;
ARM GAS  /tmp/cc18izUm.s 			page 23


1095:drivers/inv_mpu.c **** 
1096:drivers/inv_mpu.c ****     data = 0;
1097:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &data))
1098:drivers/inv_mpu.c ****         return -1;
1099:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, &data))
1100:drivers/inv_mpu.c ****         return -1;
1101:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1102:drivers/inv_mpu.c ****         return -1;
1103:drivers/inv_mpu.c **** 
1104:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on) {
1105:drivers/inv_mpu.c ****         data = BIT_FIFO_RST | BIT_DMP_RST;
1106:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1107:drivers/inv_mpu.c ****             return -1;
1108:drivers/inv_mpu.c ****        
1109:drivers/inv_mpu.c ****         data = BIT_DMP_EN | BIT_FIFO_EN;
1110:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
1111:drivers/inv_mpu.c ****             data |= BIT_AUX_IF_EN;
1112:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1113:drivers/inv_mpu.c ****             return -1;
1114:drivers/inv_mpu.c ****         if (st.chip_cfg.int_enable)
1115:drivers/inv_mpu.c ****             data = BIT_DMP_INT_EN;
1116:drivers/inv_mpu.c ****         else
1117:drivers/inv_mpu.c ****             data = 0;
1118:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &data))
1119:drivers/inv_mpu.c ****             return -1;
1120:drivers/inv_mpu.c ****         data = 0;
1121:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, &data))
1122:drivers/inv_mpu.c ****             return -1;
1123:drivers/inv_mpu.c ****     } else {
1124:drivers/inv_mpu.c ****         data = BIT_FIFO_RST;
1125:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1126:drivers/inv_mpu.c ****             return -1;
1127:drivers/inv_mpu.c ****         if (st.chip_cfg.bypass_mode || !(st.chip_cfg.sensors & INV_XYZ_COMPASS))
1128:drivers/inv_mpu.c ****             data = BIT_FIFO_EN;
1129:drivers/inv_mpu.c ****         else
1130:drivers/inv_mpu.c ****             data = BIT_FIFO_EN | BIT_AUX_IF_EN;
1131:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
1132:drivers/inv_mpu.c ****             return -1;
1133:drivers/inv_mpu.c ****     
1134:drivers/inv_mpu.c ****         if (st.chip_cfg.int_enable)
1135:drivers/inv_mpu.c ****             data = BIT_DATA_RDY_EN;
1136:drivers/inv_mpu.c ****         else
1137:drivers/inv_mpu.c ****             data = 0;
1138:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &data))
1139:drivers/inv_mpu.c ****             return -1;
1140:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, &st.chip_cfg.fifo_enable))
1141:drivers/inv_mpu.c ****             return -1;
1142:drivers/inv_mpu.c ****     }
1143:drivers/inv_mpu.c ****     return 0;
1144:drivers/inv_mpu.c **** }
1145:drivers/inv_mpu.c **** 
1146:drivers/inv_mpu.c **** /**
1147:drivers/inv_mpu.c ****  *  @brief      Get the gyro full-scale range.
1148:drivers/inv_mpu.c ****  *  @param[out] fsr Current full-scale range.
1149:drivers/inv_mpu.c ****  *  @return     0 if successful.
1150:drivers/inv_mpu.c ****  */
1151:drivers/inv_mpu.c **** int mpu_get_gyro_fsr(unsigned short *fsr)
ARM GAS  /tmp/cc18izUm.s 			page 24


1152:drivers/inv_mpu.c **** {
1153:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
1154:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
1155:drivers/inv_mpu.c ****         fsr[0] = 250;
1156:drivers/inv_mpu.c ****         break;
1157:drivers/inv_mpu.c ****     case INV_FSR_500DPS:
1158:drivers/inv_mpu.c ****         fsr[0] = 500;
1159:drivers/inv_mpu.c ****         break;
1160:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
1161:drivers/inv_mpu.c ****         fsr[0] = 1000;
1162:drivers/inv_mpu.c ****         break;
1163:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
1164:drivers/inv_mpu.c ****         fsr[0] = 2000;
1165:drivers/inv_mpu.c ****         break;
1166:drivers/inv_mpu.c ****     default:
1167:drivers/inv_mpu.c ****         fsr[0] = 0;
1168:drivers/inv_mpu.c ****         break;
1169:drivers/inv_mpu.c ****     }
1170:drivers/inv_mpu.c ****     return 0;
1171:drivers/inv_mpu.c **** }
1172:drivers/inv_mpu.c **** 
1173:drivers/inv_mpu.c **** /**
1174:drivers/inv_mpu.c ****  *  @brief      Set the gyro full-scale range.
1175:drivers/inv_mpu.c ****  *  @param[in]  fsr Desired full-scale range.
1176:drivers/inv_mpu.c ****  *  @return     0 if successful.
1177:drivers/inv_mpu.c ****  */
1178:drivers/inv_mpu.c **** int mpu_set_gyro_fsr(unsigned short fsr)
1179:drivers/inv_mpu.c **** {
1180:drivers/inv_mpu.c ****     unsigned char data;
1181:drivers/inv_mpu.c **** 
1182:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1183:drivers/inv_mpu.c ****         return -1;
1184:drivers/inv_mpu.c **** 
1185:drivers/inv_mpu.c ****     switch (fsr) {
1186:drivers/inv_mpu.c ****     case 250:
1187:drivers/inv_mpu.c ****         data = INV_FSR_250DPS << 3;
1188:drivers/inv_mpu.c ****         break;
1189:drivers/inv_mpu.c ****     case 500:
1190:drivers/inv_mpu.c ****         data = INV_FSR_500DPS << 3;
1191:drivers/inv_mpu.c ****         break;
1192:drivers/inv_mpu.c ****     case 1000:
1193:drivers/inv_mpu.c ****         data = INV_FSR_1000DPS << 3;
1194:drivers/inv_mpu.c ****         break;
1195:drivers/inv_mpu.c ****     case 2000:
1196:drivers/inv_mpu.c ****         data = INV_FSR_2000DPS << 3;
1197:drivers/inv_mpu.c ****         break;
1198:drivers/inv_mpu.c ****     default:
1199:drivers/inv_mpu.c ****         return -1;
1200:drivers/inv_mpu.c ****     }
1201:drivers/inv_mpu.c **** 
1202:drivers/inv_mpu.c ****     if (st.chip_cfg.gyro_fsr == (data >> 3))
1203:drivers/inv_mpu.c ****         return 0;
1204:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->gyro_cfg, 1, &data))
1205:drivers/inv_mpu.c ****         return -1;
1206:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = data >> 3;
1207:drivers/inv_mpu.c ****     return 0;
1208:drivers/inv_mpu.c **** }
ARM GAS  /tmp/cc18izUm.s 			page 25


1209:drivers/inv_mpu.c **** 
1210:drivers/inv_mpu.c **** /**
1211:drivers/inv_mpu.c ****  *  @brief      Get the accel full-scale range.
1212:drivers/inv_mpu.c ****  *  @param[out] fsr Current full-scale range.
1213:drivers/inv_mpu.c ****  *  @return     0 if successful.
1214:drivers/inv_mpu.c ****  */
1215:drivers/inv_mpu.c **** int mpu_get_accel_fsr(unsigned char *fsr)
1216:drivers/inv_mpu.c **** {
1217:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
1218:drivers/inv_mpu.c ****     case INV_FSR_2G:
1219:drivers/inv_mpu.c ****         fsr[0] = 2;
1220:drivers/inv_mpu.c ****         break;
1221:drivers/inv_mpu.c ****     case INV_FSR_4G:
1222:drivers/inv_mpu.c ****         fsr[0] = 4;
1223:drivers/inv_mpu.c ****         break;
1224:drivers/inv_mpu.c ****     case INV_FSR_8G:
1225:drivers/inv_mpu.c ****         fsr[0] = 8;
1226:drivers/inv_mpu.c ****         break;
1227:drivers/inv_mpu.c ****     case INV_FSR_16G:
1228:drivers/inv_mpu.c ****         fsr[0] = 16;
1229:drivers/inv_mpu.c ****         break;
1230:drivers/inv_mpu.c ****     default:
1231:drivers/inv_mpu.c ****         return -1;
1232:drivers/inv_mpu.c ****     }
1233:drivers/inv_mpu.c ****     if (st.chip_cfg.accel_half)
1234:drivers/inv_mpu.c ****         fsr[0] <<= 1;
1235:drivers/inv_mpu.c ****     return 0;
1236:drivers/inv_mpu.c **** }
1237:drivers/inv_mpu.c **** 
1238:drivers/inv_mpu.c **** /**
1239:drivers/inv_mpu.c ****  *  @brief      Set the accel full-scale range.
1240:drivers/inv_mpu.c ****  *  @param[in]  fsr Desired full-scale range.
1241:drivers/inv_mpu.c ****  *  @return     0 if successful.
1242:drivers/inv_mpu.c ****  */
1243:drivers/inv_mpu.c **** int mpu_set_accel_fsr(unsigned char fsr)
1244:drivers/inv_mpu.c **** {
1245:drivers/inv_mpu.c ****     unsigned char data;
1246:drivers/inv_mpu.c **** 
1247:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1248:drivers/inv_mpu.c ****         return -1;
1249:drivers/inv_mpu.c **** 
1250:drivers/inv_mpu.c ****     switch (fsr) {
1251:drivers/inv_mpu.c ****     case 2:
1252:drivers/inv_mpu.c ****         data = INV_FSR_2G << 3;
1253:drivers/inv_mpu.c ****         break;
1254:drivers/inv_mpu.c ****     case 4:
1255:drivers/inv_mpu.c ****         data = INV_FSR_4G << 3;
1256:drivers/inv_mpu.c ****         break;
1257:drivers/inv_mpu.c ****     case 8:
1258:drivers/inv_mpu.c ****         data = INV_FSR_8G << 3;
1259:drivers/inv_mpu.c ****         break;
1260:drivers/inv_mpu.c ****     case 16:
1261:drivers/inv_mpu.c ****         data = INV_FSR_16G << 3;
1262:drivers/inv_mpu.c ****         break;
1263:drivers/inv_mpu.c ****     default:
1264:drivers/inv_mpu.c ****         return -1;
1265:drivers/inv_mpu.c ****     }
ARM GAS  /tmp/cc18izUm.s 			page 26


1266:drivers/inv_mpu.c **** 
1267:drivers/inv_mpu.c ****     if (st.chip_cfg.accel_fsr == (data >> 3))
1268:drivers/inv_mpu.c ****         return 0;
1269:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->accel_cfg, 1, &data))
1270:drivers/inv_mpu.c ****         return -1;
1271:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = data >> 3;
1272:drivers/inv_mpu.c ****     return 0;
1273:drivers/inv_mpu.c **** }
1274:drivers/inv_mpu.c **** 
1275:drivers/inv_mpu.c **** /**
1276:drivers/inv_mpu.c ****  *  @brief      Get the current DLPF setting.
1277:drivers/inv_mpu.c ****  *  @param[out] lpf Current LPF setting.
1278:drivers/inv_mpu.c ****  *  0 if successful.
1279:drivers/inv_mpu.c ****  */
1280:drivers/inv_mpu.c **** int mpu_get_lpf(unsigned short *lpf)
1281:drivers/inv_mpu.c **** {
1282:drivers/inv_mpu.c ****     switch (st.chip_cfg.lpf) {
1283:drivers/inv_mpu.c ****     case INV_FILTER_188HZ:
1284:drivers/inv_mpu.c ****         lpf[0] = 188;
1285:drivers/inv_mpu.c ****         break;
1286:drivers/inv_mpu.c ****     case INV_FILTER_98HZ:
1287:drivers/inv_mpu.c ****         lpf[0] = 98;
1288:drivers/inv_mpu.c ****         break;
1289:drivers/inv_mpu.c ****     case INV_FILTER_42HZ:
1290:drivers/inv_mpu.c ****         lpf[0] = 42;
1291:drivers/inv_mpu.c ****         break;
1292:drivers/inv_mpu.c ****     case INV_FILTER_20HZ:
1293:drivers/inv_mpu.c ****         lpf[0] = 20;
1294:drivers/inv_mpu.c ****         break;
1295:drivers/inv_mpu.c ****     case INV_FILTER_10HZ:
1296:drivers/inv_mpu.c ****         lpf[0] = 10;
1297:drivers/inv_mpu.c ****         break;
1298:drivers/inv_mpu.c ****     case INV_FILTER_5HZ:
1299:drivers/inv_mpu.c ****         lpf[0] = 5;
1300:drivers/inv_mpu.c ****         break;
1301:drivers/inv_mpu.c ****     case INV_FILTER_256HZ_NOLPF2:
1302:drivers/inv_mpu.c ****     case INV_FILTER_2100HZ_NOLPF:
1303:drivers/inv_mpu.c ****     default:
1304:drivers/inv_mpu.c ****         lpf[0] = 0;
1305:drivers/inv_mpu.c ****         break;
1306:drivers/inv_mpu.c ****     }
1307:drivers/inv_mpu.c ****     return 0;
1308:drivers/inv_mpu.c **** }
1309:drivers/inv_mpu.c **** 
1310:drivers/inv_mpu.c **** /**
1311:drivers/inv_mpu.c ****  *  @brief      Set digital low pass filter.
1312:drivers/inv_mpu.c ****  *  The following LPF settings are supported: 188, 98, 42, 20, 10, 5.
1313:drivers/inv_mpu.c ****  *  @param[in]  lpf Desired LPF setting.
1314:drivers/inv_mpu.c ****  *  @return     0 if successful.
1315:drivers/inv_mpu.c ****  */
1316:drivers/inv_mpu.c **** int mpu_set_lpf(unsigned short lpf)
1317:drivers/inv_mpu.c **** {
1318:drivers/inv_mpu.c ****     unsigned char data;
1319:drivers/inv_mpu.c **** 
1320:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1321:drivers/inv_mpu.c ****         return -1;
1322:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cc18izUm.s 			page 27


1323:drivers/inv_mpu.c ****     if (lpf >= 188)
1324:drivers/inv_mpu.c ****         data = INV_FILTER_188HZ;
1325:drivers/inv_mpu.c ****     else if (lpf >= 98)
1326:drivers/inv_mpu.c ****         data = INV_FILTER_98HZ;
1327:drivers/inv_mpu.c ****     else if (lpf >= 42)
1328:drivers/inv_mpu.c ****         data = INV_FILTER_42HZ;
1329:drivers/inv_mpu.c ****     else if (lpf >= 20)
1330:drivers/inv_mpu.c ****         data = INV_FILTER_20HZ;
1331:drivers/inv_mpu.c ****     else if (lpf >= 10)
1332:drivers/inv_mpu.c ****         data = INV_FILTER_10HZ;
1333:drivers/inv_mpu.c ****     else
1334:drivers/inv_mpu.c ****         data = INV_FILTER_5HZ;
1335:drivers/inv_mpu.c **** 
1336:drivers/inv_mpu.c ****     if (st.chip_cfg.lpf == data)
1337:drivers/inv_mpu.c ****         return 0;
1338:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->lpf, 1, &data))
1339:drivers/inv_mpu.c ****         return -1;
1340:drivers/inv_mpu.c ****     st.chip_cfg.lpf = data;
1341:drivers/inv_mpu.c ****     return 0;
1342:drivers/inv_mpu.c **** }
1343:drivers/inv_mpu.c **** 
1344:drivers/inv_mpu.c **** /**
1345:drivers/inv_mpu.c ****  *  @brief      Get sampling rate.
1346:drivers/inv_mpu.c ****  *  @param[out] rate    Current sampling rate (Hz).
1347:drivers/inv_mpu.c ****  *  @return     0 if successful.
1348:drivers/inv_mpu.c ****  */
1349:drivers/inv_mpu.c **** int mpu_get_sample_rate(unsigned short *rate)
1350:drivers/inv_mpu.c **** {
1351:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1352:drivers/inv_mpu.c ****         return -1;
1353:drivers/inv_mpu.c ****     else
1354:drivers/inv_mpu.c ****         rate[0] = st.chip_cfg.sample_rate;
1355:drivers/inv_mpu.c ****     return 0;
1356:drivers/inv_mpu.c **** }
1357:drivers/inv_mpu.c **** 
1358:drivers/inv_mpu.c **** /**
1359:drivers/inv_mpu.c ****  *  @brief      Set sampling rate.
1360:drivers/inv_mpu.c ****  *  Sampling rate must be between 4Hz and 1kHz.
1361:drivers/inv_mpu.c ****  *  @param[in]  rate    Desired sampling rate (Hz).
1362:drivers/inv_mpu.c ****  *  @return     0 if successful.
1363:drivers/inv_mpu.c ****  */
1364:drivers/inv_mpu.c **** int mpu_set_sample_rate(unsigned short rate)
1365:drivers/inv_mpu.c **** {
1366:drivers/inv_mpu.c ****     unsigned char data;
1367:drivers/inv_mpu.c **** 
1368:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors))
1369:drivers/inv_mpu.c ****         return -1;
1370:drivers/inv_mpu.c **** 
1371:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1372:drivers/inv_mpu.c ****         return -1;
1373:drivers/inv_mpu.c ****     else {
1374:drivers/inv_mpu.c ****         if (st.chip_cfg.lp_accel_mode) {
1375:drivers/inv_mpu.c ****             if (rate && (rate <= 40)) {
1376:drivers/inv_mpu.c ****                 /* Just stay in low-power accel mode. */
1377:drivers/inv_mpu.c ****                 mpu_lp_accel_mode(rate);
1378:drivers/inv_mpu.c ****                 return 0;
1379:drivers/inv_mpu.c ****             }
ARM GAS  /tmp/cc18izUm.s 			page 28


1380:drivers/inv_mpu.c ****             /* Requested rate exceeds the allowed frequencies in LP accel mode,
1381:drivers/inv_mpu.c ****              * switch back to full-power mode.
1382:drivers/inv_mpu.c ****              */
1383:drivers/inv_mpu.c ****             mpu_lp_accel_mode(0);
1384:drivers/inv_mpu.c ****         }
1385:drivers/inv_mpu.c ****         if (rate < 4)
1386:drivers/inv_mpu.c ****             rate = 4;
1387:drivers/inv_mpu.c ****         else if (rate > 1000)
1388:drivers/inv_mpu.c ****             rate = 1000;
1389:drivers/inv_mpu.c **** 
1390:drivers/inv_mpu.c ****         data = 1000 / rate - 1;
1391:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->rate_div, 1, &data))
1392:drivers/inv_mpu.c ****             return -1;
1393:drivers/inv_mpu.c **** 
1394:drivers/inv_mpu.c ****         st.chip_cfg.sample_rate = 1000 / (1 + data);
1395:drivers/inv_mpu.c **** 
1396:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1397:drivers/inv_mpu.c ****         mpu_set_compass_sample_rate(min(st.chip_cfg.compass_sample_rate, MAX_COMPASS_SAMPLE_RATE));
1398:drivers/inv_mpu.c **** #endif
1399:drivers/inv_mpu.c **** 
1400:drivers/inv_mpu.c ****         /* Automatically set LPF to 1/2 sampling rate. */
1401:drivers/inv_mpu.c ****         mpu_set_lpf(st.chip_cfg.sample_rate >> 1);
1402:drivers/inv_mpu.c ****         return 0;
1403:drivers/inv_mpu.c ****     }
1404:drivers/inv_mpu.c **** }
1405:drivers/inv_mpu.c **** 
1406:drivers/inv_mpu.c **** /**
1407:drivers/inv_mpu.c ****  *  @brief      Get compass sampling rate.
1408:drivers/inv_mpu.c ****  *  @param[out] rate    Current compass sampling rate (Hz).
1409:drivers/inv_mpu.c ****  *  @return     0 if successful.
1410:drivers/inv_mpu.c ****  */
1411:drivers/inv_mpu.c **** int mpu_get_compass_sample_rate(unsigned short *rate)
1412:drivers/inv_mpu.c **** {
1413:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1414:drivers/inv_mpu.c ****     rate[0] = st.chip_cfg.compass_sample_rate;
1415:drivers/inv_mpu.c ****     return 0;
1416:drivers/inv_mpu.c **** #else
1417:drivers/inv_mpu.c ****     rate[0] = 0;
1418:drivers/inv_mpu.c ****     return -1;
1419:drivers/inv_mpu.c **** #endif
1420:drivers/inv_mpu.c **** }
1421:drivers/inv_mpu.c **** 
1422:drivers/inv_mpu.c **** /**
1423:drivers/inv_mpu.c ****  *  @brief      Set compass sampling rate.
1424:drivers/inv_mpu.c ****  *  The compass on the auxiliary I2C bus is read by the MPU hardware at a
1425:drivers/inv_mpu.c ****  *  maximum of 100Hz. The actual rate can be set to a fraction of the gyro
1426:drivers/inv_mpu.c ****  *  sampling rate.
1427:drivers/inv_mpu.c ****  *
1428:drivers/inv_mpu.c ****  *  \n WARNING: The new rate may be different than what was requested. Call
1429:drivers/inv_mpu.c ****  *  mpu_get_compass_sample_rate to check the actual setting.
1430:drivers/inv_mpu.c ****  *  @param[in]  rate    Desired compass sampling rate (Hz).
1431:drivers/inv_mpu.c ****  *  @return     0 if successful.
1432:drivers/inv_mpu.c ****  */
1433:drivers/inv_mpu.c **** int mpu_set_compass_sample_rate(unsigned short rate)
1434:drivers/inv_mpu.c **** {
1435:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1436:drivers/inv_mpu.c ****     unsigned char div;
ARM GAS  /tmp/cc18izUm.s 			page 29


1437:drivers/inv_mpu.c ****     if (!rate || rate > st.chip_cfg.sample_rate || rate > MAX_COMPASS_SAMPLE_RATE)
1438:drivers/inv_mpu.c ****         return -1;
1439:drivers/inv_mpu.c **** 
1440:drivers/inv_mpu.c ****     div = st.chip_cfg.sample_rate / rate - 1;
1441:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->s4_ctrl, 1, &div))
1442:drivers/inv_mpu.c ****         return -1;
1443:drivers/inv_mpu.c ****     st.chip_cfg.compass_sample_rate = st.chip_cfg.sample_rate / (div + 1);
1444:drivers/inv_mpu.c ****     return 0;
1445:drivers/inv_mpu.c **** #else
1446:drivers/inv_mpu.c ****     return -1;
1447:drivers/inv_mpu.c **** #endif
1448:drivers/inv_mpu.c **** }
1449:drivers/inv_mpu.c **** 
1450:drivers/inv_mpu.c **** /**
1451:drivers/inv_mpu.c ****  *  @brief      Get gyro sensitivity scale factor.
1452:drivers/inv_mpu.c ****  *  @param[out] sens    Conversion from hardware units to dps.
1453:drivers/inv_mpu.c ****  *  @return     0 if successful.
1454:drivers/inv_mpu.c ****  */
1455:drivers/inv_mpu.c **** int mpu_get_gyro_sens(float *sens)
1456:drivers/inv_mpu.c **** {
1457:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
1458:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
1459:drivers/inv_mpu.c ****         sens[0] = 131.f;
1460:drivers/inv_mpu.c ****         break;
1461:drivers/inv_mpu.c ****     case INV_FSR_500DPS:
1462:drivers/inv_mpu.c ****         sens[0] = 65.5f;
1463:drivers/inv_mpu.c ****         break;
1464:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
1465:drivers/inv_mpu.c ****         sens[0] = 32.8f;
1466:drivers/inv_mpu.c ****         break;
1467:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
1468:drivers/inv_mpu.c ****         sens[0] = 16.4f;
1469:drivers/inv_mpu.c ****         break;
1470:drivers/inv_mpu.c ****     default:
1471:drivers/inv_mpu.c ****         return -1;
1472:drivers/inv_mpu.c ****     }
1473:drivers/inv_mpu.c ****     return 0;
1474:drivers/inv_mpu.c **** }
1475:drivers/inv_mpu.c **** 
1476:drivers/inv_mpu.c **** /**
1477:drivers/inv_mpu.c ****  *  @brief      Get accel sensitivity scale factor.
1478:drivers/inv_mpu.c ****  *  @param[out] sens    Conversion from hardware units to g's.
1479:drivers/inv_mpu.c ****  *  @return     0 if successful.
1480:drivers/inv_mpu.c ****  */
1481:drivers/inv_mpu.c **** int mpu_get_accel_sens(unsigned short *sens)
1482:drivers/inv_mpu.c **** {
1483:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
1484:drivers/inv_mpu.c ****     case INV_FSR_2G:
1485:drivers/inv_mpu.c ****         sens[0] = 16384;
1486:drivers/inv_mpu.c ****         break;
1487:drivers/inv_mpu.c ****     case INV_FSR_4G:
1488:drivers/inv_mpu.c ****         sens[0] = 8092;
1489:drivers/inv_mpu.c ****         break;
1490:drivers/inv_mpu.c ****     case INV_FSR_8G:
1491:drivers/inv_mpu.c ****         sens[0] = 4096;
1492:drivers/inv_mpu.c ****         break;
1493:drivers/inv_mpu.c ****     case INV_FSR_16G:
ARM GAS  /tmp/cc18izUm.s 			page 30


1494:drivers/inv_mpu.c ****         sens[0] = 2048;
1495:drivers/inv_mpu.c ****         break;
1496:drivers/inv_mpu.c ****     default:
1497:drivers/inv_mpu.c ****         return -1;
1498:drivers/inv_mpu.c ****     }
1499:drivers/inv_mpu.c ****     if (st.chip_cfg.accel_half)
1500:drivers/inv_mpu.c ****         sens[0] >>= 1;
1501:drivers/inv_mpu.c ****     return 0;
1502:drivers/inv_mpu.c **** }
1503:drivers/inv_mpu.c **** 
1504:drivers/inv_mpu.c **** /**
1505:drivers/inv_mpu.c ****  *  @brief      Get current FIFO configuration.
1506:drivers/inv_mpu.c ****  *  @e sensors can contain a combination of the following flags:
1507:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1508:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1509:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1510:drivers/inv_mpu.c ****  *  @param[out] sensors Mask of sensors in FIFO.
1511:drivers/inv_mpu.c ****  *  @return     0 if successful.
1512:drivers/inv_mpu.c ****  */
1513:drivers/inv_mpu.c **** int mpu_get_fifo_config(unsigned char *sensors)
1514:drivers/inv_mpu.c **** {
1515:drivers/inv_mpu.c ****     sensors[0] = st.chip_cfg.fifo_enable;
1516:drivers/inv_mpu.c ****     return 0;
1517:drivers/inv_mpu.c **** }
1518:drivers/inv_mpu.c **** 
1519:drivers/inv_mpu.c **** /**
1520:drivers/inv_mpu.c ****  *  @brief      Select which sensors are pushed to FIFO.
1521:drivers/inv_mpu.c ****  *  @e sensors can contain a combination of the following flags:
1522:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1523:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1524:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1525:drivers/inv_mpu.c ****  *  @param[in]  sensors Mask of sensors to push to FIFO.
1526:drivers/inv_mpu.c ****  *  @return     0 if successful.
1527:drivers/inv_mpu.c ****  */
1528:drivers/inv_mpu.c **** int mpu_configure_fifo(unsigned char sensors)
1529:drivers/inv_mpu.c **** {
1530:drivers/inv_mpu.c ****     unsigned char prev;
1531:drivers/inv_mpu.c ****     int result = 0;
1532:drivers/inv_mpu.c **** 
1533:drivers/inv_mpu.c ****     /* Compass data isn't going into the FIFO. Stop trying. */
1534:drivers/inv_mpu.c ****     sensors &= ~INV_XYZ_COMPASS;
1535:drivers/inv_mpu.c **** 
1536:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1537:drivers/inv_mpu.c ****         return 0;
1538:drivers/inv_mpu.c ****     else {
1539:drivers/inv_mpu.c ****         if (!(st.chip_cfg.sensors))
1540:drivers/inv_mpu.c ****             return -1;
1541:drivers/inv_mpu.c ****         prev = st.chip_cfg.fifo_enable;
1542:drivers/inv_mpu.c ****         st.chip_cfg.fifo_enable = sensors & st.chip_cfg.sensors;
1543:drivers/inv_mpu.c ****         if (st.chip_cfg.fifo_enable != sensors)
1544:drivers/inv_mpu.c ****             /* You're not getting what you asked for. Some sensors are
1545:drivers/inv_mpu.c ****              * asleep.
1546:drivers/inv_mpu.c ****              */
1547:drivers/inv_mpu.c ****             result = -1;
1548:drivers/inv_mpu.c ****         else
1549:drivers/inv_mpu.c ****             result = 0;
1550:drivers/inv_mpu.c ****         if (sensors || st.chip_cfg.lp_accel_mode)
ARM GAS  /tmp/cc18izUm.s 			page 31


1551:drivers/inv_mpu.c ****             set_int_enable(1);
1552:drivers/inv_mpu.c ****         else
1553:drivers/inv_mpu.c ****             set_int_enable(0);
1554:drivers/inv_mpu.c ****         if (sensors) {
1555:drivers/inv_mpu.c ****             if (mpu_reset_fifo()) {
1556:drivers/inv_mpu.c ****                 st.chip_cfg.fifo_enable = prev;
1557:drivers/inv_mpu.c ****                 return -1;
1558:drivers/inv_mpu.c ****             }
1559:drivers/inv_mpu.c ****         }
1560:drivers/inv_mpu.c ****     }
1561:drivers/inv_mpu.c **** 
1562:drivers/inv_mpu.c ****     return result;
1563:drivers/inv_mpu.c **** }
1564:drivers/inv_mpu.c **** 
1565:drivers/inv_mpu.c **** /**
1566:drivers/inv_mpu.c ****  *  @brief      Get current power state.
1567:drivers/inv_mpu.c ****  *  @param[in]  power_on    1 if turned on, 0 if suspended.
1568:drivers/inv_mpu.c ****  *  @return     0 if successful.
1569:drivers/inv_mpu.c ****  */
1570:drivers/inv_mpu.c **** int mpu_get_power_state(unsigned char *power_on)
1571:drivers/inv_mpu.c **** {
1572:drivers/inv_mpu.c ****     if (st.chip_cfg.sensors)
1573:drivers/inv_mpu.c ****         power_on[0] = 1;
1574:drivers/inv_mpu.c ****     else
1575:drivers/inv_mpu.c ****         power_on[0] = 0;
1576:drivers/inv_mpu.c ****     return 0;
1577:drivers/inv_mpu.c **** }
1578:drivers/inv_mpu.c **** 
1579:drivers/inv_mpu.c **** /**
1580:drivers/inv_mpu.c ****  *  @brief      Turn specific sensors on/off.
1581:drivers/inv_mpu.c ****  *  @e sensors can contain a combination of the following flags:
1582:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1583:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1584:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1585:drivers/inv_mpu.c ****  *  \n INV_XYZ_COMPASS
1586:drivers/inv_mpu.c ****  *  @param[in]  sensors    Mask of sensors to wake.
1587:drivers/inv_mpu.c ****  *  @return     0 if successful.
1588:drivers/inv_mpu.c ****  */
1589:drivers/inv_mpu.c **** int mpu_set_sensors(unsigned char sensors)
1590:drivers/inv_mpu.c **** {
1591:drivers/inv_mpu.c ****     unsigned char data;
1592:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1593:drivers/inv_mpu.c ****     unsigned char user_ctrl;
1594:drivers/inv_mpu.c **** #endif
1595:drivers/inv_mpu.c **** 
1596:drivers/inv_mpu.c ****     if (sensors & INV_XYZ_GYRO)
1597:drivers/inv_mpu.c ****         data = INV_CLK_PLL;
1598:drivers/inv_mpu.c ****     else if (sensors)
1599:drivers/inv_mpu.c ****         data = 0;
1600:drivers/inv_mpu.c ****     else
1601:drivers/inv_mpu.c ****         data = BIT_SLEEP;
1602:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &data)) {
1603:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
1604:drivers/inv_mpu.c ****         return -1;
1605:drivers/inv_mpu.c ****     }
1606:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = data & ~BIT_SLEEP;
1607:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cc18izUm.s 			page 32


1608:drivers/inv_mpu.c ****     data = 0;
1609:drivers/inv_mpu.c ****     if (!(sensors & INV_X_GYRO))
1610:drivers/inv_mpu.c ****         data |= BIT_STBY_XG;
1611:drivers/inv_mpu.c ****     if (!(sensors & INV_Y_GYRO))
1612:drivers/inv_mpu.c ****         data |= BIT_STBY_YG;
1613:drivers/inv_mpu.c ****     if (!(sensors & INV_Z_GYRO))
1614:drivers/inv_mpu.c ****         data |= BIT_STBY_ZG;
1615:drivers/inv_mpu.c ****     if (!(sensors & INV_XYZ_ACCEL))
1616:drivers/inv_mpu.c ****         data |= BIT_STBY_XYZA;
1617:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_2, 1, &data)) {
1618:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
1619:drivers/inv_mpu.c ****         return -1;
1620:drivers/inv_mpu.c ****     }
1621:drivers/inv_mpu.c **** 
1622:drivers/inv_mpu.c ****     if (sensors && (sensors != INV_XYZ_ACCEL))
1623:drivers/inv_mpu.c ****         /* Latched interrupts only used in LP accel mode. */
1624:drivers/inv_mpu.c ****         mpu_set_int_latched(0);
1625:drivers/inv_mpu.c **** 
1626:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1627:drivers/inv_mpu.c **** #ifdef AK89xx_BYPASS
1628:drivers/inv_mpu.c ****     if (sensors & INV_XYZ_COMPASS)
1629:drivers/inv_mpu.c ****         mpu_set_bypass(1);
1630:drivers/inv_mpu.c ****     else
1631:drivers/inv_mpu.c ****         mpu_set_bypass(0);
1632:drivers/inv_mpu.c **** #else
1633:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
1634:drivers/inv_mpu.c ****         return -1;
1635:drivers/inv_mpu.c ****     /* Handle AKM power management. */
1636:drivers/inv_mpu.c ****     if (sensors & INV_XYZ_COMPASS) {
1637:drivers/inv_mpu.c ****         data = AKM_SINGLE_MEASUREMENT;
1638:drivers/inv_mpu.c ****         user_ctrl |= BIT_AUX_IF_EN;
1639:drivers/inv_mpu.c ****     } else {
1640:drivers/inv_mpu.c ****         data = AKM_POWER_DOWN;
1641:drivers/inv_mpu.c ****         user_ctrl &= ~BIT_AUX_IF_EN;
1642:drivers/inv_mpu.c ****     }
1643:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1644:drivers/inv_mpu.c ****         user_ctrl |= BIT_DMP_EN;
1645:drivers/inv_mpu.c ****     else
1646:drivers/inv_mpu.c ****         user_ctrl &= ~BIT_DMP_EN;
1647:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->s1_do, 1, &data))
1648:drivers/inv_mpu.c ****         return -1;
1649:drivers/inv_mpu.c ****     /* Enable/disable I2C master mode. */
1650:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
1651:drivers/inv_mpu.c ****         return -1;
1652:drivers/inv_mpu.c **** #endif
1653:drivers/inv_mpu.c **** #endif
1654:drivers/inv_mpu.c **** 
1655:drivers/inv_mpu.c ****     st.chip_cfg.sensors = sensors;
1656:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
1657:drivers/inv_mpu.c ****     DelayMs(50);
1658:drivers/inv_mpu.c ****     return 0;
1659:drivers/inv_mpu.c **** }
1660:drivers/inv_mpu.c **** 
1661:drivers/inv_mpu.c **** /**
1662:drivers/inv_mpu.c ****  *  @brief      Read the MPU interrupt status registers.
1663:drivers/inv_mpu.c ****  *  @param[out] status  Mask of interrupt bits.
1664:drivers/inv_mpu.c ****  *  @return     0 if successful.
ARM GAS  /tmp/cc18izUm.s 			page 33


1665:drivers/inv_mpu.c ****  */
1666:drivers/inv_mpu.c **** int mpu_get_int_status(short *status)
1667:drivers/inv_mpu.c **** {
1668:drivers/inv_mpu.c ****     unsigned char tmp[2];
1669:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
1670:drivers/inv_mpu.c ****         return -1;
1671:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->dmp_int_status, 2, tmp))
1672:drivers/inv_mpu.c ****         return -1;
1673:drivers/inv_mpu.c ****     status[0] = (tmp[0] << 8) | tmp[1];
1674:drivers/inv_mpu.c ****     return 0;
1675:drivers/inv_mpu.c **** }
1676:drivers/inv_mpu.c **** 
1677:drivers/inv_mpu.c **** /**
1678:drivers/inv_mpu.c ****  *  @brief      Get one packet from the FIFO.
1679:drivers/inv_mpu.c ****  *  If @e sensors does not contain a particular sensor, disregard the data
1680:drivers/inv_mpu.c ****  *  returned to that pointer.
1681:drivers/inv_mpu.c ****  *  \n @e sensors can contain a combination of the following flags:
1682:drivers/inv_mpu.c ****  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
1683:drivers/inv_mpu.c ****  *  \n INV_XYZ_GYRO
1684:drivers/inv_mpu.c ****  *  \n INV_XYZ_ACCEL
1685:drivers/inv_mpu.c ****  *  \n If the FIFO has no new data, @e sensors will be zero.
1686:drivers/inv_mpu.c ****  *  \n If the FIFO is disabled, @e sensors will be zero and this function will
1687:drivers/inv_mpu.c ****  *  return a non-zero error code.
1688:drivers/inv_mpu.c ****  *  @param[out] gyro        Gyro data in hardware units.
1689:drivers/inv_mpu.c ****  *  @param[out] accel       Accel data in hardware units.
1690:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds.
1691:drivers/inv_mpu.c ****  *  @param[out] sensors     Mask of sensors read from FIFO.
1692:drivers/inv_mpu.c ****  *  @param[out] more        Number of remaining packets.
1693:drivers/inv_mpu.c ****  *  @return     0 if successful.
1694:drivers/inv_mpu.c ****  */
1695:drivers/inv_mpu.c **** int mpu_read_fifo(short *gyro, short *accel, unsigned long *timestamp,
1696:drivers/inv_mpu.c ****         unsigned char *sensors, unsigned char *more)
1697:drivers/inv_mpu.c **** {
1698:drivers/inv_mpu.c ****     /* Assumes maximum packet size is gyro (6) + accel (6). */
1699:drivers/inv_mpu.c ****     unsigned char data[MAX_PACKET_LENGTH];
1700:drivers/inv_mpu.c ****     unsigned char packet_size = 0;
1701:drivers/inv_mpu.c ****     unsigned short fifo_count, index = 0;
1702:drivers/inv_mpu.c **** 
1703:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
1704:drivers/inv_mpu.c ****         return -1;
1705:drivers/inv_mpu.c **** 
1706:drivers/inv_mpu.c ****     sensors[0] = 0;
1707:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
1708:drivers/inv_mpu.c ****         return -1;
1709:drivers/inv_mpu.c ****     if (!st.chip_cfg.fifo_enable)
1710:drivers/inv_mpu.c ****         return -1;
1711:drivers/inv_mpu.c **** 
1712:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_X_GYRO)
1713:drivers/inv_mpu.c ****         packet_size += 2;
1714:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Y_GYRO)
1715:drivers/inv_mpu.c ****         packet_size += 2;
1716:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Z_GYRO)
1717:drivers/inv_mpu.c ****         packet_size += 2;
1718:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_XYZ_ACCEL)
1719:drivers/inv_mpu.c ****         packet_size += 6;
1720:drivers/inv_mpu.c **** 
1721:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->fifo_count_h, 2, data))
ARM GAS  /tmp/cc18izUm.s 			page 34


1722:drivers/inv_mpu.c ****         return -1;
1723:drivers/inv_mpu.c ****     fifo_count = (data[0] << 8) | data[1];
1724:drivers/inv_mpu.c ****     if (fifo_count < packet_size)
1725:drivers/inv_mpu.c ****         return 0;
1726:drivers/inv_mpu.c **** //    log_i("FIFO count: %hd\n", fifo_count);
1727:drivers/inv_mpu.c ****     if (fifo_count > (st.hw->max_fifo >> 1)) {
1728:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
1729:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->int_status, 1, data))
1730:drivers/inv_mpu.c ****             return -1;
1731:drivers/inv_mpu.c ****         if (data[0] & BIT_FIFO_OVERFLOW) {
1732:drivers/inv_mpu.c ****             mpu_reset_fifo();
1733:drivers/inv_mpu.c ****             return -2;
1734:drivers/inv_mpu.c ****         }
1735:drivers/inv_mpu.c ****     }
1736:drivers/inv_mpu.c ****     get_ms((unsigned long*)timestamp);
1737:drivers/inv_mpu.c **** 
1738:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->fifo_r_w, packet_size, data))
1739:drivers/inv_mpu.c ****         return -1;
1740:drivers/inv_mpu.c ****     more[0] = fifo_count / packet_size - 1;
1741:drivers/inv_mpu.c ****     sensors[0] = 0;
1742:drivers/inv_mpu.c **** 
1743:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_XYZ_ACCEL) {
1744:drivers/inv_mpu.c ****         accel[0] = (data[index+0] << 8) | data[index+1];
1745:drivers/inv_mpu.c ****         accel[1] = (data[index+2] << 8) | data[index+3];
1746:drivers/inv_mpu.c ****         accel[2] = (data[index+4] << 8) | data[index+5];
1747:drivers/inv_mpu.c ****         sensors[0] |= INV_XYZ_ACCEL;
1748:drivers/inv_mpu.c ****         index += 6;
1749:drivers/inv_mpu.c ****     }
1750:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_X_GYRO) {
1751:drivers/inv_mpu.c ****         gyro[0] = (data[index+0] << 8) | data[index+1];
1752:drivers/inv_mpu.c ****         sensors[0] |= INV_X_GYRO;
1753:drivers/inv_mpu.c ****         index += 2;
1754:drivers/inv_mpu.c ****     }
1755:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Y_GYRO) {
1756:drivers/inv_mpu.c ****         gyro[1] = (data[index+0] << 8) | data[index+1];
1757:drivers/inv_mpu.c ****         sensors[0] |= INV_Y_GYRO;
1758:drivers/inv_mpu.c ****         index += 2;
1759:drivers/inv_mpu.c ****     }
1760:drivers/inv_mpu.c ****     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Z_GYRO) {
1761:drivers/inv_mpu.c ****         gyro[2] = (data[index+0] << 8) | data[index+1];
1762:drivers/inv_mpu.c ****         sensors[0] |= INV_Z_GYRO;
1763:drivers/inv_mpu.c ****         index += 2;
1764:drivers/inv_mpu.c ****     }
1765:drivers/inv_mpu.c **** 
1766:drivers/inv_mpu.c ****     return 0;
1767:drivers/inv_mpu.c **** }
1768:drivers/inv_mpu.c **** 
1769:drivers/inv_mpu.c **** /**
1770:drivers/inv_mpu.c ****  *  @brief      Get one unparsed packet from the FIFO.
1771:drivers/inv_mpu.c ****  *  This function should be used if the packet is to be parsed elsewhere.
1772:drivers/inv_mpu.c ****  *  @param[in]  length  Length of one FIFO packet.
1773:drivers/inv_mpu.c ****  *  @param[in]  data    FIFO packet.
1774:drivers/inv_mpu.c ****  *  @param[in]  more    Number of remaining packets.
1775:drivers/inv_mpu.c ****  */
1776:drivers/inv_mpu.c **** int mpu_read_fifo_stream(unsigned short length, unsigned char *data,
1777:drivers/inv_mpu.c ****     unsigned char *more)
1778:drivers/inv_mpu.c **** {
ARM GAS  /tmp/cc18izUm.s 			page 35


1779:drivers/inv_mpu.c ****     unsigned char tmp[2];
1780:drivers/inv_mpu.c ****     unsigned short fifo_count;
1781:drivers/inv_mpu.c ****     if (!st.chip_cfg.dmp_on)
1782:drivers/inv_mpu.c ****         return -1;
1783:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
1784:drivers/inv_mpu.c ****         return -1;
1785:drivers/inv_mpu.c **** 
1786:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->fifo_count_h, 2, tmp))
1787:drivers/inv_mpu.c ****         return -1;
1788:drivers/inv_mpu.c ****     fifo_count = (tmp[0] << 8) | tmp[1];
1789:drivers/inv_mpu.c ****     if (fifo_count < length) {
1790:drivers/inv_mpu.c ****         more[0] = 0;
1791:drivers/inv_mpu.c ****         return -1;
1792:drivers/inv_mpu.c ****     }
1793:drivers/inv_mpu.c ****     if (fifo_count > (st.hw->max_fifo >> 1)) {
1794:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
1795:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->int_status, 1, tmp))
1796:drivers/inv_mpu.c ****             return -1;
1797:drivers/inv_mpu.c ****         if (tmp[0] & BIT_FIFO_OVERFLOW) {
1798:drivers/inv_mpu.c ****             mpu_reset_fifo();
1799:drivers/inv_mpu.c ****             return -2;
1800:drivers/inv_mpu.c ****         }
1801:drivers/inv_mpu.c ****     }
1802:drivers/inv_mpu.c **** 
1803:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->fifo_r_w, length, data))
1804:drivers/inv_mpu.c ****         return -1;
1805:drivers/inv_mpu.c ****     more[0] = fifo_count / length - 1;
1806:drivers/inv_mpu.c ****     return 0;
1807:drivers/inv_mpu.c **** }
1808:drivers/inv_mpu.c **** 
1809:drivers/inv_mpu.c **** /**
1810:drivers/inv_mpu.c ****  *  @brief      Set device to bypass mode.
1811:drivers/inv_mpu.c ****  *  @param[in]  bypass_on   1 to enable bypass mode.
1812:drivers/inv_mpu.c ****  *  @return     0 if successful.
1813:drivers/inv_mpu.c ****  */
1814:drivers/inv_mpu.c **** int mpu_set_bypass(unsigned char bypass_on)
1815:drivers/inv_mpu.c **** {
1816:drivers/inv_mpu.c ****     unsigned char tmp;
1817:drivers/inv_mpu.c **** 
1818:drivers/inv_mpu.c ****     if (st.chip_cfg.bypass_mode == bypass_on)
1819:drivers/inv_mpu.c ****         return 0;
1820:drivers/inv_mpu.c **** 
1821:drivers/inv_mpu.c ****     if (bypass_on) {
1822:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1823:drivers/inv_mpu.c ****             return -1;
1824:drivers/inv_mpu.c ****         tmp &= ~BIT_AUX_IF_EN;
1825:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1826:drivers/inv_mpu.c ****             return -1;
1827:drivers/inv_mpu.c ****         DelayMs(3);
1828:drivers/inv_mpu.c ****         tmp = BIT_BYPASS_EN;
1829:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
1830:drivers/inv_mpu.c ****             tmp |= BIT_ACTL;
1831:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
1832:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
1833:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
1834:drivers/inv_mpu.c ****             return -1;
1835:drivers/inv_mpu.c ****     } else {
ARM GAS  /tmp/cc18izUm.s 			page 36


1836:drivers/inv_mpu.c ****         /* Enable I2C master mode if compass is being used. */
1837:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1838:drivers/inv_mpu.c ****             return -1;
1839:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
1840:drivers/inv_mpu.c ****             tmp |= BIT_AUX_IF_EN;
1841:drivers/inv_mpu.c ****         else
1842:drivers/inv_mpu.c ****             tmp &= ~BIT_AUX_IF_EN;
1843:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
1844:drivers/inv_mpu.c ****             return -1;
1845:drivers/inv_mpu.c ****         DelayMs(3);
1846:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
1847:drivers/inv_mpu.c ****             tmp = BIT_ACTL;
1848:drivers/inv_mpu.c ****         else
1849:drivers/inv_mpu.c ****             tmp = 0;
1850:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
1851:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
1852:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
1853:drivers/inv_mpu.c ****             return -1;
1854:drivers/inv_mpu.c ****     }
1855:drivers/inv_mpu.c ****     st.chip_cfg.bypass_mode = bypass_on;
1856:drivers/inv_mpu.c ****     return 0;
1857:drivers/inv_mpu.c **** }
1858:drivers/inv_mpu.c **** 
1859:drivers/inv_mpu.c **** /**
1860:drivers/inv_mpu.c ****  *  @brief      Set interrupt level.
1861:drivers/inv_mpu.c ****  *  @param[in]  active_low  1 for active low, 0 for active high.
1862:drivers/inv_mpu.c ****  *  @return     0 if successful.
1863:drivers/inv_mpu.c ****  */
1864:drivers/inv_mpu.c **** int mpu_set_int_level(unsigned char active_low)
1865:drivers/inv_mpu.c **** {
1866:drivers/inv_mpu.c ****     st.chip_cfg.active_low_int = active_low;
1867:drivers/inv_mpu.c ****     return 0;
1868:drivers/inv_mpu.c **** }
1869:drivers/inv_mpu.c **** 
1870:drivers/inv_mpu.c **** /**
1871:drivers/inv_mpu.c ****  *  @brief      Enable latched interrupts.
1872:drivers/inv_mpu.c ****  *  Any MPU register will clear the interrupt.
1873:drivers/inv_mpu.c ****  *  @param[in]  enable  1 to enable, 0 to disable.
1874:drivers/inv_mpu.c ****  *  @return     0 if successful.
1875:drivers/inv_mpu.c ****  */
1876:drivers/inv_mpu.c **** int mpu_set_int_latched(unsigned char enable)
1877:drivers/inv_mpu.c **** {
1878:drivers/inv_mpu.c ****     unsigned char tmp;
1879:drivers/inv_mpu.c ****     if (st.chip_cfg.latched_int == enable)
1880:drivers/inv_mpu.c ****         return 0;
1881:drivers/inv_mpu.c **** 
1882:drivers/inv_mpu.c ****     if (enable)
1883:drivers/inv_mpu.c ****         tmp = BIT_LATCH_EN | BIT_ANY_RD_CLR;
1884:drivers/inv_mpu.c ****     else
1885:drivers/inv_mpu.c ****         tmp = 0;
1886:drivers/inv_mpu.c ****     if (st.chip_cfg.bypass_mode)
1887:drivers/inv_mpu.c ****         tmp |= BIT_BYPASS_EN;
1888:drivers/inv_mpu.c ****     if (st.chip_cfg.active_low_int)
1889:drivers/inv_mpu.c ****         tmp |= BIT_ACTL;
1890:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
1891:drivers/inv_mpu.c ****         return -1;
1892:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = enable;
ARM GAS  /tmp/cc18izUm.s 			page 37


1893:drivers/inv_mpu.c ****     return 0;
1894:drivers/inv_mpu.c **** }
1895:drivers/inv_mpu.c **** 
1896:drivers/inv_mpu.c **** #ifdef MPU6050
1897:drivers/inv_mpu.c **** static int get_accel_prod_shift(float *st_shift)
1898:drivers/inv_mpu.c **** {
1899:drivers/inv_mpu.c ****     unsigned char tmp[4], shift_code[3], ii;
1900:drivers/inv_mpu.c **** 
1901:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, 0x0D, 4, tmp))
1902:drivers/inv_mpu.c ****         return 0x07;
1903:drivers/inv_mpu.c **** 
1904:drivers/inv_mpu.c ****     shift_code[0] = ((tmp[0] & 0xE0) >> 3) | ((tmp[3] & 0x30) >> 4);
1905:drivers/inv_mpu.c ****     shift_code[1] = ((tmp[1] & 0xE0) >> 3) | ((tmp[3] & 0x0C) >> 2);
1906:drivers/inv_mpu.c ****     shift_code[2] = ((tmp[2] & 0xE0) >> 3) | (tmp[3] & 0x03);
1907:drivers/inv_mpu.c ****     for (ii = 0; ii < 3; ii++) {
1908:drivers/inv_mpu.c ****         if (!shift_code[ii]) {
1909:drivers/inv_mpu.c ****             st_shift[ii] = 0.f;
1910:drivers/inv_mpu.c ****             continue;
1911:drivers/inv_mpu.c ****         }
1912:drivers/inv_mpu.c ****         /* Equivalent to..
1913:drivers/inv_mpu.c ****          * st_shift[ii] = 0.34f * powf(0.92f/0.34f, (shift_code[ii]-1) / 30.f)
1914:drivers/inv_mpu.c ****          */
1915:drivers/inv_mpu.c ****         st_shift[ii] = 0.34f;
1916:drivers/inv_mpu.c ****         while (--shift_code[ii])
1917:drivers/inv_mpu.c ****             st_shift[ii] *= 1.034f;
1918:drivers/inv_mpu.c ****     }
1919:drivers/inv_mpu.c ****     return 0;
1920:drivers/inv_mpu.c **** }
1921:drivers/inv_mpu.c **** 
1922:drivers/inv_mpu.c **** static int accel_self_test(long *bias_regular, long *bias_st)
1923:drivers/inv_mpu.c **** {
1924:drivers/inv_mpu.c ****     int jj, result = 0;
1925:drivers/inv_mpu.c ****     float st_shift[3], st_shift_cust, st_shift_var;
1926:drivers/inv_mpu.c **** 
1927:drivers/inv_mpu.c ****     get_accel_prod_shift(st_shift);
1928:drivers/inv_mpu.c ****     for(jj = 0; jj < 3; jj++) {
1929:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
1930:drivers/inv_mpu.c ****         if (st_shift[jj]) {
1931:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
1932:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_accel_var)
1933:drivers/inv_mpu.c ****                 result |= 1 << jj;
1934:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_g) ||
1935:drivers/inv_mpu.c ****             (st_shift_cust > test.max_g))
1936:drivers/inv_mpu.c ****             result |= 1 << jj;
1937:drivers/inv_mpu.c ****     }
1938:drivers/inv_mpu.c **** 
1939:drivers/inv_mpu.c ****     return result;
1940:drivers/inv_mpu.c **** }
1941:drivers/inv_mpu.c **** 
1942:drivers/inv_mpu.c **** static int gyro_self_test(long *bias_regular, long *bias_st)
1943:drivers/inv_mpu.c **** {
1944:drivers/inv_mpu.c ****     int jj, result = 0;
1945:drivers/inv_mpu.c ****     unsigned char tmp[3];
1946:drivers/inv_mpu.c ****     float st_shift, st_shift_cust, st_shift_var;
1947:drivers/inv_mpu.c **** 
1948:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, 0x0D, 3, tmp))
1949:drivers/inv_mpu.c ****         return 0x07;
ARM GAS  /tmp/cc18izUm.s 			page 38


1950:drivers/inv_mpu.c **** 
1951:drivers/inv_mpu.c ****     tmp[0] &= 0x1F;
1952:drivers/inv_mpu.c ****     tmp[1] &= 0x1F;
1953:drivers/inv_mpu.c ****     tmp[2] &= 0x1F;
1954:drivers/inv_mpu.c **** 
1955:drivers/inv_mpu.c ****     for (jj = 0; jj < 3; jj++) {
1956:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
1957:drivers/inv_mpu.c ****         if (tmp[jj]) {
1958:drivers/inv_mpu.c ****             st_shift = 3275.f / test.gyro_sens;
1959:drivers/inv_mpu.c ****             while (--tmp[jj])
1960:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
1961:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift - 1.f;
1962:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_gyro_var)
1963:drivers/inv_mpu.c ****                 result |= 1 << jj;
1964:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_dps) ||
1965:drivers/inv_mpu.c ****             (st_shift_cust > test.max_dps))
1966:drivers/inv_mpu.c ****             result |= 1 << jj;
1967:drivers/inv_mpu.c ****     }
1968:drivers/inv_mpu.c ****     return result;
1969:drivers/inv_mpu.c **** }
1970:drivers/inv_mpu.c **** 
1971:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
1972:drivers/inv_mpu.c **** static int compass_self_test(void)
1973:drivers/inv_mpu.c **** {
1974:drivers/inv_mpu.c ****     unsigned char tmp[6];
1975:drivers/inv_mpu.c ****     unsigned char tries = 10;
1976:drivers/inv_mpu.c ****     int result = 0x07;
1977:drivers/inv_mpu.c ****     short data;
1978:drivers/inv_mpu.c **** 
1979:drivers/inv_mpu.c ****     mpu_set_bypass(1);
1980:drivers/inv_mpu.c **** 
1981:drivers/inv_mpu.c ****     tmp[0] = AKM_POWER_DOWN;
1982:drivers/inv_mpu.c ****     if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
1983:drivers/inv_mpu.c ****         return 0x07;
1984:drivers/inv_mpu.c ****     tmp[0] = AKM_BIT_SELF_TEST;
1985:drivers/inv_mpu.c ****     if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp))
1986:drivers/inv_mpu.c ****         goto AKM_restore;
1987:drivers/inv_mpu.c ****     tmp[0] = AKM_MODE_SELF_TEST;
1988:drivers/inv_mpu.c ****     if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
1989:drivers/inv_mpu.c ****         goto AKM_restore;
1990:drivers/inv_mpu.c **** 
1991:drivers/inv_mpu.c ****     do {
1992:drivers/inv_mpu.c ****         DelayMs(10);
1993:drivers/inv_mpu.c ****         if (I2C_Read(st.chip_cfg.compass_addr, AKM_REG_ST1, 1, tmp))
1994:drivers/inv_mpu.c ****             goto AKM_restore;
1995:drivers/inv_mpu.c ****         if (tmp[0] & AKM_DATA_READY)
1996:drivers/inv_mpu.c ****             break;
1997:drivers/inv_mpu.c ****     } while (tries--);
1998:drivers/inv_mpu.c ****     if (!(tmp[0] & AKM_DATA_READY))
1999:drivers/inv_mpu.c ****         goto AKM_restore;
2000:drivers/inv_mpu.c **** 
2001:drivers/inv_mpu.c ****     if (I2C_Read(st.chip_cfg.compass_addr, AKM_REG_HXL, 6, tmp))
2002:drivers/inv_mpu.c ****         goto AKM_restore;
2003:drivers/inv_mpu.c **** 
2004:drivers/inv_mpu.c ****     result = 0;
2005:drivers/inv_mpu.c ****     data = (short)(tmp[1] << 8) | tmp[0];
2006:drivers/inv_mpu.c ****     if ((data > 100) || (data < -100))
ARM GAS  /tmp/cc18izUm.s 			page 39


2007:drivers/inv_mpu.c ****         result |= 0x01;
2008:drivers/inv_mpu.c ****     data = (short)(tmp[3] << 8) | tmp[2];
2009:drivers/inv_mpu.c ****     if ((data > 100) || (data < -100))
2010:drivers/inv_mpu.c ****         result |= 0x02;
2011:drivers/inv_mpu.c ****     data = (short)(tmp[5] << 8) | tmp[4];
2012:drivers/inv_mpu.c ****     if ((data > -300) || (data < -1000))
2013:drivers/inv_mpu.c ****         result |= 0x04;
2014:drivers/inv_mpu.c **** 
2015:drivers/inv_mpu.c **** AKM_restore:
2016:drivers/inv_mpu.c ****     tmp[0] = 0 | SUPPORTS_AK89xx_HIGH_SENS;
2017:drivers/inv_mpu.c ****     I2C_Write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp);
2018:drivers/inv_mpu.c ****     tmp[0] = SUPPORTS_AK89xx_HIGH_SENS;
2019:drivers/inv_mpu.c ****     I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp);
2020:drivers/inv_mpu.c ****     mpu_set_bypass(0);
2021:drivers/inv_mpu.c ****     return result;
2022:drivers/inv_mpu.c **** }
2023:drivers/inv_mpu.c **** #endif
2024:drivers/inv_mpu.c **** #endif
2025:drivers/inv_mpu.c **** 
2026:drivers/inv_mpu.c **** static int get_st_biases(long *gyro, long *accel, unsigned char hw_test)
2027:drivers/inv_mpu.c **** {
 149              		.loc 1 2027 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 16
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              	.LVL12:
 154 0098 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 155              		.cfi_def_cfa_offset 28
 156              		.cfi_offset 4, -28
 157              		.cfi_offset 5, -24
 158              		.cfi_offset 6, -20
 159              		.cfi_offset 7, -16
 160              		.cfi_offset 8, -12
 161              		.cfi_offset 9, -8
 162              		.cfi_offset 14, -4
 163 009c 85B0     		sub	sp, sp, #20
 164              		.cfi_def_cfa_offset 48
 165 009e 0546     		mov	r5, r0
 166 00a0 0C46     		mov	r4, r1
 167 00a2 1646     		mov	r6, r2
2028:drivers/inv_mpu.c ****     unsigned char data[MAX_PACKET_LENGTH];
2029:drivers/inv_mpu.c ****     unsigned char packet_count, ii;
2030:drivers/inv_mpu.c ****     unsigned short fifo_count;
2031:drivers/inv_mpu.c **** 
2032:drivers/inv_mpu.c ****     data[0] = 0x01;
 168              		.loc 1 2032 0
 169 00a4 0123     		movs	r3, #1
 170 00a6 8DF80430 		strb	r3, [sp, #4]
2033:drivers/inv_mpu.c ****     data[1] = 0;
 171              		.loc 1 2033 0
 172 00aa 0023     		movs	r3, #0
 173 00ac 8DF80530 		strb	r3, [sp, #5]
2034:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
 174              		.loc 1 2034 0
 175 00b0 544B     		ldr	r3, .L58
 176 00b2 1968     		ldr	r1, [r3]
 177              	.LVL13:
ARM GAS  /tmp/cc18izUm.s 			page 40


 178 00b4 5868     		ldr	r0, [r3, #4]
 179              	.LVL14:
 180 00b6 01AB     		add	r3, sp, #4
 181 00b8 0222     		movs	r2, #2
 182              	.LVL15:
 183 00ba 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 184 00bc 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 185 00be FFF7FEFF 		bl	I2C_Write
 186              	.LVL16:
 187 00c2 0028     		cmp	r0, #0
 188 00c4 40F0E681 		bne	.L28
2035:drivers/inv_mpu.c ****         return -1;
2036:drivers/inv_mpu.c ****     DelayMs(200);
 189              		.loc 1 2036 0
 190 00c8 C820     		movs	r0, #200
 191 00ca FFF7FEFF 		bl	DelayMs
 192              	.LVL17:
2037:drivers/inv_mpu.c ****     data[0] = 0;
 193              		.loc 1 2037 0
 194 00ce 04AB     		add	r3, sp, #16
 195 00d0 0022     		movs	r2, #0
 196 00d2 03F80C2D 		strb	r2, [r3, #-12]!
2038:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, data))
 197              		.loc 1 2038 0
 198 00d6 4B4A     		ldr	r2, .L58
 199 00d8 1168     		ldr	r1, [r2]
 200 00da 5068     		ldr	r0, [r2, #4]
 201 00dc 0122     		movs	r2, #1
 202 00de C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 203 00e0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 204 00e2 FFF7FEFF 		bl	I2C_Write
 205              	.LVL18:
 206 00e6 0028     		cmp	r0, #0
 207 00e8 40F0D781 		bne	.L29
2039:drivers/inv_mpu.c ****         return -1;
2040:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, data))
 208              		.loc 1 2040 0
 209 00ec 454B     		ldr	r3, .L58
 210 00ee 1968     		ldr	r1, [r3]
 211 00f0 5868     		ldr	r0, [r3, #4]
 212 00f2 01AB     		add	r3, sp, #4
 213 00f4 0122     		movs	r2, #1
 214 00f6 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 215 00f8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 216 00fa FFF7FEFF 		bl	I2C_Write
 217              	.LVL19:
 218 00fe 0028     		cmp	r0, #0
 219 0100 40F0CE81 		bne	.L30
2041:drivers/inv_mpu.c ****         return -1;
2042:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
 220              		.loc 1 2042 0
 221 0104 3F4B     		ldr	r3, .L58
 222 0106 1968     		ldr	r1, [r3]
 223 0108 5868     		ldr	r0, [r3, #4]
 224 010a 01AB     		add	r3, sp, #4
 225 010c 0122     		movs	r2, #1
 226 010e 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 41


 227 0110 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 228 0112 FFF7FEFF 		bl	I2C_Write
 229              	.LVL20:
 230 0116 0028     		cmp	r0, #0
 231 0118 40F0C581 		bne	.L31
2043:drivers/inv_mpu.c ****         return -1;
2044:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->i2c_mst, 1, data))
 232              		.loc 1 2044 0
 233 011c 394B     		ldr	r3, .L58
 234 011e 1968     		ldr	r1, [r3]
 235 0120 5868     		ldr	r0, [r3, #4]
 236 0122 01AB     		add	r3, sp, #4
 237 0124 0122     		movs	r2, #1
 238 0126 C97D     		ldrb	r1, [r1, #23]	@ zero_extendqisi2
 239 0128 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 240 012a FFF7FEFF 		bl	I2C_Write
 241              	.LVL21:
 242 012e 0028     		cmp	r0, #0
 243 0130 40F0BC81 		bne	.L32
2045:drivers/inv_mpu.c ****         return -1;
2046:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, data))
 244              		.loc 1 2046 0
 245 0134 334B     		ldr	r3, .L58
 246 0136 1968     		ldr	r1, [r3]
 247 0138 5868     		ldr	r0, [r3, #4]
 248 013a 01AB     		add	r3, sp, #4
 249 013c 0122     		movs	r2, #1
 250 013e 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 251 0140 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 252 0142 FFF7FEFF 		bl	I2C_Write
 253              	.LVL22:
 254 0146 0028     		cmp	r0, #0
 255 0148 40F0B381 		bne	.L33
2047:drivers/inv_mpu.c ****         return -1;
2048:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_RST | BIT_DMP_RST;
 256              		.loc 1 2048 0
 257 014c 04AB     		add	r3, sp, #16
 258 014e 0C22     		movs	r2, #12
 259 0150 03F80C2D 		strb	r2, [r3, #-12]!
2049:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, data))
 260              		.loc 1 2049 0
 261 0154 2B4A     		ldr	r2, .L58
 262 0156 1168     		ldr	r1, [r2]
 263 0158 5068     		ldr	r0, [r2, #4]
 264 015a 0122     		movs	r2, #1
 265 015c 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 266 015e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 267 0160 FFF7FEFF 		bl	I2C_Write
 268              	.LVL23:
 269 0164 0028     		cmp	r0, #0
 270 0166 40F0A781 		bne	.L34
2050:drivers/inv_mpu.c ****         return -1;
2051:drivers/inv_mpu.c ****     DelayMs(15);
 271              		.loc 1 2051 0
 272 016a 0F20     		movs	r0, #15
 273 016c FFF7FEFF 		bl	DelayMs
 274              	.LVL24:
ARM GAS  /tmp/cc18izUm.s 			page 42


2052:drivers/inv_mpu.c ****     data[0] = st.test->reg_lpf;
 275              		.loc 1 2052 0
 276 0170 244A     		ldr	r2, .L58
 277 0172 936A     		ldr	r3, [r2, #40]
 278 0174 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 279 0176 04AB     		add	r3, sp, #16
 280 0178 03F80C1D 		strb	r1, [r3, #-12]!
2053:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->lpf, 1, data))
 281              		.loc 1 2053 0
 282 017c 1168     		ldr	r1, [r2]
 283 017e 5068     		ldr	r0, [r2, #4]
 284 0180 0122     		movs	r2, #1
 285 0182 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 286 0184 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 287 0186 FFF7FEFF 		bl	I2C_Write
 288              	.LVL25:
 289 018a 0028     		cmp	r0, #0
 290 018c 40F09781 		bne	.L35
2054:drivers/inv_mpu.c ****         return -1;
2055:drivers/inv_mpu.c ****     data[0] = st.test->reg_rate_div;
 291              		.loc 1 2055 0
 292 0190 1C4A     		ldr	r2, .L58
 293 0192 936A     		ldr	r3, [r2, #40]
 294 0194 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 295 0196 04AB     		add	r3, sp, #16
 296 0198 03F80C1D 		strb	r1, [r3, #-12]!
2056:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->rate_div, 1, data))
 297              		.loc 1 2056 0
 298 019c 1168     		ldr	r1, [r2]
 299 019e 5068     		ldr	r0, [r2, #4]
 300 01a0 0122     		movs	r2, #1
 301 01a2 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 302 01a4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 303 01a6 FFF7FEFF 		bl	I2C_Write
 304              	.LVL26:
 305 01aa 0028     		cmp	r0, #0
 306 01ac 40F08A81 		bne	.L36
2057:drivers/inv_mpu.c ****         return -1;
2058:drivers/inv_mpu.c ****     if (hw_test)
 307              		.loc 1 2058 0
 308 01b0 56B3     		cbz	r6, .L17
2059:drivers/inv_mpu.c ****         data[0] = st.test->reg_gyro_fsr | 0xE0;
 309              		.loc 1 2059 0
 310 01b2 144A     		ldr	r2, .L58
 311 01b4 936A     		ldr	r3, [r2, #40]
 312 01b6 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 313 01b8 61F01F01 		orn	r1, r1, #31
 314 01bc 04AB     		add	r3, sp, #16
 315 01be 03F80C1D 		strb	r1, [r3, #-12]!
2060:drivers/inv_mpu.c ****     else
2061:drivers/inv_mpu.c ****         data[0] = st.test->reg_gyro_fsr;
2062:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->gyro_cfg, 1, data))
 316              		.loc 1 2062 0
 317 01c2 1168     		ldr	r1, [r2]
 318 01c4 5068     		ldr	r0, [r2, #4]
 319 01c6 0122     		movs	r2, #1
 320 01c8 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 43


 321 01ca 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 322 01cc FFF7FEFF 		bl	I2C_Write
 323              	.LVL27:
 324 01d0 0028     		cmp	r0, #0
 325 01d2 40F07A81 		bne	.L51
2063:drivers/inv_mpu.c ****         return -1;
2064:drivers/inv_mpu.c **** 
2065:drivers/inv_mpu.c ****     if (hw_test)
2066:drivers/inv_mpu.c ****         data[0] = st.test->reg_accel_fsr | 0xE0;
 326              		.loc 1 2066 0
 327 01d6 0B4A     		ldr	r2, .L58
 328 01d8 936A     		ldr	r3, [r2, #40]
 329 01da D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 330 01dc 61F01F01 		orn	r1, r1, #31
 331 01e0 04AB     		add	r3, sp, #16
 332 01e2 03F80C1D 		strb	r1, [r3, #-12]!
2067:drivers/inv_mpu.c ****     else
2068:drivers/inv_mpu.c ****         data[0] = test.reg_accel_fsr;
2069:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->accel_cfg, 1, data))
 333              		.loc 1 2069 0
 334 01e6 1168     		ldr	r1, [r2]
 335 01e8 5068     		ldr	r0, [r2, #4]
 336 01ea 0122     		movs	r2, #1
 337 01ec C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 338 01ee 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 339 01f0 FFF7FEFF 		bl	I2C_Write
 340              	.LVL28:
 341 01f4 0028     		cmp	r0, #0
 342 01f6 40F06E81 		bne	.L52
2070:drivers/inv_mpu.c ****         return -1;
2071:drivers/inv_mpu.c ****     if (hw_test)
2072:drivers/inv_mpu.c ****         DelayMs(200);
 343              		.loc 1 2072 0
 344 01fa C820     		movs	r0, #200
 345 01fc FFF7FEFF 		bl	DelayMs
 346              	.LVL29:
 347 0200 21E0     		b	.L21
 348              	.L59:
 349 0202 00BF     		.align	2
 350              	.L58:
 351 0204 00000000 		.word	.LANCHOR0
 352              	.L17:
2061:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->gyro_cfg, 1, data))
 353              		.loc 1 2061 0
 354 0208 BD4A     		ldr	r2, .L60
 355 020a 936A     		ldr	r3, [r2, #40]
 356 020c 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 357 020e 04AB     		add	r3, sp, #16
 358 0210 03F80C1D 		strb	r1, [r3, #-12]!
2062:drivers/inv_mpu.c ****         return -1;
 359              		.loc 1 2062 0
 360 0214 1168     		ldr	r1, [r2]
 361 0216 5068     		ldr	r0, [r2, #4]
 362 0218 0122     		movs	r2, #1
 363 021a 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 364 021c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 365 021e FFF7FEFF 		bl	I2C_Write
ARM GAS  /tmp/cc18izUm.s 			page 44


 366              	.LVL30:
 367 0222 0028     		cmp	r0, #0
 368 0224 40F05481 		bne	.L53
2068:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->accel_cfg, 1, data))
 369              		.loc 1 2068 0
 370 0228 04AB     		add	r3, sp, #16
 371 022a 1822     		movs	r2, #24
 372 022c 03F80C2D 		strb	r2, [r3, #-12]!
2069:drivers/inv_mpu.c ****         return -1;
 373              		.loc 1 2069 0
 374 0230 B34A     		ldr	r2, .L60
 375 0232 1168     		ldr	r1, [r2]
 376 0234 5068     		ldr	r0, [r2, #4]
 377 0236 0122     		movs	r2, #1
 378 0238 C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 379 023a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 380 023c FFF7FEFF 		bl	I2C_Write
 381              	.LVL31:
 382 0240 0028     		cmp	r0, #0
 383 0242 40F04B81 		bne	.L54
 384              	.L21:
2073:drivers/inv_mpu.c **** 
2074:drivers/inv_mpu.c ****     /* Fill FIFO for test.wait_ms milliseconds. */
2075:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_EN;
 385              		.loc 1 2075 0
 386 0246 04AB     		add	r3, sp, #16
 387 0248 4022     		movs	r2, #64
 388 024a 03F80C2D 		strb	r2, [r3, #-12]!
2076:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, data))
 389              		.loc 1 2076 0
 390 024e AC4A     		ldr	r2, .L60
 391 0250 1168     		ldr	r1, [r2]
 392 0252 5068     		ldr	r0, [r2, #4]
 393 0254 0122     		movs	r2, #1
 394 0256 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 395 0258 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 396 025a FFF7FEFF 		bl	I2C_Write
 397              	.LVL32:
 398 025e 0028     		cmp	r0, #0
 399 0260 40F03F81 		bne	.L41
2077:drivers/inv_mpu.c ****         return -1;
2078:drivers/inv_mpu.c **** 
2079:drivers/inv_mpu.c ****     data[0] = INV_XYZ_GYRO | INV_XYZ_ACCEL;
 400              		.loc 1 2079 0
 401 0264 04AB     		add	r3, sp, #16
 402 0266 7822     		movs	r2, #120
 403 0268 03F80C2D 		strb	r2, [r3, #-12]!
2080:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, data))
 404              		.loc 1 2080 0
 405 026c A44A     		ldr	r2, .L60
 406 026e 1168     		ldr	r1, [r2]
 407 0270 5068     		ldr	r0, [r2, #4]
 408 0272 0122     		movs	r2, #1
 409 0274 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 410 0276 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 411 0278 FFF7FEFF 		bl	I2C_Write
 412              	.LVL33:
ARM GAS  /tmp/cc18izUm.s 			page 45


 413 027c 0028     		cmp	r0, #0
 414 027e 40F03381 		bne	.L42
2081:drivers/inv_mpu.c ****         return -1;
2082:drivers/inv_mpu.c ****     DelayMs(test.wait_ms);
 415              		.loc 1 2082 0
 416 0282 3220     		movs	r0, #50
 417 0284 FFF7FEFF 		bl	DelayMs
 418              	.LVL34:
2083:drivers/inv_mpu.c ****     data[0] = 0;
 419              		.loc 1 2083 0
 420 0288 04AB     		add	r3, sp, #16
 421 028a 0022     		movs	r2, #0
 422 028c 03F80C2D 		strb	r2, [r3, #-12]!
2084:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, data))
 423              		.loc 1 2084 0
 424 0290 9B4A     		ldr	r2, .L60
 425 0292 1168     		ldr	r1, [r2]
 426 0294 5068     		ldr	r0, [r2, #4]
 427 0296 0122     		movs	r2, #1
 428 0298 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 429 029a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 430 029c FFF7FEFF 		bl	I2C_Write
 431              	.LVL35:
 432 02a0 0028     		cmp	r0, #0
 433 02a2 40F02481 		bne	.L43
2085:drivers/inv_mpu.c ****         return -1;
2086:drivers/inv_mpu.c **** 
2087:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->fifo_count_h, 2, data))
 434              		.loc 1 2087 0
 435 02a6 964B     		ldr	r3, .L60
 436 02a8 1968     		ldr	r1, [r3]
 437 02aa 5868     		ldr	r0, [r3, #4]
 438 02ac 01AB     		add	r3, sp, #4
 439 02ae 0222     		movs	r2, #2
 440 02b0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 441 02b2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 442 02b4 FFF7FEFF 		bl	I2C_Read
 443              	.LVL36:
 444 02b8 0028     		cmp	r0, #0
 445 02ba 40F01B81 		bne	.L44
 446              	.LVL37:
2088:drivers/inv_mpu.c ****         return -1;
2089:drivers/inv_mpu.c **** 
2090:drivers/inv_mpu.c ****     fifo_count = (data[0] << 8) | data[1];
 447              		.loc 1 2090 0
 448 02be 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 449 02c2 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
2091:drivers/inv_mpu.c ****     packet_count = fifo_count / MAX_PACKET_LENGTH;
 450              		.loc 1 2091 0
 451 02c6 48EA0328 		orr	r8, r8, r3, lsl #8
 452 02ca 8E4B     		ldr	r3, .L60+4
 453 02cc A3FB0838 		umull	r3, r8, r3, r8
 454 02d0 C8F3C708 		ubfx	r8, r8, #3, #8
 455              	.LVL38:
2092:drivers/inv_mpu.c ****     gyro[0] = gyro[1] = gyro[2] = 0;
 456              		.loc 1 2092 0
 457 02d4 0023     		movs	r3, #0
ARM GAS  /tmp/cc18izUm.s 			page 46


 458 02d6 AB60     		str	r3, [r5, #8]
 459 02d8 6B60     		str	r3, [r5, #4]
 460 02da 2B60     		str	r3, [r5]
2093:drivers/inv_mpu.c ****     accel[0] = accel[1] = accel[2] = 0;
 461              		.loc 1 2093 0
 462 02dc A360     		str	r3, [r4, #8]
 463 02de 6360     		str	r3, [r4, #4]
 464 02e0 2360     		str	r3, [r4]
 465              	.LVL39:
2094:drivers/inv_mpu.c **** 
2095:drivers/inv_mpu.c ****     for (ii = 0; ii < packet_count; ii++) {
 466              		.loc 1 2095 0
 467 02e2 B8F1000F 		cmp	r8, #0
 468 02e6 4ED0     		beq	.L22
 469 02e8 1E46     		mov	r6, r3
 470              	.LBB2:
2096:drivers/inv_mpu.c ****         short accel_cur[3], gyro_cur[3];
2097:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->fifo_r_w, MAX_PACKET_LENGTH, data))
 471              		.loc 1 2097 0
 472 02ea 854F     		ldr	r7, .L60
 473 02ec 4FF00C09 		mov	r9, #12
 474              	.LVL40:
 475              	.L23:
 476 02f0 3968     		ldr	r1, [r7]
 477 02f2 7868     		ldr	r0, [r7, #4]
 478 02f4 01AB     		add	r3, sp, #4
 479 02f6 4A46     		mov	r2, r9
 480 02f8 C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 481 02fa 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 482 02fc FFF7FEFF 		bl	I2C_Read
 483              	.LVL41:
 484 0300 0028     		cmp	r0, #0
 485 0302 40F0FA80 		bne	.L45
 486              	.LVL42:
2098:drivers/inv_mpu.c ****             return -1;
2099:drivers/inv_mpu.c ****         accel_cur[0] = ((short)data[0] << 8) | data[1];
2100:drivers/inv_mpu.c ****         accel_cur[1] = ((short)data[2] << 8) | data[3];
 487              		.loc 1 2100 0
 488 0306 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 489 030a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 490 030e 42EA0322 		orr	r2, r2, r3, lsl #8
 491 0312 12B2     		sxth	r2, r2
 492              	.LVL43:
2101:drivers/inv_mpu.c ****         accel_cur[2] = ((short)data[4] << 8) | data[5];
 493              		.loc 1 2101 0
 494 0314 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 495 0318 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 496 031c 43EA0123 		orr	r3, r3, r1, lsl #8
 497 0320 1BB2     		sxth	r3, r3
 498              	.LVL44:
2099:drivers/inv_mpu.c ****         accel_cur[1] = ((short)data[2] << 8) | data[3];
 499              		.loc 1 2099 0
 500 0322 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 501 0326 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 502 032a 41EA0021 		orr	r1, r1, r0, lsl #8
2102:drivers/inv_mpu.c ****         accel[0] += (long)accel_cur[0];
 503              		.loc 1 2102 0
ARM GAS  /tmp/cc18izUm.s 			page 47


 504 032e 09B2     		sxth	r1, r1
 505 0330 2068     		ldr	r0, [r4]
 506 0332 0144     		add	r1, r1, r0
 507 0334 2160     		str	r1, [r4]
2103:drivers/inv_mpu.c ****         accel[1] += (long)accel_cur[1];
 508              		.loc 1 2103 0
 509 0336 6168     		ldr	r1, [r4, #4]
 510 0338 0A44     		add	r2, r2, r1
 511              	.LVL45:
 512 033a 6260     		str	r2, [r4, #4]
2104:drivers/inv_mpu.c ****         accel[2] += (long)accel_cur[2];
 513              		.loc 1 2104 0
 514 033c A268     		ldr	r2, [r4, #8]
 515 033e 1344     		add	r3, r3, r2
 516              	.LVL46:
 517 0340 A360     		str	r3, [r4, #8]
 518              	.LVL47:
2105:drivers/inv_mpu.c ****         gyro_cur[0] = (((short)data[6] << 8) | data[7]);
2106:drivers/inv_mpu.c ****         gyro_cur[1] = (((short)data[8] << 8) | data[9]);
 519              		.loc 1 2106 0
 520 0342 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 521 0346 9DF80D10 		ldrb	r1, [sp, #13]	@ zero_extendqisi2
 522 034a 41EA0321 		orr	r1, r1, r3, lsl #8
 523 034e 09B2     		sxth	r1, r1
 524              	.LVL48:
2107:drivers/inv_mpu.c ****         gyro_cur[2] = (((short)data[10] << 8) | data[11]);
 525              		.loc 1 2107 0
 526 0350 9DF80E20 		ldrb	r2, [sp, #14]	@ zero_extendqisi2
 527 0354 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 528 0358 43EA0223 		orr	r3, r3, r2, lsl #8
 529 035c 1BB2     		sxth	r3, r3
 530              	.LVL49:
2105:drivers/inv_mpu.c ****         gyro_cur[0] = (((short)data[6] << 8) | data[7]);
 531              		.loc 1 2105 0
 532 035e 9DF80A00 		ldrb	r0, [sp, #10]	@ zero_extendqisi2
 533 0362 9DF80B20 		ldrb	r2, [sp, #11]	@ zero_extendqisi2
 534 0366 42EA0022 		orr	r2, r2, r0, lsl #8
2108:drivers/inv_mpu.c ****         gyro[0] += (long)gyro_cur[0];
 535              		.loc 1 2108 0
 536 036a 12B2     		sxth	r2, r2
 537 036c 2868     		ldr	r0, [r5]
 538 036e 0244     		add	r2, r2, r0
 539 0370 2A60     		str	r2, [r5]
2109:drivers/inv_mpu.c ****         gyro[1] += (long)gyro_cur[1];
 540              		.loc 1 2109 0
 541 0372 6A68     		ldr	r2, [r5, #4]
 542 0374 1144     		add	r1, r1, r2
 543              	.LVL50:
 544 0376 6960     		str	r1, [r5, #4]
2110:drivers/inv_mpu.c ****         gyro[2] += (long)gyro_cur[2];
 545              		.loc 1 2110 0
 546 0378 AA68     		ldr	r2, [r5, #8]
 547 037a 1344     		add	r3, r3, r2
 548              	.LVL51:
 549 037c AB60     		str	r3, [r5, #8]
 550              	.LVL52:
 551 037e 0136     		adds	r6, r6, #1
ARM GAS  /tmp/cc18izUm.s 			page 48


 552              	.LVL53:
 553              	.LBE2:
2095:drivers/inv_mpu.c ****         short accel_cur[3], gyro_cur[3];
 554              		.loc 1 2095 0
 555 0380 F3B2     		uxtb	r3, r6
 556 0382 9845     		cmp	r8, r3
 557 0384 B4D8     		bhi	.L23
 558              	.LVL54:
 559              	.L22:
2111:drivers/inv_mpu.c ****     }
2112:drivers/inv_mpu.c **** #ifdef EMPL_NO_64BIT
2113:drivers/inv_mpu.c ****     gyro[0] = (long)(((float)gyro[0]*65536.f) / test.gyro_sens / packet_count);
2114:drivers/inv_mpu.c ****     gyro[1] = (long)(((float)gyro[1]*65536.f) / test.gyro_sens / packet_count);
2115:drivers/inv_mpu.c ****     gyro[2] = (long)(((float)gyro[2]*65536.f) / test.gyro_sens / packet_count);
2116:drivers/inv_mpu.c ****     if (has_accel) {
2117:drivers/inv_mpu.c ****         accel[0] = (long)(((float)accel[0]*65536.f) / test.accel_sens /
2118:drivers/inv_mpu.c ****             packet_count);
2119:drivers/inv_mpu.c ****         accel[1] = (long)(((float)accel[1]*65536.f) / test.accel_sens /
2120:drivers/inv_mpu.c ****             packet_count);
2121:drivers/inv_mpu.c ****         accel[2] = (long)(((float)accel[2]*65536.f) / test.accel_sens /
2122:drivers/inv_mpu.c ****             packet_count);
2123:drivers/inv_mpu.c ****         /* Don't remove gravity! */
2124:drivers/inv_mpu.c ****         accel[2] -= 65536L;
2125:drivers/inv_mpu.c ****     }
2126:drivers/inv_mpu.c **** #else
2127:drivers/inv_mpu.c ****     gyro[0] = (long)(((long long)gyro[0]<<16) / test.gyro_sens / packet_count);
 560              		.loc 1 2127 0
 561 0386 5FFA88F8 		uxtb	r8, r8
 562 038a 4FF00009 		mov	r9, #0
 563 038e 2968     		ldr	r1, [r5]
 564 0390 CB17     		asrs	r3, r1, #31
 565 0392 1E04     		lsls	r6, r3, #16
 566 0394 8322     		movs	r2, #131
 567 0396 0023     		movs	r3, #0
 568 0398 0804     		lsls	r0, r1, #16
 569 039a 46EA1141 		orr	r1, r6, r1, lsr #16
 570 039e FFF7FEFF 		bl	__aeabi_ldivmod
 571              	.LVL55:
 572 03a2 4246     		mov	r2, r8
 573 03a4 4B46     		mov	r3, r9
 574 03a6 FFF7FEFF 		bl	__aeabi_ldivmod
 575              	.LVL56:
 576 03aa 2860     		str	r0, [r5]
2128:drivers/inv_mpu.c ****     gyro[1] = (long)(((long long)gyro[1]<<16) / test.gyro_sens / packet_count);
 577              		.loc 1 2128 0
 578 03ac 6968     		ldr	r1, [r5, #4]
 579 03ae CB17     		asrs	r3, r1, #31
 580 03b0 1E04     		lsls	r6, r3, #16
 581 03b2 8322     		movs	r2, #131
 582 03b4 0023     		movs	r3, #0
 583 03b6 0804     		lsls	r0, r1, #16
 584 03b8 46EA1141 		orr	r1, r6, r1, lsr #16
 585 03bc FFF7FEFF 		bl	__aeabi_ldivmod
 586              	.LVL57:
 587 03c0 4246     		mov	r2, r8
 588 03c2 4B46     		mov	r3, r9
 589 03c4 FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  /tmp/cc18izUm.s 			page 49


 590              	.LVL58:
 591 03c8 6860     		str	r0, [r5, #4]
2129:drivers/inv_mpu.c ****     gyro[2] = (long)(((long long)gyro[2]<<16) / test.gyro_sens / packet_count);
 592              		.loc 1 2129 0
 593 03ca A968     		ldr	r1, [r5, #8]
 594 03cc CB17     		asrs	r3, r1, #31
 595 03ce 1E04     		lsls	r6, r3, #16
 596 03d0 8322     		movs	r2, #131
 597 03d2 0023     		movs	r3, #0
 598 03d4 0804     		lsls	r0, r1, #16
 599 03d6 46EA1141 		orr	r1, r6, r1, lsr #16
 600 03da FFF7FEFF 		bl	__aeabi_ldivmod
 601              	.LVL59:
 602 03de 4246     		mov	r2, r8
 603 03e0 4B46     		mov	r3, r9
 604 03e2 FFF7FEFF 		bl	__aeabi_ldivmod
 605              	.LVL60:
 606 03e6 A860     		str	r0, [r5, #8]
2130:drivers/inv_mpu.c ****     accel[0] = (long)(((long long)accel[0]<<16) / test.accel_sens /
 607              		.loc 1 2130 0
 608 03e8 2368     		ldr	r3, [r4]
 609 03ea D917     		asrs	r1, r3, #31
 610 03ec 0A04     		lsls	r2, r1, #16
 611 03ee 1E04     		lsls	r6, r3, #16
 612 03f0 42EA1347 		orr	r7, r2, r3, lsr #16
 613 03f4 002E     		cmp	r6, #0
 614 03f6 77F10003 		sbcs	r3, r7, #0
 615 03fa 39DB     		blt	.L55
 616              	.L24:
 617 03fc F00A     		lsrs	r0, r6, #11
 618 03fe 4246     		mov	r2, r8
 619 0400 4B46     		mov	r3, r9
 620 0402 40EA4750 		orr	r0, r0, r7, lsl #21
 621 0406 F912     		asrs	r1, r7, #11
 622 0408 FFF7FEFF 		bl	__aeabi_ldivmod
 623              	.LVL61:
 624 040c 2060     		str	r0, [r4]
2131:drivers/inv_mpu.c ****         packet_count);
2132:drivers/inv_mpu.c ****     accel[1] = (long)(((long long)accel[1]<<16) / test.accel_sens /
 625              		.loc 1 2132 0
 626 040e 6368     		ldr	r3, [r4, #4]
 627 0410 D917     		asrs	r1, r3, #31
 628 0412 0A04     		lsls	r2, r1, #16
 629 0414 1E04     		lsls	r6, r3, #16
 630 0416 42EA1347 		orr	r7, r2, r3, lsr #16
 631 041a 002E     		cmp	r6, #0
 632 041c 77F10003 		sbcs	r3, r7, #0
 633 0420 2CDB     		blt	.L56
 634              	.L25:
 635 0422 F00A     		lsrs	r0, r6, #11
 636 0424 4246     		mov	r2, r8
 637 0426 4B46     		mov	r3, r9
 638 0428 40EA4750 		orr	r0, r0, r7, lsl #21
 639 042c F912     		asrs	r1, r7, #11
 640 042e FFF7FEFF 		bl	__aeabi_ldivmod
 641              	.LVL62:
 642 0432 6060     		str	r0, [r4, #4]
ARM GAS  /tmp/cc18izUm.s 			page 50


2133:drivers/inv_mpu.c ****         packet_count);
2134:drivers/inv_mpu.c ****     accel[2] = (long)(((long long)accel[2]<<16) / test.accel_sens /
 643              		.loc 1 2134 0
 644 0434 A368     		ldr	r3, [r4, #8]
 645 0436 D917     		asrs	r1, r3, #31
 646 0438 0A04     		lsls	r2, r1, #16
 647 043a 1E04     		lsls	r6, r3, #16
 648 043c 42EA1347 		orr	r7, r2, r3, lsr #16
 649 0440 002E     		cmp	r6, #0
 650 0442 77F10003 		sbcs	r3, r7, #0
 651 0446 1FDB     		blt	.L57
 652              	.L26:
 653 0448 F00A     		lsrs	r0, r6, #11
 654 044a 4246     		mov	r2, r8
 655 044c 4B46     		mov	r3, r9
 656 044e 40EA4750 		orr	r0, r0, r7, lsl #21
 657 0452 F912     		asrs	r1, r7, #11
 658 0454 FFF7FEFF 		bl	__aeabi_ldivmod
 659              	.LVL63:
 660 0458 A060     		str	r0, [r4, #8]
2135:drivers/inv_mpu.c ****         packet_count);
2136:drivers/inv_mpu.c ****     /* Don't remove gravity! */
2137:drivers/inv_mpu.c ****     if (accel[2] > 0L)
 661              		.loc 1 2137 0
 662 045a 0028     		cmp	r0, #0
2138:drivers/inv_mpu.c ****         accel[2] -= 65536L;
 663              		.loc 1 2138 0
 664 045c CCBF     		ite	gt
 665 045e A0F58030 		subgt	r0, r0, #65536
2139:drivers/inv_mpu.c ****     else
2140:drivers/inv_mpu.c ****         accel[2] += 65536L;
 666              		.loc 1 2140 0
 667 0462 00F58030 		addle	r0, r0, #65536
 668 0466 A060     		str	r0, [r4, #8]
2141:drivers/inv_mpu.c **** #endif
2142:drivers/inv_mpu.c **** 
2143:drivers/inv_mpu.c ****     return 0;
 669              		.loc 1 2143 0
 670 0468 0020     		movs	r0, #0
 671              	.LVL64:
 672              	.L15:
2144:drivers/inv_mpu.c **** }
 673              		.loc 1 2144 0
 674 046a 05B0     		add	sp, sp, #20
 675              		.cfi_remember_state
 676              		.cfi_def_cfa_offset 28
 677              		@ sp needed
 678 046c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 679              	.LVL65:
 680              	.L55:
 681              		.cfi_restore_state
2130:drivers/inv_mpu.c ****         packet_count);
 682              		.loc 1 2130 0
 683 0470 40F2FF72 		movw	r2, #2047
 684 0474 0023     		movs	r3, #0
 685 0476 B618     		adds	r6, r6, r2
 686 0478 5F41     		adcs	r7, r7, r3
ARM GAS  /tmp/cc18izUm.s 			page 51


 687 047a BFE7     		b	.L24
 688              	.L56:
2132:drivers/inv_mpu.c ****         packet_count);
 689              		.loc 1 2132 0
 690 047c 40F2FF72 		movw	r2, #2047
 691 0480 0023     		movs	r3, #0
 692 0482 B618     		adds	r6, r6, r2
 693 0484 5F41     		adcs	r7, r7, r3
 694 0486 CCE7     		b	.L25
 695              	.L57:
2134:drivers/inv_mpu.c ****         packet_count);
 696              		.loc 1 2134 0
 697 0488 40F2FF72 		movw	r2, #2047
 698 048c 0023     		movs	r3, #0
 699 048e B618     		adds	r6, r6, r2
 700 0490 5F41     		adcs	r7, r7, r3
 701 0492 D9E7     		b	.L26
 702              	.LVL66:
 703              	.L28:
2035:drivers/inv_mpu.c ****     DelayMs(200);
 704              		.loc 1 2035 0
 705 0494 4FF0FF30 		mov	r0, #-1
 706 0498 E7E7     		b	.L15
 707              	.L29:
2039:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, data))
 708              		.loc 1 2039 0
 709 049a 4FF0FF30 		mov	r0, #-1
 710 049e E4E7     		b	.L15
 711              	.L30:
2041:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
 712              		.loc 1 2041 0
 713 04a0 4FF0FF30 		mov	r0, #-1
 714 04a4 E1E7     		b	.L15
 715              	.L31:
2043:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->i2c_mst, 1, data))
 716              		.loc 1 2043 0
 717 04a6 4FF0FF30 		mov	r0, #-1
 718 04aa DEE7     		b	.L15
 719              	.L32:
2045:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, data))
 720              		.loc 1 2045 0
 721 04ac 4FF0FF30 		mov	r0, #-1
 722 04b0 DBE7     		b	.L15
 723              	.L33:
2047:drivers/inv_mpu.c ****     data[0] = BIT_FIFO_RST | BIT_DMP_RST;
 724              		.loc 1 2047 0
 725 04b2 4FF0FF30 		mov	r0, #-1
 726 04b6 D8E7     		b	.L15
 727              	.L34:
2050:drivers/inv_mpu.c ****     DelayMs(15);
 728              		.loc 1 2050 0
 729 04b8 4FF0FF30 		mov	r0, #-1
 730 04bc D5E7     		b	.L15
 731              	.L35:
2054:drivers/inv_mpu.c ****     data[0] = st.test->reg_rate_div;
 732              		.loc 1 2054 0
 733 04be 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cc18izUm.s 			page 52


 734 04c2 D2E7     		b	.L15
 735              	.L36:
2057:drivers/inv_mpu.c ****     if (hw_test)
 736              		.loc 1 2057 0
 737 04c4 4FF0FF30 		mov	r0, #-1
 738 04c8 CFE7     		b	.L15
 739              	.L51:
2063:drivers/inv_mpu.c **** 
 740              		.loc 1 2063 0
 741 04ca 4FF0FF30 		mov	r0, #-1
 742 04ce CCE7     		b	.L15
 743              	.L53:
 744 04d0 4FF0FF30 		mov	r0, #-1
 745 04d4 C9E7     		b	.L15
 746              	.L52:
2070:drivers/inv_mpu.c ****     if (hw_test)
 747              		.loc 1 2070 0
 748 04d6 4FF0FF30 		mov	r0, #-1
 749 04da C6E7     		b	.L15
 750              	.L54:
 751 04dc 4FF0FF30 		mov	r0, #-1
 752 04e0 C3E7     		b	.L15
 753              	.L41:
2077:drivers/inv_mpu.c **** 
 754              		.loc 1 2077 0
 755 04e2 4FF0FF30 		mov	r0, #-1
 756 04e6 C0E7     		b	.L15
 757              	.L42:
2081:drivers/inv_mpu.c ****     DelayMs(test.wait_ms);
 758              		.loc 1 2081 0
 759 04e8 4FF0FF30 		mov	r0, #-1
 760 04ec BDE7     		b	.L15
 761              	.L43:
2085:drivers/inv_mpu.c **** 
 762              		.loc 1 2085 0
 763 04ee 4FF0FF30 		mov	r0, #-1
 764 04f2 BAE7     		b	.L15
 765              	.L44:
2088:drivers/inv_mpu.c **** 
 766              		.loc 1 2088 0
 767 04f4 4FF0FF30 		mov	r0, #-1
 768 04f8 B7E7     		b	.L15
 769              	.LVL67:
 770              	.L45:
 771              	.LBB3:
2098:drivers/inv_mpu.c ****         accel_cur[0] = ((short)data[0] << 8) | data[1];
 772              		.loc 1 2098 0
 773 04fa 4FF0FF30 		mov	r0, #-1
 774 04fe B4E7     		b	.L15
 775              	.L61:
 776              		.align	2
 777              	.L60:
 778 0500 00000000 		.word	.LANCHOR0
 779 0504 ABAAAAAA 		.word	-1431655765
 780              	.LBE3:
 781              		.cfi_endproc
 782              	.LFE99:
ARM GAS  /tmp/cc18izUm.s 			page 53


 783              		.size	get_st_biases, .-get_st_biases
 784              		.align	1
 785              		.global	mpu_reg_dump
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu softvfp
 790              		.type	mpu_reg_dump, %function
 791              	mpu_reg_dump:
 792              	.LFB65:
 712:drivers/inv_mpu.c ****     unsigned char ii;
 793              		.loc 1 712 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 8
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL68:
 716:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 798              		.loc 1 716 0
 799 0508 134B     		ldr	r3, .L74
 800 050a 5868     		ldr	r0, [r3, #4]
 801 050c 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 802 050e 0BB3     		cbz	r3, .L66
 712:drivers/inv_mpu.c ****     unsigned char ii;
 803              		.loc 1 712 0
 804 0510 70B5     		push	{r4, r5, r6, lr}
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 4, -16
 807              		.cfi_offset 5, -12
 808              		.cfi_offset 6, -8
 809              		.cfi_offset 14, -4
 810 0512 82B0     		sub	sp, sp, #8
 811              		.cfi_def_cfa_offset 24
 716:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 812              		.loc 1 716 0
 813 0514 0024     		movs	r4, #0
 717:drivers/inv_mpu.c ****             continue;
 814              		.loc 1 717 0
 815 0516 104D     		ldr	r5, .L74
 719:drivers/inv_mpu.c ****             return -1;
 816              		.loc 1 719 0
 817 0518 0126     		movs	r6, #1
 818 051a 05E0     		b	.L65
 819              	.LVL69:
 820              	.L64:
 716:drivers/inv_mpu.c ****         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
 821              		.loc 1 716 0 discriminator 2
 822 051c 0134     		adds	r4, r4, #1
 823              	.LVL70:
 824 051e E4B2     		uxtb	r4, r4
 825              	.LVL71:
 826 0520 6868     		ldr	r0, [r5, #4]
 827 0522 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 828 0524 A342     		cmp	r3, r4
 829 0526 12D9     		bls	.L73
 830              	.LVL72:
 831              	.L65:
 717:drivers/inv_mpu.c ****             continue;
ARM GAS  /tmp/cc18izUm.s 			page 54


 832              		.loc 1 717 0
 833 0528 2B68     		ldr	r3, [r5]
 834 052a DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 835 052c A242     		cmp	r2, r4
 836 052e F5D0     		beq	.L64
 717:drivers/inv_mpu.c ****             continue;
 837              		.loc 1 717 0 is_stmt 0 discriminator 1
 838 0530 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 839 0532 A342     		cmp	r3, r4
 840 0534 F2D0     		beq	.L64
 719:drivers/inv_mpu.c ****             return -1;
 841              		.loc 1 719 0 is_stmt 1
 842 0536 0DF10703 		add	r3, sp, #7
 843 053a 3246     		mov	r2, r6
 844 053c 2146     		mov	r1, r4
 845 053e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 846 0540 FFF7FEFF 		bl	I2C_Read
 847              	.LVL73:
 848 0544 0028     		cmp	r0, #0
 849 0546 E9D0     		beq	.L64
 720:drivers/inv_mpu.c ****         //log_i("%#5x: %#5x\r\n", ii, data);
 850              		.loc 1 720 0
 851 0548 4FF0FF30 		mov	r0, #-1
 852 054c 00E0     		b	.L62
 853              	.L73:
 723:drivers/inv_mpu.c **** }
 854              		.loc 1 723 0
 855 054e 0020     		movs	r0, #0
 856              	.L62:
 724:drivers/inv_mpu.c **** 
 857              		.loc 1 724 0
 858 0550 02B0     		add	sp, sp, #8
 859              		.cfi_def_cfa_offset 16
 860              		@ sp needed
 861 0552 70BD     		pop	{r4, r5, r6, pc}
 862              	.LVL74:
 863              	.L66:
 864              		.cfi_def_cfa_offset 0
 865              		.cfi_restore 4
 866              		.cfi_restore 5
 867              		.cfi_restore 6
 868              		.cfi_restore 14
 723:drivers/inv_mpu.c **** }
 869              		.loc 1 723 0
 870 0554 0020     		movs	r0, #0
 871 0556 7047     		bx	lr
 872              	.L75:
 873              		.align	2
 874              	.L74:
 875 0558 00000000 		.word	.LANCHOR0
 876              		.cfi_endproc
 877              	.LFE65:
 878              		.size	mpu_reg_dump, .-mpu_reg_dump
 879              		.align	1
 880              		.global	mpu_read_reg
 881              		.syntax unified
 882              		.thumb
ARM GAS  /tmp/cc18izUm.s 			page 55


 883              		.thumb_func
 884              		.fpu softvfp
 885              		.type	mpu_read_reg, %function
 886              	mpu_read_reg:
 887              	.LFB66:
 734:drivers/inv_mpu.c ****     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
 888              		.loc 1 734 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              	.LVL75:
 735:drivers/inv_mpu.c ****         return -1;
 893              		.loc 1 735 0
 894 055c 0E4B     		ldr	r3, .L85
 895 055e 1B68     		ldr	r3, [r3]
 896 0560 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 897 0562 8242     		cmp	r2, r0
 898 0564 0FD0     		beq	.L78
 735:drivers/inv_mpu.c ****         return -1;
 899              		.loc 1 735 0 is_stmt 0 discriminator 1
 900 0566 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 901 0568 8342     		cmp	r3, r0
 902 056a 0FD0     		beq	.L79
 734:drivers/inv_mpu.c ****     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
 903              		.loc 1 734 0 is_stmt 1
 904 056c 10B5     		push	{r4, lr}
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 4, -8
 907              		.cfi_offset 14, -4
 737:drivers/inv_mpu.c ****         return -1;
 908              		.loc 1 737 0
 909 056e 0A4B     		ldr	r3, .L85
 910 0570 5C68     		ldr	r4, [r3, #4]
 911 0572 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 912 0574 8342     		cmp	r3, r0
 913 0576 0CD9     		bls	.L80
 914 0578 0B46     		mov	r3, r1
 915 057a 0146     		mov	r1, r0
 916              	.LVL76:
 739:drivers/inv_mpu.c **** }
 917              		.loc 1 739 0
 918 057c 0122     		movs	r2, #1
 919 057e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 920              	.LVL77:
 921 0580 FFF7FEFF 		bl	I2C_Read
 922              	.LVL78:
 923 0584 10BD     		pop	{r4, pc}
 924              	.LVL79:
 925              	.L78:
 926              		.cfi_def_cfa_offset 0
 927              		.cfi_restore 4
 928              		.cfi_restore 14
 736:drivers/inv_mpu.c ****     if (reg >= st.hw->num_reg)
 929              		.loc 1 736 0
 930 0586 4FF0FF30 		mov	r0, #-1
 931              	.LVL80:
 932 058a 7047     		bx	lr
ARM GAS  /tmp/cc18izUm.s 			page 56


 933              	.LVL81:
 934              	.L79:
 935 058c 4FF0FF30 		mov	r0, #-1
 936              	.LVL82:
 937 0590 7047     		bx	lr
 938              	.LVL83:
 939              	.L80:
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 4, -8
 942              		.cfi_offset 14, -4
 738:drivers/inv_mpu.c ****     return I2C_Read(st.hw->addr, reg, 1, data);
 943              		.loc 1 738 0
 944 0592 4FF0FF30 		mov	r0, #-1
 945              	.LVL84:
 740:drivers/inv_mpu.c **** 
 946              		.loc 1 740 0
 947 0596 10BD     		pop	{r4, pc}
 948              	.L86:
 949              		.align	2
 950              	.L85:
 951 0598 00000000 		.word	.LANCHOR0
 952              		.cfi_endproc
 953              	.LFE66:
 954              		.size	mpu_read_reg, .-mpu_read_reg
 955              		.align	1
 956              		.global	mpu_get_gyro_reg
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu softvfp
 961              		.type	mpu_get_gyro_reg, %function
 962              	mpu_get_gyro_reg:
 963              	.LFB69:
 970:drivers/inv_mpu.c ****     unsigned char tmp[6];
 964              		.loc 1 970 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 8
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              	.LVL85:
 973:drivers/inv_mpu.c ****         return -1;
 969              		.loc 1 973 0
 970 059c 174B     		ldr	r3, .L95
 971 059e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 972 05a0 13F0700F 		tst	r3, #112
 973 05a4 23D0     		beq	.L89
 970:drivers/inv_mpu.c ****     unsigned char tmp[6];
 974              		.loc 1 970 0
 975 05a6 10B5     		push	{r4, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 4, -8
 978              		.cfi_offset 14, -4
 979 05a8 82B0     		sub	sp, sp, #8
 980              		.cfi_def_cfa_offset 16
 981 05aa 0446     		mov	r4, r0
 976:drivers/inv_mpu.c ****         return -1;
 982              		.loc 1 976 0
 983 05ac 134B     		ldr	r3, .L95
ARM GAS  /tmp/cc18izUm.s 			page 57


 984 05ae 1968     		ldr	r1, [r3]
 985              	.LVL86:
 986 05b0 5868     		ldr	r0, [r3, #4]
 987              	.LVL87:
 988 05b2 6B46     		mov	r3, sp
 989 05b4 0622     		movs	r2, #6
 990 05b6 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 991 05b8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 992 05ba FFF7FEFF 		bl	I2C_Read
 993              	.LVL88:
 994 05be C8B9     		cbnz	r0, .L90
 978:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
 995              		.loc 1 978 0
 996 05c0 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 997 05c4 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 998 05c8 43EA0223 		orr	r3, r3, r2, lsl #8
 999 05cc 2380     		strh	r3, [r4]	@ movhi
 979:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
 1000              		.loc 1 979 0
 1001 05ce 9DF80220 		ldrb	r2, [sp, #2]	@ zero_extendqisi2
 1002 05d2 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1003 05d6 43EA0223 		orr	r3, r3, r2, lsl #8
 1004 05da 6380     		strh	r3, [r4, #2]	@ movhi
 980:drivers/inv_mpu.c ****     if (timestamp)
 1005              		.loc 1 980 0
 1006 05dc 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1007 05e0 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1008 05e4 43EA0223 		orr	r3, r3, r2, lsl #8
 1009 05e8 A380     		strh	r3, [r4, #4]	@ movhi
 1010              	.L87:
 984:drivers/inv_mpu.c **** 
 1011              		.loc 1 984 0
 1012 05ea 02B0     		add	sp, sp, #8
 1013              		.cfi_def_cfa_offset 8
 1014              		@ sp needed
 1015 05ec 10BD     		pop	{r4, pc}
 1016              	.LVL89:
 1017              	.L89:
 1018              		.cfi_def_cfa_offset 0
 1019              		.cfi_restore 4
 1020              		.cfi_restore 14
 974:drivers/inv_mpu.c **** 
 1021              		.loc 1 974 0
 1022 05ee 4FF0FF30 		mov	r0, #-1
 1023              	.LVL90:
 1024 05f2 7047     		bx	lr
 1025              	.LVL91:
 1026              	.L90:
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 4, -8
 1029              		.cfi_offset 14, -4
 977:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
 1030              		.loc 1 977 0
 1031 05f4 4FF0FF30 		mov	r0, #-1
 1032 05f8 F7E7     		b	.L87
 1033              	.L96:
 1034 05fa 00BF     		.align	2
ARM GAS  /tmp/cc18izUm.s 			page 58


 1035              	.L95:
 1036 05fc 00000000 		.word	.LANCHOR0
 1037              		.cfi_endproc
 1038              	.LFE69:
 1039              		.size	mpu_get_gyro_reg, .-mpu_get_gyro_reg
 1040              		.align	1
 1041              		.global	mpu_get_accel_reg
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu softvfp
 1046              		.type	mpu_get_accel_reg, %function
 1047              	mpu_get_accel_reg:
 1048              	.LFB70:
 993:drivers/inv_mpu.c ****     unsigned char tmp[6];
 1049              		.loc 1 993 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 8
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL92:
 996:drivers/inv_mpu.c ****         return -1;
 1054              		.loc 1 996 0
 1055 0600 174B     		ldr	r3, .L105
 1056 0602 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1057 0604 13F0080F 		tst	r3, #8
 1058 0608 23D0     		beq	.L99
 993:drivers/inv_mpu.c ****     unsigned char tmp[6];
 1059              		.loc 1 993 0
 1060 060a 10B5     		push	{r4, lr}
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 4, -8
 1063              		.cfi_offset 14, -4
 1064 060c 82B0     		sub	sp, sp, #8
 1065              		.cfi_def_cfa_offset 16
 1066 060e 0446     		mov	r4, r0
 999:drivers/inv_mpu.c ****         return -1;
 1067              		.loc 1 999 0
 1068 0610 134B     		ldr	r3, .L105
 1069 0612 1968     		ldr	r1, [r3]
 1070              	.LVL93:
 1071 0614 5868     		ldr	r0, [r3, #4]
 1072              	.LVL94:
 1073 0616 6B46     		mov	r3, sp
 1074 0618 0622     		movs	r2, #6
 1075 061a 497B     		ldrb	r1, [r1, #13]	@ zero_extendqisi2
 1076 061c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1077 061e FFF7FEFF 		bl	I2C_Read
 1078              	.LVL95:
 1079 0622 C8B9     		cbnz	r0, .L100
1001:drivers/inv_mpu.c ****     data[1] = (tmp[2] << 8) | tmp[3];
 1080              		.loc 1 1001 0
 1081 0624 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 1082 0628 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1083 062c 43EA0223 		orr	r3, r3, r2, lsl #8
 1084 0630 2380     		strh	r3, [r4]	@ movhi
1002:drivers/inv_mpu.c ****     data[2] = (tmp[4] << 8) | tmp[5];
 1085              		.loc 1 1002 0
ARM GAS  /tmp/cc18izUm.s 			page 59


 1086 0632 9DF80220 		ldrb	r2, [sp, #2]	@ zero_extendqisi2
 1087 0636 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1088 063a 43EA0223 		orr	r3, r3, r2, lsl #8
 1089 063e 6380     		strh	r3, [r4, #2]	@ movhi
1003:drivers/inv_mpu.c ****     if (timestamp)
 1090              		.loc 1 1003 0
 1091 0640 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1092 0644 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1093 0648 43EA0223 		orr	r3, r3, r2, lsl #8
 1094 064c A380     		strh	r3, [r4, #4]	@ movhi
 1095              	.L97:
1007:drivers/inv_mpu.c **** 
 1096              		.loc 1 1007 0
 1097 064e 02B0     		add	sp, sp, #8
 1098              		.cfi_def_cfa_offset 8
 1099              		@ sp needed
 1100 0650 10BD     		pop	{r4, pc}
 1101              	.LVL96:
 1102              	.L99:
 1103              		.cfi_def_cfa_offset 0
 1104              		.cfi_restore 4
 1105              		.cfi_restore 14
 997:drivers/inv_mpu.c **** 
 1106              		.loc 1 997 0
 1107 0652 4FF0FF30 		mov	r0, #-1
 1108              	.LVL97:
 1109 0656 7047     		bx	lr
 1110              	.LVL98:
 1111              	.L100:
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 4, -8
 1114              		.cfi_offset 14, -4
1000:drivers/inv_mpu.c ****     data[0] = (tmp[0] << 8) | tmp[1];
 1115              		.loc 1 1000 0
 1116 0658 4FF0FF30 		mov	r0, #-1
 1117 065c F7E7     		b	.L97
 1118              	.L106:
 1119 065e 00BF     		.align	2
 1120              	.L105:
 1121 0660 00000000 		.word	.LANCHOR0
 1122              		.cfi_endproc
 1123              	.LFE70:
 1124              		.size	mpu_get_accel_reg, .-mpu_get_accel_reg
 1125              		.global	__aeabi_i2f
 1126              		.global	__aeabi_fsub
 1127              		.global	__aeabi_fdiv
 1128              		.global	__aeabi_fadd
 1129              		.global	__aeabi_fmul
 1130              		.global	__aeabi_f2iz
 1131              		.align	1
 1132              		.global	mpu_get_temperature
 1133              		.syntax unified
 1134              		.thumb
 1135              		.thumb_func
 1136              		.fpu softvfp
 1137              		.type	mpu_get_temperature, %function
 1138              	mpu_get_temperature:
ARM GAS  /tmp/cc18izUm.s 			page 60


 1139              	.LFB71:
1016:drivers/inv_mpu.c ****     unsigned char tmp[2];
 1140              		.loc 1 1016 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 8
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              	.LVL99:
1020:drivers/inv_mpu.c ****         return -1;
 1145              		.loc 1 1020 0
 1146 0664 1F4B     		ldr	r3, .L115
 1147 0666 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1148 0668 002B     		cmp	r3, #0
 1149 066a 35D0     		beq	.L109
1016:drivers/inv_mpu.c ****     unsigned char tmp[2];
 1150              		.loc 1 1016 0
 1151 066c 70B5     		push	{r4, r5, r6, lr}
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 4, -16
 1154              		.cfi_offset 5, -12
 1155              		.cfi_offset 6, -8
 1156              		.cfi_offset 14, -4
 1157 066e 82B0     		sub	sp, sp, #8
 1158              		.cfi_def_cfa_offset 24
 1159 0670 0546     		mov	r5, r0
1023:drivers/inv_mpu.c ****         return -1;
 1160              		.loc 1 1023 0
 1161 0672 1C4B     		ldr	r3, .L115
 1162 0674 1968     		ldr	r1, [r3]
 1163              	.LVL100:
 1164 0676 5868     		ldr	r0, [r3, #4]
 1165              	.LVL101:
 1166 0678 01AB     		add	r3, sp, #4
 1167 067a 0222     		movs	r2, #2
 1168 067c 897B     		ldrb	r1, [r1, #14]	@ zero_extendqisi2
 1169 067e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1170 0680 FFF7FEFF 		bl	I2C_Read
 1171              	.LVL102:
 1172 0684 58BB     		cbnz	r0, .L110
 1173              	.LVL103:
1029:drivers/inv_mpu.c ****     return 0;
 1174              		.loc 1 1029 0
 1175 0686 174B     		ldr	r3, .L115
 1176 0688 5C68     		ldr	r4, [r3, #4]
1025:drivers/inv_mpu.c ****     if (timestamp)
 1177              		.loc 1 1025 0
 1178 068a 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 1179 068e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1180 0692 43EA0020 		orr	r0, r3, r0, lsl #8
1029:drivers/inv_mpu.c ****     return 0;
 1181              		.loc 1 1029 0
 1182 0696 00B2     		sxth	r0, r0
 1183 0698 FFF7FEFF 		bl	__aeabi_i2f
 1184              	.LVL104:
 1185 069c 0646     		mov	r6, r0
 1186 069e B4F90800 		ldrsh	r0, [r4, #8]
 1187 06a2 FFF7FEFF 		bl	__aeabi_i2f
 1188              	.LVL105:
ARM GAS  /tmp/cc18izUm.s 			page 61


 1189 06a6 0146     		mov	r1, r0
 1190 06a8 3046     		mov	r0, r6
 1191 06aa FFF7FEFF 		bl	__aeabi_fsub
 1192              	.LVL106:
 1193 06ae 0646     		mov	r6, r0
 1194 06b0 E088     		ldrh	r0, [r4, #6]
 1195 06b2 FFF7FEFF 		bl	__aeabi_i2f
 1196              	.LVL107:
 1197 06b6 0146     		mov	r1, r0
 1198 06b8 3046     		mov	r0, r6
 1199 06ba FFF7FEFF 		bl	__aeabi_fdiv
 1200              	.LVL108:
 1201 06be 0A49     		ldr	r1, .L115+4
 1202 06c0 FFF7FEFF 		bl	__aeabi_fadd
 1203              	.LVL109:
 1204 06c4 4FF08F41 		mov	r1, #1199570944
 1205 06c8 FFF7FEFF 		bl	__aeabi_fmul
 1206              	.LVL110:
 1207 06cc FFF7FEFF 		bl	__aeabi_f2iz
 1208              	.LVL111:
 1209 06d0 2860     		str	r0, [r5]
1030:drivers/inv_mpu.c **** }
 1210              		.loc 1 1030 0
 1211 06d2 0020     		movs	r0, #0
 1212              	.L107:
1031:drivers/inv_mpu.c **** 
 1213              		.loc 1 1031 0
 1214 06d4 02B0     		add	sp, sp, #8
 1215              		.cfi_def_cfa_offset 16
 1216              		@ sp needed
 1217 06d6 70BD     		pop	{r4, r5, r6, pc}
 1218              	.LVL112:
 1219              	.L109:
 1220              		.cfi_def_cfa_offset 0
 1221              		.cfi_restore 4
 1222              		.cfi_restore 5
 1223              		.cfi_restore 6
 1224              		.cfi_restore 14
1021:drivers/inv_mpu.c **** 
 1225              		.loc 1 1021 0
 1226 06d8 4FF0FF30 		mov	r0, #-1
 1227              	.LVL113:
 1228 06dc 7047     		bx	lr
 1229              	.LVL114:
 1230              	.L110:
 1231              		.cfi_def_cfa_offset 24
 1232              		.cfi_offset 4, -16
 1233              		.cfi_offset 5, -12
 1234              		.cfi_offset 6, -8
 1235              		.cfi_offset 14, -4
1024:drivers/inv_mpu.c ****     raw = (tmp[0] << 8) | tmp[1];
 1236              		.loc 1 1024 0
 1237 06de 4FF0FF30 		mov	r0, #-1
 1238 06e2 F7E7     		b	.L107
 1239              	.L116:
 1240              		.align	2
 1241              	.L115:
ARM GAS  /tmp/cc18izUm.s 			page 62


 1242 06e4 00000000 		.word	.LANCHOR0
 1243 06e8 00000C42 		.word	1108082688
 1244              		.cfi_endproc
 1245              	.LFE71:
 1246              		.size	mpu_get_temperature, .-mpu_get_temperature
 1247              		.align	1
 1248              		.global	mpu_set_accel_bias
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu softvfp
 1253              		.type	mpu_set_accel_bias, %function
 1254              	mpu_set_accel_bias:
 1255              	.LFB72:
1041:drivers/inv_mpu.c ****     unsigned char data[6];
 1256              		.loc 1 1041 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              	.LVL115:
1047:drivers/inv_mpu.c ****         return -1;
 1261              		.loc 1 1047 0
 1262 06ec 0028     		cmp	r0, #0
 1263 06ee 76D0     		beq	.L120
1041:drivers/inv_mpu.c ****     unsigned char data[6];
 1264              		.loc 1 1041 0
 1265 06f0 70B5     		push	{r4, r5, r6, lr}
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 4, -16
 1268              		.cfi_offset 5, -12
 1269              		.cfi_offset 6, -8
 1270              		.cfi_offset 14, -4
 1271 06f2 82B0     		sub	sp, sp, #8
 1272              		.cfi_def_cfa_offset 24
 1273 06f4 0546     		mov	r5, r0
1049:drivers/inv_mpu.c ****         return 0;
 1274              		.loc 1 1049 0
 1275 06f6 0368     		ldr	r3, [r0]
 1276 06f8 23B9     		cbnz	r3, .L119
1049:drivers/inv_mpu.c ****         return 0;
 1277              		.loc 1 1049 0 is_stmt 0 discriminator 1
 1278 06fa 4368     		ldr	r3, [r0, #4]
 1279 06fc 13B9     		cbnz	r3, .L119
1049:drivers/inv_mpu.c ****         return 0;
 1280              		.loc 1 1049 0 discriminator 2
 1281 06fe 8368     		ldr	r3, [r0, #8]
 1282 0700 002B     		cmp	r3, #0
 1283 0702 6FD0     		beq	.L121
 1284              	.L119:
1052:drivers/inv_mpu.c ****         return -1;
 1285              		.loc 1 1052 0 is_stmt 1
 1286 0704 3B4B     		ldr	r3, .L128
 1287 0706 5868     		ldr	r0, [r3, #4]
 1288              	.LVL116:
 1289 0708 6B46     		mov	r3, sp
 1290 070a 0322     		movs	r2, #3
 1291 070c 1146     		mov	r1, r2
ARM GAS  /tmp/cc18izUm.s 			page 63


 1292 070e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1293 0710 FFF7FEFF 		bl	I2C_Read
 1294              	.LVL117:
 1295 0714 0028     		cmp	r0, #0
 1296 0716 67D1     		bne	.L122
 1297              	.LVL118:
1058:drivers/inv_mpu.c ****     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
 1298              		.loc 1 1058 0
 1299 0718 2C68     		ldr	r4, [r5]
 1300 071a 6400     		lsls	r4, r4, #1
1054:drivers/inv_mpu.c ****     fg[1] = ((data[1] >> 4) + 8) & 0xf;
 1301              		.loc 1 1054 0
 1302 071c 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 1303 0720 1B09     		lsrs	r3, r3, #4
 1304 0722 0833     		adds	r3, r3, #8
1058:drivers/inv_mpu.c ****     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
 1305              		.loc 1 1058 0
 1306 0724 03F00F03 		and	r3, r3, #15
 1307 0728 4033     		adds	r3, r3, #64
 1308 072a 94FBF3F4 		sdiv	r4, r4, r3
 1309              	.LVL119:
1059:drivers/inv_mpu.c ****     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
 1310              		.loc 1 1059 0
 1311 072e 6A68     		ldr	r2, [r5, #4]
 1312 0730 5200     		lsls	r2, r2, #1
1055:drivers/inv_mpu.c ****     fg[2] = ((data[2] >> 4) + 8) & 0xf;
 1313              		.loc 1 1055 0
 1314 0732 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1315 0736 1B09     		lsrs	r3, r3, #4
 1316 0738 0833     		adds	r3, r3, #8
1059:drivers/inv_mpu.c ****     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
 1317              		.loc 1 1059 0
 1318 073a 03F00F03 		and	r3, r3, #15
 1319 073e 4033     		adds	r3, r3, #64
 1320 0740 92FBF3F6 		sdiv	r6, r2, r3
 1321              	.LVL120:
1060:drivers/inv_mpu.c **** 
 1322              		.loc 1 1060 0
 1323 0744 AD68     		ldr	r5, [r5, #8]
 1324              	.LVL121:
 1325 0746 6D00     		lsls	r5, r5, #1
1056:drivers/inv_mpu.c **** 
 1326              		.loc 1 1056 0
 1327 0748 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 1328 074c 1B09     		lsrs	r3, r3, #4
 1329 074e 0833     		adds	r3, r3, #8
1060:drivers/inv_mpu.c **** 
 1330              		.loc 1 1060 0
 1331 0750 03F00F03 		and	r3, r3, #15
 1332 0754 4033     		adds	r3, r3, #64
 1333 0756 95FBF3F5 		sdiv	r5, r5, r3
 1334              	.LVL122:
1062:drivers/inv_mpu.c ****         return -1;
 1335              		.loc 1 1062 0
 1336 075a 264B     		ldr	r3, .L128
 1337 075c 5868     		ldr	r0, [r3, #4]
 1338 075e 6B46     		mov	r3, sp
ARM GAS  /tmp/cc18izUm.s 			page 64


 1339 0760 0622     		movs	r2, #6
 1340 0762 1146     		mov	r1, r2
 1341 0764 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1342 0766 FFF7FEFF 		bl	I2C_Read
 1343              	.LVL123:
 1344 076a 0028     		cmp	r0, #0
 1345 076c 3FD1     		bne	.L123
 1346              	.LVL124:
1065:drivers/inv_mpu.c ****     got_accel[1] = ((short)data[2] << 8) | data[3];
 1347              		.loc 1 1065 0
 1348 076e 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 1349 0772 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1350 0776 43EA0223 		orr	r3, r3, r2, lsl #8
1069:drivers/inv_mpu.c ****     accel_hw[1] += got_accel[1];
 1351              		.loc 1 1069 0
 1352 077a 1C44     		add	r4, r4, r3
 1353              	.LVL125:
 1354 077c A4B2     		uxth	r4, r4
 1355              	.LVL126:
1066:drivers/inv_mpu.c ****     got_accel[2] = ((short)data[4] << 8) | data[5];
 1356              		.loc 1 1066 0
 1357 077e 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 1358 0782 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 1359 0786 42EA0322 		orr	r2, r2, r3, lsl #8
1070:drivers/inv_mpu.c ****     accel_hw[2] += got_accel[2];
 1360              		.loc 1 1070 0
 1361 078a 3244     		add	r2, r2, r6
 1362 078c 92B2     		uxth	r2, r2
 1363              	.LVL127:
1067:drivers/inv_mpu.c **** 
 1364              		.loc 1 1067 0
 1365 078e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 1366 0792 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1367 0796 43EA0123 		orr	r3, r3, r1, lsl #8
1071:drivers/inv_mpu.c **** 
 1368              		.loc 1 1071 0
 1369 079a 2B44     		add	r3, r3, r5
 1370 079c 9BB2     		uxth	r3, r3
 1371              	.LVL128:
1073:drivers/inv_mpu.c ****     data[1] = (accel_hw[0]) & 0xff;
 1372              		.loc 1 1073 0
 1373 079e 44F30721 		sbfx	r1, r4, #8, #8
 1374 07a2 8DF80010 		strb	r1, [sp]
 1375              	.LVL129:
1074:drivers/inv_mpu.c ****     data[2] = (accel_hw[1] >> 8) & 0xff;
 1376              		.loc 1 1074 0
 1377 07a6 8DF80140 		strb	r4, [sp, #1]
1075:drivers/inv_mpu.c ****     data[3] = (accel_hw[1]) & 0xff;
 1378              		.loc 1 1075 0
 1379 07aa 42F30721 		sbfx	r1, r2, #8, #8
 1380 07ae 8DF80210 		strb	r1, [sp, #2]
 1381              	.LVL130:
1076:drivers/inv_mpu.c ****     data[4] = (accel_hw[2] >> 8) & 0xff;
 1382              		.loc 1 1076 0
 1383 07b2 8DF80320 		strb	r2, [sp, #3]
1077:drivers/inv_mpu.c ****     data[5] = (accel_hw[2]) & 0xff;
 1384              		.loc 1 1077 0
ARM GAS  /tmp/cc18izUm.s 			page 65


 1385 07b6 43F30722 		sbfx	r2, r3, #8, #8
 1386              	.LVL131:
 1387 07ba 8DF80420 		strb	r2, [sp, #4]
 1388              	.LVL132:
1078:drivers/inv_mpu.c **** 
 1389              		.loc 1 1078 0
 1390 07be 8DF80530 		strb	r3, [sp, #5]
1080:drivers/inv_mpu.c ****         return -1;
 1391              		.loc 1 1080 0
 1392 07c2 0C4B     		ldr	r3, .L128
 1393              	.LVL133:
 1394 07c4 5868     		ldr	r0, [r3, #4]
 1395 07c6 6B46     		mov	r3, sp
 1396 07c8 0622     		movs	r2, #6
 1397 07ca 1146     		mov	r1, r2
 1398 07cc 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1399 07ce FFF7FEFF 		bl	I2C_Write
 1400              	.LVL134:
 1401 07d2 0030     		adds	r0, r0, #0
 1402 07d4 18BF     		it	ne
 1403 07d6 0120     		movne	r0, #1
 1404 07d8 4042     		negs	r0, r0
 1405              	.LVL135:
 1406              	.L117:
1083:drivers/inv_mpu.c **** 
 1407              		.loc 1 1083 0
 1408 07da 02B0     		add	sp, sp, #8
 1409              		.cfi_def_cfa_offset 16
 1410              		@ sp needed
 1411 07dc 70BD     		pop	{r4, r5, r6, pc}
 1412              	.LVL136:
 1413              	.L120:
 1414              		.cfi_def_cfa_offset 0
 1415              		.cfi_restore 4
 1416              		.cfi_restore 5
 1417              		.cfi_restore 6
 1418              		.cfi_restore 14
1048:drivers/inv_mpu.c ****     if (!accel_bias[0] && !accel_bias[1] && !accel_bias[2])
 1419              		.loc 1 1048 0
 1420 07de 4FF0FF30 		mov	r0, #-1
 1421              	.LVL137:
 1422 07e2 7047     		bx	lr
 1423              	.LVL138:
 1424              	.L121:
 1425              		.cfi_def_cfa_offset 24
 1426              		.cfi_offset 4, -16
 1427              		.cfi_offset 5, -12
 1428              		.cfi_offset 6, -8
 1429              		.cfi_offset 14, -4
1050:drivers/inv_mpu.c **** 
 1430              		.loc 1 1050 0
 1431 07e4 0020     		movs	r0, #0
 1432              	.LVL139:
 1433 07e6 F8E7     		b	.L117
 1434              	.L122:
1053:drivers/inv_mpu.c ****     fg[0] = ((data[0] >> 4) + 8) & 0xf;
 1435              		.loc 1 1053 0
ARM GAS  /tmp/cc18izUm.s 			page 66


 1436 07e8 4FF0FF30 		mov	r0, #-1
 1437 07ec F5E7     		b	.L117
 1438              	.LVL140:
 1439              	.L123:
1063:drivers/inv_mpu.c **** 
 1440              		.loc 1 1063 0
 1441 07ee 4FF0FF30 		mov	r0, #-1
 1442 07f2 F2E7     		b	.L117
 1443              	.L129:
 1444              		.align	2
 1445              	.L128:
 1446 07f4 00000000 		.word	.LANCHOR0
 1447              		.cfi_endproc
 1448              	.LFE72:
 1449              		.size	mpu_set_accel_bias, .-mpu_set_accel_bias
 1450              		.align	1
 1451              		.global	mpu_reset_fifo
 1452              		.syntax unified
 1453              		.thumb
 1454              		.thumb_func
 1455              		.fpu softvfp
 1456              		.type	mpu_reset_fifo, %function
 1457              	mpu_reset_fifo:
 1458              	.LFB73:
1090:drivers/inv_mpu.c ****     unsigned char data;
 1459              		.loc 1 1090 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
1093:drivers/inv_mpu.c ****         return -1;
 1463              		.loc 1 1093 0
 1464 07f8 774B     		ldr	r3, .L155
 1465 07fa 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1466 07fc 002B     		cmp	r3, #0
 1467 07fe 00F0CC80 		beq	.L141
1090:drivers/inv_mpu.c ****     unsigned char data;
 1468              		.loc 1 1090 0
 1469 0802 00B5     		push	{lr}
 1470              		.cfi_def_cfa_offset 4
 1471              		.cfi_offset 14, -4
 1472 0804 83B0     		sub	sp, sp, #12
 1473              		.cfi_def_cfa_offset 16
1096:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &data))
 1474              		.loc 1 1096 0
 1475 0806 02AB     		add	r3, sp, #8
 1476 0808 0022     		movs	r2, #0
 1477 080a 03F8012D 		strb	r2, [r3, #-1]!
1097:drivers/inv_mpu.c ****         return -1;
 1478              		.loc 1 1097 0
 1479 080e 724A     		ldr	r2, .L155
 1480 0810 1168     		ldr	r1, [r2]
 1481 0812 5068     		ldr	r0, [r2, #4]
 1482 0814 0122     		movs	r2, #1
 1483 0816 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 1484 0818 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1485 081a FFF7FEFF 		bl	I2C_Write
 1486              	.LVL141:
ARM GAS  /tmp/cc18izUm.s 			page 67


 1487 081e 0028     		cmp	r0, #0
 1488 0820 40F0BE80 		bne	.L142
1099:drivers/inv_mpu.c ****         return -1;
 1489              		.loc 1 1099 0
 1490 0824 6C4B     		ldr	r3, .L155
 1491 0826 1968     		ldr	r1, [r3]
 1492 0828 5868     		ldr	r0, [r3, #4]
 1493 082a 0DF10703 		add	r3, sp, #7
 1494 082e 0122     		movs	r2, #1
 1495 0830 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1496 0832 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1497 0834 FFF7FEFF 		bl	I2C_Write
 1498              	.LVL142:
 1499 0838 0028     		cmp	r0, #0
 1500 083a 40F0B480 		bne	.L143
1101:drivers/inv_mpu.c ****         return -1;
 1501              		.loc 1 1101 0
 1502 083e 664B     		ldr	r3, .L155
 1503 0840 1968     		ldr	r1, [r3]
 1504 0842 5868     		ldr	r0, [r3, #4]
 1505 0844 0DF10703 		add	r3, sp, #7
 1506 0848 0122     		movs	r2, #1
 1507 084a 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1508 084c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1509 084e FFF7FEFF 		bl	I2C_Write
 1510              	.LVL143:
 1511 0852 0028     		cmp	r0, #0
 1512 0854 40F0AA80 		bne	.L144
1104:drivers/inv_mpu.c ****         data = BIT_FIFO_RST | BIT_DMP_RST;
 1513              		.loc 1 1104 0
 1514 0858 5F4B     		ldr	r3, .L155
 1515 085a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1516 085e 002B     		cmp	r3, #0
 1517 0860 4FD0     		beq	.L132
1105:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1518              		.loc 1 1105 0
 1519 0862 02AB     		add	r3, sp, #8
 1520 0864 0C22     		movs	r2, #12
 1521 0866 03F8012D 		strb	r2, [r3, #-1]!
1106:drivers/inv_mpu.c ****             return -1;
 1522              		.loc 1 1106 0
 1523 086a 5B4A     		ldr	r2, .L155
 1524 086c 1168     		ldr	r1, [r2]
 1525 086e 5068     		ldr	r0, [r2, #4]
 1526 0870 0122     		movs	r2, #1
 1527 0872 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1528 0874 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1529 0876 FFF7FEFF 		bl	I2C_Write
 1530              	.LVL144:
 1531 087a 0028     		cmp	r0, #0
 1532 087c 40F09980 		bne	.L145
1109:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
 1533              		.loc 1 1109 0
 1534 0880 C023     		movs	r3, #192
 1535 0882 8DF80730 		strb	r3, [sp, #7]
1110:drivers/inv_mpu.c ****             data |= BIT_AUX_IF_EN;
 1536              		.loc 1 1110 0
ARM GAS  /tmp/cc18izUm.s 			page 68


 1537 0886 544B     		ldr	r3, .L155
 1538 0888 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1539 088a 13F0010F 		tst	r3, #1
1111:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1540              		.loc 1 1111 0
 1541 088e 1CBF     		itt	ne
 1542 0890 E023     		movne	r3, #224
 1543 0892 8DF80730 		strbne	r3, [sp, #7]
1112:drivers/inv_mpu.c ****             return -1;
 1544              		.loc 1 1112 0
 1545 0896 504B     		ldr	r3, .L155
 1546 0898 1968     		ldr	r1, [r3]
 1547 089a 5868     		ldr	r0, [r3, #4]
 1548 089c 0DF10703 		add	r3, sp, #7
 1549 08a0 0122     		movs	r2, #1
 1550 08a2 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1551 08a4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1552 08a6 FFF7FEFF 		bl	I2C_Write
 1553              	.LVL145:
 1554 08aa 0028     		cmp	r0, #0
 1555 08ac 40F08480 		bne	.L146
1114:drivers/inv_mpu.c ****             data = BIT_DMP_INT_EN;
 1556              		.loc 1 1114 0
 1557 08b0 494B     		ldr	r3, .L155
 1558 08b2 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1559 08b4 0BB3     		cbz	r3, .L134
1115:drivers/inv_mpu.c ****         else
 1560              		.loc 1 1115 0
 1561 08b6 0223     		movs	r3, #2
 1562 08b8 8DF80730 		strb	r3, [sp, #7]
 1563              	.L135:
1118:drivers/inv_mpu.c ****             return -1;
 1564              		.loc 1 1118 0
 1565 08bc 464B     		ldr	r3, .L155
 1566 08be 1968     		ldr	r1, [r3]
 1567 08c0 5868     		ldr	r0, [r3, #4]
 1568 08c2 0DF10703 		add	r3, sp, #7
 1569 08c6 0122     		movs	r2, #1
 1570 08c8 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 1571 08ca 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1572 08cc FFF7FEFF 		bl	I2C_Write
 1573              	.LVL146:
 1574 08d0 0028     		cmp	r0, #0
 1575 08d2 74D1     		bne	.L147
1120:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, &data))
 1576              		.loc 1 1120 0
 1577 08d4 02AB     		add	r3, sp, #8
 1578 08d6 0022     		movs	r2, #0
 1579 08d8 03F8012D 		strb	r2, [r3, #-1]!
1121:drivers/inv_mpu.c ****             return -1;
 1580              		.loc 1 1121 0
 1581 08dc 3E4A     		ldr	r2, .L155
 1582 08de 1168     		ldr	r1, [r2]
 1583 08e0 5068     		ldr	r0, [r2, #4]
 1584 08e2 0122     		movs	r2, #1
 1585 08e4 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1586 08e6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 69


 1587 08e8 FFF7FEFF 		bl	I2C_Write
 1588              	.LVL147:
 1589 08ec 0030     		adds	r0, r0, #0
 1590 08ee 18BF     		it	ne
 1591 08f0 0120     		movne	r0, #1
 1592 08f2 4042     		negs	r0, r0
 1593              	.L130:
1144:drivers/inv_mpu.c **** 
 1594              		.loc 1 1144 0
 1595 08f4 03B0     		add	sp, sp, #12
 1596              		.cfi_remember_state
 1597              		.cfi_def_cfa_offset 4
 1598              		@ sp needed
 1599 08f6 5DF804FB 		ldr	pc, [sp], #4
 1600              	.L134:
 1601              		.cfi_restore_state
1117:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &data))
 1602              		.loc 1 1117 0
 1603 08fa 0023     		movs	r3, #0
 1604 08fc 8DF80730 		strb	r3, [sp, #7]
 1605 0900 DCE7     		b	.L135
 1606              	.L132:
1124:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1607              		.loc 1 1124 0
 1608 0902 02AB     		add	r3, sp, #8
 1609 0904 0422     		movs	r2, #4
 1610 0906 03F8012D 		strb	r2, [r3, #-1]!
1125:drivers/inv_mpu.c ****             return -1;
 1611              		.loc 1 1125 0
 1612 090a 334A     		ldr	r2, .L155
 1613 090c 1168     		ldr	r1, [r2]
 1614 090e 5068     		ldr	r0, [r2, #4]
 1615 0910 0122     		movs	r2, #1
 1616 0912 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1617 0914 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1618 0916 FFF7FEFF 		bl	I2C_Write
 1619              	.LVL148:
 1620 091a 0028     		cmp	r0, #0
 1621 091c 52D1     		bne	.L148
1127:drivers/inv_mpu.c ****             data = BIT_FIFO_EN;
 1622              		.loc 1 1127 0
 1623 091e 2E4B     		ldr	r3, .L155
 1624 0920 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1625 0922 23B9     		cbnz	r3, .L136
1127:drivers/inv_mpu.c ****             data = BIT_FIFO_EN;
 1626              		.loc 1 1127 0 is_stmt 0 discriminator 1
 1627 0924 2C4B     		ldr	r3, .L155
 1628 0926 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1629 0928 13F0010F 		tst	r3, #1
 1630 092c 2DD1     		bne	.L137
 1631              	.L136:
1128:drivers/inv_mpu.c ****         else
 1632              		.loc 1 1128 0 is_stmt 1
 1633 092e 4023     		movs	r3, #64
 1634 0930 8DF80730 		strb	r3, [sp, #7]
 1635              	.L138:
1131:drivers/inv_mpu.c ****             return -1;
ARM GAS  /tmp/cc18izUm.s 			page 70


 1636              		.loc 1 1131 0
 1637 0934 284B     		ldr	r3, .L155
 1638 0936 1968     		ldr	r1, [r3]
 1639 0938 5868     		ldr	r0, [r3, #4]
 1640 093a 0DF10703 		add	r3, sp, #7
 1641 093e 0122     		movs	r2, #1
 1642 0940 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 1643 0942 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1644 0944 FFF7FEFF 		bl	I2C_Write
 1645              	.LVL149:
 1646 0948 0028     		cmp	r0, #0
 1647 094a 3ED1     		bne	.L149
1134:drivers/inv_mpu.c ****             data = BIT_DATA_RDY_EN;
 1648              		.loc 1 1134 0
 1649 094c 224B     		ldr	r3, .L155
 1650 094e 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1651 0950 FBB1     		cbz	r3, .L139
1135:drivers/inv_mpu.c ****         else
 1652              		.loc 1 1135 0
 1653 0952 0123     		movs	r3, #1
 1654 0954 8DF80730 		strb	r3, [sp, #7]
 1655              	.L140:
1138:drivers/inv_mpu.c ****             return -1;
 1656              		.loc 1 1138 0
 1657 0958 1F4B     		ldr	r3, .L155
 1658 095a 1968     		ldr	r1, [r3]
 1659 095c 5868     		ldr	r0, [r3, #4]
 1660 095e 0DF10703 		add	r3, sp, #7
 1661 0962 0122     		movs	r2, #1
 1662 0964 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 1663 0966 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1664 0968 FFF7FEFF 		bl	I2C_Write
 1665              	.LVL150:
 1666 096c 80BB     		cbnz	r0, .L150
1140:drivers/inv_mpu.c ****             return -1;
 1667              		.loc 1 1140 0
 1668 096e 1A4B     		ldr	r3, .L155
 1669 0970 1968     		ldr	r1, [r3]
 1670 0972 5868     		ldr	r0, [r3, #4]
 1671 0974 1033     		adds	r3, r3, #16
 1672 0976 0122     		movs	r2, #1
 1673 0978 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1674 097a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1675 097c FFF7FEFF 		bl	I2C_Write
 1676              	.LVL151:
 1677 0980 0030     		adds	r0, r0, #0
 1678 0982 18BF     		it	ne
 1679 0984 0120     		movne	r0, #1
 1680 0986 4042     		negs	r0, r0
 1681 0988 B4E7     		b	.L130
 1682              	.L137:
1130:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1683              		.loc 1 1130 0
 1684 098a 6023     		movs	r3, #96
 1685 098c 8DF80730 		strb	r3, [sp, #7]
 1686 0990 D0E7     		b	.L138
 1687              	.L139:
ARM GAS  /tmp/cc18izUm.s 			page 71


1137:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, &data))
 1688              		.loc 1 1137 0
 1689 0992 0023     		movs	r3, #0
 1690 0994 8DF80730 		strb	r3, [sp, #7]
 1691 0998 DEE7     		b	.L140
 1692              	.L141:
 1693              		.cfi_def_cfa_offset 0
 1694              		.cfi_restore 14
1094:drivers/inv_mpu.c **** 
 1695              		.loc 1 1094 0
 1696 099a 4FF0FF30 		mov	r0, #-1
 1697 099e 7047     		bx	lr
 1698              	.L142:
 1699              		.cfi_def_cfa_offset 16
 1700              		.cfi_offset 14, -4
1098:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, &data))
 1701              		.loc 1 1098 0
 1702 09a0 4FF0FF30 		mov	r0, #-1
 1703 09a4 A6E7     		b	.L130
 1704              	.L143:
1100:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &data))
 1705              		.loc 1 1100 0
 1706 09a6 4FF0FF30 		mov	r0, #-1
 1707 09aa A3E7     		b	.L130
 1708              	.L144:
1102:drivers/inv_mpu.c **** 
 1709              		.loc 1 1102 0
 1710 09ac 4FF0FF30 		mov	r0, #-1
 1711 09b0 A0E7     		b	.L130
 1712              	.L145:
1107:drivers/inv_mpu.c ****        
 1713              		.loc 1 1107 0
 1714 09b2 4FF0FF30 		mov	r0, #-1
 1715 09b6 9DE7     		b	.L130
 1716              	.L146:
1113:drivers/inv_mpu.c ****         if (st.chip_cfg.int_enable)
 1717              		.loc 1 1113 0
 1718 09b8 4FF0FF30 		mov	r0, #-1
 1719 09bc 9AE7     		b	.L130
 1720              	.L147:
1119:drivers/inv_mpu.c ****         data = 0;
 1721              		.loc 1 1119 0
 1722 09be 4FF0FF30 		mov	r0, #-1
 1723 09c2 97E7     		b	.L130
 1724              	.L148:
1126:drivers/inv_mpu.c ****         if (st.chip_cfg.bypass_mode || !(st.chip_cfg.sensors & INV_XYZ_COMPASS))
 1725              		.loc 1 1126 0
 1726 09c4 4FF0FF30 		mov	r0, #-1
 1727 09c8 94E7     		b	.L130
 1728              	.L149:
1132:drivers/inv_mpu.c ****     
 1729              		.loc 1 1132 0
 1730 09ca 4FF0FF30 		mov	r0, #-1
 1731 09ce 91E7     		b	.L130
 1732              	.L150:
1139:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->fifo_en, 1, &st.chip_cfg.fifo_enable))
 1733              		.loc 1 1139 0
ARM GAS  /tmp/cc18izUm.s 			page 72


 1734 09d0 4FF0FF30 		mov	r0, #-1
 1735 09d4 8EE7     		b	.L130
 1736              	.L156:
 1737 09d6 00BF     		.align	2
 1738              	.L155:
 1739 09d8 00000000 		.word	.LANCHOR0
 1740              		.cfi_endproc
 1741              	.LFE73:
 1742              		.size	mpu_reset_fifo, .-mpu_reset_fifo
 1743              		.align	1
 1744              		.global	mpu_get_gyro_fsr
 1745              		.syntax unified
 1746              		.thumb
 1747              		.thumb_func
 1748              		.fpu softvfp
 1749              		.type	mpu_get_gyro_fsr, %function
 1750              	mpu_get_gyro_fsr:
 1751              	.LFB74:
1152:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
 1752              		.loc 1 1152 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 0
 1755              		@ frame_needed = 0, uses_anonymous_args = 0
 1756              		@ link register save eliminated.
 1757              	.LVL152:
1153:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
 1758              		.loc 1 1153 0
 1759 09dc 0D4B     		ldr	r3, .L165
 1760 09de 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1761 09e0 032B     		cmp	r3, #3
 1762 09e2 13D8     		bhi	.L158
 1763 09e4 DFE803F0 		tbb	[pc, r3]
 1764              	.L160:
 1765 09e8 02       		.byte	(.L159-.L160)/2
 1766 09e9 06       		.byte	(.L161-.L160)/2
 1767 09ea 0A       		.byte	(.L162-.L160)/2
 1768 09eb 0E       		.byte	(.L163-.L160)/2
 1769              		.p2align 1
 1770              	.L159:
1155:drivers/inv_mpu.c ****         break;
 1771              		.loc 1 1155 0
 1772 09ec FA23     		movs	r3, #250
 1773 09ee 0380     		strh	r3, [r0]	@ movhi
 1774              	.L164:
1171:drivers/inv_mpu.c **** 
 1775              		.loc 1 1171 0
 1776 09f0 0020     		movs	r0, #0
 1777              	.LVL153:
 1778 09f2 7047     		bx	lr
 1779              	.LVL154:
 1780              	.L161:
1158:drivers/inv_mpu.c ****         break;
 1781              		.loc 1 1158 0
 1782 09f4 4FF4FA73 		mov	r3, #500
 1783 09f8 0380     		strh	r3, [r0]	@ movhi
1159:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
 1784              		.loc 1 1159 0
ARM GAS  /tmp/cc18izUm.s 			page 73


 1785 09fa F9E7     		b	.L164
 1786              	.L162:
1161:drivers/inv_mpu.c ****         break;
 1787              		.loc 1 1161 0
 1788 09fc 4FF47A73 		mov	r3, #1000
 1789 0a00 0380     		strh	r3, [r0]	@ movhi
1162:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
 1790              		.loc 1 1162 0
 1791 0a02 F5E7     		b	.L164
 1792              	.L163:
1164:drivers/inv_mpu.c ****         break;
 1793              		.loc 1 1164 0
 1794 0a04 4FF4FA63 		mov	r3, #2000
 1795 0a08 0380     		strh	r3, [r0]	@ movhi
1165:drivers/inv_mpu.c ****     default:
 1796              		.loc 1 1165 0
 1797 0a0a F1E7     		b	.L164
 1798              	.L158:
1167:drivers/inv_mpu.c ****         break;
 1799              		.loc 1 1167 0
 1800 0a0c 0023     		movs	r3, #0
 1801 0a0e 0380     		strh	r3, [r0]	@ movhi
1168:drivers/inv_mpu.c ****     }
 1802              		.loc 1 1168 0
 1803 0a10 EEE7     		b	.L164
 1804              	.L166:
 1805 0a12 00BF     		.align	2
 1806              	.L165:
 1807 0a14 00000000 		.word	.LANCHOR0
 1808              		.cfi_endproc
 1809              	.LFE74:
 1810              		.size	mpu_get_gyro_fsr, .-mpu_get_gyro_fsr
 1811              		.align	1
 1812              		.global	mpu_set_gyro_fsr
 1813              		.syntax unified
 1814              		.thumb
 1815              		.thumb_func
 1816              		.fpu softvfp
 1817              		.type	mpu_set_gyro_fsr, %function
 1818              	mpu_set_gyro_fsr:
 1819              	.LFB75:
1179:drivers/inv_mpu.c ****     unsigned char data;
 1820              		.loc 1 1179 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 8
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              	.LVL155:
1182:drivers/inv_mpu.c ****         return -1;
 1825              		.loc 1 1182 0
 1826 0a18 224B     		ldr	r3, .L184
 1827 0a1a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1828 0a1c 002B     		cmp	r3, #0
 1829 0a1e 36D0     		beq	.L175
1179:drivers/inv_mpu.c ****     unsigned char data;
 1830              		.loc 1 1179 0
 1831 0a20 00B5     		push	{lr}
 1832              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc18izUm.s 			page 74


 1833              		.cfi_offset 14, -4
 1834 0a22 83B0     		sub	sp, sp, #12
 1835              		.cfi_def_cfa_offset 16
1185:drivers/inv_mpu.c ****     case 250:
 1836              		.loc 1 1185 0
 1837 0a24 B0F5FA7F 		cmp	r0, #500
 1838 0a28 29D0     		beq	.L169
 1839 0a2a 09D9     		bls	.L183
 1840 0a2c B0F57A7F 		cmp	r0, #1000
 1841 0a30 29D0     		beq	.L172
 1842 0a32 B0F5FA6F 		cmp	r0, #2000
 1843 0a36 2DD1     		bne	.L176
1196:drivers/inv_mpu.c ****         break;
 1844              		.loc 1 1196 0
 1845 0a38 1823     		movs	r3, #24
 1846 0a3a 8DF80730 		strb	r3, [sp, #7]
1197:drivers/inv_mpu.c ****     default:
 1847              		.loc 1 1197 0
 1848 0a3e 04E0     		b	.L174
 1849              	.L183:
1185:drivers/inv_mpu.c ****     case 250:
 1850              		.loc 1 1185 0
 1851 0a40 FA28     		cmp	r0, #250
 1852 0a42 27D1     		bne	.L176
1187:drivers/inv_mpu.c ****         break;
 1853              		.loc 1 1187 0
 1854 0a44 0023     		movs	r3, #0
 1855 0a46 8DF80730 		strb	r3, [sp, #7]
 1856              	.L174:
1202:drivers/inv_mpu.c ****         return 0;
 1857              		.loc 1 1202 0
 1858 0a4a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1859 0a4e 154B     		ldr	r3, .L184
 1860 0a50 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1861 0a52 B3EBD20F 		cmp	r3, r2, lsr #3
 1862 0a56 20D0     		beq	.L177
1204:drivers/inv_mpu.c ****         return -1;
 1863              		.loc 1 1204 0
 1864 0a58 124B     		ldr	r3, .L184
 1865 0a5a 1968     		ldr	r1, [r3]
 1866 0a5c 5868     		ldr	r0, [r3, #4]
 1867              	.LVL156:
 1868 0a5e 0DF10703 		add	r3, sp, #7
 1869 0a62 0122     		movs	r2, #1
 1870 0a64 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 1871 0a66 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1872 0a68 FFF7FEFF 		bl	I2C_Write
 1873              	.LVL157:
 1874 0a6c B8B9     		cbnz	r0, .L178
1206:drivers/inv_mpu.c ****     return 0;
 1875              		.loc 1 1206 0
 1876 0a6e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1877 0a72 DB08     		lsrs	r3, r3, #3
 1878 0a74 0B4A     		ldr	r2, .L184
 1879 0a76 1372     		strb	r3, [r2, #8]
 1880              	.L167:
1208:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cc18izUm.s 			page 75


 1881              		.loc 1 1208 0
 1882 0a78 03B0     		add	sp, sp, #12
 1883              		.cfi_remember_state
 1884              		.cfi_def_cfa_offset 4
 1885              		@ sp needed
 1886 0a7a 5DF804FB 		ldr	pc, [sp], #4
 1887              	.LVL158:
 1888              	.L169:
 1889              		.cfi_restore_state
1190:drivers/inv_mpu.c ****         break;
 1890              		.loc 1 1190 0
 1891 0a7e 0823     		movs	r3, #8
 1892 0a80 8DF80730 		strb	r3, [sp, #7]
1191:drivers/inv_mpu.c ****     case 1000:
 1893              		.loc 1 1191 0
 1894 0a84 E1E7     		b	.L174
 1895              	.L172:
1193:drivers/inv_mpu.c ****         break;
 1896              		.loc 1 1193 0
 1897 0a86 1023     		movs	r3, #16
 1898 0a88 8DF80730 		strb	r3, [sp, #7]
1194:drivers/inv_mpu.c ****     case 2000:
 1899              		.loc 1 1194 0
 1900 0a8c DDE7     		b	.L174
 1901              	.L175:
 1902              		.cfi_def_cfa_offset 0
 1903              		.cfi_restore 14
1183:drivers/inv_mpu.c **** 
 1904              		.loc 1 1183 0
 1905 0a8e 4FF0FF30 		mov	r0, #-1
 1906              	.LVL159:
 1907 0a92 7047     		bx	lr
 1908              	.LVL160:
 1909              	.L176:
 1910              		.cfi_def_cfa_offset 16
 1911              		.cfi_offset 14, -4
1199:drivers/inv_mpu.c ****     }
 1912              		.loc 1 1199 0
 1913 0a94 4FF0FF30 		mov	r0, #-1
 1914              	.LVL161:
 1915 0a98 EEE7     		b	.L167
 1916              	.LVL162:
 1917              	.L177:
1203:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->gyro_cfg, 1, &data))
 1918              		.loc 1 1203 0
 1919 0a9a 0020     		movs	r0, #0
 1920              	.LVL163:
 1921 0a9c ECE7     		b	.L167
 1922              	.L178:
1205:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = data >> 3;
 1923              		.loc 1 1205 0
 1924 0a9e 4FF0FF30 		mov	r0, #-1
 1925 0aa2 E9E7     		b	.L167
 1926              	.L185:
 1927              		.align	2
 1928              	.L184:
 1929 0aa4 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cc18izUm.s 			page 76


 1930              		.cfi_endproc
 1931              	.LFE75:
 1932              		.size	mpu_set_gyro_fsr, .-mpu_set_gyro_fsr
 1933              		.align	1
 1934              		.global	mpu_get_accel_fsr
 1935              		.syntax unified
 1936              		.thumb
 1937              		.thumb_func
 1938              		.fpu softvfp
 1939              		.type	mpu_get_accel_fsr, %function
 1940              	mpu_get_accel_fsr:
 1941              	.LFB76:
1216:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
 1942              		.loc 1 1216 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946              		@ link register save eliminated.
 1947              	.LVL164:
1217:drivers/inv_mpu.c ****     case INV_FSR_2G:
 1948              		.loc 1 1217 0
 1949 0aa8 0F4B     		ldr	r3, .L196
 1950 0aaa 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1951 0aac 032B     		cmp	r3, #3
 1952 0aae 16D8     		bhi	.L194
 1953 0ab0 DFE803F0 		tbb	[pc, r3]
 1954              	.L189:
 1955 0ab4 02       		.byte	(.L188-.L189)/2
 1956 0ab5 0C       		.byte	(.L190-.L189)/2
 1957 0ab6 0F       		.byte	(.L191-.L189)/2
 1958 0ab7 12       		.byte	(.L192-.L189)/2
 1959              		.p2align 1
 1960              	.L188:
1219:drivers/inv_mpu.c ****         break;
 1961              		.loc 1 1219 0
 1962 0ab8 0223     		movs	r3, #2
 1963 0aba 0370     		strb	r3, [r0]
 1964              	.L193:
1233:drivers/inv_mpu.c ****         fsr[0] <<= 1;
 1965              		.loc 1 1233 0
 1966 0abc 0A4B     		ldr	r3, .L196
 1967 0abe DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 1968 0ac0 83B1     		cbz	r3, .L195
1234:drivers/inv_mpu.c ****     return 0;
 1969              		.loc 1 1234 0
 1970 0ac2 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1971 0ac4 5B00     		lsls	r3, r3, #1
 1972 0ac6 0370     		strb	r3, [r0]
1235:drivers/inv_mpu.c **** }
 1973              		.loc 1 1235 0
 1974 0ac8 0020     		movs	r0, #0
 1975              	.LVL165:
 1976 0aca 7047     		bx	lr
 1977              	.LVL166:
 1978              	.L190:
1222:drivers/inv_mpu.c ****         break;
 1979              		.loc 1 1222 0
ARM GAS  /tmp/cc18izUm.s 			page 77


 1980 0acc 0423     		movs	r3, #4
 1981 0ace 0370     		strb	r3, [r0]
1223:drivers/inv_mpu.c ****     case INV_FSR_8G:
 1982              		.loc 1 1223 0
 1983 0ad0 F4E7     		b	.L193
 1984              	.L191:
1225:drivers/inv_mpu.c ****         break;
 1985              		.loc 1 1225 0
 1986 0ad2 0823     		movs	r3, #8
 1987 0ad4 0370     		strb	r3, [r0]
1226:drivers/inv_mpu.c ****     case INV_FSR_16G:
 1988              		.loc 1 1226 0
 1989 0ad6 F1E7     		b	.L193
 1990              	.L192:
1228:drivers/inv_mpu.c ****         break;
 1991              		.loc 1 1228 0
 1992 0ad8 1023     		movs	r3, #16
 1993 0ada 0370     		strb	r3, [r0]
1229:drivers/inv_mpu.c ****     default:
 1994              		.loc 1 1229 0
 1995 0adc EEE7     		b	.L193
 1996              	.L194:
1231:drivers/inv_mpu.c ****     }
 1997              		.loc 1 1231 0
 1998 0ade 4FF0FF30 		mov	r0, #-1
 1999              	.LVL167:
 2000 0ae2 7047     		bx	lr
 2001              	.LVL168:
 2002              	.L195:
1235:drivers/inv_mpu.c **** }
 2003              		.loc 1 1235 0
 2004 0ae4 0020     		movs	r0, #0
 2005              	.LVL169:
1236:drivers/inv_mpu.c **** 
 2006              		.loc 1 1236 0
 2007 0ae6 7047     		bx	lr
 2008              	.L197:
 2009              		.align	2
 2010              	.L196:
 2011 0ae8 00000000 		.word	.LANCHOR0
 2012              		.cfi_endproc
 2013              	.LFE76:
 2014              		.size	mpu_get_accel_fsr, .-mpu_get_accel_fsr
 2015              		.align	1
 2016              		.global	mpu_set_accel_fsr
 2017              		.syntax unified
 2018              		.thumb
 2019              		.thumb_func
 2020              		.fpu softvfp
 2021              		.type	mpu_set_accel_fsr, %function
 2022              	mpu_set_accel_fsr:
 2023              	.LFB77:
1244:drivers/inv_mpu.c ****     unsigned char data;
 2024              		.loc 1 1244 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 8
 2027              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc18izUm.s 			page 78


 2028              	.LVL170:
1247:drivers/inv_mpu.c ****         return -1;
 2029              		.loc 1 1247 0
 2030 0aec 234B     		ldr	r3, .L214
 2031 0aee 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2032 0af0 002B     		cmp	r3, #0
 2033 0af2 37D0     		beq	.L206
1244:drivers/inv_mpu.c ****     unsigned char data;
 2034              		.loc 1 1244 0
 2035 0af4 00B5     		push	{lr}
 2036              		.cfi_def_cfa_offset 4
 2037              		.cfi_offset 14, -4
 2038 0af6 83B0     		sub	sp, sp, #12
 2039              		.cfi_def_cfa_offset 16
1250:drivers/inv_mpu.c ****     case 2:
 2040              		.loc 1 1250 0
 2041 0af8 0238     		subs	r0, r0, #2
 2042              	.LVL171:
 2043 0afa 0E28     		cmp	r0, #14
 2044 0afc 35D8     		bhi	.L207
 2045 0afe DFE800F0 		tbb	[pc, r0]
 2046              	.L201:
 2047 0b02 08       		.byte	(.L200-.L201)/2
 2048 0b03 34       		.byte	(.L207-.L201)/2
 2049 0b04 25       		.byte	(.L202-.L201)/2
 2050 0b05 34       		.byte	(.L207-.L201)/2
 2051 0b06 34       		.byte	(.L207-.L201)/2
 2052 0b07 34       		.byte	(.L207-.L201)/2
 2053 0b08 29       		.byte	(.L203-.L201)/2
 2054 0b09 34       		.byte	(.L207-.L201)/2
 2055 0b0a 34       		.byte	(.L207-.L201)/2
 2056 0b0b 34       		.byte	(.L207-.L201)/2
 2057 0b0c 34       		.byte	(.L207-.L201)/2
 2058 0b0d 34       		.byte	(.L207-.L201)/2
 2059 0b0e 34       		.byte	(.L207-.L201)/2
 2060 0b0f 34       		.byte	(.L207-.L201)/2
 2061 0b10 2D       		.byte	(.L204-.L201)/2
 2062 0b11 00       		.p2align 1
 2063              	.L200:
1252:drivers/inv_mpu.c ****         break;
 2064              		.loc 1 1252 0
 2065 0b12 0023     		movs	r3, #0
 2066 0b14 8DF80730 		strb	r3, [sp, #7]
 2067              	.L205:
1267:drivers/inv_mpu.c ****         return 0;
 2068              		.loc 1 1267 0
 2069 0b18 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 2070 0b1c 174B     		ldr	r3, .L214
 2071 0b1e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2072 0b20 B3EBD20F 		cmp	r3, r2, lsr #3
 2073 0b24 24D0     		beq	.L208
1269:drivers/inv_mpu.c ****         return -1;
 2074              		.loc 1 1269 0
 2075 0b26 154B     		ldr	r3, .L214
 2076 0b28 1968     		ldr	r1, [r3]
 2077 0b2a 5868     		ldr	r0, [r3, #4]
 2078 0b2c 0DF10703 		add	r3, sp, #7
ARM GAS  /tmp/cc18izUm.s 			page 79


 2079 0b30 0122     		movs	r2, #1
 2080 0b32 C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 2081 0b34 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2082 0b36 FFF7FEFF 		bl	I2C_Write
 2083              	.LVL172:
 2084 0b3a D8B9     		cbnz	r0, .L209
1271:drivers/inv_mpu.c ****     return 0;
 2085              		.loc 1 1271 0
 2086 0b3c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2087 0b40 DB08     		lsrs	r3, r3, #3
 2088 0b42 0E4A     		ldr	r2, .L214
 2089 0b44 5372     		strb	r3, [r2, #9]
 2090              	.L198:
1273:drivers/inv_mpu.c **** 
 2091              		.loc 1 1273 0
 2092 0b46 03B0     		add	sp, sp, #12
 2093              		.cfi_remember_state
 2094              		.cfi_def_cfa_offset 4
 2095              		@ sp needed
 2096 0b48 5DF804FB 		ldr	pc, [sp], #4
 2097              	.L202:
 2098              		.cfi_restore_state
1255:drivers/inv_mpu.c ****         break;
 2099              		.loc 1 1255 0
 2100 0b4c 0823     		movs	r3, #8
 2101 0b4e 8DF80730 		strb	r3, [sp, #7]
1256:drivers/inv_mpu.c ****     case 8:
 2102              		.loc 1 1256 0
 2103 0b52 E1E7     		b	.L205
 2104              	.L203:
1258:drivers/inv_mpu.c ****         break;
 2105              		.loc 1 1258 0
 2106 0b54 1023     		movs	r3, #16
 2107 0b56 8DF80730 		strb	r3, [sp, #7]
1259:drivers/inv_mpu.c ****     case 16:
 2108              		.loc 1 1259 0
 2109 0b5a DDE7     		b	.L205
 2110              	.L204:
1261:drivers/inv_mpu.c ****         break;
 2111              		.loc 1 1261 0
 2112 0b5c 1823     		movs	r3, #24
 2113 0b5e 8DF80730 		strb	r3, [sp, #7]
1262:drivers/inv_mpu.c ****     default:
 2114              		.loc 1 1262 0
 2115 0b62 D9E7     		b	.L205
 2116              	.LVL173:
 2117              	.L206:
 2118              		.cfi_def_cfa_offset 0
 2119              		.cfi_restore 14
1248:drivers/inv_mpu.c **** 
 2120              		.loc 1 1248 0
 2121 0b64 4FF0FF30 		mov	r0, #-1
 2122              	.LVL174:
 2123 0b68 7047     		bx	lr
 2124              	.L207:
 2125              		.cfi_def_cfa_offset 16
 2126              		.cfi_offset 14, -4
ARM GAS  /tmp/cc18izUm.s 			page 80


1264:drivers/inv_mpu.c ****     }
 2127              		.loc 1 1264 0
 2128 0b6a 4FF0FF30 		mov	r0, #-1
 2129 0b6e EAE7     		b	.L198
 2130              	.L208:
1268:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->accel_cfg, 1, &data))
 2131              		.loc 1 1268 0
 2132 0b70 0020     		movs	r0, #0
 2133 0b72 E8E7     		b	.L198
 2134              	.L209:
1270:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = data >> 3;
 2135              		.loc 1 1270 0
 2136 0b74 4FF0FF30 		mov	r0, #-1
 2137 0b78 E5E7     		b	.L198
 2138              	.L215:
 2139 0b7a 00BF     		.align	2
 2140              	.L214:
 2141 0b7c 00000000 		.word	.LANCHOR0
 2142              		.cfi_endproc
 2143              	.LFE77:
 2144              		.size	mpu_set_accel_fsr, .-mpu_set_accel_fsr
 2145              		.align	1
 2146              		.global	mpu_get_lpf
 2147              		.syntax unified
 2148              		.thumb
 2149              		.thumb_func
 2150              		.fpu softvfp
 2151              		.type	mpu_get_lpf, %function
 2152              	mpu_get_lpf:
 2153              	.LFB78:
1281:drivers/inv_mpu.c ****     switch (st.chip_cfg.lpf) {
 2154              		.loc 1 1281 0
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 0
 2157              		@ frame_needed = 0, uses_anonymous_args = 0
 2158              		@ link register save eliminated.
 2159              	.LVL175:
1282:drivers/inv_mpu.c ****     case INV_FILTER_188HZ:
 2160              		.loc 1 1282 0
 2161 0b80 0F4B     		ldr	r3, .L226
 2162 0b82 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2163 0b84 013B     		subs	r3, r3, #1
 2164 0b86 052B     		cmp	r3, #5
 2165 0b88 17D8     		bhi	.L217
 2166 0b8a DFE803F0 		tbb	[pc, r3]
 2167              	.L219:
 2168 0b8e 03       		.byte	(.L218-.L219)/2
 2169 0b8f 07       		.byte	(.L220-.L219)/2
 2170 0b90 0A       		.byte	(.L221-.L219)/2
 2171 0b91 0D       		.byte	(.L222-.L219)/2
 2172 0b92 10       		.byte	(.L223-.L219)/2
 2173 0b93 13       		.byte	(.L224-.L219)/2
 2174              		.p2align 1
 2175              	.L218:
1284:drivers/inv_mpu.c ****         break;
 2176              		.loc 1 1284 0
 2177 0b94 BC23     		movs	r3, #188
ARM GAS  /tmp/cc18izUm.s 			page 81


 2178 0b96 0380     		strh	r3, [r0]	@ movhi
 2179              	.L225:
1308:drivers/inv_mpu.c **** 
 2180              		.loc 1 1308 0
 2181 0b98 0020     		movs	r0, #0
 2182              	.LVL176:
 2183 0b9a 7047     		bx	lr
 2184              	.LVL177:
 2185              	.L220:
1287:drivers/inv_mpu.c ****         break;
 2186              		.loc 1 1287 0
 2187 0b9c 6223     		movs	r3, #98
 2188 0b9e 0380     		strh	r3, [r0]	@ movhi
1288:drivers/inv_mpu.c ****     case INV_FILTER_42HZ:
 2189              		.loc 1 1288 0
 2190 0ba0 FAE7     		b	.L225
 2191              	.L221:
1290:drivers/inv_mpu.c ****         break;
 2192              		.loc 1 1290 0
 2193 0ba2 2A23     		movs	r3, #42
 2194 0ba4 0380     		strh	r3, [r0]	@ movhi
1291:drivers/inv_mpu.c ****     case INV_FILTER_20HZ:
 2195              		.loc 1 1291 0
 2196 0ba6 F7E7     		b	.L225
 2197              	.L222:
1293:drivers/inv_mpu.c ****         break;
 2198              		.loc 1 1293 0
 2199 0ba8 1423     		movs	r3, #20
 2200 0baa 0380     		strh	r3, [r0]	@ movhi
1294:drivers/inv_mpu.c ****     case INV_FILTER_10HZ:
 2201              		.loc 1 1294 0
 2202 0bac F4E7     		b	.L225
 2203              	.L223:
1296:drivers/inv_mpu.c ****         break;
 2204              		.loc 1 1296 0
 2205 0bae 0A23     		movs	r3, #10
 2206 0bb0 0380     		strh	r3, [r0]	@ movhi
1297:drivers/inv_mpu.c ****     case INV_FILTER_5HZ:
 2207              		.loc 1 1297 0
 2208 0bb2 F1E7     		b	.L225
 2209              	.L224:
1299:drivers/inv_mpu.c ****         break;
 2210              		.loc 1 1299 0
 2211 0bb4 0523     		movs	r3, #5
 2212 0bb6 0380     		strh	r3, [r0]	@ movhi
1300:drivers/inv_mpu.c ****     case INV_FILTER_256HZ_NOLPF2:
 2213              		.loc 1 1300 0
 2214 0bb8 EEE7     		b	.L225
 2215              	.L217:
1304:drivers/inv_mpu.c ****         break;
 2216              		.loc 1 1304 0
 2217 0bba 0023     		movs	r3, #0
 2218 0bbc 0380     		strh	r3, [r0]	@ movhi
1305:drivers/inv_mpu.c ****     }
 2219              		.loc 1 1305 0
 2220 0bbe EBE7     		b	.L225
 2221              	.L227:
ARM GAS  /tmp/cc18izUm.s 			page 82


 2222              		.align	2
 2223              	.L226:
 2224 0bc0 00000000 		.word	.LANCHOR0
 2225              		.cfi_endproc
 2226              	.LFE78:
 2227              		.size	mpu_get_lpf, .-mpu_get_lpf
 2228              		.align	1
 2229              		.global	mpu_set_lpf
 2230              		.syntax unified
 2231              		.thumb
 2232              		.thumb_func
 2233              		.fpu softvfp
 2234              		.type	mpu_set_lpf, %function
 2235              	mpu_set_lpf:
 2236              	.LFB79:
1317:drivers/inv_mpu.c ****     unsigned char data;
 2237              		.loc 1 1317 0
 2238              		.cfi_startproc
 2239              		@ args = 0, pretend = 0, frame = 8
 2240              		@ frame_needed = 0, uses_anonymous_args = 0
 2241              	.LVL178:
1320:drivers/inv_mpu.c ****         return -1;
 2242              		.loc 1 1320 0
 2243 0bc4 214B     		ldr	r3, .L243
 2244 0bc6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2245 0bc8 002B     		cmp	r3, #0
 2246 0bca 37D0     		beq	.L236
1317:drivers/inv_mpu.c ****     unsigned char data;
 2247              		.loc 1 1317 0
 2248 0bcc 00B5     		push	{lr}
 2249              		.cfi_def_cfa_offset 4
 2250              		.cfi_offset 14, -4
 2251 0bce 83B0     		sub	sp, sp, #12
 2252              		.cfi_def_cfa_offset 16
1323:drivers/inv_mpu.c ****         data = INV_FILTER_188HZ;
 2253              		.loc 1 1323 0
 2254 0bd0 BB28     		cmp	r0, #187
 2255 0bd2 1AD9     		bls	.L230
1324:drivers/inv_mpu.c ****     else if (lpf >= 98)
 2256              		.loc 1 1324 0
 2257 0bd4 0123     		movs	r3, #1
 2258 0bd6 8DF80730 		strb	r3, [sp, #7]
 2259              	.L231:
1336:drivers/inv_mpu.c ****         return 0;
 2260              		.loc 1 1336 0
 2261 0bda 1C4B     		ldr	r3, .L243
 2262 0bdc DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 2263 0bde 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2264 0be2 9A42     		cmp	r2, r3
 2265 0be4 2DD0     		beq	.L237
1338:drivers/inv_mpu.c ****         return -1;
 2266              		.loc 1 1338 0
 2267 0be6 194B     		ldr	r3, .L243
 2268 0be8 1968     		ldr	r1, [r3]
 2269 0bea 5868     		ldr	r0, [r3, #4]
 2270              	.LVL179:
 2271 0bec 0DF10703 		add	r3, sp, #7
ARM GAS  /tmp/cc18izUm.s 			page 83


 2272 0bf0 0122     		movs	r2, #1
 2273 0bf2 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 2274 0bf4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2275 0bf6 FFF7FEFF 		bl	I2C_Write
 2276              	.LVL180:
 2277 0bfa 20BB     		cbnz	r0, .L238
1340:drivers/inv_mpu.c ****     return 0;
 2278              		.loc 1 1340 0
 2279 0bfc 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 2280 0c00 124B     		ldr	r3, .L243
 2281 0c02 DA72     		strb	r2, [r3, #11]
 2282              	.L228:
1342:drivers/inv_mpu.c **** 
 2283              		.loc 1 1342 0
 2284 0c04 03B0     		add	sp, sp, #12
 2285              		.cfi_remember_state
 2286              		.cfi_def_cfa_offset 4
 2287              		@ sp needed
 2288 0c06 5DF804FB 		ldr	pc, [sp], #4
 2289              	.LVL181:
 2290              	.L230:
 2291              		.cfi_restore_state
1325:drivers/inv_mpu.c ****         data = INV_FILTER_98HZ;
 2292              		.loc 1 1325 0
 2293 0c0a 6128     		cmp	r0, #97
 2294 0c0c 03D9     		bls	.L232
1326:drivers/inv_mpu.c ****     else if (lpf >= 42)
 2295              		.loc 1 1326 0
 2296 0c0e 0223     		movs	r3, #2
 2297 0c10 8DF80730 		strb	r3, [sp, #7]
 2298 0c14 E1E7     		b	.L231
 2299              	.L232:
1327:drivers/inv_mpu.c ****         data = INV_FILTER_42HZ;
 2300              		.loc 1 1327 0
 2301 0c16 2928     		cmp	r0, #41
 2302 0c18 03D9     		bls	.L233
1328:drivers/inv_mpu.c ****     else if (lpf >= 20)
 2303              		.loc 1 1328 0
 2304 0c1a 0323     		movs	r3, #3
 2305 0c1c 8DF80730 		strb	r3, [sp, #7]
 2306 0c20 DBE7     		b	.L231
 2307              	.L233:
1329:drivers/inv_mpu.c ****         data = INV_FILTER_20HZ;
 2308              		.loc 1 1329 0
 2309 0c22 1328     		cmp	r0, #19
 2310 0c24 03D9     		bls	.L234
1330:drivers/inv_mpu.c ****     else if (lpf >= 10)
 2311              		.loc 1 1330 0
 2312 0c26 0423     		movs	r3, #4
 2313 0c28 8DF80730 		strb	r3, [sp, #7]
 2314 0c2c D5E7     		b	.L231
 2315              	.L234:
1331:drivers/inv_mpu.c ****         data = INV_FILTER_10HZ;
 2316              		.loc 1 1331 0
 2317 0c2e 0928     		cmp	r0, #9
1332:drivers/inv_mpu.c ****     else
 2318              		.loc 1 1332 0
ARM GAS  /tmp/cc18izUm.s 			page 84


 2319 0c30 8CBF     		ite	hi
 2320 0c32 0523     		movhi	r3, #5
1334:drivers/inv_mpu.c **** 
 2321              		.loc 1 1334 0
 2322 0c34 0623     		movls	r3, #6
 2323 0c36 8DF80730 		strb	r3, [sp, #7]
 2324 0c3a CEE7     		b	.L231
 2325              	.L236:
 2326              		.cfi_def_cfa_offset 0
 2327              		.cfi_restore 14
1321:drivers/inv_mpu.c **** 
 2328              		.loc 1 1321 0
 2329 0c3c 4FF0FF30 		mov	r0, #-1
 2330              	.LVL182:
 2331 0c40 7047     		bx	lr
 2332              	.LVL183:
 2333              	.L237:
 2334              		.cfi_def_cfa_offset 16
 2335              		.cfi_offset 14, -4
1337:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->lpf, 1, &data))
 2336              		.loc 1 1337 0
 2337 0c42 0020     		movs	r0, #0
 2338              	.LVL184:
 2339 0c44 DEE7     		b	.L228
 2340              	.L238:
1339:drivers/inv_mpu.c ****     st.chip_cfg.lpf = data;
 2341              		.loc 1 1339 0
 2342 0c46 4FF0FF30 		mov	r0, #-1
 2343 0c4a DBE7     		b	.L228
 2344              	.L244:
 2345              		.align	2
 2346              	.L243:
 2347 0c4c 00000000 		.word	.LANCHOR0
 2348              		.cfi_endproc
 2349              	.LFE79:
 2350              		.size	mpu_set_lpf, .-mpu_set_lpf
 2351              		.align	1
 2352              		.global	mpu_get_sample_rate
 2353              		.syntax unified
 2354              		.thumb
 2355              		.thumb_func
 2356              		.fpu softvfp
 2357              		.type	mpu_get_sample_rate, %function
 2358              	mpu_get_sample_rate:
 2359              	.LFB80:
1350:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on)
 2360              		.loc 1 1350 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 0, uses_anonymous_args = 0
 2364              		@ link register save eliminated.
 2365              	.LVL185:
1351:drivers/inv_mpu.c ****         return -1;
 2366              		.loc 1 1351 0
 2367 0c50 054B     		ldr	r3, .L248
 2368 0c52 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2369 0c56 23B9     		cbnz	r3, .L247
ARM GAS  /tmp/cc18izUm.s 			page 85


1354:drivers/inv_mpu.c ****     return 0;
 2370              		.loc 1 1354 0
 2371 0c58 034B     		ldr	r3, .L248
 2372 0c5a DB89     		ldrh	r3, [r3, #14]
 2373 0c5c 0380     		strh	r3, [r0]	@ movhi
1355:drivers/inv_mpu.c **** }
 2374              		.loc 1 1355 0
 2375 0c5e 0020     		movs	r0, #0
 2376              	.LVL186:
 2377 0c60 7047     		bx	lr
 2378              	.LVL187:
 2379              	.L247:
1352:drivers/inv_mpu.c ****     else
 2380              		.loc 1 1352 0
 2381 0c62 4FF0FF30 		mov	r0, #-1
 2382              	.LVL188:
1356:drivers/inv_mpu.c **** 
 2383              		.loc 1 1356 0
 2384 0c66 7047     		bx	lr
 2385              	.L249:
 2386              		.align	2
 2387              	.L248:
 2388 0c68 00000000 		.word	.LANCHOR0
 2389              		.cfi_endproc
 2390              	.LFE80:
 2391              		.size	mpu_get_sample_rate, .-mpu_get_sample_rate
 2392              		.align	1
 2393              		.global	mpu_get_compass_sample_rate
 2394              		.syntax unified
 2395              		.thumb
 2396              		.thumb_func
 2397              		.fpu softvfp
 2398              		.type	mpu_get_compass_sample_rate, %function
 2399              	mpu_get_compass_sample_rate:
 2400              	.LFB82:
1412:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 2401              		.loc 1 1412 0
 2402              		.cfi_startproc
 2403              		@ args = 0, pretend = 0, frame = 0
 2404              		@ frame_needed = 0, uses_anonymous_args = 0
 2405              		@ link register save eliminated.
 2406              	.LVL189:
1417:drivers/inv_mpu.c ****     return -1;
 2407              		.loc 1 1417 0
 2408 0c6c 0023     		movs	r3, #0
 2409 0c6e 0380     		strh	r3, [r0]	@ movhi
1420:drivers/inv_mpu.c **** 
 2410              		.loc 1 1420 0
 2411 0c70 4FF0FF30 		mov	r0, #-1
 2412              	.LVL190:
 2413 0c74 7047     		bx	lr
 2414              		.cfi_endproc
 2415              	.LFE82:
 2416              		.size	mpu_get_compass_sample_rate, .-mpu_get_compass_sample_rate
 2417              		.align	1
 2418              		.global	mpu_set_compass_sample_rate
 2419              		.syntax unified
ARM GAS  /tmp/cc18izUm.s 			page 86


 2420              		.thumb
 2421              		.thumb_func
 2422              		.fpu softvfp
 2423              		.type	mpu_set_compass_sample_rate, %function
 2424              	mpu_set_compass_sample_rate:
 2425              	.LFB83:
1434:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 2426              		.loc 1 1434 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              		@ link register save eliminated.
 2431              	.LVL191:
1448:drivers/inv_mpu.c **** 
 2432              		.loc 1 1448 0
 2433 0c76 4FF0FF30 		mov	r0, #-1
 2434              	.LVL192:
 2435 0c7a 7047     		bx	lr
 2436              		.cfi_endproc
 2437              	.LFE83:
 2438              		.size	mpu_set_compass_sample_rate, .-mpu_set_compass_sample_rate
 2439              		.align	1
 2440              		.global	mpu_get_gyro_sens
 2441              		.syntax unified
 2442              		.thumb
 2443              		.thumb_func
 2444              		.fpu softvfp
 2445              		.type	mpu_get_gyro_sens, %function
 2446              	mpu_get_gyro_sens:
 2447              	.LFB84:
1456:drivers/inv_mpu.c ****     switch (st.chip_cfg.gyro_fsr) {
 2448              		.loc 1 1456 0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 0
 2451              		@ frame_needed = 0, uses_anonymous_args = 0
 2452              		@ link register save eliminated.
 2453              	.LVL193:
1457:drivers/inv_mpu.c ****     case INV_FSR_250DPS:
 2454              		.loc 1 1457 0
 2455 0c7c 0D4B     		ldr	r3, .L260
 2456 0c7e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2457 0c80 032B     		cmp	r3, #3
 2458 0c82 13D8     		bhi	.L259
 2459 0c84 DFE803F0 		tbb	[pc, r3]
 2460              	.L255:
 2461 0c88 02       		.byte	(.L254-.L255)/2
 2462 0c89 06       		.byte	(.L256-.L255)/2
 2463 0c8a 0A       		.byte	(.L257-.L255)/2
 2464 0c8b 0E       		.byte	(.L258-.L255)/2
 2465              		.p2align 1
 2466              	.L254:
1459:drivers/inv_mpu.c ****         break;
 2467              		.loc 1 1459 0
 2468 0c8c 0A4B     		ldr	r3, .L260+4
 2469 0c8e 0360     		str	r3, [r0]	@ float
1473:drivers/inv_mpu.c **** }
 2470              		.loc 1 1473 0
ARM GAS  /tmp/cc18izUm.s 			page 87


 2471 0c90 0020     		movs	r0, #0
 2472              	.LVL194:
1460:drivers/inv_mpu.c ****     case INV_FSR_500DPS:
 2473              		.loc 1 1460 0
 2474 0c92 7047     		bx	lr
 2475              	.LVL195:
 2476              	.L256:
1462:drivers/inv_mpu.c ****         break;
 2477              		.loc 1 1462 0
 2478 0c94 094B     		ldr	r3, .L260+8
 2479 0c96 0360     		str	r3, [r0]	@ float
1473:drivers/inv_mpu.c **** }
 2480              		.loc 1 1473 0
 2481 0c98 0020     		movs	r0, #0
 2482              	.LVL196:
1463:drivers/inv_mpu.c ****     case INV_FSR_1000DPS:
 2483              		.loc 1 1463 0
 2484 0c9a 7047     		bx	lr
 2485              	.LVL197:
 2486              	.L257:
1465:drivers/inv_mpu.c ****         break;
 2487              		.loc 1 1465 0
 2488 0c9c 084B     		ldr	r3, .L260+12
 2489 0c9e 0360     		str	r3, [r0]	@ float
1473:drivers/inv_mpu.c **** }
 2490              		.loc 1 1473 0
 2491 0ca0 0020     		movs	r0, #0
 2492              	.LVL198:
1466:drivers/inv_mpu.c ****     case INV_FSR_2000DPS:
 2493              		.loc 1 1466 0
 2494 0ca2 7047     		bx	lr
 2495              	.LVL199:
 2496              	.L258:
1468:drivers/inv_mpu.c ****         break;
 2497              		.loc 1 1468 0
 2498 0ca4 074B     		ldr	r3, .L260+16
 2499 0ca6 0360     		str	r3, [r0]	@ float
1473:drivers/inv_mpu.c **** }
 2500              		.loc 1 1473 0
 2501 0ca8 0020     		movs	r0, #0
 2502              	.LVL200:
1469:drivers/inv_mpu.c ****     default:
 2503              		.loc 1 1469 0
 2504 0caa 7047     		bx	lr
 2505              	.LVL201:
 2506              	.L259:
1471:drivers/inv_mpu.c ****     }
 2507              		.loc 1 1471 0
 2508 0cac 4FF0FF30 		mov	r0, #-1
 2509              	.LVL202:
1474:drivers/inv_mpu.c **** 
 2510              		.loc 1 1474 0
 2511 0cb0 7047     		bx	lr
 2512              	.L261:
 2513 0cb2 00BF     		.align	2
 2514              	.L260:
 2515 0cb4 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cc18izUm.s 			page 88


 2516 0cb8 00000343 		.word	1124270080
 2517 0cbc 00008342 		.word	1115881472
 2518 0cc0 33330342 		.word	1107505971
 2519 0cc4 33338341 		.word	1099117363
 2520              		.cfi_endproc
 2521              	.LFE84:
 2522              		.size	mpu_get_gyro_sens, .-mpu_get_gyro_sens
 2523              		.align	1
 2524              		.global	mpu_get_accel_sens
 2525              		.syntax unified
 2526              		.thumb
 2527              		.thumb_func
 2528              		.fpu softvfp
 2529              		.type	mpu_get_accel_sens, %function
 2530              	mpu_get_accel_sens:
 2531              	.LFB85:
1482:drivers/inv_mpu.c ****     switch (st.chip_cfg.accel_fsr) {
 2532              		.loc 1 1482 0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 0
 2535              		@ frame_needed = 0, uses_anonymous_args = 0
 2536              		@ link register save eliminated.
 2537              	.LVL203:
1483:drivers/inv_mpu.c ****     case INV_FSR_2G:
 2538              		.loc 1 1483 0
 2539 0cc8 114B     		ldr	r3, .L272
 2540 0cca 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2541 0ccc 032B     		cmp	r3, #3
 2542 0cce 1AD8     		bhi	.L270
 2543 0cd0 DFE803F0 		tbb	[pc, r3]
 2544              	.L265:
 2545 0cd4 02       		.byte	(.L264-.L265)/2
 2546 0cd5 0D       		.byte	(.L266-.L265)/2
 2547 0cd6 11       		.byte	(.L267-.L265)/2
 2548 0cd7 15       		.byte	(.L268-.L265)/2
 2549              		.p2align 1
 2550              	.L264:
1485:drivers/inv_mpu.c ****         break;
 2551              		.loc 1 1485 0
 2552 0cd8 4FF48043 		mov	r3, #16384
 2553 0cdc 0380     		strh	r3, [r0]	@ movhi
 2554              	.L269:
1499:drivers/inv_mpu.c ****         sens[0] >>= 1;
 2555              		.loc 1 1499 0
 2556 0cde 0C4B     		ldr	r3, .L272
 2557 0ce0 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 2558 0ce2 9BB1     		cbz	r3, .L271
1500:drivers/inv_mpu.c ****     return 0;
 2559              		.loc 1 1500 0
 2560 0ce4 0388     		ldrh	r3, [r0]
 2561 0ce6 5B08     		lsrs	r3, r3, #1
 2562 0ce8 0380     		strh	r3, [r0]	@ movhi
1501:drivers/inv_mpu.c **** }
 2563              		.loc 1 1501 0
 2564 0cea 0020     		movs	r0, #0
 2565              	.LVL204:
 2566 0cec 7047     		bx	lr
ARM GAS  /tmp/cc18izUm.s 			page 89


 2567              	.LVL205:
 2568              	.L266:
1488:drivers/inv_mpu.c ****         break;
 2569              		.loc 1 1488 0
 2570 0cee 41F69C73 		movw	r3, #8092
 2571 0cf2 0380     		strh	r3, [r0]	@ movhi
1489:drivers/inv_mpu.c ****     case INV_FSR_8G:
 2572              		.loc 1 1489 0
 2573 0cf4 F3E7     		b	.L269
 2574              	.L267:
1491:drivers/inv_mpu.c ****         break;
 2575              		.loc 1 1491 0
 2576 0cf6 4FF48053 		mov	r3, #4096
 2577 0cfa 0380     		strh	r3, [r0]	@ movhi
1492:drivers/inv_mpu.c ****     case INV_FSR_16G:
 2578              		.loc 1 1492 0
 2579 0cfc EFE7     		b	.L269
 2580              	.L268:
1494:drivers/inv_mpu.c ****         break;
 2581              		.loc 1 1494 0
 2582 0cfe 4FF40063 		mov	r3, #2048
 2583 0d02 0380     		strh	r3, [r0]	@ movhi
1495:drivers/inv_mpu.c ****     default:
 2584              		.loc 1 1495 0
 2585 0d04 EBE7     		b	.L269
 2586              	.L270:
1497:drivers/inv_mpu.c ****     }
 2587              		.loc 1 1497 0
 2588 0d06 4FF0FF30 		mov	r0, #-1
 2589              	.LVL206:
 2590 0d0a 7047     		bx	lr
 2591              	.LVL207:
 2592              	.L271:
1501:drivers/inv_mpu.c **** }
 2593              		.loc 1 1501 0
 2594 0d0c 0020     		movs	r0, #0
 2595              	.LVL208:
1502:drivers/inv_mpu.c **** 
 2596              		.loc 1 1502 0
 2597 0d0e 7047     		bx	lr
 2598              	.L273:
 2599              		.align	2
 2600              	.L272:
 2601 0d10 00000000 		.word	.LANCHOR0
 2602              		.cfi_endproc
 2603              	.LFE85:
 2604              		.size	mpu_get_accel_sens, .-mpu_get_accel_sens
 2605              		.align	1
 2606              		.global	mpu_get_fifo_config
 2607              		.syntax unified
 2608              		.thumb
 2609              		.thumb_func
 2610              		.fpu softvfp
 2611              		.type	mpu_get_fifo_config, %function
 2612              	mpu_get_fifo_config:
 2613              	.LFB86:
1514:drivers/inv_mpu.c ****     sensors[0] = st.chip_cfg.fifo_enable;
ARM GAS  /tmp/cc18izUm.s 			page 90


 2614              		.loc 1 1514 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              		@ link register save eliminated.
 2619              	.LVL209:
1515:drivers/inv_mpu.c ****     return 0;
 2620              		.loc 1 1515 0
 2621 0d14 024B     		ldr	r3, .L275
 2622 0d16 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2623 0d18 0370     		strb	r3, [r0]
1517:drivers/inv_mpu.c **** 
 2624              		.loc 1 1517 0
 2625 0d1a 0020     		movs	r0, #0
 2626              	.LVL210:
 2627 0d1c 7047     		bx	lr
 2628              	.L276:
 2629 0d1e 00BF     		.align	2
 2630              	.L275:
 2631 0d20 00000000 		.word	.LANCHOR0
 2632              		.cfi_endproc
 2633              	.LFE86:
 2634              		.size	mpu_get_fifo_config, .-mpu_get_fifo_config
 2635              		.align	1
 2636              		.global	mpu_configure_fifo
 2637              		.syntax unified
 2638              		.thumb
 2639              		.thumb_func
 2640              		.fpu softvfp
 2641              		.type	mpu_configure_fifo, %function
 2642              	mpu_configure_fifo:
 2643              	.LFB87:
1529:drivers/inv_mpu.c ****     unsigned char prev;
 2644              		.loc 1 1529 0
 2645              		.cfi_startproc
 2646              		@ args = 0, pretend = 0, frame = 0
 2647              		@ frame_needed = 0, uses_anonymous_args = 0
 2648              	.LVL211:
 2649 0d24 38B5     		push	{r3, r4, r5, lr}
 2650              		.cfi_def_cfa_offset 16
 2651              		.cfi_offset 3, -16
 2652              		.cfi_offset 4, -12
 2653              		.cfi_offset 5, -8
 2654              		.cfi_offset 14, -4
 2655              	.LVL212:
1536:drivers/inv_mpu.c ****         return 0;
 2656              		.loc 1 1536 0
 2657 0d26 164B     		ldr	r3, .L286
 2658 0d28 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2659 0d2c ABB9     		cbnz	r3, .L282
1539:drivers/inv_mpu.c ****             return -1;
 2660              		.loc 1 1539 0
 2661 0d2e 144B     		ldr	r3, .L286
 2662 0d30 9C7A     		ldrb	r4, [r3, #10]	@ zero_extendqisi2
 2663 0d32 ACB1     		cbz	r4, .L283
1534:drivers/inv_mpu.c **** 
 2664              		.loc 1 1534 0
ARM GAS  /tmp/cc18izUm.s 			page 91


 2665 0d34 00F0FE00 		and	r0, r0, #254
 2666              	.LVL213:
1541:drivers/inv_mpu.c ****         st.chip_cfg.fifo_enable = sensors & st.chip_cfg.sensors;
 2667              		.loc 1 1541 0
 2668 0d38 1D7C     		ldrb	r5, [r3, #16]	@ zero_extendqisi2
 2669              	.LVL214:
1542:drivers/inv_mpu.c ****         if (st.chip_cfg.fifo_enable != sensors)
 2670              		.loc 1 1542 0
 2671 0d3a 0440     		ands	r4, r4, r0
 2672 0d3c 1C74     		strb	r4, [r3, #16]
1543:drivers/inv_mpu.c ****             /* You're not getting what you asked for. Some sensors are
 2673              		.loc 1 1543 0
 2674 0d3e 041B     		subs	r4, r0, r4
 2675 0d40 18BF     		it	ne
 2676 0d42 4FF0FF34 		movne	r4, #-1
 2677              	.LVL215:
1550:drivers/inv_mpu.c ****             set_int_enable(1);
 2678              		.loc 1 1550 0
 2679 0d46 70B9     		cbnz	r0, .L279
1550:drivers/inv_mpu.c ****             set_int_enable(1);
 2680              		.loc 1 1550 0 is_stmt 0 discriminator 1
 2681 0d48 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2682 0d4a 1BB1     		cbz	r3, .L285
1551:drivers/inv_mpu.c ****         else
 2683              		.loc 1 1551 0 is_stmt 1
 2684 0d4c 0120     		movs	r0, #1
 2685 0d4e FFF757F9 		bl	set_int_enable
 2686              	.LVL216:
 2687 0d52 03E0     		b	.L277
 2688              	.L285:
1553:drivers/inv_mpu.c ****         if (sensors) {
 2689              		.loc 1 1553 0
 2690 0d54 FFF754F9 		bl	set_int_enable
 2691              	.LVL217:
 2692 0d58 00E0     		b	.L277
 2693              	.LVL218:
 2694              	.L282:
1537:drivers/inv_mpu.c ****     else {
 2695              		.loc 1 1537 0
 2696 0d5a 0024     		movs	r4, #0
 2697              	.LVL219:
 2698              	.L277:
1563:drivers/inv_mpu.c **** 
 2699              		.loc 1 1563 0
 2700 0d5c 2046     		mov	r0, r4
 2701 0d5e 38BD     		pop	{r3, r4, r5, pc}
 2702              	.LVL220:
 2703              	.L283:
1540:drivers/inv_mpu.c ****         prev = st.chip_cfg.fifo_enable;
 2704              		.loc 1 1540 0
 2705 0d60 4FF0FF34 		mov	r4, #-1
 2706 0d64 FAE7     		b	.L277
 2707              	.LVL221:
 2708              	.L279:
1551:drivers/inv_mpu.c ****         else
 2709              		.loc 1 1551 0
 2710 0d66 0120     		movs	r0, #1
ARM GAS  /tmp/cc18izUm.s 			page 92


 2711 0d68 FFF74AF9 		bl	set_int_enable
 2712              	.LVL222:
1555:drivers/inv_mpu.c ****                 st.chip_cfg.fifo_enable = prev;
 2713              		.loc 1 1555 0
 2714 0d6c FFF7FEFF 		bl	mpu_reset_fifo
 2715              	.LVL223:
 2716 0d70 0028     		cmp	r0, #0
 2717 0d72 F3D0     		beq	.L277
1556:drivers/inv_mpu.c ****                 return -1;
 2718              		.loc 1 1556 0
 2719 0d74 024B     		ldr	r3, .L286
 2720 0d76 1D74     		strb	r5, [r3, #16]
1557:drivers/inv_mpu.c ****             }
 2721              		.loc 1 1557 0
 2722 0d78 4FF0FF34 		mov	r4, #-1
 2723              	.LVL224:
 2724 0d7c EEE7     		b	.L277
 2725              	.L287:
 2726 0d7e 00BF     		.align	2
 2727              	.L286:
 2728 0d80 00000000 		.word	.LANCHOR0
 2729              		.cfi_endproc
 2730              	.LFE87:
 2731              		.size	mpu_configure_fifo, .-mpu_configure_fifo
 2732              		.align	1
 2733              		.global	mpu_get_power_state
 2734              		.syntax unified
 2735              		.thumb
 2736              		.thumb_func
 2737              		.fpu softvfp
 2738              		.type	mpu_get_power_state, %function
 2739              	mpu_get_power_state:
 2740              	.LFB88:
1571:drivers/inv_mpu.c ****     if (st.chip_cfg.sensors)
 2741              		.loc 1 1571 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 0
 2744              		@ frame_needed = 0, uses_anonymous_args = 0
 2745              		@ link register save eliminated.
 2746              	.LVL225:
1572:drivers/inv_mpu.c ****         power_on[0] = 1;
 2747              		.loc 1 1572 0
 2748 0d84 044B     		ldr	r3, .L292
 2749 0d86 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2750 0d88 1BB9     		cbnz	r3, .L291
1575:drivers/inv_mpu.c ****     return 0;
 2751              		.loc 1 1575 0
 2752 0d8a 0023     		movs	r3, #0
 2753 0d8c 0370     		strb	r3, [r0]
 2754              	.L290:
1577:drivers/inv_mpu.c **** 
 2755              		.loc 1 1577 0
 2756 0d8e 0020     		movs	r0, #0
 2757              	.LVL226:
 2758 0d90 7047     		bx	lr
 2759              	.LVL227:
 2760              	.L291:
ARM GAS  /tmp/cc18izUm.s 			page 93


1573:drivers/inv_mpu.c ****     else
 2761              		.loc 1 1573 0
 2762 0d92 0123     		movs	r3, #1
 2763 0d94 0370     		strb	r3, [r0]
 2764 0d96 FAE7     		b	.L290
 2765              	.L293:
 2766              		.align	2
 2767              	.L292:
 2768 0d98 00000000 		.word	.LANCHOR0
 2769              		.cfi_endproc
 2770              	.LFE88:
 2771              		.size	mpu_get_power_state, .-mpu_get_power_state
 2772              		.align	1
 2773              		.global	mpu_get_int_status
 2774              		.syntax unified
 2775              		.thumb
 2776              		.thumb_func
 2777              		.fpu softvfp
 2778              		.type	mpu_get_int_status, %function
 2779              	mpu_get_int_status:
 2780              	.LFB90:
1667:drivers/inv_mpu.c ****     unsigned char tmp[2];
 2781              		.loc 1 1667 0
 2782              		.cfi_startproc
 2783              		@ args = 0, pretend = 0, frame = 8
 2784              		@ frame_needed = 0, uses_anonymous_args = 0
 2785              	.LVL228:
1669:drivers/inv_mpu.c ****         return -1;
 2786              		.loc 1 1669 0
 2787 0d9c 0F4B     		ldr	r3, .L302
 2788 0d9e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2789 0da0 ABB1     		cbz	r3, .L296
1667:drivers/inv_mpu.c ****     unsigned char tmp[2];
 2790              		.loc 1 1667 0
 2791 0da2 10B5     		push	{r4, lr}
 2792              		.cfi_def_cfa_offset 8
 2793              		.cfi_offset 4, -8
 2794              		.cfi_offset 14, -4
 2795 0da4 82B0     		sub	sp, sp, #8
 2796              		.cfi_def_cfa_offset 16
 2797 0da6 0446     		mov	r4, r0
1671:drivers/inv_mpu.c ****         return -1;
 2798              		.loc 1 1671 0
 2799 0da8 0C4B     		ldr	r3, .L302
 2800 0daa 1968     		ldr	r1, [r3]
 2801 0dac 5868     		ldr	r0, [r3, #4]
 2802              	.LVL229:
 2803 0dae 01AB     		add	r3, sp, #4
 2804 0db0 0222     		movs	r2, #2
 2805 0db2 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 2806 0db4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2807 0db6 FFF7FEFF 		bl	I2C_Read
 2808              	.LVL230:
 2809 0dba 58B9     		cbnz	r0, .L297
1673:drivers/inv_mpu.c ****     return 0;
 2810              		.loc 1 1673 0
 2811 0dbc 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 94


 2812 0dc0 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 2813 0dc4 43EA0223 		orr	r3, r3, r2, lsl #8
 2814 0dc8 2380     		strh	r3, [r4]	@ movhi
 2815              	.L294:
1675:drivers/inv_mpu.c **** 
 2816              		.loc 1 1675 0
 2817 0dca 02B0     		add	sp, sp, #8
 2818              		.cfi_def_cfa_offset 8
 2819              		@ sp needed
 2820 0dcc 10BD     		pop	{r4, pc}
 2821              	.LVL231:
 2822              	.L296:
 2823              		.cfi_def_cfa_offset 0
 2824              		.cfi_restore 4
 2825              		.cfi_restore 14
1670:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->dmp_int_status, 2, tmp))
 2826              		.loc 1 1670 0
 2827 0dce 4FF0FF30 		mov	r0, #-1
 2828              	.LVL232:
 2829 0dd2 7047     		bx	lr
 2830              	.LVL233:
 2831              	.L297:
 2832              		.cfi_def_cfa_offset 16
 2833              		.cfi_offset 4, -8
 2834              		.cfi_offset 14, -4
1672:drivers/inv_mpu.c ****     status[0] = (tmp[0] << 8) | tmp[1];
 2835              		.loc 1 1672 0
 2836 0dd4 4FF0FF30 		mov	r0, #-1
 2837 0dd8 F7E7     		b	.L294
 2838              	.L303:
 2839 0dda 00BF     		.align	2
 2840              	.L302:
 2841 0ddc 00000000 		.word	.LANCHOR0
 2842              		.cfi_endproc
 2843              	.LFE90:
 2844              		.size	mpu_get_int_status, .-mpu_get_int_status
 2845              		.align	1
 2846              		.global	mpu_read_fifo
 2847              		.syntax unified
 2848              		.thumb
 2849              		.thumb_func
 2850              		.fpu softvfp
 2851              		.type	mpu_read_fifo, %function
 2852              	mpu_read_fifo:
 2853              	.LFB91:
1697:drivers/inv_mpu.c ****     /* Assumes maximum packet size is gyro (6) + accel (6). */
 2854              		.loc 1 1697 0
 2855              		.cfi_startproc
 2856              		@ args = 4, pretend = 0, frame = 16
 2857              		@ frame_needed = 0, uses_anonymous_args = 0
 2858              	.LVL234:
1703:drivers/inv_mpu.c ****         return -1;
 2859              		.loc 1 1703 0
 2860 0de0 7B4A     		ldr	r2, .L332
 2861              	.LVL235:
 2862 0de2 92F82420 		ldrb	r2, [r2, #36]	@ zero_extendqisi2
 2863 0de6 002A     		cmp	r2, #0
ARM GAS  /tmp/cc18izUm.s 			page 95


 2864 0de8 40F0D280 		bne	.L314
1706:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 2865              		.loc 1 1706 0
 2866 0dec 1A70     		strb	r2, [r3]
1707:drivers/inv_mpu.c ****         return -1;
 2867              		.loc 1 1707 0
 2868 0dee 784A     		ldr	r2, .L332
 2869 0df0 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 2870 0df2 002A     		cmp	r2, #0
 2871 0df4 00F0CF80 		beq	.L315
1709:drivers/inv_mpu.c ****         return -1;
 2872              		.loc 1 1709 0
 2873 0df8 754A     		ldr	r2, .L332
 2874 0dfa 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 2875 0dfc 002A     		cmp	r2, #0
 2876 0dfe 00F0CD80 		beq	.L316
1697:drivers/inv_mpu.c ****     /* Assumes maximum packet size is gyro (6) + accel (6). */
 2877              		.loc 1 1697 0
 2878 0e02 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2879              		.cfi_def_cfa_offset 28
 2880              		.cfi_offset 4, -28
 2881              		.cfi_offset 5, -24
 2882              		.cfi_offset 6, -20
 2883              		.cfi_offset 7, -16
 2884              		.cfi_offset 8, -12
 2885              		.cfi_offset 9, -8
 2886              		.cfi_offset 14, -4
 2887 0e06 85B0     		sub	sp, sp, #20
 2888              		.cfi_def_cfa_offset 48
 2889 0e08 02F04004 		and	r4, r2, #64
1713:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Y_GYRO)
 2890              		.loc 1 1713 0
 2891 0e0c 002C     		cmp	r4, #0
 2892 0e0e 18BF     		it	ne
 2893 0e10 0224     		movne	r4, #2
 2894              	.LVL236:
1714:drivers/inv_mpu.c ****         packet_size += 2;
 2895              		.loc 1 1714 0
 2896 0e12 12F0200F 		tst	r2, #32
1715:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_Z_GYRO)
 2897              		.loc 1 1715 0
 2898 0e16 18BF     		it	ne
 2899 0e18 0234     		addne	r4, r4, #2
 2900              	.LVL237:
1716:drivers/inv_mpu.c ****         packet_size += 2;
 2901              		.loc 1 1716 0
 2902 0e1a 12F0100F 		tst	r2, #16
1717:drivers/inv_mpu.c ****     if (st.chip_cfg.fifo_enable & INV_XYZ_ACCEL)
 2903              		.loc 1 1717 0
 2904 0e1e 1CBF     		itt	ne
 2905 0e20 0234     		addne	r4, r4, #2
 2906              	.LVL238:
 2907 0e22 E4B2     		uxtbne	r4, r4
 2908              	.LVL239:
1718:drivers/inv_mpu.c ****         packet_size += 6;
 2909              		.loc 1 1718 0
 2910 0e24 12F0080F 		tst	r2, #8
ARM GAS  /tmp/cc18izUm.s 			page 96


1719:drivers/inv_mpu.c **** 
 2911              		.loc 1 1719 0
 2912 0e28 1CBF     		itt	ne
 2913 0e2a 0634     		addne	r4, r4, #6
 2914              	.LVL240:
 2915 0e2c E4B2     		uxtbne	r4, r4
 2916              	.LVL241:
 2917 0e2e 1E46     		mov	r6, r3
 2918 0e30 8946     		mov	r9, r1
 2919 0e32 0746     		mov	r7, r0
1721:drivers/inv_mpu.c ****         return -1;
 2920              		.loc 1 1721 0
 2921 0e34 664B     		ldr	r3, .L332
 2922              	.LVL242:
 2923 0e36 1968     		ldr	r1, [r3]
 2924              	.LVL243:
 2925 0e38 5868     		ldr	r0, [r3, #4]
 2926              	.LVL244:
 2927 0e3a 01AB     		add	r3, sp, #4
 2928 0e3c 0222     		movs	r2, #2
 2929 0e3e 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 2930 0e40 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2931 0e42 FFF7FEFF 		bl	I2C_Read
 2932              	.LVL245:
 2933 0e46 0028     		cmp	r0, #0
 2934 0e48 40F0AB80 		bne	.L317
1723:drivers/inv_mpu.c ****     if (fifo_count < packet_size)
 2935              		.loc 1 1723 0
 2936 0e4c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 2937 0e50 9DF80550 		ldrb	r5, [sp, #5]	@ zero_extendqisi2
 2938 0e54 45EA0325 		orr	r5, r5, r3, lsl #8
 2939              	.LVL246:
1724:drivers/inv_mpu.c ****         return 0;
 2940              		.loc 1 1724 0
 2941 0e58 1FFA84F8 		uxth	r8, r4
 2942 0e5c 4545     		cmp	r5, r8
 2943 0e5e C0F0A380 		bcc	.L318
1727:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
 2944              		.loc 1 1727 0
 2945 0e62 5B4B     		ldr	r3, .L332
 2946 0e64 5868     		ldr	r0, [r3, #4]
 2947 0e66 4388     		ldrh	r3, [r0, #2]
 2948 0e68 B5EB530F 		cmp	r5, r3, lsr #1
 2949 0e6c 0FD9     		bls	.L310
1729:drivers/inv_mpu.c ****             return -1;
 2950              		.loc 1 1729 0
 2951 0e6e 584B     		ldr	r3, .L332
 2952 0e70 1968     		ldr	r1, [r3]
 2953 0e72 01AB     		add	r3, sp, #4
 2954 0e74 0122     		movs	r2, #1
 2955 0e76 497C     		ldrb	r1, [r1, #17]	@ zero_extendqisi2
 2956 0e78 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2957 0e7a FFF7FEFF 		bl	I2C_Read
 2958              	.LVL247:
 2959 0e7e 0028     		cmp	r0, #0
 2960 0e80 40F09680 		bne	.L319
1731:drivers/inv_mpu.c ****             mpu_reset_fifo();
ARM GAS  /tmp/cc18izUm.s 			page 97


 2961              		.loc 1 1731 0
 2962 0e84 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 2963 0e88 13F0100F 		tst	r3, #16
 2964 0e8c 79D1     		bne	.L331
 2965              	.L310:
1738:drivers/inv_mpu.c ****         return -1;
 2966              		.loc 1 1738 0
 2967 0e8e 504B     		ldr	r3, .L332
 2968 0e90 1968     		ldr	r1, [r3]
 2969 0e92 5868     		ldr	r0, [r3, #4]
 2970 0e94 01AB     		add	r3, sp, #4
 2971 0e96 4246     		mov	r2, r8
 2972 0e98 C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 2973 0e9a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2974 0e9c FFF7FEFF 		bl	I2C_Read
 2975              	.LVL248:
 2976 0ea0 0028     		cmp	r0, #0
 2977 0ea2 40F08880 		bne	.L320
1740:drivers/inv_mpu.c ****     sensors[0] = 0;
 2978              		.loc 1 1740 0
 2979 0ea6 95FBF4F5 		sdiv	r5, r5, r4
 2980              	.LVL249:
 2981 0eaa 013D     		subs	r5, r5, #1
 2982 0eac 0C9B     		ldr	r3, [sp, #48]
 2983 0eae 1D70     		strb	r5, [r3]
1741:drivers/inv_mpu.c **** 
 2984              		.loc 1 1741 0
 2985 0eb0 0023     		movs	r3, #0
 2986 0eb2 3370     		strb	r3, [r6]
1743:drivers/inv_mpu.c ****         accel[0] = (data[index+0] << 8) | data[index+1];
 2987              		.loc 1 1743 0
 2988 0eb4 002C     		cmp	r4, #0
 2989 0eb6 00F08180 		beq	.L321
1743:drivers/inv_mpu.c ****         accel[0] = (data[index+0] << 8) | data[index+1];
 2990              		.loc 1 1743 0 is_stmt 0 discriminator 1
 2991 0eba 454B     		ldr	r3, .L332
 2992 0ebc 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2993 0ebe 13F0080F 		tst	r3, #8
 2994 0ec2 63D0     		beq	.L322
1744:drivers/inv_mpu.c ****         accel[1] = (data[index+2] << 8) | data[index+3];
 2995              		.loc 1 1744 0 is_stmt 1
 2996 0ec4 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 2997 0ec8 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 2998 0ecc 43EA0223 		orr	r3, r3, r2, lsl #8
 2999 0ed0 A9F80030 		strh	r3, [r9]	@ movhi
1745:drivers/inv_mpu.c ****         accel[2] = (data[index+4] << 8) | data[index+5];
 3000              		.loc 1 1745 0
 3001 0ed4 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 3002 0ed8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3003 0edc 43EA0223 		orr	r3, r3, r2, lsl #8
 3004 0ee0 A9F80230 		strh	r3, [r9, #2]	@ movhi
1746:drivers/inv_mpu.c ****         sensors[0] |= INV_XYZ_ACCEL;
 3005              		.loc 1 1746 0
 3006 0ee4 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 3007 0ee8 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 3008 0eec 43EA0223 		orr	r3, r3, r2, lsl #8
 3009 0ef0 A9F80430 		strh	r3, [r9, #4]	@ movhi
ARM GAS  /tmp/cc18izUm.s 			page 98


1747:drivers/inv_mpu.c ****         index += 6;
 3010              		.loc 1 1747 0
 3011 0ef4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3012 0ef6 43F00803 		orr	r3, r3, #8
 3013 0efa 3370     		strb	r3, [r6]
 3014              	.LVL250:
1748:drivers/inv_mpu.c ****     }
 3015              		.loc 1 1748 0
 3016 0efc 0622     		movs	r2, #6
 3017              	.LVL251:
 3018              	.L311:
1750:drivers/inv_mpu.c ****         gyro[0] = (data[index+0] << 8) | data[index+1];
 3019              		.loc 1 1750 0
 3020 0efe 4245     		cmp	r2, r8
 3021 0f00 5ED0     		beq	.L323
1750:drivers/inv_mpu.c ****         gyro[0] = (data[index+0] << 8) | data[index+1];
 3022              		.loc 1 1750 0 is_stmt 0 discriminator 1
 3023 0f02 334B     		ldr	r3, .L332
 3024 0f04 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3025 0f06 13F0400F 		tst	r3, #64
 3026 0f0a 10D0     		beq	.L312
1751:drivers/inv_mpu.c ****         sensors[0] |= INV_X_GYRO;
 3027              		.loc 1 1751 0 is_stmt 1
 3028 0f0c 04AB     		add	r3, sp, #16
 3029 0f0e 9918     		adds	r1, r3, r2
 3030 0f10 11F80C0C 		ldrb	r0, [r1, #-12]	@ zero_extendqisi2
 3031 0f14 11F80B3C 		ldrb	r3, [r1, #-11]	@ zero_extendqisi2
 3032 0f18 43EA0023 		orr	r3, r3, r0, lsl #8
 3033 0f1c 3B80     		strh	r3, [r7]	@ movhi
1752:drivers/inv_mpu.c ****         index += 2;
 3034              		.loc 1 1752 0
 3035 0f1e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3036 0f20 43F04003 		orr	r3, r3, #64
 3037 0f24 3370     		strb	r3, [r6]
1753:drivers/inv_mpu.c ****     }
 3038              		.loc 1 1753 0
 3039 0f26 0232     		adds	r2, r2, #2
 3040              	.LVL252:
 3041 0f28 92B2     		uxth	r2, r2
1755:drivers/inv_mpu.c ****         gyro[1] = (data[index+0] << 8) | data[index+1];
 3042              		.loc 1 1755 0
 3043 0f2a 9045     		cmp	r8, r2
 3044 0f2c 4AD0     		beq	.L324
 3045              	.LVL253:
 3046              	.L312:
1755:drivers/inv_mpu.c ****         gyro[1] = (data[index+0] << 8) | data[index+1];
 3047              		.loc 1 1755 0 is_stmt 0 discriminator 1
 3048 0f2e 284B     		ldr	r3, .L332
 3049 0f30 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3050 0f32 13F0200F 		tst	r3, #32
 3051 0f36 10D0     		beq	.L313
1756:drivers/inv_mpu.c ****         sensors[0] |= INV_Y_GYRO;
 3052              		.loc 1 1756 0 is_stmt 1
 3053 0f38 04AB     		add	r3, sp, #16
 3054 0f3a 9918     		adds	r1, r3, r2
 3055 0f3c 11F80C0C 		ldrb	r0, [r1, #-12]	@ zero_extendqisi2
 3056 0f40 11F80B3C 		ldrb	r3, [r1, #-11]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 99


 3057 0f44 43EA0023 		orr	r3, r3, r0, lsl #8
 3058 0f48 7B80     		strh	r3, [r7, #2]	@ movhi
1757:drivers/inv_mpu.c ****         index += 2;
 3059              		.loc 1 1757 0
 3060 0f4a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3061 0f4c 43F02003 		orr	r3, r3, #32
 3062 0f50 3370     		strb	r3, [r6]
1758:drivers/inv_mpu.c ****     }
 3063              		.loc 1 1758 0
 3064 0f52 0232     		adds	r2, r2, #2
 3065              	.LVL254:
 3066 0f54 92B2     		uxth	r2, r2
1760:drivers/inv_mpu.c ****         gyro[2] = (data[index+0] << 8) | data[index+1];
 3067              		.loc 1 1760 0
 3068 0f56 9045     		cmp	r8, r2
 3069 0f58 36D0     		beq	.L325
 3070              	.LVL255:
 3071              	.L313:
1760:drivers/inv_mpu.c ****         gyro[2] = (data[index+0] << 8) | data[index+1];
 3072              		.loc 1 1760 0 is_stmt 0 discriminator 1
 3073 0f5a 1D4B     		ldr	r3, .L332
 3074 0f5c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3075 0f5e 13F0100F 		tst	r3, #16
 3076 0f62 33D0     		beq	.L326
1761:drivers/inv_mpu.c ****         sensors[0] |= INV_Z_GYRO;
 3077              		.loc 1 1761 0 is_stmt 1
 3078 0f64 04AB     		add	r3, sp, #16
 3079 0f66 1A44     		add	r2, r2, r3
 3080 0f68 12F80C1C 		ldrb	r1, [r2, #-12]	@ zero_extendqisi2
 3081 0f6c 12F80B3C 		ldrb	r3, [r2, #-11]	@ zero_extendqisi2
 3082 0f70 43EA0123 		orr	r3, r3, r1, lsl #8
 3083 0f74 BB80     		strh	r3, [r7, #4]	@ movhi
1762:drivers/inv_mpu.c ****         index += 2;
 3084              		.loc 1 1762 0
 3085 0f76 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3086 0f78 43F01003 		orr	r3, r3, #16
 3087 0f7c 3370     		strb	r3, [r6]
1766:drivers/inv_mpu.c **** }
 3088              		.loc 1 1766 0
 3089 0f7e 0020     		movs	r0, #0
 3090 0f80 13E0     		b	.L304
 3091              	.LVL256:
 3092              	.L331:
1732:drivers/inv_mpu.c ****             return -2;
 3093              		.loc 1 1732 0
 3094 0f82 FFF7FEFF 		bl	mpu_reset_fifo
 3095              	.LVL257:
1733:drivers/inv_mpu.c ****         }
 3096              		.loc 1 1733 0
 3097 0f86 6FF00100 		mvn	r0, #1
 3098 0f8a 0EE0     		b	.L304
 3099              	.LVL258:
 3100              	.L322:
1701:drivers/inv_mpu.c **** 
 3101              		.loc 1 1701 0
 3102 0f8c 0022     		movs	r2, #0
 3103 0f8e B6E7     		b	.L311
ARM GAS  /tmp/cc18izUm.s 			page 100


 3104              	.LVL259:
 3105              	.L314:
 3106              		.cfi_def_cfa_offset 0
 3107              		.cfi_restore 4
 3108              		.cfi_restore 5
 3109              		.cfi_restore 6
 3110              		.cfi_restore 7
 3111              		.cfi_restore 8
 3112              		.cfi_restore 9
 3113              		.cfi_restore 14
1704:drivers/inv_mpu.c **** 
 3114              		.loc 1 1704 0
 3115 0f90 4FF0FF30 		mov	r0, #-1
 3116              	.LVL260:
 3117 0f94 7047     		bx	lr
 3118              	.LVL261:
 3119              	.L315:
1708:drivers/inv_mpu.c ****     if (!st.chip_cfg.fifo_enable)
 3120              		.loc 1 1708 0
 3121 0f96 4FF0FF30 		mov	r0, #-1
 3122              	.LVL262:
 3123 0f9a 7047     		bx	lr
 3124              	.LVL263:
 3125              	.L316:
1710:drivers/inv_mpu.c **** 
 3126              		.loc 1 1710 0
 3127 0f9c 4FF0FF30 		mov	r0, #-1
 3128              	.LVL264:
 3129 0fa0 7047     		bx	lr
 3130              	.LVL265:
 3131              	.L317:
 3132              		.cfi_def_cfa_offset 48
 3133              		.cfi_offset 4, -28
 3134              		.cfi_offset 5, -24
 3135              		.cfi_offset 6, -20
 3136              		.cfi_offset 7, -16
 3137              		.cfi_offset 8, -12
 3138              		.cfi_offset 9, -8
 3139              		.cfi_offset 14, -4
1722:drivers/inv_mpu.c ****     fifo_count = (data[0] << 8) | data[1];
 3140              		.loc 1 1722 0
 3141 0fa2 4FF0FF30 		mov	r0, #-1
 3142 0fa6 00E0     		b	.L304
 3143              	.LVL266:
 3144              	.L318:
1725:drivers/inv_mpu.c **** //    log_i("FIFO count: %hd\n", fifo_count);
 3145              		.loc 1 1725 0
 3146 0fa8 0020     		movs	r0, #0
 3147              	.LVL267:
 3148              	.L304:
1767:drivers/inv_mpu.c **** 
 3149              		.loc 1 1767 0
 3150 0faa 05B0     		add	sp, sp, #20
 3151              		.cfi_remember_state
 3152              		.cfi_def_cfa_offset 28
 3153              		@ sp needed
 3154 0fac BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/cc18izUm.s 			page 101


 3155              	.LVL268:
 3156              	.L319:
 3157              		.cfi_restore_state
1730:drivers/inv_mpu.c ****         if (data[0] & BIT_FIFO_OVERFLOW) {
 3158              		.loc 1 1730 0
 3159 0fb0 4FF0FF30 		mov	r0, #-1
 3160 0fb4 F9E7     		b	.L304
 3161              	.L320:
1739:drivers/inv_mpu.c ****     more[0] = fifo_count / packet_size - 1;
 3162              		.loc 1 1739 0
 3163 0fb6 4FF0FF30 		mov	r0, #-1
 3164 0fba F6E7     		b	.L304
 3165              	.LVL269:
 3166              	.L321:
1766:drivers/inv_mpu.c **** }
 3167              		.loc 1 1766 0
 3168 0fbc 0020     		movs	r0, #0
 3169 0fbe F4E7     		b	.L304
 3170              	.LVL270:
 3171              	.L323:
 3172 0fc0 0020     		movs	r0, #0
 3173 0fc2 F2E7     		b	.L304
 3174              	.LVL271:
 3175              	.L324:
 3176 0fc4 0020     		movs	r0, #0
 3177 0fc6 F0E7     		b	.L304
 3178              	.L325:
 3179 0fc8 0020     		movs	r0, #0
 3180 0fca EEE7     		b	.L304
 3181              	.LVL272:
 3182              	.L326:
 3183 0fcc 0020     		movs	r0, #0
 3184 0fce ECE7     		b	.L304
 3185              	.L333:
 3186              		.align	2
 3187              	.L332:
 3188 0fd0 00000000 		.word	.LANCHOR0
 3189              		.cfi_endproc
 3190              	.LFE91:
 3191              		.size	mpu_read_fifo, .-mpu_read_fifo
 3192              		.align	1
 3193              		.global	mpu_read_fifo_stream
 3194              		.syntax unified
 3195              		.thumb
 3196              		.thumb_func
 3197              		.fpu softvfp
 3198              		.type	mpu_read_fifo_stream, %function
 3199              	mpu_read_fifo_stream:
 3200              	.LFB92:
1778:drivers/inv_mpu.c ****     unsigned char tmp[2];
 3201              		.loc 1 1778 0
 3202              		.cfi_startproc
 3203              		@ args = 0, pretend = 0, frame = 8
 3204              		@ frame_needed = 0, uses_anonymous_args = 0
 3205              	.LVL273:
 3206 0fd4 F0B5     		push	{r4, r5, r6, r7, lr}
 3207              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cc18izUm.s 			page 102


 3208              		.cfi_offset 4, -20
 3209              		.cfi_offset 5, -16
 3210              		.cfi_offset 6, -12
 3211              		.cfi_offset 7, -8
 3212              		.cfi_offset 14, -4
 3213 0fd6 83B0     		sub	sp, sp, #12
 3214              		.cfi_def_cfa_offset 32
1781:drivers/inv_mpu.c ****         return -1;
 3215              		.loc 1 1781 0
 3216 0fd8 2D4F     		ldr	r7, .L346
 3217 0fda 97F82470 		ldrb	r7, [r7, #36]	@ zero_extendqisi2
 3218 0fde 002F     		cmp	r7, #0
 3219 0fe0 47D0     		beq	.L338
1783:drivers/inv_mpu.c ****         return -1;
 3220              		.loc 1 1783 0
 3221 0fe2 2B4F     		ldr	r7, .L346
 3222 0fe4 BF7A     		ldrb	r7, [r7, #10]	@ zero_extendqisi2
 3223 0fe6 002F     		cmp	r7, #0
 3224 0fe8 46D0     		beq	.L339
 3225 0fea 1646     		mov	r6, r2
 3226 0fec 0F46     		mov	r7, r1
 3227 0fee 0546     		mov	r5, r0
1786:drivers/inv_mpu.c ****         return -1;
 3228              		.loc 1 1786 0
 3229 0ff0 274B     		ldr	r3, .L346
 3230 0ff2 1968     		ldr	r1, [r3]
 3231              	.LVL274:
 3232 0ff4 5868     		ldr	r0, [r3, #4]
 3233              	.LVL275:
 3234 0ff6 01AB     		add	r3, sp, #4
 3235 0ff8 0222     		movs	r2, #2
 3236              	.LVL276:
 3237 0ffa 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 3238 0ffc 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3239 0ffe FFF7FEFF 		bl	I2C_Read
 3240              	.LVL277:
 3241 1002 0028     		cmp	r0, #0
 3242 1004 3BD1     		bne	.L340
1788:drivers/inv_mpu.c ****     if (fifo_count < length) {
 3243              		.loc 1 1788 0
 3244 1006 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 3245 100a 9DF80540 		ldrb	r4, [sp, #5]	@ zero_extendqisi2
 3246 100e 44EA0024 		orr	r4, r4, r0, lsl #8
 3247              	.LVL278:
1789:drivers/inv_mpu.c ****         more[0] = 0;
 3248              		.loc 1 1789 0
 3249 1012 AC42     		cmp	r4, r5
 3250 1014 23D3     		bcc	.L344
1793:drivers/inv_mpu.c ****         /* FIFO is 50% full, better check overflow bit. */
 3251              		.loc 1 1793 0
 3252 1016 1E4B     		ldr	r3, .L346
 3253 1018 5868     		ldr	r0, [r3, #4]
 3254 101a 4388     		ldrh	r3, [r0, #2]
 3255 101c B4EB530F 		cmp	r4, r3, lsr #1
 3256 1020 0DD9     		bls	.L337
1795:drivers/inv_mpu.c ****             return -1;
 3257              		.loc 1 1795 0
ARM GAS  /tmp/cc18izUm.s 			page 103


 3258 1022 1B4B     		ldr	r3, .L346
 3259 1024 1968     		ldr	r1, [r3]
 3260 1026 01AB     		add	r3, sp, #4
 3261 1028 0122     		movs	r2, #1
 3262 102a 497C     		ldrb	r1, [r1, #17]	@ zero_extendqisi2
 3263 102c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3264 102e FFF7FEFF 		bl	I2C_Read
 3265              	.LVL279:
 3266 1032 38BB     		cbnz	r0, .L341
1797:drivers/inv_mpu.c ****             mpu_reset_fifo();
 3267              		.loc 1 1797 0
 3268 1034 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 3269 1038 13F0100F 		tst	r3, #16
 3270 103c 14D1     		bne	.L345
 3271              	.L337:
1803:drivers/inv_mpu.c ****         return -1;
 3272              		.loc 1 1803 0
 3273 103e 144B     		ldr	r3, .L346
 3274 1040 1968     		ldr	r1, [r3]
 3275 1042 5868     		ldr	r0, [r3, #4]
 3276 1044 3B46     		mov	r3, r7
 3277 1046 2A46     		mov	r2, r5
 3278 1048 C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 3279 104a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3280 104c FFF7FEFF 		bl	I2C_Read
 3281              	.LVL280:
 3282 1050 D8B9     		cbnz	r0, .L342
1805:drivers/inv_mpu.c ****     return 0;
 3283              		.loc 1 1805 0
 3284 1052 B4FBF5F4 		udiv	r4, r4, r5
 3285              	.LVL281:
 3286 1056 013C     		subs	r4, r4, #1
 3287 1058 3470     		strb	r4, [r6]
 3288              	.LVL282:
 3289              	.L334:
1807:drivers/inv_mpu.c **** 
 3290              		.loc 1 1807 0
 3291 105a 03B0     		add	sp, sp, #12
 3292              		.cfi_remember_state
 3293              		.cfi_def_cfa_offset 20
 3294              		@ sp needed
 3295 105c F0BD     		pop	{r4, r5, r6, r7, pc}
 3296              	.LVL283:
 3297              	.L344:
 3298              		.cfi_restore_state
1790:drivers/inv_mpu.c ****         return -1;
 3299              		.loc 1 1790 0
 3300 105e 0023     		movs	r3, #0
 3301 1060 3370     		strb	r3, [r6]
1791:drivers/inv_mpu.c ****     }
 3302              		.loc 1 1791 0
 3303 1062 4FF0FF30 		mov	r0, #-1
 3304 1066 F8E7     		b	.L334
 3305              	.L345:
1798:drivers/inv_mpu.c ****             return -2;
 3306              		.loc 1 1798 0
 3307 1068 FFF7FEFF 		bl	mpu_reset_fifo
ARM GAS  /tmp/cc18izUm.s 			page 104


 3308              	.LVL284:
1799:drivers/inv_mpu.c ****         }
 3309              		.loc 1 1799 0
 3310 106c 6FF00100 		mvn	r0, #1
 3311 1070 F3E7     		b	.L334
 3312              	.LVL285:
 3313              	.L338:
1782:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 3314              		.loc 1 1782 0
 3315 1072 4FF0FF30 		mov	r0, #-1
 3316              	.LVL286:
 3317 1076 F0E7     		b	.L334
 3318              	.LVL287:
 3319              	.L339:
1784:drivers/inv_mpu.c **** 
 3320              		.loc 1 1784 0
 3321 1078 4FF0FF30 		mov	r0, #-1
 3322              	.LVL288:
 3323 107c EDE7     		b	.L334
 3324              	.LVL289:
 3325              	.L340:
1787:drivers/inv_mpu.c ****     fifo_count = (tmp[0] << 8) | tmp[1];
 3326              		.loc 1 1787 0
 3327 107e 4FF0FF30 		mov	r0, #-1
 3328 1082 EAE7     		b	.L334
 3329              	.LVL290:
 3330              	.L341:
1796:drivers/inv_mpu.c ****         if (tmp[0] & BIT_FIFO_OVERFLOW) {
 3331              		.loc 1 1796 0
 3332 1084 4FF0FF30 		mov	r0, #-1
 3333 1088 E7E7     		b	.L334
 3334              	.L342:
1804:drivers/inv_mpu.c ****     more[0] = fifo_count / length - 1;
 3335              		.loc 1 1804 0
 3336 108a 4FF0FF30 		mov	r0, #-1
 3337 108e E4E7     		b	.L334
 3338              	.L347:
 3339              		.align	2
 3340              	.L346:
 3341 1090 00000000 		.word	.LANCHOR0
 3342              		.cfi_endproc
 3343              	.LFE92:
 3344              		.size	mpu_read_fifo_stream, .-mpu_read_fifo_stream
 3345              		.align	1
 3346              		.global	mpu_set_bypass
 3347              		.syntax unified
 3348              		.thumb
 3349              		.thumb_func
 3350              		.fpu softvfp
 3351              		.type	mpu_set_bypass, %function
 3352              	mpu_set_bypass:
 3353              	.LFB93:
1815:drivers/inv_mpu.c ****     unsigned char tmp;
 3354              		.loc 1 1815 0
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 8
 3357              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc18izUm.s 			page 105


 3358              	.LVL291:
1818:drivers/inv_mpu.c ****         return 0;
 3359              		.loc 1 1818 0
 3360 1094 554B     		ldr	r3, .L370
 3361 1096 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 3362 1098 8342     		cmp	r3, r0
 3363 109a 00F09580 		beq	.L359
1815:drivers/inv_mpu.c ****     unsigned char tmp;
 3364              		.loc 1 1815 0
 3365 109e 10B5     		push	{r4, lr}
 3366              		.cfi_def_cfa_offset 8
 3367              		.cfi_offset 4, -8
 3368              		.cfi_offset 14, -4
 3369 10a0 82B0     		sub	sp, sp, #8
 3370              		.cfi_def_cfa_offset 16
 3371 10a2 0446     		mov	r4, r0
1821:drivers/inv_mpu.c ****         if (I2C_Read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
 3372              		.loc 1 1821 0
 3373 10a4 0028     		cmp	r0, #0
 3374 10a6 43D0     		beq	.L350
1822:drivers/inv_mpu.c ****             return -1;
 3375              		.loc 1 1822 0
 3376 10a8 504B     		ldr	r3, .L370
 3377 10aa 1968     		ldr	r1, [r3]
 3378 10ac 5868     		ldr	r0, [r3, #4]
 3379              	.LVL292:
 3380 10ae 0DF10703 		add	r3, sp, #7
 3381 10b2 0122     		movs	r2, #1
 3382 10b4 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3383 10b6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3384 10b8 FFF7FEFF 		bl	I2C_Read
 3385              	.LVL293:
 3386 10bc 0028     		cmp	r0, #0
 3387 10be 40F08580 		bne	.L360
1824:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
 3388              		.loc 1 1824 0
 3389 10c2 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 3390 10c6 22F02002 		bic	r2, r2, #32
 3391 10ca 02AB     		add	r3, sp, #8
 3392 10cc 03F8012D 		strb	r2, [r3, #-1]!
1825:drivers/inv_mpu.c ****             return -1;
 3393              		.loc 1 1825 0
 3394 10d0 464A     		ldr	r2, .L370
 3395 10d2 1168     		ldr	r1, [r2]
 3396 10d4 5068     		ldr	r0, [r2, #4]
 3397 10d6 0122     		movs	r2, #1
 3398 10d8 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3399 10da 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3400 10dc FFF7FEFF 		bl	I2C_Write
 3401              	.LVL294:
 3402 10e0 0028     		cmp	r0, #0
 3403 10e2 76D1     		bne	.L361
1827:drivers/inv_mpu.c ****         tmp = BIT_BYPASS_EN;
 3404              		.loc 1 1827 0
 3405 10e4 0320     		movs	r0, #3
 3406 10e6 FFF7FEFF 		bl	DelayMs
 3407              	.LVL295:
ARM GAS  /tmp/cc18izUm.s 			page 106


1828:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
 3408              		.loc 1 1828 0
 3409 10ea 0223     		movs	r3, #2
 3410 10ec 8DF80730 		strb	r3, [sp, #7]
1829:drivers/inv_mpu.c ****             tmp |= BIT_ACTL;
 3411              		.loc 1 1829 0
 3412 10f0 3E4B     		ldr	r3, .L370
 3413 10f2 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3414 10f6 13B1     		cbz	r3, .L351
1830:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
 3415              		.loc 1 1830 0
 3416 10f8 8223     		movs	r3, #130
 3417 10fa 8DF80730 		strb	r3, [sp, #7]
 3418              	.L351:
1831:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
 3419              		.loc 1 1831 0
 3420 10fe 3B4B     		ldr	r3, .L370
 3421 1100 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3422 1104 2BB1     		cbz	r3, .L352
1832:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
 3423              		.loc 1 1832 0
 3424 1106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3425 110a 43F03003 		orr	r3, r3, #48
 3426 110e 8DF80730 		strb	r3, [sp, #7]
 3427              	.L352:
1833:drivers/inv_mpu.c ****             return -1;
 3428              		.loc 1 1833 0
 3429 1112 364B     		ldr	r3, .L370
 3430 1114 1968     		ldr	r1, [r3]
 3431 1116 5868     		ldr	r0, [r3, #4]
 3432 1118 0DF10703 		add	r3, sp, #7
 3433 111c 0122     		movs	r2, #1
 3434 111e 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 3435 1120 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3436 1122 FFF7FEFF 		bl	I2C_Write
 3437              	.LVL296:
 3438 1126 0028     		cmp	r0, #0
 3439 1128 45D0     		beq	.L353
1834:drivers/inv_mpu.c ****     } else {
 3440              		.loc 1 1834 0
 3441 112a 4FF0FF30 		mov	r0, #-1
 3442 112e 45E0     		b	.L348
 3443              	.LVL297:
 3444              	.L350:
1837:drivers/inv_mpu.c ****             return -1;
 3445              		.loc 1 1837 0
 3446 1130 2E4B     		ldr	r3, .L370
 3447 1132 1968     		ldr	r1, [r3]
 3448 1134 5868     		ldr	r0, [r3, #4]
 3449              	.LVL298:
 3450 1136 0DF10703 		add	r3, sp, #7
 3451 113a 0122     		movs	r2, #1
 3452 113c 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3453 113e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3454 1140 FFF7FEFF 		bl	I2C_Read
 3455              	.LVL299:
 3456 1144 0028     		cmp	r0, #0
ARM GAS  /tmp/cc18izUm.s 			page 107


 3457 1146 47D1     		bne	.L363
1839:drivers/inv_mpu.c ****             tmp |= BIT_AUX_IF_EN;
 3458              		.loc 1 1839 0
 3459 1148 284B     		ldr	r3, .L370
 3460 114a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 3461 114c 13F0010F 		tst	r3, #1
1840:drivers/inv_mpu.c ****         else
 3462              		.loc 1 1840 0
 3463 1150 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3464 1154 14BF     		ite	ne
 3465 1156 43F02003 		orrne	r3, r3, #32
1842:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
 3466              		.loc 1 1842 0
 3467 115a 23F02003 		biceq	r3, r3, #32
 3468 115e 8DF80730 		strb	r3, [sp, #7]
1843:drivers/inv_mpu.c ****             return -1;
 3469              		.loc 1 1843 0
 3470 1162 224B     		ldr	r3, .L370
 3471 1164 1968     		ldr	r1, [r3]
 3472 1166 5868     		ldr	r0, [r3, #4]
 3473 1168 0DF10703 		add	r3, sp, #7
 3474 116c 0122     		movs	r2, #1
 3475 116e 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 3476 1170 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3477 1172 FFF7FEFF 		bl	I2C_Write
 3478              	.LVL300:
 3479 1176 90BB     		cbnz	r0, .L364
1845:drivers/inv_mpu.c ****         if (st.chip_cfg.active_low_int)
 3480              		.loc 1 1845 0
 3481 1178 0320     		movs	r0, #3
 3482 117a FFF7FEFF 		bl	DelayMs
 3483              	.LVL301:
1846:drivers/inv_mpu.c ****             tmp = BIT_ACTL;
 3484              		.loc 1 1846 0
 3485 117e 1B4B     		ldr	r3, .L370
 3486 1180 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3487 1184 E3B1     		cbz	r3, .L356
1847:drivers/inv_mpu.c ****         else
 3488              		.loc 1 1847 0
 3489 1186 8023     		movs	r3, #128
 3490 1188 8DF80730 		strb	r3, [sp, #7]
 3491              	.L357:
1850:drivers/inv_mpu.c ****             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
 3492              		.loc 1 1850 0
 3493 118c 174B     		ldr	r3, .L370
 3494 118e 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3495 1192 2BB1     		cbz	r3, .L358
1851:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
 3496              		.loc 1 1851 0
 3497 1194 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3498 1198 43F03003 		orr	r3, r3, #48
 3499 119c 8DF80730 		strb	r3, [sp, #7]
 3500              	.L358:
1852:drivers/inv_mpu.c ****             return -1;
 3501              		.loc 1 1852 0
 3502 11a0 124B     		ldr	r3, .L370
 3503 11a2 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cc18izUm.s 			page 108


 3504 11a4 5868     		ldr	r0, [r3, #4]
 3505 11a6 0DF10703 		add	r3, sp, #7
 3506 11aa 0122     		movs	r2, #1
 3507 11ac 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 3508 11ae 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3509 11b0 FFF7FEFF 		bl	I2C_Write
 3510              	.LVL302:
 3511 11b4 B0B9     		cbnz	r0, .L365
 3512              	.L353:
1855:drivers/inv_mpu.c ****     return 0;
 3513              		.loc 1 1855 0
 3514 11b6 0D4B     		ldr	r3, .L370
 3515 11b8 9C74     		strb	r4, [r3, #18]
1856:drivers/inv_mpu.c **** }
 3516              		.loc 1 1856 0
 3517 11ba 0020     		movs	r0, #0
 3518              	.L348:
1857:drivers/inv_mpu.c **** 
 3519              		.loc 1 1857 0
 3520 11bc 02B0     		add	sp, sp, #8
 3521              		.cfi_remember_state
 3522              		.cfi_def_cfa_offset 8
 3523              		@ sp needed
 3524 11be 10BD     		pop	{r4, pc}
 3525              	.L356:
 3526              		.cfi_restore_state
1849:drivers/inv_mpu.c ****         if (st.chip_cfg.latched_int)
 3527              		.loc 1 1849 0
 3528 11c0 0023     		movs	r3, #0
 3529 11c2 8DF80730 		strb	r3, [sp, #7]
 3530 11c6 E1E7     		b	.L357
 3531              	.LVL303:
 3532              	.L359:
 3533              		.cfi_def_cfa_offset 0
 3534              		.cfi_restore 4
 3535              		.cfi_restore 14
1819:drivers/inv_mpu.c **** 
 3536              		.loc 1 1819 0
 3537 11c8 0020     		movs	r0, #0
 3538              	.LVL304:
 3539 11ca 7047     		bx	lr
 3540              	.L360:
 3541              		.cfi_def_cfa_offset 16
 3542              		.cfi_offset 4, -8
 3543              		.cfi_offset 14, -4
1823:drivers/inv_mpu.c ****         tmp &= ~BIT_AUX_IF_EN;
 3544              		.loc 1 1823 0
 3545 11cc 4FF0FF30 		mov	r0, #-1
 3546 11d0 F4E7     		b	.L348
 3547              	.L361:
1826:drivers/inv_mpu.c ****         DelayMs(3);
 3548              		.loc 1 1826 0
 3549 11d2 4FF0FF30 		mov	r0, #-1
 3550 11d6 F1E7     		b	.L348
 3551              	.L363:
1838:drivers/inv_mpu.c ****         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
 3552              		.loc 1 1838 0
ARM GAS  /tmp/cc18izUm.s 			page 109


 3553 11d8 4FF0FF30 		mov	r0, #-1
 3554 11dc EEE7     		b	.L348
 3555              	.L364:
1844:drivers/inv_mpu.c ****         DelayMs(3);
 3556              		.loc 1 1844 0
 3557 11de 4FF0FF30 		mov	r0, #-1
 3558 11e2 EBE7     		b	.L348
 3559              	.L365:
1853:drivers/inv_mpu.c ****     }
 3560              		.loc 1 1853 0
 3561 11e4 4FF0FF30 		mov	r0, #-1
 3562 11e8 E8E7     		b	.L348
 3563              	.L371:
 3564 11ea 00BF     		.align	2
 3565              	.L370:
 3566 11ec 00000000 		.word	.LANCHOR0
 3567              		.cfi_endproc
 3568              	.LFE93:
 3569              		.size	mpu_set_bypass, .-mpu_set_bypass
 3570              		.align	1
 3571              		.global	mpu_set_int_level
 3572              		.syntax unified
 3573              		.thumb
 3574              		.thumb_func
 3575              		.fpu softvfp
 3576              		.type	mpu_set_int_level, %function
 3577              	mpu_set_int_level:
 3578              	.LFB94:
1865:drivers/inv_mpu.c ****     st.chip_cfg.active_low_int = active_low;
 3579              		.loc 1 1865 0
 3580              		.cfi_startproc
 3581              		@ args = 0, pretend = 0, frame = 0
 3582              		@ frame_needed = 0, uses_anonymous_args = 0
 3583              		@ link register save eliminated.
 3584              	.LVL305:
1866:drivers/inv_mpu.c ****     return 0;
 3585              		.loc 1 1866 0
 3586 11f0 024B     		ldr	r3, .L373
 3587 11f2 83F82200 		strb	r0, [r3, #34]
1868:drivers/inv_mpu.c **** 
 3588              		.loc 1 1868 0
 3589 11f6 0020     		movs	r0, #0
 3590              	.LVL306:
 3591 11f8 7047     		bx	lr
 3592              	.L374:
 3593 11fa 00BF     		.align	2
 3594              	.L373:
 3595 11fc 00000000 		.word	.LANCHOR0
 3596              		.cfi_endproc
 3597              	.LFE94:
 3598              		.size	mpu_set_int_level, .-mpu_set_int_level
 3599              		.align	1
 3600              		.global	mpu_set_int_latched
 3601              		.syntax unified
 3602              		.thumb
 3603              		.thumb_func
 3604              		.fpu softvfp
ARM GAS  /tmp/cc18izUm.s 			page 110


 3605              		.type	mpu_set_int_latched, %function
 3606              	mpu_set_int_latched:
 3607              	.LFB95:
1877:drivers/inv_mpu.c ****     unsigned char tmp;
 3608              		.loc 1 1877 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 8
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              	.LVL307:
1879:drivers/inv_mpu.c ****         return 0;
 3613              		.loc 1 1879 0
 3614 1200 1B4B     		ldr	r3, .L387
 3615 1202 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3616 1206 8342     		cmp	r3, r0
 3617 1208 2DD0     		beq	.L381
1877:drivers/inv_mpu.c ****     unsigned char tmp;
 3618              		.loc 1 1877 0
 3619 120a 10B5     		push	{r4, lr}
 3620              		.cfi_def_cfa_offset 8
 3621              		.cfi_offset 4, -8
 3622              		.cfi_offset 14, -4
 3623 120c 82B0     		sub	sp, sp, #8
 3624              		.cfi_def_cfa_offset 16
1882:drivers/inv_mpu.c ****         tmp = BIT_LATCH_EN | BIT_ANY_RD_CLR;
 3625              		.loc 1 1882 0
 3626 120e 30B3     		cbz	r0, .L377
1883:drivers/inv_mpu.c ****     else
 3627              		.loc 1 1883 0
 3628 1210 3023     		movs	r3, #48
 3629 1212 8DF80730 		strb	r3, [sp, #7]
 3630              	.L378:
1886:drivers/inv_mpu.c ****         tmp |= BIT_BYPASS_EN;
 3631              		.loc 1 1886 0
 3632 1216 164B     		ldr	r3, .L387
 3633 1218 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 3634 121a 2BB1     		cbz	r3, .L379
1887:drivers/inv_mpu.c ****     if (st.chip_cfg.active_low_int)
 3635              		.loc 1 1887 0
 3636 121c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3637 1220 43F00203 		orr	r3, r3, #2
 3638 1224 8DF80730 		strb	r3, [sp, #7]
 3639              	.L379:
1888:drivers/inv_mpu.c ****         tmp |= BIT_ACTL;
 3640              		.loc 1 1888 0
 3641 1228 114B     		ldr	r3, .L387
 3642 122a 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3643 122e 2BB1     		cbz	r3, .L380
1889:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
 3644              		.loc 1 1889 0
 3645 1230 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3646 1234 63F07F03 		orn	r3, r3, #127
 3647 1238 8DF80730 		strb	r3, [sp, #7]
 3648              	.L380:
 3649 123c 0446     		mov	r4, r0
1890:drivers/inv_mpu.c ****         return -1;
 3650              		.loc 1 1890 0
 3651 123e 0C4B     		ldr	r3, .L387
ARM GAS  /tmp/cc18izUm.s 			page 111


 3652 1240 1968     		ldr	r1, [r3]
 3653 1242 5868     		ldr	r0, [r3, #4]
 3654              	.LVL308:
 3655 1244 0DF10703 		add	r3, sp, #7
 3656 1248 0122     		movs	r2, #1
 3657 124a 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 3658 124c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3659 124e FFF7FEFF 		bl	I2C_Write
 3660              	.LVL309:
 3661 1252 50B9     		cbnz	r0, .L382
1892:drivers/inv_mpu.c ****     return 0;
 3662              		.loc 1 1892 0
 3663 1254 064B     		ldr	r3, .L387
 3664 1256 83F82340 		strb	r4, [r3, #35]
 3665              	.L375:
1894:drivers/inv_mpu.c **** 
 3666              		.loc 1 1894 0
 3667 125a 02B0     		add	sp, sp, #8
 3668              		.cfi_remember_state
 3669              		.cfi_def_cfa_offset 8
 3670              		@ sp needed
 3671 125c 10BD     		pop	{r4, pc}
 3672              	.LVL310:
 3673              	.L377:
 3674              		.cfi_restore_state
1885:drivers/inv_mpu.c ****     if (st.chip_cfg.bypass_mode)
 3675              		.loc 1 1885 0
 3676 125e 0023     		movs	r3, #0
 3677 1260 8DF80730 		strb	r3, [sp, #7]
 3678 1264 D7E7     		b	.L378
 3679              	.L381:
 3680              		.cfi_def_cfa_offset 0
 3681              		.cfi_restore 4
 3682              		.cfi_restore 14
1880:drivers/inv_mpu.c **** 
 3683              		.loc 1 1880 0
 3684 1266 0020     		movs	r0, #0
 3685              	.LVL311:
 3686 1268 7047     		bx	lr
 3687              	.L382:
 3688              		.cfi_def_cfa_offset 16
 3689              		.cfi_offset 4, -8
 3690              		.cfi_offset 14, -4
1891:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = enable;
 3691              		.loc 1 1891 0
 3692 126a 4FF0FF30 		mov	r0, #-1
 3693 126e F4E7     		b	.L375
 3694              	.L388:
 3695              		.align	2
 3696              	.L387:
 3697 1270 00000000 		.word	.LANCHOR0
 3698              		.cfi_endproc
 3699              	.LFE95:
 3700              		.size	mpu_set_int_latched, .-mpu_set_int_latched
 3701              		.align	1
 3702              		.global	mpu_lp_accel_mode
 3703              		.syntax unified
ARM GAS  /tmp/cc18izUm.s 			page 112


 3704              		.thumb
 3705              		.thumb_func
 3706              		.fpu softvfp
 3707              		.type	mpu_lp_accel_mode, %function
 3708              	mpu_lp_accel_mode:
 3709              	.LFB68:
 886:drivers/inv_mpu.c ****     unsigned char tmp[2];
 3710              		.loc 1 886 0
 3711              		.cfi_startproc
 3712              		@ args = 0, pretend = 0, frame = 8
 3713              		@ frame_needed = 0, uses_anonymous_args = 0
 3714              	.LVL312:
 889:drivers/inv_mpu.c ****         return -1;
 3715              		.loc 1 889 0
 3716 1274 2828     		cmp	r0, #40
 3717 1276 5FD8     		bhi	.L396
 886:drivers/inv_mpu.c ****     unsigned char tmp[2];
 3718              		.loc 1 886 0
 3719 1278 10B5     		push	{r4, lr}
 3720              		.cfi_def_cfa_offset 8
 3721              		.cfi_offset 4, -8
 3722              		.cfi_offset 14, -4
 3723 127a 82B0     		sub	sp, sp, #8
 3724              		.cfi_def_cfa_offset 16
 3725 127c 0446     		mov	r4, r0
 892:drivers/inv_mpu.c ****         mpu_set_int_latched(0);
 3726              		.loc 1 892 0
 3727 127e B8B9     		cbnz	r0, .L391
 893:drivers/inv_mpu.c ****         tmp[0] = 0;
 3728              		.loc 1 893 0
 3729 1280 0020     		movs	r0, #0
 3730              	.LVL313:
 3731 1282 FFF7FEFF 		bl	mpu_set_int_latched
 3732              	.LVL314:
 894:drivers/inv_mpu.c ****         tmp[1] = BIT_STBY_XYZG;
 3733              		.loc 1 894 0
 3734 1286 0023     		movs	r3, #0
 3735 1288 8DF80430 		strb	r3, [sp, #4]
 895:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 3736              		.loc 1 895 0
 3737 128c 0723     		movs	r3, #7
 3738 128e 8DF80530 		strb	r3, [sp, #5]
 896:drivers/inv_mpu.c ****             return -1;
 3739              		.loc 1 896 0
 3740 1292 2E4B     		ldr	r3, .L405
 3741 1294 1968     		ldr	r1, [r3]
 3742 1296 5868     		ldr	r0, [r3, #4]
 3743 1298 01AB     		add	r3, sp, #4
 3744 129a 0222     		movs	r2, #2
 3745 129c 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 3746 129e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3747 12a0 FFF7FEFF 		bl	I2C_Write
 3748              	.LVL315:
 3749 12a4 0028     		cmp	r0, #0
 3750 12a6 4AD1     		bne	.L397
 898:drivers/inv_mpu.c ****         return 0;
 3751              		.loc 1 898 0
ARM GAS  /tmp/cc18izUm.s 			page 113


 3752 12a8 284B     		ldr	r3, .L405
 3753 12aa 1875     		strb	r0, [r3, #20]
 3754              	.L389:
 961:drivers/inv_mpu.c **** 
 3755              		.loc 1 961 0
 3756 12ac 02B0     		add	sp, sp, #8
 3757              		.cfi_remember_state
 3758              		.cfi_def_cfa_offset 8
 3759              		@ sp needed
 3760 12ae 10BD     		pop	{r4, pc}
 3761              	.LVL316:
 3762              	.L391:
 3763              		.cfi_restore_state
 908:drivers/inv_mpu.c **** #if defined MPU6050
 3764              		.loc 1 908 0
 3765 12b0 0120     		movs	r0, #1
 3766              	.LVL317:
 3767 12b2 FFF7FEFF 		bl	mpu_set_int_latched
 3768              	.LVL318:
 910:drivers/inv_mpu.c ****     if (rate == 1) {
 3769              		.loc 1 910 0
 3770 12b6 2023     		movs	r3, #32
 3771 12b8 8DF80430 		strb	r3, [sp, #4]
 911:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_1_25HZ;
 3772              		.loc 1 911 0
 3773 12bc 012C     		cmp	r4, #1
 3774 12be 26D0     		beq	.L403
 914:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_5HZ;
 3775              		.loc 1 914 0
 3776 12c0 052C     		cmp	r4, #5
 3777 12c2 2BD9     		bls	.L404
 917:drivers/inv_mpu.c ****         tmp[1] = INV_LPA_20HZ;
 3778              		.loc 1 917 0
 3779 12c4 142C     		cmp	r4, #20
 3780 12c6 30D8     		bhi	.L395
 918:drivers/inv_mpu.c ****         mpu_set_lpf(10);
 3781              		.loc 1 918 0
 3782 12c8 0223     		movs	r3, #2
 3783 12ca 8DF80530 		strb	r3, [sp, #5]
 919:drivers/inv_mpu.c ****     } else {
 3784              		.loc 1 919 0
 3785 12ce 0A20     		movs	r0, #10
 3786 12d0 FFF7FEFF 		bl	mpu_set_lpf
 3787              	.LVL319:
 3788              	.L393:
 924:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
 3789              		.loc 1 924 0
 3790 12d4 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 3791 12d8 9B01     		lsls	r3, r3, #6
 3792 12da 43F00703 		orr	r3, r3, #7
 3793 12de 8DF80530 		strb	r3, [sp, #5]
 925:drivers/inv_mpu.c ****         return -1;
 3794              		.loc 1 925 0
 3795 12e2 1A4B     		ldr	r3, .L405
 3796 12e4 1968     		ldr	r1, [r3]
 3797 12e6 5868     		ldr	r0, [r3, #4]
 3798 12e8 01AB     		add	r3, sp, #4
ARM GAS  /tmp/cc18izUm.s 			page 114


 3799 12ea 0222     		movs	r2, #2
 3800 12ec 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 3801 12ee 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3802 12f0 FFF7FEFF 		bl	I2C_Write
 3803              	.LVL320:
 3804 12f4 30BB     		cbnz	r0, .L398
 955:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = 0;
 3805              		.loc 1 955 0
 3806 12f6 154B     		ldr	r3, .L405
 3807 12f8 0822     		movs	r2, #8
 3808 12fa 9A72     		strb	r2, [r3, #10]
 956:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 1;
 3809              		.loc 1 956 0
 3810 12fc 0024     		movs	r4, #0
 3811 12fe 1C73     		strb	r4, [r3, #12]
 957:drivers/inv_mpu.c ****     mpu_configure_fifo(0);
 3812              		.loc 1 957 0
 3813 1300 0122     		movs	r2, #1
 3814 1302 1A75     		strb	r2, [r3, #20]
 958:drivers/inv_mpu.c **** 
 3815              		.loc 1 958 0
 3816 1304 2046     		mov	r0, r4
 3817 1306 FFF7FEFF 		bl	mpu_configure_fifo
 3818              	.LVL321:
 960:drivers/inv_mpu.c **** }
 3819              		.loc 1 960 0
 3820 130a 2046     		mov	r0, r4
 3821 130c CEE7     		b	.L389
 3822              	.L403:
 912:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 3823              		.loc 1 912 0
 3824 130e 0023     		movs	r3, #0
 3825 1310 8DF80530 		strb	r3, [sp, #5]
 913:drivers/inv_mpu.c ****     } else if (rate <= 5) {
 3826              		.loc 1 913 0
 3827 1314 0520     		movs	r0, #5
 3828 1316 FFF7FEFF 		bl	mpu_set_lpf
 3829              	.LVL322:
 3830 131a DBE7     		b	.L393
 3831              	.L404:
 915:drivers/inv_mpu.c ****         mpu_set_lpf(5);
 3832              		.loc 1 915 0
 3833 131c 0123     		movs	r3, #1
 3834 131e 8DF80530 		strb	r3, [sp, #5]
 916:drivers/inv_mpu.c ****     } else if (rate <= 20) {
 3835              		.loc 1 916 0
 3836 1322 0520     		movs	r0, #5
 3837 1324 FFF7FEFF 		bl	mpu_set_lpf
 3838              	.LVL323:
 3839 1328 D4E7     		b	.L393
 3840              	.L395:
 921:drivers/inv_mpu.c ****         mpu_set_lpf(20);
 3841              		.loc 1 921 0
 3842 132a 0323     		movs	r3, #3
 3843 132c 8DF80530 		strb	r3, [sp, #5]
 922:drivers/inv_mpu.c ****     }
 3844              		.loc 1 922 0
ARM GAS  /tmp/cc18izUm.s 			page 115


 3845 1330 1420     		movs	r0, #20
 3846 1332 FFF7FEFF 		bl	mpu_set_lpf
 3847              	.LVL324:
 3848 1336 CDE7     		b	.L393
 3849              	.LVL325:
 3850              	.L396:
 3851              		.cfi_def_cfa_offset 0
 3852              		.cfi_restore 4
 3853              		.cfi_restore 14
 890:drivers/inv_mpu.c **** 
 3854              		.loc 1 890 0
 3855 1338 4FF0FF30 		mov	r0, #-1
 3856              	.LVL326:
 3857 133c 7047     		bx	lr
 3858              	.L397:
 3859              		.cfi_def_cfa_offset 16
 3860              		.cfi_offset 4, -8
 3861              		.cfi_offset 14, -4
 897:drivers/inv_mpu.c ****         st.chip_cfg.lp_accel_mode = 0;
 3862              		.loc 1 897 0
 3863 133e 4FF0FF30 		mov	r0, #-1
 3864 1342 B3E7     		b	.L389
 3865              	.L398:
 926:drivers/inv_mpu.c **** #elif defined MPU6500
 3866              		.loc 1 926 0
 3867 1344 4FF0FF30 		mov	r0, #-1
 3868 1348 B0E7     		b	.L389
 3869              	.L406:
 3870 134a 00BF     		.align	2
 3871              	.L405:
 3872 134c 00000000 		.word	.LANCHOR0
 3873              		.cfi_endproc
 3874              	.LFE68:
 3875              		.size	mpu_lp_accel_mode, .-mpu_lp_accel_mode
 3876              		.align	1
 3877              		.global	mpu_set_sample_rate
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu softvfp
 3882              		.type	mpu_set_sample_rate, %function
 3883              	mpu_set_sample_rate:
 3884              	.LFB81:
1365:drivers/inv_mpu.c ****     unsigned char data;
 3885              		.loc 1 1365 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 8
 3888              		@ frame_needed = 0, uses_anonymous_args = 0
 3889              	.LVL327:
1368:drivers/inv_mpu.c ****         return -1;
 3890              		.loc 1 1368 0
 3891 1350 254B     		ldr	r3, .L419
 3892 1352 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 3893 1354 002B     		cmp	r3, #0
 3894 1356 3ED0     		beq	.L411
1371:drivers/inv_mpu.c ****         return -1;
 3895              		.loc 1 1371 0
ARM GAS  /tmp/cc18izUm.s 			page 116


 3896 1358 234B     		ldr	r3, .L419
 3897 135a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3898 135e 002B     		cmp	r3, #0
 3899 1360 3CD1     		bne	.L412
1365:drivers/inv_mpu.c ****     unsigned char data;
 3900              		.loc 1 1365 0
 3901 1362 10B5     		push	{r4, lr}
 3902              		.cfi_def_cfa_offset 8
 3903              		.cfi_offset 4, -8
 3904              		.cfi_offset 14, -4
 3905 1364 82B0     		sub	sp, sp, #8
 3906              		.cfi_def_cfa_offset 16
 3907 1366 0446     		mov	r4, r0
1374:drivers/inv_mpu.c ****             if (rate && (rate <= 40)) {
 3908              		.loc 1 1374 0
 3909 1368 1F4B     		ldr	r3, .L419
 3910 136a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 3911 136c 33B1     		cbz	r3, .L409
1375:drivers/inv_mpu.c ****                 /* Just stay in low-power accel mode. */
 3912              		.loc 1 1375 0
 3913 136e 431E     		subs	r3, r0, #1
 3914 1370 9BB2     		uxth	r3, r3
 3915 1372 272B     		cmp	r3, #39
 3916 1374 2AD9     		bls	.L418
1383:drivers/inv_mpu.c ****         }
 3917              		.loc 1 1383 0
 3918 1376 0020     		movs	r0, #0
 3919              	.LVL328:
 3920 1378 FFF7FEFF 		bl	mpu_lp_accel_mode
 3921              	.LVL329:
 3922              	.L409:
 3923 137c B4F57A7F 		cmp	r4, #1000
 3924 1380 28BF     		it	cs
 3925 1382 4FF47A74 		movcs	r4, #1000
 3926              	.LVL330:
1390:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->rate_div, 1, &data))
 3927              		.loc 1 1390 0
 3928 1386 042C     		cmp	r4, #4
 3929 1388 38BF     		it	cc
 3930 138a 0424     		movcc	r4, #4
 3931              	.LVL331:
 3932 138c 4FF47A73 		mov	r3, #1000
 3933 1390 93FBF4F4 		sdiv	r4, r3, r4
 3934 1394 013C     		subs	r4, r4, #1
 3935 1396 02AB     		add	r3, sp, #8
 3936 1398 03F8014D 		strb	r4, [r3, #-1]!
1391:drivers/inv_mpu.c ****             return -1;
 3937              		.loc 1 1391 0
 3938 139c 124A     		ldr	r2, .L419
 3939 139e 1168     		ldr	r1, [r2]
 3940 13a0 5068     		ldr	r0, [r2, #4]
 3941 13a2 0122     		movs	r2, #1
 3942 13a4 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 3943 13a6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3944 13a8 FFF7FEFF 		bl	I2C_Write
 3945              	.LVL332:
 3946 13ac C8B9     		cbnz	r0, .L413
ARM GAS  /tmp/cc18izUm.s 			page 117


1394:drivers/inv_mpu.c **** 
 3947              		.loc 1 1394 0
 3948 13ae 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 3949 13b2 431C     		adds	r3, r0, #1
 3950 13b4 4FF47A70 		mov	r0, #1000
 3951 13b8 90FBF3F0 		sdiv	r0, r0, r3
 3952 13bc 0A4B     		ldr	r3, .L419
 3953 13be D881     		strh	r0, [r3, #14]	@ movhi
1401:drivers/inv_mpu.c ****         return 0;
 3954              		.loc 1 1401 0
 3955 13c0 4008     		lsrs	r0, r0, #1
 3956 13c2 FFF7FEFF 		bl	mpu_set_lpf
 3957              	.LVL333:
1402:drivers/inv_mpu.c ****     }
 3958              		.loc 1 1402 0
 3959 13c6 0020     		movs	r0, #0
 3960              	.L407:
1404:drivers/inv_mpu.c **** 
 3961              		.loc 1 1404 0
 3962 13c8 02B0     		add	sp, sp, #8
 3963              		.cfi_remember_state
 3964              		.cfi_def_cfa_offset 8
 3965              		@ sp needed
 3966 13ca 10BD     		pop	{r4, pc}
 3967              	.LVL334:
 3968              	.L418:
 3969              		.cfi_restore_state
1377:drivers/inv_mpu.c ****                 return 0;
 3970              		.loc 1 1377 0
 3971 13cc C0B2     		uxtb	r0, r0
 3972              	.LVL335:
 3973 13ce FFF7FEFF 		bl	mpu_lp_accel_mode
 3974              	.LVL336:
1378:drivers/inv_mpu.c ****             }
 3975              		.loc 1 1378 0
 3976 13d2 0020     		movs	r0, #0
 3977 13d4 F8E7     		b	.L407
 3978              	.LVL337:
 3979              	.L411:
 3980              		.cfi_def_cfa_offset 0
 3981              		.cfi_restore 4
 3982              		.cfi_restore 14
1369:drivers/inv_mpu.c **** 
 3983              		.loc 1 1369 0
 3984 13d6 4FF0FF30 		mov	r0, #-1
 3985              	.LVL338:
 3986 13da 7047     		bx	lr
 3987              	.LVL339:
 3988              	.L412:
1372:drivers/inv_mpu.c ****     else {
 3989              		.loc 1 1372 0
 3990 13dc 4FF0FF30 		mov	r0, #-1
 3991              	.LVL340:
 3992 13e0 7047     		bx	lr
 3993              	.LVL341:
 3994              	.L413:
 3995              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc18izUm.s 			page 118


 3996              		.cfi_offset 4, -8
 3997              		.cfi_offset 14, -4
1392:drivers/inv_mpu.c **** 
 3998              		.loc 1 1392 0
 3999 13e2 4FF0FF30 		mov	r0, #-1
 4000 13e6 EFE7     		b	.L407
 4001              	.L420:
 4002              		.align	2
 4003              	.L419:
 4004 13e8 00000000 		.word	.LANCHOR0
 4005              		.cfi_endproc
 4006              	.LFE81:
 4007              		.size	mpu_set_sample_rate, .-mpu_set_sample_rate
 4008              		.align	1
 4009              		.global	mpu_set_sensors
 4010              		.syntax unified
 4011              		.thumb
 4012              		.thumb_func
 4013              		.fpu softvfp
 4014              		.type	mpu_set_sensors, %function
 4015              	mpu_set_sensors:
 4016              	.LFB89:
1590:drivers/inv_mpu.c ****     unsigned char data;
 4017              		.loc 1 1590 0
 4018              		.cfi_startproc
 4019              		@ args = 0, pretend = 0, frame = 8
 4020              		@ frame_needed = 0, uses_anonymous_args = 0
 4021              	.LVL342:
 4022 13ec 10B5     		push	{r4, lr}
 4023              		.cfi_def_cfa_offset 8
 4024              		.cfi_offset 4, -8
 4025              		.cfi_offset 14, -4
 4026 13ee 82B0     		sub	sp, sp, #8
 4027              		.cfi_def_cfa_offset 16
 4028 13f0 0446     		mov	r4, r0
1596:drivers/inv_mpu.c ****         data = INV_CLK_PLL;
 4029              		.loc 1 1596 0
 4030 13f2 10F0700F 		tst	r0, #112
 4031 13f6 50D0     		beq	.L422
1597:drivers/inv_mpu.c ****     else if (sensors)
 4032              		.loc 1 1597 0
 4033 13f8 0123     		movs	r3, #1
 4034 13fa 8DF80730 		strb	r3, [sp, #7]
 4035              	.L423:
1602:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
 4036              		.loc 1 1602 0
 4037 13fe 3B4B     		ldr	r3, .L439
 4038 1400 1968     		ldr	r1, [r3]
 4039 1402 5868     		ldr	r0, [r3, #4]
 4040              	.LVL343:
 4041 1404 0DF10703 		add	r3, sp, #7
 4042 1408 0122     		movs	r2, #1
 4043 140a 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4044 140c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4045 140e FFF7FEFF 		bl	I2C_Write
 4046              	.LVL344:
 4047 1412 0028     		cmp	r0, #0
ARM GAS  /tmp/cc18izUm.s 			page 119


 4048 1414 5DD1     		bne	.L425
1606:drivers/inv_mpu.c **** 
 4049              		.loc 1 1606 0
 4050 1416 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4051 141a 23F04003 		bic	r3, r3, #64
 4052 141e 334A     		ldr	r2, .L439
 4053 1420 1373     		strb	r3, [r2, #12]
1608:drivers/inv_mpu.c ****     if (!(sensors & INV_X_GYRO))
 4054              		.loc 1 1608 0
 4055 1422 0023     		movs	r3, #0
 4056 1424 8DF80730 		strb	r3, [sp, #7]
1609:drivers/inv_mpu.c ****         data |= BIT_STBY_XG;
 4057              		.loc 1 1609 0
 4058 1428 14F0400F 		tst	r4, #64
 4059 142c 4DD0     		beq	.L435
 4060              	.L429:
1611:drivers/inv_mpu.c ****         data |= BIT_STBY_YG;
 4061              		.loc 1 1611 0
 4062 142e 14F0200F 		tst	r4, #32
 4063 1432 05D1     		bne	.L430
1612:drivers/inv_mpu.c ****     if (!(sensors & INV_Z_GYRO))
 4064              		.loc 1 1612 0
 4065 1434 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4066 1438 43F00203 		orr	r3, r3, #2
 4067 143c 8DF80730 		strb	r3, [sp, #7]
 4068              	.L430:
1613:drivers/inv_mpu.c ****         data |= BIT_STBY_ZG;
 4069              		.loc 1 1613 0
 4070 1440 14F0100F 		tst	r4, #16
 4071 1444 05D1     		bne	.L431
1614:drivers/inv_mpu.c ****     if (!(sensors & INV_XYZ_ACCEL))
 4072              		.loc 1 1614 0
 4073 1446 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4074 144a 43F00103 		orr	r3, r3, #1
 4075 144e 8DF80730 		strb	r3, [sp, #7]
 4076              	.L431:
1615:drivers/inv_mpu.c ****         data |= BIT_STBY_XYZA;
 4077              		.loc 1 1615 0
 4078 1452 14F0080F 		tst	r4, #8
 4079 1456 05D1     		bne	.L432
1616:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_2, 1, &data)) {
 4080              		.loc 1 1616 0
 4081 1458 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4082 145c 43F03803 		orr	r3, r3, #56
 4083 1460 8DF80730 		strb	r3, [sp, #7]
 4084              	.L432:
1617:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
 4085              		.loc 1 1617 0
 4086 1464 214B     		ldr	r3, .L439
 4087 1466 1968     		ldr	r1, [r3]
 4088 1468 5868     		ldr	r0, [r3, #4]
 4089 146a 0DF10703 		add	r3, sp, #7
 4090 146e 0122     		movs	r2, #1
 4091 1470 C97C     		ldrb	r1, [r1, #19]	@ zero_extendqisi2
 4092 1472 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4093 1474 FFF7FEFF 		bl	I2C_Write
 4094              	.LVL345:
ARM GAS  /tmp/cc18izUm.s 			page 120


 4095 1478 88BB     		cbnz	r0, .L438
1622:drivers/inv_mpu.c ****         /* Latched interrupts only used in LP accel mode. */
 4096              		.loc 1 1622 0
 4097 147a 14F0F70F 		tst	r4, #247
 4098 147e 02D0     		beq	.L434
1624:drivers/inv_mpu.c **** 
 4099              		.loc 1 1624 0
 4100 1480 0020     		movs	r0, #0
 4101 1482 FFF7FEFF 		bl	mpu_set_int_latched
 4102              	.LVL346:
 4103              	.L434:
1655:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
 4104              		.loc 1 1655 0
 4105 1486 194B     		ldr	r3, .L439
 4106 1488 9C72     		strb	r4, [r3, #10]
1656:drivers/inv_mpu.c ****     DelayMs(50);
 4107              		.loc 1 1656 0
 4108 148a 0024     		movs	r4, #0
 4109 148c 1C75     		strb	r4, [r3, #20]
1657:drivers/inv_mpu.c ****     return 0;
 4110              		.loc 1 1657 0
 4111 148e 3220     		movs	r0, #50
 4112 1490 FFF7FEFF 		bl	DelayMs
 4113              	.LVL347:
1658:drivers/inv_mpu.c **** }
 4114              		.loc 1 1658 0
 4115 1494 2046     		mov	r0, r4
 4116              	.L421:
1659:drivers/inv_mpu.c **** 
 4117              		.loc 1 1659 0
 4118 1496 02B0     		add	sp, sp, #8
 4119              		.cfi_remember_state
 4120              		.cfi_def_cfa_offset 8
 4121              		@ sp needed
 4122 1498 10BD     		pop	{r4, pc}
 4123              	.LVL348:
 4124              	.L422:
 4125              		.cfi_restore_state
1598:drivers/inv_mpu.c ****         data = 0;
 4126              		.loc 1 1598 0
 4127 149a 18B1     		cbz	r0, .L424
1599:drivers/inv_mpu.c ****     else
 4128              		.loc 1 1599 0
 4129 149c 0023     		movs	r3, #0
 4130 149e 8DF80730 		strb	r3, [sp, #7]
 4131 14a2 ACE7     		b	.L423
 4132              	.L424:
1601:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &data)) {
 4133              		.loc 1 1601 0
 4134 14a4 02AB     		add	r3, sp, #8
 4135 14a6 4022     		movs	r2, #64
 4136 14a8 03F8012D 		strb	r2, [r3, #-1]!
1602:drivers/inv_mpu.c ****         st.chip_cfg.sensors = 0;
 4137              		.loc 1 1602 0
 4138 14ac 0F4A     		ldr	r2, .L439
 4139 14ae 1168     		ldr	r1, [r2]
 4140 14b0 5068     		ldr	r0, [r2, #4]
ARM GAS  /tmp/cc18izUm.s 			page 121


 4141              	.LVL349:
 4142 14b2 0122     		movs	r2, #1
 4143 14b4 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4144 14b6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4145 14b8 FFF7FEFF 		bl	I2C_Write
 4146              	.LVL350:
 4147 14bc 48B9     		cbnz	r0, .L425
1606:drivers/inv_mpu.c **** 
 4148              		.loc 1 1606 0
 4149 14be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4150 14c2 23F04003 		bic	r3, r3, #64
 4151 14c6 094A     		ldr	r2, .L439
 4152 14c8 1373     		strb	r3, [r2, #12]
 4153              	.L435:
1610:drivers/inv_mpu.c ****     if (!(sensors & INV_Y_GYRO))
 4154              		.loc 1 1610 0
 4155 14ca 0423     		movs	r3, #4
 4156 14cc 8DF80730 		strb	r3, [sp, #7]
 4157 14d0 ADE7     		b	.L429
 4158              	.L425:
1603:drivers/inv_mpu.c ****         return -1;
 4159              		.loc 1 1603 0
 4160 14d2 0022     		movs	r2, #0
 4161 14d4 054B     		ldr	r3, .L439
 4162 14d6 9A72     		strb	r2, [r3, #10]
1604:drivers/inv_mpu.c ****     }
 4163              		.loc 1 1604 0
 4164 14d8 4FF0FF30 		mov	r0, #-1
 4165 14dc DBE7     		b	.L421
 4166              	.L438:
1618:drivers/inv_mpu.c ****         return -1;
 4167              		.loc 1 1618 0
 4168 14de 0022     		movs	r2, #0
 4169 14e0 024B     		ldr	r3, .L439
 4170 14e2 9A72     		strb	r2, [r3, #10]
1619:drivers/inv_mpu.c ****     }
 4171              		.loc 1 1619 0
 4172 14e4 4FF0FF30 		mov	r0, #-1
 4173 14e8 D5E7     		b	.L421
 4174              	.L440:
 4175 14ea 00BF     		.align	2
 4176              	.L439:
 4177 14ec 00000000 		.word	.LANCHOR0
 4178              		.cfi_endproc
 4179              	.LFE89:
 4180              		.size	mpu_set_sensors, .-mpu_set_sensors
 4181              		.align	1
 4182              		.global	mpu_init
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4186              		.fpu softvfp
 4187              		.type	mpu_init, %function
 4188              	mpu_init:
 4189              	.LFB67:
 756:drivers/inv_mpu.c ****     unsigned char data[6], rev;
 4190              		.loc 1 756 0
ARM GAS  /tmp/cc18izUm.s 			page 122


 4191              		.cfi_startproc
 4192              		@ args = 0, pretend = 0, frame = 8
 4193              		@ frame_needed = 0, uses_anonymous_args = 0
 4194 14f0 10B5     		push	{r4, lr}
 4195              		.cfi_def_cfa_offset 8
 4196              		.cfi_offset 4, -8
 4197              		.cfi_offset 14, -4
 4198 14f2 82B0     		sub	sp, sp, #8
 4199              		.cfi_def_cfa_offset 16
 760:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 4200              		.loc 1 760 0
 4201 14f4 02AB     		add	r3, sp, #8
 4202 14f6 8022     		movs	r2, #128
 4203 14f8 03F8082D 		strb	r2, [r3, #-8]!
 761:drivers/inv_mpu.c ****         return -1;
 4204              		.loc 1 761 0
 4205 14fc 664A     		ldr	r2, .L463
 4206 14fe 1168     		ldr	r1, [r2]
 4207 1500 5068     		ldr	r0, [r2, #4]
 4208 1502 0122     		movs	r2, #1
 4209 1504 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4210 1506 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4211 1508 FFF7FEFF 		bl	I2C_Write
 4212              	.LVL351:
 4213 150c 0028     		cmp	r0, #0
 4214 150e 40F0A480 		bne	.L449
 763:drivers/inv_mpu.c **** 
 4215              		.loc 1 763 0
 4216 1512 6420     		movs	r0, #100
 4217 1514 FFF7FEFF 		bl	DelayMs
 4218              	.LVL352:
 766:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
 4219              		.loc 1 766 0
 4220 1518 02AB     		add	r3, sp, #8
 4221 151a 0022     		movs	r2, #0
 4222 151c 03F8082D 		strb	r2, [r3, #-8]!
 767:drivers/inv_mpu.c ****         return -1;
 4223              		.loc 1 767 0
 4224 1520 5D4A     		ldr	r2, .L463
 4225 1522 1168     		ldr	r1, [r2]
 4226 1524 5068     		ldr	r0, [r2, #4]
 4227 1526 0122     		movs	r2, #1
 4228 1528 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 4229 152a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4230 152c FFF7FEFF 		bl	I2C_Write
 4231              	.LVL353:
 4232 1530 0028     		cmp	r0, #0
 4233 1532 40F09580 		bne	.L450
 772:drivers/inv_mpu.c ****         return -1;
 4234              		.loc 1 772 0
 4235 1536 584B     		ldr	r3, .L463
 4236 1538 1968     		ldr	r1, [r3]
 4237 153a 5868     		ldr	r0, [r3, #4]
 4238 153c 6B46     		mov	r3, sp
 4239 153e 0622     		movs	r2, #6
 4240 1540 897D     		ldrb	r1, [r1, #22]	@ zero_extendqisi2
 4241 1542 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 123


 4242 1544 FFF7FEFF 		bl	I2C_Read
 4243              	.LVL354:
 4244 1548 0028     		cmp	r0, #0
 4245 154a 40F08C80 		bne	.L451
 774:drivers/inv_mpu.c ****         (data[1] & 0x01);
 4246              		.loc 1 774 0
 4247 154e 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 4248 1552 8900     		lsls	r1, r1, #2
 4249 1554 01F00401 		and	r1, r1, #4
 4250 1558 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 4251 155c 5B00     		lsls	r3, r3, #1
 4252 155e 03F00203 		and	r3, r3, #2
 4253 1562 1943     		orrs	r1, r1, r3
 775:drivers/inv_mpu.c **** 
 4254              		.loc 1 775 0
 4255 1564 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 4256 1568 03F00103 		and	r3, r3, #1
 4257              	.LVL355:
 777:drivers/inv_mpu.c ****         /* Congrats, these parts are better. */
 4258              		.loc 1 777 0
 4259 156c 1943     		orrs	r1, r1, r3
 4260              	.LVL356:
 4261 156e 52D0     		beq	.L443
 779:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 4262              		.loc 1 779 0
 4263 1570 0129     		cmp	r1, #1
 4264 1572 46D0     		beq	.L460
 781:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 0;
 4265              		.loc 1 781 0
 4266 1574 0229     		cmp	r1, #2
 4267 1576 48D1     		bne	.L446
 782:drivers/inv_mpu.c ****         else {
 4268              		.loc 1 782 0
 4269 1578 0022     		movs	r2, #0
 4270 157a 474B     		ldr	r3, .L463
 4271              	.LVL357:
 4272 157c DA74     		strb	r2, [r3, #19]
 4273              	.LVL358:
 4274              	.L445:
 820:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
 4275              		.loc 1 820 0
 4276 157e 464B     		ldr	r3, .L463
 4277 1580 FF22     		movs	r2, #255
 4278 1582 9A72     		strb	r2, [r3, #10]
 821:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 4279              		.loc 1 821 0
 4280 1584 1A72     		strb	r2, [r3, #8]
 822:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 4281              		.loc 1 822 0
 4282 1586 5A72     		strb	r2, [r3, #9]
 823:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 4283              		.loc 1 823 0
 4284 1588 DA72     		strb	r2, [r3, #11]
 824:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 4285              		.loc 1 824 0
 4286 158a 4FF6FF71 		movw	r1, #65535
 4287 158e D981     		strh	r1, [r3, #14]	@ movhi
ARM GAS  /tmp/cc18izUm.s 			page 124


 825:drivers/inv_mpu.c ****     st.chip_cfg.bypass_mode = 0xFF;
 4288              		.loc 1 825 0
 4289 1590 1A74     		strb	r2, [r3, #16]
 826:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
 4290              		.loc 1 826 0
 4291 1592 9A74     		strb	r2, [r3, #18]
 831:drivers/inv_mpu.c ****     /* Handled in next call to mpu_set_bypass. */
 4292              		.loc 1 831 0
 4293 1594 0122     		movs	r2, #1
 4294 1596 1A73     		strb	r2, [r3, #12]
 833:drivers/inv_mpu.c ****     st.chip_cfg.latched_int = 0;
 4295              		.loc 1 833 0
 4296 1598 83F82220 		strb	r2, [r3, #34]
 834:drivers/inv_mpu.c ****     st.chip_cfg.int_motion_only = 0;
 4297              		.loc 1 834 0
 4298 159c 0022     		movs	r2, #0
 4299 159e 83F82320 		strb	r2, [r3, #35]
 835:drivers/inv_mpu.c ****     st.chip_cfg.lp_accel_mode = 0;
 4300              		.loc 1 835 0
 4301 15a2 5A75     		strb	r2, [r3, #21]
 836:drivers/inv_mpu.c ****     memset(&st.chip_cfg.cache, 0, sizeof(st.chip_cfg.cache));
 4302              		.loc 1 836 0
 4303 15a4 1A75     		strb	r2, [r3, #20]
 837:drivers/inv_mpu.c ****     st.chip_cfg.dmp_on = 0;
 4304              		.loc 1 837 0
 4305 15a6 C3F81620 		str	r2, [r3, #22]	@ unaligned
 4306 15aa C3F81A20 		str	r2, [r3, #26]	@ unaligned
 4307 15ae C3F81E20 		str	r2, [r3, #30]	@ unaligned
 838:drivers/inv_mpu.c ****     st.chip_cfg.dmp_loaded = 0;
 4308              		.loc 1 838 0
 4309 15b2 83F82420 		strb	r2, [r3, #36]
 839:drivers/inv_mpu.c ****     st.chip_cfg.dmp_sample_rate = 0;
 4310              		.loc 1 839 0
 4311 15b6 83F82520 		strb	r2, [r3, #37]
 840:drivers/inv_mpu.c **** 
 4312              		.loc 1 840 0
 4313 15ba DA84     		strh	r2, [r3, #38]	@ movhi
 842:drivers/inv_mpu.c ****         return -1;
 4314              		.loc 1 842 0
 4315 15bc 4FF4FA60 		mov	r0, #2000
 4316 15c0 FFF7FEFF 		bl	mpu_set_gyro_fsr
 4317              	.LVL359:
 4318 15c4 0028     		cmp	r0, #0
 4319 15c6 54D1     		bne	.L453
 844:drivers/inv_mpu.c ****         return -1;
 4320              		.loc 1 844 0
 4321 15c8 0220     		movs	r0, #2
 4322 15ca FFF7FEFF 		bl	mpu_set_accel_fsr
 4323              	.LVL360:
 4324 15ce 0028     		cmp	r0, #0
 4325 15d0 52D1     		bne	.L454
 846:drivers/inv_mpu.c ****         return -1;
 4326              		.loc 1 846 0
 4327 15d2 2A20     		movs	r0, #42
 4328 15d4 FFF7FEFF 		bl	mpu_set_lpf
 4329              	.LVL361:
 4330 15d8 0028     		cmp	r0, #0
ARM GAS  /tmp/cc18izUm.s 			page 125


 4331 15da 50D1     		bne	.L455
 848:drivers/inv_mpu.c ****         return -1;
 4332              		.loc 1 848 0
 4333 15dc 3220     		movs	r0, #50
 4334 15de FFF7FEFF 		bl	mpu_set_sample_rate
 4335              	.LVL362:
 4336 15e2 0028     		cmp	r0, #0
 4337 15e4 4ED1     		bne	.L456
 850:drivers/inv_mpu.c ****         return -1;
 4338              		.loc 1 850 0
 4339 15e6 FFF7FEFF 		bl	mpu_configure_fifo
 4340              	.LVL363:
 4341 15ea 0028     		cmp	r0, #0
 4342 15ec 4DD1     		bne	.L457
 862:drivers/inv_mpu.c ****         return -1;
 4343              		.loc 1 862 0
 4344 15ee FFF7FEFF 		bl	mpu_set_bypass
 4345              	.LVL364:
 4346 15f2 0446     		mov	r4, r0
 4347 15f4 0028     		cmp	r0, #0
 4348 15f6 4BD1     		bne	.L458
 866:drivers/inv_mpu.c ****     return 0;
 4349              		.loc 1 866 0
 4350 15f8 FFF7FEFF 		bl	mpu_set_sensors
 4351              	.LVL365:
 4352              	.L441:
 868:drivers/inv_mpu.c **** 
 4353              		.loc 1 868 0
 4354 15fc 2046     		mov	r0, r4
 4355 15fe 02B0     		add	sp, sp, #8
 4356              		.cfi_remember_state
 4357              		.cfi_def_cfa_offset 8
 4358              		@ sp needed
 4359 1600 10BD     		pop	{r4, pc}
 4360              	.LVL366:
 4361              	.L460:
 4362              		.cfi_restore_state
 780:drivers/inv_mpu.c ****         else if (rev == 2)
 4363              		.loc 1 780 0
 4364 1602 0122     		movs	r2, #1
 4365 1604 244B     		ldr	r3, .L463
 4366              	.LVL367:
 4367 1606 DA74     		strb	r2, [r3, #19]
 4368 1608 B9E7     		b	.L445
 4369              	.LVL368:
 4370              	.L446:
 784:drivers/inv_mpu.c ****             return -1;
 4371              		.loc 1 784 0
 4372 160a 2448     		ldr	r0, .L463+4
 4373 160c FFF7FEFF 		bl	printf
 4374              	.LVL369:
 785:drivers/inv_mpu.c ****         }
 4375              		.loc 1 785 0
 4376 1610 4FF0FF34 		mov	r4, #-1
 4377 1614 F2E7     		b	.L441
 4378              	.LVL370:
 4379              	.L443:
ARM GAS  /tmp/cc18izUm.s 			page 126


 788:drivers/inv_mpu.c ****             return -1;
 4380              		.loc 1 788 0
 4381 1616 204B     		ldr	r3, .L463
 4382              	.LVL371:
 4383 1618 1968     		ldr	r1, [r3]
 4384 161a 5868     		ldr	r0, [r3, #4]
 4385 161c 6B46     		mov	r3, sp
 4386 161e 0122     		movs	r2, #1
 4387 1620 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 4388 1622 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4389 1624 FFF7FEFF 		bl	I2C_Read
 4390              	.LVL372:
 4391 1628 00BB     		cbnz	r0, .L452
 790:drivers/inv_mpu.c ****         if (!rev) {
 4392              		.loc 1 790 0
 4393 162a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 4394              	.LVL373:
 791:drivers/inv_mpu.c ****             log_e("Product ID read as 0 indicates device is either incompatible or an MPU3050.\r\n"
 4395              		.loc 1 791 0
 4396 162e 13F00F03 		ands	r3, r3, #15
 4397              	.LVL374:
 4398 1632 05D0     		beq	.L461
 794:drivers/inv_mpu.c ****             log_i("Half sensitivity part found.\r\n");
 4399              		.loc 1 794 0
 4400 1634 042B     		cmp	r3, #4
 4401 1636 09D0     		beq	.L462
 798:drivers/inv_mpu.c ****     }
 4402              		.loc 1 798 0
 4403 1638 0022     		movs	r2, #0
 4404 163a 174B     		ldr	r3, .L463
 4405 163c DA74     		strb	r2, [r3, #19]
 4406 163e 9EE7     		b	.L445
 4407              	.L461:
 792:drivers/inv_mpu.c ****             return -1;
 4408              		.loc 1 792 0
 4409 1640 1748     		ldr	r0, .L463+8
 4410 1642 FFF7FEFF 		bl	puts
 4411              	.LVL375:
 793:drivers/inv_mpu.c ****         } else if (rev == 4) {
 4412              		.loc 1 793 0
 4413 1646 4FF0FF34 		mov	r4, #-1
 4414 164a D7E7     		b	.L441
 4415              	.LVL376:
 4416              	.L462:
 795:drivers/inv_mpu.c ****             st.chip_cfg.accel_half = 1;
 4417              		.loc 1 795 0
 4418 164c 1548     		ldr	r0, .L463+12
 4419 164e FFF7FEFF 		bl	puts
 4420              	.LVL377:
 796:drivers/inv_mpu.c ****         } else
 4421              		.loc 1 796 0
 4422 1652 0122     		movs	r2, #1
 4423 1654 104B     		ldr	r3, .L463
 4424 1656 DA74     		strb	r2, [r3, #19]
 4425 1658 91E7     		b	.L445
 4426              	.L449:
 762:drivers/inv_mpu.c ****     DelayMs(100);
ARM GAS  /tmp/cc18izUm.s 			page 127


 4427              		.loc 1 762 0
 4428 165a 4FF0FF34 		mov	r4, #-1
 4429 165e CDE7     		b	.L441
 4430              	.L450:
 768:drivers/inv_mpu.c **** 
 4431              		.loc 1 768 0
 4432 1660 4FF0FF34 		mov	r4, #-1
 4433 1664 CAE7     		b	.L441
 4434              	.L451:
 773:drivers/inv_mpu.c ****     rev = ((data[5] & 0x01) << 2) | ((data[3] & 0x01) << 1) |
 4435              		.loc 1 773 0
 4436 1666 4FF0FF34 		mov	r4, #-1
 4437 166a C7E7     		b	.L441
 4438              	.L452:
 789:drivers/inv_mpu.c ****         rev = data[0] & 0x0F;
 4439              		.loc 1 789 0
 4440 166c 4FF0FF34 		mov	r4, #-1
 4441 1670 C4E7     		b	.L441
 4442              	.L453:
 843:drivers/inv_mpu.c ****     if (mpu_set_accel_fsr(2))
 4443              		.loc 1 843 0
 4444 1672 4FF0FF34 		mov	r4, #-1
 4445 1676 C1E7     		b	.L441
 4446              	.L454:
 845:drivers/inv_mpu.c ****     if (mpu_set_lpf(42))
 4447              		.loc 1 845 0
 4448 1678 4FF0FF34 		mov	r4, #-1
 4449 167c BEE7     		b	.L441
 4450              	.L455:
 847:drivers/inv_mpu.c ****     if (mpu_set_sample_rate(50))
 4451              		.loc 1 847 0
 4452 167e 4FF0FF34 		mov	r4, #-1
 4453 1682 BBE7     		b	.L441
 4454              	.L456:
 849:drivers/inv_mpu.c ****     if (mpu_configure_fifo(0))
 4455              		.loc 1 849 0
 4456 1684 4FF0FF34 		mov	r4, #-1
 4457 1688 B8E7     		b	.L441
 4458              	.L457:
 851:drivers/inv_mpu.c **** 
 4459              		.loc 1 851 0
 4460 168a 4FF0FF34 		mov	r4, #-1
 4461 168e B5E7     		b	.L441
 4462              	.L458:
 863:drivers/inv_mpu.c **** #endif
 4463              		.loc 1 863 0
 4464 1690 4FF0FF34 		mov	r4, #-1
 4465 1694 B2E7     		b	.L441
 4466              	.L464:
 4467 1696 00BF     		.align	2
 4468              	.L463:
 4469 1698 00000000 		.word	.LANCHOR0
 4470 169c 00000000 		.word	.LC0
 4471 16a0 28000000 		.word	.LC1
 4472 16a4 78000000 		.word	.LC2
 4473              		.cfi_endproc
 4474              	.LFE67:
ARM GAS  /tmp/cc18izUm.s 			page 128


 4475              		.size	mpu_init, .-mpu_init
 4476              		.align	1
 4477              		.global	mpu_write_mem
 4478              		.syntax unified
 4479              		.thumb
 4480              		.thumb_func
 4481              		.fpu softvfp
 4482              		.type	mpu_write_mem, %function
 4483              	mpu_write_mem:
 4484              	.LFB101:
2145:drivers/inv_mpu.c **** 
2146:drivers/inv_mpu.c **** /**
2147:drivers/inv_mpu.c ****  *  @brief      Trigger gyro/accel/compass self-test.
2148:drivers/inv_mpu.c ****  *  On success/error, the self-test returns a mask representing the sensor(s)
2149:drivers/inv_mpu.c ****  *  that failed. For each bit, a one (1) represents a "pass" case; conversely,
2150:drivers/inv_mpu.c ****  *  a zero (0) indicates a failure.
2151:drivers/inv_mpu.c ****  *
2152:drivers/inv_mpu.c ****  *  \n The mask is defined as follows:
2153:drivers/inv_mpu.c ****  *  \n Bit 0:   Gyro.
2154:drivers/inv_mpu.c ****  *  \n Bit 1:   Accel.
2155:drivers/inv_mpu.c ****  *  \n Bit 2:   Compass.
2156:drivers/inv_mpu.c ****  *
2157:drivers/inv_mpu.c ****  *  \n Currently, the hardware self-test is unsupported for MPU6500. However,
2158:drivers/inv_mpu.c ****  *  this function can still be used to obtain the accel and gyro biases.
2159:drivers/inv_mpu.c ****  *
2160:drivers/inv_mpu.c ****  *  \n This function must be called with the device either face-up or face-down
2161:drivers/inv_mpu.c ****  *  (z-axis is parallel to gravity).
2162:drivers/inv_mpu.c ****  *  @param[out] gyro        Gyro biases in q16 format.
2163:drivers/inv_mpu.c ****  *  @param[out] accel       Accel biases (if applicable) in q16 format.
2164:drivers/inv_mpu.c ****  *  @return     Result mask (see above).
2165:drivers/inv_mpu.c ****  */
2166:drivers/inv_mpu.c **** int mpu_run_self_test(long *gyro, long *accel)
2167:drivers/inv_mpu.c **** {
2168:drivers/inv_mpu.c **** #ifdef MPU6050
2169:drivers/inv_mpu.c ****     const unsigned char tries = 2;
2170:drivers/inv_mpu.c ****     long gyro_st[3], accel_st[3];
2171:drivers/inv_mpu.c ****     unsigned char accel_result, gyro_result;
2172:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2173:drivers/inv_mpu.c ****     unsigned char compass_result;
2174:drivers/inv_mpu.c **** #endif
2175:drivers/inv_mpu.c ****     int ii;
2176:drivers/inv_mpu.c **** #endif
2177:drivers/inv_mpu.c ****     int result;
2178:drivers/inv_mpu.c ****     unsigned char accel_fsr, fifo_sensors, sensors_on;
2179:drivers/inv_mpu.c ****     unsigned short gyro_fsr, sample_rate, lpf;
2180:drivers/inv_mpu.c ****     unsigned char dmp_was_on;
2181:drivers/inv_mpu.c **** 
2182:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on) {
2183:drivers/inv_mpu.c ****         mpu_set_dmp_state(0);
2184:drivers/inv_mpu.c ****         dmp_was_on = 1;
2185:drivers/inv_mpu.c ****     } else
2186:drivers/inv_mpu.c ****         dmp_was_on = 0;
2187:drivers/inv_mpu.c **** 
2188:drivers/inv_mpu.c ****     /* Get initial settings. */
2189:drivers/inv_mpu.c ****     mpu_get_gyro_fsr(&gyro_fsr);
2190:drivers/inv_mpu.c ****     mpu_get_accel_fsr(&accel_fsr);
2191:drivers/inv_mpu.c ****     mpu_get_lpf(&lpf);
ARM GAS  /tmp/cc18izUm.s 			page 129


2192:drivers/inv_mpu.c ****     mpu_get_sample_rate(&sample_rate);
2193:drivers/inv_mpu.c ****     sensors_on = st.chip_cfg.sensors;
2194:drivers/inv_mpu.c ****     mpu_get_fifo_config(&fifo_sensors);
2195:drivers/inv_mpu.c **** 
2196:drivers/inv_mpu.c ****     /* For older chips, the self-test will be different. */
2197:drivers/inv_mpu.c **** #if defined MPU6050
2198:drivers/inv_mpu.c ****     for (ii = 0; ii < tries; ii++)
2199:drivers/inv_mpu.c ****         if (!get_st_biases(gyro, accel, 0))
2200:drivers/inv_mpu.c ****             break;
2201:drivers/inv_mpu.c ****     if (ii == tries) {
2202:drivers/inv_mpu.c ****         /* If we reach this point, we most likely encountered an I2C error.
2203:drivers/inv_mpu.c ****          * We'll just report an error for all three sensors.
2204:drivers/inv_mpu.c ****          */
2205:drivers/inv_mpu.c ****         result = 0;
2206:drivers/inv_mpu.c ****         goto restore;
2207:drivers/inv_mpu.c ****     }
2208:drivers/inv_mpu.c ****     for (ii = 0; ii < tries; ii++)
2209:drivers/inv_mpu.c ****         if (!get_st_biases(gyro_st, accel_st, 1))
2210:drivers/inv_mpu.c ****             break;
2211:drivers/inv_mpu.c ****     if (ii == tries) {
2212:drivers/inv_mpu.c ****         /* Again, probably an I2C error. */
2213:drivers/inv_mpu.c ****         result = 0;
2214:drivers/inv_mpu.c ****         goto restore;
2215:drivers/inv_mpu.c ****     }
2216:drivers/inv_mpu.c ****     accel_result = accel_self_test(accel, accel_st);
2217:drivers/inv_mpu.c ****     gyro_result = gyro_self_test(gyro, gyro_st);
2218:drivers/inv_mpu.c **** 
2219:drivers/inv_mpu.c ****     result = 0;
2220:drivers/inv_mpu.c ****     if (!gyro_result)
2221:drivers/inv_mpu.c ****         result |= 0x01;
2222:drivers/inv_mpu.c ****     if (!accel_result)
2223:drivers/inv_mpu.c ****         result |= 0x02;
2224:drivers/inv_mpu.c **** 
2225:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2226:drivers/inv_mpu.c ****     compass_result = compass_self_test();
2227:drivers/inv_mpu.c ****     if (!compass_result)
2228:drivers/inv_mpu.c ****         result |= 0x04;
2229:drivers/inv_mpu.c **** #endif
2230:drivers/inv_mpu.c **** restore:
2231:drivers/inv_mpu.c **** #elif defined MPU6500
2232:drivers/inv_mpu.c ****     /* For now, this function will return a "pass" result for all three sensors
2233:drivers/inv_mpu.c ****      * for compatibility with current test applications.
2234:drivers/inv_mpu.c ****      */
2235:drivers/inv_mpu.c ****     get_st_biases(gyro, accel, 0);
2236:drivers/inv_mpu.c ****     result = 0x7;
2237:drivers/inv_mpu.c **** #endif
2238:drivers/inv_mpu.c ****     /* Set to invalid values to ensure no I2C writes are skipped. */
2239:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
2240:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
2241:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
2242:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
2243:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
2244:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
2245:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
2246:drivers/inv_mpu.c ****     mpu_set_gyro_fsr(gyro_fsr);
2247:drivers/inv_mpu.c ****     mpu_set_accel_fsr(accel_fsr);
2248:drivers/inv_mpu.c ****     mpu_set_lpf(lpf);
ARM GAS  /tmp/cc18izUm.s 			page 130


2249:drivers/inv_mpu.c ****     mpu_set_sample_rate(sample_rate);
2250:drivers/inv_mpu.c ****     mpu_set_sensors(sensors_on);
2251:drivers/inv_mpu.c ****     mpu_configure_fifo(fifo_sensors);
2252:drivers/inv_mpu.c **** 
2253:drivers/inv_mpu.c ****     if (dmp_was_on)
2254:drivers/inv_mpu.c ****         mpu_set_dmp_state(1);
2255:drivers/inv_mpu.c **** 
2256:drivers/inv_mpu.c ****     return result;
2257:drivers/inv_mpu.c **** }
2258:drivers/inv_mpu.c **** 
2259:drivers/inv_mpu.c **** /**
2260:drivers/inv_mpu.c ****  *  @brief      Write to the DMP memory.
2261:drivers/inv_mpu.c ****  *  This function prevents I2C writes past the bank boundaries. The DMP memory
2262:drivers/inv_mpu.c ****  *  is only accessible when the chip is awake.
2263:drivers/inv_mpu.c ****  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
2264:drivers/inv_mpu.c ****  *  @param[in]  length      Number of bytes to write.
2265:drivers/inv_mpu.c ****  *  @param[in]  data        Bytes to write to memory.
2266:drivers/inv_mpu.c ****  *  @return     0 if successful.
2267:drivers/inv_mpu.c ****  */
2268:drivers/inv_mpu.c **** int mpu_write_mem(unsigned short mem_addr, unsigned short length,
2269:drivers/inv_mpu.c ****         unsigned char *data)
2270:drivers/inv_mpu.c **** {
 4485              		.loc 1 2270 0
 4486              		.cfi_startproc
 4487              		@ args = 0, pretend = 0, frame = 8
 4488              		@ frame_needed = 0, uses_anonymous_args = 0
 4489              	.LVL378:
2271:drivers/inv_mpu.c ****     unsigned char tmp[2];
2272:drivers/inv_mpu.c **** 
2273:drivers/inv_mpu.c ****     if (!data)
 4490              		.loc 1 2273 0
 4491 16a8 002A     		cmp	r2, #0
 4492 16aa 2AD0     		beq	.L467
2270:drivers/inv_mpu.c ****     unsigned char tmp[2];
 4493              		.loc 1 2270 0
 4494 16ac 70B5     		push	{r4, r5, r6, lr}
 4495              		.cfi_def_cfa_offset 16
 4496              		.cfi_offset 4, -16
 4497              		.cfi_offset 5, -12
 4498              		.cfi_offset 6, -8
 4499              		.cfi_offset 14, -4
 4500 16ae 82B0     		sub	sp, sp, #8
 4501              		.cfi_def_cfa_offset 24
 4502 16b0 1646     		mov	r6, r2
2274:drivers/inv_mpu.c ****         return -1;
2275:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4503              		.loc 1 2275 0
 4504 16b2 1A4A     		ldr	r2, .L475
 4505              	.LVL379:
 4506 16b4 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4507 16b6 3AB3     		cbz	r2, .L468
2276:drivers/inv_mpu.c ****         return -1;
2277:drivers/inv_mpu.c **** 
2278:drivers/inv_mpu.c ****     tmp[0] = (unsigned char)(mem_addr >> 8);
 4508              		.loc 1 2278 0
 4509 16b8 020A     		lsrs	r2, r0, #8
 4510 16ba 8DF80420 		strb	r2, [sp, #4]
ARM GAS  /tmp/cc18izUm.s 			page 131


2279:drivers/inv_mpu.c ****     tmp[1] = (unsigned char)(mem_addr & 0xFF);
 4511              		.loc 1 2279 0
 4512 16be C0B2     		uxtb	r0, r0
 4513              	.LVL380:
 4514 16c0 8DF80500 		strb	r0, [sp, #5]
2280:drivers/inv_mpu.c **** 
2281:drivers/inv_mpu.c ****     /* Check bank boundaries. */
2282:drivers/inv_mpu.c ****     if (tmp[1] + length > st.hw->bank_size)
 4515              		.loc 1 2282 0
 4516 16c4 154A     		ldr	r2, .L475
 4517 16c6 5568     		ldr	r5, [r2, #4]
 4518 16c8 0844     		add	r0, r0, r1
 4519 16ca 6A89     		ldrh	r2, [r5, #10]
 4520 16cc 9042     		cmp	r0, r2
 4521 16ce 1EDC     		bgt	.L469
 4522 16d0 0C46     		mov	r4, r1
2283:drivers/inv_mpu.c ****         return -1;
2284:drivers/inv_mpu.c **** 
2285:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->bank_sel, 2, tmp))
 4523              		.loc 1 2285 0
 4524 16d2 124B     		ldr	r3, .L475
 4525 16d4 1968     		ldr	r1, [r3]
 4526              	.LVL381:
 4527 16d6 01AB     		add	r3, sp, #4
 4528 16d8 0222     		movs	r2, #2
 4529 16da 097E     		ldrb	r1, [r1, #24]	@ zero_extendqisi2
 4530 16dc 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4531 16de FFF7FEFF 		bl	I2C_Write
 4532              	.LVL382:
 4533 16e2 B8B9     		cbnz	r0, .L470
2286:drivers/inv_mpu.c ****         return -1;
2287:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->mem_r_w, length, data))
 4534              		.loc 1 2287 0
 4535 16e4 0D4B     		ldr	r3, .L475
 4536 16e6 1968     		ldr	r1, [r3]
 4537 16e8 5868     		ldr	r0, [r3, #4]
 4538 16ea 3346     		mov	r3, r6
 4539 16ec E2B2     		uxtb	r2, r4
 4540 16ee 497D     		ldrb	r1, [r1, #21]	@ zero_extendqisi2
 4541 16f0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4542 16f2 FFF7FEFF 		bl	I2C_Write
 4543              	.LVL383:
 4544 16f6 0030     		adds	r0, r0, #0
 4545 16f8 18BF     		it	ne
 4546 16fa 0120     		movne	r0, #1
 4547 16fc 4042     		negs	r0, r0
 4548              	.L465:
2288:drivers/inv_mpu.c ****         return -1;
2289:drivers/inv_mpu.c ****     return 0;
2290:drivers/inv_mpu.c **** }
 4549              		.loc 1 2290 0
 4550 16fe 02B0     		add	sp, sp, #8
 4551              		.cfi_def_cfa_offset 16
 4552              		@ sp needed
 4553 1700 70BD     		pop	{r4, r5, r6, pc}
 4554              	.LVL384:
 4555              	.L467:
ARM GAS  /tmp/cc18izUm.s 			page 132


 4556              		.cfi_def_cfa_offset 0
 4557              		.cfi_restore 4
 4558              		.cfi_restore 5
 4559              		.cfi_restore 6
 4560              		.cfi_restore 14
2274:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4561              		.loc 1 2274 0
 4562 1702 4FF0FF30 		mov	r0, #-1
 4563              	.LVL385:
 4564 1706 7047     		bx	lr
 4565              	.LVL386:
 4566              	.L468:
 4567              		.cfi_def_cfa_offset 24
 4568              		.cfi_offset 4, -16
 4569              		.cfi_offset 5, -12
 4570              		.cfi_offset 6, -8
 4571              		.cfi_offset 14, -4
2276:drivers/inv_mpu.c **** 
 4572              		.loc 1 2276 0
 4573 1708 4FF0FF30 		mov	r0, #-1
 4574              	.LVL387:
 4575 170c F7E7     		b	.L465
 4576              	.L469:
2283:drivers/inv_mpu.c **** 
 4577              		.loc 1 2283 0
 4578 170e 4FF0FF30 		mov	r0, #-1
 4579 1712 F4E7     		b	.L465
 4580              	.LVL388:
 4581              	.L470:
2286:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->mem_r_w, length, data))
 4582              		.loc 1 2286 0
 4583 1714 4FF0FF30 		mov	r0, #-1
 4584 1718 F1E7     		b	.L465
 4585              	.L476:
 4586 171a 00BF     		.align	2
 4587              	.L475:
 4588 171c 00000000 		.word	.LANCHOR0
 4589              		.cfi_endproc
 4590              	.LFE101:
 4591              		.size	mpu_write_mem, .-mpu_write_mem
 4592              		.align	1
 4593              		.global	mpu_read_mem
 4594              		.syntax unified
 4595              		.thumb
 4596              		.thumb_func
 4597              		.fpu softvfp
 4598              		.type	mpu_read_mem, %function
 4599              	mpu_read_mem:
 4600              	.LFB102:
2291:drivers/inv_mpu.c **** 
2292:drivers/inv_mpu.c **** /**
2293:drivers/inv_mpu.c ****  *  @brief      Read from the DMP memory.
2294:drivers/inv_mpu.c ****  *  This function prevents I2C reads past the bank boundaries. The DMP memory
2295:drivers/inv_mpu.c ****  *  is only accessible when the chip is awake.
2296:drivers/inv_mpu.c ****  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
2297:drivers/inv_mpu.c ****  *  @param[in]  length      Number of bytes to read.
2298:drivers/inv_mpu.c ****  *  @param[out] data        Bytes read from memory.
ARM GAS  /tmp/cc18izUm.s 			page 133


2299:drivers/inv_mpu.c ****  *  @return     0 if successful.
2300:drivers/inv_mpu.c ****  */
2301:drivers/inv_mpu.c **** int mpu_read_mem(unsigned short mem_addr, unsigned short length,
2302:drivers/inv_mpu.c ****         unsigned char *data)
2303:drivers/inv_mpu.c **** {
 4601              		.loc 1 2303 0
 4602              		.cfi_startproc
 4603              		@ args = 0, pretend = 0, frame = 8
 4604              		@ frame_needed = 0, uses_anonymous_args = 0
 4605              	.LVL389:
2304:drivers/inv_mpu.c ****     unsigned char tmp[2];
2305:drivers/inv_mpu.c **** 
2306:drivers/inv_mpu.c ****     if (!data)
 4606              		.loc 1 2306 0
 4607 1720 52B3     		cbz	r2, .L479
2303:drivers/inv_mpu.c ****     unsigned char tmp[2];
 4608              		.loc 1 2303 0
 4609 1722 70B5     		push	{r4, r5, r6, lr}
 4610              		.cfi_def_cfa_offset 16
 4611              		.cfi_offset 4, -16
 4612              		.cfi_offset 5, -12
 4613              		.cfi_offset 6, -8
 4614              		.cfi_offset 14, -4
 4615 1724 82B0     		sub	sp, sp, #8
 4616              		.cfi_def_cfa_offset 24
 4617 1726 1646     		mov	r6, r2
2307:drivers/inv_mpu.c ****         return -1;
2308:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4618              		.loc 1 2308 0
 4619 1728 194A     		ldr	r2, .L487
 4620              	.LVL390:
 4621 172a 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4622 172c 3AB3     		cbz	r2, .L480
2309:drivers/inv_mpu.c ****         return -1;
2310:drivers/inv_mpu.c **** 
2311:drivers/inv_mpu.c ****     tmp[0] = (unsigned char)(mem_addr >> 8);
 4623              		.loc 1 2311 0
 4624 172e 020A     		lsrs	r2, r0, #8
 4625 1730 8DF80420 		strb	r2, [sp, #4]
2312:drivers/inv_mpu.c ****     tmp[1] = (unsigned char)(mem_addr & 0xFF);
 4626              		.loc 1 2312 0
 4627 1734 C0B2     		uxtb	r0, r0
 4628              	.LVL391:
 4629 1736 8DF80500 		strb	r0, [sp, #5]
2313:drivers/inv_mpu.c **** 
2314:drivers/inv_mpu.c ****     /* Check bank boundaries. */
2315:drivers/inv_mpu.c ****     if (tmp[1] + length > st.hw->bank_size)
 4630              		.loc 1 2315 0
 4631 173a 154A     		ldr	r2, .L487
 4632 173c 5568     		ldr	r5, [r2, #4]
 4633 173e 0844     		add	r0, r0, r1
 4634 1740 6A89     		ldrh	r2, [r5, #10]
 4635 1742 9042     		cmp	r0, r2
 4636 1744 1EDC     		bgt	.L481
 4637 1746 0C46     		mov	r4, r1
2316:drivers/inv_mpu.c ****         return -1;
2317:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cc18izUm.s 			page 134


2318:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->bank_sel, 2, tmp))
 4638              		.loc 1 2318 0
 4639 1748 114B     		ldr	r3, .L487
 4640 174a 1968     		ldr	r1, [r3]
 4641              	.LVL392:
 4642 174c 01AB     		add	r3, sp, #4
 4643 174e 0222     		movs	r2, #2
 4644 1750 097E     		ldrb	r1, [r1, #24]	@ zero_extendqisi2
 4645 1752 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 4646 1754 FFF7FEFF 		bl	I2C_Write
 4647              	.LVL393:
 4648 1758 B8B9     		cbnz	r0, .L482
2319:drivers/inv_mpu.c ****         return -1;
2320:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->mem_r_w, length, data))
 4649              		.loc 1 2320 0
 4650 175a 0D4B     		ldr	r3, .L487
 4651 175c 1968     		ldr	r1, [r3]
 4652 175e 5868     		ldr	r0, [r3, #4]
 4653 1760 3346     		mov	r3, r6
 4654 1762 2246     		mov	r2, r4
 4655 1764 497D     		ldrb	r1, [r1, #21]	@ zero_extendqisi2
 4656 1766 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4657 1768 FFF7FEFF 		bl	I2C_Read
 4658              	.LVL394:
 4659 176c 0030     		adds	r0, r0, #0
 4660 176e 18BF     		it	ne
 4661 1770 0120     		movne	r0, #1
 4662 1772 4042     		negs	r0, r0
 4663              	.L477:
2321:drivers/inv_mpu.c ****         return -1;
2322:drivers/inv_mpu.c ****     return 0;
2323:drivers/inv_mpu.c **** }
 4664              		.loc 1 2323 0
 4665 1774 02B0     		add	sp, sp, #8
 4666              		.cfi_def_cfa_offset 16
 4667              		@ sp needed
 4668 1776 70BD     		pop	{r4, r5, r6, pc}
 4669              	.LVL395:
 4670              	.L479:
 4671              		.cfi_def_cfa_offset 0
 4672              		.cfi_restore 4
 4673              		.cfi_restore 5
 4674              		.cfi_restore 6
 4675              		.cfi_restore 14
2307:drivers/inv_mpu.c ****     if (!st.chip_cfg.sensors)
 4676              		.loc 1 2307 0
 4677 1778 4FF0FF30 		mov	r0, #-1
 4678              	.LVL396:
 4679 177c 7047     		bx	lr
 4680              	.LVL397:
 4681              	.L480:
 4682              		.cfi_def_cfa_offset 24
 4683              		.cfi_offset 4, -16
 4684              		.cfi_offset 5, -12
 4685              		.cfi_offset 6, -8
 4686              		.cfi_offset 14, -4
2309:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cc18izUm.s 			page 135


 4687              		.loc 1 2309 0
 4688 177e 4FF0FF30 		mov	r0, #-1
 4689              	.LVL398:
 4690 1782 F7E7     		b	.L477
 4691              	.L481:
2316:drivers/inv_mpu.c **** 
 4692              		.loc 1 2316 0
 4693 1784 4FF0FF30 		mov	r0, #-1
 4694 1788 F4E7     		b	.L477
 4695              	.LVL399:
 4696              	.L482:
2319:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->mem_r_w, length, data))
 4697              		.loc 1 2319 0
 4698 178a 4FF0FF30 		mov	r0, #-1
 4699 178e F1E7     		b	.L477
 4700              	.L488:
 4701              		.align	2
 4702              	.L487:
 4703 1790 00000000 		.word	.LANCHOR0
 4704              		.cfi_endproc
 4705              	.LFE102:
 4706              		.size	mpu_read_mem, .-mpu_read_mem
 4707              		.align	1
 4708              		.global	mpu_load_firmware
 4709              		.syntax unified
 4710              		.thumb
 4711              		.thumb_func
 4712              		.fpu softvfp
 4713              		.type	mpu_load_firmware, %function
 4714              	mpu_load_firmware:
 4715              	.LFB103:
2324:drivers/inv_mpu.c **** 
2325:drivers/inv_mpu.c **** /**
2326:drivers/inv_mpu.c ****  *  @brief      Load and verify DMP image.
2327:drivers/inv_mpu.c ****  *  @param[in]  length      Length of DMP image.
2328:drivers/inv_mpu.c ****  *  @param[in]  firmware    DMP code.
2329:drivers/inv_mpu.c ****  *  @param[in]  start_addr  Starting address of DMP code memory.
2330:drivers/inv_mpu.c ****  *  @param[in]  sample_rate Fixed sampling rate used when DMP is enabled.
2331:drivers/inv_mpu.c ****  *  @return     0 if successful.
2332:drivers/inv_mpu.c ****  */
2333:drivers/inv_mpu.c **** int mpu_load_firmware(unsigned short length, const unsigned char *firmware,
2334:drivers/inv_mpu.c ****     unsigned short start_addr, unsigned short sample_rate)
2335:drivers/inv_mpu.c **** {
 4716              		.loc 1 2335 0
 4717              		.cfi_startproc
 4718              		@ args = 0, pretend = 0, frame = 24
 4719              		@ frame_needed = 0, uses_anonymous_args = 0
 4720              	.LVL400:
 4721 1794 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4722              		.cfi_def_cfa_offset 36
 4723              		.cfi_offset 4, -36
 4724              		.cfi_offset 5, -32
 4725              		.cfi_offset 6, -28
 4726              		.cfi_offset 7, -24
 4727              		.cfi_offset 8, -20
 4728              		.cfi_offset 9, -16
 4729              		.cfi_offset 10, -12
ARM GAS  /tmp/cc18izUm.s 			page 136


 4730              		.cfi_offset 11, -8
 4731              		.cfi_offset 14, -4
 4732 1798 87B0     		sub	sp, sp, #28
 4733              		.cfi_def_cfa_offset 64
2336:drivers/inv_mpu.c ****     unsigned short ii;
2337:drivers/inv_mpu.c ****     unsigned short this_write;
2338:drivers/inv_mpu.c ****     /* Must divide evenly into st.hw->bank_size to avoid bank crossings. */
2339:drivers/inv_mpu.c **** #define LOAD_CHUNK  (16)
2340:drivers/inv_mpu.c ****     unsigned char cur[LOAD_CHUNK], tmp[2];
2341:drivers/inv_mpu.c **** 
2342:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_loaded)
 4734              		.loc 1 2342 0
 4735 179a 2A4C     		ldr	r4, .L501
 4736 179c 94F82540 		ldrb	r4, [r4, #37]	@ zero_extendqisi2
 4737 17a0 002C     		cmp	r4, #0
 4738 17a2 3AD1     		bne	.L493
2343:drivers/inv_mpu.c ****         /* DMP should only be loaded once. */
2344:drivers/inv_mpu.c ****         return -1;
2345:drivers/inv_mpu.c **** 
2346:drivers/inv_mpu.c ****     if (!firmware)
 4739              		.loc 1 2346 0
 4740 17a4 0029     		cmp	r1, #0
 4741 17a6 3BD0     		beq	.L494
 4742 17a8 9A46     		mov	r10, r3
 4743 17aa 9146     		mov	r9, r2
 4744 17ac 8846     		mov	r8, r1
 4745 17ae 0746     		mov	r7, r0
 4746              	.LVL401:
2347:drivers/inv_mpu.c ****         return -1;
2348:drivers/inv_mpu.c ****     for (ii = 0; ii < length; ii += this_write) {
 4747              		.loc 1 2348 0 discriminator 1
 4748 17b0 E0B1     		cbz	r0, .L491
 4749              	.LVL402:
 4750              	.L492:
2349:drivers/inv_mpu.c ****         this_write = min(LOAD_CHUNK, length - ii);
 4751              		.loc 1 2349 0
 4752 17b2 3D1B     		subs	r5, r7, r4
 4753 17b4 102D     		cmp	r5, #16
 4754 17b6 A8BF     		it	ge
 4755 17b8 1025     		movge	r5, #16
 4756 17ba AEB2     		uxth	r6, r5
 4757              	.LVL403:
2350:drivers/inv_mpu.c ****         if (mpu_write_mem(ii, this_write, (unsigned char*)&firmware[ii]))
 4758              		.loc 1 2350 0
 4759 17bc 08EB040B 		add	fp, r8, r4
 4760 17c0 5A46     		mov	r2, fp
 4761 17c2 3146     		mov	r1, r6
 4762 17c4 2046     		mov	r0, r4
 4763 17c6 FFF7FEFF 		bl	mpu_write_mem
 4764              	.LVL404:
 4765 17ca 60BB     		cbnz	r0, .L495
2351:drivers/inv_mpu.c ****             return -1;
2352:drivers/inv_mpu.c ****         if (mpu_read_mem(ii, this_write, cur))
 4766              		.loc 1 2352 0
 4767 17cc 02AA     		add	r2, sp, #8
 4768 17ce 3146     		mov	r1, r6
 4769 17d0 2046     		mov	r0, r4
ARM GAS  /tmp/cc18izUm.s 			page 137


 4770 17d2 FFF7FEFF 		bl	mpu_read_mem
 4771              	.LVL405:
 4772 17d6 58BB     		cbnz	r0, .L496
2353:drivers/inv_mpu.c ****             return -1;
2354:drivers/inv_mpu.c ****         if (memcmp(firmware+ii, cur, this_write))
 4773              		.loc 1 2354 0
 4774 17d8 3246     		mov	r2, r6
 4775 17da 02A9     		add	r1, sp, #8
 4776 17dc 5846     		mov	r0, fp
 4777 17de FFF7FEFF 		bl	memcmp
 4778              	.LVL406:
 4779 17e2 40BB     		cbnz	r0, .L497
2348:drivers/inv_mpu.c ****         this_write = min(LOAD_CHUNK, length - ii);
 4780              		.loc 1 2348 0 discriminator 2
 4781 17e4 3444     		add	r4, r4, r6
 4782              	.LVL407:
 4783 17e6 A4B2     		uxth	r4, r4
 4784              	.LVL408:
 4785 17e8 A742     		cmp	r7, r4
 4786 17ea E2D8     		bhi	.L492
 4787              	.LVL409:
 4788              	.L491:
2355:drivers/inv_mpu.c ****             return -2;
2356:drivers/inv_mpu.c ****     }
2357:drivers/inv_mpu.c **** 
2358:drivers/inv_mpu.c ****     /* Set program start address. */
2359:drivers/inv_mpu.c ****     tmp[0] = start_addr >> 8;
 4789              		.loc 1 2359 0
 4790 17ec 4FEA1923 		lsr	r3, r9, #8
 4791 17f0 8DF80430 		strb	r3, [sp, #4]
2360:drivers/inv_mpu.c ****     tmp[1] = start_addr & 0xFF;
 4792              		.loc 1 2360 0
 4793 17f4 8DF80590 		strb	r9, [sp, #5]
2361:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->prgm_start_h, 2, tmp))
 4794              		.loc 1 2361 0
 4795 17f8 124B     		ldr	r3, .L501
 4796 17fa 1968     		ldr	r1, [r3]
 4797 17fc 5868     		ldr	r0, [r3, #4]
 4798 17fe 01AB     		add	r3, sp, #4
 4799 1800 0222     		movs	r2, #2
 4800 1802 897E     		ldrb	r1, [r1, #26]	@ zero_extendqisi2
 4801 1804 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4802 1806 FFF7FEFF 		bl	I2C_Write
 4803              	.LVL410:
 4804 180a B8B9     		cbnz	r0, .L498
2362:drivers/inv_mpu.c ****         return -1;
2363:drivers/inv_mpu.c **** 
2364:drivers/inv_mpu.c ****     st.chip_cfg.dmp_loaded = 1;
 4805              		.loc 1 2364 0
 4806 180c 0D4B     		ldr	r3, .L501
 4807 180e 0122     		movs	r2, #1
 4808 1810 83F82520 		strb	r2, [r3, #37]
2365:drivers/inv_mpu.c ****     st.chip_cfg.dmp_sample_rate = sample_rate;
 4809              		.loc 1 2365 0
 4810 1814 A3F826A0 		strh	r10, [r3, #38]	@ movhi
2366:drivers/inv_mpu.c ****     return 0;
 4811              		.loc 1 2366 0
ARM GAS  /tmp/cc18izUm.s 			page 138


 4812 1818 07E0     		b	.L489
 4813              	.LVL411:
 4814              	.L493:
2344:drivers/inv_mpu.c **** 
 4815              		.loc 1 2344 0
 4816 181a 4FF0FF30 		mov	r0, #-1
 4817              	.LVL412:
 4818 181e 04E0     		b	.L489
 4819              	.LVL413:
 4820              	.L494:
2347:drivers/inv_mpu.c ****     for (ii = 0; ii < length; ii += this_write) {
 4821              		.loc 1 2347 0
 4822 1820 4FF0FF30 		mov	r0, #-1
 4823              	.LVL414:
 4824 1824 01E0     		b	.L489
 4825              	.LVL415:
 4826              	.L495:
2351:drivers/inv_mpu.c ****         if (mpu_read_mem(ii, this_write, cur))
 4827              		.loc 1 2351 0
 4828 1826 4FF0FF30 		mov	r0, #-1
 4829              	.LVL416:
 4830              	.L489:
2367:drivers/inv_mpu.c **** }
 4831              		.loc 1 2367 0
 4832 182a 07B0     		add	sp, sp, #28
 4833              		.cfi_remember_state
 4834              		.cfi_def_cfa_offset 36
 4835              		@ sp needed
 4836 182c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4837              	.LVL417:
 4838              	.L496:
 4839              		.cfi_restore_state
2353:drivers/inv_mpu.c ****         if (memcmp(firmware+ii, cur, this_write))
 4840              		.loc 1 2353 0
 4841 1830 4FF0FF30 		mov	r0, #-1
 4842 1834 F9E7     		b	.L489
 4843              	.L497:
2355:drivers/inv_mpu.c ****     }
 4844              		.loc 1 2355 0
 4845 1836 6FF00100 		mvn	r0, #1
 4846 183a F6E7     		b	.L489
 4847              	.LVL418:
 4848              	.L498:
2362:drivers/inv_mpu.c **** 
 4849              		.loc 1 2362 0
 4850 183c 4FF0FF30 		mov	r0, #-1
 4851 1840 F3E7     		b	.L489
 4852              	.L502:
 4853 1842 00BF     		.align	2
 4854              	.L501:
 4855 1844 00000000 		.word	.LANCHOR0
 4856              		.cfi_endproc
 4857              	.LFE103:
 4858              		.size	mpu_load_firmware, .-mpu_load_firmware
 4859              		.align	1
 4860              		.global	mpu_set_dmp_state
 4861              		.syntax unified
ARM GAS  /tmp/cc18izUm.s 			page 139


 4862              		.thumb
 4863              		.thumb_func
 4864              		.fpu softvfp
 4865              		.type	mpu_set_dmp_state, %function
 4866              	mpu_set_dmp_state:
 4867              	.LFB104:
2368:drivers/inv_mpu.c **** 
2369:drivers/inv_mpu.c **** /**
2370:drivers/inv_mpu.c ****  *  @brief      Enable/disable DMP support.
2371:drivers/inv_mpu.c ****  *  @param[in]  enable  1 to turn on the DMP.
2372:drivers/inv_mpu.c ****  *  @return     0 if successful.
2373:drivers/inv_mpu.c ****  */
2374:drivers/inv_mpu.c **** int mpu_set_dmp_state(unsigned char enable)
2375:drivers/inv_mpu.c **** {
 4868              		.loc 1 2375 0
 4869              		.cfi_startproc
 4870              		@ args = 0, pretend = 0, frame = 8
 4871              		@ frame_needed = 0, uses_anonymous_args = 0
 4872              	.LVL419:
2376:drivers/inv_mpu.c ****     unsigned char tmp;
2377:drivers/inv_mpu.c ****     if (st.chip_cfg.dmp_on == enable)
 4873              		.loc 1 2377 0
 4874 1848 224B     		ldr	r3, .L512
 4875 184a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 4876 184e 8342     		cmp	r3, r0
 4877 1850 3AD0     		beq	.L506
2375:drivers/inv_mpu.c ****     unsigned char tmp;
 4878              		.loc 1 2375 0
 4879 1852 30B5     		push	{r4, r5, lr}
 4880              		.cfi_def_cfa_offset 12
 4881              		.cfi_offset 4, -12
 4882              		.cfi_offset 5, -8
 4883              		.cfi_offset 14, -4
 4884 1854 83B0     		sub	sp, sp, #12
 4885              		.cfi_def_cfa_offset 24
2378:drivers/inv_mpu.c ****         return 0;
2379:drivers/inv_mpu.c **** 
2380:drivers/inv_mpu.c ****     if (enable) {
 4886              		.loc 1 2380 0
 4887 1856 10B3     		cbz	r0, .L505
2381:drivers/inv_mpu.c ****         if (!st.chip_cfg.dmp_loaded)
 4888              		.loc 1 2381 0
 4889 1858 1E4B     		ldr	r3, .L512
 4890 185a 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 4891 185e 002B     		cmp	r3, #0
 4892 1860 34D0     		beq	.L507
2382:drivers/inv_mpu.c ****             return -1;
2383:drivers/inv_mpu.c ****         /* Disable data ready interrupt. */
2384:drivers/inv_mpu.c ****         set_int_enable(0);
 4893              		.loc 1 2384 0
 4894 1862 0020     		movs	r0, #0
 4895              	.LVL420:
 4896 1864 FEF7CCFB 		bl	set_int_enable
 4897              	.LVL421:
2385:drivers/inv_mpu.c ****         /* Disable bypass mode. */
2386:drivers/inv_mpu.c ****         mpu_set_bypass(0);
 4898              		.loc 1 2386 0
ARM GAS  /tmp/cc18izUm.s 			page 140


 4899 1868 0020     		movs	r0, #0
 4900 186a FFF7FEFF 		bl	mpu_set_bypass
 4901              	.LVL422:
2387:drivers/inv_mpu.c ****         /* Keep constant sample rate, FIFO rate controlled by DMP. */
2388:drivers/inv_mpu.c ****         mpu_set_sample_rate(st.chip_cfg.dmp_sample_rate);
 4902              		.loc 1 2388 0
 4903 186e 194D     		ldr	r5, .L512
 4904 1870 E88C     		ldrh	r0, [r5, #38]
 4905 1872 FFF7FEFF 		bl	mpu_set_sample_rate
 4906              	.LVL423:
2389:drivers/inv_mpu.c ****         /* Remove FIFO elements. */
2390:drivers/inv_mpu.c ****         tmp = 0;
 4907              		.loc 1 2390 0
 4908 1876 0024     		movs	r4, #0
 4909 1878 02AB     		add	r3, sp, #8
 4910 187a 03F8014D 		strb	r4, [r3, #-1]!
2391:drivers/inv_mpu.c ****         I2C_Write(st.hw->addr, 0x23, 1, &tmp);
 4911              		.loc 1 2391 0
 4912 187e 6868     		ldr	r0, [r5, #4]
 4913 1880 0122     		movs	r2, #1
 4914 1882 2321     		movs	r1, #35
 4915 1884 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4916 1886 FFF7FEFF 		bl	I2C_Write
 4917              	.LVL424:
2392:drivers/inv_mpu.c ****         st.chip_cfg.dmp_on = 1;
 4918              		.loc 1 2392 0
 4919 188a 0120     		movs	r0, #1
 4920 188c 85F82400 		strb	r0, [r5, #36]
2393:drivers/inv_mpu.c ****         /* Enable DMP interrupt. */
2394:drivers/inv_mpu.c ****         set_int_enable(1);
 4921              		.loc 1 2394 0
 4922 1890 FEF7B6FB 		bl	set_int_enable
 4923              	.LVL425:
2395:drivers/inv_mpu.c ****         mpu_reset_fifo();
 4924              		.loc 1 2395 0
 4925 1894 FFF7FEFF 		bl	mpu_reset_fifo
 4926              	.LVL426:
2396:drivers/inv_mpu.c ****     } else {
2397:drivers/inv_mpu.c ****         /* Disable DMP interrupt. */
2398:drivers/inv_mpu.c ****         set_int_enable(0);
2399:drivers/inv_mpu.c ****         /* Restore FIFO settings. */
2400:drivers/inv_mpu.c ****         tmp = st.chip_cfg.fifo_enable;
2401:drivers/inv_mpu.c ****         I2C_Write(st.hw->addr, 0x23, 1, &tmp);
2402:drivers/inv_mpu.c ****         st.chip_cfg.dmp_on = 0;
2403:drivers/inv_mpu.c ****         mpu_reset_fifo();
2404:drivers/inv_mpu.c ****     }
2405:drivers/inv_mpu.c ****     return 0;
 4927              		.loc 1 2405 0
 4928 1898 2046     		mov	r0, r4
 4929              	.L503:
2406:drivers/inv_mpu.c **** }
 4930              		.loc 1 2406 0
 4931 189a 03B0     		add	sp, sp, #12
 4932              		.cfi_remember_state
 4933              		.cfi_def_cfa_offset 12
 4934              		@ sp needed
 4935 189c 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/cc18izUm.s 			page 141


 4936              	.LVL427:
 4937              	.L505:
 4938              		.cfi_restore_state
2398:drivers/inv_mpu.c ****         /* Restore FIFO settings. */
 4939              		.loc 1 2398 0
 4940 189e 0020     		movs	r0, #0
 4941              	.LVL428:
 4942 18a0 FEF7AEFB 		bl	set_int_enable
 4943              	.LVL429:
2400:drivers/inv_mpu.c ****         I2C_Write(st.hw->addr, 0x23, 1, &tmp);
 4944              		.loc 1 2400 0
 4945 18a4 0B4D     		ldr	r5, .L512
 4946 18a6 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 4947 18a8 02AB     		add	r3, sp, #8
 4948 18aa 03F8012D 		strb	r2, [r3, #-1]!
2401:drivers/inv_mpu.c ****         st.chip_cfg.dmp_on = 0;
 4949              		.loc 1 2401 0
 4950 18ae 6868     		ldr	r0, [r5, #4]
 4951 18b0 0122     		movs	r2, #1
 4952 18b2 2321     		movs	r1, #35
 4953 18b4 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4954 18b6 FFF7FEFF 		bl	I2C_Write
 4955              	.LVL430:
2402:drivers/inv_mpu.c ****         mpu_reset_fifo();
 4956              		.loc 1 2402 0
 4957 18ba 0024     		movs	r4, #0
 4958 18bc 85F82440 		strb	r4, [r5, #36]
2403:drivers/inv_mpu.c ****     }
 4959              		.loc 1 2403 0
 4960 18c0 FFF7FEFF 		bl	mpu_reset_fifo
 4961              	.LVL431:
2405:drivers/inv_mpu.c **** }
 4962              		.loc 1 2405 0
 4963 18c4 2046     		mov	r0, r4
 4964 18c6 E8E7     		b	.L503
 4965              	.LVL432:
 4966              	.L506:
 4967              		.cfi_def_cfa_offset 0
 4968              		.cfi_restore 4
 4969              		.cfi_restore 5
 4970              		.cfi_restore 14
2378:drivers/inv_mpu.c **** 
 4971              		.loc 1 2378 0
 4972 18c8 0020     		movs	r0, #0
 4973              	.LVL433:
 4974 18ca 7047     		bx	lr
 4975              	.LVL434:
 4976              	.L507:
 4977              		.cfi_def_cfa_offset 24
 4978              		.cfi_offset 4, -12
 4979              		.cfi_offset 5, -8
 4980              		.cfi_offset 14, -4
2382:drivers/inv_mpu.c ****         /* Disable data ready interrupt. */
 4981              		.loc 1 2382 0
 4982 18cc 4FF0FF30 		mov	r0, #-1
 4983              	.LVL435:
 4984 18d0 E3E7     		b	.L503
ARM GAS  /tmp/cc18izUm.s 			page 142


 4985              	.L513:
 4986 18d2 00BF     		.align	2
 4987              	.L512:
 4988 18d4 00000000 		.word	.LANCHOR0
 4989              		.cfi_endproc
 4990              	.LFE104:
 4991              		.size	mpu_set_dmp_state, .-mpu_set_dmp_state
 4992              		.global	__aeabi_fcmpeq
 4993              		.global	__aeabi_fcmpgt
 4994              		.global	__aeabi_fcmplt
 4995              		.align	1
 4996              		.global	mpu_run_self_test
 4997              		.syntax unified
 4998              		.thumb
 4999              		.thumb_func
 5000              		.fpu softvfp
 5001              		.type	mpu_run_self_test, %function
 5002              	mpu_run_self_test:
 5003              	.LFB100:
2167:drivers/inv_mpu.c **** #ifdef MPU6050
 5004              		.loc 1 2167 0
 5005              		.cfi_startproc
 5006              		@ args = 0, pretend = 0, frame = 80
 5007              		@ frame_needed = 0, uses_anonymous_args = 0
 5008              	.LVL436:
 5009 18d8 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5010              		.cfi_def_cfa_offset 36
 5011              		.cfi_offset 4, -36
 5012              		.cfi_offset 5, -32
 5013              		.cfi_offset 6, -28
 5014              		.cfi_offset 7, -24
 5015              		.cfi_offset 8, -20
 5016              		.cfi_offset 9, -16
 5017              		.cfi_offset 10, -12
 5018              		.cfi_offset 11, -8
 5019              		.cfi_offset 14, -4
 5020 18dc 95B0     		sub	sp, sp, #84
 5021              		.cfi_def_cfa_offset 120
 5022 18de 0290     		str	r0, [sp, #8]
 5023 18e0 0D46     		mov	r5, r1
 5024              	.LVL437:
2182:drivers/inv_mpu.c ****         mpu_set_dmp_state(0);
 5025              		.loc 1 2182 0
 5026 18e2 BB4B     		ldr	r3, .L561
 5027 18e4 93F82460 		ldrb	r6, [r3, #36]	@ zero_extendqisi2
 5028 18e8 002E     		cmp	r6, #0
 5029 18ea 4DD1     		bne	.L556
 5030              	.LVL438:
 5031              	.L515:
2189:drivers/inv_mpu.c ****     mpu_get_accel_fsr(&accel_fsr);
 5032              		.loc 1 2189 0
 5033 18ec 0DA8     		add	r0, sp, #52
 5034 18ee FFF7FEFF 		bl	mpu_get_gyro_fsr
 5035              	.LVL439:
2190:drivers/inv_mpu.c ****     mpu_get_lpf(&lpf);
 5036              		.loc 1 2190 0
 5037 18f2 0DF13700 		add	r0, sp, #55
ARM GAS  /tmp/cc18izUm.s 			page 143


 5038 18f6 FFF7FEFF 		bl	mpu_get_accel_fsr
 5039              	.LVL440:
2191:drivers/inv_mpu.c ****     mpu_get_sample_rate(&sample_rate);
 5040              		.loc 1 2191 0
 5041 18fa 0CA8     		add	r0, sp, #48
 5042 18fc FFF7FEFF 		bl	mpu_get_lpf
 5043              	.LVL441:
2192:drivers/inv_mpu.c ****     sensors_on = st.chip_cfg.sensors;
 5044              		.loc 1 2192 0
 5045 1900 0DF13200 		add	r0, sp, #50
 5046 1904 FFF7FEFF 		bl	mpu_get_sample_rate
 5047              	.LVL442:
2193:drivers/inv_mpu.c ****     mpu_get_fifo_config(&fifo_sensors);
 5048              		.loc 1 2193 0
 5049 1908 B14B     		ldr	r3, .L561
 5050 190a 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 5051 190c 0392     		str	r2, [sp, #12]
 5052              	.LVL443:
 5053              	.LBB12:
 5054              	.LBB13:
1515:drivers/inv_mpu.c ****     return 0;
 5055              		.loc 1 1515 0
 5056 190e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5057 1910 0493     		str	r3, [sp, #16]
 5058              	.LVL444:
 5059              	.LBE13:
 5060              	.LBE12:
2199:drivers/inv_mpu.c ****             break;
 5061              		.loc 1 2199 0
 5062 1912 0022     		movs	r2, #0
 5063 1914 2946     		mov	r1, r5
 5064 1916 029C     		ldr	r4, [sp, #8]
 5065 1918 2046     		mov	r0, r4
 5066 191a FEF7BDFB 		bl	get_st_biases
 5067              	.LVL445:
 5068 191e 0028     		cmp	r0, #0
 5069 1920 00F04881 		beq	.L516
 5070              	.LVL446:
 5071 1924 0022     		movs	r2, #0
 5072 1926 2946     		mov	r1, r5
 5073 1928 2046     		mov	r0, r4
 5074 192a FEF7B5FB 		bl	get_st_biases
 5075              	.LVL447:
 5076 192e 0028     		cmp	r0, #0
 5077 1930 00F04081 		beq	.L516
2205:drivers/inv_mpu.c ****         goto restore;
 5078              		.loc 1 2205 0
 5079 1934 0024     		movs	r4, #0
 5080              	.LVL448:
 5081              	.L517:
2239:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 5082              		.loc 1 2239 0
 5083 1936 A64B     		ldr	r3, .L561
 5084 1938 FF22     		movs	r2, #255
 5085 193a 1A72     		strb	r2, [r3, #8]
2240:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 5086              		.loc 1 2240 0
ARM GAS  /tmp/cc18izUm.s 			page 144


 5087 193c 5A72     		strb	r2, [r3, #9]
2241:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 5088              		.loc 1 2241 0
 5089 193e DA72     		strb	r2, [r3, #11]
2242:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
 5090              		.loc 1 2242 0
 5091 1940 4FF6FF71 		movw	r1, #65535
 5092 1944 D981     		strh	r1, [r3, #14]	@ movhi
2243:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 5093              		.loc 1 2243 0
 5094 1946 9A72     		strb	r2, [r3, #10]
2244:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
 5095              		.loc 1 2244 0
 5096 1948 1A74     		strb	r2, [r3, #16]
2245:drivers/inv_mpu.c ****     mpu_set_gyro_fsr(gyro_fsr);
 5097              		.loc 1 2245 0
 5098 194a 0122     		movs	r2, #1
 5099 194c 1A73     		strb	r2, [r3, #12]
2246:drivers/inv_mpu.c ****     mpu_set_accel_fsr(accel_fsr);
 5100              		.loc 1 2246 0
 5101 194e BDF83400 		ldrh	r0, [sp, #52]
 5102 1952 FFF7FEFF 		bl	mpu_set_gyro_fsr
 5103              	.LVL449:
2247:drivers/inv_mpu.c ****     mpu_set_lpf(lpf);
 5104              		.loc 1 2247 0
 5105 1956 9DF83700 		ldrb	r0, [sp, #55]	@ zero_extendqisi2
 5106 195a FFF7FEFF 		bl	mpu_set_accel_fsr
 5107              	.LVL450:
2248:drivers/inv_mpu.c ****     mpu_set_sample_rate(sample_rate);
 5108              		.loc 1 2248 0
 5109 195e BDF83000 		ldrh	r0, [sp, #48]
 5110 1962 FFF7FEFF 		bl	mpu_set_lpf
 5111              	.LVL451:
2249:drivers/inv_mpu.c ****     mpu_set_sensors(sensors_on);
 5112              		.loc 1 2249 0
 5113 1966 BDF83200 		ldrh	r0, [sp, #50]
 5114 196a FFF7FEFF 		bl	mpu_set_sample_rate
 5115              	.LVL452:
2250:drivers/inv_mpu.c ****     mpu_configure_fifo(fifo_sensors);
 5116              		.loc 1 2250 0
 5117 196e 0398     		ldr	r0, [sp, #12]
 5118 1970 FFF7FEFF 		bl	mpu_set_sensors
 5119              	.LVL453:
2251:drivers/inv_mpu.c **** 
 5120              		.loc 1 2251 0
 5121 1974 0498     		ldr	r0, [sp, #16]
 5122 1976 FFF7FEFF 		bl	mpu_configure_fifo
 5123              	.LVL454:
2253:drivers/inv_mpu.c ****         mpu_set_dmp_state(1);
 5124              		.loc 1 2253 0
 5125 197a 002E     		cmp	r6, #0
 5126 197c 40F01681 		bne	.L557
 5127              	.LVL455:
 5128              	.L514:
2257:drivers/inv_mpu.c **** 
 5129              		.loc 1 2257 0
 5130 1980 2046     		mov	r0, r4
ARM GAS  /tmp/cc18izUm.s 			page 145


 5131 1982 15B0     		add	sp, sp, #84
 5132              		.cfi_remember_state
 5133              		.cfi_def_cfa_offset 36
 5134              		@ sp needed
 5135 1984 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5136              	.LVL456:
 5137              	.L556:
 5138              		.cfi_restore_state
2183:drivers/inv_mpu.c ****         dmp_was_on = 1;
 5139              		.loc 1 2183 0
 5140 1988 0020     		movs	r0, #0
 5141              	.LVL457:
 5142 198a FFF7FEFF 		bl	mpu_set_dmp_state
 5143              	.LVL458:
2184:drivers/inv_mpu.c ****     } else
 5144              		.loc 1 2184 0
 5145 198e 0126     		movs	r6, #1
 5146 1990 ACE7     		b	.L515
 5147              	.LVL459:
 5148              	.L560:
 5149              	.LBB14:
 5150              	.LBB15:
 5151              	.LBB16:
 5152              	.LBB17:
1904:drivers/inv_mpu.c ****     shift_code[1] = ((tmp[1] & 0xE0) >> 3) | ((tmp[3] & 0x0C) >> 2);
 5153              		.loc 1 1904 0
 5154 1992 9DF82310 		ldrb	r1, [sp, #35]	@ zero_extendqisi2
 5155 1996 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 5156 199a D210     		asrs	r2, r2, #3
 5157 199c 02F01C02 		and	r2, r2, #28
 5158 19a0 C1F30113 		ubfx	r3, r1, #4, #2
 5159 19a4 1A43     		orrs	r2, r2, r3
 5160 19a6 8DF81C20 		strb	r2, [sp, #28]
1905:drivers/inv_mpu.c ****     shift_code[2] = ((tmp[2] & 0xE0) >> 3) | (tmp[3] & 0x03);
 5161              		.loc 1 1905 0
 5162 19aa 9DF82120 		ldrb	r2, [sp, #33]	@ zero_extendqisi2
 5163 19ae D210     		asrs	r2, r2, #3
 5164 19b0 02F01C02 		and	r2, r2, #28
 5165 19b4 C1F38103 		ubfx	r3, r1, #2, #2
 5166 19b8 1A43     		orrs	r2, r2, r3
 5167 19ba 8DF81D20 		strb	r2, [sp, #29]
1906:drivers/inv_mpu.c ****     for (ii = 0; ii < 3; ii++) {
 5168              		.loc 1 1906 0
 5169 19be 9DF82230 		ldrb	r3, [sp, #34]	@ zero_extendqisi2
 5170 19c2 DB10     		asrs	r3, r3, #3
 5171 19c4 03F01C03 		and	r3, r3, #28
 5172 19c8 01F00301 		and	r1, r1, #3
 5173 19cc 0B43     		orrs	r3, r3, r1
 5174 19ce 8DF81E30 		strb	r3, [sp, #30]
 5175              	.LVL460:
 5176 19d2 07AF     		add	r7, sp, #28
 5177 19d4 0DF12408 		add	r8, sp, #36
 5178              	.LVL461:
 5179 19d8 0DF11F0A 		add	r10, sp, #31
1915:drivers/inv_mpu.c ****         while (--shift_code[ii])
 5180              		.loc 1 1915 0
 5181 19dc DFF810B2 		ldr	fp, .L561+32
ARM GAS  /tmp/cc18izUm.s 			page 146


1917:drivers/inv_mpu.c ****     }
 5182              		.loc 1 1917 0
 5183 19e0 DFF81092 		ldr	r9, .L561+36
 5184 19e4 1BE0     		b	.L522
 5185              	.LVL462:
 5186              	.L519:
 5187 19e6 CDF81480 		str	r8, [sp, #20]
1915:drivers/inv_mpu.c ****         while (--shift_code[ii])
 5188              		.loc 1 1915 0
 5189 19ea C8F800B0 		str	fp, [r8]	@ float
1916:drivers/inv_mpu.c ****             st_shift[ii] *= 1.034f;
 5190              		.loc 1 1916 0
 5191 19ee 013C     		subs	r4, r4, #1
 5192 19f0 E4B2     		uxtb	r4, r4
 5193 19f2 3C70     		strb	r4, [r7]
 5194 19f4 6CB1     		cbz	r4, .L520
 5195 19f6 5846     		mov	r0, fp
 5196              	.L521:
1917:drivers/inv_mpu.c ****     }
 5197              		.loc 1 1917 0
 5198 19f8 4946     		mov	r1, r9
 5199 19fa FFF7FEFF 		bl	__aeabi_fmul
 5200              	.LVL463:
1916:drivers/inv_mpu.c ****             st_shift[ii] *= 1.034f;
 5201              		.loc 1 1916 0
 5202 19fe 013C     		subs	r4, r4, #1
 5203 1a00 14F0FF04 		ands	r4, r4, #255
 5204 1a04 F8D1     		bne	.L521
 5205 1a06 059B     		ldr	r3, [sp, #20]
 5206 1a08 1860     		str	r0, [r3]	@ float
 5207 1a0a 019B     		ldr	r3, [sp, #4]
 5208 1a0c 4FF00002 		mov	r2, #0
 5209 1a10 1A70     		strb	r2, [r3]
 5210              	.L520:
 5211              	.LVL464:
 5212 1a12 0137     		adds	r7, r7, #1
 5213              	.LVL465:
 5214 1a14 08F10408 		add	r8, r8, #4
1907:drivers/inv_mpu.c ****         if (!shift_code[ii]) {
 5215              		.loc 1 1907 0
 5216 1a18 5745     		cmp	r7, r10
 5217 1a1a 00F0F880 		beq	.L541
 5218              	.L522:
 5219              	.LVL466:
 5220 1a1e 0197     		str	r7, [sp, #4]
1908:drivers/inv_mpu.c ****             st_shift[ii] = 0.f;
 5221              		.loc 1 1908 0
 5222 1a20 3C78     		ldrb	r4, [r7]	@ zero_extendqisi2
 5223 1a22 002C     		cmp	r4, #0
 5224 1a24 DFD1     		bne	.L519
1909:drivers/inv_mpu.c ****             continue;
 5225              		.loc 1 1909 0
 5226 1a26 0023     		movs	r3, #0
 5227 1a28 C8F80030 		str	r3, [r8]	@ float
 5228 1a2c F1E7     		b	.L520
 5229              	.LVL467:
 5230              	.L553:
ARM GAS  /tmp/cc18izUm.s 			page 147


 5231              	.LBE17:
 5232              	.LBE16:
1934:drivers/inv_mpu.c ****             (st_shift_cust > test.max_g))
 5233              		.loc 1 1934 0
 5234 1a2e 6949     		ldr	r1, .L561+4
 5235 1a30 019E     		ldr	r6, [sp, #4]	@ float
 5236 1a32 3046     		mov	r0, r6
 5237 1a34 FFF7FEFF 		bl	__aeabi_fcmplt
 5238              	.LVL468:
 5239 1a38 20B9     		cbnz	r0, .L527
 5240 1a3a 6749     		ldr	r1, .L561+8
 5241 1a3c 3046     		mov	r0, r6
 5242 1a3e FFF7FEFF 		bl	__aeabi_fcmpgt
 5243              	.LVL469:
 5244 1a42 18B1     		cbz	r0, .L525
 5245              	.L527:
1936:drivers/inv_mpu.c ****     }
 5246              		.loc 1 1936 0
 5247 1a44 08FA04F3 		lsl	r3, r8, r4
 5248 1a48 49EA0309 		orr	r9, r9, r3
 5249              	.LVL470:
 5250              	.L525:
1928:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5251              		.loc 1 1928 0
 5252 1a4c 0134     		adds	r4, r4, #1
 5253              	.LVL471:
 5254 1a4e 032C     		cmp	r4, #3
 5255 1a50 2AD0     		beq	.L558
 5256              	.LVL472:
 5257              	.L529:
1929:drivers/inv_mpu.c ****         if (st_shift[jj]) {
 5258              		.loc 1 1929 0
 5259 1a52 55F8040F 		ldr	r0, [r5, #4]!
 5260 1a56 5BF82430 		ldr	r3, [fp, r4, lsl #2]
 5261 1a5a C01A     		subs	r0, r0, r3
 5262 1a5c 0028     		cmp	r0, #0
 5263 1a5e B8BF     		it	lt
 5264 1a60 4042     		rsblt	r0, r0, #0
 5265 1a62 FFF7FEFF 		bl	__aeabi_i2f
 5266              	.LVL473:
 5267 1a66 4FF05E51 		mov	r1, #931135488
 5268 1a6a FFF7FEFF 		bl	__aeabi_fmul
 5269              	.LVL474:
 5270 1a6e 0190     		str	r0, [sp, #4]	@ float
 5271              	.LVL475:
1930:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
 5272              		.loc 1 1930 0
 5273 1a70 5AF82460 		ldr	r6, [r10, r4, lsl #2]	@ float
 5274 1a74 0021     		movs	r1, #0
 5275 1a76 3046     		mov	r0, r6
 5276              	.LVL476:
 5277 1a78 FFF7FEFF 		bl	__aeabi_fcmpeq
 5278              	.LVL477:
 5279 1a7c 0028     		cmp	r0, #0
 5280 1a7e D6D1     		bne	.L553
 5281              	.LVL478:
1931:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_accel_var)
ARM GAS  /tmp/cc18izUm.s 			page 148


 5282              		.loc 1 1931 0
 5283 1a80 3146     		mov	r1, r6
 5284 1a82 0198     		ldr	r0, [sp, #4]	@ float
 5285 1a84 FFF7FEFF 		bl	__aeabi_fdiv
 5286              	.LVL479:
 5287 1a88 4FF07E51 		mov	r1, #1065353216
 5288 1a8c FFF7FEFF 		bl	__aeabi_fsub
 5289              	.LVL480:
1932:drivers/inv_mpu.c ****                 result |= 1 << jj;
 5290              		.loc 1 1932 0
 5291 1a90 20F00040 		bic	r0, r0, #-2147483648
 5292 1a94 5149     		ldr	r1, .L561+12
 5293 1a96 FFF7FEFF 		bl	__aeabi_fcmpgt
 5294              	.LVL481:
 5295 1a9a 0028     		cmp	r0, #0
 5296 1a9c D6D0     		beq	.L525
1933:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_g) ||
 5297              		.loc 1 1933 0
 5298 1a9e 08FA04F3 		lsl	r3, r8, r4
 5299 1aa2 49EA0309 		orr	r9, r9, r3
 5300              	.LVL482:
 5301 1aa6 D1E7     		b	.L525
 5302              	.LVL483:
 5303              	.L558:
 5304 1aa8 3E46     		mov	r6, r7
 5305              	.LVL484:
 5306              	.LBE15:
 5307              	.LBE14:
2216:drivers/inv_mpu.c ****     gyro_result = gyro_self_test(gyro, gyro_st);
 5308              		.loc 1 2216 0
 5309 1aaa 5FFA89F9 		uxtb	r9, r9
 5310              	.LVL485:
 5311              	.LBB21:
 5312              	.LBB22:
1948:drivers/inv_mpu.c ****         return 0x07;
 5313              		.loc 1 1948 0
 5314 1aae 484B     		ldr	r3, .L561
 5315 1ab0 5868     		ldr	r0, [r3, #4]
 5316 1ab2 09AB     		add	r3, sp, #36
 5317 1ab4 0322     		movs	r2, #3
 5318 1ab6 0D21     		movs	r1, #13
 5319 1ab8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5320 1aba FFF7FEFF 		bl	I2C_Read
 5321              	.LVL486:
 5322 1abe 68B1     		cbz	r0, .L559
1949:drivers/inv_mpu.c **** 
 5323              		.loc 1 1949 0
 5324 1ac0 4FF00708 		mov	r8, #7
 5325              	.LVL487:
 5326              	.L530:
 5327              	.LBE22:
 5328              	.LBE21:
2220:drivers/inv_mpu.c ****         result |= 0x01;
 5329              		.loc 1 2220 0
 5330 1ac4 18F0FF0F 		tst	r8, #255
 5331 1ac8 0CBF     		ite	eq
 5332 1aca 0124     		moveq	r4, #1
ARM GAS  /tmp/cc18izUm.s 			page 149


 5333 1acc 0024     		movne	r4, #0
 5334              	.LVL488:
2222:drivers/inv_mpu.c ****         result |= 0x02;
 5335              		.loc 1 2222 0
 5336 1ace B9F1000F 		cmp	r9, #0
 5337 1ad2 7FF430AF 		bne	.L517
2223:drivers/inv_mpu.c **** 
 5338              		.loc 1 2223 0
 5339 1ad6 44F00204 		orr	r4, r4, #2
 5340              	.LVL489:
 5341 1ada 2CE7     		b	.L517
 5342              	.LVL490:
 5343              	.L559:
 5344              	.LBB24:
 5345              	.LBB23:
1951:drivers/inv_mpu.c ****     tmp[1] &= 0x1F;
 5346              		.loc 1 1951 0
 5347 1adc 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 5348 1ae0 03F01F03 		and	r3, r3, #31
 5349 1ae4 8DF82430 		strb	r3, [sp, #36]
1952:drivers/inv_mpu.c ****     tmp[2] &= 0x1F;
 5350              		.loc 1 1952 0
 5351 1ae8 9DF82530 		ldrb	r3, [sp, #37]	@ zero_extendqisi2
 5352 1aec 03F01F03 		and	r3, r3, #31
 5353 1af0 8DF82530 		strb	r3, [sp, #37]
1953:drivers/inv_mpu.c **** 
 5354              		.loc 1 1953 0
 5355 1af4 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 5356 1af8 03F01F03 		and	r3, r3, #31
 5357 1afc 8DF82630 		strb	r3, [sp, #38]
 5358              	.LVL491:
 5359 1b00 029B     		ldr	r3, [sp, #8]
 5360 1b02 A3F1040A 		sub	r10, r3, #4
 5361              	.LVL492:
 5362 1b06 09AF     		add	r7, sp, #36
1944:drivers/inv_mpu.c ****     unsigned char tmp[3];
 5363              		.loc 1 1944 0
 5364 1b08 4FF00008 		mov	r8, #0
1955:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5365              		.loc 1 1955 0
 5366 1b0c 4546     		mov	r5, r8
1956:drivers/inv_mpu.c ****         if (tmp[jj]) {
 5367              		.loc 1 1956 0
 5368 1b0e 0DF1440B 		add	fp, sp, #68
 5369              	.LVL493:
 5370 1b12 14E0     		b	.L538
 5371              	.LVL494:
 5372              	.L544:
1959:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
 5373              		.loc 1 1959 0
 5374 1b14 3248     		ldr	r0, .L561+16
 5375              	.LVL495:
 5376 1b16 35E0     		b	.L532
 5377              	.LVL496:
 5378              	.L531:
1964:drivers/inv_mpu.c ****             (st_shift_cust > test.max_dps))
 5379              		.loc 1 1964 0
ARM GAS  /tmp/cc18izUm.s 			page 150


 5380 1b18 3249     		ldr	r1, .L561+20
 5381 1b1a 019C     		ldr	r4, [sp, #4]	@ float
 5382 1b1c 2046     		mov	r0, r4
 5383              	.LVL497:
 5384 1b1e FFF7FEFF 		bl	__aeabi_fcmplt
 5385              	.LVL498:
 5386 1b22 20B9     		cbnz	r0, .L536
 5387 1b24 3049     		ldr	r1, .L561+24
 5388 1b26 2046     		mov	r0, r4
 5389 1b28 FFF7FEFF 		bl	__aeabi_fcmpgt
 5390              	.LVL499:
 5391 1b2c 18B1     		cbz	r0, .L534
 5392              	.L536:
1966:drivers/inv_mpu.c ****     }
 5393              		.loc 1 1966 0
 5394 1b2e 0123     		movs	r3, #1
 5395 1b30 AB40     		lsls	r3, r3, r5
 5396 1b32 48EA0308 		orr	r8, r8, r3
 5397              	.LVL500:
 5398              	.L534:
1955:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5399              		.loc 1 1955 0
 5400 1b36 0135     		adds	r5, r5, #1
 5401              	.LVL501:
 5402 1b38 0137     		adds	r7, r7, #1
 5403 1b3a 032D     		cmp	r5, #3
 5404 1b3c C2D0     		beq	.L530
 5405              	.LVL502:
 5406              	.L538:
1956:drivers/inv_mpu.c ****         if (tmp[jj]) {
 5407              		.loc 1 1956 0
 5408 1b3e 5AF8040F 		ldr	r0, [r10, #4]!
 5409 1b42 5BF82530 		ldr	r3, [fp, r5, lsl #2]
 5410 1b46 C01A     		subs	r0, r0, r3
 5411 1b48 0028     		cmp	r0, #0
 5412 1b4a B8BF     		it	lt
 5413 1b4c 4042     		rsblt	r0, r0, #0
 5414 1b4e FFF7FEFF 		bl	__aeabi_i2f
 5415              	.LVL503:
 5416 1b52 4FF05E51 		mov	r1, #931135488
 5417 1b56 FFF7FEFF 		bl	__aeabi_fmul
 5418              	.LVL504:
 5419 1b5a 0190     		str	r0, [sp, #4]	@ float
 5420              	.LVL505:
 5421 1b5c 0297     		str	r7, [sp, #8]
1957:drivers/inv_mpu.c ****             st_shift = 3275.f / test.gyro_sens;
 5422              		.loc 1 1957 0
 5423 1b5e 3C78     		ldrb	r4, [r7]	@ zero_extendqisi2
 5424 1b60 002C     		cmp	r4, #0
 5425 1b62 D9D0     		beq	.L531
 5426              	.LVL506:
1959:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
 5427              		.loc 1 1959 0
 5428 1b64 013C     		subs	r4, r4, #1
 5429 1b66 E4B2     		uxtb	r4, r4
 5430 1b68 3C70     		strb	r4, [r7]
 5431 1b6a 002C     		cmp	r4, #0
ARM GAS  /tmp/cc18izUm.s 			page 151


 5432 1b6c D2D0     		beq	.L544
 5433 1b6e 1C48     		ldr	r0, .L561+16
 5434              	.LVL507:
 5435              	.L533:
1960:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift - 1.f;
 5436              		.loc 1 1960 0
 5437 1b70 1E49     		ldr	r1, .L561+28
 5438 1b72 FFF7FEFF 		bl	__aeabi_fmul
 5439              	.LVL508:
1959:drivers/inv_mpu.c ****                 st_shift *= 1.046f;
 5440              		.loc 1 1959 0
 5441 1b76 013C     		subs	r4, r4, #1
 5442 1b78 14F0FF04 		ands	r4, r4, #255
 5443 1b7c F8D1     		bne	.L533
 5444 1b7e 0023     		movs	r3, #0
 5445 1b80 029A     		ldr	r2, [sp, #8]
 5446 1b82 1370     		strb	r3, [r2]
 5447              	.LVL509:
 5448              	.L532:
1961:drivers/inv_mpu.c ****             if (fabs(st_shift_var) > test.max_gyro_var)
 5449              		.loc 1 1961 0
 5450 1b84 0146     		mov	r1, r0
 5451 1b86 0198     		ldr	r0, [sp, #4]	@ float
 5452              	.LVL510:
 5453 1b88 FFF7FEFF 		bl	__aeabi_fdiv
 5454              	.LVL511:
 5455 1b8c 4FF07E51 		mov	r1, #1065353216
 5456 1b90 FFF7FEFF 		bl	__aeabi_fsub
 5457              	.LVL512:
1962:drivers/inv_mpu.c ****                 result |= 1 << jj;
 5458              		.loc 1 1962 0
 5459 1b94 20F00040 		bic	r0, r0, #-2147483648
 5460 1b98 1049     		ldr	r1, .L561+12
 5461 1b9a FFF7FEFF 		bl	__aeabi_fcmpgt
 5462              	.LVL513:
 5463 1b9e 0028     		cmp	r0, #0
 5464 1ba0 C9D0     		beq	.L534
1963:drivers/inv_mpu.c ****         } else if ((st_shift_cust < test.min_dps) ||
 5465              		.loc 1 1963 0
 5466 1ba2 0123     		movs	r3, #1
 5467 1ba4 AB40     		lsls	r3, r3, r5
 5468 1ba6 48EA0308 		orr	r8, r8, r3
 5469              	.LVL514:
 5470 1baa C4E7     		b	.L534
 5471              	.LVL515:
 5472              	.L557:
 5473              	.LBE23:
 5474              	.LBE24:
2254:drivers/inv_mpu.c **** 
 5475              		.loc 1 2254 0
 5476 1bac 0120     		movs	r0, #1
 5477 1bae FFF7FEFF 		bl	mpu_set_dmp_state
 5478              	.LVL516:
2256:drivers/inv_mpu.c **** }
 5479              		.loc 1 2256 0
 5480 1bb2 E5E6     		b	.L514
 5481              	.LVL517:
ARM GAS  /tmp/cc18izUm.s 			page 152


 5482              	.L516:
2209:drivers/inv_mpu.c ****             break;
 5483              		.loc 1 2209 0
 5484 1bb4 0122     		movs	r2, #1
 5485 1bb6 0EA9     		add	r1, sp, #56
 5486 1bb8 11A8     		add	r0, sp, #68
 5487 1bba FEF76DFA 		bl	get_st_biases
 5488              	.LVL518:
 5489 1bbe D8B1     		cbz	r0, .L518
 5490              	.LVL519:
 5491 1bc0 0122     		movs	r2, #1
 5492 1bc2 0EA9     		add	r1, sp, #56
 5493 1bc4 11A8     		add	r0, sp, #68
 5494 1bc6 FEF767FA 		bl	get_st_biases
 5495              	.LVL520:
 5496 1bca A8B1     		cbz	r0, .L518
2213:drivers/inv_mpu.c ****         goto restore;
 5497              		.loc 1 2213 0
 5498 1bcc 0024     		movs	r4, #0
 5499 1bce B2E6     		b	.L517
 5500              	.L562:
 5501              		.align	2
 5502              	.L561:
 5503 1bd0 00000000 		.word	.LANCHOR0
 5504 1bd4 9A99993E 		.word	1050253722
 5505 1bd8 3333733F 		.word	1064514355
 5506 1bdc 295C0F3E 		.word	1041194025
 5507 1be0 0000C841 		.word	1103626240
 5508 1be4 00002041 		.word	1092616192
 5509 1be8 0000D242 		.word	1121058816
 5510 1bec 54E3853F 		.word	1065739092
 5511 1bf0 7B14AE3E 		.word	1051595899
 5512 1bf4 1D5A843F 		.word	1065638429
 5513              	.LVL521:
 5514              	.L518:
 5515              	.LBB25:
 5516              	.LBB20:
 5517              	.LBB19:
 5518              	.LBB18:
1901:drivers/inv_mpu.c ****         return 0x07;
 5519              		.loc 1 1901 0
 5520 1bf8 0B4B     		ldr	r3, .L563
 5521 1bfa 5868     		ldr	r0, [r3, #4]
 5522 1bfc 08AB     		add	r3, sp, #32
 5523 1bfe 0422     		movs	r2, #4
 5524 1c00 0D21     		movs	r1, #13
 5525 1c02 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5526 1c04 FFF7FEFF 		bl	I2C_Read
 5527              	.LVL522:
 5528 1c08 0028     		cmp	r0, #0
 5529 1c0a 3FF4C2AE 		beq	.L560
 5530              	.L541:
 5531              	.LVL523:
 5532 1c0e 043D     		subs	r5, r5, #4
 5533              	.LVL524:
 5534              	.LBE18:
 5535              	.LBE19:
ARM GAS  /tmp/cc18izUm.s 			page 153


1924:drivers/inv_mpu.c ****     float st_shift[3], st_shift_cust, st_shift_var;
 5536              		.loc 1 1924 0
 5537 1c10 4FF00009 		mov	r9, #0
1928:drivers/inv_mpu.c ****         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
 5538              		.loc 1 1928 0
 5539 1c14 4C46     		mov	r4, r9
1929:drivers/inv_mpu.c ****         if (st_shift[jj]) {
 5540              		.loc 1 1929 0
 5541 1c16 0DF1380B 		add	fp, sp, #56
 5542              	.LVL525:
1930:drivers/inv_mpu.c ****             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
 5543              		.loc 1 1930 0
 5544 1c1a 0DF1240A 		add	r10, sp, #36
 5545              	.LVL526:
1936:drivers/inv_mpu.c ****     }
 5546              		.loc 1 1936 0
 5547 1c1e 4FF00108 		mov	r8, #1
1932:drivers/inv_mpu.c ****                 result |= 1 << jj;
 5548              		.loc 1 1932 0
 5549 1c22 3746     		mov	r7, r6
 5550 1c24 15E7     		b	.L529
 5551              	.L564:
 5552 1c26 00BF     		.align	2
 5553              	.L563:
 5554 1c28 00000000 		.word	.LANCHOR0
 5555              	.LBE20:
 5556              	.LBE25:
 5557              		.cfi_endproc
 5558              	.LFE100:
 5559              		.size	mpu_run_self_test, .-mpu_run_self_test
 5560              		.align	1
 5561              		.global	mpu_get_dmp_state
 5562              		.syntax unified
 5563              		.thumb
 5564              		.thumb_func
 5565              		.fpu softvfp
 5566              		.type	mpu_get_dmp_state, %function
 5567              	mpu_get_dmp_state:
 5568              	.LFB105:
2407:drivers/inv_mpu.c **** 
2408:drivers/inv_mpu.c **** /**
2409:drivers/inv_mpu.c ****  *  @brief      Get DMP state.
2410:drivers/inv_mpu.c ****  *  @param[out] enabled 1 if enabled.
2411:drivers/inv_mpu.c ****  *  @return     0 if successful.
2412:drivers/inv_mpu.c ****  */
2413:drivers/inv_mpu.c **** int mpu_get_dmp_state(unsigned char *enabled)
2414:drivers/inv_mpu.c **** {
 5569              		.loc 1 2414 0
 5570              		.cfi_startproc
 5571              		@ args = 0, pretend = 0, frame = 0
 5572              		@ frame_needed = 0, uses_anonymous_args = 0
 5573              		@ link register save eliminated.
 5574              	.LVL527:
2415:drivers/inv_mpu.c ****     enabled[0] = st.chip_cfg.dmp_on;
 5575              		.loc 1 2415 0
 5576 1c2c 024B     		ldr	r3, .L566
 5577 1c2e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
ARM GAS  /tmp/cc18izUm.s 			page 154


 5578 1c32 0370     		strb	r3, [r0]
2416:drivers/inv_mpu.c ****     return 0;
2417:drivers/inv_mpu.c **** }
 5579              		.loc 1 2417 0
 5580 1c34 0020     		movs	r0, #0
 5581              	.LVL528:
 5582 1c36 7047     		bx	lr
 5583              	.L567:
 5584              		.align	2
 5585              	.L566:
 5586 1c38 00000000 		.word	.LANCHOR0
 5587              		.cfi_endproc
 5588              	.LFE105:
 5589              		.size	mpu_get_dmp_state, .-mpu_get_dmp_state
 5590              		.align	1
 5591              		.global	mpu_get_compass_reg
 5592              		.syntax unified
 5593              		.thumb
 5594              		.thumb_func
 5595              		.fpu softvfp
 5596              		.type	mpu_get_compass_reg, %function
 5597              	mpu_get_compass_reg:
 5598              	.LFB106:
2418:drivers/inv_mpu.c **** 
2419:drivers/inv_mpu.c **** 
2420:drivers/inv_mpu.c **** /* This initialization is similar to the one in ak8975.c. */
2421:drivers/inv_mpu.c **** //static int setup_compass(void)
2422:drivers/inv_mpu.c **** //{
2423:drivers/inv_mpu.c **** //#ifdef AK89xx_SECONDARY
2424:drivers/inv_mpu.c **** //    unsigned char data[4], akm_addr;
2425:drivers/inv_mpu.c **** //
2426:drivers/inv_mpu.c **** //    mpu_set_bypass(1);
2427:drivers/inv_mpu.c **** //
2428:drivers/inv_mpu.c **** //    /* Find compass. Possible addresses range from 0x0C to 0x0F. */
2429:drivers/inv_mpu.c **** //    for (akm_addr = 0x0C; akm_addr <= 0x0F; akm_addr++) {
2430:drivers/inv_mpu.c **** //        int result;
2431:drivers/inv_mpu.c **** //        result = I2C_Read(akm_addr, AKM_REG_WHOAMI, 1, data);
2432:drivers/inv_mpu.c **** //        if (!result && (data[0] == AKM_WHOAMI))
2433:drivers/inv_mpu.c **** //            break;
2434:drivers/inv_mpu.c **** //    }
2435:drivers/inv_mpu.c **** //
2436:drivers/inv_mpu.c **** //    if (akm_addr > 0x0F) {
2437:drivers/inv_mpu.c **** //        /* TODO: Handle this case in all compass-related functions. */
2438:drivers/inv_mpu.c **** //        log_e("Compass not found.\n");
2439:drivers/inv_mpu.c **** //        return -1;
2440:drivers/inv_mpu.c **** //    }
2441:drivers/inv_mpu.c **** //
2442:drivers/inv_mpu.c **** //    st.chip_cfg.compass_addr = akm_addr;
2443:drivers/inv_mpu.c **** //
2444:drivers/inv_mpu.c **** //    data[0] = AKM_POWER_DOWN;
2445:drivers/inv_mpu.c **** //    if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
2446:drivers/inv_mpu.c **** //        return -1;
2447:drivers/inv_mpu.c **** //    DelayMs(1);
2448:drivers/inv_mpu.c **** //
2449:drivers/inv_mpu.c **** //    data[0] = AKM_FUSE_ROM_ACCESS;
2450:drivers/inv_mpu.c **** //    if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
2451:drivers/inv_mpu.c **** //        return -1;
ARM GAS  /tmp/cc18izUm.s 			page 155


2452:drivers/inv_mpu.c **** //    DelayMs(1);
2453:drivers/inv_mpu.c **** //
2454:drivers/inv_mpu.c **** //    /* Get sensitivity adjustment data from fuse ROM. */
2455:drivers/inv_mpu.c **** //    if (I2C_Read(st.chip_cfg.compass_addr, AKM_REG_ASAX, 3, data))
2456:drivers/inv_mpu.c **** //        return -1;
2457:drivers/inv_mpu.c **** //    st.chip_cfg.mag_sens_adj[0] = (long)data[0] + 128;
2458:drivers/inv_mpu.c **** //    st.chip_cfg.mag_sens_adj[1] = (long)data[1] + 128;
2459:drivers/inv_mpu.c **** //    st.chip_cfg.mag_sens_adj[2] = (long)data[2] + 128;
2460:drivers/inv_mpu.c **** //
2461:drivers/inv_mpu.c **** //    data[0] = AKM_POWER_DOWN;
2462:drivers/inv_mpu.c **** //    if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
2463:drivers/inv_mpu.c **** //        return -1;
2464:drivers/inv_mpu.c **** //    DelayMs(1);
2465:drivers/inv_mpu.c **** //
2466:drivers/inv_mpu.c **** //    mpu_set_bypass(0);
2467:drivers/inv_mpu.c **** //
2468:drivers/inv_mpu.c **** //    /* Set up master mode, master clock, and ES bit. */
2469:drivers/inv_mpu.c **** //    data[0] = 0x40;
2470:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->i2c_mst, 1, data))
2471:drivers/inv_mpu.c **** //        return -1;
2472:drivers/inv_mpu.c **** //
2473:drivers/inv_mpu.c **** //    /* Slave 0 reads from AKM data registers. */
2474:drivers/inv_mpu.c **** //    data[0] = BIT_I2C_READ | st.chip_cfg.compass_addr;
2475:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s0_addr, 1, data))
2476:drivers/inv_mpu.c **** //        return -1;
2477:drivers/inv_mpu.c **** //
2478:drivers/inv_mpu.c **** //    /* Compass reads start at this register. */
2479:drivers/inv_mpu.c **** //    data[0] = AKM_REG_ST1;
2480:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s0_reg, 1, data))
2481:drivers/inv_mpu.c **** //        return -1;
2482:drivers/inv_mpu.c **** //
2483:drivers/inv_mpu.c **** //    /* Enable slave 0, 8-byte reads. */
2484:drivers/inv_mpu.c **** //    data[0] = BIT_SLAVE_EN | 8;
2485:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s0_ctrl, 1, data))
2486:drivers/inv_mpu.c **** //        return -1;
2487:drivers/inv_mpu.c **** //
2488:drivers/inv_mpu.c **** //    /* Slave 1 changes AKM measurement mode. */
2489:drivers/inv_mpu.c **** //    data[0] = st.chip_cfg.compass_addr;
2490:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s1_addr, 1, data))
2491:drivers/inv_mpu.c **** //        return -1;
2492:drivers/inv_mpu.c **** //
2493:drivers/inv_mpu.c **** //    /* AKM measurement mode register. */
2494:drivers/inv_mpu.c **** //    data[0] = AKM_REG_CNTL;
2495:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s1_reg, 1, data))
2496:drivers/inv_mpu.c **** //        return -1;
2497:drivers/inv_mpu.c **** //
2498:drivers/inv_mpu.c **** //    /* Enable slave 1, 1-byte writes. */
2499:drivers/inv_mpu.c **** //    data[0] = BIT_SLAVE_EN | 1;
2500:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s1_ctrl, 1, data))
2501:drivers/inv_mpu.c **** //        return -1;
2502:drivers/inv_mpu.c **** //
2503:drivers/inv_mpu.c **** //    /* Set slave 1 data. */
2504:drivers/inv_mpu.c **** //    data[0] = AKM_SINGLE_MEASUREMENT;
2505:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->s1_do, 1, data))
2506:drivers/inv_mpu.c **** //        return -1;
2507:drivers/inv_mpu.c **** //
2508:drivers/inv_mpu.c **** //    /* Trigger slave 0 and slave 1 actions at each sample. */
ARM GAS  /tmp/cc18izUm.s 			page 156


2509:drivers/inv_mpu.c **** //    data[0] = 0x03;
2510:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->i2c_delay_ctrl, 1, data))
2511:drivers/inv_mpu.c **** //        return -1;
2512:drivers/inv_mpu.c **** //
2513:drivers/inv_mpu.c **** //#ifdef MPU9150
2514:drivers/inv_mpu.c **** //    /* For the MPU9150, the auxiliary I2C bus needs to be set to VDD. */
2515:drivers/inv_mpu.c **** //    data[0] = BIT_I2C_MST_VDDIO;
2516:drivers/inv_mpu.c **** //    if (I2C_Write(st.hw->addr, st.reg->yg_offs_tc, 1, data))
2517:drivers/inv_mpu.c **** //        return -1;
2518:drivers/inv_mpu.c **** //#endif
2519:drivers/inv_mpu.c **** //
2520:drivers/inv_mpu.c **** //    return 0;
2521:drivers/inv_mpu.c **** //#else
2522:drivers/inv_mpu.c **** //    return -1;
2523:drivers/inv_mpu.c **** //#endif
2524:drivers/inv_mpu.c **** //}
2525:drivers/inv_mpu.c **** 
2526:drivers/inv_mpu.c **** /**
2527:drivers/inv_mpu.c ****  *  @brief      Read raw compass data.
2528:drivers/inv_mpu.c ****  *  @param[out] data        Raw data in hardware units.
2529:drivers/inv_mpu.c ****  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
2530:drivers/inv_mpu.c ****  *  @return     0 if successful.
2531:drivers/inv_mpu.c ****  */
2532:drivers/inv_mpu.c **** int mpu_get_compass_reg(short *data, unsigned long *timestamp)
2533:drivers/inv_mpu.c **** {
 5599              		.loc 1 2533 0
 5600              		.cfi_startproc
 5601              		@ args = 0, pretend = 0, frame = 0
 5602              		@ frame_needed = 0, uses_anonymous_args = 0
 5603              		@ link register save eliminated.
 5604              	.LVL529:
2534:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2535:drivers/inv_mpu.c ****     unsigned char tmp[9];
2536:drivers/inv_mpu.c **** 
2537:drivers/inv_mpu.c ****     if (!(st.chip_cfg.sensors & INV_XYZ_COMPASS))
2538:drivers/inv_mpu.c ****         return -1;
2539:drivers/inv_mpu.c **** 
2540:drivers/inv_mpu.c **** #ifdef AK89xx_BYPASS
2541:drivers/inv_mpu.c ****     if (I2C_Read(st.chip_cfg.compass_addr, AKM_REG_ST1, 8, tmp))
2542:drivers/inv_mpu.c ****         return -1;
2543:drivers/inv_mpu.c ****     tmp[8] = AKM_SINGLE_MEASUREMENT;
2544:drivers/inv_mpu.c ****     if (I2C_Write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp+8))
2545:drivers/inv_mpu.c ****         return -1;
2546:drivers/inv_mpu.c **** #else
2547:drivers/inv_mpu.c ****     if (I2C_Read(st.hw->addr, st.reg->raw_compass, 8, tmp))
2548:drivers/inv_mpu.c ****         return -1;
2549:drivers/inv_mpu.c **** #endif
2550:drivers/inv_mpu.c **** 
2551:drivers/inv_mpu.c **** #if defined AK8975_SECONDARY
2552:drivers/inv_mpu.c ****     /* AK8975 doesn't have the overrun error bit. */
2553:drivers/inv_mpu.c ****     if (!(tmp[0] & AKM_DATA_READY))
2554:drivers/inv_mpu.c ****         return -2;
2555:drivers/inv_mpu.c ****     if ((tmp[7] & AKM_OVERFLOW) || (tmp[7] & AKM_DATA_ERROR))
2556:drivers/inv_mpu.c ****         return -3;
2557:drivers/inv_mpu.c **** #elif defined AK8963_SECONDARY
2558:drivers/inv_mpu.c ****     /* AK8963 doesn't have the data read error bit. */
2559:drivers/inv_mpu.c ****     if (!(tmp[0] & AKM_DATA_READY) || (tmp[0] & AKM_DATA_OVERRUN))
ARM GAS  /tmp/cc18izUm.s 			page 157


2560:drivers/inv_mpu.c ****         return -2;
2561:drivers/inv_mpu.c ****     if (tmp[7] & AKM_OVERFLOW)
2562:drivers/inv_mpu.c ****         return -3;
2563:drivers/inv_mpu.c **** #endif
2564:drivers/inv_mpu.c ****     data[0] = (tmp[2] << 8) | tmp[1];
2565:drivers/inv_mpu.c ****     data[1] = (tmp[4] << 8) | tmp[3];
2566:drivers/inv_mpu.c ****     data[2] = (tmp[6] << 8) | tmp[5];
2567:drivers/inv_mpu.c **** 
2568:drivers/inv_mpu.c ****     data[0] = ((long)data[0] * st.chip_cfg.mag_sens_adj[0]) >> 8;
2569:drivers/inv_mpu.c ****     data[1] = ((long)data[1] * st.chip_cfg.mag_sens_adj[1]) >> 8;
2570:drivers/inv_mpu.c ****     data[2] = ((long)data[2] * st.chip_cfg.mag_sens_adj[2]) >> 8;
2571:drivers/inv_mpu.c **** 
2572:drivers/inv_mpu.c ****     if (timestamp)
2573:drivers/inv_mpu.c ****         get_ms(timestamp);
2574:drivers/inv_mpu.c ****     return 0;
2575:drivers/inv_mpu.c **** #else
2576:drivers/inv_mpu.c ****     return -1;
2577:drivers/inv_mpu.c **** #endif
2578:drivers/inv_mpu.c **** }
 5605              		.loc 1 2578 0
 5606 1c3c 4FF0FF30 		mov	r0, #-1
 5607              	.LVL530:
 5608 1c40 7047     		bx	lr
 5609              		.cfi_endproc
 5610              	.LFE106:
 5611              		.size	mpu_get_compass_reg, .-mpu_get_compass_reg
 5612              		.align	1
 5613              		.global	mpu_get_compass_fsr
 5614              		.syntax unified
 5615              		.thumb
 5616              		.thumb_func
 5617              		.fpu softvfp
 5618              		.type	mpu_get_compass_fsr, %function
 5619              	mpu_get_compass_fsr:
 5620              	.LFB107:
2579:drivers/inv_mpu.c **** 
2580:drivers/inv_mpu.c **** /**
2581:drivers/inv_mpu.c ****  *  @brief      Get the compass full-scale range.
2582:drivers/inv_mpu.c ****  *  @param[out] fsr Current full-scale range.
2583:drivers/inv_mpu.c ****  *  @return     0 if successful.
2584:drivers/inv_mpu.c ****  */
2585:drivers/inv_mpu.c **** int mpu_get_compass_fsr(unsigned short *fsr)
2586:drivers/inv_mpu.c **** {
 5621              		.loc 1 2586 0
 5622              		.cfi_startproc
 5623              		@ args = 0, pretend = 0, frame = 0
 5624              		@ frame_needed = 0, uses_anonymous_args = 0
 5625              		@ link register save eliminated.
 5626              	.LVL531:
2587:drivers/inv_mpu.c **** #ifdef AK89xx_SECONDARY
2588:drivers/inv_mpu.c ****     fsr[0] = st.hw->compass_fsr;
2589:drivers/inv_mpu.c ****     return 0;
2590:drivers/inv_mpu.c **** #else
2591:drivers/inv_mpu.c ****     return -1;
2592:drivers/inv_mpu.c **** #endif
2593:drivers/inv_mpu.c **** }
 5627              		.loc 1 2593 0
ARM GAS  /tmp/cc18izUm.s 			page 158


 5628 1c42 4FF0FF30 		mov	r0, #-1
 5629              	.LVL532:
 5630 1c46 7047     		bx	lr
 5631              		.cfi_endproc
 5632              	.LFE107:
 5633              		.size	mpu_get_compass_fsr, .-mpu_get_compass_fsr
 5634              		.align	1
 5635              		.global	mpu_lp_motion_interrupt
 5636              		.syntax unified
 5637              		.thumb
 5638              		.thumb_func
 5639              		.fpu softvfp
 5640              		.type	mpu_lp_motion_interrupt, %function
 5641              	mpu_lp_motion_interrupt:
 5642              	.LFB108:
2594:drivers/inv_mpu.c **** 
2595:drivers/inv_mpu.c **** /**
2596:drivers/inv_mpu.c ****  *  @brief      Enters LP accel motion interrupt mode.
2597:drivers/inv_mpu.c ****  *  The behavior of this feature is very different between the MPU6050 and the
2598:drivers/inv_mpu.c ****  *  MPU6500. Each chip's version of this feature is explained below.
2599:drivers/inv_mpu.c ****  *
2600:drivers/inv_mpu.c ****  *  \n MPU6050:
2601:drivers/inv_mpu.c ****  *  \n When this mode is first enabled, the hardware captures a single accel
2602:drivers/inv_mpu.c ****  *  sample, and subsequent samples are compared with this one to determine if
2603:drivers/inv_mpu.c ****  *  the device is in motion. Therefore, whenever this "locked" sample needs to
2604:drivers/inv_mpu.c ****  *  be changed, this function must be called again.
2605:drivers/inv_mpu.c ****  *
2606:drivers/inv_mpu.c ****  *  \n The hardware motion threshold can be between 32mg and 8160mg in 32mg
2607:drivers/inv_mpu.c ****  *  increments.
2608:drivers/inv_mpu.c ****  *
2609:drivers/inv_mpu.c ****  *  \n Low-power accel mode supports the following frequencies:
2610:drivers/inv_mpu.c ****  *  \n 1.25Hz, 5Hz, 20Hz, 40Hz
2611:drivers/inv_mpu.c ****  *
2612:drivers/inv_mpu.c ****  *  \n MPU6500:
2613:drivers/inv_mpu.c ****  *  \n Unlike the MPU6050 version, the hardware does not "lock in" a reference
2614:drivers/inv_mpu.c ****  *  sample. The hardware monitors the accel data and detects any large change
2615:drivers/inv_mpu.c ****  *  over a short period of time.
2616:drivers/inv_mpu.c ****  *
2617:drivers/inv_mpu.c ****  *  \n The hardware motion threshold can be between 4mg and 1020mg in 4mg
2618:drivers/inv_mpu.c ****  *  increments.
2619:drivers/inv_mpu.c ****  *
2620:drivers/inv_mpu.c ****  *  \n MPU6500 Low-power accel mode supports the following frequencies:
2621:drivers/inv_mpu.c ****  *  \n 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
2622:drivers/inv_mpu.c ****  *
2623:drivers/inv_mpu.c ****  *  \n\n NOTES:
2624:drivers/inv_mpu.c ****  *  \n The driver will round down @e thresh to the nearest supported value if
2625:drivers/inv_mpu.c ****  *  an unsupported threshold is selected.
2626:drivers/inv_mpu.c ****  *  \n To select a fractional wake-up frequency, round down the value passed to
2627:drivers/inv_mpu.c ****  *  @e lpa_freq.
2628:drivers/inv_mpu.c ****  *  \n The MPU6500 does not support a delay parameter. If this function is used
2629:drivers/inv_mpu.c ****  *  for the MPU6500, the value passed to @e time will be ignored.
2630:drivers/inv_mpu.c ****  *  \n To disable this mode, set @e lpa_freq to zero. The driver will restore
2631:drivers/inv_mpu.c ****  *  the previous configuration.
2632:drivers/inv_mpu.c ****  *
2633:drivers/inv_mpu.c ****  *  @param[in]  thresh      Motion threshold in mg.
2634:drivers/inv_mpu.c ****  *  @param[in]  time        Duration in milliseconds that the accel data must
2635:drivers/inv_mpu.c ****  *                          exceed @e thresh before motion is reported.
ARM GAS  /tmp/cc18izUm.s 			page 159


2636:drivers/inv_mpu.c ****  *  @param[in]  lpa_freq    Minimum sampling rate, or zero to disable.
2637:drivers/inv_mpu.c ****  *  @return     0 if successful.
2638:drivers/inv_mpu.c ****  */
2639:drivers/inv_mpu.c **** int mpu_lp_motion_interrupt(unsigned short thresh, unsigned char time,
2640:drivers/inv_mpu.c ****     unsigned char lpa_freq)
2641:drivers/inv_mpu.c **** {
 5643              		.loc 1 2641 0
 5644              		.cfi_startproc
 5645              		@ args = 0, pretend = 0, frame = 8
 5646              		@ frame_needed = 0, uses_anonymous_args = 0
 5647              	.LVL533:
 5648 1c48 F0B5     		push	{r4, r5, r6, r7, lr}
 5649              		.cfi_def_cfa_offset 20
 5650              		.cfi_offset 4, -20
 5651              		.cfi_offset 5, -16
 5652              		.cfi_offset 6, -12
 5653              		.cfi_offset 7, -8
 5654              		.cfi_offset 14, -4
 5655 1c4a 83B0     		sub	sp, sp, #12
 5656              		.cfi_def_cfa_offset 32
2642:drivers/inv_mpu.c ****     unsigned char data[3];
2643:drivers/inv_mpu.c **** 
2644:drivers/inv_mpu.c ****     if (lpa_freq) {
 5657              		.loc 1 2644 0
 5658 1c4c 82B9     		cbnz	r2, .L571
 5659              	.LVL534:
 5660              	.LBB30:
2645:drivers/inv_mpu.c ****         unsigned char thresh_hw;
2646:drivers/inv_mpu.c **** 
2647:drivers/inv_mpu.c **** #if defined MPU6050
2648:drivers/inv_mpu.c ****         /* TODO: Make these const/#defines. */
2649:drivers/inv_mpu.c ****         /* 1LSb = 32mg. */
2650:drivers/inv_mpu.c ****         if (thresh > 8160)
2651:drivers/inv_mpu.c ****             thresh_hw = 255;
2652:drivers/inv_mpu.c ****         else if (thresh < 32)
2653:drivers/inv_mpu.c ****             thresh_hw = 1;
2654:drivers/inv_mpu.c ****         else
2655:drivers/inv_mpu.c ****             thresh_hw = thresh >> 5;
2656:drivers/inv_mpu.c **** #elif defined MPU6500
2657:drivers/inv_mpu.c ****         /* 1LSb = 4mg. */
2658:drivers/inv_mpu.c ****         if (thresh > 1020)
2659:drivers/inv_mpu.c ****             thresh_hw = 255;
2660:drivers/inv_mpu.c ****         else if (thresh < 4)
2661:drivers/inv_mpu.c ****             thresh_hw = 1;
2662:drivers/inv_mpu.c ****         else
2663:drivers/inv_mpu.c ****             thresh_hw = thresh >> 2;
2664:drivers/inv_mpu.c **** #endif
2665:drivers/inv_mpu.c **** 
2666:drivers/inv_mpu.c ****         if (!time)
2667:drivers/inv_mpu.c ****             /* Minimum duration must be 1ms. */
2668:drivers/inv_mpu.c ****             time = 1;
2669:drivers/inv_mpu.c **** 
2670:drivers/inv_mpu.c **** #if defined MPU6050
2671:drivers/inv_mpu.c ****         if (lpa_freq > 40)
2672:drivers/inv_mpu.c **** #elif defined MPU6500
2673:drivers/inv_mpu.c ****         if (lpa_freq > 640)
2674:drivers/inv_mpu.c **** #endif
ARM GAS  /tmp/cc18izUm.s 			page 160


2675:drivers/inv_mpu.c ****             /* At this point, the chip has not been re-configured, so the
2676:drivers/inv_mpu.c ****              * function can safely exit.
2677:drivers/inv_mpu.c ****              */
2678:drivers/inv_mpu.c ****             return -1;
2679:drivers/inv_mpu.c **** 
2680:drivers/inv_mpu.c ****         if (!st.chip_cfg.int_motion_only) {
2681:drivers/inv_mpu.c ****             /* Store current settings for later. */
2682:drivers/inv_mpu.c ****             if (st.chip_cfg.dmp_on) {
2683:drivers/inv_mpu.c ****                 mpu_set_dmp_state(0);
2684:drivers/inv_mpu.c ****                 st.chip_cfg.cache.dmp_on = 1;
2685:drivers/inv_mpu.c ****             } else
2686:drivers/inv_mpu.c ****                 st.chip_cfg.cache.dmp_on = 0;
2687:drivers/inv_mpu.c ****             mpu_get_gyro_fsr(&st.chip_cfg.cache.gyro_fsr);
2688:drivers/inv_mpu.c ****             mpu_get_accel_fsr(&st.chip_cfg.cache.accel_fsr);
2689:drivers/inv_mpu.c ****             mpu_get_lpf(&st.chip_cfg.cache.lpf);
2690:drivers/inv_mpu.c ****             mpu_get_sample_rate(&st.chip_cfg.cache.sample_rate);
2691:drivers/inv_mpu.c ****             st.chip_cfg.cache.sensors_on = st.chip_cfg.sensors;
2692:drivers/inv_mpu.c ****             mpu_get_fifo_config(&st.chip_cfg.cache.fifo_sensors);
2693:drivers/inv_mpu.c ****         }
2694:drivers/inv_mpu.c **** 
2695:drivers/inv_mpu.c **** #ifdef MPU6050
2696:drivers/inv_mpu.c ****         /* Disable hardware interrupts for now. */
2697:drivers/inv_mpu.c ****         set_int_enable(0);
2698:drivers/inv_mpu.c **** 
2699:drivers/inv_mpu.c ****         /* Enter full-power accel-only mode. */
2700:drivers/inv_mpu.c ****         mpu_lp_accel_mode(0);
2701:drivers/inv_mpu.c **** 
2702:drivers/inv_mpu.c ****         /* Override current LPF (and HPF) settings to obtain a valid accel
2703:drivers/inv_mpu.c ****          * reading.
2704:drivers/inv_mpu.c ****          */
2705:drivers/inv_mpu.c ****         data[0] = INV_FILTER_256HZ_NOLPF2;
2706:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->lpf, 1, data))
2707:drivers/inv_mpu.c ****             return -1;
2708:drivers/inv_mpu.c **** 
2709:drivers/inv_mpu.c ****         /* NOTE: Digital high pass filter should be configured here. Since this
2710:drivers/inv_mpu.c ****          * driver doesn't modify those bits anywhere, they should already be
2711:drivers/inv_mpu.c ****          * cleared by default.
2712:drivers/inv_mpu.c ****          */
2713:drivers/inv_mpu.c **** 
2714:drivers/inv_mpu.c ****         /* Configure the device to send motion interrupts. */
2715:drivers/inv_mpu.c ****         /* Enable motion interrupt. */
2716:drivers/inv_mpu.c ****         data[0] = BIT_MOT_INT_EN;
2717:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, data))
2718:drivers/inv_mpu.c ****             goto lp_int_restore;
2719:drivers/inv_mpu.c **** 
2720:drivers/inv_mpu.c ****         /* Set motion interrupt parameters. */
2721:drivers/inv_mpu.c ****         data[0] = thresh_hw;
2722:drivers/inv_mpu.c ****         data[1] = time;
2723:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->motion_thr, 2, data))
2724:drivers/inv_mpu.c ****             goto lp_int_restore;
2725:drivers/inv_mpu.c **** 
2726:drivers/inv_mpu.c ****         /* Force hardware to "lock" current accel sample. */
2727:drivers/inv_mpu.c ****         DelayMs(5);
2728:drivers/inv_mpu.c ****         data[0] = (st.chip_cfg.accel_fsr << 3) | BITS_HPF;
2729:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->accel_cfg, 1, data))
2730:drivers/inv_mpu.c ****             goto lp_int_restore;
2731:drivers/inv_mpu.c **** 
ARM GAS  /tmp/cc18izUm.s 			page 161


2732:drivers/inv_mpu.c ****         /* Set up LP accel mode. */
2733:drivers/inv_mpu.c ****         data[0] = BIT_LPA_CYCLE;
2734:drivers/inv_mpu.c ****         if (lpa_freq == 1)
2735:drivers/inv_mpu.c ****             data[1] = INV_LPA_1_25HZ;
2736:drivers/inv_mpu.c ****         else if (lpa_freq <= 5)
2737:drivers/inv_mpu.c ****             data[1] = INV_LPA_5HZ;
2738:drivers/inv_mpu.c ****         else if (lpa_freq <= 20)
2739:drivers/inv_mpu.c ****             data[1] = INV_LPA_20HZ;
2740:drivers/inv_mpu.c ****         else
2741:drivers/inv_mpu.c ****             data[1] = INV_LPA_40HZ;
2742:drivers/inv_mpu.c ****         data[1] = (data[1] << 6) | BIT_STBY_XYZG;
2743:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
2744:drivers/inv_mpu.c ****             goto lp_int_restore;
2745:drivers/inv_mpu.c **** 
2746:drivers/inv_mpu.c ****         st.chip_cfg.int_motion_only = 1;
2747:drivers/inv_mpu.c ****         return 0;
2748:drivers/inv_mpu.c **** #elif defined MPU6500
2749:drivers/inv_mpu.c ****         /* Disable hardware interrupts. */
2750:drivers/inv_mpu.c ****         set_int_enable(0);
2751:drivers/inv_mpu.c **** 
2752:drivers/inv_mpu.c ****         /* Enter full-power accel-only mode, no FIFO/DMP. */
2753:drivers/inv_mpu.c ****         data[0] = 0;
2754:drivers/inv_mpu.c ****         data[1] = 0;
2755:drivers/inv_mpu.c ****         data[2] = BIT_STBY_XYZG;
2756:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->user_ctrl, 3, data))
2757:drivers/inv_mpu.c ****             goto lp_int_restore;
2758:drivers/inv_mpu.c **** 
2759:drivers/inv_mpu.c ****         /* Set motion threshold. */
2760:drivers/inv_mpu.c ****         data[0] = thresh_hw;
2761:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->motion_thr, 1, data))
2762:drivers/inv_mpu.c ****             goto lp_int_restore;
2763:drivers/inv_mpu.c **** 
2764:drivers/inv_mpu.c ****         /* Set wake frequency. */
2765:drivers/inv_mpu.c ****         if (lpa_freq == 1)
2766:drivers/inv_mpu.c ****             data[0] = INV_LPA_1_25HZ;
2767:drivers/inv_mpu.c ****         else if (lpa_freq == 2)
2768:drivers/inv_mpu.c ****             data[0] = INV_LPA_2_5HZ;
2769:drivers/inv_mpu.c ****         else if (lpa_freq <= 5)
2770:drivers/inv_mpu.c ****             data[0] = INV_LPA_5HZ;
2771:drivers/inv_mpu.c ****         else if (lpa_freq <= 10)
2772:drivers/inv_mpu.c ****             data[0] = INV_LPA_10HZ;
2773:drivers/inv_mpu.c ****         else if (lpa_freq <= 20)
2774:drivers/inv_mpu.c ****             data[0] = INV_LPA_20HZ;
2775:drivers/inv_mpu.c ****         else if (lpa_freq <= 40)
2776:drivers/inv_mpu.c ****             data[0] = INV_LPA_40HZ;
2777:drivers/inv_mpu.c ****         else if (lpa_freq <= 80)
2778:drivers/inv_mpu.c ****             data[0] = INV_LPA_80HZ;
2779:drivers/inv_mpu.c ****         else if (lpa_freq <= 160)
2780:drivers/inv_mpu.c ****             data[0] = INV_LPA_160HZ;
2781:drivers/inv_mpu.c ****         else if (lpa_freq <= 320)
2782:drivers/inv_mpu.c ****             data[0] = INV_LPA_320HZ;
2783:drivers/inv_mpu.c ****         else
2784:drivers/inv_mpu.c ****             data[0] = INV_LPA_640HZ;
2785:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->lp_accel_odr, 1, data))
2786:drivers/inv_mpu.c ****             goto lp_int_restore;
2787:drivers/inv_mpu.c **** 
2788:drivers/inv_mpu.c ****         /* Enable motion interrupt (MPU6500 version). */
ARM GAS  /tmp/cc18izUm.s 			page 162


2789:drivers/inv_mpu.c ****         data[0] = BITS_WOM_EN;
2790:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->accel_intel, 1, data))
2791:drivers/inv_mpu.c ****             goto lp_int_restore;
2792:drivers/inv_mpu.c **** 
2793:drivers/inv_mpu.c ****         /* Enable cycle mode. */
2794:drivers/inv_mpu.c ****         data[0] = BIT_LPA_CYCLE;
2795:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
2796:drivers/inv_mpu.c ****             goto lp_int_restore;
2797:drivers/inv_mpu.c **** 
2798:drivers/inv_mpu.c ****         /* Enable interrupt. */
2799:drivers/inv_mpu.c ****         data[0] = BIT_MOT_INT_EN;
2800:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, data))
2801:drivers/inv_mpu.c ****             goto lp_int_restore;
2802:drivers/inv_mpu.c **** 
2803:drivers/inv_mpu.c ****         st.chip_cfg.int_motion_only = 1;
2804:drivers/inv_mpu.c ****         return 0;
2805:drivers/inv_mpu.c **** #endif
2806:drivers/inv_mpu.c ****     } else {
2807:drivers/inv_mpu.c ****         /* Don't "restore" the previous state if no state has been saved. */
2808:drivers/inv_mpu.c ****         int ii;
2809:drivers/inv_mpu.c ****         char *cache_ptr = (char*)&st.chip_cfg.cache;
2810:drivers/inv_mpu.c ****         for (ii = 0; ii < sizeof(st.chip_cfg.cache); ii++) {
2811:drivers/inv_mpu.c ****             if (cache_ptr[ii] != 0)
 5661              		.loc 1 2811 0 discriminator 1
 5662 1c4e 774B     		ldr	r3, .L597
 5663 1c50 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 5664 1c52 002B     		cmp	r3, #0
 5665 1c54 60D1     		bne	.L572
 5666 1c56 7549     		ldr	r1, .L597
 5667              	.LVL535:
 5668 1c58 01F11703 		add	r3, r1, #23
 5669 1c5c 2231     		adds	r1, r1, #34
 5670              	.LVL536:
 5671              	.L584:
 5672              		.loc 1 2811 0 is_stmt 0
 5673 1c5e 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 5674              	.LVL537:
 5675 1c62 002A     		cmp	r2, #0
 5676 1c64 58D1     		bne	.L572
 5677              	.LVL538:
2810:drivers/inv_mpu.c ****             if (cache_ptr[ii] != 0)
 5678              		.loc 1 2810 0 is_stmt 1 discriminator 2
 5679 1c66 8B42     		cmp	r3, r1
 5680 1c68 F9D1     		bne	.L584
2812:drivers/inv_mpu.c ****                 goto lp_int_restore;
2813:drivers/inv_mpu.c ****         }
2814:drivers/inv_mpu.c ****         /* If we reach this point, motion interrupt mode hasn't been used yet. */
2815:drivers/inv_mpu.c ****         return -1;
 5681              		.loc 1 2815 0
 5682 1c6a 4FF0FF30 		mov	r0, #-1
 5683              	.LVL539:
 5684 1c6e 78E0     		b	.L570
 5685              	.LVL540:
 5686              	.L571:
 5687 1c70 0C46     		mov	r4, r1
 5688 1c72 1746     		mov	r7, r2
 5689              	.LBE30:
ARM GAS  /tmp/cc18izUm.s 			page 163


 5690              	.LBB31:
2650:drivers/inv_mpu.c ****             thresh_hw = 255;
 5691              		.loc 1 2650 0
 5692 1c74 B0F5FF5F 		cmp	r0, #8160
 5693 1c78 04D8     		bhi	.L586
2652:drivers/inv_mpu.c ****             thresh_hw = 1;
 5694              		.loc 1 2652 0
 5695 1c7a 1F28     		cmp	r0, #31
 5696 1c7c 73D9     		bls	.L587
2655:drivers/inv_mpu.c **** #elif defined MPU6500
 5697              		.loc 1 2655 0
 5698 1c7e C0F34716 		ubfx	r6, r0, #5, #8
 5699              	.LVL541:
 5700 1c82 00E0     		b	.L574
 5701              	.LVL542:
 5702              	.L586:
2651:drivers/inv_mpu.c ****         else if (thresh < 32)
 5703              		.loc 1 2651 0
 5704 1c84 FF26     		movs	r6, #255
 5705              	.L574:
 5706              	.LVL543:
2668:drivers/inv_mpu.c **** 
 5707              		.loc 1 2668 0
 5708 1c86 002C     		cmp	r4, #0
 5709 1c88 08BF     		it	eq
 5710 1c8a 0124     		moveq	r4, #1
 5711              	.LVL544:
2671:drivers/inv_mpu.c **** #elif defined MPU6500
 5712              		.loc 1 2671 0
 5713 1c8c 282F     		cmp	r7, #40
 5714 1c8e 00F2C680 		bhi	.L588
2680:drivers/inv_mpu.c ****             /* Store current settings for later. */
 5715              		.loc 1 2680 0
 5716 1c92 664B     		ldr	r3, .L597
 5717 1c94 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 5718 1c96 EBB9     		cbnz	r3, .L577
2682:drivers/inv_mpu.c ****                 mpu_set_dmp_state(0);
 5719              		.loc 1 2682 0
 5720 1c98 644B     		ldr	r3, .L597
 5721 1c9a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 5722 1c9e 002B     		cmp	r3, #0
 5723 1ca0 63D1     		bne	.L593
2686:drivers/inv_mpu.c ****             mpu_get_gyro_fsr(&st.chip_cfg.cache.gyro_fsr);
 5724              		.loc 1 2686 0
 5725 1ca2 0022     		movs	r2, #0
 5726              	.LVL545:
 5727 1ca4 614B     		ldr	r3, .L597
 5728 1ca6 83F82020 		strb	r2, [r3, #32]
 5729              	.LVL546:
 5730              	.L579:
2687:drivers/inv_mpu.c ****             mpu_get_accel_fsr(&st.chip_cfg.cache.accel_fsr);
 5731              		.loc 1 2687 0
 5732 1caa 604D     		ldr	r5, .L597
 5733 1cac 05F11600 		add	r0, r5, #22
 5734 1cb0 FFF7FEFF 		bl	mpu_get_gyro_fsr
 5735              	.LVL547:
2688:drivers/inv_mpu.c ****             mpu_get_lpf(&st.chip_cfg.cache.lpf);
ARM GAS  /tmp/cc18izUm.s 			page 164


 5736              		.loc 1 2688 0
 5737 1cb4 05F11800 		add	r0, r5, #24
 5738 1cb8 FFF7FEFF 		bl	mpu_get_accel_fsr
 5739              	.LVL548:
2689:drivers/inv_mpu.c ****             mpu_get_sample_rate(&st.chip_cfg.cache.sample_rate);
 5740              		.loc 1 2689 0
 5741 1cbc 05F11A00 		add	r0, r5, #26
 5742 1cc0 FFF7FEFF 		bl	mpu_get_lpf
 5743              	.LVL549:
2690:drivers/inv_mpu.c ****             st.chip_cfg.cache.sensors_on = st.chip_cfg.sensors;
 5744              		.loc 1 2690 0
 5745 1cc4 05F11C00 		add	r0, r5, #28
 5746 1cc8 FFF7FEFF 		bl	mpu_get_sample_rate
 5747              	.LVL550:
2691:drivers/inv_mpu.c ****             mpu_get_fifo_config(&st.chip_cfg.cache.fifo_sensors);
 5748              		.loc 1 2691 0
 5749 1ccc AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 5750 1cce AB77     		strb	r3, [r5, #30]
 5751              	.LVL551:
 5752              	.LBB32:
 5753              	.LBB33:
1515:drivers/inv_mpu.c ****     return 0;
 5754              		.loc 1 1515 0
 5755 1cd0 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5756 1cd2 EB77     		strb	r3, [r5, #31]
 5757              	.LVL552:
 5758              	.L577:
 5759              	.LBE33:
 5760              	.LBE32:
2697:drivers/inv_mpu.c **** 
 5761              		.loc 1 2697 0
 5762 1cd4 0020     		movs	r0, #0
 5763 1cd6 FEF793F9 		bl	set_int_enable
 5764              	.LVL553:
2700:drivers/inv_mpu.c **** 
 5765              		.loc 1 2700 0
 5766 1cda 0020     		movs	r0, #0
 5767 1cdc FFF7FEFF 		bl	mpu_lp_accel_mode
 5768              	.LVL554:
2705:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->lpf, 1, data))
 5769              		.loc 1 2705 0
 5770 1ce0 02AB     		add	r3, sp, #8
 5771 1ce2 0022     		movs	r2, #0
 5772 1ce4 03F8042D 		strb	r2, [r3, #-4]!
2706:drivers/inv_mpu.c ****             return -1;
 5773              		.loc 1 2706 0
 5774 1ce8 504A     		ldr	r2, .L597
 5775 1cea 1168     		ldr	r1, [r2]
 5776 1cec 5068     		ldr	r0, [r2, #4]
 5777 1cee 0122     		movs	r2, #1
 5778 1cf0 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 5779 1cf2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5780 1cf4 FFF7FEFF 		bl	I2C_Write
 5781              	.LVL555:
 5782 1cf8 0028     		cmp	r0, #0
 5783 1cfa 40F09380 		bne	.L589
2716:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->int_enable, 1, data))
ARM GAS  /tmp/cc18izUm.s 			page 165


 5784              		.loc 1 2716 0
 5785 1cfe 02AB     		add	r3, sp, #8
 5786 1d00 4022     		movs	r2, #64
 5787 1d02 03F8042D 		strb	r2, [r3, #-4]!
2717:drivers/inv_mpu.c ****             goto lp_int_restore;
 5788              		.loc 1 2717 0
 5789 1d06 494A     		ldr	r2, .L597
 5790 1d08 1168     		ldr	r1, [r2]
 5791 1d0a 5068     		ldr	r0, [r2, #4]
 5792 1d0c 0122     		movs	r2, #1
 5793 1d0e C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 5794 1d10 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5795 1d12 FFF7FEFF 		bl	I2C_Write
 5796              	.LVL556:
 5797 1d16 80B3     		cbz	r0, .L594
 5798              	.LVL557:
 5799              	.L572:
 5800              	.LBE31:
2816:drivers/inv_mpu.c ****     }
2817:drivers/inv_mpu.c **** lp_int_restore:
2818:drivers/inv_mpu.c ****     /* Set to invalid values to ensure no I2C writes are skipped. */
2819:drivers/inv_mpu.c ****     st.chip_cfg.gyro_fsr = 0xFF;
 5801              		.loc 1 2819 0
 5802 1d18 444C     		ldr	r4, .L597
 5803 1d1a FF23     		movs	r3, #255
 5804 1d1c 2372     		strb	r3, [r4, #8]
2820:drivers/inv_mpu.c ****     st.chip_cfg.accel_fsr = 0xFF;
 5805              		.loc 1 2820 0
 5806 1d1e 6372     		strb	r3, [r4, #9]
2821:drivers/inv_mpu.c ****     st.chip_cfg.lpf = 0xFF;
 5807              		.loc 1 2821 0
 5808 1d20 E372     		strb	r3, [r4, #11]
2822:drivers/inv_mpu.c ****     st.chip_cfg.sample_rate = 0xFFFF;
 5809              		.loc 1 2822 0
 5810 1d22 4FF6FF72 		movw	r2, #65535
 5811 1d26 E281     		strh	r2, [r4, #14]	@ movhi
2823:drivers/inv_mpu.c ****     st.chip_cfg.sensors = 0xFF;
 5812              		.loc 1 2823 0
 5813 1d28 A372     		strb	r3, [r4, #10]
2824:drivers/inv_mpu.c ****     st.chip_cfg.fifo_enable = 0xFF;
 5814              		.loc 1 2824 0
 5815 1d2a 2374     		strb	r3, [r4, #16]
2825:drivers/inv_mpu.c ****     st.chip_cfg.clk_src = INV_CLK_PLL;
 5816              		.loc 1 2825 0
 5817 1d2c 0123     		movs	r3, #1
 5818 1d2e 2373     		strb	r3, [r4, #12]
2826:drivers/inv_mpu.c ****     mpu_set_sensors(st.chip_cfg.cache.sensors_on);
 5819              		.loc 1 2826 0
 5820 1d30 A07F     		ldrb	r0, [r4, #30]	@ zero_extendqisi2
 5821 1d32 FFF7FEFF 		bl	mpu_set_sensors
 5822              	.LVL558:
2827:drivers/inv_mpu.c ****     mpu_set_gyro_fsr(st.chip_cfg.cache.gyro_fsr);
 5823              		.loc 1 2827 0
 5824 1d36 E08A     		ldrh	r0, [r4, #22]
 5825 1d38 FFF7FEFF 		bl	mpu_set_gyro_fsr
 5826              	.LVL559:
2828:drivers/inv_mpu.c ****     mpu_set_accel_fsr(st.chip_cfg.cache.accel_fsr);
ARM GAS  /tmp/cc18izUm.s 			page 166


 5827              		.loc 1 2828 0
 5828 1d3c 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 5829 1d3e FFF7FEFF 		bl	mpu_set_accel_fsr
 5830              	.LVL560:
2829:drivers/inv_mpu.c ****     mpu_set_lpf(st.chip_cfg.cache.lpf);
 5831              		.loc 1 2829 0
 5832 1d42 608B     		ldrh	r0, [r4, #26]
 5833 1d44 FFF7FEFF 		bl	mpu_set_lpf
 5834              	.LVL561:
2830:drivers/inv_mpu.c ****     mpu_set_sample_rate(st.chip_cfg.cache.sample_rate);
 5835              		.loc 1 2830 0
 5836 1d48 A08B     		ldrh	r0, [r4, #28]
 5837 1d4a FFF7FEFF 		bl	mpu_set_sample_rate
 5838              	.LVL562:
2831:drivers/inv_mpu.c ****     mpu_configure_fifo(st.chip_cfg.cache.fifo_sensors);
 5839              		.loc 1 2831 0
 5840 1d4e E07F     		ldrb	r0, [r4, #31]	@ zero_extendqisi2
 5841 1d50 FFF7FEFF 		bl	mpu_configure_fifo
 5842              	.LVL563:
2832:drivers/inv_mpu.c **** 
2833:drivers/inv_mpu.c ****     if (st.chip_cfg.cache.dmp_on)
 5843              		.loc 1 2833 0
 5844 1d54 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 5845 1d58 002B     		cmp	r3, #0
 5846 1d5a 5CD1     		bne	.L595
 5847              	.L585:
2834:drivers/inv_mpu.c ****         mpu_set_dmp_state(1);
2835:drivers/inv_mpu.c **** 
2836:drivers/inv_mpu.c **** #ifdef MPU6500
2837:drivers/inv_mpu.c ****     /* Disable motion interrupt (MPU6500 version). */
2838:drivers/inv_mpu.c ****     data[0] = 0;
2839:drivers/inv_mpu.c ****     if (I2C_Write(st.hw->addr, st.reg->accel_intel, 1, data))
2840:drivers/inv_mpu.c ****         goto lp_int_restore;
2841:drivers/inv_mpu.c **** #endif
2842:drivers/inv_mpu.c **** 
2843:drivers/inv_mpu.c ****     st.chip_cfg.int_motion_only = 0;
 5848              		.loc 1 2843 0
 5849 1d5c 0020     		movs	r0, #0
 5850 1d5e 334B     		ldr	r3, .L597
 5851 1d60 5875     		strb	r0, [r3, #21]
 5852              	.L570:
2844:drivers/inv_mpu.c ****     return 0;
2845:drivers/inv_mpu.c **** }
 5853              		.loc 1 2845 0
 5854 1d62 03B0     		add	sp, sp, #12
 5855              		.cfi_remember_state
 5856              		.cfi_def_cfa_offset 20
 5857              		@ sp needed
 5858 1d64 F0BD     		pop	{r4, r5, r6, r7, pc}
 5859              	.LVL564:
 5860              	.L587:
 5861              		.cfi_restore_state
 5862              	.LBB34:
2653:drivers/inv_mpu.c ****         else
 5863              		.loc 1 2653 0
 5864 1d66 0126     		movs	r6, #1
 5865 1d68 8DE7     		b	.L574
ARM GAS  /tmp/cc18izUm.s 			page 167


 5866              	.LVL565:
 5867              	.L593:
2683:drivers/inv_mpu.c ****                 st.chip_cfg.cache.dmp_on = 1;
 5868              		.loc 1 2683 0
 5869 1d6a 0020     		movs	r0, #0
 5870              	.LVL566:
 5871 1d6c FFF7FEFF 		bl	mpu_set_dmp_state
 5872              	.LVL567:
2684:drivers/inv_mpu.c ****             } else
 5873              		.loc 1 2684 0
 5874 1d70 0122     		movs	r2, #1
 5875 1d72 2E4B     		ldr	r3, .L597
 5876 1d74 83F82020 		strb	r2, [r3, #32]
 5877 1d78 97E7     		b	.L579
 5878              	.L594:
2721:drivers/inv_mpu.c ****         data[1] = time;
 5879              		.loc 1 2721 0
 5880 1d7a 8DF80460 		strb	r6, [sp, #4]
2722:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->motion_thr, 2, data))
 5881              		.loc 1 2722 0
 5882 1d7e 8DF80540 		strb	r4, [sp, #5]
2723:drivers/inv_mpu.c ****             goto lp_int_restore;
 5883              		.loc 1 2723 0
 5884 1d82 2A4B     		ldr	r3, .L597
 5885 1d84 1968     		ldr	r1, [r3]
 5886 1d86 5868     		ldr	r0, [r3, #4]
 5887 1d88 01AB     		add	r3, sp, #4
 5888 1d8a 0222     		movs	r2, #2
 5889 1d8c 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 5890 1d8e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5891 1d90 FFF7FEFF 		bl	I2C_Write
 5892              	.LVL568:
 5893 1d94 0028     		cmp	r0, #0
 5894 1d96 BFD1     		bne	.L572
2727:drivers/inv_mpu.c ****         data[0] = (st.chip_cfg.accel_fsr << 3) | BITS_HPF;
 5895              		.loc 1 2727 0
 5896 1d98 0520     		movs	r0, #5
 5897 1d9a FFF7FEFF 		bl	DelayMs
 5898              	.LVL569:
2728:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->accel_cfg, 1, data))
 5899              		.loc 1 2728 0
 5900 1d9e 2349     		ldr	r1, .L597
 5901 1da0 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
 5902 1da2 D200     		lsls	r2, r2, #3
 5903 1da4 42F00702 		orr	r2, r2, #7
 5904 1da8 02AB     		add	r3, sp, #8
 5905 1daa 03F8042D 		strb	r2, [r3, #-4]!
2729:drivers/inv_mpu.c ****             goto lp_int_restore;
 5906              		.loc 1 2729 0
 5907 1dae 0C68     		ldr	r4, [r1]
 5908              	.LVL570:
 5909 1db0 4868     		ldr	r0, [r1, #4]
 5910 1db2 0122     		movs	r2, #1
 5911 1db4 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 5912 1db6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5913 1db8 FFF7FEFF 		bl	I2C_Write
 5914              	.LVL571:
ARM GAS  /tmp/cc18izUm.s 			page 168


 5915 1dbc 0028     		cmp	r0, #0
 5916 1dbe ABD1     		bne	.L572
2733:drivers/inv_mpu.c ****         if (lpa_freq == 1)
 5917              		.loc 1 2733 0
 5918 1dc0 2023     		movs	r3, #32
 5919 1dc2 8DF80430 		strb	r3, [sp, #4]
2734:drivers/inv_mpu.c ****             data[1] = INV_LPA_1_25HZ;
 5920              		.loc 1 2734 0
 5921 1dc6 012F     		cmp	r7, #1
 5922 1dc8 1AD0     		beq	.L596
2736:drivers/inv_mpu.c ****             data[1] = INV_LPA_5HZ;
 5923              		.loc 1 2736 0
 5924 1dca 052F     		cmp	r7, #5
 5925 1dcc 1CD8     		bhi	.L582
2737:drivers/inv_mpu.c ****         else if (lpa_freq <= 20)
 5926              		.loc 1 2737 0
 5927 1dce 0123     		movs	r3, #1
 5928 1dd0 8DF80530 		strb	r3, [sp, #5]
 5929              	.L581:
2742:drivers/inv_mpu.c ****         if (I2C_Write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
 5930              		.loc 1 2742 0
 5931 1dd4 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 5932 1dd8 9B01     		lsls	r3, r3, #6
 5933 1dda 43F00703 		orr	r3, r3, #7
 5934 1dde 8DF80530 		strb	r3, [sp, #5]
2743:drivers/inv_mpu.c ****             goto lp_int_restore;
 5935              		.loc 1 2743 0
 5936 1de2 124B     		ldr	r3, .L597
 5937 1de4 1968     		ldr	r1, [r3]
 5938 1de6 5868     		ldr	r0, [r3, #4]
 5939 1de8 01AB     		add	r3, sp, #4
 5940 1dea 0222     		movs	r2, #2
 5941 1dec 897C     		ldrb	r1, [r1, #18]	@ zero_extendqisi2
 5942 1dee 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5943 1df0 FFF7FEFF 		bl	I2C_Write
 5944              	.LVL572:
 5945 1df4 0028     		cmp	r0, #0
 5946 1df6 8FD1     		bne	.L572
2746:drivers/inv_mpu.c ****         return 0;
 5947              		.loc 1 2746 0
 5948 1df8 0122     		movs	r2, #1
 5949 1dfa 0C4B     		ldr	r3, .L597
 5950 1dfc 5A75     		strb	r2, [r3, #21]
2747:drivers/inv_mpu.c **** #elif defined MPU6500
 5951              		.loc 1 2747 0
 5952 1dfe B0E7     		b	.L570
 5953              	.L596:
2735:drivers/inv_mpu.c ****         else if (lpa_freq <= 5)
 5954              		.loc 1 2735 0
 5955 1e00 0023     		movs	r3, #0
 5956 1e02 8DF80530 		strb	r3, [sp, #5]
 5957 1e06 E5E7     		b	.L581
 5958              	.L582:
2738:drivers/inv_mpu.c ****             data[1] = INV_LPA_20HZ;
 5959              		.loc 1 2738 0
 5960 1e08 142F     		cmp	r7, #20
2739:drivers/inv_mpu.c ****         else
ARM GAS  /tmp/cc18izUm.s 			page 169


 5961              		.loc 1 2739 0
 5962 1e0a 94BF     		ite	ls
 5963 1e0c 0223     		movls	r3, #2
2741:drivers/inv_mpu.c ****         data[1] = (data[1] << 6) | BIT_STBY_XYZG;
 5964              		.loc 1 2741 0
 5965 1e0e 0323     		movhi	r3, #3
 5966 1e10 8DF80530 		strb	r3, [sp, #5]
 5967 1e14 DEE7     		b	.L581
 5968              	.LVL573:
 5969              	.L595:
 5970              	.LBE34:
2834:drivers/inv_mpu.c **** 
 5971              		.loc 1 2834 0
 5972 1e16 0120     		movs	r0, #1
 5973 1e18 FFF7FEFF 		bl	mpu_set_dmp_state
 5974              	.LVL574:
 5975 1e1c 9EE7     		b	.L585
 5976              	.LVL575:
 5977              	.L588:
 5978              	.LBB35:
2678:drivers/inv_mpu.c **** 
 5979              		.loc 1 2678 0
 5980 1e1e 4FF0FF30 		mov	r0, #-1
 5981              	.LVL576:
 5982 1e22 9EE7     		b	.L570
 5983              	.LVL577:
 5984              	.L589:
2707:drivers/inv_mpu.c **** 
 5985              		.loc 1 2707 0
 5986 1e24 4FF0FF30 		mov	r0, #-1
 5987 1e28 9BE7     		b	.L570
 5988              	.L598:
 5989 1e2a 00BF     		.align	2
 5990              	.L597:
 5991 1e2c 00000000 		.word	.LANCHOR0
 5992              	.LBE35:
 5993              		.cfi_endproc
 5994              	.LFE108:
 5995              		.size	mpu_lp_motion_interrupt, .-mpu_lp_motion_interrupt
 5996              		.align	1
 5997              		.global	myget_ms
 5998              		.syntax unified
 5999              		.thumb
 6000              		.thumb_func
 6001              		.fpu softvfp
 6002              		.type	myget_ms, %function
 6003              	myget_ms:
 6004              	.LFB109:
2846:drivers/inv_mpu.c **** void myget_ms(unsigned long *time)
2847:drivers/inv_mpu.c **** {
 6005              		.loc 1 2847 0
 6006              		.cfi_startproc
 6007              		@ args = 0, pretend = 0, frame = 0
 6008              		@ frame_needed = 0, uses_anonymous_args = 0
 6009              		@ link register save eliminated.
 6010              	.LVL578:
 6011 1e30 7047     		bx	lr
ARM GAS  /tmp/cc18izUm.s 			page 170


 6012              		.cfi_endproc
 6013              	.LFE109:
 6014              		.size	myget_ms, .-myget_ms
 6015              		.global	test
 6016              		.global	reg
 6017              		.global	hw
 6018              		.section	.rodata
 6019              		.align	2
 6020              		.type	test, %object
 6021              		.size	test, 40
 6022              	test:
 6023 0000 83000000 		.word	131
 6024 0004 00080000 		.word	2048
 6025 0008 00       		.byte	0
 6026 0009 01       		.byte	1
 6027 000a 00       		.byte	0
 6028 000b 18       		.byte	24
 6029 000c 3200     		.short	50
 6030 000e 05       		.byte	5
 6031 000f 00       		.space	1
 6032 0010 00002041 		.word	1092616192
 6033 0014 0000D242 		.word	1121058816
 6034 0018 295C0F3E 		.word	1041194025
 6035 001c 9A99993E 		.word	1050253722
 6036 0020 3333733F 		.word	1064514355
 6037 0024 295C0F3E 		.word	1041194025
 6038              		.type	reg, %object
 6039              		.size	reg, 27
 6040              	reg:
 6041 0028 75       		.byte	117
 6042 0029 19       		.byte	25
 6043 002a 1A       		.byte	26
 6044 002b 0C       		.byte	12
 6045 002c 6A       		.byte	106
 6046 002d 23       		.byte	35
 6047 002e 1B       		.byte	27
 6048 002f 1C       		.byte	28
 6049 0030 1F       		.byte	31
 6050 0031 20       		.byte	32
 6051 0032 72       		.byte	114
 6052 0033 74       		.byte	116
 6053 0034 43       		.byte	67
 6054 0035 3B       		.byte	59
 6055 0036 41       		.byte	65
 6056 0037 38       		.byte	56
 6057 0038 39       		.byte	57
 6058 0039 3A       		.byte	58
 6059 003a 6B       		.byte	107
 6060 003b 6C       		.byte	108
 6061 003c 37       		.byte	55
 6062 003d 6F       		.byte	111
 6063 003e 06       		.byte	6
 6064 003f 24       		.byte	36
 6065 0040 6D       		.byte	109
 6066 0041 6E       		.byte	110
 6067 0042 70       		.byte	112
 6068 0043 00       		.space	1
ARM GAS  /tmp/cc18izUm.s 			page 171


 6069              		.type	hw, %object
 6070              		.size	hw, 12
 6071              	hw:
 6072 0044 68       		.byte	104
 6073 0045 00       		.space	1
 6074 0046 0004     		.short	1024
 6075 0048 76       		.byte	118
 6076 0049 00       		.space	1
 6077 004a 5401     		.short	340
 6078 004c F7FD     		.short	-521
 6079 004e 0001     		.short	256
 6080              		.data
 6081              		.align	2
 6082              		.set	.LANCHOR0,. + 0
 6083              		.type	st, %object
 6084              		.size	st, 44
 6085              	st:
 6086 0000 00000000 		.word	reg
 6087 0004 00000000 		.word	hw
 6088 0008 00       		.byte	0
 6089 0009 00000000 		.space	31
 6089      00000000 
 6089      00000000 
 6089      00000000 
 6089      00000000 
 6090 0028 00000000 		.word	test
 6091              		.section	.rodata.str1.4,"aMS",%progbits,1
 6092              		.align	2
 6093              	.LC0:
 6094 0000 556E7375 		.ascii	"Unsupported software product rev %d.\012\000"
 6094      70706F72 
 6094      74656420 
 6094      736F6674 
 6094      77617265 
 6095 0026 0000     		.space	2
 6096              	.LC1:
 6097 0028 50726F64 		.ascii	"Product ID read as 0 indicates device is either inc"
 6097      75637420 
 6097      49442072 
 6097      65616420 
 6097      61732030 
 6098 005b 6F6D7061 		.ascii	"ompatible or an MPU3050.\015\000"
 6098      7469626C 
 6098      65206F72 
 6098      20616E20 
 6098      4D505533 
 6099 0075 000000   		.space	3
 6100              	.LC2:
 6101 0078 48616C66 		.ascii	"Half sensitivity part found.\015\000"
 6101      2073656E 
 6101      73697469 
 6101      76697479 
 6101      20706172 
 6102              		.text
 6103              	.Letext0:
 6104              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6105              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/cc18izUm.s 			page 172


 6106              		.file 4 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h"
 6107              		.file 5 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/system_stm32f10x.h"
 6108              		.file 6 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/MPU6050.h"
 6109              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 6110              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 6111              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 6112              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 6113              		.file 11 "/usr/arm-none-eabi/include/stdlib.h"
 6114              		.file 12 "/usr/arm-none-eabi/include/math.h"
 6115              		.file 13 "/usr/arm-none-eabi/include/sys/errno.h"
 6116              		.file 14 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/inv_mpu.h"
 6117              		.file 15 "drivers/tools.h"
 6118              		.file 16 "/usr/arm-none-eabi/include/string.h"
 6119              		.file 17 "/usr/arm-none-eabi/include/stdio.h"
 6120              		.file 18 "<built-in>"
 6121 1e32 00BF     		.section	.debug_info,"",%progbits
 6122              	.Ldebug_info0:
 6123 0000 702B0000 		.4byte	0x2b70
 6124 0004 0400     		.2byte	0x4
 6125 0006 00000000 		.4byte	.Ldebug_abbrev0
 6126 000a 04       		.byte	0x4
 6127 000b 01       		.uleb128 0x1
 6128 000c 2C040000 		.4byte	.LASF344
 6129 0010 01       		.byte	0x1
 6130 0011 1E090000 		.4byte	.LASF345
 6131 0015 51010000 		.4byte	.LASF346
 6132 0019 00000000 		.4byte	.Ltext0
 6133 001d 321E0000 		.4byte	.Letext0-.Ltext0
 6134 0021 00000000 		.4byte	.Ldebug_line0
 6135 0025 02       		.uleb128 0x2
 6136 0026 04       		.byte	0x4
 6137 0027 04       		.byte	0x4
 6138 0028 E50E0000 		.4byte	.LASF0
 6139 002c 02       		.uleb128 0x2
 6140 002d 01       		.byte	0x1
 6141 002e 06       		.byte	0x6
 6142 002f 1C030000 		.4byte	.LASF1
 6143 0033 02       		.uleb128 0x2
 6144 0034 01       		.byte	0x1
 6145 0035 08       		.byte	0x8
 6146 0036 8D030000 		.4byte	.LASF2
 6147 003a 03       		.uleb128 0x3
 6148 003b 33000000 		.4byte	0x33
 6149 003f 02       		.uleb128 0x2
 6150 0040 02       		.byte	0x2
 6151 0041 05       		.byte	0x5
 6152 0042 C20C0000 		.4byte	.LASF3
 6153 0046 02       		.uleb128 0x2
 6154 0047 02       		.byte	0x2
 6155 0048 07       		.byte	0x7
 6156 0049 8D020000 		.4byte	.LASF4
 6157 004d 04       		.uleb128 0x4
 6158 004e 270F0000 		.4byte	.LASF6
 6159 0052 02       		.byte	0x2
 6160 0053 3F       		.byte	0x3f
 6161 0054 58000000 		.4byte	0x58
 6162 0058 02       		.uleb128 0x2
ARM GAS  /tmp/cc18izUm.s 			page 173


 6163 0059 04       		.byte	0x4
 6164 005a 05       		.byte	0x5
 6165 005b 28020000 		.4byte	.LASF5
 6166 005f 03       		.uleb128 0x3
 6167 0060 58000000 		.4byte	0x58
 6168 0064 04       		.uleb128 0x4
 6169 0065 90070000 		.4byte	.LASF7
 6170 0069 02       		.byte	0x2
 6171 006a 41       		.byte	0x41
 6172 006b 6F000000 		.4byte	0x6f
 6173 006f 02       		.uleb128 0x2
 6174 0070 04       		.byte	0x4
 6175 0071 07       		.byte	0x7
 6176 0072 41060000 		.4byte	.LASF8
 6177 0076 02       		.uleb128 0x2
 6178 0077 08       		.byte	0x8
 6179 0078 05       		.byte	0x5
 6180 0079 AB070000 		.4byte	.LASF9
 6181 007d 02       		.uleb128 0x2
 6182 007e 08       		.byte	0x8
 6183 007f 07       		.byte	0x7
 6184 0080 B90A0000 		.4byte	.LASF10
 6185 0084 05       		.uleb128 0x5
 6186 0085 04       		.byte	0x4
 6187 0086 05       		.byte	0x5
 6188 0087 696E7400 		.ascii	"int\000"
 6189 008b 02       		.uleb128 0x2
 6190 008c 04       		.byte	0x4
 6191 008d 07       		.byte	0x7
 6192 008e BE080000 		.4byte	.LASF11
 6193 0092 04       		.uleb128 0x4
 6194 0093 85000000 		.4byte	.LASF12
 6195 0097 03       		.byte	0x3
 6196 0098 2C       		.byte	0x2c
 6197 0099 4D000000 		.4byte	0x4d
 6198 009d 06       		.uleb128 0x6
 6199 009e 92000000 		.4byte	0x92
 6200 00a2 04       		.uleb128 0x4
 6201 00a3 2B0E0000 		.4byte	.LASF13
 6202 00a7 03       		.byte	0x3
 6203 00a8 30       		.byte	0x30
 6204 00a9 64000000 		.4byte	0x64
 6205 00ad 02       		.uleb128 0x2
 6206 00ae 04       		.byte	0x4
 6207 00af 07       		.byte	0x7
 6208 00b0 14000000 		.4byte	.LASF14
 6209 00b4 07       		.uleb128 0x7
 6210 00b5 6D080000 		.4byte	.LASF15
 6211 00b9 04       		.byte	0x4
 6212 00ba 9606     		.2byte	0x696
 6213 00bc 9D000000 		.4byte	0x9d
 6214 00c0 08       		.uleb128 0x8
 6215 00c1 91060000 		.4byte	.LASF16
 6216 00c5 05       		.byte	0x5
 6217 00c6 35       		.byte	0x35
 6218 00c7 A2000000 		.4byte	0xa2
 6219 00cb 09       		.uleb128 0x9
ARM GAS  /tmp/cc18izUm.s 			page 174


 6220 00cc 0A       		.uleb128 0xa
 6221 00cd 04       		.byte	0x4
 6222 00ce CB000000 		.4byte	0xcb
 6223 00d2 0B       		.uleb128 0xb
 6224 00d3 3F000000 		.4byte	0x3f
 6225 00d7 E2000000 		.4byte	0xe2
 6226 00db 0C       		.uleb128 0xc
 6227 00dc AD000000 		.4byte	0xad
 6228 00e0 02       		.byte	0x2
 6229 00e1 00       		.byte	0
 6230 00e2 07       		.uleb128 0x7
 6231 00e3 14040000 		.4byte	.LASF17
 6232 00e7 06       		.byte	0x6
 6233 00e8 6601     		.2byte	0x166
 6234 00ea D2000000 		.4byte	0xd2
 6235 00ee 07       		.uleb128 0x7
 6236 00ef B30D0000 		.4byte	.LASF18
 6237 00f3 06       		.byte	0x6
 6238 00f4 6601     		.2byte	0x166
 6239 00f6 D2000000 		.4byte	0xd2
 6240 00fa 07       		.uleb128 0x7
 6241 00fb C30D0000 		.4byte	.LASF19
 6242 00ff 06       		.byte	0x6
 6243 0100 6701     		.2byte	0x167
 6244 0102 84000000 		.4byte	0x84
 6245 0106 07       		.uleb128 0x7
 6246 0107 D0070000 		.4byte	.LASF20
 6247 010b 06       		.byte	0x6
 6248 010c 6701     		.2byte	0x167
 6249 010e 84000000 		.4byte	0x84
 6250 0112 07       		.uleb128 0x7
 6251 0113 01020000 		.4byte	.LASF21
 6252 0117 06       		.byte	0x6
 6253 0118 6701     		.2byte	0x167
 6254 011a 84000000 		.4byte	0x84
 6255 011e 07       		.uleb128 0x7
 6256 011f DD060000 		.4byte	.LASF22
 6257 0123 06       		.byte	0x6
 6258 0124 6801     		.2byte	0x168
 6259 0126 25000000 		.4byte	0x25
 6260 012a 07       		.uleb128 0x7
 6261 012b 1D0E0000 		.4byte	.LASF23
 6262 012f 06       		.byte	0x6
 6263 0130 6901     		.2byte	0x169
 6264 0132 25000000 		.4byte	0x25
 6265 0136 07       		.uleb128 0x7
 6266 0137 FC060000 		.4byte	.LASF24
 6267 013b 06       		.byte	0x6
 6268 013c 6901     		.2byte	0x169
 6269 013e 25000000 		.4byte	0x25
 6270 0142 0D       		.uleb128 0xd
 6271 0143 59617700 		.ascii	"Yaw\000"
 6272 0147 06       		.byte	0x6
 6273 0148 6901     		.2byte	0x169
 6274 014a 25000000 		.4byte	0x25
 6275 014e 0E       		.uleb128 0xe
 6276 014f 04       		.byte	0x4
ARM GAS  /tmp/cc18izUm.s 			page 175


 6277 0150 04       		.uleb128 0x4
 6278 0151 C4060000 		.4byte	.LASF25
 6279 0155 07       		.byte	0x7
 6280 0156 07       		.byte	0x7
 6281 0157 84000000 		.4byte	0x84
 6282 015b 04       		.uleb128 0x4
 6283 015c 870E0000 		.4byte	.LASF26
 6284 0160 08       		.byte	0x8
 6285 0161 2C       		.byte	0x2c
 6286 0162 58000000 		.4byte	0x58
 6287 0166 04       		.uleb128 0x4
 6288 0167 5F0A0000 		.4byte	.LASF27
 6289 016b 08       		.byte	0x8
 6290 016c 72       		.byte	0x72
 6291 016d 58000000 		.4byte	0x58
 6292 0171 0F       		.uleb128 0xf
 6293 0172 1D0C0000 		.4byte	.LASF28
 6294 0176 09       		.byte	0x9
 6295 0177 6501     		.2byte	0x165
 6296 0179 8B000000 		.4byte	0x8b
 6297 017d 10       		.uleb128 0x10
 6298 017e 04       		.byte	0x4
 6299 017f 08       		.byte	0x8
 6300 0180 A6       		.byte	0xa6
 6301 0181 9C010000 		.4byte	0x19c
 6302 0185 11       		.uleb128 0x11
 6303 0186 B0010000 		.4byte	.LASF29
 6304 018a 08       		.byte	0x8
 6305 018b A8       		.byte	0xa8
 6306 018c 71010000 		.4byte	0x171
 6307 0190 11       		.uleb128 0x11
 6308 0191 670A0000 		.4byte	.LASF30
 6309 0195 08       		.byte	0x8
 6310 0196 A9       		.byte	0xa9
 6311 0197 9C010000 		.4byte	0x19c
 6312 019b 00       		.byte	0
 6313 019c 0B       		.uleb128 0xb
 6314 019d 33000000 		.4byte	0x33
 6315 01a1 AC010000 		.4byte	0x1ac
 6316 01a5 0C       		.uleb128 0xc
 6317 01a6 AD000000 		.4byte	0xad
 6318 01aa 03       		.byte	0x3
 6319 01ab 00       		.byte	0
 6320 01ac 12       		.uleb128 0x12
 6321 01ad 08       		.byte	0x8
 6322 01ae 08       		.byte	0x8
 6323 01af A3       		.byte	0xa3
 6324 01b0 CD010000 		.4byte	0x1cd
 6325 01b4 13       		.uleb128 0x13
 6326 01b5 E9090000 		.4byte	.LASF31
 6327 01b9 08       		.byte	0x8
 6328 01ba A5       		.byte	0xa5
 6329 01bb 84000000 		.4byte	0x84
 6330 01bf 00       		.byte	0
 6331 01c0 13       		.uleb128 0x13
 6332 01c1 1D000000 		.4byte	.LASF32
 6333 01c5 08       		.byte	0x8
ARM GAS  /tmp/cc18izUm.s 			page 176


 6334 01c6 AA       		.byte	0xaa
 6335 01c7 7D010000 		.4byte	0x17d
 6336 01cb 04       		.byte	0x4
 6337 01cc 00       		.byte	0
 6338 01cd 04       		.uleb128 0x4
 6339 01ce E50B0000 		.4byte	.LASF33
 6340 01d2 08       		.byte	0x8
 6341 01d3 AB       		.byte	0xab
 6342 01d4 AC010000 		.4byte	0x1ac
 6343 01d8 04       		.uleb128 0x4
 6344 01d9 D50B0000 		.4byte	.LASF34
 6345 01dd 08       		.byte	0x8
 6346 01de AF       		.byte	0xaf
 6347 01df 50010000 		.4byte	0x150
 6348 01e3 04       		.uleb128 0x4
 6349 01e4 230E0000 		.4byte	.LASF35
 6350 01e8 0A       		.byte	0xa
 6351 01e9 16       		.byte	0x16
 6352 01ea 6F000000 		.4byte	0x6f
 6353 01ee 14       		.uleb128 0x14
 6354 01ef 32070000 		.4byte	.LASF40
 6355 01f3 18       		.byte	0x18
 6356 01f4 0A       		.byte	0xa
 6357 01f5 2D       		.byte	0x2d
 6358 01f6 41020000 		.4byte	0x241
 6359 01fa 13       		.uleb128 0x13
 6360 01fb 240C0000 		.4byte	.LASF36
 6361 01ff 0A       		.byte	0xa
 6362 0200 2F       		.byte	0x2f
 6363 0201 41020000 		.4byte	0x241
 6364 0205 00       		.byte	0
 6365 0206 15       		.uleb128 0x15
 6366 0207 5F6B00   		.ascii	"_k\000"
 6367 020a 0A       		.byte	0xa
 6368 020b 30       		.byte	0x30
 6369 020c 84000000 		.4byte	0x84
 6370 0210 04       		.byte	0x4
 6371 0211 13       		.uleb128 0x13
 6372 0212 3A070000 		.4byte	.LASF37
 6373 0216 0A       		.byte	0xa
 6374 0217 30       		.byte	0x30
 6375 0218 84000000 		.4byte	0x84
 6376 021c 08       		.byte	0x8
 6377 021d 13       		.uleb128 0x13
 6378 021e 7A080000 		.4byte	.LASF38
 6379 0222 0A       		.byte	0xa
 6380 0223 30       		.byte	0x30
 6381 0224 84000000 		.4byte	0x84
 6382 0228 0C       		.byte	0xc
 6383 0229 13       		.uleb128 0x13
 6384 022a 96050000 		.4byte	.LASF39
 6385 022e 0A       		.byte	0xa
 6386 022f 30       		.byte	0x30
 6387 0230 84000000 		.4byte	0x84
 6388 0234 10       		.byte	0x10
 6389 0235 15       		.uleb128 0x15
 6390 0236 5F7800   		.ascii	"_x\000"
ARM GAS  /tmp/cc18izUm.s 			page 177


 6391 0239 0A       		.byte	0xa
 6392 023a 31       		.byte	0x31
 6393 023b 47020000 		.4byte	0x247
 6394 023f 14       		.byte	0x14
 6395 0240 00       		.byte	0
 6396 0241 0A       		.uleb128 0xa
 6397 0242 04       		.byte	0x4
 6398 0243 EE010000 		.4byte	0x1ee
 6399 0247 0B       		.uleb128 0xb
 6400 0248 E3010000 		.4byte	0x1e3
 6401 024c 57020000 		.4byte	0x257
 6402 0250 0C       		.uleb128 0xc
 6403 0251 AD000000 		.4byte	0xad
 6404 0255 00       		.byte	0
 6405 0256 00       		.byte	0
 6406 0257 14       		.uleb128 0x14
 6407 0258 C7000000 		.4byte	.LASF41
 6408 025c 24       		.byte	0x24
 6409 025d 0A       		.byte	0xa
 6410 025e 35       		.byte	0x35
 6411 025f D0020000 		.4byte	0x2d0
 6412 0263 13       		.uleb128 0x13
 6413 0264 E3000000 		.4byte	.LASF42
 6414 0268 0A       		.byte	0xa
 6415 0269 37       		.byte	0x37
 6416 026a 84000000 		.4byte	0x84
 6417 026e 00       		.byte	0
 6418 026f 13       		.uleb128 0x13
 6419 0270 A80F0000 		.4byte	.LASF43
 6420 0274 0A       		.byte	0xa
 6421 0275 38       		.byte	0x38
 6422 0276 84000000 		.4byte	0x84
 6423 027a 04       		.byte	0x4
 6424 027b 13       		.uleb128 0x13
 6425 027c EB0E0000 		.4byte	.LASF44
 6426 0280 0A       		.byte	0xa
 6427 0281 39       		.byte	0x39
 6428 0282 84000000 		.4byte	0x84
 6429 0286 08       		.byte	0x8
 6430 0287 13       		.uleb128 0x13
 6431 0288 4A090000 		.4byte	.LASF45
 6432 028c 0A       		.byte	0xa
 6433 028d 3A       		.byte	0x3a
 6434 028e 84000000 		.4byte	0x84
 6435 0292 0C       		.byte	0xc
 6436 0293 13       		.uleb128 0x13
 6437 0294 A8020000 		.4byte	.LASF46
 6438 0298 0A       		.byte	0xa
 6439 0299 3B       		.byte	0x3b
 6440 029a 84000000 		.4byte	0x84
 6441 029e 10       		.byte	0x10
 6442 029f 13       		.uleb128 0x13
 6443 02a0 630D0000 		.4byte	.LASF47
 6444 02a4 0A       		.byte	0xa
 6445 02a5 3C       		.byte	0x3c
 6446 02a6 84000000 		.4byte	0x84
 6447 02aa 14       		.byte	0x14
ARM GAS  /tmp/cc18izUm.s 			page 178


 6448 02ab 13       		.uleb128 0x13
 6449 02ac 110A0000 		.4byte	.LASF48
 6450 02b0 0A       		.byte	0xa
 6451 02b1 3D       		.byte	0x3d
 6452 02b2 84000000 		.4byte	0x84
 6453 02b6 18       		.byte	0x18
 6454 02b7 13       		.uleb128 0x13
 6455 02b8 3A0A0000 		.4byte	.LASF49
 6456 02bc 0A       		.byte	0xa
 6457 02bd 3E       		.byte	0x3e
 6458 02be 84000000 		.4byte	0x84
 6459 02c2 1C       		.byte	0x1c
 6460 02c3 13       		.uleb128 0x13
 6461 02c4 760F0000 		.4byte	.LASF50
 6462 02c8 0A       		.byte	0xa
 6463 02c9 3F       		.byte	0x3f
 6464 02ca 84000000 		.4byte	0x84
 6465 02ce 20       		.byte	0x20
 6466 02cf 00       		.byte	0
 6467 02d0 16       		.uleb128 0x16
 6468 02d1 D2010000 		.4byte	.LASF51
 6469 02d5 0801     		.2byte	0x108
 6470 02d7 0A       		.byte	0xa
 6471 02d8 48       		.byte	0x48
 6472 02d9 10030000 		.4byte	0x310
 6473 02dd 13       		.uleb128 0x13
 6474 02de 6E0F0000 		.4byte	.LASF52
 6475 02e2 0A       		.byte	0xa
 6476 02e3 49       		.byte	0x49
 6477 02e4 10030000 		.4byte	0x310
 6478 02e8 00       		.byte	0
 6479 02e9 13       		.uleb128 0x13
 6480 02ea 070B0000 		.4byte	.LASF53
 6481 02ee 0A       		.byte	0xa
 6482 02ef 4A       		.byte	0x4a
 6483 02f0 10030000 		.4byte	0x310
 6484 02f4 80       		.byte	0x80
 6485 02f5 17       		.uleb128 0x17
 6486 02f6 370D0000 		.4byte	.LASF54
 6487 02fa 0A       		.byte	0xa
 6488 02fb 4C       		.byte	0x4c
 6489 02fc E3010000 		.4byte	0x1e3
 6490 0300 0001     		.2byte	0x100
 6491 0302 17       		.uleb128 0x17
 6492 0303 E20D0000 		.4byte	.LASF55
 6493 0307 0A       		.byte	0xa
 6494 0308 4F       		.byte	0x4f
 6495 0309 E3010000 		.4byte	0x1e3
 6496 030d 0401     		.2byte	0x104
 6497 030f 00       		.byte	0
 6498 0310 0B       		.uleb128 0xb
 6499 0311 4E010000 		.4byte	0x14e
 6500 0315 20030000 		.4byte	0x320
 6501 0319 0C       		.uleb128 0xc
 6502 031a AD000000 		.4byte	0xad
 6503 031e 1F       		.byte	0x1f
 6504 031f 00       		.byte	0
ARM GAS  /tmp/cc18izUm.s 			page 179


 6505 0320 16       		.uleb128 0x16
 6506 0321 C0090000 		.4byte	.LASF56
 6507 0325 9001     		.2byte	0x190
 6508 0327 0A       		.byte	0xa
 6509 0328 5B       		.byte	0x5b
 6510 0329 5E030000 		.4byte	0x35e
 6511 032d 13       		.uleb128 0x13
 6512 032e 240C0000 		.4byte	.LASF36
 6513 0332 0A       		.byte	0xa
 6514 0333 5C       		.byte	0x5c
 6515 0334 5E030000 		.4byte	0x35e
 6516 0338 00       		.byte	0
 6517 0339 13       		.uleb128 0x13
 6518 033a BE0D0000 		.4byte	.LASF57
 6519 033e 0A       		.byte	0xa
 6520 033f 5D       		.byte	0x5d
 6521 0340 84000000 		.4byte	0x84
 6522 0344 04       		.byte	0x4
 6523 0345 13       		.uleb128 0x13
 6524 0346 0F040000 		.4byte	.LASF58
 6525 034a 0A       		.byte	0xa
 6526 034b 5F       		.byte	0x5f
 6527 034c 64030000 		.4byte	0x364
 6528 0350 08       		.byte	0x8
 6529 0351 13       		.uleb128 0x13
 6530 0352 D2010000 		.4byte	.LASF51
 6531 0356 0A       		.byte	0xa
 6532 0357 60       		.byte	0x60
 6533 0358 D0020000 		.4byte	0x2d0
 6534 035c 88       		.byte	0x88
 6535 035d 00       		.byte	0
 6536 035e 0A       		.uleb128 0xa
 6537 035f 04       		.byte	0x4
 6538 0360 20030000 		.4byte	0x320
 6539 0364 0B       		.uleb128 0xb
 6540 0365 CC000000 		.4byte	0xcc
 6541 0369 74030000 		.4byte	0x374
 6542 036d 0C       		.uleb128 0xc
 6543 036e AD000000 		.4byte	0xad
 6544 0372 1F       		.byte	0x1f
 6545 0373 00       		.byte	0
 6546 0374 14       		.uleb128 0x14
 6547 0375 DB0D0000 		.4byte	.LASF59
 6548 0379 08       		.byte	0x8
 6549 037a 0A       		.byte	0xa
 6550 037b 73       		.byte	0x73
 6551 037c 99030000 		.4byte	0x399
 6552 0380 13       		.uleb128 0x13
 6553 0381 6C0B0000 		.4byte	.LASF60
 6554 0385 0A       		.byte	0xa
 6555 0386 74       		.byte	0x74
 6556 0387 99030000 		.4byte	0x399
 6557 038b 00       		.byte	0
 6558 038c 13       		.uleb128 0x13
 6559 038d 50020000 		.4byte	.LASF61
 6560 0391 0A       		.byte	0xa
 6561 0392 75       		.byte	0x75
ARM GAS  /tmp/cc18izUm.s 			page 180


 6562 0393 84000000 		.4byte	0x84
 6563 0397 04       		.byte	0x4
 6564 0398 00       		.byte	0
 6565 0399 0A       		.uleb128 0xa
 6566 039a 04       		.byte	0x4
 6567 039b 33000000 		.4byte	0x33
 6568 039f 14       		.uleb128 0x14
 6569 03a0 76060000 		.4byte	.LASF62
 6570 03a4 68       		.byte	0x68
 6571 03a5 0A       		.byte	0xa
 6572 03a6 B3       		.byte	0xb3
 6573 03a7 C9040000 		.4byte	0x4c9
 6574 03ab 15       		.uleb128 0x15
 6575 03ac 5F7000   		.ascii	"_p\000"
 6576 03af 0A       		.byte	0xa
 6577 03b0 B4       		.byte	0xb4
 6578 03b1 99030000 		.4byte	0x399
 6579 03b5 00       		.byte	0
 6580 03b6 15       		.uleb128 0x15
 6581 03b7 5F7200   		.ascii	"_r\000"
 6582 03ba 0A       		.byte	0xa
 6583 03bb B5       		.byte	0xb5
 6584 03bc 84000000 		.4byte	0x84
 6585 03c0 04       		.byte	0x4
 6586 03c1 15       		.uleb128 0x15
 6587 03c2 5F7700   		.ascii	"_w\000"
 6588 03c5 0A       		.byte	0xa
 6589 03c6 B6       		.byte	0xb6
 6590 03c7 84000000 		.4byte	0x84
 6591 03cb 08       		.byte	0x8
 6592 03cc 13       		.uleb128 0x13
 6593 03cd B9090000 		.4byte	.LASF63
 6594 03d1 0A       		.byte	0xa
 6595 03d2 B7       		.byte	0xb7
 6596 03d3 3F000000 		.4byte	0x3f
 6597 03d7 0C       		.byte	0xc
 6598 03d8 13       		.uleb128 0x13
 6599 03d9 C5010000 		.4byte	.LASF64
 6600 03dd 0A       		.byte	0xa
 6601 03de B8       		.byte	0xb8
 6602 03df 3F000000 		.4byte	0x3f
 6603 03e3 0E       		.byte	0xe
 6604 03e4 15       		.uleb128 0x15
 6605 03e5 5F626600 		.ascii	"_bf\000"
 6606 03e9 0A       		.byte	0xa
 6607 03ea B9       		.byte	0xb9
 6608 03eb 74030000 		.4byte	0x374
 6609 03ef 10       		.byte	0x10
 6610 03f0 13       		.uleb128 0x13
 6611 03f1 AA0D0000 		.4byte	.LASF65
 6612 03f5 0A       		.byte	0xa
 6613 03f6 BA       		.byte	0xba
 6614 03f7 84000000 		.4byte	0x84
 6615 03fb 18       		.byte	0x18
 6616 03fc 13       		.uleb128 0x13
 6617 03fd 8E050000 		.4byte	.LASF66
 6618 0401 0A       		.byte	0xa
ARM GAS  /tmp/cc18izUm.s 			page 181


 6619 0402 C1       		.byte	0xc1
 6620 0403 4E010000 		.4byte	0x14e
 6621 0407 1C       		.byte	0x1c
 6622 0408 13       		.uleb128 0x13
 6623 0409 3C000000 		.4byte	.LASF67
 6624 040d 0A       		.byte	0xa
 6625 040e C3       		.byte	0xc3
 6626 040f 36060000 		.4byte	0x636
 6627 0413 20       		.byte	0x20
 6628 0414 13       		.uleb128 0x13
 6629 0415 73000000 		.4byte	.LASF68
 6630 0419 0A       		.byte	0xa
 6631 041a C5       		.byte	0xc5
 6632 041b 65060000 		.4byte	0x665
 6633 041f 24       		.byte	0x24
 6634 0420 13       		.uleb128 0x13
 6635 0421 4A0A0000 		.4byte	.LASF69
 6636 0425 0A       		.byte	0xa
 6637 0426 C8       		.byte	0xc8
 6638 0427 89060000 		.4byte	0x689
 6639 042b 28       		.byte	0x28
 6640 042c 13       		.uleb128 0x13
 6641 042d 25040000 		.4byte	.LASF70
 6642 0431 0A       		.byte	0xa
 6643 0432 C9       		.byte	0xc9
 6644 0433 A3060000 		.4byte	0x6a3
 6645 0437 2C       		.byte	0x2c
 6646 0438 15       		.uleb128 0x15
 6647 0439 5F756200 		.ascii	"_ub\000"
 6648 043d 0A       		.byte	0xa
 6649 043e CC       		.byte	0xcc
 6650 043f 74030000 		.4byte	0x374
 6651 0443 30       		.byte	0x30
 6652 0444 15       		.uleb128 0x15
 6653 0445 5F757000 		.ascii	"_up\000"
 6654 0449 0A       		.byte	0xa
 6655 044a CD       		.byte	0xcd
 6656 044b 99030000 		.4byte	0x399
 6657 044f 38       		.byte	0x38
 6658 0450 15       		.uleb128 0x15
 6659 0451 5F757200 		.ascii	"_ur\000"
 6660 0455 0A       		.byte	0xa
 6661 0456 CE       		.byte	0xce
 6662 0457 84000000 		.4byte	0x84
 6663 045b 3C       		.byte	0x3c
 6664 045c 13       		.uleb128 0x13
 6665 045d 67090000 		.4byte	.LASF71
 6666 0461 0A       		.byte	0xa
 6667 0462 D1       		.byte	0xd1
 6668 0463 A9060000 		.4byte	0x6a9
 6669 0467 40       		.byte	0x40
 6670 0468 13       		.uleb128 0x13
 6671 0469 DD000000 		.4byte	.LASF72
 6672 046d 0A       		.byte	0xa
 6673 046e D2       		.byte	0xd2
 6674 046f B9060000 		.4byte	0x6b9
 6675 0473 43       		.byte	0x43
ARM GAS  /tmp/cc18izUm.s 			page 182


 6676 0474 15       		.uleb128 0x15
 6677 0475 5F6C6200 		.ascii	"_lb\000"
 6678 0479 0A       		.byte	0xa
 6679 047a D5       		.byte	0xd5
 6680 047b 74030000 		.4byte	0x374
 6681 047f 44       		.byte	0x44
 6682 0480 13       		.uleb128 0x13
 6683 0481 490B0000 		.4byte	.LASF73
 6684 0485 0A       		.byte	0xa
 6685 0486 D8       		.byte	0xd8
 6686 0487 84000000 		.4byte	0x84
 6687 048b 4C       		.byte	0x4c
 6688 048c 13       		.uleb128 0x13
 6689 048d C2050000 		.4byte	.LASF74
 6690 0491 0A       		.byte	0xa
 6691 0492 D9       		.byte	0xd9
 6692 0493 5B010000 		.4byte	0x15b
 6693 0497 50       		.byte	0x50
 6694 0498 13       		.uleb128 0x13
 6695 0499 370C0000 		.4byte	.LASF75
 6696 049d 0A       		.byte	0xa
 6697 049e DC       		.byte	0xdc
 6698 049f E7040000 		.4byte	0x4e7
 6699 04a3 54       		.byte	0x54
 6700 04a4 13       		.uleb128 0x13
 6701 04a5 2B010000 		.4byte	.LASF76
 6702 04a9 0A       		.byte	0xa
 6703 04aa E0       		.byte	0xe0
 6704 04ab D8010000 		.4byte	0x1d8
 6705 04af 58       		.byte	0x58
 6706 04b0 13       		.uleb128 0x13
 6707 04b1 92090000 		.4byte	.LASF77
 6708 04b5 0A       		.byte	0xa
 6709 04b6 E2       		.byte	0xe2
 6710 04b7 CD010000 		.4byte	0x1cd
 6711 04bb 5C       		.byte	0x5c
 6712 04bc 13       		.uleb128 0x13
 6713 04bd 89060000 		.4byte	.LASF78
 6714 04c1 0A       		.byte	0xa
 6715 04c2 E3       		.byte	0xe3
 6716 04c3 84000000 		.4byte	0x84
 6717 04c7 64       		.byte	0x64
 6718 04c8 00       		.byte	0
 6719 04c9 18       		.uleb128 0x18
 6720 04ca 84000000 		.4byte	0x84
 6721 04ce E7040000 		.4byte	0x4e7
 6722 04d2 19       		.uleb128 0x19
 6723 04d3 E7040000 		.4byte	0x4e7
 6724 04d7 19       		.uleb128 0x19
 6725 04d8 4E010000 		.4byte	0x14e
 6726 04dc 19       		.uleb128 0x19
 6727 04dd 24060000 		.4byte	0x624
 6728 04e1 19       		.uleb128 0x19
 6729 04e2 84000000 		.4byte	0x84
 6730 04e6 00       		.byte	0
 6731 04e7 0A       		.uleb128 0xa
 6732 04e8 04       		.byte	0x4
ARM GAS  /tmp/cc18izUm.s 			page 183


 6733 04e9 F2040000 		.4byte	0x4f2
 6734 04ed 03       		.uleb128 0x3
 6735 04ee E7040000 		.4byte	0x4e7
 6736 04f2 1A       		.uleb128 0x1a
 6737 04f3 CA030000 		.4byte	.LASF79
 6738 04f7 2804     		.2byte	0x428
 6739 04f9 0A       		.byte	0xa
 6740 04fa 3802     		.2byte	0x238
 6741 04fc 24060000 		.4byte	0x624
 6742 0500 1B       		.uleb128 0x1b
 6743 0501 D6060000 		.4byte	.LASF80
 6744 0505 0A       		.byte	0xa
 6745 0506 3A02     		.2byte	0x23a
 6746 0508 84000000 		.4byte	0x84
 6747 050c 00       		.byte	0
 6748 050d 1B       		.uleb128 0x1b
 6749 050e D0040000 		.4byte	.LASF81
 6750 0512 0A       		.byte	0xa
 6751 0513 3F02     		.2byte	0x23f
 6752 0515 10070000 		.4byte	0x710
 6753 0519 04       		.byte	0x4
 6754 051a 1B       		.uleb128 0x1b
 6755 051b 1B0B0000 		.4byte	.LASF82
 6756 051f 0A       		.byte	0xa
 6757 0520 3F02     		.2byte	0x23f
 6758 0522 10070000 		.4byte	0x710
 6759 0526 08       		.byte	0x8
 6760 0527 1B       		.uleb128 0x1b
 6761 0528 7C090000 		.4byte	.LASF83
 6762 052c 0A       		.byte	0xa
 6763 052d 3F02     		.2byte	0x23f
 6764 052f 10070000 		.4byte	0x710
 6765 0533 0C       		.byte	0xc
 6766 0534 1B       		.uleb128 0x1b
 6767 0535 B90D0000 		.4byte	.LASF84
 6768 0539 0A       		.byte	0xa
 6769 053a 4102     		.2byte	0x241
 6770 053c 84000000 		.4byte	0x84
 6771 0540 10       		.byte	0x10
 6772 0541 1B       		.uleb128 0x1b
 6773 0542 9B070000 		.4byte	.LASF85
 6774 0546 0A       		.byte	0xa
 6775 0547 4202     		.2byte	0x242
 6776 0549 F2080000 		.4byte	0x8f2
 6777 054d 14       		.byte	0x14
 6778 054e 1B       		.uleb128 0x1b
 6779 054f D6020000 		.4byte	.LASF86
 6780 0553 0A       		.byte	0xa
 6781 0554 4402     		.2byte	0x244
 6782 0556 84000000 		.4byte	0x84
 6783 055a 30       		.byte	0x30
 6784 055b 1B       		.uleb128 0x1b
 6785 055c 26080000 		.4byte	.LASF87
 6786 0560 0A       		.byte	0xa
 6787 0561 4502     		.2byte	0x245
 6788 0563 5A060000 		.4byte	0x65a
 6789 0567 34       		.byte	0x34
ARM GAS  /tmp/cc18izUm.s 			page 184


 6790 0568 1B       		.uleb128 0x1b
 6791 0569 7E060000 		.4byte	.LASF88
 6792 056d 0A       		.byte	0xa
 6793 056e 4702     		.2byte	0x247
 6794 0570 84000000 		.4byte	0x84
 6795 0574 38       		.byte	0x38
 6796 0575 1B       		.uleb128 0x1b
 6797 0576 4F070000 		.4byte	.LASF89
 6798 057a 0A       		.byte	0xa
 6799 057b 4902     		.2byte	0x249
 6800 057d 0D090000 		.4byte	0x90d
 6801 0581 3C       		.byte	0x3c
 6802 0582 1B       		.uleb128 0x1b
 6803 0583 480E0000 		.4byte	.LASF90
 6804 0587 0A       		.byte	0xa
 6805 0588 4C02     		.2byte	0x24c
 6806 058a 41020000 		.4byte	0x241
 6807 058e 40       		.byte	0x40
 6808 058f 1B       		.uleb128 0x1b
 6809 0590 3D020000 		.4byte	.LASF91
 6810 0594 0A       		.byte	0xa
 6811 0595 4D02     		.2byte	0x24d
 6812 0597 84000000 		.4byte	0x84
 6813 059b 44       		.byte	0x44
 6814 059c 1B       		.uleb128 0x1b
 6815 059d 3C060000 		.4byte	.LASF92
 6816 05a1 0A       		.byte	0xa
 6817 05a2 4E02     		.2byte	0x24e
 6818 05a4 41020000 		.4byte	0x241
 6819 05a8 48       		.byte	0x48
 6820 05a9 1B       		.uleb128 0x1b
 6821 05aa 40080000 		.4byte	.LASF93
 6822 05ae 0A       		.byte	0xa
 6823 05af 4F02     		.2byte	0x24f
 6824 05b1 13090000 		.4byte	0x913
 6825 05b5 4C       		.byte	0x4c
 6826 05b6 1B       		.uleb128 0x1b
 6827 05b7 9A000000 		.4byte	.LASF94
 6828 05bb 0A       		.byte	0xa
 6829 05bc 5202     		.2byte	0x252
 6830 05be 84000000 		.4byte	0x84
 6831 05c2 50       		.byte	0x50
 6832 05c3 1B       		.uleb128 0x1b
 6833 05c4 CA050000 		.4byte	.LASF95
 6834 05c8 0A       		.byte	0xa
 6835 05c9 5302     		.2byte	0x253
 6836 05cb 24060000 		.4byte	0x624
 6837 05cf 54       		.byte	0x54
 6838 05d0 1B       		.uleb128 0x1b
 6839 05d1 62090000 		.4byte	.LASF96
 6840 05d5 0A       		.byte	0xa
 6841 05d6 7602     		.2byte	0x276
 6842 05d8 D0080000 		.4byte	0x8d0
 6843 05dc 58       		.byte	0x58
 6844 05dd 1C       		.uleb128 0x1c
 6845 05de C0090000 		.4byte	.LASF56
 6846 05e2 0A       		.byte	0xa
ARM GAS  /tmp/cc18izUm.s 			page 185


 6847 05e3 7A02     		.2byte	0x27a
 6848 05e5 5E030000 		.4byte	0x35e
 6849 05e9 4801     		.2byte	0x148
 6850 05eb 1C       		.uleb128 0x1c
 6851 05ec 59070000 		.4byte	.LASF97
 6852 05f0 0A       		.byte	0xa
 6853 05f1 7B02     		.2byte	0x27b
 6854 05f3 20030000 		.4byte	0x320
 6855 05f7 4C01     		.2byte	0x14c
 6856 05f9 1C       		.uleb128 0x1c
 6857 05fa AD050000 		.4byte	.LASF98
 6858 05fe 0A       		.byte	0xa
 6859 05ff 7F02     		.2byte	0x27f
 6860 0601 24090000 		.4byte	0x924
 6861 0605 DC02     		.2byte	0x2dc
 6862 0607 1C       		.uleb128 0x1c
 6863 0608 DA070000 		.4byte	.LASF99
 6864 060c 0A       		.byte	0xa
 6865 060d 8402     		.2byte	0x284
 6866 060f D5060000 		.4byte	0x6d5
 6867 0613 E002     		.2byte	0x2e0
 6868 0615 1C       		.uleb128 0x1c
 6869 0616 2E000000 		.4byte	.LASF100
 6870 061a 0A       		.byte	0xa
 6871 061b 8502     		.2byte	0x285
 6872 061d 30090000 		.4byte	0x930
 6873 0621 EC02     		.2byte	0x2ec
 6874 0623 00       		.byte	0
 6875 0624 0A       		.uleb128 0xa
 6876 0625 04       		.byte	0x4
 6877 0626 2A060000 		.4byte	0x62a
 6878 062a 02       		.uleb128 0x2
 6879 062b 01       		.byte	0x1
 6880 062c 08       		.byte	0x8
 6881 062d 0A040000 		.4byte	.LASF101
 6882 0631 03       		.uleb128 0x3
 6883 0632 2A060000 		.4byte	0x62a
 6884 0636 0A       		.uleb128 0xa
 6885 0637 04       		.byte	0x4
 6886 0638 C9040000 		.4byte	0x4c9
 6887 063c 18       		.uleb128 0x18
 6888 063d 84000000 		.4byte	0x84
 6889 0641 5A060000 		.4byte	0x65a
 6890 0645 19       		.uleb128 0x19
 6891 0646 E7040000 		.4byte	0x4e7
 6892 064a 19       		.uleb128 0x19
 6893 064b 4E010000 		.4byte	0x14e
 6894 064f 19       		.uleb128 0x19
 6895 0650 5A060000 		.4byte	0x65a
 6896 0654 19       		.uleb128 0x19
 6897 0655 84000000 		.4byte	0x84
 6898 0659 00       		.byte	0
 6899 065a 0A       		.uleb128 0xa
 6900 065b 04       		.byte	0x4
 6901 065c 31060000 		.4byte	0x631
 6902 0660 03       		.uleb128 0x3
 6903 0661 5A060000 		.4byte	0x65a
ARM GAS  /tmp/cc18izUm.s 			page 186


 6904 0665 0A       		.uleb128 0xa
 6905 0666 04       		.byte	0x4
 6906 0667 3C060000 		.4byte	0x63c
 6907 066b 18       		.uleb128 0x18
 6908 066c 66010000 		.4byte	0x166
 6909 0670 89060000 		.4byte	0x689
 6910 0674 19       		.uleb128 0x19
 6911 0675 E7040000 		.4byte	0x4e7
 6912 0679 19       		.uleb128 0x19
 6913 067a 4E010000 		.4byte	0x14e
 6914 067e 19       		.uleb128 0x19
 6915 067f 66010000 		.4byte	0x166
 6916 0683 19       		.uleb128 0x19
 6917 0684 84000000 		.4byte	0x84
 6918 0688 00       		.byte	0
 6919 0689 0A       		.uleb128 0xa
 6920 068a 04       		.byte	0x4
 6921 068b 6B060000 		.4byte	0x66b
 6922 068f 18       		.uleb128 0x18
 6923 0690 84000000 		.4byte	0x84
 6924 0694 A3060000 		.4byte	0x6a3
 6925 0698 19       		.uleb128 0x19
 6926 0699 E7040000 		.4byte	0x4e7
 6927 069d 19       		.uleb128 0x19
 6928 069e 4E010000 		.4byte	0x14e
 6929 06a2 00       		.byte	0
 6930 06a3 0A       		.uleb128 0xa
 6931 06a4 04       		.byte	0x4
 6932 06a5 8F060000 		.4byte	0x68f
 6933 06a9 0B       		.uleb128 0xb
 6934 06aa 33000000 		.4byte	0x33
 6935 06ae B9060000 		.4byte	0x6b9
 6936 06b2 0C       		.uleb128 0xc
 6937 06b3 AD000000 		.4byte	0xad
 6938 06b7 02       		.byte	0x2
 6939 06b8 00       		.byte	0
 6940 06b9 0B       		.uleb128 0xb
 6941 06ba 33000000 		.4byte	0x33
 6942 06be C9060000 		.4byte	0x6c9
 6943 06c2 0C       		.uleb128 0xc
 6944 06c3 AD000000 		.4byte	0xad
 6945 06c7 00       		.byte	0
 6946 06c8 00       		.byte	0
 6947 06c9 0F       		.uleb128 0xf
 6948 06ca DE0B0000 		.4byte	.LASF102
 6949 06ce 0A       		.byte	0xa
 6950 06cf 1D01     		.2byte	0x11d
 6951 06d1 9F030000 		.4byte	0x39f
 6952 06d5 1D       		.uleb128 0x1d
 6953 06d6 5B080000 		.4byte	.LASF103
 6954 06da 0C       		.byte	0xc
 6955 06db 0A       		.byte	0xa
 6956 06dc 2101     		.2byte	0x121
 6957 06de 0A070000 		.4byte	0x70a
 6958 06e2 1B       		.uleb128 0x1b
 6959 06e3 240C0000 		.4byte	.LASF36
 6960 06e7 0A       		.byte	0xa
ARM GAS  /tmp/cc18izUm.s 			page 187


 6961 06e8 2301     		.2byte	0x123
 6962 06ea 0A070000 		.4byte	0x70a
 6963 06ee 00       		.byte	0
 6964 06ef 1B       		.uleb128 0x1b
 6965 06f0 C2070000 		.4byte	.LASF104
 6966 06f4 0A       		.byte	0xa
 6967 06f5 2401     		.2byte	0x124
 6968 06f7 84000000 		.4byte	0x84
 6969 06fb 04       		.byte	0x4
 6970 06fc 1B       		.uleb128 0x1b
 6971 06fd 55080000 		.4byte	.LASF105
 6972 0701 0A       		.byte	0xa
 6973 0702 2501     		.2byte	0x125
 6974 0704 10070000 		.4byte	0x710
 6975 0708 08       		.byte	0x8
 6976 0709 00       		.byte	0
 6977 070a 0A       		.uleb128 0xa
 6978 070b 04       		.byte	0x4
 6979 070c D5060000 		.4byte	0x6d5
 6980 0710 0A       		.uleb128 0xa
 6981 0711 04       		.byte	0x4
 6982 0712 C9060000 		.4byte	0x6c9
 6983 0716 1D       		.uleb128 0x1d
 6984 0717 130B0000 		.4byte	.LASF106
 6985 071b 0E       		.byte	0xe
 6986 071c 0A       		.byte	0xa
 6987 071d 3D01     		.2byte	0x13d
 6988 071f 4B070000 		.4byte	0x74b
 6989 0723 1B       		.uleb128 0x1b
 6990 0724 440A0000 		.4byte	.LASF107
 6991 0728 0A       		.byte	0xa
 6992 0729 3E01     		.2byte	0x13e
 6993 072b 4B070000 		.4byte	0x74b
 6994 072f 00       		.byte	0
 6995 0730 1B       		.uleb128 0x1b
 6996 0731 83010000 		.4byte	.LASF108
 6997 0735 0A       		.byte	0xa
 6998 0736 3F01     		.2byte	0x13f
 6999 0738 4B070000 		.4byte	0x74b
 7000 073c 06       		.byte	0x6
 7001 073d 1B       		.uleb128 0x1b
 7002 073e E00E0000 		.4byte	.LASF109
 7003 0742 0A       		.byte	0xa
 7004 0743 4001     		.2byte	0x140
 7005 0745 46000000 		.4byte	0x46
 7006 0749 0C       		.byte	0xc
 7007 074a 00       		.byte	0
 7008 074b 0B       		.uleb128 0xb
 7009 074c 46000000 		.4byte	0x46
 7010 0750 5B070000 		.4byte	0x75b
 7011 0754 0C       		.uleb128 0xc
 7012 0755 AD000000 		.4byte	0xad
 7013 0759 02       		.byte	0x2
 7014 075a 00       		.byte	0
 7015 075b 1E       		.uleb128 0x1e
 7016 075c D0       		.byte	0xd0
 7017 075d 0A       		.byte	0xa
ARM GAS  /tmp/cc18izUm.s 			page 188


 7018 075e 5702     		.2byte	0x257
 7019 0760 5C080000 		.4byte	0x85c
 7020 0764 1B       		.uleb128 0x1b
 7021 0765 FB020000 		.4byte	.LASF110
 7022 0769 0A       		.byte	0xa
 7023 076a 5902     		.2byte	0x259
 7024 076c 8B000000 		.4byte	0x8b
 7025 0770 00       		.byte	0
 7026 0771 1B       		.uleb128 0x1b
 7027 0772 8B0B0000 		.4byte	.LASF111
 7028 0776 0A       		.byte	0xa
 7029 0777 5A02     		.2byte	0x25a
 7030 0779 24060000 		.4byte	0x624
 7031 077d 04       		.byte	0x4
 7032 077e 1B       		.uleb128 0x1b
 7033 077f 8D000000 		.4byte	.LASF112
 7034 0783 0A       		.byte	0xa
 7035 0784 5B02     		.2byte	0x25b
 7036 0786 5C080000 		.4byte	0x85c
 7037 078a 08       		.byte	0x8
 7038 078b 1B       		.uleb128 0x1b
 7039 078c 64020000 		.4byte	.LASF113
 7040 0790 0A       		.byte	0xa
 7041 0791 5C02     		.2byte	0x25c
 7042 0793 57020000 		.4byte	0x257
 7043 0797 24       		.byte	0x24
 7044 0798 1B       		.uleb128 0x1b
 7045 0799 FD070000 		.4byte	.LASF114
 7046 079d 0A       		.byte	0xa
 7047 079e 5D02     		.2byte	0x25d
 7048 07a0 84000000 		.4byte	0x84
 7049 07a4 48       		.byte	0x48
 7050 07a5 1B       		.uleb128 0x1b
 7051 07a6 9B090000 		.4byte	.LASF115
 7052 07aa 0A       		.byte	0xa
 7053 07ab 5E02     		.2byte	0x25e
 7054 07ad 7D000000 		.4byte	0x7d
 7055 07b1 50       		.byte	0x50
 7056 07b2 1B       		.uleb128 0x1b
 7057 07b3 060C0000 		.4byte	.LASF116
 7058 07b7 0A       		.byte	0xa
 7059 07b8 5F02     		.2byte	0x25f
 7060 07ba 16070000 		.4byte	0x716
 7061 07be 58       		.byte	0x58
 7062 07bf 1B       		.uleb128 0x1b
 7063 07c0 B50C0000 		.4byte	.LASF117
 7064 07c4 0A       		.byte	0xa
 7065 07c5 6002     		.2byte	0x260
 7066 07c7 CD010000 		.4byte	0x1cd
 7067 07cb 68       		.byte	0x68
 7068 07cc 1B       		.uleb128 0x1b
 7069 07cd 860A0000 		.4byte	.LASF118
 7070 07d1 0A       		.byte	0xa
 7071 07d2 6102     		.2byte	0x261
 7072 07d4 CD010000 		.4byte	0x1cd
 7073 07d8 70       		.byte	0x70
 7074 07d9 1B       		.uleb128 0x1b
ARM GAS  /tmp/cc18izUm.s 			page 189


 7075 07da 84090000 		.4byte	.LASF119
 7076 07de 0A       		.byte	0xa
 7077 07df 6202     		.2byte	0x262
 7078 07e1 CD010000 		.4byte	0x1cd
 7079 07e5 78       		.byte	0x78
 7080 07e6 1B       		.uleb128 0x1b
 7081 07e7 F2000000 		.4byte	.LASF120
 7082 07eb 0A       		.byte	0xa
 7083 07ec 6302     		.2byte	0x263
 7084 07ee 6C080000 		.4byte	0x86c
 7085 07f2 80       		.byte	0x80
 7086 07f3 1B       		.uleb128 0x1b
 7087 07f4 01070000 		.4byte	.LASF121
 7088 07f8 0A       		.byte	0xa
 7089 07f9 6402     		.2byte	0x264
 7090 07fb 7C080000 		.4byte	0x87c
 7091 07ff 88       		.byte	0x88
 7092 0800 1B       		.uleb128 0x1b
 7093 0801 B10F0000 		.4byte	.LASF122
 7094 0805 0A       		.byte	0xa
 7095 0806 6502     		.2byte	0x265
 7096 0808 84000000 		.4byte	0x84
 7097 080c A0       		.byte	0xa0
 7098 080d 1B       		.uleb128 0x1b
 7099 080e 1A020000 		.4byte	.LASF123
 7100 0812 0A       		.byte	0xa
 7101 0813 6602     		.2byte	0x266
 7102 0815 CD010000 		.4byte	0x1cd
 7103 0819 A4       		.byte	0xa4
 7104 081a 1B       		.uleb128 0x1b
 7105 081b A90B0000 		.4byte	.LASF124
 7106 081f 0A       		.byte	0xa
 7107 0820 6702     		.2byte	0x267
 7108 0822 CD010000 		.4byte	0x1cd
 7109 0826 AC       		.byte	0xac
 7110 0827 1B       		.uleb128 0x1b
 7111 0828 110F0000 		.4byte	.LASF125
 7112 082c 0A       		.byte	0xa
 7113 082d 6802     		.2byte	0x268
 7114 082f CD010000 		.4byte	0x1cd
 7115 0833 B4       		.byte	0xb4
 7116 0834 1B       		.uleb128 0x1b
 7117 0835 30090000 		.4byte	.LASF126
 7118 0839 0A       		.byte	0xa
 7119 083a 6902     		.2byte	0x269
 7120 083c CD010000 		.4byte	0x1cd
 7121 0840 BC       		.byte	0xbc
 7122 0841 1B       		.uleb128 0x1b
 7123 0842 CC000000 		.4byte	.LASF127
 7124 0846 0A       		.byte	0xa
 7125 0847 6A02     		.2byte	0x26a
 7126 0849 CD010000 		.4byte	0x1cd
 7127 084d C4       		.byte	0xc4
 7128 084e 1B       		.uleb128 0x1b
 7129 084f FC080000 		.4byte	.LASF128
 7130 0853 0A       		.byte	0xa
 7131 0854 6B02     		.2byte	0x26b
ARM GAS  /tmp/cc18izUm.s 			page 190


 7132 0856 84000000 		.4byte	0x84
 7133 085a CC       		.byte	0xcc
 7134 085b 00       		.byte	0
 7135 085c 0B       		.uleb128 0xb
 7136 085d 2A060000 		.4byte	0x62a
 7137 0861 6C080000 		.4byte	0x86c
 7138 0865 0C       		.uleb128 0xc
 7139 0866 AD000000 		.4byte	0xad
 7140 086a 19       		.byte	0x19
 7141 086b 00       		.byte	0
 7142 086c 0B       		.uleb128 0xb
 7143 086d 2A060000 		.4byte	0x62a
 7144 0871 7C080000 		.4byte	0x87c
 7145 0875 0C       		.uleb128 0xc
 7146 0876 AD000000 		.4byte	0xad
 7147 087a 07       		.byte	0x7
 7148 087b 00       		.byte	0
 7149 087c 0B       		.uleb128 0xb
 7150 087d 2A060000 		.4byte	0x62a
 7151 0881 8C080000 		.4byte	0x88c
 7152 0885 0C       		.uleb128 0xc
 7153 0886 AD000000 		.4byte	0xad
 7154 088a 17       		.byte	0x17
 7155 088b 00       		.byte	0
 7156 088c 1E       		.uleb128 0x1e
 7157 088d F0       		.byte	0xf0
 7158 088e 0A       		.byte	0xa
 7159 088f 7002     		.2byte	0x270
 7160 0891 B0080000 		.4byte	0x8b0
 7161 0895 1B       		.uleb128 0x1b
 7162 0896 EA0D0000 		.4byte	.LASF129
 7163 089a 0A       		.byte	0xa
 7164 089b 7302     		.2byte	0x273
 7165 089d B0080000 		.4byte	0x8b0
 7166 08a1 00       		.byte	0
 7167 08a2 1B       		.uleb128 0x1b
 7168 08a3 E2070000 		.4byte	.LASF130
 7169 08a7 0A       		.byte	0xa
 7170 08a8 7402     		.2byte	0x274
 7171 08aa C0080000 		.4byte	0x8c0
 7172 08ae 78       		.byte	0x78
 7173 08af 00       		.byte	0
 7174 08b0 0B       		.uleb128 0xb
 7175 08b1 99030000 		.4byte	0x399
 7176 08b5 C0080000 		.4byte	0x8c0
 7177 08b9 0C       		.uleb128 0xc
 7178 08ba AD000000 		.4byte	0xad
 7179 08be 1D       		.byte	0x1d
 7180 08bf 00       		.byte	0
 7181 08c0 0B       		.uleb128 0xb
 7182 08c1 8B000000 		.4byte	0x8b
 7183 08c5 D0080000 		.4byte	0x8d0
 7184 08c9 0C       		.uleb128 0xc
 7185 08ca AD000000 		.4byte	0xad
 7186 08ce 1D       		.byte	0x1d
 7187 08cf 00       		.byte	0
 7188 08d0 1F       		.uleb128 0x1f
ARM GAS  /tmp/cc18izUm.s 			page 191


 7189 08d1 F0       		.byte	0xf0
 7190 08d2 0A       		.byte	0xa
 7191 08d3 5502     		.2byte	0x255
 7192 08d5 F2080000 		.4byte	0x8f2
 7193 08d9 20       		.uleb128 0x20
 7194 08da CA030000 		.4byte	.LASF79
 7195 08de 0A       		.byte	0xa
 7196 08df 6C02     		.2byte	0x26c
 7197 08e1 5B070000 		.4byte	0x75b
 7198 08e5 20       		.uleb128 0x20
 7199 08e6 BF000000 		.4byte	.LASF131
 7200 08ea 0A       		.byte	0xa
 7201 08eb 7502     		.2byte	0x275
 7202 08ed 8C080000 		.4byte	0x88c
 7203 08f1 00       		.byte	0
 7204 08f2 0B       		.uleb128 0xb
 7205 08f3 2A060000 		.4byte	0x62a
 7206 08f7 02090000 		.4byte	0x902
 7207 08fb 0C       		.uleb128 0xc
 7208 08fc AD000000 		.4byte	0xad
 7209 0900 18       		.byte	0x18
 7210 0901 00       		.byte	0
 7211 0902 21       		.uleb128 0x21
 7212 0903 0D090000 		.4byte	0x90d
 7213 0907 19       		.uleb128 0x19
 7214 0908 E7040000 		.4byte	0x4e7
 7215 090c 00       		.byte	0
 7216 090d 0A       		.uleb128 0xa
 7217 090e 04       		.byte	0x4
 7218 090f 02090000 		.4byte	0x902
 7219 0913 0A       		.uleb128 0xa
 7220 0914 04       		.byte	0x4
 7221 0915 41020000 		.4byte	0x241
 7222 0919 21       		.uleb128 0x21
 7223 091a 24090000 		.4byte	0x924
 7224 091e 19       		.uleb128 0x19
 7225 091f 84000000 		.4byte	0x84
 7226 0923 00       		.byte	0
 7227 0924 0A       		.uleb128 0xa
 7228 0925 04       		.byte	0x4
 7229 0926 2A090000 		.4byte	0x92a
 7230 092a 0A       		.uleb128 0xa
 7231 092b 04       		.byte	0x4
 7232 092c 19090000 		.4byte	0x919
 7233 0930 0B       		.uleb128 0xb
 7234 0931 C9060000 		.4byte	0x6c9
 7235 0935 40090000 		.4byte	0x940
 7236 0939 0C       		.uleb128 0xc
 7237 093a AD000000 		.4byte	0xad
 7238 093e 02       		.byte	0x2
 7239 093f 00       		.byte	0
 7240 0940 07       		.uleb128 0x7
 7241 0941 31020000 		.4byte	.LASF132
 7242 0945 0A       		.byte	0xa
 7243 0946 FD02     		.2byte	0x2fd
 7244 0948 E7040000 		.4byte	0x4e7
 7245 094c 07       		.uleb128 0x7
ARM GAS  /tmp/cc18izUm.s 			page 192


 7246 094d ED030000 		.4byte	.LASF133
 7247 0951 0A       		.byte	0xa
 7248 0952 FE02     		.2byte	0x2fe
 7249 0954 ED040000 		.4byte	0x4ed
 7250 0958 08       		.uleb128 0x8
 7251 0959 2D0D0000 		.4byte	.LASF134
 7252 095d 0B       		.byte	0xb
 7253 095e 5F       		.byte	0x5f
 7254 095f 24060000 		.4byte	0x624
 7255 0963 02       		.uleb128 0x2
 7256 0964 08       		.byte	0x8
 7257 0965 04       		.byte	0x4
 7258 0966 F6070000 		.4byte	.LASF135
 7259 096a 02       		.uleb128 0x2
 7260 096b 08       		.byte	0x8
 7261 096c 04       		.byte	0x4
 7262 096d 210A0000 		.4byte	.LASF136
 7263 0971 22       		.uleb128 0x22
 7264 0972 230B0000 		.4byte	.LASF216
 7265 0976 01       		.byte	0x1
 7266 0977 2C000000 		.4byte	0x2c
 7267 097b 0C       		.byte	0xc
 7268 097c 9902     		.2byte	0x299
 7269 097e 9B090000 		.4byte	0x99b
 7270 0982 23       		.uleb128 0x23
 7271 0983 CD0D0000 		.4byte	.LASF137
 7272 0987 7F       		.sleb128 -1
 7273 0988 24       		.uleb128 0x24
 7274 0989 71070000 		.4byte	.LASF138
 7275 098d 00       		.byte	0
 7276 098e 24       		.uleb128 0x24
 7277 098f DE0C0000 		.4byte	.LASF139
 7278 0993 01       		.byte	0x1
 7279 0994 24       		.uleb128 0x24
 7280 0995 960C0000 		.4byte	.LASF140
 7281 0999 02       		.byte	0x2
 7282 099a 00       		.byte	0
 7283 099b 07       		.uleb128 0x7
 7284 099c 24060000 		.4byte	.LASF141
 7285 09a0 0C       		.byte	0xc
 7286 09a1 A402     		.2byte	0x2a4
 7287 09a3 71090000 		.4byte	0x971
 7288 09a7 0B       		.uleb128 0xb
 7289 09a8 60060000 		.4byte	0x660
 7290 09ac B2090000 		.4byte	0x9b2
 7291 09b0 25       		.uleb128 0x25
 7292 09b1 00       		.byte	0
 7293 09b2 03       		.uleb128 0x3
 7294 09b3 A7090000 		.4byte	0x9a7
 7295 09b7 08       		.uleb128 0x8
 7296 09b8 560D0000 		.4byte	.LASF142
 7297 09bc 0D       		.byte	0xd
 7298 09bd 14       		.byte	0x14
 7299 09be B2090000 		.4byte	0x9b2
 7300 09c2 08       		.uleb128 0x8
 7301 09c3 E6010000 		.4byte	.LASF143
 7302 09c7 0D       		.byte	0xd
ARM GAS  /tmp/cc18izUm.s 			page 193


 7303 09c8 15       		.byte	0x15
 7304 09c9 84000000 		.4byte	0x84
 7305 09cd 14       		.uleb128 0x14
 7306 09ce 3F090000 		.4byte	.LASF144
 7307 09d2 1B       		.byte	0x1b
 7308 09d3 01       		.byte	0x1
 7309 09d4 92       		.byte	0x92
 7310 09d5 1E0B0000 		.4byte	0xb1e
 7311 09d9 13       		.uleb128 0x13
 7312 09da 84020000 		.4byte	.LASF145
 7313 09de 01       		.byte	0x1
 7314 09df 93       		.byte	0x93
 7315 09e0 33000000 		.4byte	0x33
 7316 09e4 00       		.byte	0
 7317 09e5 13       		.uleb128 0x13
 7318 09e6 05090000 		.4byte	.LASF146
 7319 09ea 01       		.byte	0x1
 7320 09eb 94       		.byte	0x94
 7321 09ec 33000000 		.4byte	0x33
 7322 09f0 01       		.byte	0x1
 7323 09f1 15       		.uleb128 0x15
 7324 09f2 6C706600 		.ascii	"lpf\000"
 7325 09f6 01       		.byte	0x1
 7326 09f7 95       		.byte	0x95
 7327 09f8 33000000 		.4byte	0x33
 7328 09fc 02       		.byte	0x2
 7329 09fd 13       		.uleb128 0x13
 7330 09fe 34060000 		.4byte	.LASF147
 7331 0a02 01       		.byte	0x1
 7332 0a03 96       		.byte	0x96
 7333 0a04 33000000 		.4byte	0x33
 7334 0a08 03       		.byte	0x3
 7335 0a09 13       		.uleb128 0x13
 7336 0a0a 28030000 		.4byte	.LASF148
 7337 0a0e 01       		.byte	0x1
 7338 0a0f 97       		.byte	0x97
 7339 0a10 33000000 		.4byte	0x33
 7340 0a14 04       		.byte	0x4
 7341 0a15 13       		.uleb128 0x13
 7342 0a16 340E0000 		.4byte	.LASF149
 7343 0a1a 01       		.byte	0x1
 7344 0a1b 98       		.byte	0x98
 7345 0a1c 33000000 		.4byte	0x33
 7346 0a20 05       		.byte	0x5
 7347 0a21 13       		.uleb128 0x13
 7348 0a22 75050000 		.4byte	.LASF150
 7349 0a26 01       		.byte	0x1
 7350 0a27 99       		.byte	0x99
 7351 0a28 33000000 		.4byte	0x33
 7352 0a2c 06       		.byte	0x6
 7353 0a2d 13       		.uleb128 0x13
 7354 0a2e F60A0000 		.4byte	.LASF151
 7355 0a32 01       		.byte	0x1
 7356 0a33 9A       		.byte	0x9a
 7357 0a34 33000000 		.4byte	0x33
 7358 0a38 07       		.byte	0x7
 7359 0a39 13       		.uleb128 0x13
ARM GAS  /tmp/cc18izUm.s 			page 194


 7360 0a3a 5F0E0000 		.4byte	.LASF152
 7361 0a3e 01       		.byte	0x1
 7362 0a3f A0       		.byte	0xa0
 7363 0a40 33000000 		.4byte	0x33
 7364 0a44 08       		.byte	0x8
 7365 0a45 13       		.uleb128 0x13
 7366 0a46 A5010000 		.4byte	.LASF153
 7367 0a4a 01       		.byte	0x1
 7368 0a4b A1       		.byte	0xa1
 7369 0a4c 33000000 		.4byte	0x33
 7370 0a50 09       		.byte	0x9
 7371 0a51 13       		.uleb128 0x13
 7372 0a52 42070000 		.4byte	.LASF154
 7373 0a56 01       		.byte	0x1
 7374 0a57 A2       		.byte	0xa2
 7375 0a58 33000000 		.4byte	0x33
 7376 0a5c 0A       		.byte	0xa
 7377 0a5d 13       		.uleb128 0x13
 7378 0a5e 400B0000 		.4byte	.LASF155
 7379 0a62 01       		.byte	0x1
 7380 0a63 A3       		.byte	0xa3
 7381 0a64 33000000 		.4byte	0x33
 7382 0a68 0B       		.byte	0xb
 7383 0a69 13       		.uleb128 0x13
 7384 0a6a 6A0E0000 		.4byte	.LASF156
 7385 0a6e 01       		.byte	0x1
 7386 0a6f A4       		.byte	0xa4
 7387 0a70 33000000 		.4byte	0x33
 7388 0a74 0C       		.byte	0xc
 7389 0a75 13       		.uleb128 0x13
 7390 0a76 940D0000 		.4byte	.LASF157
 7391 0a7a 01       		.byte	0x1
 7392 0a7b A5       		.byte	0xa5
 7393 0a7c 33000000 		.4byte	0x33
 7394 0a80 0D       		.byte	0xd
 7395 0a81 13       		.uleb128 0x13
 7396 0a82 610F0000 		.4byte	.LASF158
 7397 0a86 01       		.byte	0x1
 7398 0a87 A6       		.byte	0xa6
 7399 0a88 33000000 		.4byte	0x33
 7400 0a8c 0E       		.byte	0xe
 7401 0a8d 13       		.uleb128 0x13
 7402 0a8e C5040000 		.4byte	.LASF159
 7403 0a92 01       		.byte	0x1
 7404 0a93 A7       		.byte	0xa7
 7405 0a94 33000000 		.4byte	0x33
 7406 0a98 0F       		.byte	0xf
 7407 0a99 13       		.uleb128 0x13
 7408 0a9a 0B020000 		.4byte	.LASF160
 7409 0a9e 01       		.byte	0x1
 7410 0a9f A8       		.byte	0xa8
 7411 0aa0 33000000 		.4byte	0x33
 7412 0aa4 10       		.byte	0x10
 7413 0aa5 13       		.uleb128 0x13
 7414 0aa6 3C030000 		.4byte	.LASF161
 7415 0aaa 01       		.byte	0x1
 7416 0aab A9       		.byte	0xa9
ARM GAS  /tmp/cc18izUm.s 			page 195


 7417 0aac 33000000 		.4byte	0x33
 7418 0ab0 11       		.byte	0x11
 7419 0ab1 13       		.uleb128 0x13
 7420 0ab2 F4040000 		.4byte	.LASF162
 7421 0ab6 01       		.byte	0x1
 7422 0ab7 AD       		.byte	0xad
 7423 0ab8 33000000 		.4byte	0x33
 7424 0abc 12       		.byte	0x12
 7425 0abd 13       		.uleb128 0x13
 7426 0abe FF040000 		.4byte	.LASF163
 7427 0ac2 01       		.byte	0x1
 7428 0ac3 AE       		.byte	0xae
 7429 0ac4 33000000 		.4byte	0x33
 7430 0ac8 13       		.byte	0x13
 7431 0ac9 13       		.uleb128 0x13
 7432 0aca 880D0000 		.4byte	.LASF164
 7433 0ace 01       		.byte	0x1
 7434 0acf AF       		.byte	0xaf
 7435 0ad0 33000000 		.4byte	0x33
 7436 0ad4 14       		.byte	0x14
 7437 0ad5 13       		.uleb128 0x13
 7438 0ad6 F50E0000 		.4byte	.LASF165
 7439 0ada 01       		.byte	0x1
 7440 0adb B0       		.byte	0xb0
 7441 0adc 33000000 		.4byte	0x33
 7442 0ae0 15       		.byte	0x15
 7443 0ae1 13       		.uleb128 0x13
 7444 0ae2 B9060000 		.4byte	.LASF166
 7445 0ae6 01       		.byte	0x1
 7446 0ae7 B1       		.byte	0xb1
 7447 0ae8 33000000 		.4byte	0x33
 7448 0aec 16       		.byte	0x16
 7449 0aed 13       		.uleb128 0x13
 7450 0aee 66050000 		.4byte	.LASF167
 7451 0af2 01       		.byte	0x1
 7452 0af3 B2       		.byte	0xb2
 7453 0af4 33000000 		.4byte	0x33
 7454 0af8 17       		.byte	0x17
 7455 0af9 13       		.uleb128 0x13
 7456 0afa 7E050000 		.4byte	.LASF168
 7457 0afe 01       		.byte	0x1
 7458 0aff B3       		.byte	0xb3
 7459 0b00 33000000 		.4byte	0x33
 7460 0b04 18       		.byte	0x18
 7461 0b05 13       		.uleb128 0x13
 7462 0b06 8F0F0000 		.4byte	.LASF169
 7463 0b0a 01       		.byte	0x1
 7464 0b0b B4       		.byte	0xb4
 7465 0b0c 33000000 		.4byte	0x33
 7466 0b10 19       		.byte	0x19
 7467 0b11 13       		.uleb128 0x13
 7468 0b12 3A0F0000 		.4byte	.LASF170
 7469 0b16 01       		.byte	0x1
 7470 0b17 B5       		.byte	0xb5
 7471 0b18 33000000 		.4byte	0x33
 7472 0b1c 1A       		.byte	0x1a
 7473 0b1d 00       		.byte	0
ARM GAS  /tmp/cc18izUm.s 			page 196


 7474 0b1e 03       		.uleb128 0x3
 7475 0b1f CD090000 		.4byte	0x9cd
 7476 0b23 14       		.uleb128 0x14
 7477 0b24 F00B0000 		.4byte	.LASF171
 7478 0b28 0C       		.byte	0xc
 7479 0b29 01       		.byte	0x1
 7480 0b2a C8       		.byte	0xc8
 7481 0b2b 780B0000 		.4byte	0xb78
 7482 0b2f 13       		.uleb128 0x13
 7483 0b30 98080000 		.4byte	.LASF172
 7484 0b34 01       		.byte	0x1
 7485 0b35 C9       		.byte	0xc9
 7486 0b36 33000000 		.4byte	0x33
 7487 0b3a 00       		.byte	0
 7488 0b3b 13       		.uleb128 0x13
 7489 0b3c 84030000 		.4byte	.LASF173
 7490 0b40 01       		.byte	0x1
 7491 0b41 CA       		.byte	0xca
 7492 0b42 46000000 		.4byte	0x46
 7493 0b46 02       		.byte	0x2
 7494 0b47 13       		.uleb128 0x13
 7495 0b48 660F0000 		.4byte	.LASF174
 7496 0b4c 01       		.byte	0x1
 7497 0b4d CB       		.byte	0xcb
 7498 0b4e 33000000 		.4byte	0x33
 7499 0b52 04       		.byte	0x4
 7500 0b53 13       		.uleb128 0x13
 7501 0b54 36080000 		.4byte	.LASF175
 7502 0b58 01       		.byte	0x1
 7503 0b59 CC       		.byte	0xcc
 7504 0b5a 46000000 		.4byte	0x46
 7505 0b5e 06       		.byte	0x6
 7506 0b5f 13       		.uleb128 0x13
 7507 0b60 C8090000 		.4byte	.LASF176
 7508 0b64 01       		.byte	0x1
 7509 0b65 CD       		.byte	0xcd
 7510 0b66 3F000000 		.4byte	0x3f
 7511 0b6a 08       		.byte	0x8
 7512 0b6b 13       		.uleb128 0x13
 7513 0b6c 0C080000 		.4byte	.LASF177
 7514 0b70 01       		.byte	0x1
 7515 0b71 CE       		.byte	0xce
 7516 0b72 46000000 		.4byte	0x46
 7517 0b76 0A       		.byte	0xa
 7518 0b77 00       		.byte	0
 7519 0b78 03       		.uleb128 0x3
 7520 0b79 230B0000 		.4byte	0xb23
 7521 0b7d 14       		.uleb128 0x14
 7522 0b7e A6090000 		.4byte	.LASF178
 7523 0b82 0C       		.byte	0xc
 7524 0b83 01       		.byte	0x1
 7525 0b84 D8       		.byte	0xd8
 7526 0b85 DE0B0000 		.4byte	0xbde
 7527 0b89 13       		.uleb128 0x13
 7528 0b8a EB050000 		.4byte	.LASF179
 7529 0b8e 01       		.byte	0x1
 7530 0b8f D9       		.byte	0xd9
ARM GAS  /tmp/cc18izUm.s 			page 197


 7531 0b90 46000000 		.4byte	0x46
 7532 0b94 00       		.byte	0
 7533 0b95 13       		.uleb128 0x13
 7534 0b96 980B0000 		.4byte	.LASF180
 7535 0b9a 01       		.byte	0x1
 7536 0b9b DA       		.byte	0xda
 7537 0b9c 33000000 		.4byte	0x33
 7538 0ba0 02       		.byte	0x2
 7539 0ba1 15       		.uleb128 0x15
 7540 0ba2 6C706600 		.ascii	"lpf\000"
 7541 0ba6 01       		.byte	0x1
 7542 0ba7 DB       		.byte	0xdb
 7543 0ba8 46000000 		.4byte	0x46
 7544 0bac 04       		.byte	0x4
 7545 0bad 13       		.uleb128 0x13
 7546 0bae 9E0D0000 		.4byte	.LASF181
 7547 0bb2 01       		.byte	0x1
 7548 0bb3 DC       		.byte	0xdc
 7549 0bb4 46000000 		.4byte	0x46
 7550 0bb8 06       		.byte	0x6
 7551 0bb9 13       		.uleb128 0x13
 7552 0bba 1B070000 		.4byte	.LASF182
 7553 0bbe 01       		.byte	0x1
 7554 0bbf DD       		.byte	0xdd
 7555 0bc0 33000000 		.4byte	0x33
 7556 0bc4 08       		.byte	0x8
 7557 0bc5 13       		.uleb128 0x13
 7558 0bc6 A0050000 		.4byte	.LASF183
 7559 0bca 01       		.byte	0x1
 7560 0bcb DE       		.byte	0xde
 7561 0bcc 33000000 		.4byte	0x33
 7562 0bd0 09       		.byte	0x9
 7563 0bd1 13       		.uleb128 0x13
 7564 0bd2 8F0C0000 		.4byte	.LASF184
 7565 0bd6 01       		.byte	0x1
 7566 0bd7 DF       		.byte	0xdf
 7567 0bd8 33000000 		.4byte	0x33
 7568 0bdc 0A       		.byte	0xa
 7569 0bdd 00       		.byte	0
 7570 0bde 14       		.uleb128 0x14
 7571 0bdf B7050000 		.4byte	.LASF185
 7572 0be3 20       		.byte	0x20
 7573 0be4 01       		.byte	0x1
 7574 0be5 E5       		.byte	0xe5
 7575 0be6 C90C0000 		.4byte	0xcc9
 7576 0bea 13       		.uleb128 0x13
 7577 0beb EB050000 		.4byte	.LASF179
 7578 0bef 01       		.byte	0x1
 7579 0bf0 E7       		.byte	0xe7
 7580 0bf1 33000000 		.4byte	0x33
 7581 0bf5 00       		.byte	0
 7582 0bf6 13       		.uleb128 0x13
 7583 0bf7 980B0000 		.4byte	.LASF180
 7584 0bfb 01       		.byte	0x1
 7585 0bfc E9       		.byte	0xe9
 7586 0bfd 33000000 		.4byte	0x33
 7587 0c01 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 198


 7588 0c02 13       		.uleb128 0x13
 7589 0c03 1E080000 		.4byte	.LASF186
 7590 0c07 01       		.byte	0x1
 7591 0c08 EB       		.byte	0xeb
 7592 0c09 33000000 		.4byte	0x33
 7593 0c0d 02       		.byte	0x2
 7594 0c0e 15       		.uleb128 0x15
 7595 0c0f 6C706600 		.ascii	"lpf\000"
 7596 0c13 01       		.byte	0x1
 7597 0c14 ED       		.byte	0xed
 7598 0c15 33000000 		.4byte	0x33
 7599 0c19 03       		.byte	0x3
 7600 0c1a 13       		.uleb128 0x13
 7601 0c1b 16080000 		.4byte	.LASF187
 7602 0c1f 01       		.byte	0x1
 7603 0c20 EE       		.byte	0xee
 7604 0c21 33000000 		.4byte	0x33
 7605 0c25 04       		.byte	0x4
 7606 0c26 13       		.uleb128 0x13
 7607 0c27 9E0D0000 		.4byte	.LASF181
 7608 0c2b 01       		.byte	0x1
 7609 0c2c F0       		.byte	0xf0
 7610 0c2d 46000000 		.4byte	0x46
 7611 0c31 06       		.byte	0x6
 7612 0c32 13       		.uleb128 0x13
 7613 0c33 19040000 		.4byte	.LASF188
 7614 0c37 01       		.byte	0x1
 7615 0c38 F2       		.byte	0xf2
 7616 0c39 33000000 		.4byte	0x33
 7617 0c3d 08       		.byte	0x8
 7618 0c3e 13       		.uleb128 0x13
 7619 0c3f C5040000 		.4byte	.LASF159
 7620 0c43 01       		.byte	0x1
 7621 0c44 F4       		.byte	0xf4
 7622 0c45 33000000 		.4byte	0x33
 7623 0c49 09       		.byte	0x9
 7624 0c4a 13       		.uleb128 0x13
 7625 0c4b 26070000 		.4byte	.LASF189
 7626 0c4f 01       		.byte	0x1
 7627 0c50 F6       		.byte	0xf6
 7628 0c51 33000000 		.4byte	0x33
 7629 0c55 0A       		.byte	0xa
 7630 0c56 13       		.uleb128 0x13
 7631 0c57 36010000 		.4byte	.LASF190
 7632 0c5b 01       		.byte	0x1
 7633 0c5c FB       		.byte	0xfb
 7634 0c5d 33000000 		.4byte	0x33
 7635 0c61 0B       		.byte	0xb
 7636 0c62 13       		.uleb128 0x13
 7637 0c63 7D0B0000 		.4byte	.LASF191
 7638 0c67 01       		.byte	0x1
 7639 0c68 FD       		.byte	0xfd
 7640 0c69 33000000 		.4byte	0x33
 7641 0c6d 0C       		.byte	0xc
 7642 0c6e 13       		.uleb128 0x13
 7643 0c6f 41010000 		.4byte	.LASF192
 7644 0c73 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 199


 7645 0c74 FF       		.byte	0xff
 7646 0c75 33000000 		.4byte	0x33
 7647 0c79 0D       		.byte	0xd
 7648 0c7a 1B       		.uleb128 0x1b
 7649 0c7b 1B0A0000 		.4byte	.LASF193
 7650 0c7f 01       		.byte	0x1
 7651 0c80 0001     		.2byte	0x100
 7652 0c82 7D0B0000 		.4byte	0xb7d
 7653 0c86 0E       		.byte	0xe
 7654 0c87 1B       		.uleb128 0x1b
 7655 0c88 B6010000 		.4byte	.LASF194
 7656 0c8c 01       		.byte	0x1
 7657 0c8d 0201     		.2byte	0x102
 7658 0c8f 33000000 		.4byte	0x33
 7659 0c93 1A       		.byte	0x1a
 7660 0c94 1B       		.uleb128 0x1b
 7661 0c95 7C0D0000 		.4byte	.LASF195
 7662 0c99 01       		.byte	0x1
 7663 0c9a 0401     		.2byte	0x104
 7664 0c9c 33000000 		.4byte	0x33
 7665 0ca0 1B       		.byte	0x1b
 7666 0ca1 1B       		.uleb128 0x1b
 7667 0ca2 8F0C0000 		.4byte	.LASF184
 7668 0ca6 01       		.byte	0x1
 7669 0ca7 0601     		.2byte	0x106
 7670 0ca9 33000000 		.4byte	0x33
 7671 0cad 1C       		.byte	0x1c
 7672 0cae 1B       		.uleb128 0x1b
 7673 0caf 19060000 		.4byte	.LASF196
 7674 0cb3 01       		.byte	0x1
 7675 0cb4 0801     		.2byte	0x108
 7676 0cb6 33000000 		.4byte	0x33
 7677 0cba 1D       		.byte	0x1d
 7678 0cbb 1B       		.uleb128 0x1b
 7679 0cbc A50C0000 		.4byte	.LASF197
 7680 0cc0 01       		.byte	0x1
 7681 0cc1 0A01     		.2byte	0x10a
 7682 0cc3 46000000 		.4byte	0x46
 7683 0cc7 1E       		.byte	0x1e
 7684 0cc8 00       		.byte	0
 7685 0cc9 1D       		.uleb128 0x1d
 7686 0cca A20B0000 		.4byte	.LASF198
 7687 0cce 28       		.byte	0x28
 7688 0ccf 01       		.byte	0x1
 7689 0cd0 1401     		.2byte	0x114
 7690 0cd2 8D0D0000 		.4byte	0xd8d
 7691 0cd6 1B       		.uleb128 0x1b
 7692 0cd7 9E0F0000 		.4byte	.LASF199
 7693 0cdb 01       		.byte	0x1
 7694 0cdc 1501     		.2byte	0x115
 7695 0cde 6F000000 		.4byte	0x6f
 7696 0ce2 00       		.byte	0
 7697 0ce3 1B       		.uleb128 0x1b
 7698 0ce4 EB070000 		.4byte	.LASF200
 7699 0ce8 01       		.byte	0x1
 7700 0ce9 1601     		.2byte	0x116
 7701 0ceb 6F000000 		.4byte	0x6f
ARM GAS  /tmp/cc18izUm.s 			page 200


 7702 0cef 04       		.byte	0x4
 7703 0cf0 1B       		.uleb128 0x1b
 7704 0cf1 4D0C0000 		.4byte	.LASF201
 7705 0cf5 01       		.byte	0x1
 7706 0cf6 1701     		.2byte	0x117
 7707 0cf8 33000000 		.4byte	0x33
 7708 0cfc 08       		.byte	0x8
 7709 0cfd 1B       		.uleb128 0x1b
 7710 0cfe 5A0C0000 		.4byte	.LASF202
 7711 0d02 01       		.byte	0x1
 7712 0d03 1801     		.2byte	0x118
 7713 0d05 33000000 		.4byte	0x33
 7714 0d09 09       		.byte	0x9
 7715 0d0a 1B       		.uleb128 0x1b
 7716 0d0b 8E0E0000 		.4byte	.LASF203
 7717 0d0f 01       		.byte	0x1
 7718 0d10 1901     		.2byte	0x119
 7719 0d12 33000000 		.4byte	0x33
 7720 0d16 0A       		.byte	0xa
 7721 0d17 1B       		.uleb128 0x1b
 7722 0d18 B80B0000 		.4byte	.LASF204
 7723 0d1c 01       		.byte	0x1
 7724 0d1d 1A01     		.2byte	0x11a
 7725 0d1f 33000000 		.4byte	0x33
 7726 0d23 0B       		.byte	0xb
 7727 0d24 1B       		.uleb128 0x1b
 7728 0d25 FB0C0000 		.4byte	.LASF205
 7729 0d29 01       		.byte	0x1
 7730 0d2a 1B01     		.2byte	0x11b
 7731 0d2c 46000000 		.4byte	0x46
 7732 0d30 0C       		.byte	0xc
 7733 0d31 1B       		.uleb128 0x1b
 7734 0d32 0D070000 		.4byte	.LASF206
 7735 0d36 01       		.byte	0x1
 7736 0d37 1C01     		.2byte	0x11c
 7737 0d39 33000000 		.4byte	0x33
 7738 0d3d 0E       		.byte	0xe
 7739 0d3e 1B       		.uleb128 0x1b
 7740 0d3f F1090000 		.4byte	.LASF207
 7741 0d43 01       		.byte	0x1
 7742 0d44 1D01     		.2byte	0x11d
 7743 0d46 25000000 		.4byte	0x25
 7744 0d4a 10       		.byte	0x10
 7745 0d4b 1B       		.uleb128 0x1b
 7746 0d4c A0020000 		.4byte	.LASF208
 7747 0d50 01       		.byte	0x1
 7748 0d51 1E01     		.2byte	0x11e
 7749 0d53 25000000 		.4byte	0x25
 7750 0d57 14       		.byte	0x14
 7751 0d58 1B       		.uleb128 0x1b
 7752 0d59 2A0C0000 		.4byte	.LASF209
 7753 0d5d 01       		.byte	0x1
 7754 0d5e 1F01     		.2byte	0x11f
 7755 0d60 25000000 		.4byte	0x25
 7756 0d64 18       		.byte	0x18
 7757 0d65 1B       		.uleb128 0x1b
 7758 0d66 EC000000 		.4byte	.LASF210
ARM GAS  /tmp/cc18izUm.s 			page 201


 7759 0d6a 01       		.byte	0x1
 7760 0d6b 2001     		.2byte	0x120
 7761 0d6d 25000000 		.4byte	0x25
 7762 0d71 1C       		.byte	0x1c
 7763 0d72 1B       		.uleb128 0x1b
 7764 0d73 6D000000 		.4byte	.LASF211
 7765 0d77 01       		.byte	0x1
 7766 0d78 2101     		.2byte	0x121
 7767 0d7a 25000000 		.4byte	0x25
 7768 0d7e 20       		.byte	0x20
 7769 0d7f 1B       		.uleb128 0x1b
 7770 0d80 ED0C0000 		.4byte	.LASF212
 7771 0d84 01       		.byte	0x1
 7772 0d85 2201     		.2byte	0x122
 7773 0d87 25000000 		.4byte	0x25
 7774 0d8b 24       		.byte	0x24
 7775 0d8c 00       		.byte	0
 7776 0d8d 03       		.uleb128 0x3
 7777 0d8e C90C0000 		.4byte	0xcc9
 7778 0d92 1D       		.uleb128 0x1d
 7779 0d93 59050000 		.4byte	.LASF213
 7780 0d97 2C       		.byte	0x2c
 7781 0d98 01       		.byte	0x1
 7782 0d99 2601     		.2byte	0x126
 7783 0d9b D30D0000 		.4byte	0xdd3
 7784 0d9f 26       		.uleb128 0x26
 7785 0da0 72656700 		.ascii	"reg\000"
 7786 0da4 01       		.byte	0x1
 7787 0da5 2701     		.2byte	0x127
 7788 0da7 D30D0000 		.4byte	0xdd3
 7789 0dab 00       		.byte	0
 7790 0dac 26       		.uleb128 0x26
 7791 0dad 687700   		.ascii	"hw\000"
 7792 0db0 01       		.byte	0x1
 7793 0db1 2801     		.2byte	0x128
 7794 0db3 D90D0000 		.4byte	0xdd9
 7795 0db7 04       		.byte	0x4
 7796 0db8 1B       		.uleb128 0x1b
 7797 0db9 810F0000 		.4byte	.LASF214
 7798 0dbd 01       		.byte	0x1
 7799 0dbe 2901     		.2byte	0x129
 7800 0dc0 DE0B0000 		.4byte	0xbde
 7801 0dc4 08       		.byte	0x8
 7802 0dc5 1B       		.uleb128 0x1b
 7803 0dc6 73020000 		.4byte	.LASF215
 7804 0dca 01       		.byte	0x1
 7805 0dcb 2A01     		.2byte	0x12a
 7806 0dcd DF0D0000 		.4byte	0xddf
 7807 0dd1 28       		.byte	0x28
 7808 0dd2 00       		.byte	0
 7809 0dd3 0A       		.uleb128 0xa
 7810 0dd4 04       		.byte	0x4
 7811 0dd5 1E0B0000 		.4byte	0xb1e
 7812 0dd9 0A       		.uleb128 0xa
 7813 0dda 04       		.byte	0x4
 7814 0ddb 780B0000 		.4byte	0xb78
 7815 0ddf 0A       		.uleb128 0xa
ARM GAS  /tmp/cc18izUm.s 			page 202


 7816 0de0 04       		.byte	0x4
 7817 0de1 8D0D0000 		.4byte	0xd8d
 7818 0de5 22       		.uleb128 0x22
 7819 0de6 E0010000 		.4byte	.LASF217
 7820 0dea 01       		.byte	0x1
 7821 0deb 33000000 		.4byte	0x33
 7822 0def 01       		.byte	0x1
 7823 0df0 2E01     		.2byte	0x12e
 7824 0df2 2D0E0000 		.4byte	0xe2d
 7825 0df6 24       		.uleb128 0x24
 7826 0df7 5E060000 		.4byte	.LASF218
 7827 0dfb 00       		.byte	0
 7828 0dfc 24       		.uleb128 0x24
 7829 0dfd F50B0000 		.4byte	.LASF219
 7830 0e01 01       		.byte	0x1
 7831 0e02 24       		.uleb128 0x24
 7832 0e03 0E090000 		.4byte	.LASF220
 7833 0e07 02       		.byte	0x2
 7834 0e08 24       		.uleb128 0x24
 7835 0e09 460D0000 		.4byte	.LASF221
 7836 0e0d 03       		.byte	0x3
 7837 0e0e 24       		.uleb128 0x24
 7838 0e0f A1060000 		.4byte	.LASF222
 7839 0e13 04       		.byte	0x4
 7840 0e14 24       		.uleb128 0x24
 7841 0e15 9B0E0000 		.4byte	.LASF223
 7842 0e19 05       		.byte	0x5
 7843 0e1a 24       		.uleb128 0x24
 7844 0e1b 62070000 		.4byte	.LASF224
 7845 0e1f 06       		.byte	0x6
 7846 0e20 24       		.uleb128 0x24
 7847 0e21 050E0000 		.4byte	.LASF225
 7848 0e25 07       		.byte	0x7
 7849 0e26 24       		.uleb128 0x24
 7850 0e27 80080000 		.4byte	.LASF226
 7851 0e2b 08       		.byte	0x8
 7852 0e2c 00       		.byte	0
 7853 0e2d 22       		.uleb128 0x22
 7854 0e2e 720B0000 		.4byte	.LASF227
 7855 0e32 01       		.byte	0x1
 7856 0e33 33000000 		.4byte	0x33
 7857 0e37 01       		.byte	0x1
 7858 0e38 3B01     		.2byte	0x13b
 7859 0e3a 5D0E0000 		.4byte	0xe5d
 7860 0e3e 24       		.uleb128 0x24
 7861 0e3f 500E0000 		.4byte	.LASF228
 7862 0e43 00       		.byte	0
 7863 0e44 24       		.uleb128 0x24
 7864 0e45 5D0B0000 		.4byte	.LASF229
 7865 0e49 01       		.byte	0x1
 7866 0e4a 24       		.uleb128 0x24
 7867 0e4b 55000000 		.4byte	.LASF230
 7868 0e4f 02       		.byte	0x2
 7869 0e50 24       		.uleb128 0x24
 7870 0e51 1B010000 		.4byte	.LASF231
 7871 0e55 03       		.byte	0x3
 7872 0e56 24       		.uleb128 0x24
ARM GAS  /tmp/cc18izUm.s 			page 203


 7873 0e57 51030000 		.4byte	.LASF232
 7874 0e5b 04       		.byte	0x4
 7875 0e5c 00       		.byte	0
 7876 0e5d 22       		.uleb128 0x22
 7877 0e5e 5E030000 		.4byte	.LASF233
 7878 0e62 01       		.byte	0x1
 7879 0e63 33000000 		.4byte	0x33
 7880 0e67 01       		.byte	0x1
 7881 0e68 4401     		.2byte	0x144
 7882 0e6a 8D0E0000 		.4byte	0xe8d
 7883 0e6e 24       		.uleb128 0x24
 7884 0e6f 42050000 		.4byte	.LASF234
 7885 0e73 00       		.byte	0
 7886 0e74 24       		.uleb128 0x24
 7887 0e75 F4050000 		.4byte	.LASF235
 7888 0e79 01       		.byte	0x1
 7889 0e7a 24       		.uleb128 0x24
 7890 0e7b 4A080000 		.4byte	.LASF236
 7891 0e7f 02       		.byte	0x2
 7892 0e80 24       		.uleb128 0x24
 7893 0e81 78020000 		.4byte	.LASF237
 7894 0e85 03       		.byte	0x3
 7895 0e86 24       		.uleb128 0x24
 7896 0e87 23050000 		.4byte	.LASF238
 7897 0e8b 04       		.byte	0x4
 7898 0e8c 00       		.byte	0
 7899 0e8d 22       		.uleb128 0x22
 7900 0e8e 3C0E0000 		.4byte	.LASF239
 7901 0e92 01       		.byte	0x1
 7902 0e93 33000000 		.4byte	0x33
 7903 0e97 01       		.byte	0x1
 7904 0e98 4D01     		.2byte	0x14d
 7905 0e9a B10E0000 		.4byte	0xeb1
 7906 0e9e 24       		.uleb128 0x24
 7907 0e9f 7F070000 		.4byte	.LASF240
 7908 0ea3 00       		.byte	0
 7909 0ea4 24       		.uleb128 0x24
 7910 0ea5 830C0000 		.4byte	.LASF241
 7911 0ea9 01       		.byte	0x1
 7912 0eaa 24       		.uleb128 0x24
 7913 0eab 9D010000 		.4byte	.LASF242
 7914 0eaf 02       		.byte	0x2
 7915 0eb0 00       		.byte	0
 7916 0eb1 22       		.uleb128 0x22
 7917 0eb2 9A040000 		.4byte	.LASF243
 7918 0eb6 01       		.byte	0x1
 7919 0eb7 33000000 		.4byte	0x33
 7920 0ebb 01       		.byte	0x1
 7921 0ebc 5401     		.2byte	0x154
 7922 0ebe DB0E0000 		.4byte	0xedb
 7923 0ec2 24       		.uleb128 0x24
 7924 0ec3 6D0D0000 		.4byte	.LASF244
 7925 0ec7 00       		.byte	0
 7926 0ec8 24       		.uleb128 0x24
 7927 0ec9 4D050000 		.4byte	.LASF245
 7928 0ecd 01       		.byte	0x1
 7929 0ece 24       		.uleb128 0x24
ARM GAS  /tmp/cc18izUm.s 			page 204


 7930 0ecf F9090000 		.4byte	.LASF246
 7931 0ed3 02       		.byte	0x2
 7932 0ed4 24       		.uleb128 0x24
 7933 0ed5 2D0A0000 		.4byte	.LASF247
 7934 0ed9 03       		.byte	0x3
 7935 0eda 00       		.byte	0
 7936 0edb 27       		.uleb128 0x27
 7937 0edc 687700   		.ascii	"hw\000"
 7938 0edf 01       		.byte	0x1
 7939 0ee0 F101     		.2byte	0x1f1
 7940 0ee2 780B0000 		.4byte	0xb78
 7941 0ee6 05       		.uleb128 0x5
 7942 0ee7 03       		.byte	0x3
 7943 0ee8 00000000 		.4byte	hw
 7944 0eec 27       		.uleb128 0x27
 7945 0eed 72656700 		.ascii	"reg\000"
 7946 0ef1 01       		.byte	0x1
 7947 0ef2 F901     		.2byte	0x1f9
 7948 0ef4 1E0B0000 		.4byte	0xb1e
 7949 0ef8 05       		.uleb128 0x5
 7950 0ef9 03       		.byte	0x3
 7951 0efa 00000000 		.4byte	reg
 7952 0efe 28       		.uleb128 0x28
 7953 0eff 73020000 		.4byte	.LASF215
 7954 0f03 01       		.byte	0x1
 7955 0f04 2702     		.2byte	0x227
 7956 0f06 8D0D0000 		.4byte	0xd8d
 7957 0f0a 05       		.uleb128 0x5
 7958 0f0b 03       		.byte	0x3
 7959 0f0c 00000000 		.4byte	test
 7960 0f10 29       		.uleb128 0x29
 7961 0f11 737400   		.ascii	"st\000"
 7962 0f14 01       		.byte	0x1
 7963 0f15 3D02     		.2byte	0x23d
 7964 0f17 920D0000 		.4byte	0xd92
 7965 0f1b 05       		.uleb128 0x5
 7966 0f1c 03       		.byte	0x3
 7967 0f1d 00000000 		.4byte	st
 7968 0f21 2A       		.uleb128 0x2a
 7969 0f22 33000000 		.4byte	.LASF347
 7970 0f26 0E       		.byte	0xe
 7971 0f27 78       		.byte	0x78
 7972 0f28 301E0000 		.4byte	.LFB109
 7973 0f2c 02000000 		.4byte	.LFE109-.LFB109
 7974 0f30 01       		.uleb128 0x1
 7975 0f31 9C       		.byte	0x9c
 7976 0f32 450F0000 		.4byte	0xf45
 7977 0f36 2B       		.uleb128 0x2b
 7978 0f37 220F0000 		.4byte	.LASF248
 7979 0f3b 01       		.byte	0x1
 7980 0f3c 1E0B     		.2byte	0xb1e
 7981 0f3e 450F0000 		.4byte	0xf45
 7982 0f42 01       		.uleb128 0x1
 7983 0f43 50       		.byte	0x50
 7984 0f44 00       		.byte	0
 7985 0f45 0A       		.uleb128 0xa
 7986 0f46 04       		.byte	0x4
ARM GAS  /tmp/cc18izUm.s 			page 205


 7987 0f47 6F000000 		.4byte	0x6f
 7988 0f4b 2C       		.uleb128 0x2c
 7989 0f4c 6E0A0000 		.4byte	.LASF253
 7990 0f50 0E       		.byte	0xe
 7991 0f51 3D       		.byte	0x3d
 7992 0f52 84000000 		.4byte	0x84
 7993 0f56 481C0000 		.4byte	.LFB108
 7994 0f5a E8010000 		.4byte	.LFE108-.LFB108
 7995 0f5e 01       		.uleb128 0x1
 7996 0f5f 9C       		.byte	0x9c
 7997 0f60 6B110000 		.4byte	0x116b
 7998 0f64 2D       		.uleb128 0x2d
 7999 0f65 E4050000 		.4byte	.LASF249
 8000 0f69 01       		.byte	0x1
 8001 0f6a 4F0A     		.2byte	0xa4f
 8002 0f6c 46000000 		.4byte	0x46
 8003 0f70 00000000 		.4byte	.LLST100
 8004 0f74 2D       		.uleb128 0x2d
 8005 0f75 220F0000 		.4byte	.LASF248
 8006 0f79 01       		.byte	0x1
 8007 0f7a 4F0A     		.2byte	0xa4f
 8008 0f7c 33000000 		.4byte	0x33
 8009 0f80 6C000000 		.4byte	.LLST101
 8010 0f84 2D       		.uleb128 0x2d
 8011 0f85 25000000 		.4byte	.LASF250
 8012 0f89 01       		.byte	0x1
 8013 0f8a 500A     		.2byte	0xa50
 8014 0f8c 33000000 		.4byte	0x33
 8015 0f90 C4000000 		.4byte	.LLST102
 8016 0f94 2E       		.uleb128 0x2e
 8017 0f95 8A0F0000 		.4byte	.LASF251
 8018 0f99 01       		.byte	0x1
 8019 0f9a 520A     		.2byte	0xa52
 8020 0f9c A9060000 		.4byte	0x6a9
 8021 0fa0 02       		.uleb128 0x2
 8022 0fa1 91       		.byte	0x91
 8023 0fa2 64       		.sleb128 -28
 8024 0fa3 2F       		.uleb128 0x2f
 8025 0fa4 C60B0000 		.4byte	.LASF277
 8026 0fa8 01       		.byte	0x1
 8027 0fa9 010B     		.2byte	0xb01
 8028 0fab 181D0000 		.4byte	.L572
 8029 0faf 30       		.uleb128 0x30
 8030 0fb0 60000000 		.4byte	.Ldebug_ranges0+0x60
 8031 0fb4 FC100000 		.4byte	0x10fc
 8032 0fb8 31       		.uleb128 0x31
 8033 0fb9 08030000 		.4byte	.LASF252
 8034 0fbd 01       		.byte	0x1
 8035 0fbe 550A     		.2byte	0xa55
 8036 0fc0 33000000 		.4byte	0x33
 8037 0fc4 30010000 		.4byte	.LLST104
 8038 0fc8 32       		.uleb128 0x32
 8039 0fc9 A8210000 		.4byte	0x21a8
 8040 0fcd D01C0000 		.4byte	.LBB32
 8041 0fd1 04000000 		.4byte	.LBE32-.LBB32
 8042 0fd5 01       		.byte	0x1
 8043 0fd6 840A     		.2byte	0xa84
ARM GAS  /tmp/cc18izUm.s 			page 206


 8044 0fd8 E60F0000 		.4byte	0xfe6
 8045 0fdc 33       		.uleb128 0x33
 8046 0fdd B8210000 		.4byte	0x21b8
 8047 0fe1 64010000 		.4byte	.LLST105
 8048 0fe5 00       		.byte	0
 8049 0fe6 34       		.uleb128 0x34
 8050 0fe7 B41C0000 		.4byte	.LVL547
 8051 0feb 4C240000 		.4byte	0x244c
 8052 0fef FA0F0000 		.4byte	0xffa
 8053 0ff3 35       		.uleb128 0x35
 8054 0ff4 01       		.uleb128 0x1
 8055 0ff5 50       		.byte	0x50
 8056 0ff6 02       		.uleb128 0x2
 8057 0ff7 75       		.byte	0x75
 8058 0ff8 16       		.sleb128 22
 8059 0ff9 00       		.byte	0
 8060 0ffa 34       		.uleb128 0x34
 8061 0ffb BC1C0000 		.4byte	.LVL548
 8062 0fff D4230000 		.4byte	0x23d4
 8063 1003 0E100000 		.4byte	0x100e
 8064 1007 35       		.uleb128 0x35
 8065 1008 01       		.uleb128 0x1
 8066 1009 50       		.byte	0x50
 8067 100a 02       		.uleb128 0x2
 8068 100b 75       		.byte	0x75
 8069 100c 18       		.sleb128 24
 8070 100d 00       		.byte	0
 8071 100e 34       		.uleb128 0x34
 8072 100f C41C0000 		.4byte	.LVL549
 8073 1013 5C230000 		.4byte	0x235c
 8074 1017 22100000 		.4byte	0x1022
 8075 101b 35       		.uleb128 0x35
 8076 101c 01       		.uleb128 0x1
 8077 101d 50       		.byte	0x50
 8078 101e 02       		.uleb128 0x2
 8079 101f 75       		.byte	0x75
 8080 1020 1A       		.sleb128 26
 8081 1021 00       		.byte	0
 8082 1022 34       		.uleb128 0x34
 8083 1023 CC1C0000 		.4byte	.LVL550
 8084 1027 E4220000 		.4byte	0x22e4
 8085 102b 36100000 		.4byte	0x1036
 8086 102f 35       		.uleb128 0x35
 8087 1030 01       		.uleb128 0x1
 8088 1031 50       		.byte	0x50
 8089 1032 02       		.uleb128 0x2
 8090 1033 75       		.byte	0x75
 8091 1034 1C       		.sleb128 28
 8092 1035 00       		.byte	0
 8093 1036 34       		.uleb128 0x34
 8094 1037 DA1C0000 		.4byte	.LVL553
 8095 103b A82A0000 		.4byte	0x2aa8
 8096 103f 49100000 		.4byte	0x1049
 8097 1043 35       		.uleb128 0x35
 8098 1044 01       		.uleb128 0x1
 8099 1045 50       		.byte	0x50
 8100 1046 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 207


 8101 1047 30       		.byte	0x30
 8102 1048 00       		.byte	0
 8103 1049 34       		.uleb128 0x34
 8104 104a E01C0000 		.4byte	.LVL554
 8105 104e AF270000 		.4byte	0x27af
 8106 1052 5C100000 		.4byte	0x105c
 8107 1056 35       		.uleb128 0x35
 8108 1057 01       		.uleb128 0x1
 8109 1058 50       		.byte	0x50
 8110 1059 01       		.uleb128 0x1
 8111 105a 30       		.byte	0x30
 8112 105b 00       		.byte	0
 8113 105c 34       		.uleb128 0x34
 8114 105d F81C0000 		.4byte	.LVL555
 8115 1061 2D2B0000 		.4byte	0x2b2d
 8116 1065 75100000 		.4byte	0x1075
 8117 1069 35       		.uleb128 0x35
 8118 106a 01       		.uleb128 0x1
 8119 106b 52       		.byte	0x52
 8120 106c 01       		.uleb128 0x1
 8121 106d 31       		.byte	0x31
 8122 106e 35       		.uleb128 0x35
 8123 106f 01       		.uleb128 0x1
 8124 1070 53       		.byte	0x53
 8125 1071 02       		.uleb128 0x2
 8126 1072 91       		.byte	0x91
 8127 1073 64       		.sleb128 -28
 8128 1074 00       		.byte	0
 8129 1075 34       		.uleb128 0x34
 8130 1076 161D0000 		.4byte	.LVL556
 8131 107a 2D2B0000 		.4byte	0x2b2d
 8132 107e 8E100000 		.4byte	0x108e
 8133 1082 35       		.uleb128 0x35
 8134 1083 01       		.uleb128 0x1
 8135 1084 52       		.byte	0x52
 8136 1085 01       		.uleb128 0x1
 8137 1086 31       		.byte	0x31
 8138 1087 35       		.uleb128 0x35
 8139 1088 01       		.uleb128 0x1
 8140 1089 53       		.byte	0x53
 8141 108a 02       		.uleb128 0x2
 8142 108b 91       		.byte	0x91
 8143 108c 64       		.sleb128 -28
 8144 108d 00       		.byte	0
 8145 108e 34       		.uleb128 0x34
 8146 108f 701D0000 		.4byte	.LVL567
 8147 1093 03120000 		.4byte	0x1203
 8148 1097 A1100000 		.4byte	0x10a1
 8149 109b 35       		.uleb128 0x35
 8150 109c 01       		.uleb128 0x1
 8151 109d 50       		.byte	0x50
 8152 109e 01       		.uleb128 0x1
 8153 109f 30       		.byte	0x30
 8154 10a0 00       		.byte	0
 8155 10a1 34       		.uleb128 0x34
 8156 10a2 941D0000 		.4byte	.LVL568
 8157 10a6 2D2B0000 		.4byte	0x2b2d
ARM GAS  /tmp/cc18izUm.s 			page 208


 8158 10aa BA100000 		.4byte	0x10ba
 8159 10ae 35       		.uleb128 0x35
 8160 10af 01       		.uleb128 0x1
 8161 10b0 52       		.byte	0x52
 8162 10b1 01       		.uleb128 0x1
 8163 10b2 32       		.byte	0x32
 8164 10b3 35       		.uleb128 0x35
 8165 10b4 01       		.uleb128 0x1
 8166 10b5 53       		.byte	0x53
 8167 10b6 02       		.uleb128 0x2
 8168 10b7 91       		.byte	0x91
 8169 10b8 64       		.sleb128 -28
 8170 10b9 00       		.byte	0
 8171 10ba 34       		.uleb128 0x34
 8172 10bb 9E1D0000 		.4byte	.LVL569
 8173 10bf 382B0000 		.4byte	0x2b38
 8174 10c3 CD100000 		.4byte	0x10cd
 8175 10c7 35       		.uleb128 0x35
 8176 10c8 01       		.uleb128 0x1
 8177 10c9 50       		.byte	0x50
 8178 10ca 01       		.uleb128 0x1
 8179 10cb 35       		.byte	0x35
 8180 10cc 00       		.byte	0
 8181 10cd 34       		.uleb128 0x34
 8182 10ce BC1D0000 		.4byte	.LVL571
 8183 10d2 2D2B0000 		.4byte	0x2b2d
 8184 10d6 E6100000 		.4byte	0x10e6
 8185 10da 35       		.uleb128 0x35
 8186 10db 01       		.uleb128 0x1
 8187 10dc 52       		.byte	0x52
 8188 10dd 01       		.uleb128 0x1
 8189 10de 31       		.byte	0x31
 8190 10df 35       		.uleb128 0x35
 8191 10e0 01       		.uleb128 0x1
 8192 10e1 53       		.byte	0x53
 8193 10e2 02       		.uleb128 0x2
 8194 10e3 91       		.byte	0x91
 8195 10e4 64       		.sleb128 -28
 8196 10e5 00       		.byte	0
 8197 10e6 36       		.uleb128 0x36
 8198 10e7 F41D0000 		.4byte	.LVL572
 8199 10eb 2D2B0000 		.4byte	0x2b2d
 8200 10ef 35       		.uleb128 0x35
 8201 10f0 01       		.uleb128 0x1
 8202 10f1 52       		.byte	0x52
 8203 10f2 01       		.uleb128 0x1
 8204 10f3 32       		.byte	0x32
 8205 10f4 35       		.uleb128 0x35
 8206 10f5 01       		.uleb128 0x1
 8207 10f6 53       		.byte	0x53
 8208 10f7 02       		.uleb128 0x2
 8209 10f8 91       		.byte	0x91
 8210 10f9 64       		.sleb128 -28
 8211 10fa 00       		.byte	0
 8212 10fb 00       		.byte	0
 8213 10fc 37       		.uleb128 0x37
 8214 10fd 4E1C0000 		.4byte	.LBB30
ARM GAS  /tmp/cc18izUm.s 			page 209


 8215 1101 26000000 		.4byte	.LBE30-.LBB30
 8216 1105 25110000 		.4byte	0x1125
 8217 1109 38       		.uleb128 0x38
 8218 110a 696900   		.ascii	"ii\000"
 8219 110d 01       		.byte	0x1
 8220 110e F80A     		.2byte	0xaf8
 8221 1110 84000000 		.4byte	0x84
 8222 1114 7C010000 		.4byte	.LLST103
 8223 1118 39       		.uleb128 0x39
 8224 1119 32030000 		.4byte	.LASF286
 8225 111d 01       		.byte	0x1
 8226 111e F90A     		.2byte	0xaf9
 8227 1120 24060000 		.4byte	0x624
 8228 1124 00       		.byte	0
 8229 1125 3A       		.uleb128 0x3a
 8230 1126 361D0000 		.4byte	.LVL558
 8231 112a 55200000 		.4byte	0x2055
 8232 112e 3A       		.uleb128 0x3a
 8233 112f 3C1D0000 		.4byte	.LVL559
 8234 1133 FE230000 		.4byte	0x23fe
 8235 1137 3A       		.uleb128 0x3a
 8236 1138 421D0000 		.4byte	.LVL560
 8237 113c 86230000 		.4byte	0x2386
 8238 1140 3A       		.uleb128 0x3a
 8239 1141 481D0000 		.4byte	.LVL561
 8240 1145 0E230000 		.4byte	0x230e
 8241 1149 3A       		.uleb128 0x3a
 8242 114a 4E1D0000 		.4byte	.LVL562
 8243 114e 6D220000 		.4byte	0x226d
 8244 1152 3A       		.uleb128 0x3a
 8245 1153 541D0000 		.4byte	.LVL563
 8246 1157 26210000 		.4byte	0x2126
 8247 115b 36       		.uleb128 0x36
 8248 115c 1C1E0000 		.4byte	.LVL574
 8249 1160 03120000 		.4byte	0x1203
 8250 1164 35       		.uleb128 0x35
 8251 1165 01       		.uleb128 0x1
 8252 1166 50       		.byte	0x50
 8253 1167 01       		.uleb128 0x1
 8254 1168 31       		.byte	0x31
 8255 1169 00       		.byte	0
 8256 116a 00       		.byte	0
 8257 116b 2C       		.uleb128 0x2c
 8258 116c AA080000 		.4byte	.LASF254
 8259 1170 0E       		.byte	0xe
 8260 1171 4E       		.byte	0x4e
 8261 1172 84000000 		.4byte	0x84
 8262 1176 421C0000 		.4byte	.LFB107
 8263 117a 06000000 		.4byte	.LFE107-.LFB107
 8264 117e 01       		.uleb128 0x1
 8265 117f 9C       		.byte	0x9c
 8266 1180 95110000 		.4byte	0x1195
 8267 1184 3B       		.uleb128 0x3b
 8268 1185 66737200 		.ascii	"fsr\000"
 8269 1189 01       		.byte	0x1
 8270 118a 190A     		.2byte	0xa19
 8271 118c 95110000 		.4byte	0x1195
ARM GAS  /tmp/cc18izUm.s 			page 210


 8272 1190 C9010000 		.4byte	.LLST99
 8273 1194 00       		.byte	0
 8274 1195 0A       		.uleb128 0xa
 8275 1196 04       		.byte	0x4
 8276 1197 46000000 		.4byte	0x46
 8277 119b 2C       		.uleb128 0x2c
 8278 119c 89010000 		.4byte	.LASF255
 8279 11a0 0E       		.byte	0xe
 8280 11a1 63       		.byte	0x63
 8281 11a2 84000000 		.4byte	0x84
 8282 11a6 3C1C0000 		.4byte	.LFB106
 8283 11aa 06000000 		.4byte	.LFE106-.LFB106
 8284 11ae 01       		.uleb128 0x1
 8285 11af 9C       		.byte	0x9c
 8286 11b0 D3110000 		.4byte	0x11d3
 8287 11b4 2D       		.uleb128 0x2d
 8288 11b5 8A0F0000 		.4byte	.LASF251
 8289 11b9 01       		.byte	0x1
 8290 11ba E409     		.2byte	0x9e4
 8291 11bc D3110000 		.4byte	0x11d3
 8292 11c0 EA010000 		.4byte	.LLST98
 8293 11c4 2B       		.uleb128 0x2b
 8294 11c5 47030000 		.4byte	.LASF256
 8295 11c9 01       		.byte	0x1
 8296 11ca E409     		.2byte	0x9e4
 8297 11cc 450F0000 		.4byte	0xf45
 8298 11d0 01       		.uleb128 0x1
 8299 11d1 51       		.byte	0x51
 8300 11d2 00       		.byte	0
 8301 11d3 0A       		.uleb128 0xa
 8302 11d4 04       		.byte	0x4
 8303 11d5 3F000000 		.4byte	0x3f
 8304 11d9 2C       		.uleb128 0x2c
 8305 11da 6A030000 		.4byte	.LASF257
 8306 11de 0E       		.byte	0xe
 8307 11df 43       		.byte	0x43
 8308 11e0 84000000 		.4byte	0x84
 8309 11e4 2C1C0000 		.4byte	.LFB105
 8310 11e8 10000000 		.4byte	.LFE105-.LFB105
 8311 11ec 01       		.uleb128 0x1
 8312 11ed 9C       		.byte	0x9c
 8313 11ee 03120000 		.4byte	0x1203
 8314 11f2 2D       		.uleb128 0x2d
 8315 11f3 11060000 		.4byte	.LASF258
 8316 11f7 01       		.byte	0x1
 8317 11f8 6D09     		.2byte	0x96d
 8318 11fa 99030000 		.4byte	0x399
 8319 11fe 0B020000 		.4byte	.LLST97
 8320 1202 00       		.byte	0
 8321 1203 2C       		.uleb128 0x2c
 8322 1204 FC000000 		.4byte	.LASF259
 8323 1208 0E       		.byte	0xe
 8324 1209 42       		.byte	0x42
 8325 120a 84000000 		.4byte	0x84
 8326 120e 48180000 		.4byte	.LFB104
 8327 1212 90000000 		.4byte	.LFE104-.LFB104
 8328 1216 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 211


 8329 1217 9C       		.byte	0x9c
 8330 1218 E1120000 		.4byte	0x12e1
 8331 121c 2D       		.uleb128 0x2d
 8332 121d C9070000 		.4byte	.LASF260
 8333 1221 01       		.byte	0x1
 8334 1222 4609     		.2byte	0x946
 8335 1224 33000000 		.4byte	0x33
 8336 1228 2C020000 		.4byte	.LLST71
 8337 122c 29       		.uleb128 0x29
 8338 122d 746D7000 		.ascii	"tmp\000"
 8339 1231 01       		.byte	0x1
 8340 1232 4809     		.2byte	0x948
 8341 1234 33000000 		.4byte	0x33
 8342 1238 02       		.uleb128 0x2
 8343 1239 91       		.byte	0x91
 8344 123a 6F       		.sleb128 -17
 8345 123b 34       		.uleb128 0x34
 8346 123c 68180000 		.4byte	.LVL421
 8347 1240 A82A0000 		.4byte	0x2aa8
 8348 1244 4E120000 		.4byte	0x124e
 8349 1248 35       		.uleb128 0x35
 8350 1249 01       		.uleb128 0x1
 8351 124a 50       		.byte	0x50
 8352 124b 01       		.uleb128 0x1
 8353 124c 30       		.byte	0x30
 8354 124d 00       		.byte	0
 8355 124e 34       		.uleb128 0x34
 8356 124f 6E180000 		.4byte	.LVL422
 8357 1253 5A1D0000 		.4byte	0x1d5a
 8358 1257 61120000 		.4byte	0x1261
 8359 125b 35       		.uleb128 0x35
 8360 125c 01       		.uleb128 0x1
 8361 125d 50       		.byte	0x50
 8362 125e 01       		.uleb128 0x1
 8363 125f 30       		.byte	0x30
 8364 1260 00       		.byte	0
 8365 1261 3A       		.uleb128 0x3a
 8366 1262 76180000 		.4byte	.LVL423
 8367 1266 6D220000 		.4byte	0x226d
 8368 126a 34       		.uleb128 0x34
 8369 126b 8A180000 		.4byte	.LVL424
 8370 126f 2D2B0000 		.4byte	0x2b2d
 8371 1273 89120000 		.4byte	0x1289
 8372 1277 35       		.uleb128 0x35
 8373 1278 01       		.uleb128 0x1
 8374 1279 51       		.byte	0x51
 8375 127a 02       		.uleb128 0x2
 8376 127b 08       		.byte	0x8
 8377 127c 23       		.byte	0x23
 8378 127d 35       		.uleb128 0x35
 8379 127e 01       		.uleb128 0x1
 8380 127f 52       		.byte	0x52
 8381 1280 01       		.uleb128 0x1
 8382 1281 31       		.byte	0x31
 8383 1282 35       		.uleb128 0x35
 8384 1283 01       		.uleb128 0x1
 8385 1284 53       		.byte	0x53
ARM GAS  /tmp/cc18izUm.s 			page 212


 8386 1285 02       		.uleb128 0x2
 8387 1286 91       		.byte	0x91
 8388 1287 6F       		.sleb128 -17
 8389 1288 00       		.byte	0
 8390 1289 34       		.uleb128 0x34
 8391 128a 94180000 		.4byte	.LVL425
 8392 128e A82A0000 		.4byte	0x2aa8
 8393 1292 9C120000 		.4byte	0x129c
 8394 1296 35       		.uleb128 0x35
 8395 1297 01       		.uleb128 0x1
 8396 1298 50       		.byte	0x50
 8397 1299 01       		.uleb128 0x1
 8398 129a 31       		.byte	0x31
 8399 129b 00       		.byte	0
 8400 129c 3A       		.uleb128 0x3a
 8401 129d 98180000 		.4byte	.LVL426
 8402 12a1 76240000 		.4byte	0x2476
 8403 12a5 34       		.uleb128 0x34
 8404 12a6 A4180000 		.4byte	.LVL429
 8405 12aa A82A0000 		.4byte	0x2aa8
 8406 12ae B8120000 		.4byte	0x12b8
 8407 12b2 35       		.uleb128 0x35
 8408 12b3 01       		.uleb128 0x1
 8409 12b4 50       		.byte	0x50
 8410 12b5 01       		.uleb128 0x1
 8411 12b6 30       		.byte	0x30
 8412 12b7 00       		.byte	0
 8413 12b8 34       		.uleb128 0x34
 8414 12b9 BA180000 		.4byte	.LVL430
 8415 12bd 2D2B0000 		.4byte	0x2b2d
 8416 12c1 D7120000 		.4byte	0x12d7
 8417 12c5 35       		.uleb128 0x35
 8418 12c6 01       		.uleb128 0x1
 8419 12c7 51       		.byte	0x51
 8420 12c8 02       		.uleb128 0x2
 8421 12c9 08       		.byte	0x8
 8422 12ca 23       		.byte	0x23
 8423 12cb 35       		.uleb128 0x35
 8424 12cc 01       		.uleb128 0x1
 8425 12cd 52       		.byte	0x52
 8426 12ce 01       		.uleb128 0x1
 8427 12cf 31       		.byte	0x31
 8428 12d0 35       		.uleb128 0x35
 8429 12d1 01       		.uleb128 0x1
 8430 12d2 53       		.byte	0x53
 8431 12d3 02       		.uleb128 0x2
 8432 12d4 91       		.byte	0x91
 8433 12d5 6F       		.sleb128 -17
 8434 12d6 00       		.byte	0
 8435 12d7 3A       		.uleb128 0x3a
 8436 12d8 C4180000 		.4byte	.LVL431
 8437 12dc 76240000 		.4byte	0x2476
 8438 12e0 00       		.byte	0
 8439 12e1 2C       		.uleb128 0x2c
 8440 12e2 D2050000 		.4byte	.LASF261
 8441 12e6 0E       		.byte	0xe
 8442 12e7 71       		.byte	0x71
ARM GAS  /tmp/cc18izUm.s 			page 213


 8443 12e8 84000000 		.4byte	0x84
 8444 12ec 94170000 		.4byte	.LFB103
 8445 12f0 B4000000 		.4byte	.LFE103-.LFB103
 8446 12f4 01       		.uleb128 0x1
 8447 12f5 9C       		.byte	0x9c
 8448 12f6 ED130000 		.4byte	0x13ed
 8449 12fa 2D       		.uleb128 0x2d
 8450 12fb 000B0000 		.4byte	.LASF262
 8451 12ff 01       		.byte	0x1
 8452 1300 1D09     		.2byte	0x91d
 8453 1302 46000000 		.4byte	0x46
 8454 1306 98020000 		.4byte	.LLST65
 8455 130a 2D       		.uleb128 0x2d
 8456 130b BC040000 		.4byte	.LASF263
 8457 130f 01       		.byte	0x1
 8458 1310 1D09     		.2byte	0x91d
 8459 1312 ED130000 		.4byte	0x13ed
 8460 1316 EB020000 		.4byte	.LLST66
 8461 131a 2D       		.uleb128 0x2d
 8462 131b 7A000000 		.4byte	.LASF264
 8463 131f 01       		.byte	0x1
 8464 1320 1E09     		.2byte	0x91e
 8465 1322 46000000 		.4byte	0x46
 8466 1326 38030000 		.4byte	.LLST67
 8467 132a 2D       		.uleb128 0x2d
 8468 132b 9E0D0000 		.4byte	.LASF181
 8469 132f 01       		.byte	0x1
 8470 1330 1E09     		.2byte	0x91e
 8471 1332 46000000 		.4byte	0x46
 8472 1336 72030000 		.4byte	.LLST68
 8473 133a 38       		.uleb128 0x38
 8474 133b 696900   		.ascii	"ii\000"
 8475 133e 01       		.byte	0x1
 8476 133f 2009     		.2byte	0x920
 8477 1341 46000000 		.4byte	0x46
 8478 1345 AC030000 		.4byte	.LLST69
 8479 1349 31       		.uleb128 0x31
 8480 134a B1020000 		.4byte	.LASF265
 8481 134e 01       		.byte	0x1
 8482 134f 2109     		.2byte	0x921
 8483 1351 46000000 		.4byte	0x46
 8484 1355 EC030000 		.4byte	.LLST70
 8485 1359 29       		.uleb128 0x29
 8486 135a 63757200 		.ascii	"cur\000"
 8487 135e 01       		.byte	0x1
 8488 135f 2409     		.2byte	0x924
 8489 1361 F3130000 		.4byte	0x13f3
 8490 1365 02       		.uleb128 0x2
 8491 1366 91       		.byte	0x91
 8492 1367 48       		.sleb128 -56
 8493 1368 29       		.uleb128 0x29
 8494 1369 746D7000 		.ascii	"tmp\000"
 8495 136d 01       		.byte	0x1
 8496 136e 2409     		.2byte	0x924
 8497 1370 03140000 		.4byte	0x1403
 8498 1374 02       		.uleb128 0x2
 8499 1375 91       		.byte	0x91
ARM GAS  /tmp/cc18izUm.s 			page 214


 8500 1376 44       		.sleb128 -60
 8501 1377 34       		.uleb128 0x34
 8502 1378 CA170000 		.4byte	.LVL404
 8503 137c 9B140000 		.4byte	0x149b
 8504 1380 97130000 		.4byte	0x1397
 8505 1384 35       		.uleb128 0x35
 8506 1385 01       		.uleb128 0x1
 8507 1386 50       		.byte	0x50
 8508 1387 02       		.uleb128 0x2
 8509 1388 74       		.byte	0x74
 8510 1389 00       		.sleb128 0
 8511 138a 35       		.uleb128 0x35
 8512 138b 01       		.uleb128 0x1
 8513 138c 51       		.byte	0x51
 8514 138d 02       		.uleb128 0x2
 8515 138e 76       		.byte	0x76
 8516 138f 00       		.sleb128 0
 8517 1390 35       		.uleb128 0x35
 8518 1391 01       		.uleb128 0x1
 8519 1392 52       		.byte	0x52
 8520 1393 02       		.uleb128 0x2
 8521 1394 7B       		.byte	0x7b
 8522 1395 00       		.sleb128 0
 8523 1396 00       		.byte	0
 8524 1397 34       		.uleb128 0x34
 8525 1398 D6170000 		.4byte	.LVL405
 8526 139c 13140000 		.4byte	0x1413
 8527 13a0 B7130000 		.4byte	0x13b7
 8528 13a4 35       		.uleb128 0x35
 8529 13a5 01       		.uleb128 0x1
 8530 13a6 50       		.byte	0x50
 8531 13a7 02       		.uleb128 0x2
 8532 13a8 74       		.byte	0x74
 8533 13a9 00       		.sleb128 0
 8534 13aa 35       		.uleb128 0x35
 8535 13ab 01       		.uleb128 0x1
 8536 13ac 51       		.byte	0x51
 8537 13ad 02       		.uleb128 0x2
 8538 13ae 76       		.byte	0x76
 8539 13af 00       		.sleb128 0
 8540 13b0 35       		.uleb128 0x35
 8541 13b1 01       		.uleb128 0x1
 8542 13b2 52       		.byte	0x52
 8543 13b3 02       		.uleb128 0x2
 8544 13b4 91       		.byte	0x91
 8545 13b5 48       		.sleb128 -56
 8546 13b6 00       		.byte	0
 8547 13b7 34       		.uleb128 0x34
 8548 13b8 E2170000 		.4byte	.LVL406
 8549 13bc 432B0000 		.4byte	0x2b43
 8550 13c0 D7130000 		.4byte	0x13d7
 8551 13c4 35       		.uleb128 0x35
 8552 13c5 01       		.uleb128 0x1
 8553 13c6 50       		.byte	0x50
 8554 13c7 02       		.uleb128 0x2
 8555 13c8 7B       		.byte	0x7b
 8556 13c9 00       		.sleb128 0
ARM GAS  /tmp/cc18izUm.s 			page 215


 8557 13ca 35       		.uleb128 0x35
 8558 13cb 01       		.uleb128 0x1
 8559 13cc 51       		.byte	0x51
 8560 13cd 02       		.uleb128 0x2
 8561 13ce 91       		.byte	0x91
 8562 13cf 48       		.sleb128 -56
 8563 13d0 35       		.uleb128 0x35
 8564 13d1 01       		.uleb128 0x1
 8565 13d2 52       		.byte	0x52
 8566 13d3 02       		.uleb128 0x2
 8567 13d4 76       		.byte	0x76
 8568 13d5 00       		.sleb128 0
 8569 13d6 00       		.byte	0
 8570 13d7 36       		.uleb128 0x36
 8571 13d8 0A180000 		.4byte	.LVL410
 8572 13dc 2D2B0000 		.4byte	0x2b2d
 8573 13e0 35       		.uleb128 0x35
 8574 13e1 01       		.uleb128 0x1
 8575 13e2 52       		.byte	0x52
 8576 13e3 01       		.uleb128 0x1
 8577 13e4 32       		.byte	0x32
 8578 13e5 35       		.uleb128 0x35
 8579 13e6 01       		.uleb128 0x1
 8580 13e7 53       		.byte	0x53
 8581 13e8 02       		.uleb128 0x2
 8582 13e9 91       		.byte	0x91
 8583 13ea 44       		.sleb128 -60
 8584 13eb 00       		.byte	0
 8585 13ec 00       		.byte	0
 8586 13ed 0A       		.uleb128 0xa
 8587 13ee 04       		.byte	0x4
 8588 13ef 3A000000 		.4byte	0x3a
 8589 13f3 0B       		.uleb128 0xb
 8590 13f4 33000000 		.4byte	0x33
 8591 13f8 03140000 		.4byte	0x1403
 8592 13fc 0C       		.uleb128 0xc
 8593 13fd AD000000 		.4byte	0xad
 8594 1401 0F       		.byte	0xf
 8595 1402 00       		.byte	0
 8596 1403 0B       		.uleb128 0xb
 8597 1404 33000000 		.4byte	0x33
 8598 1408 13140000 		.4byte	0x1413
 8599 140c 0C       		.uleb128 0xc
 8600 140d AD000000 		.4byte	0xad
 8601 1411 01       		.byte	0x1
 8602 1412 00       		.byte	0
 8603 1413 2C       		.uleb128 0x2c
 8604 1414 9D080000 		.4byte	.LASF266
 8605 1418 0E       		.byte	0xe
 8606 1419 6F       		.byte	0x6f
 8607 141a 84000000 		.4byte	0x84
 8608 141e 20170000 		.4byte	.LFB102
 8609 1422 74000000 		.4byte	.LFE102-.LFB102
 8610 1426 01       		.uleb128 0x1
 8611 1427 9C       		.byte	0x9c
 8612 1428 9B140000 		.4byte	0x149b
 8613 142c 2D       		.uleb128 0x2d
ARM GAS  /tmp/cc18izUm.s 			page 216


 8614 142d E0090000 		.4byte	.LASF267
 8615 1431 01       		.byte	0x1
 8616 1432 FD08     		.2byte	0x8fd
 8617 1434 46000000 		.4byte	0x46
 8618 1438 15040000 		.4byte	.LLST62
 8619 143c 2D       		.uleb128 0x2d
 8620 143d 000B0000 		.4byte	.LASF262
 8621 1441 01       		.byte	0x1
 8622 1442 FD08     		.2byte	0x8fd
 8623 1444 46000000 		.4byte	0x46
 8624 1448 68040000 		.4byte	.LLST63
 8625 144c 2D       		.uleb128 0x2d
 8626 144d 8A0F0000 		.4byte	.LASF251
 8627 1451 01       		.byte	0x1
 8628 1452 FE08     		.2byte	0x8fe
 8629 1454 99030000 		.4byte	0x399
 8630 1458 A2040000 		.4byte	.LLST64
 8631 145c 29       		.uleb128 0x29
 8632 145d 746D7000 		.ascii	"tmp\000"
 8633 1461 01       		.byte	0x1
 8634 1462 0009     		.2byte	0x900
 8635 1464 03140000 		.4byte	0x1403
 8636 1468 02       		.uleb128 0x2
 8637 1469 91       		.byte	0x91
 8638 146a 6C       		.sleb128 -20
 8639 146b 34       		.uleb128 0x34
 8640 146c 58170000 		.4byte	.LVL393
 8641 1470 2D2B0000 		.4byte	0x2b2d
 8642 1474 84140000 		.4byte	0x1484
 8643 1478 35       		.uleb128 0x35
 8644 1479 01       		.uleb128 0x1
 8645 147a 52       		.byte	0x52
 8646 147b 01       		.uleb128 0x1
 8647 147c 32       		.byte	0x32
 8648 147d 35       		.uleb128 0x35
 8649 147e 01       		.uleb128 0x1
 8650 147f 53       		.byte	0x53
 8651 1480 02       		.uleb128 0x2
 8652 1481 91       		.byte	0x91
 8653 1482 6C       		.sleb128 -20
 8654 1483 00       		.byte	0
 8655 1484 36       		.uleb128 0x36
 8656 1485 6C170000 		.4byte	.LVL394
 8657 1489 4E2B0000 		.4byte	0x2b4e
 8658 148d 35       		.uleb128 0x35
 8659 148e 01       		.uleb128 0x1
 8660 148f 52       		.byte	0x52
 8661 1490 02       		.uleb128 0x2
 8662 1491 74       		.byte	0x74
 8663 1492 00       		.sleb128 0
 8664 1493 35       		.uleb128 0x35
 8665 1494 01       		.uleb128 0x1
 8666 1495 53       		.byte	0x53
 8667 1496 02       		.uleb128 0x2
 8668 1497 76       		.byte	0x76
 8669 1498 00       		.sleb128 0
 8670 1499 00       		.byte	0
ARM GAS  /tmp/cc18izUm.s 			page 217


 8671 149a 00       		.byte	0
 8672 149b 2C       		.uleb128 0x2c
 8673 149c A20A0000 		.4byte	.LASF268
 8674 14a0 0E       		.byte	0xe
 8675 14a1 6D       		.byte	0x6d
 8676 14a2 84000000 		.4byte	0x84
 8677 14a6 A8160000 		.4byte	.LFB101
 8678 14aa 78000000 		.4byte	.LFE101-.LFB101
 8679 14ae 01       		.uleb128 0x1
 8680 14af 9C       		.byte	0x9c
 8681 14b0 23150000 		.4byte	0x1523
 8682 14b4 2D       		.uleb128 0x2d
 8683 14b5 E0090000 		.4byte	.LASF267
 8684 14b9 01       		.byte	0x1
 8685 14ba DC08     		.2byte	0x8dc
 8686 14bc 46000000 		.4byte	0x46
 8687 14c0 D6040000 		.4byte	.LLST59
 8688 14c4 2D       		.uleb128 0x2d
 8689 14c5 000B0000 		.4byte	.LASF262
 8690 14c9 01       		.byte	0x1
 8691 14ca DC08     		.2byte	0x8dc
 8692 14cc 46000000 		.4byte	0x46
 8693 14d0 29050000 		.4byte	.LLST60
 8694 14d4 2D       		.uleb128 0x2d
 8695 14d5 8A0F0000 		.4byte	.LASF251
 8696 14d9 01       		.byte	0x1
 8697 14da DD08     		.2byte	0x8dd
 8698 14dc 99030000 		.4byte	0x399
 8699 14e0 63050000 		.4byte	.LLST61
 8700 14e4 29       		.uleb128 0x29
 8701 14e5 746D7000 		.ascii	"tmp\000"
 8702 14e9 01       		.byte	0x1
 8703 14ea DF08     		.2byte	0x8df
 8704 14ec 03140000 		.4byte	0x1403
 8705 14f0 02       		.uleb128 0x2
 8706 14f1 91       		.byte	0x91
 8707 14f2 6C       		.sleb128 -20
 8708 14f3 34       		.uleb128 0x34
 8709 14f4 E2160000 		.4byte	.LVL382
 8710 14f8 2D2B0000 		.4byte	0x2b2d
 8711 14fc 0C150000 		.4byte	0x150c
 8712 1500 35       		.uleb128 0x35
 8713 1501 01       		.uleb128 0x1
 8714 1502 52       		.byte	0x52
 8715 1503 01       		.uleb128 0x1
 8716 1504 32       		.byte	0x32
 8717 1505 35       		.uleb128 0x35
 8718 1506 01       		.uleb128 0x1
 8719 1507 53       		.byte	0x53
 8720 1508 02       		.uleb128 0x2
 8721 1509 91       		.byte	0x91
 8722 150a 6C       		.sleb128 -20
 8723 150b 00       		.byte	0
 8724 150c 36       		.uleb128 0x36
 8725 150d F6160000 		.4byte	.LVL383
 8726 1511 2D2B0000 		.4byte	0x2b2d
 8727 1515 35       		.uleb128 0x35
ARM GAS  /tmp/cc18izUm.s 			page 218


 8728 1516 01       		.uleb128 0x1
 8729 1517 52       		.byte	0x52
 8730 1518 02       		.uleb128 0x2
 8731 1519 74       		.byte	0x74
 8732 151a 00       		.sleb128 0
 8733 151b 35       		.uleb128 0x35
 8734 151c 01       		.uleb128 0x1
 8735 151d 53       		.byte	0x53
 8736 151e 02       		.uleb128 0x2
 8737 151f 76       		.byte	0x76
 8738 1520 00       		.sleb128 0
 8739 1521 00       		.byte	0
 8740 1522 00       		.byte	0
 8741 1523 3C       		.uleb128 0x3c
 8742 1524 CC0C0000 		.4byte	.LASF269
 8743 1528 0E       		.byte	0xe
 8744 1529 76       		.byte	0x76
 8745 152a 84000000 		.4byte	0x84
 8746 152e D8180000 		.4byte	.LFB100
 8747 1532 54030000 		.4byte	.LFE100-.LFB100
 8748 1536 01       		.uleb128 0x1
 8749 1537 9C       		.byte	0x9c
 8750 1538 D2180000 		.4byte	0x18d2
 8751 153c 2D       		.uleb128 0x2d
 8752 153d 14040000 		.4byte	.LASF17
 8753 1541 01       		.byte	0x1
 8754 1542 7608     		.2byte	0x876
 8755 1544 D2180000 		.4byte	0x18d2
 8756 1548 97050000 		.4byte	.LLST72
 8757 154c 2D       		.uleb128 0x2d
 8758 154d B30D0000 		.4byte	.LASF18
 8759 1551 01       		.byte	0x1
 8760 1552 7608     		.2byte	0x876
 8761 1554 D2180000 		.4byte	0x18d2
 8762 1558 13060000 		.4byte	.LLST73
 8763 155c 3D       		.uleb128 0x3d
 8764 155d D7040000 		.4byte	.LASF270
 8765 1561 01       		.byte	0x1
 8766 1562 7908     		.2byte	0x879
 8767 1564 3A000000 		.4byte	0x3a
 8768 1568 02       		.byte	0x2
 8769 1569 2E       		.uleb128 0x2e
 8770 156a 65000000 		.4byte	.LASF271
 8771 156e 01       		.byte	0x1
 8772 156f 7A08     		.2byte	0x87a
 8773 1571 D8180000 		.4byte	0x18d8
 8774 1575 02       		.uleb128 0x2
 8775 1576 91       		.byte	0x91
 8776 1577 4C       		.sleb128 -52
 8777 1578 2E       		.uleb128 0x2e
 8778 1579 B00A0000 		.4byte	.LASF272
 8779 157d 01       		.byte	0x1
 8780 157e 7A08     		.2byte	0x87a
 8781 1580 D8180000 		.4byte	0x18d8
 8782 1584 02       		.uleb128 0x2
 8783 1585 91       		.byte	0x91
 8784 1586 40       		.sleb128 -64
ARM GAS  /tmp/cc18izUm.s 			page 219


 8785 1587 31       		.uleb128 0x31
 8786 1588 AF040000 		.4byte	.LASF273
 8787 158c 01       		.byte	0x1
 8788 158d 7B08     		.2byte	0x87b
 8789 158f 33000000 		.4byte	0x33
 8790 1593 7B060000 		.4byte	.LLST74
 8791 1597 31       		.uleb128 0x31
 8792 1598 E8040000 		.4byte	.LASF274
 8793 159c 01       		.byte	0x1
 8794 159d 7B08     		.2byte	0x87b
 8795 159f 33000000 		.4byte	0x33
 8796 15a3 8E060000 		.4byte	.LLST75
 8797 15a7 38       		.uleb128 0x38
 8798 15a8 696900   		.ascii	"ii\000"
 8799 15ab 01       		.byte	0x1
 8800 15ac 7F08     		.2byte	0x87f
 8801 15ae 84000000 		.4byte	0x84
 8802 15b2 A1060000 		.4byte	.LLST76
 8803 15b6 31       		.uleb128 0x31
 8804 15b7 CB010000 		.4byte	.LASF275
 8805 15bb 01       		.byte	0x1
 8806 15bc 8108     		.2byte	0x881
 8807 15be 84000000 		.4byte	0x84
 8808 15c2 D9060000 		.4byte	.LLST77
 8809 15c6 2E       		.uleb128 0x2e
 8810 15c7 980B0000 		.4byte	.LASF180
 8811 15cb 01       		.byte	0x1
 8812 15cc 8208     		.2byte	0x882
 8813 15ce 33000000 		.4byte	0x33
 8814 15d2 03       		.uleb128 0x3
 8815 15d3 91       		.byte	0x91
 8816 15d4 BF7F     		.sleb128 -65
 8817 15d6 31       		.uleb128 0x31
 8818 15d7 A0050000 		.4byte	.LASF183
 8819 15db 01       		.byte	0x1
 8820 15dc 8208     		.2byte	0x882
 8821 15de 33000000 		.4byte	0x33
 8822 15e2 0E070000 		.4byte	.LLST78
 8823 15e6 31       		.uleb128 0x31
 8824 15e7 1B070000 		.4byte	.LASF182
 8825 15eb 01       		.byte	0x1
 8826 15ec 8208     		.2byte	0x882
 8827 15ee 33000000 		.4byte	0x33
 8828 15f2 3D070000 		.4byte	.LLST79
 8829 15f6 2E       		.uleb128 0x2e
 8830 15f7 EB050000 		.4byte	.LASF179
 8831 15fb 01       		.byte	0x1
 8832 15fc 8308     		.2byte	0x883
 8833 15fe 46000000 		.4byte	0x46
 8834 1602 03       		.uleb128 0x3
 8835 1603 91       		.byte	0x91
 8836 1604 BC7F     		.sleb128 -68
 8837 1606 2E       		.uleb128 0x2e
 8838 1607 9E0D0000 		.4byte	.LASF181
 8839 160b 01       		.byte	0x1
 8840 160c 8308     		.2byte	0x883
 8841 160e 46000000 		.4byte	0x46
ARM GAS  /tmp/cc18izUm.s 			page 220


 8842 1612 03       		.uleb128 0x3
 8843 1613 91       		.byte	0x91
 8844 1614 BA7F     		.sleb128 -70
 8845 1616 29       		.uleb128 0x29
 8846 1617 6C706600 		.ascii	"lpf\000"
 8847 161b 01       		.byte	0x1
 8848 161c 8308     		.2byte	0x883
 8849 161e 46000000 		.4byte	0x46
 8850 1622 03       		.uleb128 0x3
 8851 1623 91       		.byte	0x91
 8852 1624 B87F     		.sleb128 -72
 8853 1626 31       		.uleb128 0x31
 8854 1627 F0020000 		.4byte	.LASF276
 8855 162b 01       		.byte	0x1
 8856 162c 8408     		.2byte	0x884
 8857 162e 33000000 		.4byte	0x33
 8858 1632 5F070000 		.4byte	.LLST80
 8859 1636 2F       		.uleb128 0x2f
 8860 1637 E8020000 		.4byte	.LASF278
 8861 163b 01       		.byte	0x1
 8862 163c B608     		.2byte	0x8b6
 8863 163e 36190000 		.4byte	.L517
 8864 1642 32       		.uleb128 0x32
 8865 1643 A8210000 		.4byte	0x21a8
 8866 1647 0E190000 		.4byte	.LBB12
 8867 164b 04000000 		.4byte	.LBE12-.LBB12
 8868 164f 01       		.byte	0x1
 8869 1650 9208     		.2byte	0x892
 8870 1652 60160000 		.4byte	0x1660
 8871 1656 33       		.uleb128 0x33
 8872 1657 B8210000 		.4byte	0x21b8
 8873 165b 94070000 		.4byte	.LLST81
 8874 165f 00       		.byte	0
 8875 1660 3E       		.uleb128 0x3e
 8876 1661 261C0000 		.4byte	0x1c26
 8877 1665 92190000 		.4byte	.LBB14
 8878 1669 18000000 		.4byte	.Ldebug_ranges0+0x18
 8879 166d 01       		.byte	0x1
 8880 166e A808     		.2byte	0x8a8
 8881 1670 10170000 		.4byte	0x1710
 8882 1674 33       		.uleb128 0x33
 8883 1675 431C0000 		.4byte	0x1c43
 8884 1679 BC070000 		.4byte	.LLST82
 8885 167d 33       		.uleb128 0x33
 8886 167e 371C0000 		.4byte	0x1c37
 8887 1682 F4070000 		.4byte	.LLST83
 8888 1686 3F       		.uleb128 0x3f
 8889 1687 18000000 		.4byte	.Ldebug_ranges0+0x18
 8890 168b 40       		.uleb128 0x40
 8891 168c 4F1C0000 		.4byte	0x1c4f
 8892 1690 2D080000 		.4byte	.LLST84
 8893 1694 40       		.uleb128 0x40
 8894 1695 5A1C0000 		.4byte	0x1c5a
 8895 1699 4C080000 		.4byte	.LLST85
 8896 169d 41       		.uleb128 0x41
 8897 169e 661C0000 		.4byte	0x1c66
 8898 16a2 03       		.uleb128 0x3
ARM GAS  /tmp/cc18izUm.s 			page 221


 8899 16a3 91       		.byte	0x91
 8900 16a4 AC7F     		.sleb128 -84
 8901 16a6 40       		.uleb128 0x40
 8902 16a7 721C0000 		.4byte	0x1c72
 8903 16ab 77080000 		.4byte	.LLST86
 8904 16af 40       		.uleb128 0x40
 8905 16b0 7E1C0000 		.4byte	0x1c7e
 8906 16b4 A4080000 		.4byte	.LLST87
 8907 16b8 42       		.uleb128 0x42
 8908 16b9 9B1C0000 		.4byte	0x1c9b
 8909 16bd 92190000 		.4byte	.LBB16
 8910 16c1 30000000 		.4byte	.Ldebug_ranges0+0x30
 8911 16c5 01       		.byte	0x1
 8912 16c6 8707     		.2byte	0x787
 8913 16c8 33       		.uleb128 0x33
 8914 16c9 AC1C0000 		.4byte	0x1cac
 8915 16cd C9080000 		.4byte	.LLST88
 8916 16d1 3F       		.uleb128 0x3f
 8917 16d2 30000000 		.4byte	.Ldebug_ranges0+0x30
 8918 16d6 41       		.uleb128 0x41
 8919 16d7 B81C0000 		.4byte	0x1cb8
 8920 16db 03       		.uleb128 0x3
 8921 16dc 91       		.byte	0x91
 8922 16dd A87F     		.sleb128 -88
 8923 16df 41       		.uleb128 0x41
 8924 16e0 C41C0000 		.4byte	0x1cc4
 8925 16e4 03       		.uleb128 0x3
 8926 16e5 91       		.byte	0x91
 8927 16e6 A47F     		.sleb128 -92
 8928 16e8 40       		.uleb128 0x40
 8929 16e9 D01C0000 		.4byte	0x1cd0
 8930 16ed 43090000 		.4byte	.LLST89
 8931 16f1 36       		.uleb128 0x36
 8932 16f2 081C0000 		.4byte	.LVL522
 8933 16f6 4E2B0000 		.4byte	0x2b4e
 8934 16fa 35       		.uleb128 0x35
 8935 16fb 01       		.uleb128 0x1
 8936 16fc 51       		.byte	0x51
 8937 16fd 01       		.uleb128 0x1
 8938 16fe 3D       		.byte	0x3d
 8939 16ff 35       		.uleb128 0x35
 8940 1700 01       		.uleb128 0x1
 8941 1701 52       		.byte	0x52
 8942 1702 01       		.uleb128 0x1
 8943 1703 34       		.byte	0x34
 8944 1704 35       		.uleb128 0x35
 8945 1705 01       		.uleb128 0x1
 8946 1706 53       		.byte	0x53
 8947 1707 03       		.uleb128 0x3
 8948 1708 91       		.byte	0x91
 8949 1709 A87F     		.sleb128 -88
 8950 170b 00       		.byte	0
 8951 170c 00       		.byte	0
 8952 170d 00       		.byte	0
 8953 170e 00       		.byte	0
 8954 170f 00       		.byte	0
 8955 1710 3E       		.uleb128 0x3e
ARM GAS  /tmp/cc18izUm.s 			page 222


 8956 1711 B51B0000 		.4byte	0x1bb5
 8957 1715 AE1A0000 		.4byte	.LBB21
 8958 1719 48000000 		.4byte	.Ldebug_ranges0+0x48
 8959 171d 01       		.byte	0x1
 8960 171e A908     		.2byte	0x8a9
 8961 1720 8D170000 		.4byte	0x178d
 8962 1724 33       		.uleb128 0x33
 8963 1725 D21B0000 		.4byte	0x1bd2
 8964 1729 8C090000 		.4byte	.LLST90
 8965 172d 33       		.uleb128 0x33
 8966 172e C61B0000 		.4byte	0x1bc6
 8967 1732 B9090000 		.4byte	.LLST91
 8968 1736 3F       		.uleb128 0x3f
 8969 1737 48000000 		.4byte	.Ldebug_ranges0+0x48
 8970 173b 40       		.uleb128 0x40
 8971 173c DE1B0000 		.4byte	0x1bde
 8972 1740 DB090000 		.4byte	.LLST92
 8973 1744 40       		.uleb128 0x40
 8974 1745 E91B0000 		.4byte	0x1be9
 8975 1749 FA090000 		.4byte	.LLST93
 8976 174d 41       		.uleb128 0x41
 8977 174e F51B0000 		.4byte	0x1bf5
 8978 1752 03       		.uleb128 0x3
 8979 1753 91       		.byte	0x91
 8980 1754 AC7F     		.sleb128 -84
 8981 1756 40       		.uleb128 0x40
 8982 1757 011C0000 		.4byte	0x1c01
 8983 175b 250A0000 		.4byte	.LLST94
 8984 175f 40       		.uleb128 0x40
 8985 1760 0D1C0000 		.4byte	0x1c0d
 8986 1764 630A0000 		.4byte	.LLST95
 8987 1768 40       		.uleb128 0x40
 8988 1769 191C0000 		.4byte	0x1c19
 8989 176d B30A0000 		.4byte	.LLST96
 8990 1771 36       		.uleb128 0x36
 8991 1772 BE1A0000 		.4byte	.LVL486
 8992 1776 4E2B0000 		.4byte	0x2b4e
 8993 177a 35       		.uleb128 0x35
 8994 177b 01       		.uleb128 0x1
 8995 177c 51       		.byte	0x51
 8996 177d 01       		.uleb128 0x1
 8997 177e 3D       		.byte	0x3d
 8998 177f 35       		.uleb128 0x35
 8999 1780 01       		.uleb128 0x1
 9000 1781 52       		.byte	0x52
 9001 1782 01       		.uleb128 0x1
 9002 1783 33       		.byte	0x33
 9003 1784 35       		.uleb128 0x35
 9004 1785 01       		.uleb128 0x1
 9005 1786 53       		.byte	0x53
 9006 1787 02       		.uleb128 0x2
 9007 1788 7A       		.byte	0x7a
 9008 1789 00       		.sleb128 0
 9009 178a 00       		.byte	0
 9010 178b 00       		.byte	0
 9011 178c 00       		.byte	0
 9012 178d 34       		.uleb128 0x34
ARM GAS  /tmp/cc18izUm.s 			page 223


 9013 178e F2180000 		.4byte	.LVL439
 9014 1792 4C240000 		.4byte	0x244c
 9015 1796 A2170000 		.4byte	0x17a2
 9016 179a 35       		.uleb128 0x35
 9017 179b 01       		.uleb128 0x1
 9018 179c 50       		.byte	0x50
 9019 179d 03       		.uleb128 0x3
 9020 179e 91       		.byte	0x91
 9021 179f BC7F     		.sleb128 -68
 9022 17a1 00       		.byte	0
 9023 17a2 34       		.uleb128 0x34
 9024 17a3 FA180000 		.4byte	.LVL440
 9025 17a7 D4230000 		.4byte	0x23d4
 9026 17ab B7170000 		.4byte	0x17b7
 9027 17af 35       		.uleb128 0x35
 9028 17b0 01       		.uleb128 0x1
 9029 17b1 50       		.byte	0x50
 9030 17b2 03       		.uleb128 0x3
 9031 17b3 91       		.byte	0x91
 9032 17b4 BF7F     		.sleb128 -65
 9033 17b6 00       		.byte	0
 9034 17b7 34       		.uleb128 0x34
 9035 17b8 00190000 		.4byte	.LVL441
 9036 17bc 5C230000 		.4byte	0x235c
 9037 17c0 CC170000 		.4byte	0x17cc
 9038 17c4 35       		.uleb128 0x35
 9039 17c5 01       		.uleb128 0x1
 9040 17c6 50       		.byte	0x50
 9041 17c7 03       		.uleb128 0x3
 9042 17c8 91       		.byte	0x91
 9043 17c9 B87F     		.sleb128 -72
 9044 17cb 00       		.byte	0
 9045 17cc 34       		.uleb128 0x34
 9046 17cd 08190000 		.4byte	.LVL442
 9047 17d1 E4220000 		.4byte	0x22e4
 9048 17d5 E1170000 		.4byte	0x17e1
 9049 17d9 35       		.uleb128 0x35
 9050 17da 01       		.uleb128 0x1
 9051 17db 50       		.byte	0x50
 9052 17dc 03       		.uleb128 0x3
 9053 17dd 91       		.byte	0x91
 9054 17de BA7F     		.sleb128 -70
 9055 17e0 00       		.byte	0
 9056 17e1 34       		.uleb128 0x34
 9057 17e2 1E190000 		.4byte	.LVL445
 9058 17e6 E8180000 		.4byte	0x18e8
 9059 17ea 00180000 		.4byte	0x1800
 9060 17ee 35       		.uleb128 0x35
 9061 17ef 01       		.uleb128 0x1
 9062 17f0 50       		.byte	0x50
 9063 17f1 02       		.uleb128 0x2
 9064 17f2 74       		.byte	0x74
 9065 17f3 00       		.sleb128 0
 9066 17f4 35       		.uleb128 0x35
 9067 17f5 01       		.uleb128 0x1
 9068 17f6 51       		.byte	0x51
 9069 17f7 02       		.uleb128 0x2
ARM GAS  /tmp/cc18izUm.s 			page 224


 9070 17f8 75       		.byte	0x75
 9071 17f9 00       		.sleb128 0
 9072 17fa 35       		.uleb128 0x35
 9073 17fb 01       		.uleb128 0x1
 9074 17fc 52       		.byte	0x52
 9075 17fd 01       		.uleb128 0x1
 9076 17fe 30       		.byte	0x30
 9077 17ff 00       		.byte	0
 9078 1800 34       		.uleb128 0x34
 9079 1801 2E190000 		.4byte	.LVL447
 9080 1805 E8180000 		.4byte	0x18e8
 9081 1809 1F180000 		.4byte	0x181f
 9082 180d 35       		.uleb128 0x35
 9083 180e 01       		.uleb128 0x1
 9084 180f 50       		.byte	0x50
 9085 1810 02       		.uleb128 0x2
 9086 1811 74       		.byte	0x74
 9087 1812 00       		.sleb128 0
 9088 1813 35       		.uleb128 0x35
 9089 1814 01       		.uleb128 0x1
 9090 1815 51       		.byte	0x51
 9091 1816 02       		.uleb128 0x2
 9092 1817 75       		.byte	0x75
 9093 1818 00       		.sleb128 0
 9094 1819 35       		.uleb128 0x35
 9095 181a 01       		.uleb128 0x1
 9096 181b 52       		.byte	0x52
 9097 181c 01       		.uleb128 0x1
 9098 181d 30       		.byte	0x30
 9099 181e 00       		.byte	0
 9100 181f 3A       		.uleb128 0x3a
 9101 1820 56190000 		.4byte	.LVL449
 9102 1824 FE230000 		.4byte	0x23fe
 9103 1828 3A       		.uleb128 0x3a
 9104 1829 5E190000 		.4byte	.LVL450
 9105 182d 86230000 		.4byte	0x2386
 9106 1831 3A       		.uleb128 0x3a
 9107 1832 66190000 		.4byte	.LVL451
 9108 1836 0E230000 		.4byte	0x230e
 9109 183a 3A       		.uleb128 0x3a
 9110 183b 6E190000 		.4byte	.LVL452
 9111 183f 6D220000 		.4byte	0x226d
 9112 1843 34       		.uleb128 0x34
 9113 1844 74190000 		.4byte	.LVL453
 9114 1848 55200000 		.4byte	0x2055
 9115 184c 5A180000 		.4byte	0x185a
 9116 1850 35       		.uleb128 0x35
 9117 1851 01       		.uleb128 0x1
 9118 1852 50       		.byte	0x50
 9119 1853 05       		.uleb128 0x5
 9120 1854 91       		.byte	0x91
 9121 1855 947F     		.sleb128 -108
 9122 1857 94       		.byte	0x94
 9123 1858 01       		.byte	0x1
 9124 1859 00       		.byte	0
 9125 185a 34       		.uleb128 0x34
 9126 185b 7A190000 		.4byte	.LVL454
ARM GAS  /tmp/cc18izUm.s 			page 225


 9127 185f 26210000 		.4byte	0x2126
 9128 1863 71180000 		.4byte	0x1871
 9129 1867 35       		.uleb128 0x35
 9130 1868 01       		.uleb128 0x1
 9131 1869 50       		.byte	0x50
 9132 186a 05       		.uleb128 0x5
 9133 186b 91       		.byte	0x91
 9134 186c 987F     		.sleb128 -104
 9135 186e 94       		.byte	0x94
 9136 186f 01       		.byte	0x1
 9137 1870 00       		.byte	0
 9138 1871 34       		.uleb128 0x34
 9139 1872 8E190000 		.4byte	.LVL458
 9140 1876 03120000 		.4byte	0x1203
 9141 187a 84180000 		.4byte	0x1884
 9142 187e 35       		.uleb128 0x35
 9143 187f 01       		.uleb128 0x1
 9144 1880 50       		.byte	0x50
 9145 1881 01       		.uleb128 0x1
 9146 1882 30       		.byte	0x30
 9147 1883 00       		.byte	0
 9148 1884 34       		.uleb128 0x34
 9149 1885 B21B0000 		.4byte	.LVL516
 9150 1889 03120000 		.4byte	0x1203
 9151 188d 97180000 		.4byte	0x1897
 9152 1891 35       		.uleb128 0x35
 9153 1892 01       		.uleb128 0x1
 9154 1893 50       		.byte	0x50
 9155 1894 01       		.uleb128 0x1
 9156 1895 31       		.byte	0x31
 9157 1896 00       		.byte	0
 9158 1897 34       		.uleb128 0x34
 9159 1898 BE1B0000 		.4byte	.LVL518
 9160 189c E8180000 		.4byte	0x18e8
 9161 18a0 B6180000 		.4byte	0x18b6
 9162 18a4 35       		.uleb128 0x35
 9163 18a5 01       		.uleb128 0x1
 9164 18a6 50       		.byte	0x50
 9165 18a7 02       		.uleb128 0x2
 9166 18a8 91       		.byte	0x91
 9167 18a9 4C       		.sleb128 -52
 9168 18aa 35       		.uleb128 0x35
 9169 18ab 01       		.uleb128 0x1
 9170 18ac 51       		.byte	0x51
 9171 18ad 02       		.uleb128 0x2
 9172 18ae 91       		.byte	0x91
 9173 18af 40       		.sleb128 -64
 9174 18b0 35       		.uleb128 0x35
 9175 18b1 01       		.uleb128 0x1
 9176 18b2 52       		.byte	0x52
 9177 18b3 01       		.uleb128 0x1
 9178 18b4 31       		.byte	0x31
 9179 18b5 00       		.byte	0
 9180 18b6 36       		.uleb128 0x36
 9181 18b7 CA1B0000 		.4byte	.LVL520
 9182 18bb E8180000 		.4byte	0x18e8
 9183 18bf 35       		.uleb128 0x35
ARM GAS  /tmp/cc18izUm.s 			page 226


 9184 18c0 01       		.uleb128 0x1
 9185 18c1 50       		.byte	0x50
 9186 18c2 02       		.uleb128 0x2
 9187 18c3 91       		.byte	0x91
 9188 18c4 4C       		.sleb128 -52
 9189 18c5 35       		.uleb128 0x35
 9190 18c6 01       		.uleb128 0x1
 9191 18c7 51       		.byte	0x51
 9192 18c8 02       		.uleb128 0x2
 9193 18c9 91       		.byte	0x91
 9194 18ca 40       		.sleb128 -64
 9195 18cb 35       		.uleb128 0x35
 9196 18cc 01       		.uleb128 0x1
 9197 18cd 52       		.byte	0x52
 9198 18ce 01       		.uleb128 0x1
 9199 18cf 31       		.byte	0x31
 9200 18d0 00       		.byte	0
 9201 18d1 00       		.byte	0
 9202 18d2 0A       		.uleb128 0xa
 9203 18d3 04       		.byte	0x4
 9204 18d4 58000000 		.4byte	0x58
 9205 18d8 0B       		.uleb128 0xb
 9206 18d9 58000000 		.4byte	0x58
 9207 18dd E8180000 		.4byte	0x18e8
 9208 18e1 0C       		.uleb128 0xc
 9209 18e2 AD000000 		.4byte	0xad
 9210 18e6 02       		.byte	0x2
 9211 18e7 00       		.byte	0
 9212 18e8 43       		.uleb128 0x43
 9213 18e9 54090000 		.4byte	.LASF337
 9214 18ed 01       		.byte	0x1
 9215 18ee EA07     		.2byte	0x7ea
 9216 18f0 84000000 		.4byte	0x84
 9217 18f4 98000000 		.4byte	.LFB99
 9218 18f8 70040000 		.4byte	.LFE99-.LFB99
 9219 18fc 01       		.uleb128 0x1
 9220 18fd 9C       		.byte	0x9c
 9221 18fe A51B0000 		.4byte	0x1ba5
 9222 1902 2D       		.uleb128 0x2d
 9223 1903 14040000 		.4byte	.LASF17
 9224 1907 01       		.byte	0x1
 9225 1908 EA07     		.2byte	0x7ea
 9226 190a D2180000 		.4byte	0x18d2
 9227 190e F50A0000 		.4byte	.LLST1
 9228 1912 2D       		.uleb128 0x2d
 9229 1913 B30D0000 		.4byte	.LASF18
 9230 1917 01       		.byte	0x1
 9231 1918 EA07     		.2byte	0x7ea
 9232 191a D2180000 		.4byte	0x18d2
 9233 191e 130B0000 		.4byte	.LLST2
 9234 1922 2D       		.uleb128 0x2d
 9235 1923 B1060000 		.4byte	.LASF279
 9236 1927 01       		.byte	0x1
 9237 1928 EA07     		.2byte	0x7ea
 9238 192a 33000000 		.4byte	0x33
 9239 192e 310B0000 		.4byte	.LLST3
 9240 1932 2E       		.uleb128 0x2e
ARM GAS  /tmp/cc18izUm.s 			page 227


 9241 1933 8A0F0000 		.4byte	.LASF251
 9242 1937 01       		.byte	0x1
 9243 1938 EC07     		.2byte	0x7ec
 9244 193a A51B0000 		.4byte	0x1ba5
 9245 193e 02       		.uleb128 0x2
 9246 193f 91       		.byte	0x91
 9247 1940 54       		.sleb128 -44
 9248 1941 31       		.uleb128 0x31
 9249 1942 0D0D0000 		.4byte	.LASF280
 9250 1946 01       		.byte	0x1
 9251 1947 ED07     		.2byte	0x7ed
 9252 1949 33000000 		.4byte	0x33
 9253 194d 520B0000 		.4byte	.LLST4
 9254 1951 38       		.uleb128 0x38
 9255 1952 696900   		.ascii	"ii\000"
 9256 1955 01       		.byte	0x1
 9257 1956 ED07     		.2byte	0x7ed
 9258 1958 33000000 		.4byte	0x33
 9259 195c 7B0B0000 		.4byte	.LLST5
 9260 1960 31       		.uleb128 0x31
 9261 1961 060A0000 		.4byte	.LASF281
 9262 1965 01       		.byte	0x1
 9263 1966 EE07     		.2byte	0x7ee
 9264 1968 46000000 		.4byte	0x46
 9265 196c B20B0000 		.4byte	.LLST6
 9266 1970 30       		.uleb128 0x30
 9267 1971 00000000 		.4byte	.Ldebug_ranges0+0
 9268 1975 B0190000 		.4byte	0x19b0
 9269 1979 31       		.uleb128 0x31
 9270 197a CC020000 		.4byte	.LASF282
 9271 197e 01       		.byte	0x1
 9272 197f 3008     		.2byte	0x830
 9273 1981 D2000000 		.4byte	0xd2
 9274 1985 D60B0000 		.4byte	.LLST7
 9275 1989 31       		.uleb128 0x31
 9276 198a 47020000 		.4byte	.LASF283
 9277 198e 01       		.byte	0x1
 9278 198f 3008     		.2byte	0x830
 9279 1991 D2000000 		.4byte	0xd2
 9280 1995 C00C0000 		.4byte	.LLST8
 9281 1999 36       		.uleb128 0x36
 9282 199a 00030000 		.4byte	.LVL41
 9283 199e 4E2B0000 		.4byte	0x2b4e
 9284 19a2 35       		.uleb128 0x35
 9285 19a3 01       		.uleb128 0x1
 9286 19a4 52       		.byte	0x52
 9287 19a5 02       		.uleb128 0x2
 9288 19a6 79       		.byte	0x79
 9289 19a7 00       		.sleb128 0
 9290 19a8 35       		.uleb128 0x35
 9291 19a9 01       		.uleb128 0x1
 9292 19aa 53       		.byte	0x53
 9293 19ab 02       		.uleb128 0x2
 9294 19ac 91       		.byte	0x91
 9295 19ad 54       		.sleb128 -44
 9296 19ae 00       		.byte	0
 9297 19af 00       		.byte	0
ARM GAS  /tmp/cc18izUm.s 			page 228


 9298 19b0 34       		.uleb128 0x34
 9299 19b1 C2000000 		.4byte	.LVL16
 9300 19b5 2D2B0000 		.4byte	0x2b2d
 9301 19b9 C9190000 		.4byte	0x19c9
 9302 19bd 35       		.uleb128 0x35
 9303 19be 01       		.uleb128 0x1
 9304 19bf 52       		.byte	0x52
 9305 19c0 01       		.uleb128 0x1
 9306 19c1 32       		.byte	0x32
 9307 19c2 35       		.uleb128 0x35
 9308 19c3 01       		.uleb128 0x1
 9309 19c4 53       		.byte	0x53
 9310 19c5 02       		.uleb128 0x2
 9311 19c6 91       		.byte	0x91
 9312 19c7 54       		.sleb128 -44
 9313 19c8 00       		.byte	0
 9314 19c9 34       		.uleb128 0x34
 9315 19ca CE000000 		.4byte	.LVL17
 9316 19ce 382B0000 		.4byte	0x2b38
 9317 19d2 DD190000 		.4byte	0x19dd
 9318 19d6 35       		.uleb128 0x35
 9319 19d7 01       		.uleb128 0x1
 9320 19d8 50       		.byte	0x50
 9321 19d9 02       		.uleb128 0x2
 9322 19da 08       		.byte	0x8
 9323 19db C8       		.byte	0xc8
 9324 19dc 00       		.byte	0
 9325 19dd 34       		.uleb128 0x34
 9326 19de E6000000 		.4byte	.LVL18
 9327 19e2 2D2B0000 		.4byte	0x2b2d
 9328 19e6 F6190000 		.4byte	0x19f6
 9329 19ea 35       		.uleb128 0x35
 9330 19eb 01       		.uleb128 0x1
 9331 19ec 52       		.byte	0x52
 9332 19ed 01       		.uleb128 0x1
 9333 19ee 31       		.byte	0x31
 9334 19ef 35       		.uleb128 0x35
 9335 19f0 01       		.uleb128 0x1
 9336 19f1 53       		.byte	0x53
 9337 19f2 02       		.uleb128 0x2
 9338 19f3 91       		.byte	0x91
 9339 19f4 54       		.sleb128 -44
 9340 19f5 00       		.byte	0
 9341 19f6 34       		.uleb128 0x34
 9342 19f7 FE000000 		.4byte	.LVL19
 9343 19fb 2D2B0000 		.4byte	0x2b2d
 9344 19ff 0F1A0000 		.4byte	0x1a0f
 9345 1a03 35       		.uleb128 0x35
 9346 1a04 01       		.uleb128 0x1
 9347 1a05 52       		.byte	0x52
 9348 1a06 01       		.uleb128 0x1
 9349 1a07 31       		.byte	0x31
 9350 1a08 35       		.uleb128 0x35
 9351 1a09 01       		.uleb128 0x1
 9352 1a0a 53       		.byte	0x53
 9353 1a0b 02       		.uleb128 0x2
 9354 1a0c 91       		.byte	0x91
ARM GAS  /tmp/cc18izUm.s 			page 229


 9355 1a0d 54       		.sleb128 -44
 9356 1a0e 00       		.byte	0
 9357 1a0f 34       		.uleb128 0x34
 9358 1a10 16010000 		.4byte	.LVL20
 9359 1a14 2D2B0000 		.4byte	0x2b2d
 9360 1a18 281A0000 		.4byte	0x1a28
 9361 1a1c 35       		.uleb128 0x35
 9362 1a1d 01       		.uleb128 0x1
 9363 1a1e 52       		.byte	0x52
 9364 1a1f 01       		.uleb128 0x1
 9365 1a20 31       		.byte	0x31
 9366 1a21 35       		.uleb128 0x35
 9367 1a22 01       		.uleb128 0x1
 9368 1a23 53       		.byte	0x53
 9369 1a24 02       		.uleb128 0x2
 9370 1a25 91       		.byte	0x91
 9371 1a26 54       		.sleb128 -44
 9372 1a27 00       		.byte	0
 9373 1a28 34       		.uleb128 0x34
 9374 1a29 2E010000 		.4byte	.LVL21
 9375 1a2d 2D2B0000 		.4byte	0x2b2d
 9376 1a31 411A0000 		.4byte	0x1a41
 9377 1a35 35       		.uleb128 0x35
 9378 1a36 01       		.uleb128 0x1
 9379 1a37 52       		.byte	0x52
 9380 1a38 01       		.uleb128 0x1
 9381 1a39 31       		.byte	0x31
 9382 1a3a 35       		.uleb128 0x35
 9383 1a3b 01       		.uleb128 0x1
 9384 1a3c 53       		.byte	0x53
 9385 1a3d 02       		.uleb128 0x2
 9386 1a3e 91       		.byte	0x91
 9387 1a3f 54       		.sleb128 -44
 9388 1a40 00       		.byte	0
 9389 1a41 34       		.uleb128 0x34
 9390 1a42 46010000 		.4byte	.LVL22
 9391 1a46 2D2B0000 		.4byte	0x2b2d
 9392 1a4a 5A1A0000 		.4byte	0x1a5a
 9393 1a4e 35       		.uleb128 0x35
 9394 1a4f 01       		.uleb128 0x1
 9395 1a50 52       		.byte	0x52
 9396 1a51 01       		.uleb128 0x1
 9397 1a52 31       		.byte	0x31
 9398 1a53 35       		.uleb128 0x35
 9399 1a54 01       		.uleb128 0x1
 9400 1a55 53       		.byte	0x53
 9401 1a56 02       		.uleb128 0x2
 9402 1a57 91       		.byte	0x91
 9403 1a58 54       		.sleb128 -44
 9404 1a59 00       		.byte	0
 9405 1a5a 34       		.uleb128 0x34
 9406 1a5b 64010000 		.4byte	.LVL23
 9407 1a5f 2D2B0000 		.4byte	0x2b2d
 9408 1a63 731A0000 		.4byte	0x1a73
 9409 1a67 35       		.uleb128 0x35
 9410 1a68 01       		.uleb128 0x1
 9411 1a69 52       		.byte	0x52
ARM GAS  /tmp/cc18izUm.s 			page 230


 9412 1a6a 01       		.uleb128 0x1
 9413 1a6b 31       		.byte	0x31
 9414 1a6c 35       		.uleb128 0x35
 9415 1a6d 01       		.uleb128 0x1
 9416 1a6e 53       		.byte	0x53
 9417 1a6f 02       		.uleb128 0x2
 9418 1a70 91       		.byte	0x91
 9419 1a71 54       		.sleb128 -44
 9420 1a72 00       		.byte	0
 9421 1a73 34       		.uleb128 0x34
 9422 1a74 70010000 		.4byte	.LVL24
 9423 1a78 382B0000 		.4byte	0x2b38
 9424 1a7c 861A0000 		.4byte	0x1a86
 9425 1a80 35       		.uleb128 0x35
 9426 1a81 01       		.uleb128 0x1
 9427 1a82 50       		.byte	0x50
 9428 1a83 01       		.uleb128 0x1
 9429 1a84 3F       		.byte	0x3f
 9430 1a85 00       		.byte	0
 9431 1a86 34       		.uleb128 0x34
 9432 1a87 8A010000 		.4byte	.LVL25
 9433 1a8b 2D2B0000 		.4byte	0x2b2d
 9434 1a8f 9F1A0000 		.4byte	0x1a9f
 9435 1a93 35       		.uleb128 0x35
 9436 1a94 01       		.uleb128 0x1
 9437 1a95 52       		.byte	0x52
 9438 1a96 01       		.uleb128 0x1
 9439 1a97 31       		.byte	0x31
 9440 1a98 35       		.uleb128 0x35
 9441 1a99 01       		.uleb128 0x1
 9442 1a9a 53       		.byte	0x53
 9443 1a9b 02       		.uleb128 0x2
 9444 1a9c 91       		.byte	0x91
 9445 1a9d 54       		.sleb128 -44
 9446 1a9e 00       		.byte	0
 9447 1a9f 34       		.uleb128 0x34
 9448 1aa0 AA010000 		.4byte	.LVL26
 9449 1aa4 2D2B0000 		.4byte	0x2b2d
 9450 1aa8 B81A0000 		.4byte	0x1ab8
 9451 1aac 35       		.uleb128 0x35
 9452 1aad 01       		.uleb128 0x1
 9453 1aae 52       		.byte	0x52
 9454 1aaf 01       		.uleb128 0x1
 9455 1ab0 31       		.byte	0x31
 9456 1ab1 35       		.uleb128 0x35
 9457 1ab2 01       		.uleb128 0x1
 9458 1ab3 53       		.byte	0x53
 9459 1ab4 02       		.uleb128 0x2
 9460 1ab5 91       		.byte	0x91
 9461 1ab6 54       		.sleb128 -44
 9462 1ab7 00       		.byte	0
 9463 1ab8 34       		.uleb128 0x34
 9464 1ab9 D0010000 		.4byte	.LVL27
 9465 1abd 2D2B0000 		.4byte	0x2b2d
 9466 1ac1 D11A0000 		.4byte	0x1ad1
 9467 1ac5 35       		.uleb128 0x35
 9468 1ac6 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 231


 9469 1ac7 52       		.byte	0x52
 9470 1ac8 01       		.uleb128 0x1
 9471 1ac9 31       		.byte	0x31
 9472 1aca 35       		.uleb128 0x35
 9473 1acb 01       		.uleb128 0x1
 9474 1acc 53       		.byte	0x53
 9475 1acd 02       		.uleb128 0x2
 9476 1ace 91       		.byte	0x91
 9477 1acf 54       		.sleb128 -44
 9478 1ad0 00       		.byte	0
 9479 1ad1 34       		.uleb128 0x34
 9480 1ad2 F4010000 		.4byte	.LVL28
 9481 1ad6 2D2B0000 		.4byte	0x2b2d
 9482 1ada EA1A0000 		.4byte	0x1aea
 9483 1ade 35       		.uleb128 0x35
 9484 1adf 01       		.uleb128 0x1
 9485 1ae0 52       		.byte	0x52
 9486 1ae1 01       		.uleb128 0x1
 9487 1ae2 31       		.byte	0x31
 9488 1ae3 35       		.uleb128 0x35
 9489 1ae4 01       		.uleb128 0x1
 9490 1ae5 53       		.byte	0x53
 9491 1ae6 02       		.uleb128 0x2
 9492 1ae7 91       		.byte	0x91
 9493 1ae8 54       		.sleb128 -44
 9494 1ae9 00       		.byte	0
 9495 1aea 34       		.uleb128 0x34
 9496 1aeb 00020000 		.4byte	.LVL29
 9497 1aef 382B0000 		.4byte	0x2b38
 9498 1af3 FE1A0000 		.4byte	0x1afe
 9499 1af7 35       		.uleb128 0x35
 9500 1af8 01       		.uleb128 0x1
 9501 1af9 50       		.byte	0x50
 9502 1afa 02       		.uleb128 0x2
 9503 1afb 08       		.byte	0x8
 9504 1afc C8       		.byte	0xc8
 9505 1afd 00       		.byte	0
 9506 1afe 34       		.uleb128 0x34
 9507 1aff 22020000 		.4byte	.LVL30
 9508 1b03 2D2B0000 		.4byte	0x2b2d
 9509 1b07 171B0000 		.4byte	0x1b17
 9510 1b0b 35       		.uleb128 0x35
 9511 1b0c 01       		.uleb128 0x1
 9512 1b0d 52       		.byte	0x52
 9513 1b0e 01       		.uleb128 0x1
 9514 1b0f 31       		.byte	0x31
 9515 1b10 35       		.uleb128 0x35
 9516 1b11 01       		.uleb128 0x1
 9517 1b12 53       		.byte	0x53
 9518 1b13 02       		.uleb128 0x2
 9519 1b14 91       		.byte	0x91
 9520 1b15 54       		.sleb128 -44
 9521 1b16 00       		.byte	0
 9522 1b17 34       		.uleb128 0x34
 9523 1b18 40020000 		.4byte	.LVL31
 9524 1b1c 2D2B0000 		.4byte	0x2b2d
 9525 1b20 301B0000 		.4byte	0x1b30
ARM GAS  /tmp/cc18izUm.s 			page 232


 9526 1b24 35       		.uleb128 0x35
 9527 1b25 01       		.uleb128 0x1
 9528 1b26 52       		.byte	0x52
 9529 1b27 01       		.uleb128 0x1
 9530 1b28 31       		.byte	0x31
 9531 1b29 35       		.uleb128 0x35
 9532 1b2a 01       		.uleb128 0x1
 9533 1b2b 53       		.byte	0x53
 9534 1b2c 02       		.uleb128 0x2
 9535 1b2d 91       		.byte	0x91
 9536 1b2e 54       		.sleb128 -44
 9537 1b2f 00       		.byte	0
 9538 1b30 34       		.uleb128 0x34
 9539 1b31 5E020000 		.4byte	.LVL32
 9540 1b35 2D2B0000 		.4byte	0x2b2d
 9541 1b39 491B0000 		.4byte	0x1b49
 9542 1b3d 35       		.uleb128 0x35
 9543 1b3e 01       		.uleb128 0x1
 9544 1b3f 52       		.byte	0x52
 9545 1b40 01       		.uleb128 0x1
 9546 1b41 31       		.byte	0x31
 9547 1b42 35       		.uleb128 0x35
 9548 1b43 01       		.uleb128 0x1
 9549 1b44 53       		.byte	0x53
 9550 1b45 02       		.uleb128 0x2
 9551 1b46 91       		.byte	0x91
 9552 1b47 54       		.sleb128 -44
 9553 1b48 00       		.byte	0
 9554 1b49 34       		.uleb128 0x34
 9555 1b4a 7C020000 		.4byte	.LVL33
 9556 1b4e 2D2B0000 		.4byte	0x2b2d
 9557 1b52 621B0000 		.4byte	0x1b62
 9558 1b56 35       		.uleb128 0x35
 9559 1b57 01       		.uleb128 0x1
 9560 1b58 52       		.byte	0x52
 9561 1b59 01       		.uleb128 0x1
 9562 1b5a 31       		.byte	0x31
 9563 1b5b 35       		.uleb128 0x35
 9564 1b5c 01       		.uleb128 0x1
 9565 1b5d 53       		.byte	0x53
 9566 1b5e 02       		.uleb128 0x2
 9567 1b5f 91       		.byte	0x91
 9568 1b60 54       		.sleb128 -44
 9569 1b61 00       		.byte	0
 9570 1b62 34       		.uleb128 0x34
 9571 1b63 88020000 		.4byte	.LVL34
 9572 1b67 382B0000 		.4byte	0x2b38
 9573 1b6b 761B0000 		.4byte	0x1b76
 9574 1b6f 35       		.uleb128 0x35
 9575 1b70 01       		.uleb128 0x1
 9576 1b71 50       		.byte	0x50
 9577 1b72 02       		.uleb128 0x2
 9578 1b73 08       		.byte	0x8
 9579 1b74 32       		.byte	0x32
 9580 1b75 00       		.byte	0
 9581 1b76 34       		.uleb128 0x34
 9582 1b77 A0020000 		.4byte	.LVL35
ARM GAS  /tmp/cc18izUm.s 			page 233


 9583 1b7b 2D2B0000 		.4byte	0x2b2d
 9584 1b7f 8F1B0000 		.4byte	0x1b8f
 9585 1b83 35       		.uleb128 0x35
 9586 1b84 01       		.uleb128 0x1
 9587 1b85 52       		.byte	0x52
 9588 1b86 01       		.uleb128 0x1
 9589 1b87 31       		.byte	0x31
 9590 1b88 35       		.uleb128 0x35
 9591 1b89 01       		.uleb128 0x1
 9592 1b8a 53       		.byte	0x53
 9593 1b8b 02       		.uleb128 0x2
 9594 1b8c 91       		.byte	0x91
 9595 1b8d 54       		.sleb128 -44
 9596 1b8e 00       		.byte	0
 9597 1b8f 36       		.uleb128 0x36
 9598 1b90 B8020000 		.4byte	.LVL36
 9599 1b94 4E2B0000 		.4byte	0x2b4e
 9600 1b98 35       		.uleb128 0x35
 9601 1b99 01       		.uleb128 0x1
 9602 1b9a 52       		.byte	0x52
 9603 1b9b 01       		.uleb128 0x1
 9604 1b9c 32       		.byte	0x32
 9605 1b9d 35       		.uleb128 0x35
 9606 1b9e 01       		.uleb128 0x1
 9607 1b9f 53       		.byte	0x53
 9608 1ba0 02       		.uleb128 0x2
 9609 1ba1 91       		.byte	0x91
 9610 1ba2 54       		.sleb128 -44
 9611 1ba3 00       		.byte	0
 9612 1ba4 00       		.byte	0
 9613 1ba5 0B       		.uleb128 0xb
 9614 1ba6 33000000 		.4byte	0x33
 9615 1baa B51B0000 		.4byte	0x1bb5
 9616 1bae 0C       		.uleb128 0xc
 9617 1baf AD000000 		.4byte	0xad
 9618 1bb3 0B       		.byte	0xb
 9619 1bb4 00       		.byte	0
 9620 1bb5 44       		.uleb128 0x44
 9621 1bb6 620C0000 		.4byte	.LASF290
 9622 1bba 01       		.byte	0x1
 9623 1bbb 9607     		.2byte	0x796
 9624 1bbd 84000000 		.4byte	0x84
 9625 1bc1 01       		.byte	0x1
 9626 1bc2 261C0000 		.4byte	0x1c26
 9627 1bc6 45       		.uleb128 0x45
 9628 1bc7 4C0F0000 		.4byte	.LASF284
 9629 1bcb 01       		.byte	0x1
 9630 1bcc 9607     		.2byte	0x796
 9631 1bce D2180000 		.4byte	0x18d2
 9632 1bd2 45       		.uleb128 0x45
 9633 1bd3 590F0000 		.4byte	.LASF285
 9634 1bd7 01       		.byte	0x1
 9635 1bd8 9607     		.2byte	0x796
 9636 1bda D2180000 		.4byte	0x18d2
 9637 1bde 46       		.uleb128 0x46
 9638 1bdf 6A6A00   		.ascii	"jj\000"
 9639 1be2 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 234


 9640 1be3 9807     		.2byte	0x798
 9641 1be5 84000000 		.4byte	0x84
 9642 1be9 39       		.uleb128 0x39
 9643 1bea CB010000 		.4byte	.LASF275
 9644 1bee 01       		.byte	0x1
 9645 1bef 9807     		.2byte	0x798
 9646 1bf1 84000000 		.4byte	0x84
 9647 1bf5 46       		.uleb128 0x46
 9648 1bf6 746D7000 		.ascii	"tmp\000"
 9649 1bfa 01       		.byte	0x1
 9650 1bfb 9907     		.2byte	0x799
 9651 1bfd A9060000 		.4byte	0x6a9
 9652 1c01 39       		.uleb128 0x39
 9653 1c02 3D0C0000 		.4byte	.LASF287
 9654 1c06 01       		.byte	0x1
 9655 1c07 9A07     		.2byte	0x79a
 9656 1c09 25000000 		.4byte	0x25
 9657 1c0d 39       		.uleb128 0x39
 9658 1c0e 940A0000 		.4byte	.LASF288
 9659 1c12 01       		.byte	0x1
 9660 1c13 9A07     		.2byte	0x79a
 9661 1c15 25000000 		.4byte	0x25
 9662 1c19 39       		.uleb128 0x39
 9663 1c1a 8B080000 		.4byte	.LASF289
 9664 1c1e 01       		.byte	0x1
 9665 1c1f 9A07     		.2byte	0x79a
 9666 1c21 25000000 		.4byte	0x25
 9667 1c25 00       		.byte	0
 9668 1c26 44       		.uleb128 0x44
 9669 1c27 13050000 		.4byte	.LASF291
 9670 1c2b 01       		.byte	0x1
 9671 1c2c 8207     		.2byte	0x782
 9672 1c2e 84000000 		.4byte	0x84
 9673 1c32 01       		.byte	0x1
 9674 1c33 8B1C0000 		.4byte	0x1c8b
 9675 1c37 45       		.uleb128 0x45
 9676 1c38 4C0F0000 		.4byte	.LASF284
 9677 1c3c 01       		.byte	0x1
 9678 1c3d 8207     		.2byte	0x782
 9679 1c3f D2180000 		.4byte	0x18d2
 9680 1c43 45       		.uleb128 0x45
 9681 1c44 590F0000 		.4byte	.LASF285
 9682 1c48 01       		.byte	0x1
 9683 1c49 8207     		.2byte	0x782
 9684 1c4b D2180000 		.4byte	0x18d2
 9685 1c4f 46       		.uleb128 0x46
 9686 1c50 6A6A00   		.ascii	"jj\000"
 9687 1c53 01       		.byte	0x1
 9688 1c54 8407     		.2byte	0x784
 9689 1c56 84000000 		.4byte	0x84
 9690 1c5a 39       		.uleb128 0x39
 9691 1c5b CB010000 		.4byte	.LASF275
 9692 1c5f 01       		.byte	0x1
 9693 1c60 8407     		.2byte	0x784
 9694 1c62 84000000 		.4byte	0x84
 9695 1c66 39       		.uleb128 0x39
 9696 1c67 3D0C0000 		.4byte	.LASF287
ARM GAS  /tmp/cc18izUm.s 			page 235


 9697 1c6b 01       		.byte	0x1
 9698 1c6c 8507     		.2byte	0x785
 9699 1c6e 8B1C0000 		.4byte	0x1c8b
 9700 1c72 39       		.uleb128 0x39
 9701 1c73 940A0000 		.4byte	.LASF288
 9702 1c77 01       		.byte	0x1
 9703 1c78 8507     		.2byte	0x785
 9704 1c7a 25000000 		.4byte	0x25
 9705 1c7e 39       		.uleb128 0x39
 9706 1c7f 8B080000 		.4byte	.LASF289
 9707 1c83 01       		.byte	0x1
 9708 1c84 8507     		.2byte	0x785
 9709 1c86 25000000 		.4byte	0x25
 9710 1c8a 00       		.byte	0
 9711 1c8b 0B       		.uleb128 0xb
 9712 1c8c 25000000 		.4byte	0x25
 9713 1c90 9B1C0000 		.4byte	0x1c9b
 9714 1c94 0C       		.uleb128 0xc
 9715 1c95 AD000000 		.4byte	0xad
 9716 1c99 02       		.byte	0x2
 9717 1c9a 00       		.byte	0
 9718 1c9b 44       		.uleb128 0x44
 9719 1c9c BC0E0000 		.4byte	.LASF292
 9720 1ca0 01       		.byte	0x1
 9721 1ca1 6907     		.2byte	0x769
 9722 1ca3 84000000 		.4byte	0x84
 9723 1ca7 01       		.byte	0x1
 9724 1ca8 DC1C0000 		.4byte	0x1cdc
 9725 1cac 45       		.uleb128 0x45
 9726 1cad 3D0C0000 		.4byte	.LASF287
 9727 1cb1 01       		.byte	0x1
 9728 1cb2 6907     		.2byte	0x769
 9729 1cb4 DC1C0000 		.4byte	0x1cdc
 9730 1cb8 46       		.uleb128 0x46
 9731 1cb9 746D7000 		.ascii	"tmp\000"
 9732 1cbd 01       		.byte	0x1
 9733 1cbe 6B07     		.2byte	0x76b
 9734 1cc0 9C010000 		.4byte	0x19c
 9735 1cc4 39       		.uleb128 0x39
 9736 1cc5 53060000 		.4byte	.LASF293
 9737 1cc9 01       		.byte	0x1
 9738 1cca 6B07     		.2byte	0x76b
 9739 1ccc A9060000 		.4byte	0x6a9
 9740 1cd0 46       		.uleb128 0x46
 9741 1cd1 696900   		.ascii	"ii\000"
 9742 1cd4 01       		.byte	0x1
 9743 1cd5 6B07     		.2byte	0x76b
 9744 1cd7 33000000 		.4byte	0x33
 9745 1cdb 00       		.byte	0
 9746 1cdc 0A       		.uleb128 0xa
 9747 1cdd 04       		.byte	0x4
 9748 1cde 25000000 		.4byte	0x25
 9749 1ce2 2C       		.uleb128 0x2c
 9750 1ce3 F10D0000 		.4byte	.LASF294
 9751 1ce7 0E       		.byte	0xe
 9752 1ce8 40       		.byte	0x40
 9753 1ce9 84000000 		.4byte	0x84
ARM GAS  /tmp/cc18izUm.s 			page 236


 9754 1ced 00120000 		.4byte	.LFB95
 9755 1cf1 74000000 		.4byte	.LFE95-.LFB95
 9756 1cf5 01       		.uleb128 0x1
 9757 1cf6 9C       		.byte	0x9c
 9758 1cf7 301D0000 		.4byte	0x1d30
 9759 1cfb 2D       		.uleb128 0x2d
 9760 1cfc C9070000 		.4byte	.LASF260
 9761 1d00 01       		.byte	0x1
 9762 1d01 5407     		.2byte	0x754
 9763 1d03 33000000 		.4byte	0x33
 9764 1d07 AA0D0000 		.4byte	.LLST54
 9765 1d0b 29       		.uleb128 0x29
 9766 1d0c 746D7000 		.ascii	"tmp\000"
 9767 1d10 01       		.byte	0x1
 9768 1d11 5607     		.2byte	0x756
 9769 1d13 33000000 		.4byte	0x33
 9770 1d17 02       		.uleb128 0x2
 9771 1d18 91       		.byte	0x91
 9772 1d19 77       		.sleb128 -9
 9773 1d1a 36       		.uleb128 0x36
 9774 1d1b 52120000 		.4byte	.LVL309
 9775 1d1f 2D2B0000 		.4byte	0x2b2d
 9776 1d23 35       		.uleb128 0x35
 9777 1d24 01       		.uleb128 0x1
 9778 1d25 52       		.byte	0x52
 9779 1d26 01       		.uleb128 0x1
 9780 1d27 31       		.byte	0x31
 9781 1d28 35       		.uleb128 0x35
 9782 1d29 01       		.uleb128 0x1
 9783 1d2a 53       		.byte	0x53
 9784 1d2b 02       		.uleb128 0x2
 9785 1d2c 91       		.byte	0x91
 9786 1d2d 77       		.sleb128 -9
 9787 1d2e 00       		.byte	0
 9788 1d2f 00       		.byte	0
 9789 1d30 2C       		.uleb128 0x2c
 9790 1d31 710C0000 		.4byte	.LASF295
 9791 1d35 0E       		.byte	0xe
 9792 1d36 3F       		.byte	0x3f
 9793 1d37 84000000 		.4byte	0x84
 9794 1d3b F0110000 		.4byte	.LFB94
 9795 1d3f 10000000 		.4byte	.LFE94-.LFB94
 9796 1d43 01       		.uleb128 0x1
 9797 1d44 9C       		.byte	0x9c
 9798 1d45 5A1D0000 		.4byte	0x1d5a
 9799 1d49 2D       		.uleb128 0x2d
 9800 1d4a 520B0000 		.4byte	.LASF296
 9801 1d4e 01       		.byte	0x1
 9802 1d4f 4807     		.2byte	0x748
 9803 1d51 33000000 		.4byte	0x33
 9804 1d55 E40D0000 		.4byte	.LLST53
 9805 1d59 00       		.byte	0
 9806 1d5a 2C       		.uleb128 0x2c
 9807 1d5b ED080000 		.4byte	.LASF297
 9808 1d5f 0E       		.byte	0xe
 9809 1d60 39       		.byte	0x39
 9810 1d61 84000000 		.4byte	0x84
ARM GAS  /tmp/cc18izUm.s 			page 237


 9811 1d65 94100000 		.4byte	.LFB93
 9812 1d69 5C010000 		.4byte	.LFE93-.LFB93
 9813 1d6d 01       		.uleb128 0x1
 9814 1d6e 9C       		.byte	0x9c
 9815 1d6f 4B1E0000 		.4byte	0x1e4b
 9816 1d73 2D       		.uleb128 0x2d
 9817 1d74 00040000 		.4byte	.LASF298
 9818 1d78 01       		.byte	0x1
 9819 1d79 1607     		.2byte	0x716
 9820 1d7b 33000000 		.4byte	0x33
 9821 1d7f 060E0000 		.4byte	.LLST52
 9822 1d83 29       		.uleb128 0x29
 9823 1d84 746D7000 		.ascii	"tmp\000"
 9824 1d88 01       		.byte	0x1
 9825 1d89 1807     		.2byte	0x718
 9826 1d8b 33000000 		.4byte	0x33
 9827 1d8f 02       		.uleb128 0x2
 9828 1d90 91       		.byte	0x91
 9829 1d91 77       		.sleb128 -9
 9830 1d92 34       		.uleb128 0x34
 9831 1d93 BC100000 		.4byte	.LVL293
 9832 1d97 4E2B0000 		.4byte	0x2b4e
 9833 1d9b AB1D0000 		.4byte	0x1dab
 9834 1d9f 35       		.uleb128 0x35
 9835 1da0 01       		.uleb128 0x1
 9836 1da1 52       		.byte	0x52
 9837 1da2 01       		.uleb128 0x1
 9838 1da3 31       		.byte	0x31
 9839 1da4 35       		.uleb128 0x35
 9840 1da5 01       		.uleb128 0x1
 9841 1da6 53       		.byte	0x53
 9842 1da7 02       		.uleb128 0x2
 9843 1da8 91       		.byte	0x91
 9844 1da9 77       		.sleb128 -9
 9845 1daa 00       		.byte	0
 9846 1dab 34       		.uleb128 0x34
 9847 1dac E0100000 		.4byte	.LVL294
 9848 1db0 2D2B0000 		.4byte	0x2b2d
 9849 1db4 C41D0000 		.4byte	0x1dc4
 9850 1db8 35       		.uleb128 0x35
 9851 1db9 01       		.uleb128 0x1
 9852 1dba 52       		.byte	0x52
 9853 1dbb 01       		.uleb128 0x1
 9854 1dbc 31       		.byte	0x31
 9855 1dbd 35       		.uleb128 0x35
 9856 1dbe 01       		.uleb128 0x1
 9857 1dbf 53       		.byte	0x53
 9858 1dc0 02       		.uleb128 0x2
 9859 1dc1 91       		.byte	0x91
 9860 1dc2 77       		.sleb128 -9
 9861 1dc3 00       		.byte	0
 9862 1dc4 34       		.uleb128 0x34
 9863 1dc5 EA100000 		.4byte	.LVL295
 9864 1dc9 382B0000 		.4byte	0x2b38
 9865 1dcd D71D0000 		.4byte	0x1dd7
 9866 1dd1 35       		.uleb128 0x35
 9867 1dd2 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 238


 9868 1dd3 50       		.byte	0x50
 9869 1dd4 01       		.uleb128 0x1
 9870 1dd5 33       		.byte	0x33
 9871 1dd6 00       		.byte	0
 9872 1dd7 34       		.uleb128 0x34
 9873 1dd8 26110000 		.4byte	.LVL296
 9874 1ddc 2D2B0000 		.4byte	0x2b2d
 9875 1de0 F01D0000 		.4byte	0x1df0
 9876 1de4 35       		.uleb128 0x35
 9877 1de5 01       		.uleb128 0x1
 9878 1de6 52       		.byte	0x52
 9879 1de7 01       		.uleb128 0x1
 9880 1de8 31       		.byte	0x31
 9881 1de9 35       		.uleb128 0x35
 9882 1dea 01       		.uleb128 0x1
 9883 1deb 53       		.byte	0x53
 9884 1dec 02       		.uleb128 0x2
 9885 1ded 91       		.byte	0x91
 9886 1dee 77       		.sleb128 -9
 9887 1def 00       		.byte	0
 9888 1df0 34       		.uleb128 0x34
 9889 1df1 44110000 		.4byte	.LVL299
 9890 1df5 4E2B0000 		.4byte	0x2b4e
 9891 1df9 091E0000 		.4byte	0x1e09
 9892 1dfd 35       		.uleb128 0x35
 9893 1dfe 01       		.uleb128 0x1
 9894 1dff 52       		.byte	0x52
 9895 1e00 01       		.uleb128 0x1
 9896 1e01 31       		.byte	0x31
 9897 1e02 35       		.uleb128 0x35
 9898 1e03 01       		.uleb128 0x1
 9899 1e04 53       		.byte	0x53
 9900 1e05 02       		.uleb128 0x2
 9901 1e06 91       		.byte	0x91
 9902 1e07 77       		.sleb128 -9
 9903 1e08 00       		.byte	0
 9904 1e09 34       		.uleb128 0x34
 9905 1e0a 76110000 		.4byte	.LVL300
 9906 1e0e 2D2B0000 		.4byte	0x2b2d
 9907 1e12 221E0000 		.4byte	0x1e22
 9908 1e16 35       		.uleb128 0x35
 9909 1e17 01       		.uleb128 0x1
 9910 1e18 52       		.byte	0x52
 9911 1e19 01       		.uleb128 0x1
 9912 1e1a 31       		.byte	0x31
 9913 1e1b 35       		.uleb128 0x35
 9914 1e1c 01       		.uleb128 0x1
 9915 1e1d 53       		.byte	0x53
 9916 1e1e 02       		.uleb128 0x2
 9917 1e1f 91       		.byte	0x91
 9918 1e20 77       		.sleb128 -9
 9919 1e21 00       		.byte	0
 9920 1e22 34       		.uleb128 0x34
 9921 1e23 7E110000 		.4byte	.LVL301
 9922 1e27 382B0000 		.4byte	0x2b38
 9923 1e2b 351E0000 		.4byte	0x1e35
 9924 1e2f 35       		.uleb128 0x35
ARM GAS  /tmp/cc18izUm.s 			page 239


 9925 1e30 01       		.uleb128 0x1
 9926 1e31 50       		.byte	0x50
 9927 1e32 01       		.uleb128 0x1
 9928 1e33 33       		.byte	0x33
 9929 1e34 00       		.byte	0
 9930 1e35 36       		.uleb128 0x36
 9931 1e36 B4110000 		.4byte	.LVL302
 9932 1e3a 2D2B0000 		.4byte	0x2b2d
 9933 1e3e 35       		.uleb128 0x35
 9934 1e3f 01       		.uleb128 0x1
 9935 1e40 52       		.byte	0x52
 9936 1e41 01       		.uleb128 0x1
 9937 1e42 31       		.byte	0x31
 9938 1e43 35       		.uleb128 0x35
 9939 1e44 01       		.uleb128 0x1
 9940 1e45 53       		.byte	0x53
 9941 1e46 02       		.uleb128 0x2
 9942 1e47 91       		.byte	0x91
 9943 1e48 77       		.sleb128 -9
 9944 1e49 00       		.byte	0
 9945 1e4a 00       		.byte	0
 9946 1e4b 2C       		.uleb128 0x2c
 9947 1e4c D8080000 		.4byte	.LASF299
 9948 1e50 0E       		.byte	0xe
 9949 1e51 69       		.byte	0x69
 9950 1e52 84000000 		.4byte	0x84
 9951 1e56 D40F0000 		.4byte	.LFB92
 9952 1e5a C0000000 		.4byte	.LFE92-.LFB92
 9953 1e5e 01       		.uleb128 0x1
 9954 1e5f 9C       		.byte	0x9c
 9955 1e60 091F0000 		.4byte	0x1f09
 9956 1e64 2D       		.uleb128 0x2d
 9957 1e65 000B0000 		.4byte	.LASF262
 9958 1e69 01       		.byte	0x1
 9959 1e6a F006     		.2byte	0x6f0
 9960 1e6c 46000000 		.4byte	0x46
 9961 1e70 590E0000 		.4byte	.LLST48
 9962 1e74 2D       		.uleb128 0x2d
 9963 1e75 8A0F0000 		.4byte	.LASF251
 9964 1e79 01       		.byte	0x1
 9965 1e7a F006     		.2byte	0x6f0
 9966 1e7c 99030000 		.4byte	0x399
 9967 1e80 AC0E0000 		.4byte	.LLST49
 9968 1e84 2D       		.uleb128 0x2d
 9969 1e85 AA040000 		.4byte	.LASF300
 9970 1e89 01       		.byte	0x1
 9971 1e8a F106     		.2byte	0x6f1
 9972 1e8c 99030000 		.4byte	0x399
 9973 1e90 F90E0000 		.4byte	.LLST50
 9974 1e94 29       		.uleb128 0x29
 9975 1e95 746D7000 		.ascii	"tmp\000"
 9976 1e99 01       		.byte	0x1
 9977 1e9a F306     		.2byte	0x6f3
 9978 1e9c 03140000 		.4byte	0x1403
 9979 1ea0 02       		.uleb128 0x2
 9980 1ea1 91       		.byte	0x91
 9981 1ea2 64       		.sleb128 -28
ARM GAS  /tmp/cc18izUm.s 			page 240


 9982 1ea3 31       		.uleb128 0x31
 9983 1ea4 060A0000 		.4byte	.LASF281
 9984 1ea8 01       		.byte	0x1
 9985 1ea9 F406     		.2byte	0x6f4
 9986 1eab 46000000 		.4byte	0x46
 9987 1eaf 460F0000 		.4byte	.LLST51
 9988 1eb3 34       		.uleb128 0x34
 9989 1eb4 02100000 		.4byte	.LVL277
 9990 1eb8 4E2B0000 		.4byte	0x2b4e
 9991 1ebc CC1E0000 		.4byte	0x1ecc
 9992 1ec0 35       		.uleb128 0x35
 9993 1ec1 01       		.uleb128 0x1
 9994 1ec2 52       		.byte	0x52
 9995 1ec3 01       		.uleb128 0x1
 9996 1ec4 32       		.byte	0x32
 9997 1ec5 35       		.uleb128 0x35
 9998 1ec6 01       		.uleb128 0x1
 9999 1ec7 53       		.byte	0x53
 10000 1ec8 02       		.uleb128 0x2
 10001 1ec9 91       		.byte	0x91
 10002 1eca 64       		.sleb128 -28
 10003 1ecb 00       		.byte	0
 10004 1ecc 34       		.uleb128 0x34
 10005 1ecd 32100000 		.4byte	.LVL279
 10006 1ed1 4E2B0000 		.4byte	0x2b4e
 10007 1ed5 E51E0000 		.4byte	0x1ee5
 10008 1ed9 35       		.uleb128 0x35
 10009 1eda 01       		.uleb128 0x1
 10010 1edb 52       		.byte	0x52
 10011 1edc 01       		.uleb128 0x1
 10012 1edd 31       		.byte	0x31
 10013 1ede 35       		.uleb128 0x35
 10014 1edf 01       		.uleb128 0x1
 10015 1ee0 53       		.byte	0x53
 10016 1ee1 02       		.uleb128 0x2
 10017 1ee2 91       		.byte	0x91
 10018 1ee3 64       		.sleb128 -28
 10019 1ee4 00       		.byte	0
 10020 1ee5 34       		.uleb128 0x34
 10021 1ee6 50100000 		.4byte	.LVL280
 10022 1eea 4E2B0000 		.4byte	0x2b4e
 10023 1eee FF1E0000 		.4byte	0x1eff
 10024 1ef2 35       		.uleb128 0x35
 10025 1ef3 01       		.uleb128 0x1
 10026 1ef4 52       		.byte	0x52
 10027 1ef5 02       		.uleb128 0x2
 10028 1ef6 75       		.byte	0x75
 10029 1ef7 00       		.sleb128 0
 10030 1ef8 35       		.uleb128 0x35
 10031 1ef9 01       		.uleb128 0x1
 10032 1efa 53       		.byte	0x53
 10033 1efb 02       		.uleb128 0x2
 10034 1efc 77       		.byte	0x77
 10035 1efd 00       		.sleb128 0
 10036 1efe 00       		.byte	0
 10037 1eff 3A       		.uleb128 0x3a
 10038 1f00 6C100000 		.4byte	.LVL284
ARM GAS  /tmp/cc18izUm.s 			page 241


 10039 1f04 76240000 		.4byte	0x2476
 10040 1f08 00       		.byte	0
 10041 1f09 2C       		.uleb128 0x2c
 10042 1f0a 56020000 		.4byte	.LASF301
 10043 1f0e 0E       		.byte	0xe
 10044 1f0f 67       		.byte	0x67
 10045 1f10 84000000 		.4byte	0x84
 10046 1f14 E00D0000 		.4byte	.LFB91
 10047 1f18 F4010000 		.4byte	.LFE91-.LFB91
 10048 1f1c 01       		.uleb128 0x1
 10049 1f1d 9C       		.byte	0x9c
 10050 1f1e 07200000 		.4byte	0x2007
 10051 1f22 2D       		.uleb128 0x2d
 10052 1f23 14040000 		.4byte	.LASF17
 10053 1f27 01       		.byte	0x1
 10054 1f28 9F06     		.2byte	0x69f
 10055 1f2a D3110000 		.4byte	0x11d3
 10056 1f2e 6F0F0000 		.4byte	.LLST40
 10057 1f32 2D       		.uleb128 0x2d
 10058 1f33 B30D0000 		.4byte	.LASF18
 10059 1f37 01       		.byte	0x1
 10060 1f38 9F06     		.2byte	0x69f
 10061 1f3a D3110000 		.4byte	0x11d3
 10062 1f3e E30F0000 		.4byte	.LLST41
 10063 1f42 2D       		.uleb128 0x2d
 10064 1f43 47030000 		.4byte	.LASF256
 10065 1f47 01       		.byte	0x1
 10066 1f48 9F06     		.2byte	0x69f
 10067 1f4a 450F0000 		.4byte	0xf45
 10068 1f4e 17100000 		.4byte	.LLST42
 10069 1f52 2D       		.uleb128 0x2d
 10070 1f53 1E080000 		.4byte	.LASF186
 10071 1f57 01       		.byte	0x1
 10072 1f58 A006     		.2byte	0x6a0
 10073 1f5a 99030000 		.4byte	0x399
 10074 1f5e 38100000 		.4byte	.LLST43
 10075 1f62 2D       		.uleb128 0x2d
 10076 1f63 AA040000 		.4byte	.LASF300
 10077 1f67 01       		.byte	0x1
 10078 1f68 A006     		.2byte	0x6a0
 10079 1f6a 99030000 		.4byte	0x399
 10080 1f6e 6C100000 		.4byte	.LLST44
 10081 1f72 2E       		.uleb128 0x2e
 10082 1f73 8A0F0000 		.4byte	.LASF251
 10083 1f77 01       		.byte	0x1
 10084 1f78 A306     		.2byte	0x6a3
 10085 1f7a A51B0000 		.4byte	0x1ba5
 10086 1f7e 02       		.uleb128 0x2
 10087 1f7f 91       		.byte	0x91
 10088 1f80 54       		.sleb128 -44
 10089 1f81 31       		.uleb128 0x31
 10090 1f82 340B0000 		.4byte	.LASF302
 10091 1f86 01       		.byte	0x1
 10092 1f87 A406     		.2byte	0x6a4
 10093 1f89 33000000 		.4byte	0x33
 10094 1f8d 8C100000 		.4byte	.LLST45
 10095 1f91 31       		.uleb128 0x31
ARM GAS  /tmp/cc18izUm.s 			page 242


 10096 1f92 060A0000 		.4byte	.LASF281
 10097 1f96 01       		.byte	0x1
 10098 1f97 A506     		.2byte	0x6a5
 10099 1f99 46000000 		.4byte	0x46
 10100 1f9d 23120000 		.4byte	.LLST46
 10101 1fa1 31       		.uleb128 0x31
 10102 1fa2 400D0000 		.4byte	.LASF303
 10103 1fa6 01       		.byte	0x1
 10104 1fa7 A506     		.2byte	0x6a5
 10105 1fa9 46000000 		.4byte	0x46
 10106 1fad 57120000 		.4byte	.LLST47
 10107 1fb1 34       		.uleb128 0x34
 10108 1fb2 460E0000 		.4byte	.LVL245
 10109 1fb6 4E2B0000 		.4byte	0x2b4e
 10110 1fba CA1F0000 		.4byte	0x1fca
 10111 1fbe 35       		.uleb128 0x35
 10112 1fbf 01       		.uleb128 0x1
 10113 1fc0 52       		.byte	0x52
 10114 1fc1 01       		.uleb128 0x1
 10115 1fc2 32       		.byte	0x32
 10116 1fc3 35       		.uleb128 0x35
 10117 1fc4 01       		.uleb128 0x1
 10118 1fc5 53       		.byte	0x53
 10119 1fc6 02       		.uleb128 0x2
 10120 1fc7 91       		.byte	0x91
 10121 1fc8 54       		.sleb128 -44
 10122 1fc9 00       		.byte	0
 10123 1fca 34       		.uleb128 0x34
 10124 1fcb 7E0E0000 		.4byte	.LVL247
 10125 1fcf 4E2B0000 		.4byte	0x2b4e
 10126 1fd3 E31F0000 		.4byte	0x1fe3
 10127 1fd7 35       		.uleb128 0x35
 10128 1fd8 01       		.uleb128 0x1
 10129 1fd9 52       		.byte	0x52
 10130 1fda 01       		.uleb128 0x1
 10131 1fdb 31       		.byte	0x31
 10132 1fdc 35       		.uleb128 0x35
 10133 1fdd 01       		.uleb128 0x1
 10134 1fde 53       		.byte	0x53
 10135 1fdf 02       		.uleb128 0x2
 10136 1fe0 91       		.byte	0x91
 10137 1fe1 54       		.sleb128 -44
 10138 1fe2 00       		.byte	0
 10139 1fe3 34       		.uleb128 0x34
 10140 1fe4 A00E0000 		.4byte	.LVL248
 10141 1fe8 4E2B0000 		.4byte	0x2b4e
 10142 1fec FD1F0000 		.4byte	0x1ffd
 10143 1ff0 35       		.uleb128 0x35
 10144 1ff1 01       		.uleb128 0x1
 10145 1ff2 52       		.byte	0x52
 10146 1ff3 02       		.uleb128 0x2
 10147 1ff4 78       		.byte	0x78
 10148 1ff5 00       		.sleb128 0
 10149 1ff6 35       		.uleb128 0x35
 10150 1ff7 01       		.uleb128 0x1
 10151 1ff8 53       		.byte	0x53
 10152 1ff9 02       		.uleb128 0x2
ARM GAS  /tmp/cc18izUm.s 			page 243


 10153 1ffa 91       		.byte	0x91
 10154 1ffb 54       		.sleb128 -44
 10155 1ffc 00       		.byte	0
 10156 1ffd 3A       		.uleb128 0x3a
 10157 1ffe 860F0000 		.4byte	.LVL257
 10158 2002 76240000 		.4byte	0x2476
 10159 2006 00       		.byte	0
 10160 2007 2C       		.uleb128 0x2c
 10161 2008 42000000 		.4byte	.LASF304
 10162 200c 0E       		.byte	0xe
 10163 200d 66       		.byte	0x66
 10164 200e 84000000 		.4byte	0x84
 10165 2012 9C0D0000 		.4byte	.LFB90
 10166 2016 44000000 		.4byte	.LFE90-.LFB90
 10167 201a 01       		.uleb128 0x1
 10168 201b 9C       		.byte	0x9c
 10169 201c 55200000 		.4byte	0x2055
 10170 2020 2D       		.uleb128 0x2d
 10171 2021 87050000 		.4byte	.LASF305
 10172 2025 01       		.byte	0x1
 10173 2026 8206     		.2byte	0x682
 10174 2028 D3110000 		.4byte	0x11d3
 10175 202c B0120000 		.4byte	.LLST39
 10176 2030 29       		.uleb128 0x29
 10177 2031 746D7000 		.ascii	"tmp\000"
 10178 2035 01       		.byte	0x1
 10179 2036 8406     		.2byte	0x684
 10180 2038 03140000 		.4byte	0x1403
 10181 203c 02       		.uleb128 0x2
 10182 203d 91       		.byte	0x91
 10183 203e 74       		.sleb128 -12
 10184 203f 36       		.uleb128 0x36
 10185 2040 BA0D0000 		.4byte	.LVL230
 10186 2044 4E2B0000 		.4byte	0x2b4e
 10187 2048 35       		.uleb128 0x35
 10188 2049 01       		.uleb128 0x1
 10189 204a 52       		.byte	0x52
 10190 204b 01       		.uleb128 0x1
 10191 204c 32       		.byte	0x32
 10192 204d 35       		.uleb128 0x35
 10193 204e 01       		.uleb128 0x1
 10194 204f 53       		.byte	0x53
 10195 2050 02       		.uleb128 0x2
 10196 2051 91       		.byte	0x91
 10197 2052 74       		.sleb128 -12
 10198 2053 00       		.byte	0
 10199 2054 00       		.byte	0
 10200 2055 2C       		.uleb128 0x2c
 10201 2056 BC020000 		.4byte	.LASF306
 10202 205a 0E       		.byte	0xe
 10203 205b 5C       		.byte	0x5c
 10204 205c 84000000 		.4byte	0x84
 10205 2060 EC130000 		.4byte	.LFB89
 10206 2064 04010000 		.4byte	.LFE89-.LFB89
 10207 2068 01       		.uleb128 0x1
 10208 2069 9C       		.byte	0x9c
 10209 206a FC200000 		.4byte	0x20fc
ARM GAS  /tmp/cc18izUm.s 			page 244


 10210 206e 2D       		.uleb128 0x2d
 10211 206f 1E080000 		.4byte	.LASF186
 10212 2073 01       		.byte	0x1
 10213 2074 3506     		.2byte	0x635
 10214 2076 33000000 		.4byte	0x33
 10215 207a F2120000 		.4byte	.LLST57
 10216 207e 2E       		.uleb128 0x2e
 10217 207f 8A0F0000 		.4byte	.LASF251
 10218 2083 01       		.byte	0x1
 10219 2084 3706     		.2byte	0x637
 10220 2086 33000000 		.4byte	0x33
 10221 208a 02       		.uleb128 0x2
 10222 208b 91       		.byte	0x91
 10223 208c 77       		.sleb128 -9
 10224 208d 34       		.uleb128 0x34
 10225 208e 12140000 		.4byte	.LVL344
 10226 2092 2D2B0000 		.4byte	0x2b2d
 10227 2096 A6200000 		.4byte	0x20a6
 10228 209a 35       		.uleb128 0x35
 10229 209b 01       		.uleb128 0x1
 10230 209c 52       		.byte	0x52
 10231 209d 01       		.uleb128 0x1
 10232 209e 31       		.byte	0x31
 10233 209f 35       		.uleb128 0x35
 10234 20a0 01       		.uleb128 0x1
 10235 20a1 53       		.byte	0x53
 10236 20a2 02       		.uleb128 0x2
 10237 20a3 91       		.byte	0x91
 10238 20a4 77       		.sleb128 -9
 10239 20a5 00       		.byte	0
 10240 20a6 34       		.uleb128 0x34
 10241 20a7 78140000 		.4byte	.LVL345
 10242 20ab 2D2B0000 		.4byte	0x2b2d
 10243 20af BF200000 		.4byte	0x20bf
 10244 20b3 35       		.uleb128 0x35
 10245 20b4 01       		.uleb128 0x1
 10246 20b5 52       		.byte	0x52
 10247 20b6 01       		.uleb128 0x1
 10248 20b7 31       		.byte	0x31
 10249 20b8 35       		.uleb128 0x35
 10250 20b9 01       		.uleb128 0x1
 10251 20ba 53       		.byte	0x53
 10252 20bb 02       		.uleb128 0x2
 10253 20bc 91       		.byte	0x91
 10254 20bd 77       		.sleb128 -9
 10255 20be 00       		.byte	0
 10256 20bf 34       		.uleb128 0x34
 10257 20c0 86140000 		.4byte	.LVL346
 10258 20c4 E21C0000 		.4byte	0x1ce2
 10259 20c8 D2200000 		.4byte	0x20d2
 10260 20cc 35       		.uleb128 0x35
 10261 20cd 01       		.uleb128 0x1
 10262 20ce 50       		.byte	0x50
 10263 20cf 01       		.uleb128 0x1
 10264 20d0 30       		.byte	0x30
 10265 20d1 00       		.byte	0
 10266 20d2 34       		.uleb128 0x34
ARM GAS  /tmp/cc18izUm.s 			page 245


 10267 20d3 94140000 		.4byte	.LVL347
 10268 20d7 382B0000 		.4byte	0x2b38
 10269 20db E6200000 		.4byte	0x20e6
 10270 20df 35       		.uleb128 0x35
 10271 20e0 01       		.uleb128 0x1
 10272 20e1 50       		.byte	0x50
 10273 20e2 02       		.uleb128 0x2
 10274 20e3 08       		.byte	0x8
 10275 20e4 32       		.byte	0x32
 10276 20e5 00       		.byte	0
 10277 20e6 36       		.uleb128 0x36
 10278 20e7 BC140000 		.4byte	.LVL350
 10279 20eb 2D2B0000 		.4byte	0x2b2d
 10280 20ef 35       		.uleb128 0x35
 10281 20f0 01       		.uleb128 0x1
 10282 20f1 52       		.byte	0x52
 10283 20f2 01       		.uleb128 0x1
 10284 20f3 31       		.byte	0x31
 10285 20f4 35       		.uleb128 0x35
 10286 20f5 01       		.uleb128 0x1
 10287 20f6 53       		.byte	0x53
 10288 20f7 02       		.uleb128 0x2
 10289 20f8 91       		.byte	0x91
 10290 20f9 77       		.sleb128 -9
 10291 20fa 00       		.byte	0
 10292 20fb 00       		.byte	0
 10293 20fc 2C       		.uleb128 0x2c
 10294 20fd E20A0000 		.4byte	.LASF307
 10295 2101 0E       		.byte	0xe
 10296 2102 5B       		.byte	0x5b
 10297 2103 84000000 		.4byte	0x84
 10298 2107 840D0000 		.4byte	.LFB88
 10299 210b 18000000 		.4byte	.LFE88-.LFB88
 10300 210f 01       		.uleb128 0x1
 10301 2110 9C       		.byte	0x9c
 10302 2111 26210000 		.4byte	0x2126
 10303 2115 2D       		.uleb128 0x2d
 10304 2116 310F0000 		.4byte	.LASF308
 10305 211a 01       		.byte	0x1
 10306 211b 2206     		.2byte	0x622
 10307 211d 99030000 		.4byte	0x399
 10308 2121 2C130000 		.4byte	.LLST38
 10309 2125 00       		.byte	0
 10310 2126 2C       		.uleb128 0x2c
 10311 2127 BE0F0000 		.4byte	.LASF309
 10312 212b 0E       		.byte	0xe
 10313 212c 59       		.byte	0x59
 10314 212d 84000000 		.4byte	0x84
 10315 2131 240D0000 		.4byte	.LFB87
 10316 2135 60000000 		.4byte	.LFE87-.LFB87
 10317 2139 01       		.uleb128 0x1
 10318 213a 9C       		.byte	0x9c
 10319 213b A8210000 		.4byte	0x21a8
 10320 213f 2D       		.uleb128 0x2d
 10321 2140 1E080000 		.4byte	.LASF186
 10322 2144 01       		.byte	0x1
 10323 2145 F805     		.2byte	0x5f8
ARM GAS  /tmp/cc18izUm.s 			page 246


 10324 2147 33000000 		.4byte	0x33
 10325 214b 58130000 		.4byte	.LLST35
 10326 214f 31       		.uleb128 0x31
 10327 2150 470F0000 		.4byte	.LASF310
 10328 2154 01       		.byte	0x1
 10329 2155 FA05     		.2byte	0x5fa
 10330 2157 33000000 		.4byte	0x33
 10331 215b CE130000 		.4byte	.LLST36
 10332 215f 31       		.uleb128 0x31
 10333 2160 CB010000 		.4byte	.LASF275
 10334 2164 01       		.byte	0x1
 10335 2165 FB05     		.2byte	0x5fb
 10336 2167 84000000 		.4byte	0x84
 10337 216b EC130000 		.4byte	.LLST37
 10338 216f 34       		.uleb128 0x34
 10339 2170 520D0000 		.4byte	.LVL216
 10340 2174 A82A0000 		.4byte	0x2aa8
 10341 2178 82210000 		.4byte	0x2182
 10342 217c 35       		.uleb128 0x35
 10343 217d 01       		.uleb128 0x1
 10344 217e 50       		.byte	0x50
 10345 217f 01       		.uleb128 0x1
 10346 2180 31       		.byte	0x31
 10347 2181 00       		.byte	0
 10348 2182 3A       		.uleb128 0x3a
 10349 2183 580D0000 		.4byte	.LVL217
 10350 2187 A82A0000 		.4byte	0x2aa8
 10351 218b 34       		.uleb128 0x34
 10352 218c 6C0D0000 		.4byte	.LVL222
 10353 2190 A82A0000 		.4byte	0x2aa8
 10354 2194 9E210000 		.4byte	0x219e
 10355 2198 35       		.uleb128 0x35
 10356 2199 01       		.uleb128 0x1
 10357 219a 50       		.byte	0x50
 10358 219b 01       		.uleb128 0x1
 10359 219c 31       		.byte	0x31
 10360 219d 00       		.byte	0
 10361 219e 3A       		.uleb128 0x3a
 10362 219f 700D0000 		.4byte	.LVL223
 10363 21a3 76240000 		.4byte	0x2476
 10364 21a7 00       		.byte	0
 10365 21a8 47       		.uleb128 0x47
 10366 21a9 00000000 		.4byte	.LASF348
 10367 21ad 0E       		.byte	0xe
 10368 21ae 58       		.byte	0x58
 10369 21af 84000000 		.4byte	0x84
 10370 21b3 01       		.byte	0x1
 10371 21b4 C5210000 		.4byte	0x21c5
 10372 21b8 45       		.uleb128 0x45
 10373 21b9 1E080000 		.4byte	.LASF186
 10374 21bd 01       		.byte	0x1
 10375 21be E905     		.2byte	0x5e9
 10376 21c0 99030000 		.4byte	0x399
 10377 21c4 00       		.byte	0
 10378 21c5 2C       		.uleb128 0x2c
 10379 21c6 1A0D0000 		.4byte	.LASF311
 10380 21ca 0E       		.byte	0xe
ARM GAS  /tmp/cc18izUm.s 			page 247


 10381 21cb 51       		.byte	0x51
 10382 21cc 84000000 		.4byte	0x84
 10383 21d0 C80C0000 		.4byte	.LFB85
 10384 21d4 4C000000 		.4byte	.LFE85-.LFB85
 10385 21d8 01       		.uleb128 0x1
 10386 21d9 9C       		.byte	0x9c
 10387 21da EF210000 		.4byte	0x21ef
 10388 21de 2D       		.uleb128 0x2d
 10389 21df A6070000 		.4byte	.LASF312
 10390 21e3 01       		.byte	0x1
 10391 21e4 C905     		.2byte	0x5c9
 10392 21e6 95110000 		.4byte	0x1195
 10393 21ea 2E140000 		.4byte	.LLST33
 10394 21ee 00       		.byte	0
 10395 21ef 2C       		.uleb128 0x2c
 10396 21f0 D00A0000 		.4byte	.LASF313
 10397 21f4 0E       		.byte	0xe
 10398 21f5 50       		.byte	0x50
 10399 21f6 84000000 		.4byte	0x84
 10400 21fa 7C0C0000 		.4byte	.LFB84
 10401 21fe 4C000000 		.4byte	.LFE84-.LFB84
 10402 2202 01       		.uleb128 0x1
 10403 2203 9C       		.byte	0x9c
 10404 2204 19220000 		.4byte	0x2219
 10405 2208 2D       		.uleb128 0x2d
 10406 2209 A6070000 		.4byte	.LASF312
 10407 220d 01       		.byte	0x1
 10408 220e AF05     		.2byte	0x5af
 10409 2210 DC1C0000 		.4byte	0x1cdc
 10410 2214 81140000 		.4byte	.LLST32
 10411 2218 00       		.byte	0
 10412 2219 2C       		.uleb128 0x2c
 10413 221a 9B030000 		.4byte	.LASF314
 10414 221e 0E       		.byte	0xe
 10415 221f 56       		.byte	0x56
 10416 2220 84000000 		.4byte	0x84
 10417 2224 760C0000 		.4byte	.LFB83
 10418 2228 06000000 		.4byte	.LFE83-.LFB83
 10419 222c 01       		.uleb128 0x1
 10420 222d 9C       		.byte	0x9c
 10421 222e 43220000 		.4byte	0x2243
 10422 2232 2D       		.uleb128 0x2d
 10423 2233 9B050000 		.4byte	.LASF315
 10424 2237 01       		.byte	0x1
 10425 2238 9905     		.2byte	0x599
 10426 223a 46000000 		.4byte	0x46
 10427 223e 06150000 		.4byte	.LLST31
 10428 2242 00       		.byte	0
 10429 2243 2C       		.uleb128 0x2c
 10430 2244 D1030000 		.4byte	.LASF316
 10431 2248 0E       		.byte	0xe
 10432 2249 55       		.byte	0x55
 10433 224a 84000000 		.4byte	0x84
 10434 224e 6C0C0000 		.4byte	.LFB82
 10435 2252 0A000000 		.4byte	.LFE82-.LFB82
 10436 2256 01       		.uleb128 0x1
 10437 2257 9C       		.byte	0x9c
ARM GAS  /tmp/cc18izUm.s 			page 248


 10438 2258 6D220000 		.4byte	0x226d
 10439 225c 2D       		.uleb128 0x2d
 10440 225d 9B050000 		.4byte	.LASF315
 10441 2261 01       		.byte	0x1
 10442 2262 8305     		.2byte	0x583
 10443 2264 95110000 		.4byte	0x1195
 10444 2268 27150000 		.4byte	.LLST30
 10445 226c 00       		.byte	0
 10446 226d 2C       		.uleb128 0x2c
 10447 226e FD0E0000 		.4byte	.LASF317
 10448 2272 0E       		.byte	0xe
 10449 2273 54       		.byte	0x54
 10450 2274 84000000 		.4byte	0x84
 10451 2278 50130000 		.4byte	.LFB81
 10452 227c 9C000000 		.4byte	.LFE81-.LFB81
 10453 2280 01       		.uleb128 0x1
 10454 2281 9C       		.byte	0x9c
 10455 2282 E4220000 		.4byte	0x22e4
 10456 2286 2D       		.uleb128 0x2d
 10457 2287 9B050000 		.4byte	.LASF315
 10458 228b 01       		.byte	0x1
 10459 228c 5405     		.2byte	0x554
 10460 228e 46000000 		.4byte	0x46
 10461 2292 48150000 		.4byte	.LLST56
 10462 2296 2E       		.uleb128 0x2e
 10463 2297 8A0F0000 		.4byte	.LASF251
 10464 229b 01       		.byte	0x1
 10465 229c 5605     		.2byte	0x556
 10466 229e 33000000 		.4byte	0x33
 10467 22a2 02       		.uleb128 0x2
 10468 22a3 91       		.byte	0x91
 10469 22a4 77       		.sleb128 -9
 10470 22a5 34       		.uleb128 0x34
 10471 22a6 7C130000 		.4byte	.LVL329
 10472 22aa AF270000 		.4byte	0x27af
 10473 22ae B8220000 		.4byte	0x22b8
 10474 22b2 35       		.uleb128 0x35
 10475 22b3 01       		.uleb128 0x1
 10476 22b4 50       		.byte	0x50
 10477 22b5 01       		.uleb128 0x1
 10478 22b6 30       		.byte	0x30
 10479 22b7 00       		.byte	0
 10480 22b8 34       		.uleb128 0x34
 10481 22b9 AC130000 		.4byte	.LVL332
 10482 22bd 2D2B0000 		.4byte	0x2b2d
 10483 22c1 D1220000 		.4byte	0x22d1
 10484 22c5 35       		.uleb128 0x35
 10485 22c6 01       		.uleb128 0x1
 10486 22c7 52       		.byte	0x52
 10487 22c8 01       		.uleb128 0x1
 10488 22c9 31       		.byte	0x31
 10489 22ca 35       		.uleb128 0x35
 10490 22cb 01       		.uleb128 0x1
 10491 22cc 53       		.byte	0x53
 10492 22cd 02       		.uleb128 0x2
 10493 22ce 91       		.byte	0x91
 10494 22cf 77       		.sleb128 -9
ARM GAS  /tmp/cc18izUm.s 			page 249


 10495 22d0 00       		.byte	0
 10496 22d1 3A       		.uleb128 0x3a
 10497 22d2 C6130000 		.4byte	.LVL333
 10498 22d6 0E230000 		.4byte	0x230e
 10499 22da 3A       		.uleb128 0x3a
 10500 22db D2130000 		.4byte	.LVL336
 10501 22df AF270000 		.4byte	0x27af
 10502 22e3 00       		.byte	0
 10503 22e4 2C       		.uleb128 0x2c
 10504 22e5 AB000000 		.4byte	.LASF318
 10505 22e9 0E       		.byte	0xe
 10506 22ea 53       		.byte	0x53
 10507 22eb 84000000 		.4byte	0x84
 10508 22ef 500C0000 		.4byte	.LFB80
 10509 22f3 1C000000 		.4byte	.LFE80-.LFB80
 10510 22f7 01       		.uleb128 0x1
 10511 22f8 9C       		.byte	0x9c
 10512 22f9 0E230000 		.4byte	0x230e
 10513 22fd 2D       		.uleb128 0x2d
 10514 22fe 9B050000 		.4byte	.LASF315
 10515 2302 01       		.byte	0x1
 10516 2303 4505     		.2byte	0x545
 10517 2305 95110000 		.4byte	0x1195
 10518 2309 D3150000 		.4byte	.LLST29
 10519 230d 00       		.byte	0
 10520 230e 2C       		.uleb128 0x2c
 10521 230f 61080000 		.4byte	.LASF319
 10522 2313 0E       		.byte	0xe
 10523 2314 46       		.byte	0x46
 10524 2315 84000000 		.4byte	0x84
 10525 2319 C40B0000 		.4byte	.LFB79
 10526 231d 8C000000 		.4byte	.LFE79-.LFB79
 10527 2321 01       		.uleb128 0x1
 10528 2322 9C       		.byte	0x9c
 10529 2323 5C230000 		.4byte	0x235c
 10530 2327 3B       		.uleb128 0x3b
 10531 2328 6C706600 		.ascii	"lpf\000"
 10532 232c 01       		.byte	0x1
 10533 232d 2405     		.2byte	0x524
 10534 232f 46000000 		.4byte	0x46
 10535 2333 0D160000 		.4byte	.LLST28
 10536 2337 2E       		.uleb128 0x2e
 10537 2338 8A0F0000 		.4byte	.LASF251
 10538 233c 01       		.byte	0x1
 10539 233d 2605     		.2byte	0x526
 10540 233f 33000000 		.4byte	0x33
 10541 2343 02       		.uleb128 0x2
 10542 2344 91       		.byte	0x91
 10543 2345 77       		.sleb128 -9
 10544 2346 36       		.uleb128 0x36
 10545 2347 FA0B0000 		.4byte	.LVL180
 10546 234b 2D2B0000 		.4byte	0x2b2d
 10547 234f 35       		.uleb128 0x35
 10548 2350 01       		.uleb128 0x1
 10549 2351 52       		.byte	0x52
 10550 2352 01       		.uleb128 0x1
 10551 2353 31       		.byte	0x31
ARM GAS  /tmp/cc18izUm.s 			page 250


 10552 2354 35       		.uleb128 0x35
 10553 2355 01       		.uleb128 0x1
 10554 2356 53       		.byte	0x53
 10555 2357 02       		.uleb128 0x2
 10556 2358 91       		.byte	0x91
 10557 2359 77       		.sleb128 -9
 10558 235a 00       		.byte	0
 10559 235b 00       		.byte	0
 10560 235c 2C       		.uleb128 0x2c
 10561 235d D4090000 		.4byte	.LASF320
 10562 2361 0E       		.byte	0xe
 10563 2362 45       		.byte	0x45
 10564 2363 84000000 		.4byte	0x84
 10565 2367 800B0000 		.4byte	.LFB78
 10566 236b 44000000 		.4byte	.LFE78-.LFB78
 10567 236f 01       		.uleb128 0x1
 10568 2370 9C       		.byte	0x9c
 10569 2371 86230000 		.4byte	0x2386
 10570 2375 3B       		.uleb128 0x3b
 10571 2376 6C706600 		.ascii	"lpf\000"
 10572 237a 01       		.byte	0x1
 10573 237b 0005     		.2byte	0x500
 10574 237d 95110000 		.4byte	0x1195
 10575 2381 60160000 		.4byte	.LLST27
 10576 2385 00       		.byte	0
 10577 2386 2C       		.uleb128 0x2c
 10578 2387 0B0C0000 		.4byte	.LASF321
 10579 238b 0E       		.byte	0xe
 10580 238c 4C       		.byte	0x4c
 10581 238d 84000000 		.4byte	0x84
 10582 2391 EC0A0000 		.4byte	.LFB77
 10583 2395 94000000 		.4byte	.LFE77-.LFB77
 10584 2399 01       		.uleb128 0x1
 10585 239a 9C       		.byte	0x9c
 10586 239b D4230000 		.4byte	0x23d4
 10587 239f 3B       		.uleb128 0x3b
 10588 23a0 66737200 		.ascii	"fsr\000"
 10589 23a4 01       		.byte	0x1
 10590 23a5 DB04     		.2byte	0x4db
 10591 23a7 33000000 		.4byte	0x33
 10592 23ab 8C160000 		.4byte	.LLST26
 10593 23af 2E       		.uleb128 0x2e
 10594 23b0 8A0F0000 		.4byte	.LASF251
 10595 23b4 01       		.byte	0x1
 10596 23b5 DD04     		.2byte	0x4dd
 10597 23b7 33000000 		.4byte	0x33
 10598 23bb 02       		.uleb128 0x2
 10599 23bc 91       		.byte	0x91
 10600 23bd 77       		.sleb128 -9
 10601 23be 36       		.uleb128 0x36
 10602 23bf 3A0B0000 		.4byte	.LVL172
 10603 23c3 2D2B0000 		.4byte	0x2b2d
 10604 23c7 35       		.uleb128 0x35
 10605 23c8 01       		.uleb128 0x1
 10606 23c9 52       		.byte	0x52
 10607 23ca 01       		.uleb128 0x1
 10608 23cb 31       		.byte	0x31
ARM GAS  /tmp/cc18izUm.s 			page 251


 10609 23cc 35       		.uleb128 0x35
 10610 23cd 01       		.uleb128 0x1
 10611 23ce 53       		.byte	0x53
 10612 23cf 02       		.uleb128 0x2
 10613 23d0 91       		.byte	0x91
 10614 23d1 77       		.sleb128 -9
 10615 23d2 00       		.byte	0
 10616 23d3 00       		.byte	0
 10617 23d4 2C       		.uleb128 0x2c
 10618 23d5 EA060000 		.4byte	.LASF322
 10619 23d9 0E       		.byte	0xe
 10620 23da 4B       		.byte	0x4b
 10621 23db 84000000 		.4byte	0x84
 10622 23df A80A0000 		.4byte	.LFB76
 10623 23e3 44000000 		.4byte	.LFE76-.LFB76
 10624 23e7 01       		.uleb128 0x1
 10625 23e8 9C       		.byte	0x9c
 10626 23e9 FE230000 		.4byte	0x23fe
 10627 23ed 3B       		.uleb128 0x3b
 10628 23ee 66737200 		.ascii	"fsr\000"
 10629 23f2 01       		.byte	0x1
 10630 23f3 BF04     		.2byte	0x4bf
 10631 23f5 99030000 		.4byte	0x399
 10632 23f9 C6160000 		.4byte	.LLST25
 10633 23fd 00       		.byte	0
 10634 23fe 2C       		.uleb128 0x2c
 10635 23ff F0010000 		.4byte	.LASF323
 10636 2403 0E       		.byte	0xe
 10637 2404 49       		.byte	0x49
 10638 2405 84000000 		.4byte	0x84
 10639 2409 180A0000 		.4byte	.LFB75
 10640 240d 90000000 		.4byte	.LFE75-.LFB75
 10641 2411 01       		.uleb128 0x1
 10642 2412 9C       		.byte	0x9c
 10643 2413 4C240000 		.4byte	0x244c
 10644 2417 3B       		.uleb128 0x3b
 10645 2418 66737200 		.ascii	"fsr\000"
 10646 241c 01       		.byte	0x1
 10647 241d 9A04     		.2byte	0x49a
 10648 241f 46000000 		.4byte	0x46
 10649 2423 19170000 		.4byte	.LLST24
 10650 2427 2E       		.uleb128 0x2e
 10651 2428 8A0F0000 		.4byte	.LASF251
 10652 242c 01       		.byte	0x1
 10653 242d 9C04     		.2byte	0x49c
 10654 242f 33000000 		.4byte	0x33
 10655 2433 02       		.uleb128 0x2
 10656 2434 91       		.byte	0x91
 10657 2435 77       		.sleb128 -9
 10658 2436 36       		.uleb128 0x36
 10659 2437 6C0A0000 		.4byte	.LVL157
 10660 243b 2D2B0000 		.4byte	0x2b2d
 10661 243f 35       		.uleb128 0x35
 10662 2440 01       		.uleb128 0x1
 10663 2441 52       		.byte	0x52
 10664 2442 01       		.uleb128 0x1
 10665 2443 31       		.byte	0x31
ARM GAS  /tmp/cc18izUm.s 			page 252


 10666 2444 35       		.uleb128 0x35
 10667 2445 01       		.uleb128 0x1
 10668 2446 53       		.byte	0x53
 10669 2447 02       		.uleb128 0x2
 10670 2448 91       		.byte	0x91
 10671 2449 77       		.sleb128 -9
 10672 244a 00       		.byte	0
 10673 244b 00       		.byte	0
 10674 244c 2C       		.uleb128 0x2c
 10675 244d AB0E0000 		.4byte	.LASF324
 10676 2451 0E       		.byte	0xe
 10677 2452 48       		.byte	0x48
 10678 2453 84000000 		.4byte	0x84
 10679 2457 DC090000 		.4byte	.LFB74
 10680 245b 3C000000 		.4byte	.LFE74-.LFB74
 10681 245f 01       		.uleb128 0x1
 10682 2460 9C       		.byte	0x9c
 10683 2461 76240000 		.4byte	0x2476
 10684 2465 3B       		.uleb128 0x3b
 10685 2466 66737200 		.ascii	"fsr\000"
 10686 246a 01       		.byte	0x1
 10687 246b 7F04     		.2byte	0x47f
 10688 246d 95110000 		.4byte	0x1195
 10689 2471 85170000 		.4byte	.LLST23
 10690 2475 00       		.byte	0
 10691 2476 2C       		.uleb128 0x2c
 10692 2477 6D090000 		.4byte	.LASF325
 10693 247b 0E       		.byte	0xe
 10694 247c 6B       		.byte	0x6b
 10695 247d 84000000 		.4byte	0x84
 10696 2481 F8070000 		.4byte	.LFB73
 10697 2485 E4010000 		.4byte	.LFE73-.LFB73
 10698 2489 01       		.uleb128 0x1
 10699 248a 9C       		.byte	0x9c
 10700 248b B1250000 		.4byte	0x25b1
 10701 248f 2E       		.uleb128 0x2e
 10702 2490 8A0F0000 		.4byte	.LASF251
 10703 2494 01       		.byte	0x1
 10704 2495 4304     		.2byte	0x443
 10705 2497 33000000 		.4byte	0x33
 10706 249b 02       		.uleb128 0x2
 10707 249c 91       		.byte	0x91
 10708 249d 77       		.sleb128 -9
 10709 249e 34       		.uleb128 0x34
 10710 249f 1E080000 		.4byte	.LVL141
 10711 24a3 2D2B0000 		.4byte	0x2b2d
 10712 24a7 B7240000 		.4byte	0x24b7
 10713 24ab 35       		.uleb128 0x35
 10714 24ac 01       		.uleb128 0x1
 10715 24ad 52       		.byte	0x52
 10716 24ae 01       		.uleb128 0x1
 10717 24af 31       		.byte	0x31
 10718 24b0 35       		.uleb128 0x35
 10719 24b1 01       		.uleb128 0x1
 10720 24b2 53       		.byte	0x53
 10721 24b3 02       		.uleb128 0x2
 10722 24b4 91       		.byte	0x91
ARM GAS  /tmp/cc18izUm.s 			page 253


 10723 24b5 77       		.sleb128 -9
 10724 24b6 00       		.byte	0
 10725 24b7 34       		.uleb128 0x34
 10726 24b8 38080000 		.4byte	.LVL142
 10727 24bc 2D2B0000 		.4byte	0x2b2d
 10728 24c0 D0240000 		.4byte	0x24d0
 10729 24c4 35       		.uleb128 0x35
 10730 24c5 01       		.uleb128 0x1
 10731 24c6 52       		.byte	0x52
 10732 24c7 01       		.uleb128 0x1
 10733 24c8 31       		.byte	0x31
 10734 24c9 35       		.uleb128 0x35
 10735 24ca 01       		.uleb128 0x1
 10736 24cb 53       		.byte	0x53
 10737 24cc 02       		.uleb128 0x2
 10738 24cd 91       		.byte	0x91
 10739 24ce 77       		.sleb128 -9
 10740 24cf 00       		.byte	0
 10741 24d0 34       		.uleb128 0x34
 10742 24d1 52080000 		.4byte	.LVL143
 10743 24d5 2D2B0000 		.4byte	0x2b2d
 10744 24d9 E9240000 		.4byte	0x24e9
 10745 24dd 35       		.uleb128 0x35
 10746 24de 01       		.uleb128 0x1
 10747 24df 52       		.byte	0x52
 10748 24e0 01       		.uleb128 0x1
 10749 24e1 31       		.byte	0x31
 10750 24e2 35       		.uleb128 0x35
 10751 24e3 01       		.uleb128 0x1
 10752 24e4 53       		.byte	0x53
 10753 24e5 02       		.uleb128 0x2
 10754 24e6 91       		.byte	0x91
 10755 24e7 77       		.sleb128 -9
 10756 24e8 00       		.byte	0
 10757 24e9 34       		.uleb128 0x34
 10758 24ea 7A080000 		.4byte	.LVL144
 10759 24ee 2D2B0000 		.4byte	0x2b2d
 10760 24f2 02250000 		.4byte	0x2502
 10761 24f6 35       		.uleb128 0x35
 10762 24f7 01       		.uleb128 0x1
 10763 24f8 52       		.byte	0x52
 10764 24f9 01       		.uleb128 0x1
 10765 24fa 31       		.byte	0x31
 10766 24fb 35       		.uleb128 0x35
 10767 24fc 01       		.uleb128 0x1
 10768 24fd 53       		.byte	0x53
 10769 24fe 02       		.uleb128 0x2
 10770 24ff 91       		.byte	0x91
 10771 2500 77       		.sleb128 -9
 10772 2501 00       		.byte	0
 10773 2502 34       		.uleb128 0x34
 10774 2503 AA080000 		.4byte	.LVL145
 10775 2507 2D2B0000 		.4byte	0x2b2d
 10776 250b 1B250000 		.4byte	0x251b
 10777 250f 35       		.uleb128 0x35
 10778 2510 01       		.uleb128 0x1
 10779 2511 52       		.byte	0x52
ARM GAS  /tmp/cc18izUm.s 			page 254


 10780 2512 01       		.uleb128 0x1
 10781 2513 31       		.byte	0x31
 10782 2514 35       		.uleb128 0x35
 10783 2515 01       		.uleb128 0x1
 10784 2516 53       		.byte	0x53
 10785 2517 02       		.uleb128 0x2
 10786 2518 91       		.byte	0x91
 10787 2519 77       		.sleb128 -9
 10788 251a 00       		.byte	0
 10789 251b 34       		.uleb128 0x34
 10790 251c D0080000 		.4byte	.LVL146
 10791 2520 2D2B0000 		.4byte	0x2b2d
 10792 2524 34250000 		.4byte	0x2534
 10793 2528 35       		.uleb128 0x35
 10794 2529 01       		.uleb128 0x1
 10795 252a 52       		.byte	0x52
 10796 252b 01       		.uleb128 0x1
 10797 252c 31       		.byte	0x31
 10798 252d 35       		.uleb128 0x35
 10799 252e 01       		.uleb128 0x1
 10800 252f 53       		.byte	0x53
 10801 2530 02       		.uleb128 0x2
 10802 2531 91       		.byte	0x91
 10803 2532 77       		.sleb128 -9
 10804 2533 00       		.byte	0
 10805 2534 34       		.uleb128 0x34
 10806 2535 EC080000 		.4byte	.LVL147
 10807 2539 2D2B0000 		.4byte	0x2b2d
 10808 253d 4D250000 		.4byte	0x254d
 10809 2541 35       		.uleb128 0x35
 10810 2542 01       		.uleb128 0x1
 10811 2543 52       		.byte	0x52
 10812 2544 01       		.uleb128 0x1
 10813 2545 31       		.byte	0x31
 10814 2546 35       		.uleb128 0x35
 10815 2547 01       		.uleb128 0x1
 10816 2548 53       		.byte	0x53
 10817 2549 02       		.uleb128 0x2
 10818 254a 91       		.byte	0x91
 10819 254b 77       		.sleb128 -9
 10820 254c 00       		.byte	0
 10821 254d 34       		.uleb128 0x34
 10822 254e 1A090000 		.4byte	.LVL148
 10823 2552 2D2B0000 		.4byte	0x2b2d
 10824 2556 66250000 		.4byte	0x2566
 10825 255a 35       		.uleb128 0x35
 10826 255b 01       		.uleb128 0x1
 10827 255c 52       		.byte	0x52
 10828 255d 01       		.uleb128 0x1
 10829 255e 31       		.byte	0x31
 10830 255f 35       		.uleb128 0x35
 10831 2560 01       		.uleb128 0x1
 10832 2561 53       		.byte	0x53
 10833 2562 02       		.uleb128 0x2
 10834 2563 91       		.byte	0x91
 10835 2564 77       		.sleb128 -9
 10836 2565 00       		.byte	0
ARM GAS  /tmp/cc18izUm.s 			page 255


 10837 2566 34       		.uleb128 0x34
 10838 2567 48090000 		.4byte	.LVL149
 10839 256b 2D2B0000 		.4byte	0x2b2d
 10840 256f 7F250000 		.4byte	0x257f
 10841 2573 35       		.uleb128 0x35
 10842 2574 01       		.uleb128 0x1
 10843 2575 52       		.byte	0x52
 10844 2576 01       		.uleb128 0x1
 10845 2577 31       		.byte	0x31
 10846 2578 35       		.uleb128 0x35
 10847 2579 01       		.uleb128 0x1
 10848 257a 53       		.byte	0x53
 10849 257b 02       		.uleb128 0x2
 10850 257c 91       		.byte	0x91
 10851 257d 77       		.sleb128 -9
 10852 257e 00       		.byte	0
 10853 257f 34       		.uleb128 0x34
 10854 2580 6C090000 		.4byte	.LVL150
 10855 2584 2D2B0000 		.4byte	0x2b2d
 10856 2588 98250000 		.4byte	0x2598
 10857 258c 35       		.uleb128 0x35
 10858 258d 01       		.uleb128 0x1
 10859 258e 52       		.byte	0x52
 10860 258f 01       		.uleb128 0x1
 10861 2590 31       		.byte	0x31
 10862 2591 35       		.uleb128 0x35
 10863 2592 01       		.uleb128 0x1
 10864 2593 53       		.byte	0x53
 10865 2594 02       		.uleb128 0x2
 10866 2595 91       		.byte	0x91
 10867 2596 77       		.sleb128 -9
 10868 2597 00       		.byte	0
 10869 2598 36       		.uleb128 0x36
 10870 2599 80090000 		.4byte	.LVL151
 10871 259d 2D2B0000 		.4byte	0x2b2d
 10872 25a1 35       		.uleb128 0x35
 10873 25a2 01       		.uleb128 0x1
 10874 25a3 52       		.byte	0x52
 10875 25a4 01       		.uleb128 0x1
 10876 25a5 31       		.byte	0x31
 10877 25a6 35       		.uleb128 0x35
 10878 25a7 01       		.uleb128 0x1
 10879 25a8 53       		.byte	0x53
 10880 25a9 05       		.uleb128 0x5
 10881 25aa 03       		.byte	0x3
 10882 25ab 10000000 		.4byte	.LANCHOR0+16
 10883 25af 00       		.byte	0
 10884 25b0 00       		.byte	0
 10885 25b1 2C       		.uleb128 0x2c
 10886 25b2 B7030000 		.4byte	.LASF326
 10887 25b6 0E       		.byte	0xe
 10888 25b7 5E       		.byte	0x5e
 10889 25b8 84000000 		.4byte	0x84
 10890 25bc EC060000 		.4byte	.LFB72
 10891 25c0 0C010000 		.4byte	.LFE72-.LFB72
 10892 25c4 01       		.uleb128 0x1
 10893 25c5 9C       		.byte	0x9c
ARM GAS  /tmp/cc18izUm.s 			page 256


 10894 25c6 6F260000 		.4byte	0x266f
 10895 25ca 2D       		.uleb128 0x2d
 10896 25cb DD040000 		.4byte	.LASF327
 10897 25cf 01       		.byte	0x1
 10898 25d0 1004     		.2byte	0x410
 10899 25d2 6F260000 		.4byte	0x266f
 10900 25d6 B1170000 		.4byte	.LLST19
 10901 25da 2E       		.uleb128 0x2e
 10902 25db 8A0F0000 		.4byte	.LASF251
 10903 25df 01       		.byte	0x1
 10904 25e0 1204     		.2byte	0x412
 10905 25e2 75260000 		.4byte	0x2675
 10906 25e6 02       		.uleb128 0x2
 10907 25e7 91       		.byte	0x91
 10908 25e8 68       		.sleb128 -24
 10909 25e9 31       		.uleb128 0x31
 10910 25ea 0A050000 		.4byte	.LASF328
 10911 25ee 01       		.byte	0x1
 10912 25ef 1304     		.2byte	0x413
 10913 25f1 D2000000 		.4byte	0xd2
 10914 25f5 1A180000 		.4byte	.LLST20
 10915 25f9 31       		.uleb128 0x31
 10916 25fa 030D0000 		.4byte	.LASF329
 10917 25fe 01       		.byte	0x1
 10918 25ff 1404     		.2byte	0x414
 10919 2601 D2000000 		.4byte	0xd2
 10920 2605 D5180000 		.4byte	.LLST21
 10921 2609 38       		.uleb128 0x38
 10922 260a 666700   		.ascii	"fg\000"
 10923 260d 01       		.byte	0x1
 10924 260e 1504     		.2byte	0x415
 10925 2610 D2000000 		.4byte	0xd2
 10926 2614 77190000 		.4byte	.LLST22
 10927 2618 34       		.uleb128 0x34
 10928 2619 14070000 		.4byte	.LVL117
 10929 261d 4E2B0000 		.4byte	0x2b4e
 10930 2621 36260000 		.4byte	0x2636
 10931 2625 35       		.uleb128 0x35
 10932 2626 01       		.uleb128 0x1
 10933 2627 51       		.byte	0x51
 10934 2628 01       		.uleb128 0x1
 10935 2629 33       		.byte	0x33
 10936 262a 35       		.uleb128 0x35
 10937 262b 01       		.uleb128 0x1
 10938 262c 52       		.byte	0x52
 10939 262d 01       		.uleb128 0x1
 10940 262e 33       		.byte	0x33
 10941 262f 35       		.uleb128 0x35
 10942 2630 01       		.uleb128 0x1
 10943 2631 53       		.byte	0x53
 10944 2632 02       		.uleb128 0x2
 10945 2633 7D       		.byte	0x7d
 10946 2634 00       		.sleb128 0
 10947 2635 00       		.byte	0
 10948 2636 34       		.uleb128 0x34
 10949 2637 6A070000 		.4byte	.LVL123
 10950 263b 4E2B0000 		.4byte	0x2b4e
ARM GAS  /tmp/cc18izUm.s 			page 257


 10951 263f 54260000 		.4byte	0x2654
 10952 2643 35       		.uleb128 0x35
 10953 2644 01       		.uleb128 0x1
 10954 2645 51       		.byte	0x51
 10955 2646 01       		.uleb128 0x1
 10956 2647 36       		.byte	0x36
 10957 2648 35       		.uleb128 0x35
 10958 2649 01       		.uleb128 0x1
 10959 264a 52       		.byte	0x52
 10960 264b 01       		.uleb128 0x1
 10961 264c 36       		.byte	0x36
 10962 264d 35       		.uleb128 0x35
 10963 264e 01       		.uleb128 0x1
 10964 264f 53       		.byte	0x53
 10965 2650 02       		.uleb128 0x2
 10966 2651 7D       		.byte	0x7d
 10967 2652 00       		.sleb128 0
 10968 2653 00       		.byte	0
 10969 2654 36       		.uleb128 0x36
 10970 2655 D2070000 		.4byte	.LVL134
 10971 2659 2D2B0000 		.4byte	0x2b2d
 10972 265d 35       		.uleb128 0x35
 10973 265e 01       		.uleb128 0x1
 10974 265f 51       		.byte	0x51
 10975 2660 01       		.uleb128 0x1
 10976 2661 36       		.byte	0x36
 10977 2662 35       		.uleb128 0x35
 10978 2663 01       		.uleb128 0x1
 10979 2664 52       		.byte	0x52
 10980 2665 01       		.uleb128 0x1
 10981 2666 36       		.byte	0x36
 10982 2667 35       		.uleb128 0x35
 10983 2668 01       		.uleb128 0x1
 10984 2669 53       		.byte	0x53
 10985 266a 02       		.uleb128 0x2
 10986 266b 7D       		.byte	0x7d
 10987 266c 00       		.sleb128 0
 10988 266d 00       		.byte	0
 10989 266e 00       		.byte	0
 10990 266f 0A       		.uleb128 0xa
 10991 2670 04       		.byte	0x4
 10992 2671 5F000000 		.4byte	0x5f
 10993 2675 0B       		.uleb128 0xb
 10994 2676 33000000 		.4byte	0x33
 10995 267a 85260000 		.4byte	0x2685
 10996 267e 0C       		.uleb128 0xc
 10997 267f AD000000 		.4byte	0xad
 10998 2683 05       		.byte	0x5
 10999 2684 00       		.byte	0
 11000 2685 3C       		.uleb128 0x3c
 11001 2686 730E0000 		.4byte	.LASF330
 11002 268a 0E       		.byte	0xe
 11003 268b 64       		.byte	0x64
 11004 268c 84000000 		.4byte	0x84
 11005 2690 64060000 		.4byte	.LFB71
 11006 2694 88000000 		.4byte	.LFE71-.LFB71
 11007 2698 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 258


 11008 2699 9C       		.byte	0x9c
 11009 269a F3260000 		.4byte	0x26f3
 11010 269e 2D       		.uleb128 0x2d
 11011 269f 8A0F0000 		.4byte	.LASF251
 11012 26a3 01       		.byte	0x1
 11013 26a4 F703     		.2byte	0x3f7
 11014 26a6 D2180000 		.4byte	0x18d2
 11015 26aa B9190000 		.4byte	.LLST16
 11016 26ae 2D       		.uleb128 0x2d
 11017 26af 47030000 		.4byte	.LASF256
 11018 26b3 01       		.byte	0x1
 11019 26b4 F703     		.2byte	0x3f7
 11020 26b6 450F0000 		.4byte	0xf45
 11021 26ba FB190000 		.4byte	.LLST17
 11022 26be 29       		.uleb128 0x29
 11023 26bf 746D7000 		.ascii	"tmp\000"
 11024 26c3 01       		.byte	0x1
 11025 26c4 F903     		.2byte	0x3f9
 11026 26c6 03140000 		.4byte	0x1403
 11027 26ca 02       		.uleb128 0x2
 11028 26cb 91       		.byte	0x91
 11029 26cc 6C       		.sleb128 -20
 11030 26cd 38       		.uleb128 0x38
 11031 26ce 72617700 		.ascii	"raw\000"
 11032 26d2 01       		.byte	0x1
 11033 26d3 FA03     		.2byte	0x3fa
 11034 26d5 3F000000 		.4byte	0x3f
 11035 26d9 351A0000 		.4byte	.LLST18
 11036 26dd 36       		.uleb128 0x36
 11037 26de 84060000 		.4byte	.LVL102
 11038 26e2 4E2B0000 		.4byte	0x2b4e
 11039 26e6 35       		.uleb128 0x35
 11040 26e7 01       		.uleb128 0x1
 11041 26e8 52       		.byte	0x52
 11042 26e9 01       		.uleb128 0x1
 11043 26ea 32       		.byte	0x32
 11044 26eb 35       		.uleb128 0x35
 11045 26ec 01       		.uleb128 0x1
 11046 26ed 53       		.byte	0x53
 11047 26ee 02       		.uleb128 0x2
 11048 26ef 91       		.byte	0x91
 11049 26f0 6C       		.sleb128 -20
 11050 26f1 00       		.byte	0
 11051 26f2 00       		.byte	0
 11052 26f3 2C       		.uleb128 0x2c
 11053 26f4 FF050000 		.4byte	.LASF331
 11054 26f8 0E       		.byte	0xe
 11055 26f9 62       		.byte	0x62
 11056 26fa 84000000 		.4byte	0x84
 11057 26fe 00060000 		.4byte	.LFB70
 11058 2702 64000000 		.4byte	.LFE70-.LFB70
 11059 2706 01       		.uleb128 0x1
 11060 2707 9C       		.byte	0x9c
 11061 2708 51270000 		.4byte	0x2751
 11062 270c 2D       		.uleb128 0x2d
 11063 270d 8A0F0000 		.4byte	.LASF251
 11064 2711 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 259


 11065 2712 E003     		.2byte	0x3e0
 11066 2714 D3110000 		.4byte	0x11d3
 11067 2718 591A0000 		.4byte	.LLST14
 11068 271c 2D       		.uleb128 0x2d
 11069 271d 47030000 		.4byte	.LASF256
 11070 2721 01       		.byte	0x1
 11071 2722 E003     		.2byte	0x3e0
 11072 2724 450F0000 		.4byte	0xf45
 11073 2728 9B1A0000 		.4byte	.LLST15
 11074 272c 29       		.uleb128 0x29
 11075 272d 746D7000 		.ascii	"tmp\000"
 11076 2731 01       		.byte	0x1
 11077 2732 E203     		.2byte	0x3e2
 11078 2734 75260000 		.4byte	0x2675
 11079 2738 02       		.uleb128 0x2
 11080 2739 91       		.byte	0x91
 11081 273a 70       		.sleb128 -16
 11082 273b 36       		.uleb128 0x36
 11083 273c 22060000 		.4byte	.LVL95
 11084 2740 4E2B0000 		.4byte	0x2b4e
 11085 2744 35       		.uleb128 0x35
 11086 2745 01       		.uleb128 0x1
 11087 2746 52       		.byte	0x52
 11088 2747 01       		.uleb128 0x1
 11089 2748 36       		.byte	0x36
 11090 2749 35       		.uleb128 0x35
 11091 274a 01       		.uleb128 0x1
 11092 274b 53       		.byte	0x53
 11093 274c 02       		.uleb128 0x2
 11094 274d 7D       		.byte	0x7d
 11095 274e 00       		.sleb128 0
 11096 274f 00       		.byte	0
 11097 2750 00       		.byte	0
 11098 2751 2C       		.uleb128 0x2c
 11099 2752 31050000 		.4byte	.LASF332
 11100 2756 0E       		.byte	0xe
 11101 2757 61       		.byte	0x61
 11102 2758 84000000 		.4byte	0x84
 11103 275c 9C050000 		.4byte	.LFB69
 11104 2760 64000000 		.4byte	.LFE69-.LFB69
 11105 2764 01       		.uleb128 0x1
 11106 2765 9C       		.byte	0x9c
 11107 2766 AF270000 		.4byte	0x27af
 11108 276a 2D       		.uleb128 0x2d
 11109 276b 8A0F0000 		.4byte	.LASF251
 11110 276f 01       		.byte	0x1
 11111 2770 C903     		.2byte	0x3c9
 11112 2772 D3110000 		.4byte	0x11d3
 11113 2776 D51A0000 		.4byte	.LLST12
 11114 277a 2D       		.uleb128 0x2d
 11115 277b 47030000 		.4byte	.LASF256
 11116 277f 01       		.byte	0x1
 11117 2780 C903     		.2byte	0x3c9
 11118 2782 450F0000 		.4byte	0xf45
 11119 2786 171B0000 		.4byte	.LLST13
 11120 278a 29       		.uleb128 0x29
 11121 278b 746D7000 		.ascii	"tmp\000"
ARM GAS  /tmp/cc18izUm.s 			page 260


 11122 278f 01       		.byte	0x1
 11123 2790 CB03     		.2byte	0x3cb
 11124 2792 75260000 		.4byte	0x2675
 11125 2796 02       		.uleb128 0x2
 11126 2797 91       		.byte	0x91
 11127 2798 70       		.sleb128 -16
 11128 2799 36       		.uleb128 0x36
 11129 279a BE050000 		.4byte	.LVL88
 11130 279e 4E2B0000 		.4byte	0x2b4e
 11131 27a2 35       		.uleb128 0x35
 11132 27a3 01       		.uleb128 0x1
 11133 27a4 52       		.byte	0x52
 11134 27a5 01       		.uleb128 0x1
 11135 27a6 36       		.byte	0x36
 11136 27a7 35       		.uleb128 0x35
 11137 27a8 01       		.uleb128 0x1
 11138 27a9 53       		.byte	0x53
 11139 27aa 02       		.uleb128 0x2
 11140 27ab 7D       		.byte	0x7d
 11141 27ac 00       		.sleb128 0
 11142 27ad 00       		.byte	0
 11143 27ae 00       		.byte	0
 11144 27af 2C       		.uleb128 0x2c
 11145 27b0 D10F0000 		.4byte	.LASF333
 11146 27b4 0E       		.byte	0xe
 11147 27b5 3C       		.byte	0x3c
 11148 27b6 84000000 		.4byte	0x84
 11149 27ba 74120000 		.4byte	.LFB68
 11150 27be DC000000 		.4byte	.LFE68-.LFB68
 11151 27c2 01       		.uleb128 0x1
 11152 27c3 9C       		.byte	0x9c
 11153 27c4 9C280000 		.4byte	0x289c
 11154 27c8 2D       		.uleb128 0x2d
 11155 27c9 9B050000 		.4byte	.LASF315
 11156 27cd 01       		.byte	0x1
 11157 27ce 7503     		.2byte	0x375
 11158 27d0 33000000 		.4byte	0x33
 11159 27d4 511B0000 		.4byte	.LLST55
 11160 27d8 29       		.uleb128 0x29
 11161 27d9 746D7000 		.ascii	"tmp\000"
 11162 27dd 01       		.byte	0x1
 11163 27de 7703     		.2byte	0x377
 11164 27e0 03140000 		.4byte	0x1403
 11165 27e4 02       		.uleb128 0x2
 11166 27e5 91       		.byte	0x91
 11167 27e6 74       		.sleb128 -12
 11168 27e7 34       		.uleb128 0x34
 11169 27e8 86120000 		.4byte	.LVL314
 11170 27ec E21C0000 		.4byte	0x1ce2
 11171 27f0 FA270000 		.4byte	0x27fa
 11172 27f4 35       		.uleb128 0x35
 11173 27f5 01       		.uleb128 0x1
 11174 27f6 50       		.byte	0x50
 11175 27f7 01       		.uleb128 0x1
 11176 27f8 30       		.byte	0x30
 11177 27f9 00       		.byte	0
 11178 27fa 34       		.uleb128 0x34
ARM GAS  /tmp/cc18izUm.s 			page 261


 11179 27fb A4120000 		.4byte	.LVL315
 11180 27ff 2D2B0000 		.4byte	0x2b2d
 11181 2803 13280000 		.4byte	0x2813
 11182 2807 35       		.uleb128 0x35
 11183 2808 01       		.uleb128 0x1
 11184 2809 52       		.byte	0x52
 11185 280a 01       		.uleb128 0x1
 11186 280b 32       		.byte	0x32
 11187 280c 35       		.uleb128 0x35
 11188 280d 01       		.uleb128 0x1
 11189 280e 53       		.byte	0x53
 11190 280f 02       		.uleb128 0x2
 11191 2810 91       		.byte	0x91
 11192 2811 74       		.sleb128 -12
 11193 2812 00       		.byte	0
 11194 2813 34       		.uleb128 0x34
 11195 2814 B6120000 		.4byte	.LVL318
 11196 2818 E21C0000 		.4byte	0x1ce2
 11197 281c 26280000 		.4byte	0x2826
 11198 2820 35       		.uleb128 0x35
 11199 2821 01       		.uleb128 0x1
 11200 2822 50       		.byte	0x50
 11201 2823 01       		.uleb128 0x1
 11202 2824 31       		.byte	0x31
 11203 2825 00       		.byte	0
 11204 2826 34       		.uleb128 0x34
 11205 2827 D4120000 		.4byte	.LVL319
 11206 282b 0E230000 		.4byte	0x230e
 11207 282f 39280000 		.4byte	0x2839
 11208 2833 35       		.uleb128 0x35
 11209 2834 01       		.uleb128 0x1
 11210 2835 50       		.byte	0x50
 11211 2836 01       		.uleb128 0x1
 11212 2837 3A       		.byte	0x3a
 11213 2838 00       		.byte	0
 11214 2839 34       		.uleb128 0x34
 11215 283a F4120000 		.4byte	.LVL320
 11216 283e 2D2B0000 		.4byte	0x2b2d
 11217 2842 52280000 		.4byte	0x2852
 11218 2846 35       		.uleb128 0x35
 11219 2847 01       		.uleb128 0x1
 11220 2848 52       		.byte	0x52
 11221 2849 01       		.uleb128 0x1
 11222 284a 32       		.byte	0x32
 11223 284b 35       		.uleb128 0x35
 11224 284c 01       		.uleb128 0x1
 11225 284d 53       		.byte	0x53
 11226 284e 02       		.uleb128 0x2
 11227 284f 91       		.byte	0x91
 11228 2850 74       		.sleb128 -12
 11229 2851 00       		.byte	0
 11230 2852 34       		.uleb128 0x34
 11231 2853 0A130000 		.4byte	.LVL321
 11232 2857 26210000 		.4byte	0x2126
 11233 285b 66280000 		.4byte	0x2866
 11234 285f 35       		.uleb128 0x35
 11235 2860 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 262


 11236 2861 50       		.byte	0x50
 11237 2862 02       		.uleb128 0x2
 11238 2863 74       		.byte	0x74
 11239 2864 00       		.sleb128 0
 11240 2865 00       		.byte	0
 11241 2866 34       		.uleb128 0x34
 11242 2867 1A130000 		.4byte	.LVL322
 11243 286b 0E230000 		.4byte	0x230e
 11244 286f 79280000 		.4byte	0x2879
 11245 2873 35       		.uleb128 0x35
 11246 2874 01       		.uleb128 0x1
 11247 2875 50       		.byte	0x50
 11248 2876 01       		.uleb128 0x1
 11249 2877 35       		.byte	0x35
 11250 2878 00       		.byte	0
 11251 2879 34       		.uleb128 0x34
 11252 287a 28130000 		.4byte	.LVL323
 11253 287e 0E230000 		.4byte	0x230e
 11254 2882 8C280000 		.4byte	0x288c
 11255 2886 35       		.uleb128 0x35
 11256 2887 01       		.uleb128 0x1
 11257 2888 50       		.byte	0x50
 11258 2889 01       		.uleb128 0x1
 11259 288a 35       		.byte	0x35
 11260 288b 00       		.byte	0
 11261 288c 36       		.uleb128 0x36
 11262 288d 36130000 		.4byte	.LVL324
 11263 2891 0E230000 		.4byte	0x230e
 11264 2895 35       		.uleb128 0x35
 11265 2896 01       		.uleb128 0x1
 11266 2897 50       		.byte	0x50
 11267 2898 01       		.uleb128 0x1
 11268 2899 44       		.byte	0x44
 11269 289a 00       		.byte	0
 11270 289b 00       		.byte	0
 11271 289c 2C       		.uleb128 0x2c
 11272 289d A2000000 		.4byte	.LASF334
 11273 28a1 0E       		.byte	0xe
 11274 28a2 37       		.byte	0x37
 11275 28a3 84000000 		.4byte	0x84
 11276 28a7 F0140000 		.4byte	.LFB67
 11277 28ab B8010000 		.4byte	.LFE67-.LFB67
 11278 28af 01       		.uleb128 0x1
 11279 28b0 9C       		.byte	0x9c
 11280 28b1 042A0000 		.4byte	0x2a04
 11281 28b5 2E       		.uleb128 0x2e
 11282 28b6 8A0F0000 		.4byte	.LASF251
 11283 28ba 01       		.byte	0x1
 11284 28bb F502     		.2byte	0x2f5
 11285 28bd 75260000 		.4byte	0x2675
 11286 28c1 02       		.uleb128 0x2
 11287 28c2 91       		.byte	0x91
 11288 28c3 70       		.sleb128 -16
 11289 28c4 38       		.uleb128 0x38
 11290 28c5 72657600 		.ascii	"rev\000"
 11291 28c9 01       		.byte	0x1
 11292 28ca F502     		.2byte	0x2f5
ARM GAS  /tmp/cc18izUm.s 			page 263


 11293 28cc 33000000 		.4byte	0x33
 11294 28d0 A41B0000 		.4byte	.LLST58
 11295 28d4 34       		.uleb128 0x34
 11296 28d5 0C150000 		.4byte	.LVL351
 11297 28d9 2D2B0000 		.4byte	0x2b2d
 11298 28dd ED280000 		.4byte	0x28ed
 11299 28e1 35       		.uleb128 0x35
 11300 28e2 01       		.uleb128 0x1
 11301 28e3 52       		.byte	0x52
 11302 28e4 01       		.uleb128 0x1
 11303 28e5 31       		.byte	0x31
 11304 28e6 35       		.uleb128 0x35
 11305 28e7 01       		.uleb128 0x1
 11306 28e8 53       		.byte	0x53
 11307 28e9 02       		.uleb128 0x2
 11308 28ea 91       		.byte	0x91
 11309 28eb 70       		.sleb128 -16
 11310 28ec 00       		.byte	0
 11311 28ed 34       		.uleb128 0x34
 11312 28ee 18150000 		.4byte	.LVL352
 11313 28f2 382B0000 		.4byte	0x2b38
 11314 28f6 01290000 		.4byte	0x2901
 11315 28fa 35       		.uleb128 0x35
 11316 28fb 01       		.uleb128 0x1
 11317 28fc 50       		.byte	0x50
 11318 28fd 02       		.uleb128 0x2
 11319 28fe 08       		.byte	0x8
 11320 28ff 64       		.byte	0x64
 11321 2900 00       		.byte	0
 11322 2901 34       		.uleb128 0x34
 11323 2902 30150000 		.4byte	.LVL353
 11324 2906 2D2B0000 		.4byte	0x2b2d
 11325 290a 1A290000 		.4byte	0x291a
 11326 290e 35       		.uleb128 0x35
 11327 290f 01       		.uleb128 0x1
 11328 2910 52       		.byte	0x52
 11329 2911 01       		.uleb128 0x1
 11330 2912 31       		.byte	0x31
 11331 2913 35       		.uleb128 0x35
 11332 2914 01       		.uleb128 0x1
 11333 2915 53       		.byte	0x53
 11334 2916 02       		.uleb128 0x2
 11335 2917 91       		.byte	0x91
 11336 2918 70       		.sleb128 -16
 11337 2919 00       		.byte	0
 11338 291a 34       		.uleb128 0x34
 11339 291b 48150000 		.4byte	.LVL354
 11340 291f 4E2B0000 		.4byte	0x2b4e
 11341 2923 33290000 		.4byte	0x2933
 11342 2927 35       		.uleb128 0x35
 11343 2928 01       		.uleb128 0x1
 11344 2929 52       		.byte	0x52
 11345 292a 01       		.uleb128 0x1
 11346 292b 36       		.byte	0x36
 11347 292c 35       		.uleb128 0x35
 11348 292d 01       		.uleb128 0x1
 11349 292e 53       		.byte	0x53
ARM GAS  /tmp/cc18izUm.s 			page 264


 11350 292f 02       		.uleb128 0x2
 11351 2930 7D       		.byte	0x7d
 11352 2931 00       		.sleb128 0
 11353 2932 00       		.byte	0
 11354 2933 34       		.uleb128 0x34
 11355 2934 C4150000 		.4byte	.LVL359
 11356 2938 FE230000 		.4byte	0x23fe
 11357 293c 48290000 		.4byte	0x2948
 11358 2940 35       		.uleb128 0x35
 11359 2941 01       		.uleb128 0x1
 11360 2942 50       		.byte	0x50
 11361 2943 03       		.uleb128 0x3
 11362 2944 0A       		.byte	0xa
 11363 2945 D007     		.2byte	0x7d0
 11364 2947 00       		.byte	0
 11365 2948 34       		.uleb128 0x34
 11366 2949 CE150000 		.4byte	.LVL360
 11367 294d 86230000 		.4byte	0x2386
 11368 2951 5B290000 		.4byte	0x295b
 11369 2955 35       		.uleb128 0x35
 11370 2956 01       		.uleb128 0x1
 11371 2957 50       		.byte	0x50
 11372 2958 01       		.uleb128 0x1
 11373 2959 32       		.byte	0x32
 11374 295a 00       		.byte	0
 11375 295b 34       		.uleb128 0x34
 11376 295c D8150000 		.4byte	.LVL361
 11377 2960 0E230000 		.4byte	0x230e
 11378 2964 6F290000 		.4byte	0x296f
 11379 2968 35       		.uleb128 0x35
 11380 2969 01       		.uleb128 0x1
 11381 296a 50       		.byte	0x50
 11382 296b 02       		.uleb128 0x2
 11383 296c 08       		.byte	0x8
 11384 296d 2A       		.byte	0x2a
 11385 296e 00       		.byte	0
 11386 296f 34       		.uleb128 0x34
 11387 2970 E2150000 		.4byte	.LVL362
 11388 2974 6D220000 		.4byte	0x226d
 11389 2978 83290000 		.4byte	0x2983
 11390 297c 35       		.uleb128 0x35
 11391 297d 01       		.uleb128 0x1
 11392 297e 50       		.byte	0x50
 11393 297f 02       		.uleb128 0x2
 11394 2980 08       		.byte	0x8
 11395 2981 32       		.byte	0x32
 11396 2982 00       		.byte	0
 11397 2983 3A       		.uleb128 0x3a
 11398 2984 EA150000 		.4byte	.LVL363
 11399 2988 26210000 		.4byte	0x2126
 11400 298c 3A       		.uleb128 0x3a
 11401 298d F2150000 		.4byte	.LVL364
 11402 2991 5A1D0000 		.4byte	0x1d5a
 11403 2995 34       		.uleb128 0x34
 11404 2996 FC150000 		.4byte	.LVL365
 11405 299a 55200000 		.4byte	0x2055
 11406 299e A9290000 		.4byte	0x29a9
ARM GAS  /tmp/cc18izUm.s 			page 265


 11407 29a2 35       		.uleb128 0x35
 11408 29a3 01       		.uleb128 0x1
 11409 29a4 50       		.byte	0x50
 11410 29a5 02       		.uleb128 0x2
 11411 29a6 74       		.byte	0x74
 11412 29a7 00       		.sleb128 0
 11413 29a8 00       		.byte	0
 11414 29a9 34       		.uleb128 0x34
 11415 29aa 10160000 		.4byte	.LVL369
 11416 29ae 592B0000 		.4byte	0x2b59
 11417 29b2 C0290000 		.4byte	0x29c0
 11418 29b6 35       		.uleb128 0x35
 11419 29b7 01       		.uleb128 0x1
 11420 29b8 50       		.byte	0x50
 11421 29b9 05       		.uleb128 0x5
 11422 29ba 03       		.byte	0x3
 11423 29bb 00000000 		.4byte	.LC0
 11424 29bf 00       		.byte	0
 11425 29c0 34       		.uleb128 0x34
 11426 29c1 28160000 		.4byte	.LVL372
 11427 29c5 4E2B0000 		.4byte	0x2b4e
 11428 29c9 D9290000 		.4byte	0x29d9
 11429 29cd 35       		.uleb128 0x35
 11430 29ce 01       		.uleb128 0x1
 11431 29cf 52       		.byte	0x52
 11432 29d0 01       		.uleb128 0x1
 11433 29d1 31       		.byte	0x31
 11434 29d2 35       		.uleb128 0x35
 11435 29d3 01       		.uleb128 0x1
 11436 29d4 53       		.byte	0x53
 11437 29d5 02       		.uleb128 0x2
 11438 29d6 7D       		.byte	0x7d
 11439 29d7 00       		.sleb128 0
 11440 29d8 00       		.byte	0
 11441 29d9 34       		.uleb128 0x34
 11442 29da 46160000 		.4byte	.LVL375
 11443 29de 642B0000 		.4byte	0x2b64
 11444 29e2 F0290000 		.4byte	0x29f0
 11445 29e6 35       		.uleb128 0x35
 11446 29e7 01       		.uleb128 0x1
 11447 29e8 50       		.byte	0x50
 11448 29e9 05       		.uleb128 0x5
 11449 29ea 03       		.byte	0x3
 11450 29eb 28000000 		.4byte	.LC1
 11451 29ef 00       		.byte	0
 11452 29f0 36       		.uleb128 0x36
 11453 29f1 52160000 		.4byte	.LVL377
 11454 29f5 642B0000 		.4byte	0x2b64
 11455 29f9 35       		.uleb128 0x35
 11456 29fa 01       		.uleb128 0x1
 11457 29fb 50       		.byte	0x50
 11458 29fc 05       		.uleb128 0x5
 11459 29fd 03       		.byte	0x3
 11460 29fe 78000000 		.4byte	.LC2
 11461 2a02 00       		.byte	0
 11462 2a03 00       		.byte	0
 11463 2a04 2C       		.uleb128 0x2c
ARM GAS  /tmp/cc18izUm.s 			page 266


 11464 2a05 CB080000 		.4byte	.LASF335
 11465 2a09 0E       		.byte	0xe
 11466 2a0a 75       		.byte	0x75
 11467 2a0b 84000000 		.4byte	0x84
 11468 2a0f 5C050000 		.4byte	.LFB66
 11469 2a13 40000000 		.4byte	.LFE66-.LFB66
 11470 2a17 01       		.uleb128 0x1
 11471 2a18 9C       		.byte	0x9c
 11472 2a19 542A0000 		.4byte	0x2a54
 11473 2a1d 3B       		.uleb128 0x3b
 11474 2a1e 72656700 		.ascii	"reg\000"
 11475 2a22 01       		.byte	0x1
 11476 2a23 DD02     		.2byte	0x2dd
 11477 2a25 33000000 		.4byte	0x33
 11478 2a29 051D0000 		.4byte	.LLST10
 11479 2a2d 2D       		.uleb128 0x2d
 11480 2a2e 8A0F0000 		.4byte	.LASF251
 11481 2a32 01       		.byte	0x1
 11482 2a33 DD02     		.2byte	0x2dd
 11483 2a35 99030000 		.4byte	0x399
 11484 2a39 711D0000 		.4byte	.LLST11
 11485 2a3d 36       		.uleb128 0x36
 11486 2a3e 84050000 		.4byte	.LVL78
 11487 2a42 4E2B0000 		.4byte	0x2b4e
 11488 2a46 35       		.uleb128 0x35
 11489 2a47 01       		.uleb128 0x1
 11490 2a48 52       		.byte	0x52
 11491 2a49 01       		.uleb128 0x1
 11492 2a4a 31       		.byte	0x31
 11493 2a4b 35       		.uleb128 0x35
 11494 2a4c 01       		.uleb128 0x1
 11495 2a4d 53       		.byte	0x53
 11496 2a4e 03       		.uleb128 0x3
 11497 2a4f F3       		.byte	0xf3
 11498 2a50 01       		.uleb128 0x1
 11499 2a51 51       		.byte	0x51
 11500 2a52 00       		.byte	0
 11501 2a53 00       		.byte	0
 11502 2a54 2C       		.uleb128 0x2c
 11503 2a55 0E010000 		.4byte	.LASF336
 11504 2a59 0E       		.byte	0xe
 11505 2a5a 74       		.byte	0x74
 11506 2a5b 84000000 		.4byte	0x84
 11507 2a5f 08050000 		.4byte	.LFB65
 11508 2a63 54000000 		.4byte	.LFE65-.LFB65
 11509 2a67 01       		.uleb128 0x1
 11510 2a68 9C       		.byte	0x9c
 11511 2a69 A82A0000 		.4byte	0x2aa8
 11512 2a6d 38       		.uleb128 0x38
 11513 2a6e 696900   		.ascii	"ii\000"
 11514 2a71 01       		.byte	0x1
 11515 2a72 C902     		.2byte	0x2c9
 11516 2a74 33000000 		.4byte	0x33
 11517 2a78 A81D0000 		.4byte	.LLST9
 11518 2a7c 2E       		.uleb128 0x2e
 11519 2a7d 8A0F0000 		.4byte	.LASF251
 11520 2a81 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 267


 11521 2a82 CA02     		.2byte	0x2ca
 11522 2a84 33000000 		.4byte	0x33
 11523 2a88 02       		.uleb128 0x2
 11524 2a89 91       		.byte	0x91
 11525 2a8a 6F       		.sleb128 -17
 11526 2a8b 36       		.uleb128 0x36
 11527 2a8c 44050000 		.4byte	.LVL73
 11528 2a90 4E2B0000 		.4byte	0x2b4e
 11529 2a94 35       		.uleb128 0x35
 11530 2a95 01       		.uleb128 0x1
 11531 2a96 51       		.byte	0x51
 11532 2a97 02       		.uleb128 0x2
 11533 2a98 74       		.byte	0x74
 11534 2a99 00       		.sleb128 0
 11535 2a9a 35       		.uleb128 0x35
 11536 2a9b 01       		.uleb128 0x1
 11537 2a9c 52       		.byte	0x52
 11538 2a9d 02       		.uleb128 0x2
 11539 2a9e 76       		.byte	0x76
 11540 2a9f 00       		.sleb128 0
 11541 2aa0 35       		.uleb128 0x35
 11542 2aa1 01       		.uleb128 0x1
 11543 2aa2 53       		.byte	0x53
 11544 2aa3 02       		.uleb128 0x2
 11545 2aa4 91       		.byte	0x91
 11546 2aa5 6F       		.sleb128 -17
 11547 2aa6 00       		.byte	0
 11548 2aa7 00       		.byte	0
 11549 2aa8 48       		.uleb128 0x48
 11550 2aa9 D10E0000 		.4byte	.LASF338
 11551 2aad 01       		.byte	0x1
 11552 2aae A602     		.2byte	0x2a6
 11553 2ab0 84000000 		.4byte	0x84
 11554 2ab4 00000000 		.4byte	.LFB64
 11555 2ab8 98000000 		.4byte	.LFE64-.LFB64
 11556 2abc 01       		.uleb128 0x1
 11557 2abd 9C       		.byte	0x9c
 11558 2abe 102B0000 		.4byte	0x2b10
 11559 2ac2 2D       		.uleb128 0x2d
 11560 2ac3 C9070000 		.4byte	.LASF260
 11561 2ac7 01       		.byte	0x1
 11562 2ac8 A602     		.2byte	0x2a6
 11563 2aca 33000000 		.4byte	0x33
 11564 2ace DE1D0000 		.4byte	.LLST0
 11565 2ad2 29       		.uleb128 0x29
 11566 2ad3 746D7000 		.ascii	"tmp\000"
 11567 2ad7 01       		.byte	0x1
 11568 2ad8 A802     		.2byte	0x2a8
 11569 2ada 33000000 		.4byte	0x33
 11570 2ade 02       		.uleb128 0x2
 11571 2adf 91       		.byte	0x91
 11572 2ae0 77       		.sleb128 -9
 11573 2ae1 34       		.uleb128 0x34
 11574 2ae2 28000000 		.4byte	.LVL2
 11575 2ae6 2D2B0000 		.4byte	0x2b2d
 11576 2aea FA2A0000 		.4byte	0x2afa
 11577 2aee 35       		.uleb128 0x35
ARM GAS  /tmp/cc18izUm.s 			page 268


 11578 2aef 01       		.uleb128 0x1
 11579 2af0 52       		.byte	0x52
 11580 2af1 01       		.uleb128 0x1
 11581 2af2 31       		.byte	0x31
 11582 2af3 35       		.uleb128 0x35
 11583 2af4 01       		.uleb128 0x1
 11584 2af5 53       		.byte	0x53
 11585 2af6 02       		.uleb128 0x2
 11586 2af7 91       		.byte	0x91
 11587 2af8 77       		.sleb128 -9
 11588 2af9 00       		.byte	0
 11589 2afa 36       		.uleb128 0x36
 11590 2afb 68000000 		.4byte	.LVL5
 11591 2aff 2D2B0000 		.4byte	0x2b2d
 11592 2b03 35       		.uleb128 0x35
 11593 2b04 01       		.uleb128 0x1
 11594 2b05 52       		.byte	0x52
 11595 2b06 01       		.uleb128 0x1
 11596 2b07 31       		.byte	0x31
 11597 2b08 35       		.uleb128 0x35
 11598 2b09 01       		.uleb128 0x1
 11599 2b0a 53       		.byte	0x53
 11600 2b0b 02       		.uleb128 0x2
 11601 2b0c 91       		.byte	0x91
 11602 2b0d 77       		.sleb128 -9
 11603 2b0e 00       		.byte	0
 11604 2b0f 00       		.byte	0
 11605 2b10 49       		.uleb128 0x49
 11606 2b11 A8210000 		.4byte	0x21a8
 11607 2b15 140D0000 		.4byte	.LFB86
 11608 2b19 10000000 		.4byte	.LFE86-.LFB86
 11609 2b1d 01       		.uleb128 0x1
 11610 2b1e 9C       		.byte	0x9c
 11611 2b1f 2D2B0000 		.4byte	0x2b2d
 11612 2b23 33       		.uleb128 0x33
 11613 2b24 B8210000 		.4byte	0x21b8
 11614 2b28 631E0000 		.4byte	.LLST34
 11615 2b2c 00       		.byte	0
 11616 2b2d 4A       		.uleb128 0x4a
 11617 2b2e 12030000 		.4byte	.LASF339
 11618 2b32 12030000 		.4byte	.LASF339
 11619 2b36 0F       		.byte	0xf
 11620 2b37 0D       		.byte	0xd
 11621 2b38 4A       		.uleb128 0x4a
 11622 2b39 7C030000 		.4byte	.LASF340
 11623 2b3d 7C030000 		.4byte	.LASF340
 11624 2b41 0F       		.byte	0xf
 11625 2b42 0B       		.byte	0xb
 11626 2b43 4A       		.uleb128 0x4a
 11627 2b44 460C0000 		.4byte	.LASF341
 11628 2b48 460C0000 		.4byte	.LASF341
 11629 2b4c 10       		.byte	0x10
 11630 2b4d 16       		.byte	0x16
 11631 2b4e 4A       		.uleb128 0x4a
 11632 2b4f B9070000 		.4byte	.LASF342
 11633 2b53 B9070000 		.4byte	.LASF342
 11634 2b57 0F       		.byte	0xf
ARM GAS  /tmp/cc18izUm.s 			page 269


 11635 2b58 0F       		.byte	0xf
 11636 2b59 4A       		.uleb128 0x4a
 11637 2b5a 6E050000 		.4byte	.LASF343
 11638 2b5e 6E050000 		.4byte	.LASF343
 11639 2b62 11       		.byte	0x11
 11640 2b63 BB       		.byte	0xbb
 11641 2b64 4B       		.uleb128 0x4b
 11642 2b65 31010000 		.4byte	.LASF349
 11643 2b69 500A0000 		.4byte	.LASF350
 11644 2b6d 12       		.byte	0x12
 11645 2b6e 00       		.byte	0
 11646 2b6f 31010000 		.4byte	.LASF349
 11647 2b73 00       		.byte	0
 11648              		.section	.debug_abbrev,"",%progbits
 11649              	.Ldebug_abbrev0:
 11650 0000 01       		.uleb128 0x1
 11651 0001 11       		.uleb128 0x11
 11652 0002 01       		.byte	0x1
 11653 0003 25       		.uleb128 0x25
 11654 0004 0E       		.uleb128 0xe
 11655 0005 13       		.uleb128 0x13
 11656 0006 0B       		.uleb128 0xb
 11657 0007 03       		.uleb128 0x3
 11658 0008 0E       		.uleb128 0xe
 11659 0009 1B       		.uleb128 0x1b
 11660 000a 0E       		.uleb128 0xe
 11661 000b 11       		.uleb128 0x11
 11662 000c 01       		.uleb128 0x1
 11663 000d 12       		.uleb128 0x12
 11664 000e 06       		.uleb128 0x6
 11665 000f 10       		.uleb128 0x10
 11666 0010 17       		.uleb128 0x17
 11667 0011 00       		.byte	0
 11668 0012 00       		.byte	0
 11669 0013 02       		.uleb128 0x2
 11670 0014 24       		.uleb128 0x24
 11671 0015 00       		.byte	0
 11672 0016 0B       		.uleb128 0xb
 11673 0017 0B       		.uleb128 0xb
 11674 0018 3E       		.uleb128 0x3e
 11675 0019 0B       		.uleb128 0xb
 11676 001a 03       		.uleb128 0x3
 11677 001b 0E       		.uleb128 0xe
 11678 001c 00       		.byte	0
 11679 001d 00       		.byte	0
 11680 001e 03       		.uleb128 0x3
 11681 001f 26       		.uleb128 0x26
 11682 0020 00       		.byte	0
 11683 0021 49       		.uleb128 0x49
 11684 0022 13       		.uleb128 0x13
 11685 0023 00       		.byte	0
 11686 0024 00       		.byte	0
 11687 0025 04       		.uleb128 0x4
 11688 0026 16       		.uleb128 0x16
 11689 0027 00       		.byte	0
 11690 0028 03       		.uleb128 0x3
 11691 0029 0E       		.uleb128 0xe
ARM GAS  /tmp/cc18izUm.s 			page 270


 11692 002a 3A       		.uleb128 0x3a
 11693 002b 0B       		.uleb128 0xb
 11694 002c 3B       		.uleb128 0x3b
 11695 002d 0B       		.uleb128 0xb
 11696 002e 49       		.uleb128 0x49
 11697 002f 13       		.uleb128 0x13
 11698 0030 00       		.byte	0
 11699 0031 00       		.byte	0
 11700 0032 05       		.uleb128 0x5
 11701 0033 24       		.uleb128 0x24
 11702 0034 00       		.byte	0
 11703 0035 0B       		.uleb128 0xb
 11704 0036 0B       		.uleb128 0xb
 11705 0037 3E       		.uleb128 0x3e
 11706 0038 0B       		.uleb128 0xb
 11707 0039 03       		.uleb128 0x3
 11708 003a 08       		.uleb128 0x8
 11709 003b 00       		.byte	0
 11710 003c 00       		.byte	0
 11711 003d 06       		.uleb128 0x6
 11712 003e 35       		.uleb128 0x35
 11713 003f 00       		.byte	0
 11714 0040 49       		.uleb128 0x49
 11715 0041 13       		.uleb128 0x13
 11716 0042 00       		.byte	0
 11717 0043 00       		.byte	0
 11718 0044 07       		.uleb128 0x7
 11719 0045 34       		.uleb128 0x34
 11720 0046 00       		.byte	0
 11721 0047 03       		.uleb128 0x3
 11722 0048 0E       		.uleb128 0xe
 11723 0049 3A       		.uleb128 0x3a
 11724 004a 0B       		.uleb128 0xb
 11725 004b 3B       		.uleb128 0x3b
 11726 004c 05       		.uleb128 0x5
 11727 004d 49       		.uleb128 0x49
 11728 004e 13       		.uleb128 0x13
 11729 004f 3F       		.uleb128 0x3f
 11730 0050 19       		.uleb128 0x19
 11731 0051 3C       		.uleb128 0x3c
 11732 0052 19       		.uleb128 0x19
 11733 0053 00       		.byte	0
 11734 0054 00       		.byte	0
 11735 0055 08       		.uleb128 0x8
 11736 0056 34       		.uleb128 0x34
 11737 0057 00       		.byte	0
 11738 0058 03       		.uleb128 0x3
 11739 0059 0E       		.uleb128 0xe
 11740 005a 3A       		.uleb128 0x3a
 11741 005b 0B       		.uleb128 0xb
 11742 005c 3B       		.uleb128 0x3b
 11743 005d 0B       		.uleb128 0xb
 11744 005e 49       		.uleb128 0x49
 11745 005f 13       		.uleb128 0x13
 11746 0060 3F       		.uleb128 0x3f
 11747 0061 19       		.uleb128 0x19
 11748 0062 3C       		.uleb128 0x3c
ARM GAS  /tmp/cc18izUm.s 			page 271


 11749 0063 19       		.uleb128 0x19
 11750 0064 00       		.byte	0
 11751 0065 00       		.byte	0
 11752 0066 09       		.uleb128 0x9
 11753 0067 15       		.uleb128 0x15
 11754 0068 00       		.byte	0
 11755 0069 27       		.uleb128 0x27
 11756 006a 19       		.uleb128 0x19
 11757 006b 00       		.byte	0
 11758 006c 00       		.byte	0
 11759 006d 0A       		.uleb128 0xa
 11760 006e 0F       		.uleb128 0xf
 11761 006f 00       		.byte	0
 11762 0070 0B       		.uleb128 0xb
 11763 0071 0B       		.uleb128 0xb
 11764 0072 49       		.uleb128 0x49
 11765 0073 13       		.uleb128 0x13
 11766 0074 00       		.byte	0
 11767 0075 00       		.byte	0
 11768 0076 0B       		.uleb128 0xb
 11769 0077 01       		.uleb128 0x1
 11770 0078 01       		.byte	0x1
 11771 0079 49       		.uleb128 0x49
 11772 007a 13       		.uleb128 0x13
 11773 007b 01       		.uleb128 0x1
 11774 007c 13       		.uleb128 0x13
 11775 007d 00       		.byte	0
 11776 007e 00       		.byte	0
 11777 007f 0C       		.uleb128 0xc
 11778 0080 21       		.uleb128 0x21
 11779 0081 00       		.byte	0
 11780 0082 49       		.uleb128 0x49
 11781 0083 13       		.uleb128 0x13
 11782 0084 2F       		.uleb128 0x2f
 11783 0085 0B       		.uleb128 0xb
 11784 0086 00       		.byte	0
 11785 0087 00       		.byte	0
 11786 0088 0D       		.uleb128 0xd
 11787 0089 34       		.uleb128 0x34
 11788 008a 00       		.byte	0
 11789 008b 03       		.uleb128 0x3
 11790 008c 08       		.uleb128 0x8
 11791 008d 3A       		.uleb128 0x3a
 11792 008e 0B       		.uleb128 0xb
 11793 008f 3B       		.uleb128 0x3b
 11794 0090 05       		.uleb128 0x5
 11795 0091 49       		.uleb128 0x49
 11796 0092 13       		.uleb128 0x13
 11797 0093 3F       		.uleb128 0x3f
 11798 0094 19       		.uleb128 0x19
 11799 0095 3C       		.uleb128 0x3c
 11800 0096 19       		.uleb128 0x19
 11801 0097 00       		.byte	0
 11802 0098 00       		.byte	0
 11803 0099 0E       		.uleb128 0xe
 11804 009a 0F       		.uleb128 0xf
 11805 009b 00       		.byte	0
ARM GAS  /tmp/cc18izUm.s 			page 272


 11806 009c 0B       		.uleb128 0xb
 11807 009d 0B       		.uleb128 0xb
 11808 009e 00       		.byte	0
 11809 009f 00       		.byte	0
 11810 00a0 0F       		.uleb128 0xf
 11811 00a1 16       		.uleb128 0x16
 11812 00a2 00       		.byte	0
 11813 00a3 03       		.uleb128 0x3
 11814 00a4 0E       		.uleb128 0xe
 11815 00a5 3A       		.uleb128 0x3a
 11816 00a6 0B       		.uleb128 0xb
 11817 00a7 3B       		.uleb128 0x3b
 11818 00a8 05       		.uleb128 0x5
 11819 00a9 49       		.uleb128 0x49
 11820 00aa 13       		.uleb128 0x13
 11821 00ab 00       		.byte	0
 11822 00ac 00       		.byte	0
 11823 00ad 10       		.uleb128 0x10
 11824 00ae 17       		.uleb128 0x17
 11825 00af 01       		.byte	0x1
 11826 00b0 0B       		.uleb128 0xb
 11827 00b1 0B       		.uleb128 0xb
 11828 00b2 3A       		.uleb128 0x3a
 11829 00b3 0B       		.uleb128 0xb
 11830 00b4 3B       		.uleb128 0x3b
 11831 00b5 0B       		.uleb128 0xb
 11832 00b6 01       		.uleb128 0x1
 11833 00b7 13       		.uleb128 0x13
 11834 00b8 00       		.byte	0
 11835 00b9 00       		.byte	0
 11836 00ba 11       		.uleb128 0x11
 11837 00bb 0D       		.uleb128 0xd
 11838 00bc 00       		.byte	0
 11839 00bd 03       		.uleb128 0x3
 11840 00be 0E       		.uleb128 0xe
 11841 00bf 3A       		.uleb128 0x3a
 11842 00c0 0B       		.uleb128 0xb
 11843 00c1 3B       		.uleb128 0x3b
 11844 00c2 0B       		.uleb128 0xb
 11845 00c3 49       		.uleb128 0x49
 11846 00c4 13       		.uleb128 0x13
 11847 00c5 00       		.byte	0
 11848 00c6 00       		.byte	0
 11849 00c7 12       		.uleb128 0x12
 11850 00c8 13       		.uleb128 0x13
 11851 00c9 01       		.byte	0x1
 11852 00ca 0B       		.uleb128 0xb
 11853 00cb 0B       		.uleb128 0xb
 11854 00cc 3A       		.uleb128 0x3a
 11855 00cd 0B       		.uleb128 0xb
 11856 00ce 3B       		.uleb128 0x3b
 11857 00cf 0B       		.uleb128 0xb
 11858 00d0 01       		.uleb128 0x1
 11859 00d1 13       		.uleb128 0x13
 11860 00d2 00       		.byte	0
 11861 00d3 00       		.byte	0
 11862 00d4 13       		.uleb128 0x13
ARM GAS  /tmp/cc18izUm.s 			page 273


 11863 00d5 0D       		.uleb128 0xd
 11864 00d6 00       		.byte	0
 11865 00d7 03       		.uleb128 0x3
 11866 00d8 0E       		.uleb128 0xe
 11867 00d9 3A       		.uleb128 0x3a
 11868 00da 0B       		.uleb128 0xb
 11869 00db 3B       		.uleb128 0x3b
 11870 00dc 0B       		.uleb128 0xb
 11871 00dd 49       		.uleb128 0x49
 11872 00de 13       		.uleb128 0x13
 11873 00df 38       		.uleb128 0x38
 11874 00e0 0B       		.uleb128 0xb
 11875 00e1 00       		.byte	0
 11876 00e2 00       		.byte	0
 11877 00e3 14       		.uleb128 0x14
 11878 00e4 13       		.uleb128 0x13
 11879 00e5 01       		.byte	0x1
 11880 00e6 03       		.uleb128 0x3
 11881 00e7 0E       		.uleb128 0xe
 11882 00e8 0B       		.uleb128 0xb
 11883 00e9 0B       		.uleb128 0xb
 11884 00ea 3A       		.uleb128 0x3a
 11885 00eb 0B       		.uleb128 0xb
 11886 00ec 3B       		.uleb128 0x3b
 11887 00ed 0B       		.uleb128 0xb
 11888 00ee 01       		.uleb128 0x1
 11889 00ef 13       		.uleb128 0x13
 11890 00f0 00       		.byte	0
 11891 00f1 00       		.byte	0
 11892 00f2 15       		.uleb128 0x15
 11893 00f3 0D       		.uleb128 0xd
 11894 00f4 00       		.byte	0
 11895 00f5 03       		.uleb128 0x3
 11896 00f6 08       		.uleb128 0x8
 11897 00f7 3A       		.uleb128 0x3a
 11898 00f8 0B       		.uleb128 0xb
 11899 00f9 3B       		.uleb128 0x3b
 11900 00fa 0B       		.uleb128 0xb
 11901 00fb 49       		.uleb128 0x49
 11902 00fc 13       		.uleb128 0x13
 11903 00fd 38       		.uleb128 0x38
 11904 00fe 0B       		.uleb128 0xb
 11905 00ff 00       		.byte	0
 11906 0100 00       		.byte	0
 11907 0101 16       		.uleb128 0x16
 11908 0102 13       		.uleb128 0x13
 11909 0103 01       		.byte	0x1
 11910 0104 03       		.uleb128 0x3
 11911 0105 0E       		.uleb128 0xe
 11912 0106 0B       		.uleb128 0xb
 11913 0107 05       		.uleb128 0x5
 11914 0108 3A       		.uleb128 0x3a
 11915 0109 0B       		.uleb128 0xb
 11916 010a 3B       		.uleb128 0x3b
 11917 010b 0B       		.uleb128 0xb
 11918 010c 01       		.uleb128 0x1
 11919 010d 13       		.uleb128 0x13
ARM GAS  /tmp/cc18izUm.s 			page 274


 11920 010e 00       		.byte	0
 11921 010f 00       		.byte	0
 11922 0110 17       		.uleb128 0x17
 11923 0111 0D       		.uleb128 0xd
 11924 0112 00       		.byte	0
 11925 0113 03       		.uleb128 0x3
 11926 0114 0E       		.uleb128 0xe
 11927 0115 3A       		.uleb128 0x3a
 11928 0116 0B       		.uleb128 0xb
 11929 0117 3B       		.uleb128 0x3b
 11930 0118 0B       		.uleb128 0xb
 11931 0119 49       		.uleb128 0x49
 11932 011a 13       		.uleb128 0x13
 11933 011b 38       		.uleb128 0x38
 11934 011c 05       		.uleb128 0x5
 11935 011d 00       		.byte	0
 11936 011e 00       		.byte	0
 11937 011f 18       		.uleb128 0x18
 11938 0120 15       		.uleb128 0x15
 11939 0121 01       		.byte	0x1
 11940 0122 27       		.uleb128 0x27
 11941 0123 19       		.uleb128 0x19
 11942 0124 49       		.uleb128 0x49
 11943 0125 13       		.uleb128 0x13
 11944 0126 01       		.uleb128 0x1
 11945 0127 13       		.uleb128 0x13
 11946 0128 00       		.byte	0
 11947 0129 00       		.byte	0
 11948 012a 19       		.uleb128 0x19
 11949 012b 05       		.uleb128 0x5
 11950 012c 00       		.byte	0
 11951 012d 49       		.uleb128 0x49
 11952 012e 13       		.uleb128 0x13
 11953 012f 00       		.byte	0
 11954 0130 00       		.byte	0
 11955 0131 1A       		.uleb128 0x1a
 11956 0132 13       		.uleb128 0x13
 11957 0133 01       		.byte	0x1
 11958 0134 03       		.uleb128 0x3
 11959 0135 0E       		.uleb128 0xe
 11960 0136 0B       		.uleb128 0xb
 11961 0137 05       		.uleb128 0x5
 11962 0138 3A       		.uleb128 0x3a
 11963 0139 0B       		.uleb128 0xb
 11964 013a 3B       		.uleb128 0x3b
 11965 013b 05       		.uleb128 0x5
 11966 013c 01       		.uleb128 0x1
 11967 013d 13       		.uleb128 0x13
 11968 013e 00       		.byte	0
 11969 013f 00       		.byte	0
 11970 0140 1B       		.uleb128 0x1b
 11971 0141 0D       		.uleb128 0xd
 11972 0142 00       		.byte	0
 11973 0143 03       		.uleb128 0x3
 11974 0144 0E       		.uleb128 0xe
 11975 0145 3A       		.uleb128 0x3a
 11976 0146 0B       		.uleb128 0xb
ARM GAS  /tmp/cc18izUm.s 			page 275


 11977 0147 3B       		.uleb128 0x3b
 11978 0148 05       		.uleb128 0x5
 11979 0149 49       		.uleb128 0x49
 11980 014a 13       		.uleb128 0x13
 11981 014b 38       		.uleb128 0x38
 11982 014c 0B       		.uleb128 0xb
 11983 014d 00       		.byte	0
 11984 014e 00       		.byte	0
 11985 014f 1C       		.uleb128 0x1c
 11986 0150 0D       		.uleb128 0xd
 11987 0151 00       		.byte	0
 11988 0152 03       		.uleb128 0x3
 11989 0153 0E       		.uleb128 0xe
 11990 0154 3A       		.uleb128 0x3a
 11991 0155 0B       		.uleb128 0xb
 11992 0156 3B       		.uleb128 0x3b
 11993 0157 05       		.uleb128 0x5
 11994 0158 49       		.uleb128 0x49
 11995 0159 13       		.uleb128 0x13
 11996 015a 38       		.uleb128 0x38
 11997 015b 05       		.uleb128 0x5
 11998 015c 00       		.byte	0
 11999 015d 00       		.byte	0
 12000 015e 1D       		.uleb128 0x1d
 12001 015f 13       		.uleb128 0x13
 12002 0160 01       		.byte	0x1
 12003 0161 03       		.uleb128 0x3
 12004 0162 0E       		.uleb128 0xe
 12005 0163 0B       		.uleb128 0xb
 12006 0164 0B       		.uleb128 0xb
 12007 0165 3A       		.uleb128 0x3a
 12008 0166 0B       		.uleb128 0xb
 12009 0167 3B       		.uleb128 0x3b
 12010 0168 05       		.uleb128 0x5
 12011 0169 01       		.uleb128 0x1
 12012 016a 13       		.uleb128 0x13
 12013 016b 00       		.byte	0
 12014 016c 00       		.byte	0
 12015 016d 1E       		.uleb128 0x1e
 12016 016e 13       		.uleb128 0x13
 12017 016f 01       		.byte	0x1
 12018 0170 0B       		.uleb128 0xb
 12019 0171 0B       		.uleb128 0xb
 12020 0172 3A       		.uleb128 0x3a
 12021 0173 0B       		.uleb128 0xb
 12022 0174 3B       		.uleb128 0x3b
 12023 0175 05       		.uleb128 0x5
 12024 0176 01       		.uleb128 0x1
 12025 0177 13       		.uleb128 0x13
 12026 0178 00       		.byte	0
 12027 0179 00       		.byte	0
 12028 017a 1F       		.uleb128 0x1f
 12029 017b 17       		.uleb128 0x17
 12030 017c 01       		.byte	0x1
 12031 017d 0B       		.uleb128 0xb
 12032 017e 0B       		.uleb128 0xb
 12033 017f 3A       		.uleb128 0x3a
ARM GAS  /tmp/cc18izUm.s 			page 276


 12034 0180 0B       		.uleb128 0xb
 12035 0181 3B       		.uleb128 0x3b
 12036 0182 05       		.uleb128 0x5
 12037 0183 01       		.uleb128 0x1
 12038 0184 13       		.uleb128 0x13
 12039 0185 00       		.byte	0
 12040 0186 00       		.byte	0
 12041 0187 20       		.uleb128 0x20
 12042 0188 0D       		.uleb128 0xd
 12043 0189 00       		.byte	0
 12044 018a 03       		.uleb128 0x3
 12045 018b 0E       		.uleb128 0xe
 12046 018c 3A       		.uleb128 0x3a
 12047 018d 0B       		.uleb128 0xb
 12048 018e 3B       		.uleb128 0x3b
 12049 018f 05       		.uleb128 0x5
 12050 0190 49       		.uleb128 0x49
 12051 0191 13       		.uleb128 0x13
 12052 0192 00       		.byte	0
 12053 0193 00       		.byte	0
 12054 0194 21       		.uleb128 0x21
 12055 0195 15       		.uleb128 0x15
 12056 0196 01       		.byte	0x1
 12057 0197 27       		.uleb128 0x27
 12058 0198 19       		.uleb128 0x19
 12059 0199 01       		.uleb128 0x1
 12060 019a 13       		.uleb128 0x13
 12061 019b 00       		.byte	0
 12062 019c 00       		.byte	0
 12063 019d 22       		.uleb128 0x22
 12064 019e 04       		.uleb128 0x4
 12065 019f 01       		.byte	0x1
 12066 01a0 03       		.uleb128 0x3
 12067 01a1 0E       		.uleb128 0xe
 12068 01a2 0B       		.uleb128 0xb
 12069 01a3 0B       		.uleb128 0xb
 12070 01a4 49       		.uleb128 0x49
 12071 01a5 13       		.uleb128 0x13
 12072 01a6 3A       		.uleb128 0x3a
 12073 01a7 0B       		.uleb128 0xb
 12074 01a8 3B       		.uleb128 0x3b
 12075 01a9 05       		.uleb128 0x5
 12076 01aa 01       		.uleb128 0x1
 12077 01ab 13       		.uleb128 0x13
 12078 01ac 00       		.byte	0
 12079 01ad 00       		.byte	0
 12080 01ae 23       		.uleb128 0x23
 12081 01af 28       		.uleb128 0x28
 12082 01b0 00       		.byte	0
 12083 01b1 03       		.uleb128 0x3
 12084 01b2 0E       		.uleb128 0xe
 12085 01b3 1C       		.uleb128 0x1c
 12086 01b4 0D       		.uleb128 0xd
 12087 01b5 00       		.byte	0
 12088 01b6 00       		.byte	0
 12089 01b7 24       		.uleb128 0x24
 12090 01b8 28       		.uleb128 0x28
ARM GAS  /tmp/cc18izUm.s 			page 277


 12091 01b9 00       		.byte	0
 12092 01ba 03       		.uleb128 0x3
 12093 01bb 0E       		.uleb128 0xe
 12094 01bc 1C       		.uleb128 0x1c
 12095 01bd 0B       		.uleb128 0xb
 12096 01be 00       		.byte	0
 12097 01bf 00       		.byte	0
 12098 01c0 25       		.uleb128 0x25
 12099 01c1 21       		.uleb128 0x21
 12100 01c2 00       		.byte	0
 12101 01c3 00       		.byte	0
 12102 01c4 00       		.byte	0
 12103 01c5 26       		.uleb128 0x26
 12104 01c6 0D       		.uleb128 0xd
 12105 01c7 00       		.byte	0
 12106 01c8 03       		.uleb128 0x3
 12107 01c9 08       		.uleb128 0x8
 12108 01ca 3A       		.uleb128 0x3a
 12109 01cb 0B       		.uleb128 0xb
 12110 01cc 3B       		.uleb128 0x3b
 12111 01cd 05       		.uleb128 0x5
 12112 01ce 49       		.uleb128 0x49
 12113 01cf 13       		.uleb128 0x13
 12114 01d0 38       		.uleb128 0x38
 12115 01d1 0B       		.uleb128 0xb
 12116 01d2 00       		.byte	0
 12117 01d3 00       		.byte	0
 12118 01d4 27       		.uleb128 0x27
 12119 01d5 34       		.uleb128 0x34
 12120 01d6 00       		.byte	0
 12121 01d7 03       		.uleb128 0x3
 12122 01d8 08       		.uleb128 0x8
 12123 01d9 3A       		.uleb128 0x3a
 12124 01da 0B       		.uleb128 0xb
 12125 01db 3B       		.uleb128 0x3b
 12126 01dc 05       		.uleb128 0x5
 12127 01dd 49       		.uleb128 0x49
 12128 01de 13       		.uleb128 0x13
 12129 01df 3F       		.uleb128 0x3f
 12130 01e0 19       		.uleb128 0x19
 12131 01e1 02       		.uleb128 0x2
 12132 01e2 18       		.uleb128 0x18
 12133 01e3 00       		.byte	0
 12134 01e4 00       		.byte	0
 12135 01e5 28       		.uleb128 0x28
 12136 01e6 34       		.uleb128 0x34
 12137 01e7 00       		.byte	0
 12138 01e8 03       		.uleb128 0x3
 12139 01e9 0E       		.uleb128 0xe
 12140 01ea 3A       		.uleb128 0x3a
 12141 01eb 0B       		.uleb128 0xb
 12142 01ec 3B       		.uleb128 0x3b
 12143 01ed 05       		.uleb128 0x5
 12144 01ee 49       		.uleb128 0x49
 12145 01ef 13       		.uleb128 0x13
 12146 01f0 3F       		.uleb128 0x3f
 12147 01f1 19       		.uleb128 0x19
ARM GAS  /tmp/cc18izUm.s 			page 278


 12148 01f2 02       		.uleb128 0x2
 12149 01f3 18       		.uleb128 0x18
 12150 01f4 00       		.byte	0
 12151 01f5 00       		.byte	0
 12152 01f6 29       		.uleb128 0x29
 12153 01f7 34       		.uleb128 0x34
 12154 01f8 00       		.byte	0
 12155 01f9 03       		.uleb128 0x3
 12156 01fa 08       		.uleb128 0x8
 12157 01fb 3A       		.uleb128 0x3a
 12158 01fc 0B       		.uleb128 0xb
 12159 01fd 3B       		.uleb128 0x3b
 12160 01fe 05       		.uleb128 0x5
 12161 01ff 49       		.uleb128 0x49
 12162 0200 13       		.uleb128 0x13
 12163 0201 02       		.uleb128 0x2
 12164 0202 18       		.uleb128 0x18
 12165 0203 00       		.byte	0
 12166 0204 00       		.byte	0
 12167 0205 2A       		.uleb128 0x2a
 12168 0206 2E       		.uleb128 0x2e
 12169 0207 01       		.byte	0x1
 12170 0208 3F       		.uleb128 0x3f
 12171 0209 19       		.uleb128 0x19
 12172 020a 03       		.uleb128 0x3
 12173 020b 0E       		.uleb128 0xe
 12174 020c 3A       		.uleb128 0x3a
 12175 020d 0B       		.uleb128 0xb
 12176 020e 3B       		.uleb128 0x3b
 12177 020f 0B       		.uleb128 0xb
 12178 0210 27       		.uleb128 0x27
 12179 0211 19       		.uleb128 0x19
 12180 0212 11       		.uleb128 0x11
 12181 0213 01       		.uleb128 0x1
 12182 0214 12       		.uleb128 0x12
 12183 0215 06       		.uleb128 0x6
 12184 0216 40       		.uleb128 0x40
 12185 0217 18       		.uleb128 0x18
 12186 0218 9742     		.uleb128 0x2117
 12187 021a 19       		.uleb128 0x19
 12188 021b 01       		.uleb128 0x1
 12189 021c 13       		.uleb128 0x13
 12190 021d 00       		.byte	0
 12191 021e 00       		.byte	0
 12192 021f 2B       		.uleb128 0x2b
 12193 0220 05       		.uleb128 0x5
 12194 0221 00       		.byte	0
 12195 0222 03       		.uleb128 0x3
 12196 0223 0E       		.uleb128 0xe
 12197 0224 3A       		.uleb128 0x3a
 12198 0225 0B       		.uleb128 0xb
 12199 0226 3B       		.uleb128 0x3b
 12200 0227 05       		.uleb128 0x5
 12201 0228 49       		.uleb128 0x49
 12202 0229 13       		.uleb128 0x13
 12203 022a 02       		.uleb128 0x2
 12204 022b 18       		.uleb128 0x18
ARM GAS  /tmp/cc18izUm.s 			page 279


 12205 022c 00       		.byte	0
 12206 022d 00       		.byte	0
 12207 022e 2C       		.uleb128 0x2c
 12208 022f 2E       		.uleb128 0x2e
 12209 0230 01       		.byte	0x1
 12210 0231 3F       		.uleb128 0x3f
 12211 0232 19       		.uleb128 0x19
 12212 0233 03       		.uleb128 0x3
 12213 0234 0E       		.uleb128 0xe
 12214 0235 3A       		.uleb128 0x3a
 12215 0236 0B       		.uleb128 0xb
 12216 0237 3B       		.uleb128 0x3b
 12217 0238 0B       		.uleb128 0xb
 12218 0239 27       		.uleb128 0x27
 12219 023a 19       		.uleb128 0x19
 12220 023b 49       		.uleb128 0x49
 12221 023c 13       		.uleb128 0x13
 12222 023d 11       		.uleb128 0x11
 12223 023e 01       		.uleb128 0x1
 12224 023f 12       		.uleb128 0x12
 12225 0240 06       		.uleb128 0x6
 12226 0241 40       		.uleb128 0x40
 12227 0242 18       		.uleb128 0x18
 12228 0243 9742     		.uleb128 0x2117
 12229 0245 19       		.uleb128 0x19
 12230 0246 01       		.uleb128 0x1
 12231 0247 13       		.uleb128 0x13
 12232 0248 00       		.byte	0
 12233 0249 00       		.byte	0
 12234 024a 2D       		.uleb128 0x2d
 12235 024b 05       		.uleb128 0x5
 12236 024c 00       		.byte	0
 12237 024d 03       		.uleb128 0x3
 12238 024e 0E       		.uleb128 0xe
 12239 024f 3A       		.uleb128 0x3a
 12240 0250 0B       		.uleb128 0xb
 12241 0251 3B       		.uleb128 0x3b
 12242 0252 05       		.uleb128 0x5
 12243 0253 49       		.uleb128 0x49
 12244 0254 13       		.uleb128 0x13
 12245 0255 02       		.uleb128 0x2
 12246 0256 17       		.uleb128 0x17
 12247 0257 00       		.byte	0
 12248 0258 00       		.byte	0
 12249 0259 2E       		.uleb128 0x2e
 12250 025a 34       		.uleb128 0x34
 12251 025b 00       		.byte	0
 12252 025c 03       		.uleb128 0x3
 12253 025d 0E       		.uleb128 0xe
 12254 025e 3A       		.uleb128 0x3a
 12255 025f 0B       		.uleb128 0xb
 12256 0260 3B       		.uleb128 0x3b
 12257 0261 05       		.uleb128 0x5
 12258 0262 49       		.uleb128 0x49
 12259 0263 13       		.uleb128 0x13
 12260 0264 02       		.uleb128 0x2
 12261 0265 18       		.uleb128 0x18
ARM GAS  /tmp/cc18izUm.s 			page 280


 12262 0266 00       		.byte	0
 12263 0267 00       		.byte	0
 12264 0268 2F       		.uleb128 0x2f
 12265 0269 0A       		.uleb128 0xa
 12266 026a 00       		.byte	0
 12267 026b 03       		.uleb128 0x3
 12268 026c 0E       		.uleb128 0xe
 12269 026d 3A       		.uleb128 0x3a
 12270 026e 0B       		.uleb128 0xb
 12271 026f 3B       		.uleb128 0x3b
 12272 0270 05       		.uleb128 0x5
 12273 0271 11       		.uleb128 0x11
 12274 0272 01       		.uleb128 0x1
 12275 0273 00       		.byte	0
 12276 0274 00       		.byte	0
 12277 0275 30       		.uleb128 0x30
 12278 0276 0B       		.uleb128 0xb
 12279 0277 01       		.byte	0x1
 12280 0278 55       		.uleb128 0x55
 12281 0279 17       		.uleb128 0x17
 12282 027a 01       		.uleb128 0x1
 12283 027b 13       		.uleb128 0x13
 12284 027c 00       		.byte	0
 12285 027d 00       		.byte	0
 12286 027e 31       		.uleb128 0x31
 12287 027f 34       		.uleb128 0x34
 12288 0280 00       		.byte	0
 12289 0281 03       		.uleb128 0x3
 12290 0282 0E       		.uleb128 0xe
 12291 0283 3A       		.uleb128 0x3a
 12292 0284 0B       		.uleb128 0xb
 12293 0285 3B       		.uleb128 0x3b
 12294 0286 05       		.uleb128 0x5
 12295 0287 49       		.uleb128 0x49
 12296 0288 13       		.uleb128 0x13
 12297 0289 02       		.uleb128 0x2
 12298 028a 17       		.uleb128 0x17
 12299 028b 00       		.byte	0
 12300 028c 00       		.byte	0
 12301 028d 32       		.uleb128 0x32
 12302 028e 1D       		.uleb128 0x1d
 12303 028f 01       		.byte	0x1
 12304 0290 31       		.uleb128 0x31
 12305 0291 13       		.uleb128 0x13
 12306 0292 11       		.uleb128 0x11
 12307 0293 01       		.uleb128 0x1
 12308 0294 12       		.uleb128 0x12
 12309 0295 06       		.uleb128 0x6
 12310 0296 58       		.uleb128 0x58
 12311 0297 0B       		.uleb128 0xb
 12312 0298 59       		.uleb128 0x59
 12313 0299 05       		.uleb128 0x5
 12314 029a 01       		.uleb128 0x1
 12315 029b 13       		.uleb128 0x13
 12316 029c 00       		.byte	0
 12317 029d 00       		.byte	0
 12318 029e 33       		.uleb128 0x33
ARM GAS  /tmp/cc18izUm.s 			page 281


 12319 029f 05       		.uleb128 0x5
 12320 02a0 00       		.byte	0
 12321 02a1 31       		.uleb128 0x31
 12322 02a2 13       		.uleb128 0x13
 12323 02a3 02       		.uleb128 0x2
 12324 02a4 17       		.uleb128 0x17
 12325 02a5 00       		.byte	0
 12326 02a6 00       		.byte	0
 12327 02a7 34       		.uleb128 0x34
 12328 02a8 898201   		.uleb128 0x4109
 12329 02ab 01       		.byte	0x1
 12330 02ac 11       		.uleb128 0x11
 12331 02ad 01       		.uleb128 0x1
 12332 02ae 31       		.uleb128 0x31
 12333 02af 13       		.uleb128 0x13
 12334 02b0 01       		.uleb128 0x1
 12335 02b1 13       		.uleb128 0x13
 12336 02b2 00       		.byte	0
 12337 02b3 00       		.byte	0
 12338 02b4 35       		.uleb128 0x35
 12339 02b5 8A8201   		.uleb128 0x410a
 12340 02b8 00       		.byte	0
 12341 02b9 02       		.uleb128 0x2
 12342 02ba 18       		.uleb128 0x18
 12343 02bb 9142     		.uleb128 0x2111
 12344 02bd 18       		.uleb128 0x18
 12345 02be 00       		.byte	0
 12346 02bf 00       		.byte	0
 12347 02c0 36       		.uleb128 0x36
 12348 02c1 898201   		.uleb128 0x4109
 12349 02c4 01       		.byte	0x1
 12350 02c5 11       		.uleb128 0x11
 12351 02c6 01       		.uleb128 0x1
 12352 02c7 31       		.uleb128 0x31
 12353 02c8 13       		.uleb128 0x13
 12354 02c9 00       		.byte	0
 12355 02ca 00       		.byte	0
 12356 02cb 37       		.uleb128 0x37
 12357 02cc 0B       		.uleb128 0xb
 12358 02cd 01       		.byte	0x1
 12359 02ce 11       		.uleb128 0x11
 12360 02cf 01       		.uleb128 0x1
 12361 02d0 12       		.uleb128 0x12
 12362 02d1 06       		.uleb128 0x6
 12363 02d2 01       		.uleb128 0x1
 12364 02d3 13       		.uleb128 0x13
 12365 02d4 00       		.byte	0
 12366 02d5 00       		.byte	0
 12367 02d6 38       		.uleb128 0x38
 12368 02d7 34       		.uleb128 0x34
 12369 02d8 00       		.byte	0
 12370 02d9 03       		.uleb128 0x3
 12371 02da 08       		.uleb128 0x8
 12372 02db 3A       		.uleb128 0x3a
 12373 02dc 0B       		.uleb128 0xb
 12374 02dd 3B       		.uleb128 0x3b
 12375 02de 05       		.uleb128 0x5
ARM GAS  /tmp/cc18izUm.s 			page 282


 12376 02df 49       		.uleb128 0x49
 12377 02e0 13       		.uleb128 0x13
 12378 02e1 02       		.uleb128 0x2
 12379 02e2 17       		.uleb128 0x17
 12380 02e3 00       		.byte	0
 12381 02e4 00       		.byte	0
 12382 02e5 39       		.uleb128 0x39
 12383 02e6 34       		.uleb128 0x34
 12384 02e7 00       		.byte	0
 12385 02e8 03       		.uleb128 0x3
 12386 02e9 0E       		.uleb128 0xe
 12387 02ea 3A       		.uleb128 0x3a
 12388 02eb 0B       		.uleb128 0xb
 12389 02ec 3B       		.uleb128 0x3b
 12390 02ed 05       		.uleb128 0x5
 12391 02ee 49       		.uleb128 0x49
 12392 02ef 13       		.uleb128 0x13
 12393 02f0 00       		.byte	0
 12394 02f1 00       		.byte	0
 12395 02f2 3A       		.uleb128 0x3a
 12396 02f3 898201   		.uleb128 0x4109
 12397 02f6 00       		.byte	0
 12398 02f7 11       		.uleb128 0x11
 12399 02f8 01       		.uleb128 0x1
 12400 02f9 31       		.uleb128 0x31
 12401 02fa 13       		.uleb128 0x13
 12402 02fb 00       		.byte	0
 12403 02fc 00       		.byte	0
 12404 02fd 3B       		.uleb128 0x3b
 12405 02fe 05       		.uleb128 0x5
 12406 02ff 00       		.byte	0
 12407 0300 03       		.uleb128 0x3
 12408 0301 08       		.uleb128 0x8
 12409 0302 3A       		.uleb128 0x3a
 12410 0303 0B       		.uleb128 0xb
 12411 0304 3B       		.uleb128 0x3b
 12412 0305 05       		.uleb128 0x5
 12413 0306 49       		.uleb128 0x49
 12414 0307 13       		.uleb128 0x13
 12415 0308 02       		.uleb128 0x2
 12416 0309 17       		.uleb128 0x17
 12417 030a 00       		.byte	0
 12418 030b 00       		.byte	0
 12419 030c 3C       		.uleb128 0x3c
 12420 030d 2E       		.uleb128 0x2e
 12421 030e 01       		.byte	0x1
 12422 030f 3F       		.uleb128 0x3f
 12423 0310 19       		.uleb128 0x19
 12424 0311 03       		.uleb128 0x3
 12425 0312 0E       		.uleb128 0xe
 12426 0313 3A       		.uleb128 0x3a
 12427 0314 0B       		.uleb128 0xb
 12428 0315 3B       		.uleb128 0x3b
 12429 0316 0B       		.uleb128 0xb
 12430 0317 27       		.uleb128 0x27
 12431 0318 19       		.uleb128 0x19
 12432 0319 49       		.uleb128 0x49
ARM GAS  /tmp/cc18izUm.s 			page 283


 12433 031a 13       		.uleb128 0x13
 12434 031b 11       		.uleb128 0x11
 12435 031c 01       		.uleb128 0x1
 12436 031d 12       		.uleb128 0x12
 12437 031e 06       		.uleb128 0x6
 12438 031f 40       		.uleb128 0x40
 12439 0320 18       		.uleb128 0x18
 12440 0321 9642     		.uleb128 0x2116
 12441 0323 19       		.uleb128 0x19
 12442 0324 01       		.uleb128 0x1
 12443 0325 13       		.uleb128 0x13
 12444 0326 00       		.byte	0
 12445 0327 00       		.byte	0
 12446 0328 3D       		.uleb128 0x3d
 12447 0329 34       		.uleb128 0x34
 12448 032a 00       		.byte	0
 12449 032b 03       		.uleb128 0x3
 12450 032c 0E       		.uleb128 0xe
 12451 032d 3A       		.uleb128 0x3a
 12452 032e 0B       		.uleb128 0xb
 12453 032f 3B       		.uleb128 0x3b
 12454 0330 05       		.uleb128 0x5
 12455 0331 49       		.uleb128 0x49
 12456 0332 13       		.uleb128 0x13
 12457 0333 1C       		.uleb128 0x1c
 12458 0334 0B       		.uleb128 0xb
 12459 0335 00       		.byte	0
 12460 0336 00       		.byte	0
 12461 0337 3E       		.uleb128 0x3e
 12462 0338 1D       		.uleb128 0x1d
 12463 0339 01       		.byte	0x1
 12464 033a 31       		.uleb128 0x31
 12465 033b 13       		.uleb128 0x13
 12466 033c 52       		.uleb128 0x52
 12467 033d 01       		.uleb128 0x1
 12468 033e 55       		.uleb128 0x55
 12469 033f 17       		.uleb128 0x17
 12470 0340 58       		.uleb128 0x58
 12471 0341 0B       		.uleb128 0xb
 12472 0342 59       		.uleb128 0x59
 12473 0343 05       		.uleb128 0x5
 12474 0344 01       		.uleb128 0x1
 12475 0345 13       		.uleb128 0x13
 12476 0346 00       		.byte	0
 12477 0347 00       		.byte	0
 12478 0348 3F       		.uleb128 0x3f
 12479 0349 0B       		.uleb128 0xb
 12480 034a 01       		.byte	0x1
 12481 034b 55       		.uleb128 0x55
 12482 034c 17       		.uleb128 0x17
 12483 034d 00       		.byte	0
 12484 034e 00       		.byte	0
 12485 034f 40       		.uleb128 0x40
 12486 0350 34       		.uleb128 0x34
 12487 0351 00       		.byte	0
 12488 0352 31       		.uleb128 0x31
 12489 0353 13       		.uleb128 0x13
ARM GAS  /tmp/cc18izUm.s 			page 284


 12490 0354 02       		.uleb128 0x2
 12491 0355 17       		.uleb128 0x17
 12492 0356 00       		.byte	0
 12493 0357 00       		.byte	0
 12494 0358 41       		.uleb128 0x41
 12495 0359 34       		.uleb128 0x34
 12496 035a 00       		.byte	0
 12497 035b 31       		.uleb128 0x31
 12498 035c 13       		.uleb128 0x13
 12499 035d 02       		.uleb128 0x2
 12500 035e 18       		.uleb128 0x18
 12501 035f 00       		.byte	0
 12502 0360 00       		.byte	0
 12503 0361 42       		.uleb128 0x42
 12504 0362 1D       		.uleb128 0x1d
 12505 0363 01       		.byte	0x1
 12506 0364 31       		.uleb128 0x31
 12507 0365 13       		.uleb128 0x13
 12508 0366 52       		.uleb128 0x52
 12509 0367 01       		.uleb128 0x1
 12510 0368 55       		.uleb128 0x55
 12511 0369 17       		.uleb128 0x17
 12512 036a 58       		.uleb128 0x58
 12513 036b 0B       		.uleb128 0xb
 12514 036c 59       		.uleb128 0x59
 12515 036d 05       		.uleb128 0x5
 12516 036e 00       		.byte	0
 12517 036f 00       		.byte	0
 12518 0370 43       		.uleb128 0x43
 12519 0371 2E       		.uleb128 0x2e
 12520 0372 01       		.byte	0x1
 12521 0373 03       		.uleb128 0x3
 12522 0374 0E       		.uleb128 0xe
 12523 0375 3A       		.uleb128 0x3a
 12524 0376 0B       		.uleb128 0xb
 12525 0377 3B       		.uleb128 0x3b
 12526 0378 05       		.uleb128 0x5
 12527 0379 27       		.uleb128 0x27
 12528 037a 19       		.uleb128 0x19
 12529 037b 49       		.uleb128 0x49
 12530 037c 13       		.uleb128 0x13
 12531 037d 11       		.uleb128 0x11
 12532 037e 01       		.uleb128 0x1
 12533 037f 12       		.uleb128 0x12
 12534 0380 06       		.uleb128 0x6
 12535 0381 40       		.uleb128 0x40
 12536 0382 18       		.uleb128 0x18
 12537 0383 9642     		.uleb128 0x2116
 12538 0385 19       		.uleb128 0x19
 12539 0386 01       		.uleb128 0x1
 12540 0387 13       		.uleb128 0x13
 12541 0388 00       		.byte	0
 12542 0389 00       		.byte	0
 12543 038a 44       		.uleb128 0x44
 12544 038b 2E       		.uleb128 0x2e
 12545 038c 01       		.byte	0x1
 12546 038d 03       		.uleb128 0x3
ARM GAS  /tmp/cc18izUm.s 			page 285


 12547 038e 0E       		.uleb128 0xe
 12548 038f 3A       		.uleb128 0x3a
 12549 0390 0B       		.uleb128 0xb
 12550 0391 3B       		.uleb128 0x3b
 12551 0392 05       		.uleb128 0x5
 12552 0393 27       		.uleb128 0x27
 12553 0394 19       		.uleb128 0x19
 12554 0395 49       		.uleb128 0x49
 12555 0396 13       		.uleb128 0x13
 12556 0397 20       		.uleb128 0x20
 12557 0398 0B       		.uleb128 0xb
 12558 0399 01       		.uleb128 0x1
 12559 039a 13       		.uleb128 0x13
 12560 039b 00       		.byte	0
 12561 039c 00       		.byte	0
 12562 039d 45       		.uleb128 0x45
 12563 039e 05       		.uleb128 0x5
 12564 039f 00       		.byte	0
 12565 03a0 03       		.uleb128 0x3
 12566 03a1 0E       		.uleb128 0xe
 12567 03a2 3A       		.uleb128 0x3a
 12568 03a3 0B       		.uleb128 0xb
 12569 03a4 3B       		.uleb128 0x3b
 12570 03a5 05       		.uleb128 0x5
 12571 03a6 49       		.uleb128 0x49
 12572 03a7 13       		.uleb128 0x13
 12573 03a8 00       		.byte	0
 12574 03a9 00       		.byte	0
 12575 03aa 46       		.uleb128 0x46
 12576 03ab 34       		.uleb128 0x34
 12577 03ac 00       		.byte	0
 12578 03ad 03       		.uleb128 0x3
 12579 03ae 08       		.uleb128 0x8
 12580 03af 3A       		.uleb128 0x3a
 12581 03b0 0B       		.uleb128 0xb
 12582 03b1 3B       		.uleb128 0x3b
 12583 03b2 05       		.uleb128 0x5
 12584 03b3 49       		.uleb128 0x49
 12585 03b4 13       		.uleb128 0x13
 12586 03b5 00       		.byte	0
 12587 03b6 00       		.byte	0
 12588 03b7 47       		.uleb128 0x47
 12589 03b8 2E       		.uleb128 0x2e
 12590 03b9 01       		.byte	0x1
 12591 03ba 3F       		.uleb128 0x3f
 12592 03bb 19       		.uleb128 0x19
 12593 03bc 03       		.uleb128 0x3
 12594 03bd 0E       		.uleb128 0xe
 12595 03be 3A       		.uleb128 0x3a
 12596 03bf 0B       		.uleb128 0xb
 12597 03c0 3B       		.uleb128 0x3b
 12598 03c1 0B       		.uleb128 0xb
 12599 03c2 27       		.uleb128 0x27
 12600 03c3 19       		.uleb128 0x19
 12601 03c4 49       		.uleb128 0x49
 12602 03c5 13       		.uleb128 0x13
 12603 03c6 20       		.uleb128 0x20
ARM GAS  /tmp/cc18izUm.s 			page 286


 12604 03c7 0B       		.uleb128 0xb
 12605 03c8 01       		.uleb128 0x1
 12606 03c9 13       		.uleb128 0x13
 12607 03ca 00       		.byte	0
 12608 03cb 00       		.byte	0
 12609 03cc 48       		.uleb128 0x48
 12610 03cd 2E       		.uleb128 0x2e
 12611 03ce 01       		.byte	0x1
 12612 03cf 03       		.uleb128 0x3
 12613 03d0 0E       		.uleb128 0xe
 12614 03d1 3A       		.uleb128 0x3a
 12615 03d2 0B       		.uleb128 0xb
 12616 03d3 3B       		.uleb128 0x3b
 12617 03d4 05       		.uleb128 0x5
 12618 03d5 27       		.uleb128 0x27
 12619 03d6 19       		.uleb128 0x19
 12620 03d7 49       		.uleb128 0x49
 12621 03d8 13       		.uleb128 0x13
 12622 03d9 11       		.uleb128 0x11
 12623 03da 01       		.uleb128 0x1
 12624 03db 12       		.uleb128 0x12
 12625 03dc 06       		.uleb128 0x6
 12626 03dd 40       		.uleb128 0x40
 12627 03de 18       		.uleb128 0x18
 12628 03df 9742     		.uleb128 0x2117
 12629 03e1 19       		.uleb128 0x19
 12630 03e2 01       		.uleb128 0x1
 12631 03e3 13       		.uleb128 0x13
 12632 03e4 00       		.byte	0
 12633 03e5 00       		.byte	0
 12634 03e6 49       		.uleb128 0x49
 12635 03e7 2E       		.uleb128 0x2e
 12636 03e8 01       		.byte	0x1
 12637 03e9 31       		.uleb128 0x31
 12638 03ea 13       		.uleb128 0x13
 12639 03eb 11       		.uleb128 0x11
 12640 03ec 01       		.uleb128 0x1
 12641 03ed 12       		.uleb128 0x12
 12642 03ee 06       		.uleb128 0x6
 12643 03ef 40       		.uleb128 0x40
 12644 03f0 18       		.uleb128 0x18
 12645 03f1 9742     		.uleb128 0x2117
 12646 03f3 19       		.uleb128 0x19
 12647 03f4 01       		.uleb128 0x1
 12648 03f5 13       		.uleb128 0x13
 12649 03f6 00       		.byte	0
 12650 03f7 00       		.byte	0
 12651 03f8 4A       		.uleb128 0x4a
 12652 03f9 2E       		.uleb128 0x2e
 12653 03fa 00       		.byte	0
 12654 03fb 3F       		.uleb128 0x3f
 12655 03fc 19       		.uleb128 0x19
 12656 03fd 3C       		.uleb128 0x3c
 12657 03fe 19       		.uleb128 0x19
 12658 03ff 6E       		.uleb128 0x6e
 12659 0400 0E       		.uleb128 0xe
 12660 0401 03       		.uleb128 0x3
ARM GAS  /tmp/cc18izUm.s 			page 287


 12661 0402 0E       		.uleb128 0xe
 12662 0403 3A       		.uleb128 0x3a
 12663 0404 0B       		.uleb128 0xb
 12664 0405 3B       		.uleb128 0x3b
 12665 0406 0B       		.uleb128 0xb
 12666 0407 00       		.byte	0
 12667 0408 00       		.byte	0
 12668 0409 4B       		.uleb128 0x4b
 12669 040a 2E       		.uleb128 0x2e
 12670 040b 00       		.byte	0
 12671 040c 3F       		.uleb128 0x3f
 12672 040d 19       		.uleb128 0x19
 12673 040e 3C       		.uleb128 0x3c
 12674 040f 19       		.uleb128 0x19
 12675 0410 6E       		.uleb128 0x6e
 12676 0411 0E       		.uleb128 0xe
 12677 0412 03       		.uleb128 0x3
 12678 0413 0E       		.uleb128 0xe
 12679 0414 3A       		.uleb128 0x3a
 12680 0415 0B       		.uleb128 0xb
 12681 0416 3B       		.uleb128 0x3b
 12682 0417 0B       		.uleb128 0xb
 12683 0418 6E       		.uleb128 0x6e
 12684 0419 0E       		.uleb128 0xe
 12685 041a 00       		.byte	0
 12686 041b 00       		.byte	0
 12687 041c 00       		.byte	0
 12688              		.section	.debug_loc,"",%progbits
 12689              	.Ldebug_loc0:
 12690              	.LLST100:
 12691 0000 481C0000 		.4byte	.LVL533-.Ltext0
 12692 0004 6E1C0000 		.4byte	.LVL539-.Ltext0
 12693 0008 0100     		.2byte	0x1
 12694 000a 50       		.byte	0x50
 12695 000b 6E1C0000 		.4byte	.LVL539-.Ltext0
 12696 000f 701C0000 		.4byte	.LVL540-.Ltext0
 12697 0013 0400     		.2byte	0x4
 12698 0015 F3       		.byte	0xf3
 12699 0016 01       		.uleb128 0x1
 12700 0017 50       		.byte	0x50
 12701 0018 9F       		.byte	0x9f
 12702 0019 701C0000 		.4byte	.LVL540-.Ltext0
 12703 001d AA1C0000 		.4byte	.LVL546-.Ltext0
 12704 0021 0100     		.2byte	0x1
 12705 0023 50       		.byte	0x50
 12706 0024 AA1C0000 		.4byte	.LVL546-.Ltext0
 12707 0028 661D0000 		.4byte	.LVL564-.Ltext0
 12708 002c 0400     		.2byte	0x4
 12709 002e F3       		.byte	0xf3
 12710 002f 01       		.uleb128 0x1
 12711 0030 50       		.byte	0x50
 12712 0031 9F       		.byte	0x9f
 12713 0032 661D0000 		.4byte	.LVL564-.Ltext0
 12714 0036 6C1D0000 		.4byte	.LVL566-.Ltext0
 12715 003a 0100     		.2byte	0x1
 12716 003c 50       		.byte	0x50
 12717 003d 6C1D0000 		.4byte	.LVL566-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 288


 12718 0041 1E1E0000 		.4byte	.LVL575-.Ltext0
 12719 0045 0400     		.2byte	0x4
 12720 0047 F3       		.byte	0xf3
 12721 0048 01       		.uleb128 0x1
 12722 0049 50       		.byte	0x50
 12723 004a 9F       		.byte	0x9f
 12724 004b 1E1E0000 		.4byte	.LVL575-.Ltext0
 12725 004f 221E0000 		.4byte	.LVL576-.Ltext0
 12726 0053 0100     		.2byte	0x1
 12727 0055 50       		.byte	0x50
 12728 0056 221E0000 		.4byte	.LVL576-.Ltext0
 12729 005a 301E0000 		.4byte	.LFE108-.Ltext0
 12730 005e 0400     		.2byte	0x4
 12731 0060 F3       		.byte	0xf3
 12732 0061 01       		.uleb128 0x1
 12733 0062 50       		.byte	0x50
 12734 0063 9F       		.byte	0x9f
 12735 0064 00000000 		.4byte	0
 12736 0068 00000000 		.4byte	0
 12737              	.LLST101:
 12738 006c 481C0000 		.4byte	.LVL533-.Ltext0
 12739 0070 581C0000 		.4byte	.LVL535-.Ltext0
 12740 0074 0100     		.2byte	0x1
 12741 0076 51       		.byte	0x51
 12742 0077 581C0000 		.4byte	.LVL535-.Ltext0
 12743 007b 701C0000 		.4byte	.LVL540-.Ltext0
 12744 007f 0400     		.2byte	0x4
 12745 0081 F3       		.byte	0xf3
 12746 0082 01       		.uleb128 0x1
 12747 0083 51       		.byte	0x51
 12748 0084 9F       		.byte	0x9f
 12749 0085 701C0000 		.4byte	.LVL540-.Ltext0
 12750 0089 8C1C0000 		.4byte	.LVL544-.Ltext0
 12751 008d 0100     		.2byte	0x1
 12752 008f 51       		.byte	0x51
 12753 0090 8C1C0000 		.4byte	.LVL544-.Ltext0
 12754 0094 181D0000 		.4byte	.LVL557-.Ltext0
 12755 0098 0100     		.2byte	0x1
 12756 009a 54       		.byte	0x54
 12757 009b 661D0000 		.4byte	.LVL564-.Ltext0
 12758 009f 6A1D0000 		.4byte	.LVL565-.Ltext0
 12759 00a3 0100     		.2byte	0x1
 12760 00a5 51       		.byte	0x51
 12761 00a6 6A1D0000 		.4byte	.LVL565-.Ltext0
 12762 00aa B01D0000 		.4byte	.LVL570-.Ltext0
 12763 00ae 0100     		.2byte	0x1
 12764 00b0 54       		.byte	0x54
 12765 00b1 1E1E0000 		.4byte	.LVL575-.Ltext0
 12766 00b5 301E0000 		.4byte	.LFE108-.Ltext0
 12767 00b9 0100     		.2byte	0x1
 12768 00bb 54       		.byte	0x54
 12769 00bc 00000000 		.4byte	0
 12770 00c0 00000000 		.4byte	0
 12771              	.LLST102:
 12772 00c4 481C0000 		.4byte	.LVL533-.Ltext0
 12773 00c8 5E1C0000 		.4byte	.LVL536-.Ltext0
 12774 00cc 0100     		.2byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 289


 12775 00ce 52       		.byte	0x52
 12776 00cf 5E1C0000 		.4byte	.LVL536-.Ltext0
 12777 00d3 701C0000 		.4byte	.LVL540-.Ltext0
 12778 00d7 0400     		.2byte	0x4
 12779 00d9 F3       		.byte	0xf3
 12780 00da 01       		.uleb128 0x1
 12781 00db 52       		.byte	0x52
 12782 00dc 9F       		.byte	0x9f
 12783 00dd 701C0000 		.4byte	.LVL540-.Ltext0
 12784 00e1 A41C0000 		.4byte	.LVL545-.Ltext0
 12785 00e5 0100     		.2byte	0x1
 12786 00e7 52       		.byte	0x52
 12787 00e8 A41C0000 		.4byte	.LVL545-.Ltext0
 12788 00ec 661D0000 		.4byte	.LVL564-.Ltext0
 12789 00f0 0400     		.2byte	0x4
 12790 00f2 F3       		.byte	0xf3
 12791 00f3 01       		.uleb128 0x1
 12792 00f4 52       		.byte	0x52
 12793 00f5 9F       		.byte	0x9f
 12794 00f6 661D0000 		.4byte	.LVL564-.Ltext0
 12795 00fa 6F1D0000 		.4byte	.LVL567-1-.Ltext0
 12796 00fe 0100     		.2byte	0x1
 12797 0100 52       		.byte	0x52
 12798 0101 6F1D0000 		.4byte	.LVL567-1-.Ltext0
 12799 0105 1E1E0000 		.4byte	.LVL575-.Ltext0
 12800 0109 0400     		.2byte	0x4
 12801 010b F3       		.byte	0xf3
 12802 010c 01       		.uleb128 0x1
 12803 010d 52       		.byte	0x52
 12804 010e 9F       		.byte	0x9f
 12805 010f 1E1E0000 		.4byte	.LVL575-.Ltext0
 12806 0113 241E0000 		.4byte	.LVL577-.Ltext0
 12807 0117 0100     		.2byte	0x1
 12808 0119 52       		.byte	0x52
 12809 011a 241E0000 		.4byte	.LVL577-.Ltext0
 12810 011e 301E0000 		.4byte	.LFE108-.Ltext0
 12811 0122 0400     		.2byte	0x4
 12812 0124 F3       		.byte	0xf3
 12813 0125 01       		.uleb128 0x1
 12814 0126 52       		.byte	0x52
 12815 0127 9F       		.byte	0x9f
 12816 0128 00000000 		.4byte	0
 12817 012c 00000000 		.4byte	0
 12818              	.LLST104:
 12819 0130 821C0000 		.4byte	.LVL541-.Ltext0
 12820 0134 841C0000 		.4byte	.LVL542-.Ltext0
 12821 0138 0100     		.2byte	0x1
 12822 013a 56       		.byte	0x56
 12823 013b 861C0000 		.4byte	.LVL543-.Ltext0
 12824 013f 181D0000 		.4byte	.LVL557-.Ltext0
 12825 0143 0100     		.2byte	0x1
 12826 0145 56       		.byte	0x56
 12827 0146 6A1D0000 		.4byte	.LVL565-.Ltext0
 12828 014a 161E0000 		.4byte	.LVL573-.Ltext0
 12829 014e 0100     		.2byte	0x1
 12830 0150 56       		.byte	0x56
 12831 0151 1E1E0000 		.4byte	.LVL575-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 290


 12832 0155 301E0000 		.4byte	.LFE108-.Ltext0
 12833 0159 0100     		.2byte	0x1
 12834 015b 56       		.byte	0x56
 12835 015c 00000000 		.4byte	0
 12836 0160 00000000 		.4byte	0
 12837              	.LLST105:
 12838 0164 D01C0000 		.4byte	.LVL551-.Ltext0
 12839 0168 D41C0000 		.4byte	.LVL552-.Ltext0
 12840 016c 0600     		.2byte	0x6
 12841 016e 03       		.byte	0x3
 12842 016f 1F000000 		.4byte	st+31
 12843 0173 9F       		.byte	0x9f
 12844 0174 00000000 		.4byte	0
 12845 0178 00000000 		.4byte	0
 12846              	.LLST103:
 12847 017c 4E1C0000 		.4byte	.LVL534-.Ltext0
 12848 0180 5E1C0000 		.4byte	.LVL536-.Ltext0
 12849 0184 0200     		.2byte	0x2
 12850 0186 30       		.byte	0x30
 12851 0187 9F       		.byte	0x9f
 12852 0188 5E1C0000 		.4byte	.LVL536-.Ltext0
 12853 018c 621C0000 		.4byte	.LVL537-.Ltext0
 12854 0190 0900     		.2byte	0x9
 12855 0192 73       		.byte	0x73
 12856 0193 00       		.sleb128 0
 12857 0194 03       		.byte	0x3
 12858 0195 16000000 		.4byte	st+22
 12859 0199 1C       		.byte	0x1c
 12860 019a 9F       		.byte	0x9f
 12861 019b 621C0000 		.4byte	.LVL537-.Ltext0
 12862 019f 661C0000 		.4byte	.LVL538-.Ltext0
 12863 01a3 0900     		.2byte	0x9
 12864 01a5 73       		.byte	0x73
 12865 01a6 00       		.sleb128 0
 12866 01a7 03       		.byte	0x3
 12867 01a8 17000000 		.4byte	st+23
 12868 01ac 1C       		.byte	0x1c
 12869 01ad 9F       		.byte	0x9f
 12870 01ae 661C0000 		.4byte	.LVL538-.Ltext0
 12871 01b2 701C0000 		.4byte	.LVL540-.Ltext0
 12872 01b6 0900     		.2byte	0x9
 12873 01b8 73       		.byte	0x73
 12874 01b9 00       		.sleb128 0
 12875 01ba 03       		.byte	0x3
 12876 01bb 16000000 		.4byte	st+22
 12877 01bf 1C       		.byte	0x1c
 12878 01c0 9F       		.byte	0x9f
 12879 01c1 00000000 		.4byte	0
 12880 01c5 00000000 		.4byte	0
 12881              	.LLST99:
 12882 01c9 421C0000 		.4byte	.LVL531-.Ltext0
 12883 01cd 461C0000 		.4byte	.LVL532-.Ltext0
 12884 01d1 0100     		.2byte	0x1
 12885 01d3 50       		.byte	0x50
 12886 01d4 461C0000 		.4byte	.LVL532-.Ltext0
 12887 01d8 481C0000 		.4byte	.LFE107-.Ltext0
 12888 01dc 0400     		.2byte	0x4
ARM GAS  /tmp/cc18izUm.s 			page 291


 12889 01de F3       		.byte	0xf3
 12890 01df 01       		.uleb128 0x1
 12891 01e0 50       		.byte	0x50
 12892 01e1 9F       		.byte	0x9f
 12893 01e2 00000000 		.4byte	0
 12894 01e6 00000000 		.4byte	0
 12895              	.LLST98:
 12896 01ea 3C1C0000 		.4byte	.LVL529-.Ltext0
 12897 01ee 401C0000 		.4byte	.LVL530-.Ltext0
 12898 01f2 0100     		.2byte	0x1
 12899 01f4 50       		.byte	0x50
 12900 01f5 401C0000 		.4byte	.LVL530-.Ltext0
 12901 01f9 421C0000 		.4byte	.LFE106-.Ltext0
 12902 01fd 0400     		.2byte	0x4
 12903 01ff F3       		.byte	0xf3
 12904 0200 01       		.uleb128 0x1
 12905 0201 50       		.byte	0x50
 12906 0202 9F       		.byte	0x9f
 12907 0203 00000000 		.4byte	0
 12908 0207 00000000 		.4byte	0
 12909              	.LLST97:
 12910 020b 2C1C0000 		.4byte	.LVL527-.Ltext0
 12911 020f 361C0000 		.4byte	.LVL528-.Ltext0
 12912 0213 0100     		.2byte	0x1
 12913 0215 50       		.byte	0x50
 12914 0216 361C0000 		.4byte	.LVL528-.Ltext0
 12915 021a 3C1C0000 		.4byte	.LFE105-.Ltext0
 12916 021e 0400     		.2byte	0x4
 12917 0220 F3       		.byte	0xf3
 12918 0221 01       		.uleb128 0x1
 12919 0222 50       		.byte	0x50
 12920 0223 9F       		.byte	0x9f
 12921 0224 00000000 		.4byte	0
 12922 0228 00000000 		.4byte	0
 12923              	.LLST71:
 12924 022c 48180000 		.4byte	.LVL419-.Ltext0
 12925 0230 64180000 		.4byte	.LVL420-.Ltext0
 12926 0234 0100     		.2byte	0x1
 12927 0236 50       		.byte	0x50
 12928 0237 64180000 		.4byte	.LVL420-.Ltext0
 12929 023b 9E180000 		.4byte	.LVL427-.Ltext0
 12930 023f 0400     		.2byte	0x4
 12931 0241 F3       		.byte	0xf3
 12932 0242 01       		.uleb128 0x1
 12933 0243 50       		.byte	0x50
 12934 0244 9F       		.byte	0x9f
 12935 0245 9E180000 		.4byte	.LVL427-.Ltext0
 12936 0249 A0180000 		.4byte	.LVL428-.Ltext0
 12937 024d 0100     		.2byte	0x1
 12938 024f 50       		.byte	0x50
 12939 0250 A0180000 		.4byte	.LVL428-.Ltext0
 12940 0254 C8180000 		.4byte	.LVL432-.Ltext0
 12941 0258 0400     		.2byte	0x4
 12942 025a F3       		.byte	0xf3
 12943 025b 01       		.uleb128 0x1
 12944 025c 50       		.byte	0x50
 12945 025d 9F       		.byte	0x9f
ARM GAS  /tmp/cc18izUm.s 			page 292


 12946 025e C8180000 		.4byte	.LVL432-.Ltext0
 12947 0262 CA180000 		.4byte	.LVL433-.Ltext0
 12948 0266 0100     		.2byte	0x1
 12949 0268 50       		.byte	0x50
 12950 0269 CA180000 		.4byte	.LVL433-.Ltext0
 12951 026d CC180000 		.4byte	.LVL434-.Ltext0
 12952 0271 0400     		.2byte	0x4
 12953 0273 F3       		.byte	0xf3
 12954 0274 01       		.uleb128 0x1
 12955 0275 50       		.byte	0x50
 12956 0276 9F       		.byte	0x9f
 12957 0277 CC180000 		.4byte	.LVL434-.Ltext0
 12958 027b D0180000 		.4byte	.LVL435-.Ltext0
 12959 027f 0100     		.2byte	0x1
 12960 0281 50       		.byte	0x50
 12961 0282 D0180000 		.4byte	.LVL435-.Ltext0
 12962 0286 D8180000 		.4byte	.LFE104-.Ltext0
 12963 028a 0400     		.2byte	0x4
 12964 028c F3       		.byte	0xf3
 12965 028d 01       		.uleb128 0x1
 12966 028e 50       		.byte	0x50
 12967 028f 9F       		.byte	0x9f
 12968 0290 00000000 		.4byte	0
 12969 0294 00000000 		.4byte	0
 12970              	.LLST65:
 12971 0298 94170000 		.4byte	.LVL400-.Ltext0
 12972 029c B2170000 		.4byte	.LVL402-.Ltext0
 12973 02a0 0100     		.2byte	0x1
 12974 02a2 50       		.byte	0x50
 12975 02a3 B2170000 		.4byte	.LVL402-.Ltext0
 12976 02a7 1A180000 		.4byte	.LVL411-.Ltext0
 12977 02ab 0400     		.2byte	0x4
 12978 02ad F3       		.byte	0xf3
 12979 02ae 01       		.uleb128 0x1
 12980 02af 50       		.byte	0x50
 12981 02b0 9F       		.byte	0x9f
 12982 02b1 1A180000 		.4byte	.LVL411-.Ltext0
 12983 02b5 1E180000 		.4byte	.LVL412-.Ltext0
 12984 02b9 0100     		.2byte	0x1
 12985 02bb 50       		.byte	0x50
 12986 02bc 1E180000 		.4byte	.LVL412-.Ltext0
 12987 02c0 20180000 		.4byte	.LVL413-.Ltext0
 12988 02c4 0400     		.2byte	0x4
 12989 02c6 F3       		.byte	0xf3
 12990 02c7 01       		.uleb128 0x1
 12991 02c8 50       		.byte	0x50
 12992 02c9 9F       		.byte	0x9f
 12993 02ca 20180000 		.4byte	.LVL413-.Ltext0
 12994 02ce 24180000 		.4byte	.LVL414-.Ltext0
 12995 02d2 0100     		.2byte	0x1
 12996 02d4 50       		.byte	0x50
 12997 02d5 24180000 		.4byte	.LVL414-.Ltext0
 12998 02d9 48180000 		.4byte	.LFE103-.Ltext0
 12999 02dd 0400     		.2byte	0x4
 13000 02df F3       		.byte	0xf3
 13001 02e0 01       		.uleb128 0x1
 13002 02e1 50       		.byte	0x50
ARM GAS  /tmp/cc18izUm.s 			page 293


 13003 02e2 9F       		.byte	0x9f
 13004 02e3 00000000 		.4byte	0
 13005 02e7 00000000 		.4byte	0
 13006              	.LLST66:
 13007 02eb 94170000 		.4byte	.LVL400-.Ltext0
 13008 02ef B2170000 		.4byte	.LVL402-.Ltext0
 13009 02f3 0100     		.2byte	0x1
 13010 02f5 51       		.byte	0x51
 13011 02f6 B2170000 		.4byte	.LVL402-.Ltext0
 13012 02fa 1A180000 		.4byte	.LVL411-.Ltext0
 13013 02fe 0100     		.2byte	0x1
 13014 0300 58       		.byte	0x58
 13015 0301 1A180000 		.4byte	.LVL411-.Ltext0
 13016 0305 26180000 		.4byte	.LVL415-.Ltext0
 13017 0309 0100     		.2byte	0x1
 13018 030b 51       		.byte	0x51
 13019 030c 26180000 		.4byte	.LVL415-.Ltext0
 13020 0310 2A180000 		.4byte	.LVL416-.Ltext0
 13021 0314 0100     		.2byte	0x1
 13022 0316 58       		.byte	0x58
 13023 0317 2A180000 		.4byte	.LVL416-.Ltext0
 13024 031b 30180000 		.4byte	.LVL417-.Ltext0
 13025 031f 0400     		.2byte	0x4
 13026 0321 F3       		.byte	0xf3
 13027 0322 01       		.uleb128 0x1
 13028 0323 51       		.byte	0x51
 13029 0324 9F       		.byte	0x9f
 13030 0325 30180000 		.4byte	.LVL417-.Ltext0
 13031 0329 48180000 		.4byte	.LFE103-.Ltext0
 13032 032d 0100     		.2byte	0x1
 13033 032f 58       		.byte	0x58
 13034 0330 00000000 		.4byte	0
 13035 0334 00000000 		.4byte	0
 13036              	.LLST67:
 13037 0338 94170000 		.4byte	.LVL400-.Ltext0
 13038 033c B2170000 		.4byte	.LVL402-.Ltext0
 13039 0340 0100     		.2byte	0x1
 13040 0342 52       		.byte	0x52
 13041 0343 B2170000 		.4byte	.LVL402-.Ltext0
 13042 0347 1A180000 		.4byte	.LVL411-.Ltext0
 13043 034b 0400     		.2byte	0x4
 13044 034d F3       		.byte	0xf3
 13045 034e 01       		.uleb128 0x1
 13046 034f 52       		.byte	0x52
 13047 0350 9F       		.byte	0x9f
 13048 0351 1A180000 		.4byte	.LVL411-.Ltext0
 13049 0355 26180000 		.4byte	.LVL415-.Ltext0
 13050 0359 0100     		.2byte	0x1
 13051 035b 52       		.byte	0x52
 13052 035c 26180000 		.4byte	.LVL415-.Ltext0
 13053 0360 48180000 		.4byte	.LFE103-.Ltext0
 13054 0364 0400     		.2byte	0x4
 13055 0366 F3       		.byte	0xf3
 13056 0367 01       		.uleb128 0x1
 13057 0368 52       		.byte	0x52
 13058 0369 9F       		.byte	0x9f
 13059 036a 00000000 		.4byte	0
ARM GAS  /tmp/cc18izUm.s 			page 294


 13060 036e 00000000 		.4byte	0
 13061              	.LLST68:
 13062 0372 94170000 		.4byte	.LVL400-.Ltext0
 13063 0376 B2170000 		.4byte	.LVL402-.Ltext0
 13064 037a 0100     		.2byte	0x1
 13065 037c 53       		.byte	0x53
 13066 037d B2170000 		.4byte	.LVL402-.Ltext0
 13067 0381 1A180000 		.4byte	.LVL411-.Ltext0
 13068 0385 0400     		.2byte	0x4
 13069 0387 F3       		.byte	0xf3
 13070 0388 01       		.uleb128 0x1
 13071 0389 53       		.byte	0x53
 13072 038a 9F       		.byte	0x9f
 13073 038b 1A180000 		.4byte	.LVL411-.Ltext0
 13074 038f 26180000 		.4byte	.LVL415-.Ltext0
 13075 0393 0100     		.2byte	0x1
 13076 0395 53       		.byte	0x53
 13077 0396 26180000 		.4byte	.LVL415-.Ltext0
 13078 039a 48180000 		.4byte	.LFE103-.Ltext0
 13079 039e 0400     		.2byte	0x4
 13080 03a0 F3       		.byte	0xf3
 13081 03a1 01       		.uleb128 0x1
 13082 03a2 53       		.byte	0x53
 13083 03a3 9F       		.byte	0x9f
 13084 03a4 00000000 		.4byte	0
 13085 03a8 00000000 		.4byte	0
 13086              	.LLST69:
 13087 03ac B0170000 		.4byte	.LVL401-.Ltext0
 13088 03b0 B2170000 		.4byte	.LVL402-.Ltext0
 13089 03b4 0200     		.2byte	0x2
 13090 03b6 30       		.byte	0x30
 13091 03b7 9F       		.byte	0x9f
 13092 03b8 B2170000 		.4byte	.LVL402-.Ltext0
 13093 03bc E6170000 		.4byte	.LVL407-.Ltext0
 13094 03c0 0100     		.2byte	0x1
 13095 03c2 54       		.byte	0x54
 13096 03c3 E8170000 		.4byte	.LVL408-.Ltext0
 13097 03c7 EC170000 		.4byte	.LVL409-.Ltext0
 13098 03cb 0100     		.2byte	0x1
 13099 03cd 54       		.byte	0x54
 13100 03ce 26180000 		.4byte	.LVL415-.Ltext0
 13101 03d2 2A180000 		.4byte	.LVL416-.Ltext0
 13102 03d6 0100     		.2byte	0x1
 13103 03d8 54       		.byte	0x54
 13104 03d9 30180000 		.4byte	.LVL417-.Ltext0
 13105 03dd 3C180000 		.4byte	.LVL418-.Ltext0
 13106 03e1 0100     		.2byte	0x1
 13107 03e3 54       		.byte	0x54
 13108 03e4 00000000 		.4byte	0
 13109 03e8 00000000 		.4byte	0
 13110              	.LLST70:
 13111 03ec BC170000 		.4byte	.LVL403-.Ltext0
 13112 03f0 EC170000 		.4byte	.LVL409-.Ltext0
 13113 03f4 0100     		.2byte	0x1
 13114 03f6 56       		.byte	0x56
 13115 03f7 26180000 		.4byte	.LVL415-.Ltext0
 13116 03fb 2A180000 		.4byte	.LVL416-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 295


 13117 03ff 0100     		.2byte	0x1
 13118 0401 56       		.byte	0x56
 13119 0402 30180000 		.4byte	.LVL417-.Ltext0
 13120 0406 3C180000 		.4byte	.LVL418-.Ltext0
 13121 040a 0100     		.2byte	0x1
 13122 040c 56       		.byte	0x56
 13123 040d 00000000 		.4byte	0
 13124 0411 00000000 		.4byte	0
 13125              	.LLST62:
 13126 0415 20170000 		.4byte	.LVL389-.Ltext0
 13127 0419 36170000 		.4byte	.LVL391-.Ltext0
 13128 041d 0100     		.2byte	0x1
 13129 041f 50       		.byte	0x50
 13130 0420 36170000 		.4byte	.LVL391-.Ltext0
 13131 0424 78170000 		.4byte	.LVL395-.Ltext0
 13132 0428 0400     		.2byte	0x4
 13133 042a F3       		.byte	0xf3
 13134 042b 01       		.uleb128 0x1
 13135 042c 50       		.byte	0x50
 13136 042d 9F       		.byte	0x9f
 13137 042e 78170000 		.4byte	.LVL395-.Ltext0
 13138 0432 7C170000 		.4byte	.LVL396-.Ltext0
 13139 0436 0100     		.2byte	0x1
 13140 0438 50       		.byte	0x50
 13141 0439 7C170000 		.4byte	.LVL396-.Ltext0
 13142 043d 7E170000 		.4byte	.LVL397-.Ltext0
 13143 0441 0400     		.2byte	0x4
 13144 0443 F3       		.byte	0xf3
 13145 0444 01       		.uleb128 0x1
 13146 0445 50       		.byte	0x50
 13147 0446 9F       		.byte	0x9f
 13148 0447 7E170000 		.4byte	.LVL397-.Ltext0
 13149 044b 82170000 		.4byte	.LVL398-.Ltext0
 13150 044f 0100     		.2byte	0x1
 13151 0451 50       		.byte	0x50
 13152 0452 82170000 		.4byte	.LVL398-.Ltext0
 13153 0456 94170000 		.4byte	.LFE102-.Ltext0
 13154 045a 0400     		.2byte	0x4
 13155 045c F3       		.byte	0xf3
 13156 045d 01       		.uleb128 0x1
 13157 045e 50       		.byte	0x50
 13158 045f 9F       		.byte	0x9f
 13159 0460 00000000 		.4byte	0
 13160 0464 00000000 		.4byte	0
 13161              	.LLST63:
 13162 0468 20170000 		.4byte	.LVL389-.Ltext0
 13163 046c 4C170000 		.4byte	.LVL392-.Ltext0
 13164 0470 0100     		.2byte	0x1
 13165 0472 51       		.byte	0x51
 13166 0473 4C170000 		.4byte	.LVL392-.Ltext0
 13167 0477 78170000 		.4byte	.LVL395-.Ltext0
 13168 047b 0400     		.2byte	0x4
 13169 047d F3       		.byte	0xf3
 13170 047e 01       		.uleb128 0x1
 13171 047f 51       		.byte	0x51
 13172 0480 9F       		.byte	0x9f
 13173 0481 78170000 		.4byte	.LVL395-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 296


 13174 0485 8A170000 		.4byte	.LVL399-.Ltext0
 13175 0489 0100     		.2byte	0x1
 13176 048b 51       		.byte	0x51
 13177 048c 8A170000 		.4byte	.LVL399-.Ltext0
 13178 0490 94170000 		.4byte	.LFE102-.Ltext0
 13179 0494 0400     		.2byte	0x4
 13180 0496 F3       		.byte	0xf3
 13181 0497 01       		.uleb128 0x1
 13182 0498 51       		.byte	0x51
 13183 0499 9F       		.byte	0x9f
 13184 049a 00000000 		.4byte	0
 13185 049e 00000000 		.4byte	0
 13186              	.LLST64:
 13187 04a2 20170000 		.4byte	.LVL389-.Ltext0
 13188 04a6 2A170000 		.4byte	.LVL390-.Ltext0
 13189 04aa 0100     		.2byte	0x1
 13190 04ac 52       		.byte	0x52
 13191 04ad 2A170000 		.4byte	.LVL390-.Ltext0
 13192 04b1 78170000 		.4byte	.LVL395-.Ltext0
 13193 04b5 0100     		.2byte	0x1
 13194 04b7 56       		.byte	0x56
 13195 04b8 78170000 		.4byte	.LVL395-.Ltext0
 13196 04bc 7E170000 		.4byte	.LVL397-.Ltext0
 13197 04c0 0100     		.2byte	0x1
 13198 04c2 52       		.byte	0x52
 13199 04c3 7E170000 		.4byte	.LVL397-.Ltext0
 13200 04c7 94170000 		.4byte	.LFE102-.Ltext0
 13201 04cb 0100     		.2byte	0x1
 13202 04cd 56       		.byte	0x56
 13203 04ce 00000000 		.4byte	0
 13204 04d2 00000000 		.4byte	0
 13205              	.LLST59:
 13206 04d6 A8160000 		.4byte	.LVL378-.Ltext0
 13207 04da C0160000 		.4byte	.LVL380-.Ltext0
 13208 04de 0100     		.2byte	0x1
 13209 04e0 50       		.byte	0x50
 13210 04e1 C0160000 		.4byte	.LVL380-.Ltext0
 13211 04e5 02170000 		.4byte	.LVL384-.Ltext0
 13212 04e9 0400     		.2byte	0x4
 13213 04eb F3       		.byte	0xf3
 13214 04ec 01       		.uleb128 0x1
 13215 04ed 50       		.byte	0x50
 13216 04ee 9F       		.byte	0x9f
 13217 04ef 02170000 		.4byte	.LVL384-.Ltext0
 13218 04f3 06170000 		.4byte	.LVL385-.Ltext0
 13219 04f7 0100     		.2byte	0x1
 13220 04f9 50       		.byte	0x50
 13221 04fa 06170000 		.4byte	.LVL385-.Ltext0
 13222 04fe 08170000 		.4byte	.LVL386-.Ltext0
 13223 0502 0400     		.2byte	0x4
 13224 0504 F3       		.byte	0xf3
 13225 0505 01       		.uleb128 0x1
 13226 0506 50       		.byte	0x50
 13227 0507 9F       		.byte	0x9f
 13228 0508 08170000 		.4byte	.LVL386-.Ltext0
 13229 050c 0C170000 		.4byte	.LVL387-.Ltext0
 13230 0510 0100     		.2byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 297


 13231 0512 50       		.byte	0x50
 13232 0513 0C170000 		.4byte	.LVL387-.Ltext0
 13233 0517 20170000 		.4byte	.LFE101-.Ltext0
 13234 051b 0400     		.2byte	0x4
 13235 051d F3       		.byte	0xf3
 13236 051e 01       		.uleb128 0x1
 13237 051f 50       		.byte	0x50
 13238 0520 9F       		.byte	0x9f
 13239 0521 00000000 		.4byte	0
 13240 0525 00000000 		.4byte	0
 13241              	.LLST60:
 13242 0529 A8160000 		.4byte	.LVL378-.Ltext0
 13243 052d D6160000 		.4byte	.LVL381-.Ltext0
 13244 0531 0100     		.2byte	0x1
 13245 0533 51       		.byte	0x51
 13246 0534 D6160000 		.4byte	.LVL381-.Ltext0
 13247 0538 02170000 		.4byte	.LVL384-.Ltext0
 13248 053c 0400     		.2byte	0x4
 13249 053e F3       		.byte	0xf3
 13250 053f 01       		.uleb128 0x1
 13251 0540 51       		.byte	0x51
 13252 0541 9F       		.byte	0x9f
 13253 0542 02170000 		.4byte	.LVL384-.Ltext0
 13254 0546 14170000 		.4byte	.LVL388-.Ltext0
 13255 054a 0100     		.2byte	0x1
 13256 054c 51       		.byte	0x51
 13257 054d 14170000 		.4byte	.LVL388-.Ltext0
 13258 0551 20170000 		.4byte	.LFE101-.Ltext0
 13259 0555 0400     		.2byte	0x4
 13260 0557 F3       		.byte	0xf3
 13261 0558 01       		.uleb128 0x1
 13262 0559 51       		.byte	0x51
 13263 055a 9F       		.byte	0x9f
 13264 055b 00000000 		.4byte	0
 13265 055f 00000000 		.4byte	0
 13266              	.LLST61:
 13267 0563 A8160000 		.4byte	.LVL378-.Ltext0
 13268 0567 B4160000 		.4byte	.LVL379-.Ltext0
 13269 056b 0100     		.2byte	0x1
 13270 056d 52       		.byte	0x52
 13271 056e B4160000 		.4byte	.LVL379-.Ltext0
 13272 0572 02170000 		.4byte	.LVL384-.Ltext0
 13273 0576 0100     		.2byte	0x1
 13274 0578 56       		.byte	0x56
 13275 0579 02170000 		.4byte	.LVL384-.Ltext0
 13276 057d 08170000 		.4byte	.LVL386-.Ltext0
 13277 0581 0100     		.2byte	0x1
 13278 0583 52       		.byte	0x52
 13279 0584 08170000 		.4byte	.LVL386-.Ltext0
 13280 0588 20170000 		.4byte	.LFE101-.Ltext0
 13281 058c 0100     		.2byte	0x1
 13282 058e 56       		.byte	0x56
 13283 058f 00000000 		.4byte	0
 13284 0593 00000000 		.4byte	0
 13285              	.LLST72:
 13286 0597 D8180000 		.4byte	.LVL436-.Ltext0
 13287 059b EC180000 		.4byte	.LVL438-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 298


 13288 059f 0100     		.2byte	0x1
 13289 05a1 50       		.byte	0x50
 13290 05a2 EC180000 		.4byte	.LVL438-.Ltext0
 13291 05a6 36190000 		.4byte	.LVL448-.Ltext0
 13292 05aa 0300     		.2byte	0x3
 13293 05ac 91       		.byte	0x91
 13294 05ad 907F     		.sleb128 -112
 13295 05af 36190000 		.4byte	.LVL448-.Ltext0
 13296 05b3 88190000 		.4byte	.LVL456-.Ltext0
 13297 05b7 0400     		.2byte	0x4
 13298 05b9 F3       		.byte	0xf3
 13299 05ba 01       		.uleb128 0x1
 13300 05bb 50       		.byte	0x50
 13301 05bc 9F       		.byte	0x9f
 13302 05bd 88190000 		.4byte	.LVL456-.Ltext0
 13303 05c1 8A190000 		.4byte	.LVL457-.Ltext0
 13304 05c5 0100     		.2byte	0x1
 13305 05c7 50       		.byte	0x50
 13306 05c8 8A190000 		.4byte	.LVL457-.Ltext0
 13307 05cc C41A0000 		.4byte	.LVL487-.Ltext0
 13308 05d0 0300     		.2byte	0x3
 13309 05d2 91       		.byte	0x91
 13310 05d3 907F     		.sleb128 -112
 13311 05d5 C41A0000 		.4byte	.LVL487-.Ltext0
 13312 05d9 DC1A0000 		.4byte	.LVL490-.Ltext0
 13313 05dd 0400     		.2byte	0x4
 13314 05df F3       		.byte	0xf3
 13315 05e0 01       		.uleb128 0x1
 13316 05e1 50       		.byte	0x50
 13317 05e2 9F       		.byte	0x9f
 13318 05e3 DC1A0000 		.4byte	.LVL490-.Ltext0
 13319 05e7 141B0000 		.4byte	.LVL494-.Ltext0
 13320 05eb 0300     		.2byte	0x3
 13321 05ed 91       		.byte	0x91
 13322 05ee 907F     		.sleb128 -112
 13323 05f0 141B0000 		.4byte	.LVL494-.Ltext0
 13324 05f4 B41B0000 		.4byte	.LVL517-.Ltext0
 13325 05f8 0400     		.2byte	0x4
 13326 05fa F3       		.byte	0xf3
 13327 05fb 01       		.uleb128 0x1
 13328 05fc 50       		.byte	0x50
 13329 05fd 9F       		.byte	0x9f
 13330 05fe B41B0000 		.4byte	.LVL517-.Ltext0
 13331 0602 2C1C0000 		.4byte	.LFE100-.Ltext0
 13332 0606 0300     		.2byte	0x3
 13333 0608 91       		.byte	0x91
 13334 0609 907F     		.sleb128 -112
 13335 060b 00000000 		.4byte	0
 13336 060f 00000000 		.4byte	0
 13337              	.LLST73:
 13338 0613 D8180000 		.4byte	.LVL436-.Ltext0
 13339 0617 EC180000 		.4byte	.LVL438-.Ltext0
 13340 061b 0100     		.2byte	0x1
 13341 061d 51       		.byte	0x51
 13342 061e EC180000 		.4byte	.LVL438-.Ltext0
 13343 0622 36190000 		.4byte	.LVL448-.Ltext0
 13344 0626 0100     		.2byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 299


 13345 0628 55       		.byte	0x55
 13346 0629 36190000 		.4byte	.LVL448-.Ltext0
 13347 062d 88190000 		.4byte	.LVL456-.Ltext0
 13348 0631 0400     		.2byte	0x4
 13349 0633 F3       		.byte	0xf3
 13350 0634 01       		.uleb128 0x1
 13351 0635 51       		.byte	0x51
 13352 0636 9F       		.byte	0x9f
 13353 0637 88190000 		.4byte	.LVL456-.Ltext0
 13354 063b 8D190000 		.4byte	.LVL458-1-.Ltext0
 13355 063f 0100     		.2byte	0x1
 13356 0641 51       		.byte	0x51
 13357 0642 8D190000 		.4byte	.LVL458-1-.Ltext0
 13358 0646 2E1A0000 		.4byte	.LVL467-.Ltext0
 13359 064a 0100     		.2byte	0x1
 13360 064c 55       		.byte	0x55
 13361 064d 2E1A0000 		.4byte	.LVL467-.Ltext0
 13362 0651 B41B0000 		.4byte	.LVL517-.Ltext0
 13363 0655 0400     		.2byte	0x4
 13364 0657 F3       		.byte	0xf3
 13365 0658 01       		.uleb128 0x1
 13366 0659 51       		.byte	0x51
 13367 065a 9F       		.byte	0x9f
 13368 065b B41B0000 		.4byte	.LVL517-.Ltext0
 13369 065f 101C0000 		.4byte	.LVL524-.Ltext0
 13370 0663 0100     		.2byte	0x1
 13371 0665 55       		.byte	0x55
 13372 0666 101C0000 		.4byte	.LVL524-.Ltext0
 13373 066a 2C1C0000 		.4byte	.LFE100-.Ltext0
 13374 066e 0300     		.2byte	0x3
 13375 0670 75       		.byte	0x75
 13376 0671 04       		.sleb128 4
 13377 0672 9F       		.byte	0x9f
 13378 0673 00000000 		.4byte	0
 13379 0677 00000000 		.4byte	0
 13380              	.LLST74:
 13381 067b AE1A0000 		.4byte	.LVL485-.Ltext0
 13382 067f AC1B0000 		.4byte	.LVL515-.Ltext0
 13383 0683 0100     		.2byte	0x1
 13384 0685 59       		.byte	0x59
 13385 0686 00000000 		.4byte	0
 13386 068a 00000000 		.4byte	0
 13387              	.LLST75:
 13388 068e C41A0000 		.4byte	.LVL487-.Ltext0
 13389 0692 DC1A0000 		.4byte	.LVL490-.Ltext0
 13390 0696 0100     		.2byte	0x1
 13391 0698 58       		.byte	0x58
 13392 0699 00000000 		.4byte	0
 13393 069d 00000000 		.4byte	0
 13394              	.LLST76:
 13395 06a1 12190000 		.4byte	.LVL444-.Ltext0
 13396 06a5 24190000 		.4byte	.LVL446-.Ltext0
 13397 06a9 0200     		.2byte	0x2
 13398 06ab 30       		.byte	0x30
 13399 06ac 9F       		.byte	0x9f
 13400 06ad 24190000 		.4byte	.LVL446-.Ltext0
 13401 06b1 36190000 		.4byte	.LVL448-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 300


 13402 06b5 0200     		.2byte	0x2
 13403 06b7 31       		.byte	0x31
 13404 06b8 9F       		.byte	0x9f
 13405 06b9 B41B0000 		.4byte	.LVL517-.Ltext0
 13406 06bd C01B0000 		.4byte	.LVL519-.Ltext0
 13407 06c1 0200     		.2byte	0x2
 13408 06c3 30       		.byte	0x30
 13409 06c4 9F       		.byte	0x9f
 13410 06c5 C01B0000 		.4byte	.LVL519-.Ltext0
 13411 06c9 F81B0000 		.4byte	.LVL521-.Ltext0
 13412 06cd 0200     		.2byte	0x2
 13413 06cf 31       		.byte	0x31
 13414 06d0 9F       		.byte	0x9f
 13415 06d1 00000000 		.4byte	0
 13416 06d5 00000000 		.4byte	0
 13417              	.LLST77:
 13418 06d9 36190000 		.4byte	.LVL448-.Ltext0
 13419 06dd 88190000 		.4byte	.LVL456-.Ltext0
 13420 06e1 0100     		.2byte	0x1
 13421 06e3 54       		.byte	0x54
 13422 06e4 C41A0000 		.4byte	.LVL487-.Ltext0
 13423 06e8 CE1A0000 		.4byte	.LVL488-.Ltext0
 13424 06ec 0200     		.2byte	0x2
 13425 06ee 30       		.byte	0x30
 13426 06ef 9F       		.byte	0x9f
 13427 06f0 CE1A0000 		.4byte	.LVL488-.Ltext0
 13428 06f4 DC1A0000 		.4byte	.LVL490-.Ltext0
 13429 06f8 0100     		.2byte	0x1
 13430 06fa 54       		.byte	0x54
 13431 06fb AC1B0000 		.4byte	.LVL515-.Ltext0
 13432 06ff B41B0000 		.4byte	.LVL517-.Ltext0
 13433 0703 0100     		.2byte	0x1
 13434 0705 54       		.byte	0x54
 13435 0706 00000000 		.4byte	0
 13436 070a 00000000 		.4byte	0
 13437              	.LLST78:
 13438 070e 12190000 		.4byte	.LVL444-.Ltext0
 13439 0712 80190000 		.4byte	.LVL455-.Ltext0
 13440 0716 0300     		.2byte	0x3
 13441 0718 91       		.byte	0x91
 13442 0719 987F     		.sleb128 -104
 13443 071b 92190000 		.4byte	.LVL459-.Ltext0
 13444 071f B21B0000 		.4byte	.LVL516-.Ltext0
 13445 0723 0300     		.2byte	0x3
 13446 0725 91       		.byte	0x91
 13447 0726 987F     		.sleb128 -104
 13448 0728 B41B0000 		.4byte	.LVL517-.Ltext0
 13449 072c 2C1C0000 		.4byte	.LFE100-.Ltext0
 13450 0730 0300     		.2byte	0x3
 13451 0732 91       		.byte	0x91
 13452 0733 987F     		.sleb128 -104
 13453 0735 00000000 		.4byte	0
 13454 0739 00000000 		.4byte	0
 13455              	.LLST79:
 13456 073d 0E190000 		.4byte	.LVL443-.Ltext0
 13457 0741 88190000 		.4byte	.LVL456-.Ltext0
 13458 0745 0300     		.2byte	0x3
ARM GAS  /tmp/cc18izUm.s 			page 301


 13459 0747 91       		.byte	0x91
 13460 0748 947F     		.sleb128 -108
 13461 074a 92190000 		.4byte	.LVL459-.Ltext0
 13462 074e 2C1C0000 		.4byte	.LFE100-.Ltext0
 13463 0752 0300     		.2byte	0x3
 13464 0754 91       		.byte	0x91
 13465 0755 947F     		.sleb128 -108
 13466 0757 00000000 		.4byte	0
 13467 075b 00000000 		.4byte	0
 13468              	.LLST80:
 13469 075f EC180000 		.4byte	.LVL438-.Ltext0
 13470 0763 36190000 		.4byte	.LVL448-.Ltext0
 13471 0767 0100     		.2byte	0x1
 13472 0769 56       		.byte	0x56
 13473 076a 8E190000 		.4byte	.LVL458-.Ltext0
 13474 076e 92190000 		.4byte	.LVL459-.Ltext0
 13475 0772 0200     		.2byte	0x2
 13476 0774 31       		.byte	0x31
 13477 0775 9F       		.byte	0x9f
 13478 0776 92190000 		.4byte	.LVL459-.Ltext0
 13479 077a 2E1A0000 		.4byte	.LVL467-.Ltext0
 13480 077e 0100     		.2byte	0x1
 13481 0780 56       		.byte	0x56
 13482 0781 B41B0000 		.4byte	.LVL517-.Ltext0
 13483 0785 2C1C0000 		.4byte	.LFE100-.Ltext0
 13484 0789 0100     		.2byte	0x1
 13485 078b 56       		.byte	0x56
 13486 078c 00000000 		.4byte	0
 13487 0790 00000000 		.4byte	0
 13488              	.LLST81:
 13489 0794 0E190000 		.4byte	.LVL443-.Ltext0
 13490 0798 88190000 		.4byte	.LVL456-.Ltext0
 13491 079c 0600     		.2byte	0x6
 13492 079e F2       		.byte	0xf2
 13493 079f D6150000 		.4byte	.Ldebug_info0+5590
 13494 07a3 00       		.sleb128 0
 13495 07a4 92190000 		.4byte	.LVL459-.Ltext0
 13496 07a8 2C1C0000 		.4byte	.LFE100-.Ltext0
 13497 07ac 0600     		.2byte	0x6
 13498 07ae F2       		.byte	0xf2
 13499 07af D6150000 		.4byte	.Ldebug_info0+5590
 13500 07b3 00       		.sleb128 0
 13501 07b4 00000000 		.4byte	0
 13502 07b8 00000000 		.4byte	0
 13503              	.LLST82:
 13504 07bc 92190000 		.4byte	.LVL459-.Ltext0
 13505 07c0 2E1A0000 		.4byte	.LVL467-.Ltext0
 13506 07c4 0300     		.2byte	0x3
 13507 07c6 91       		.byte	0x91
 13508 07c7 40       		.sleb128 -64
 13509 07c8 9F       		.byte	0x9f
 13510 07c9 2E1A0000 		.4byte	.LVL467-.Ltext0
 13511 07cd AA1A0000 		.4byte	.LVL484-.Ltext0
 13512 07d1 0100     		.2byte	0x1
 13513 07d3 5B       		.byte	0x5b
 13514 07d4 F81B0000 		.4byte	.LVL521-.Ltext0
 13515 07d8 1A1C0000 		.4byte	.LVL525-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 302


 13516 07dc 0300     		.2byte	0x3
 13517 07de 91       		.byte	0x91
 13518 07df 40       		.sleb128 -64
 13519 07e0 9F       		.byte	0x9f
 13520 07e1 1A1C0000 		.4byte	.LVL525-.Ltext0
 13521 07e5 2C1C0000 		.4byte	.LFE100-.Ltext0
 13522 07e9 0100     		.2byte	0x1
 13523 07eb 5B       		.byte	0x5b
 13524 07ec 00000000 		.4byte	0
 13525 07f0 00000000 		.4byte	0
 13526              	.LLST83:
 13527 07f4 92190000 		.4byte	.LVL459-.Ltext0
 13528 07f8 2E1A0000 		.4byte	.LVL467-.Ltext0
 13529 07fc 0100     		.2byte	0x1
 13530 07fe 55       		.byte	0x55
 13531 07ff 2E1A0000 		.4byte	.LVL467-.Ltext0
 13532 0803 AA1A0000 		.4byte	.LVL484-.Ltext0
 13533 0807 0400     		.2byte	0x4
 13534 0809 F3       		.byte	0xf3
 13535 080a 01       		.uleb128 0x1
 13536 080b 51       		.byte	0x51
 13537 080c 9F       		.byte	0x9f
 13538 080d F81B0000 		.4byte	.LVL521-.Ltext0
 13539 0811 101C0000 		.4byte	.LVL524-.Ltext0
 13540 0815 0100     		.2byte	0x1
 13541 0817 55       		.byte	0x55
 13542 0818 101C0000 		.4byte	.LVL524-.Ltext0
 13543 081c 2C1C0000 		.4byte	.LFE100-.Ltext0
 13544 0820 0300     		.2byte	0x3
 13545 0822 75       		.byte	0x75
 13546 0823 04       		.sleb128 4
 13547 0824 9F       		.byte	0x9f
 13548 0825 00000000 		.4byte	0
 13549 0829 00000000 		.4byte	0
 13550              	.LLST84:
 13551 082d 2E1A0000 		.4byte	.LVL467-.Ltext0
 13552 0831 AA1A0000 		.4byte	.LVL484-.Ltext0
 13553 0835 0100     		.2byte	0x1
 13554 0837 54       		.byte	0x54
 13555 0838 0E1C0000 		.4byte	.LVL523-.Ltext0
 13556 083c 2C1C0000 		.4byte	.LFE100-.Ltext0
 13557 0840 0200     		.2byte	0x2
 13558 0842 30       		.byte	0x30
 13559 0843 9F       		.byte	0x9f
 13560 0844 00000000 		.4byte	0
 13561 0848 00000000 		.4byte	0
 13562              	.LLST85:
 13563 084c 92190000 		.4byte	.LVL459-.Ltext0
 13564 0850 2E1A0000 		.4byte	.LVL467-.Ltext0
 13565 0854 0200     		.2byte	0x2
 13566 0856 30       		.byte	0x30
 13567 0857 9F       		.byte	0x9f
 13568 0858 2E1A0000 		.4byte	.LVL467-.Ltext0
 13569 085c AA1A0000 		.4byte	.LVL484-.Ltext0
 13570 0860 0100     		.2byte	0x1
 13571 0862 59       		.byte	0x59
 13572 0863 F81B0000 		.4byte	.LVL521-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 303


 13573 0867 2C1C0000 		.4byte	.LFE100-.Ltext0
 13574 086b 0200     		.2byte	0x2
 13575 086d 30       		.byte	0x30
 13576 086e 9F       		.byte	0x9f
 13577 086f 00000000 		.4byte	0
 13578 0873 00000000 		.4byte	0
 13579              	.LLST86:
 13580 0877 2E1A0000 		.4byte	.LVL467-.Ltext0
 13581 087b 521A0000 		.4byte	.LVL472-.Ltext0
 13582 087f 0300     		.2byte	0x3
 13583 0881 91       		.byte	0x91
 13584 0882 8C7F     		.sleb128 -116
 13585 0884 701A0000 		.4byte	.LVL475-.Ltext0
 13586 0888 781A0000 		.4byte	.LVL476-.Ltext0
 13587 088c 0100     		.2byte	0x1
 13588 088e 50       		.byte	0x50
 13589 088f 781A0000 		.4byte	.LVL476-.Ltext0
 13590 0893 AA1A0000 		.4byte	.LVL484-.Ltext0
 13591 0897 0300     		.2byte	0x3
 13592 0899 91       		.byte	0x91
 13593 089a 8C7F     		.sleb128 -116
 13594 089c 00000000 		.4byte	0
 13595 08a0 00000000 		.4byte	0
 13596              	.LLST87:
 13597 08a4 801A0000 		.4byte	.LVL478-.Ltext0
 13598 08a8 A81A0000 		.4byte	.LVL483-.Ltext0
 13599 08ac 1300     		.2byte	0x13
 13600 08ae 91       		.byte	0x91
 13601 08af 8C7F     		.sleb128 -116
 13602 08b1 F6       		.byte	0xf6
 13603 08b2 04       		.byte	0x4
 13604 08b3 25       		.uleb128 0x25
 13605 08b4 F5       		.byte	0xf5
 13606 08b5 06       		.uleb128 0x6
 13607 08b6 25       		.uleb128 0x25
 13608 08b7 1B       		.byte	0x1b
 13609 08b8 F4       		.byte	0xf4
 13610 08b9 25       		.uleb128 0x25
 13611 08ba 04       		.byte	0x4
 13612 08bb 0000803F 		.4byte	0x3f800000
 13613 08bf 1C       		.byte	0x1c
 13614 08c0 9F       		.byte	0x9f
 13615 08c1 00000000 		.4byte	0
 13616 08c5 00000000 		.4byte	0
 13617              	.LLST88:
 13618 08c9 92190000 		.4byte	.LVL459-.Ltext0
 13619 08cd D8190000 		.4byte	.LVL461-.Ltext0
 13620 08d1 0400     		.2byte	0x4
 13621 08d3 91       		.byte	0x91
 13622 08d4 AC7F     		.sleb128 -84
 13623 08d6 9F       		.byte	0x9f
 13624 08d7 D8190000 		.4byte	.LVL461-.Ltext0
 13625 08db E6190000 		.4byte	.LVL462-.Ltext0
 13626 08df 0100     		.2byte	0x1
 13627 08e1 58       		.byte	0x58
 13628 08e2 E6190000 		.4byte	.LVL462-.Ltext0
 13629 08e6 2E1A0000 		.4byte	.LVL467-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 304


 13630 08ea 0400     		.2byte	0x4
 13631 08ec 91       		.byte	0x91
 13632 08ed AC7F     		.sleb128 -84
 13633 08ef 9F       		.byte	0x9f
 13634 08f0 2E1A0000 		.4byte	.LVL467-.Ltext0
 13635 08f4 C41A0000 		.4byte	.LVL487-.Ltext0
 13636 08f8 0100     		.2byte	0x1
 13637 08fa 5A       		.byte	0x5a
 13638 08fb C41A0000 		.4byte	.LVL487-.Ltext0
 13639 08ff DC1A0000 		.4byte	.LVL490-.Ltext0
 13640 0903 0400     		.2byte	0x4
 13641 0905 91       		.byte	0x91
 13642 0906 AC7F     		.sleb128 -84
 13643 0908 9F       		.byte	0x9f
 13644 0909 DC1A0000 		.4byte	.LVL490-.Ltext0
 13645 090d 061B0000 		.4byte	.LVL492-.Ltext0
 13646 0911 0100     		.2byte	0x1
 13647 0913 5A       		.byte	0x5a
 13648 0914 061B0000 		.4byte	.LVL492-.Ltext0
 13649 0918 AC1B0000 		.4byte	.LVL515-.Ltext0
 13650 091c 0400     		.2byte	0x4
 13651 091e 91       		.byte	0x91
 13652 091f AC7F     		.sleb128 -84
 13653 0921 9F       		.byte	0x9f
 13654 0922 F81B0000 		.4byte	.LVL521-.Ltext0
 13655 0926 1E1C0000 		.4byte	.LVL526-.Ltext0
 13656 092a 0400     		.2byte	0x4
 13657 092c 91       		.byte	0x91
 13658 092d AC7F     		.sleb128 -84
 13659 092f 9F       		.byte	0x9f
 13660 0930 1E1C0000 		.4byte	.LVL526-.Ltext0
 13661 0934 2C1C0000 		.4byte	.LFE100-.Ltext0
 13662 0938 0100     		.2byte	0x1
 13663 093a 5A       		.byte	0x5a
 13664 093b 00000000 		.4byte	0
 13665 093f 00000000 		.4byte	0
 13666              	.LLST89:
 13667 0943 D2190000 		.4byte	.LVL460-.Ltext0
 13668 0947 E6190000 		.4byte	.LVL462-.Ltext0
 13669 094b 0200     		.2byte	0x2
 13670 094d 30       		.byte	0x30
 13671 094e 9F       		.byte	0x9f
 13672 094f E6190000 		.4byte	.LVL462-.Ltext0
 13673 0953 121A0000 		.4byte	.LVL464-.Ltext0
 13674 0957 0700     		.2byte	0x7
 13675 0959 77       		.byte	0x77
 13676 095a 00       		.sleb128 0
 13677 095b 91       		.byte	0x91
 13678 095c A47F     		.sleb128 -92
 13679 095e 1C       		.byte	0x1c
 13680 095f 9F       		.byte	0x9f
 13681 0960 121A0000 		.4byte	.LVL464-.Ltext0
 13682 0964 141A0000 		.4byte	.LVL465-.Ltext0
 13683 0968 0900     		.2byte	0x9
 13684 096a 77       		.byte	0x77
 13685 096b 00       		.sleb128 0
 13686 096c 91       		.byte	0x91
ARM GAS  /tmp/cc18izUm.s 			page 305


 13687 096d A47F     		.sleb128 -92
 13688 096f 1C       		.byte	0x1c
 13689 0970 23       		.byte	0x23
 13690 0971 01       		.uleb128 0x1
 13691 0972 9F       		.byte	0x9f
 13692 0973 1E1A0000 		.4byte	.LVL466-.Ltext0
 13693 0977 2E1A0000 		.4byte	.LVL467-.Ltext0
 13694 097b 0700     		.2byte	0x7
 13695 097d 77       		.byte	0x77
 13696 097e 00       		.sleb128 0
 13697 097f 91       		.byte	0x91
 13698 0980 A47F     		.sleb128 -92
 13699 0982 1C       		.byte	0x1c
 13700 0983 9F       		.byte	0x9f
 13701 0984 00000000 		.4byte	0
 13702 0988 00000000 		.4byte	0
 13703              	.LLST90:
 13704 098c AE1A0000 		.4byte	.LVL485-.Ltext0
 13705 0990 C41A0000 		.4byte	.LVL487-.Ltext0
 13706 0994 0300     		.2byte	0x3
 13707 0996 91       		.byte	0x91
 13708 0997 4C       		.sleb128 -52
 13709 0998 9F       		.byte	0x9f
 13710 0999 DC1A0000 		.4byte	.LVL490-.Ltext0
 13711 099d 121B0000 		.4byte	.LVL493-.Ltext0
 13712 09a1 0300     		.2byte	0x3
 13713 09a3 91       		.byte	0x91
 13714 09a4 4C       		.sleb128 -52
 13715 09a5 9F       		.byte	0x9f
 13716 09a6 121B0000 		.4byte	.LVL493-.Ltext0
 13717 09aa AC1B0000 		.4byte	.LVL515-.Ltext0
 13718 09ae 0100     		.2byte	0x1
 13719 09b0 5B       		.byte	0x5b
 13720 09b1 00000000 		.4byte	0
 13721 09b5 00000000 		.4byte	0
 13722              	.LLST91:
 13723 09b9 AE1A0000 		.4byte	.LVL485-.Ltext0
 13724 09bd C41A0000 		.4byte	.LVL487-.Ltext0
 13725 09c1 0300     		.2byte	0x3
 13726 09c3 91       		.byte	0x91
 13727 09c4 907F     		.sleb128 -112
 13728 09c6 DC1A0000 		.4byte	.LVL490-.Ltext0
 13729 09ca 141B0000 		.4byte	.LVL494-.Ltext0
 13730 09ce 0300     		.2byte	0x3
 13731 09d0 91       		.byte	0x91
 13732 09d1 907F     		.sleb128 -112
 13733 09d3 00000000 		.4byte	0
 13734 09d7 00000000 		.4byte	0
 13735              	.LLST92:
 13736 09db 001B0000 		.4byte	.LVL491-.Ltext0
 13737 09df 141B0000 		.4byte	.LVL494-.Ltext0
 13738 09e3 0200     		.2byte	0x2
 13739 09e5 30       		.byte	0x30
 13740 09e6 9F       		.byte	0x9f
 13741 09e7 141B0000 		.4byte	.LVL494-.Ltext0
 13742 09eb AC1B0000 		.4byte	.LVL515-.Ltext0
 13743 09ef 0100     		.2byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 306


 13744 09f1 55       		.byte	0x55
 13745 09f2 00000000 		.4byte	0
 13746 09f6 00000000 		.4byte	0
 13747              	.LLST93:
 13748 09fa AE1A0000 		.4byte	.LVL485-.Ltext0
 13749 09fe C41A0000 		.4byte	.LVL487-.Ltext0
 13750 0a02 0200     		.2byte	0x2
 13751 0a04 30       		.byte	0x30
 13752 0a05 9F       		.byte	0x9f
 13753 0a06 DC1A0000 		.4byte	.LVL490-.Ltext0
 13754 0a0a 141B0000 		.4byte	.LVL494-.Ltext0
 13755 0a0e 0200     		.2byte	0x2
 13756 0a10 30       		.byte	0x30
 13757 0a11 9F       		.byte	0x9f
 13758 0a12 141B0000 		.4byte	.LVL494-.Ltext0
 13759 0a16 AC1B0000 		.4byte	.LVL515-.Ltext0
 13760 0a1a 0100     		.2byte	0x1
 13761 0a1c 58       		.byte	0x58
 13762 0a1d 00000000 		.4byte	0
 13763 0a21 00000000 		.4byte	0
 13764              	.LLST94:
 13765 0a25 141B0000 		.4byte	.LVL494-.Ltext0
 13766 0a29 181B0000 		.4byte	.LVL496-.Ltext0
 13767 0a2d 0600     		.2byte	0x6
 13768 0a2f 9E       		.byte	0x9e
 13769 0a30 04       		.uleb128 0x4
 13770 0a31 0000C841 		.4byte	0x41c80000
 13771 0a35 641B0000 		.4byte	.LVL506-.Ltext0
 13772 0a39 701B0000 		.4byte	.LVL507-.Ltext0
 13773 0a3d 0600     		.2byte	0x6
 13774 0a3f 9E       		.byte	0x9e
 13775 0a40 04       		.uleb128 0x4
 13776 0a41 0000C841 		.4byte	0x41c80000
 13777 0a45 701B0000 		.4byte	.LVL507-.Ltext0
 13778 0a49 751B0000 		.4byte	.LVL508-1-.Ltext0
 13779 0a4d 0100     		.2byte	0x1
 13780 0a4f 50       		.byte	0x50
 13781 0a50 761B0000 		.4byte	.LVL508-.Ltext0
 13782 0a54 841B0000 		.4byte	.LVL509-.Ltext0
 13783 0a58 0100     		.2byte	0x1
 13784 0a5a 50       		.byte	0x50
 13785 0a5b 00000000 		.4byte	0
 13786 0a5f 00000000 		.4byte	0
 13787              	.LLST95:
 13788 0a63 141B0000 		.4byte	.LVL494-.Ltext0
 13789 0a67 161B0000 		.4byte	.LVL495-.Ltext0
 13790 0a6b 0100     		.2byte	0x1
 13791 0a6d 50       		.byte	0x50
 13792 0a6e 161B0000 		.4byte	.LVL495-.Ltext0
 13793 0a72 181B0000 		.4byte	.LVL496-.Ltext0
 13794 0a76 0300     		.2byte	0x3
 13795 0a78 91       		.byte	0x91
 13796 0a79 8C7F     		.sleb128 -116
 13797 0a7b 181B0000 		.4byte	.LVL496-.Ltext0
 13798 0a7f 1E1B0000 		.4byte	.LVL497-.Ltext0
 13799 0a83 0100     		.2byte	0x1
 13800 0a85 50       		.byte	0x50
ARM GAS  /tmp/cc18izUm.s 			page 307


 13801 0a86 1E1B0000 		.4byte	.LVL497-.Ltext0
 13802 0a8a 3E1B0000 		.4byte	.LVL502-.Ltext0
 13803 0a8e 0300     		.2byte	0x3
 13804 0a90 91       		.byte	0x91
 13805 0a91 8C7F     		.sleb128 -116
 13806 0a93 5C1B0000 		.4byte	.LVL505-.Ltext0
 13807 0a97 701B0000 		.4byte	.LVL507-.Ltext0
 13808 0a9b 0100     		.2byte	0x1
 13809 0a9d 50       		.byte	0x50
 13810 0a9e 701B0000 		.4byte	.LVL507-.Ltext0
 13811 0aa2 AC1B0000 		.4byte	.LVL515-.Ltext0
 13812 0aa6 0300     		.2byte	0x3
 13813 0aa8 91       		.byte	0x91
 13814 0aa9 8C7F     		.sleb128 -116
 13815 0aab 00000000 		.4byte	0
 13816 0aaf 00000000 		.4byte	0
 13817              	.LLST96:
 13818 0ab3 841B0000 		.4byte	.LVL509-.Ltext0
 13819 0ab7 881B0000 		.4byte	.LVL510-.Ltext0
 13820 0abb 1300     		.2byte	0x13
 13821 0abd 91       		.byte	0x91
 13822 0abe 8C7F     		.sleb128 -116
 13823 0ac0 F6       		.byte	0xf6
 13824 0ac1 04       		.byte	0x4
 13825 0ac2 25       		.uleb128 0x25
 13826 0ac3 F5       		.byte	0xf5
 13827 0ac4 00       		.uleb128 0
 13828 0ac5 25       		.uleb128 0x25
 13829 0ac6 1B       		.byte	0x1b
 13830 0ac7 F4       		.byte	0xf4
 13831 0ac8 25       		.uleb128 0x25
 13832 0ac9 04       		.byte	0x4
 13833 0aca 0000803F 		.4byte	0x3f800000
 13834 0ace 1C       		.byte	0x1c
 13835 0acf 9F       		.byte	0x9f
 13836 0ad0 881B0000 		.4byte	.LVL510-.Ltext0
 13837 0ad4 8B1B0000 		.4byte	.LVL511-1-.Ltext0
 13838 0ad8 1300     		.2byte	0x13
 13839 0ada 91       		.byte	0x91
 13840 0adb 8C7F     		.sleb128 -116
 13841 0add F6       		.byte	0xf6
 13842 0ade 04       		.byte	0x4
 13843 0adf 25       		.uleb128 0x25
 13844 0ae0 F5       		.byte	0xf5
 13845 0ae1 01       		.uleb128 0x1
 13846 0ae2 25       		.uleb128 0x25
 13847 0ae3 1B       		.byte	0x1b
 13848 0ae4 F4       		.byte	0xf4
 13849 0ae5 25       		.uleb128 0x25
 13850 0ae6 04       		.byte	0x4
 13851 0ae7 0000803F 		.4byte	0x3f800000
 13852 0aeb 1C       		.byte	0x1c
 13853 0aec 9F       		.byte	0x9f
 13854 0aed 00000000 		.4byte	0
 13855 0af1 00000000 		.4byte	0
 13856              	.LLST1:
 13857 0af5 98000000 		.4byte	.LVL12-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 308


 13858 0af9 B6000000 		.4byte	.LVL14-.Ltext0
 13859 0afd 0100     		.2byte	0x1
 13860 0aff 50       		.byte	0x50
 13861 0b00 B6000000 		.4byte	.LVL14-.Ltext0
 13862 0b04 08050000 		.4byte	.LFE99-.Ltext0
 13863 0b08 0100     		.2byte	0x1
 13864 0b0a 55       		.byte	0x55
 13865 0b0b 00000000 		.4byte	0
 13866 0b0f 00000000 		.4byte	0
 13867              	.LLST2:
 13868 0b13 98000000 		.4byte	.LVL12-.Ltext0
 13869 0b17 B4000000 		.4byte	.LVL13-.Ltext0
 13870 0b1b 0100     		.2byte	0x1
 13871 0b1d 51       		.byte	0x51
 13872 0b1e B4000000 		.4byte	.LVL13-.Ltext0
 13873 0b22 08050000 		.4byte	.LFE99-.Ltext0
 13874 0b26 0100     		.2byte	0x1
 13875 0b28 54       		.byte	0x54
 13876 0b29 00000000 		.4byte	0
 13877 0b2d 00000000 		.4byte	0
 13878              	.LLST3:
 13879 0b31 98000000 		.4byte	.LVL12-.Ltext0
 13880 0b35 BA000000 		.4byte	.LVL15-.Ltext0
 13881 0b39 0100     		.2byte	0x1
 13882 0b3b 52       		.byte	0x52
 13883 0b3c BA000000 		.4byte	.LVL15-.Ltext0
 13884 0b40 08050000 		.4byte	.LFE99-.Ltext0
 13885 0b44 0400     		.2byte	0x4
 13886 0b46 F3       		.byte	0xf3
 13887 0b47 01       		.uleb128 0x1
 13888 0b48 52       		.byte	0x52
 13889 0b49 9F       		.byte	0x9f
 13890 0b4a 00000000 		.4byte	0
 13891 0b4e 00000000 		.4byte	0
 13892              	.LLST4:
 13893 0b52 D4020000 		.4byte	.LVL38-.Ltext0
 13894 0b56 6A040000 		.4byte	.LVL64-.Ltext0
 13895 0b5a 0100     		.2byte	0x1
 13896 0b5c 58       		.byte	0x58
 13897 0b5d 70040000 		.4byte	.LVL65-.Ltext0
 13898 0b61 94040000 		.4byte	.LVL66-.Ltext0
 13899 0b65 0100     		.2byte	0x1
 13900 0b67 58       		.byte	0x58
 13901 0b68 FA040000 		.4byte	.LVL67-.Ltext0
 13902 0b6c 08050000 		.4byte	.LFE99-.Ltext0
 13903 0b70 0100     		.2byte	0x1
 13904 0b72 58       		.byte	0x58
 13905 0b73 00000000 		.4byte	0
 13906 0b77 00000000 		.4byte	0
 13907              	.LLST5:
 13908 0b7b E2020000 		.4byte	.LVL39-.Ltext0
 13909 0b7f F0020000 		.4byte	.LVL40-.Ltext0
 13910 0b83 0200     		.2byte	0x2
 13911 0b85 30       		.byte	0x30
 13912 0b86 9F       		.byte	0x9f
 13913 0b87 F0020000 		.4byte	.LVL40-.Ltext0
 13914 0b8b 7E030000 		.4byte	.LVL52-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 309


 13915 0b8f 0100     		.2byte	0x1
 13916 0b91 56       		.byte	0x56
 13917 0b92 7E030000 		.4byte	.LVL52-.Ltext0
 13918 0b96 80030000 		.4byte	.LVL53-.Ltext0
 13919 0b9a 0300     		.2byte	0x3
 13920 0b9c 76       		.byte	0x76
 13921 0b9d 01       		.sleb128 1
 13922 0b9e 9F       		.byte	0x9f
 13923 0b9f FA040000 		.4byte	.LVL67-.Ltext0
 13924 0ba3 08050000 		.4byte	.LFE99-.Ltext0
 13925 0ba7 0100     		.2byte	0x1
 13926 0ba9 56       		.byte	0x56
 13927 0baa 00000000 		.4byte	0
 13928 0bae 00000000 		.4byte	0
 13929              	.LLST6:
 13930 0bb2 BE020000 		.4byte	.LVL37-.Ltext0
 13931 0bb6 F0020000 		.4byte	.LVL40-.Ltext0
 13932 0bba 1200     		.2byte	0x12
 13933 0bbc 91       		.byte	0x91
 13934 0bbd 54       		.sleb128 -44
 13935 0bbe 94       		.byte	0x94
 13936 0bbf 01       		.byte	0x1
 13937 0bc0 08       		.byte	0x8
 13938 0bc1 FF       		.byte	0xff
 13939 0bc2 1A       		.byte	0x1a
 13940 0bc3 38       		.byte	0x38
 13941 0bc4 24       		.byte	0x24
 13942 0bc5 91       		.byte	0x91
 13943 0bc6 55       		.sleb128 -43
 13944 0bc7 94       		.byte	0x94
 13945 0bc8 01       		.byte	0x1
 13946 0bc9 08       		.byte	0x8
 13947 0bca FF       		.byte	0xff
 13948 0bcb 1A       		.byte	0x1a
 13949 0bcc 21       		.byte	0x21
 13950 0bcd 9F       		.byte	0x9f
 13951 0bce 00000000 		.4byte	0
 13952 0bd2 00000000 		.4byte	0
 13953              	.LLST7:
 13954 0bd6 06030000 		.4byte	.LVL42-.Ltext0
 13955 0bda 14030000 		.4byte	.LVL43-.Ltext0
 13956 0bde 1600     		.2byte	0x16
 13957 0be0 91       		.byte	0x91
 13958 0be1 54       		.sleb128 -44
 13959 0be2 94       		.byte	0x94
 13960 0be3 01       		.byte	0x1
 13961 0be4 08       		.byte	0x8
 13962 0be5 FF       		.byte	0xff
 13963 0be6 1A       		.byte	0x1a
 13964 0be7 38       		.byte	0x38
 13965 0be8 24       		.byte	0x24
 13966 0be9 91       		.byte	0x91
 13967 0bea 55       		.sleb128 -43
 13968 0beb 94       		.byte	0x94
 13969 0bec 01       		.byte	0x1
 13970 0bed 08       		.byte	0x8
 13971 0bee FF       		.byte	0xff
ARM GAS  /tmp/cc18izUm.s 			page 310


 13972 0bef 1A       		.byte	0x1a
 13973 0bf0 21       		.byte	0x21
 13974 0bf1 9F       		.byte	0x9f
 13975 0bf2 93       		.byte	0x93
 13976 0bf3 02       		.uleb128 0x2
 13977 0bf4 93       		.byte	0x93
 13978 0bf5 04       		.uleb128 0x4
 13979 0bf6 14030000 		.4byte	.LVL43-.Ltext0
 13980 0bfa 22030000 		.4byte	.LVL44-.Ltext0
 13981 0bfe 1900     		.2byte	0x19
 13982 0c00 91       		.byte	0x91
 13983 0c01 54       		.sleb128 -44
 13984 0c02 94       		.byte	0x94
 13985 0c03 01       		.byte	0x1
 13986 0c04 08       		.byte	0x8
 13987 0c05 FF       		.byte	0xff
 13988 0c06 1A       		.byte	0x1a
 13989 0c07 38       		.byte	0x38
 13990 0c08 24       		.byte	0x24
 13991 0c09 91       		.byte	0x91
 13992 0c0a 55       		.sleb128 -43
 13993 0c0b 94       		.byte	0x94
 13994 0c0c 01       		.byte	0x1
 13995 0c0d 08       		.byte	0x8
 13996 0c0e FF       		.byte	0xff
 13997 0c0f 1A       		.byte	0x1a
 13998 0c10 21       		.byte	0x21
 13999 0c11 9F       		.byte	0x9f
 14000 0c12 93       		.byte	0x93
 14001 0c13 02       		.uleb128 0x2
 14002 0c14 52       		.byte	0x52
 14003 0c15 93       		.byte	0x93
 14004 0c16 02       		.uleb128 0x2
 14005 0c17 93       		.byte	0x93
 14006 0c18 02       		.uleb128 0x2
 14007 0c19 22030000 		.4byte	.LVL44-.Ltext0
 14008 0c1d 3A030000 		.4byte	.LVL45-.Ltext0
 14009 0c21 1A00     		.2byte	0x1a
 14010 0c23 91       		.byte	0x91
 14011 0c24 54       		.sleb128 -44
 14012 0c25 94       		.byte	0x94
 14013 0c26 01       		.byte	0x1
 14014 0c27 08       		.byte	0x8
 14015 0c28 FF       		.byte	0xff
 14016 0c29 1A       		.byte	0x1a
 14017 0c2a 38       		.byte	0x38
 14018 0c2b 24       		.byte	0x24
 14019 0c2c 91       		.byte	0x91
 14020 0c2d 55       		.sleb128 -43
 14021 0c2e 94       		.byte	0x94
 14022 0c2f 01       		.byte	0x1
 14023 0c30 08       		.byte	0x8
 14024 0c31 FF       		.byte	0xff
 14025 0c32 1A       		.byte	0x1a
 14026 0c33 21       		.byte	0x21
 14027 0c34 9F       		.byte	0x9f
 14028 0c35 93       		.byte	0x93
ARM GAS  /tmp/cc18izUm.s 			page 311


 14029 0c36 02       		.uleb128 0x2
 14030 0c37 52       		.byte	0x52
 14031 0c38 93       		.byte	0x93
 14032 0c39 02       		.uleb128 0x2
 14033 0c3a 53       		.byte	0x53
 14034 0c3b 93       		.byte	0x93
 14035 0c3c 02       		.uleb128 0x2
 14036 0c3d 3A030000 		.4byte	.LVL45-.Ltext0
 14037 0c41 40030000 		.4byte	.LVL46-.Ltext0
 14038 0c45 2B00     		.2byte	0x2b
 14039 0c47 91       		.byte	0x91
 14040 0c48 54       		.sleb128 -44
 14041 0c49 94       		.byte	0x94
 14042 0c4a 01       		.byte	0x1
 14043 0c4b 08       		.byte	0x8
 14044 0c4c FF       		.byte	0xff
 14045 0c4d 1A       		.byte	0x1a
 14046 0c4e 38       		.byte	0x38
 14047 0c4f 24       		.byte	0x24
 14048 0c50 91       		.byte	0x91
 14049 0c51 55       		.sleb128 -43
 14050 0c52 94       		.byte	0x94
 14051 0c53 01       		.byte	0x1
 14052 0c54 08       		.byte	0x8
 14053 0c55 FF       		.byte	0xff
 14054 0c56 1A       		.byte	0x1a
 14055 0c57 21       		.byte	0x21
 14056 0c58 9F       		.byte	0x9f
 14057 0c59 93       		.byte	0x93
 14058 0c5a 02       		.uleb128 0x2
 14059 0c5b 91       		.byte	0x91
 14060 0c5c 56       		.sleb128 -42
 14061 0c5d 94       		.byte	0x94
 14062 0c5e 01       		.byte	0x1
 14063 0c5f 08       		.byte	0x8
 14064 0c60 FF       		.byte	0xff
 14065 0c61 1A       		.byte	0x1a
 14066 0c62 38       		.byte	0x38
 14067 0c63 24       		.byte	0x24
 14068 0c64 91       		.byte	0x91
 14069 0c65 57       		.sleb128 -41
 14070 0c66 94       		.byte	0x94
 14071 0c67 01       		.byte	0x1
 14072 0c68 08       		.byte	0x8
 14073 0c69 FF       		.byte	0xff
 14074 0c6a 1A       		.byte	0x1a
 14075 0c6b 21       		.byte	0x21
 14076 0c6c 9F       		.byte	0x9f
 14077 0c6d 93       		.byte	0x93
 14078 0c6e 02       		.uleb128 0x2
 14079 0c6f 53       		.byte	0x53
 14080 0c70 93       		.byte	0x93
 14081 0c71 02       		.uleb128 0x2
 14082 0c72 40030000 		.4byte	.LVL46-.Ltext0
 14083 0c76 86030000 		.4byte	.LVL54-.Ltext0
 14084 0c7a 3C00     		.2byte	0x3c
 14085 0c7c 91       		.byte	0x91
ARM GAS  /tmp/cc18izUm.s 			page 312


 14086 0c7d 54       		.sleb128 -44
 14087 0c7e 94       		.byte	0x94
 14088 0c7f 01       		.byte	0x1
 14089 0c80 08       		.byte	0x8
 14090 0c81 FF       		.byte	0xff
 14091 0c82 1A       		.byte	0x1a
 14092 0c83 38       		.byte	0x38
 14093 0c84 24       		.byte	0x24
 14094 0c85 91       		.byte	0x91
 14095 0c86 55       		.sleb128 -43
 14096 0c87 94       		.byte	0x94
 14097 0c88 01       		.byte	0x1
 14098 0c89 08       		.byte	0x8
 14099 0c8a FF       		.byte	0xff
 14100 0c8b 1A       		.byte	0x1a
 14101 0c8c 21       		.byte	0x21
 14102 0c8d 9F       		.byte	0x9f
 14103 0c8e 93       		.byte	0x93
 14104 0c8f 02       		.uleb128 0x2
 14105 0c90 91       		.byte	0x91
 14106 0c91 56       		.sleb128 -42
 14107 0c92 94       		.byte	0x94
 14108 0c93 01       		.byte	0x1
 14109 0c94 08       		.byte	0x8
 14110 0c95 FF       		.byte	0xff
 14111 0c96 1A       		.byte	0x1a
 14112 0c97 38       		.byte	0x38
 14113 0c98 24       		.byte	0x24
 14114 0c99 91       		.byte	0x91
 14115 0c9a 57       		.sleb128 -41
 14116 0c9b 94       		.byte	0x94
 14117 0c9c 01       		.byte	0x1
 14118 0c9d 08       		.byte	0x8
 14119 0c9e FF       		.byte	0xff
 14120 0c9f 1A       		.byte	0x1a
 14121 0ca0 21       		.byte	0x21
 14122 0ca1 9F       		.byte	0x9f
 14123 0ca2 93       		.byte	0x93
 14124 0ca3 02       		.uleb128 0x2
 14125 0ca4 91       		.byte	0x91
 14126 0ca5 58       		.sleb128 -40
 14127 0ca6 94       		.byte	0x94
 14128 0ca7 01       		.byte	0x1
 14129 0ca8 08       		.byte	0x8
 14130 0ca9 FF       		.byte	0xff
 14131 0caa 1A       		.byte	0x1a
 14132 0cab 38       		.byte	0x38
 14133 0cac 24       		.byte	0x24
 14134 0cad 91       		.byte	0x91
 14135 0cae 59       		.sleb128 -39
 14136 0caf 94       		.byte	0x94
 14137 0cb0 01       		.byte	0x1
 14138 0cb1 08       		.byte	0x8
 14139 0cb2 FF       		.byte	0xff
 14140 0cb3 1A       		.byte	0x1a
 14141 0cb4 21       		.byte	0x21
 14142 0cb5 9F       		.byte	0x9f
ARM GAS  /tmp/cc18izUm.s 			page 313


 14143 0cb6 93       		.byte	0x93
 14144 0cb7 02       		.uleb128 0x2
 14145 0cb8 00000000 		.4byte	0
 14146 0cbc 00000000 		.4byte	0
 14147              	.LLST8:
 14148 0cc0 42030000 		.4byte	.LVL47-.Ltext0
 14149 0cc4 50030000 		.4byte	.LVL48-.Ltext0
 14150 0cc8 1600     		.2byte	0x16
 14151 0cca 91       		.byte	0x91
 14152 0ccb 5A       		.sleb128 -38
 14153 0ccc 94       		.byte	0x94
 14154 0ccd 01       		.byte	0x1
 14155 0cce 08       		.byte	0x8
 14156 0ccf FF       		.byte	0xff
 14157 0cd0 1A       		.byte	0x1a
 14158 0cd1 38       		.byte	0x38
 14159 0cd2 24       		.byte	0x24
 14160 0cd3 91       		.byte	0x91
 14161 0cd4 5B       		.sleb128 -37
 14162 0cd5 94       		.byte	0x94
 14163 0cd6 01       		.byte	0x1
 14164 0cd7 08       		.byte	0x8
 14165 0cd8 FF       		.byte	0xff
 14166 0cd9 1A       		.byte	0x1a
 14167 0cda 21       		.byte	0x21
 14168 0cdb 9F       		.byte	0x9f
 14169 0cdc 93       		.byte	0x93
 14170 0cdd 02       		.uleb128 0x2
 14171 0cde 93       		.byte	0x93
 14172 0cdf 04       		.uleb128 0x4
 14173 0ce0 50030000 		.4byte	.LVL48-.Ltext0
 14174 0ce4 5E030000 		.4byte	.LVL49-.Ltext0
 14175 0ce8 1900     		.2byte	0x19
 14176 0cea 91       		.byte	0x91
 14177 0ceb 5A       		.sleb128 -38
 14178 0cec 94       		.byte	0x94
 14179 0ced 01       		.byte	0x1
 14180 0cee 08       		.byte	0x8
 14181 0cef FF       		.byte	0xff
 14182 0cf0 1A       		.byte	0x1a
 14183 0cf1 38       		.byte	0x38
 14184 0cf2 24       		.byte	0x24
 14185 0cf3 91       		.byte	0x91
 14186 0cf4 5B       		.sleb128 -37
 14187 0cf5 94       		.byte	0x94
 14188 0cf6 01       		.byte	0x1
 14189 0cf7 08       		.byte	0x8
 14190 0cf8 FF       		.byte	0xff
 14191 0cf9 1A       		.byte	0x1a
 14192 0cfa 21       		.byte	0x21
 14193 0cfb 9F       		.byte	0x9f
 14194 0cfc 93       		.byte	0x93
 14195 0cfd 02       		.uleb128 0x2
 14196 0cfe 51       		.byte	0x51
 14197 0cff 93       		.byte	0x93
 14198 0d00 02       		.uleb128 0x2
 14199 0d01 93       		.byte	0x93
ARM GAS  /tmp/cc18izUm.s 			page 314


 14200 0d02 02       		.uleb128 0x2
 14201 0d03 5E030000 		.4byte	.LVL49-.Ltext0
 14202 0d07 76030000 		.4byte	.LVL50-.Ltext0
 14203 0d0b 1A00     		.2byte	0x1a
 14204 0d0d 91       		.byte	0x91
 14205 0d0e 5A       		.sleb128 -38
 14206 0d0f 94       		.byte	0x94
 14207 0d10 01       		.byte	0x1
 14208 0d11 08       		.byte	0x8
 14209 0d12 FF       		.byte	0xff
 14210 0d13 1A       		.byte	0x1a
 14211 0d14 38       		.byte	0x38
 14212 0d15 24       		.byte	0x24
 14213 0d16 91       		.byte	0x91
 14214 0d17 5B       		.sleb128 -37
 14215 0d18 94       		.byte	0x94
 14216 0d19 01       		.byte	0x1
 14217 0d1a 08       		.byte	0x8
 14218 0d1b FF       		.byte	0xff
 14219 0d1c 1A       		.byte	0x1a
 14220 0d1d 21       		.byte	0x21
 14221 0d1e 9F       		.byte	0x9f
 14222 0d1f 93       		.byte	0x93
 14223 0d20 02       		.uleb128 0x2
 14224 0d21 51       		.byte	0x51
 14225 0d22 93       		.byte	0x93
 14226 0d23 02       		.uleb128 0x2
 14227 0d24 53       		.byte	0x53
 14228 0d25 93       		.byte	0x93
 14229 0d26 02       		.uleb128 0x2
 14230 0d27 76030000 		.4byte	.LVL50-.Ltext0
 14231 0d2b 7C030000 		.4byte	.LVL51-.Ltext0
 14232 0d2f 2B00     		.2byte	0x2b
 14233 0d31 91       		.byte	0x91
 14234 0d32 5A       		.sleb128 -38
 14235 0d33 94       		.byte	0x94
 14236 0d34 01       		.byte	0x1
 14237 0d35 08       		.byte	0x8
 14238 0d36 FF       		.byte	0xff
 14239 0d37 1A       		.byte	0x1a
 14240 0d38 38       		.byte	0x38
 14241 0d39 24       		.byte	0x24
 14242 0d3a 91       		.byte	0x91
 14243 0d3b 5B       		.sleb128 -37
 14244 0d3c 94       		.byte	0x94
 14245 0d3d 01       		.byte	0x1
 14246 0d3e 08       		.byte	0x8
 14247 0d3f FF       		.byte	0xff
 14248 0d40 1A       		.byte	0x1a
 14249 0d41 21       		.byte	0x21
 14250 0d42 9F       		.byte	0x9f
 14251 0d43 93       		.byte	0x93
 14252 0d44 02       		.uleb128 0x2
 14253 0d45 91       		.byte	0x91
 14254 0d46 5C       		.sleb128 -36
 14255 0d47 94       		.byte	0x94
 14256 0d48 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 315


 14257 0d49 08       		.byte	0x8
 14258 0d4a FF       		.byte	0xff
 14259 0d4b 1A       		.byte	0x1a
 14260 0d4c 38       		.byte	0x38
 14261 0d4d 24       		.byte	0x24
 14262 0d4e 91       		.byte	0x91
 14263 0d4f 5D       		.sleb128 -35
 14264 0d50 94       		.byte	0x94
 14265 0d51 01       		.byte	0x1
 14266 0d52 08       		.byte	0x8
 14267 0d53 FF       		.byte	0xff
 14268 0d54 1A       		.byte	0x1a
 14269 0d55 21       		.byte	0x21
 14270 0d56 9F       		.byte	0x9f
 14271 0d57 93       		.byte	0x93
 14272 0d58 02       		.uleb128 0x2
 14273 0d59 53       		.byte	0x53
 14274 0d5a 93       		.byte	0x93
 14275 0d5b 02       		.uleb128 0x2
 14276 0d5c 7C030000 		.4byte	.LVL51-.Ltext0
 14277 0d60 86030000 		.4byte	.LVL54-.Ltext0
 14278 0d64 3C00     		.2byte	0x3c
 14279 0d66 91       		.byte	0x91
 14280 0d67 5A       		.sleb128 -38
 14281 0d68 94       		.byte	0x94
 14282 0d69 01       		.byte	0x1
 14283 0d6a 08       		.byte	0x8
 14284 0d6b FF       		.byte	0xff
 14285 0d6c 1A       		.byte	0x1a
 14286 0d6d 38       		.byte	0x38
 14287 0d6e 24       		.byte	0x24
 14288 0d6f 91       		.byte	0x91
 14289 0d70 5B       		.sleb128 -37
 14290 0d71 94       		.byte	0x94
 14291 0d72 01       		.byte	0x1
 14292 0d73 08       		.byte	0x8
 14293 0d74 FF       		.byte	0xff
 14294 0d75 1A       		.byte	0x1a
 14295 0d76 21       		.byte	0x21
 14296 0d77 9F       		.byte	0x9f
 14297 0d78 93       		.byte	0x93
 14298 0d79 02       		.uleb128 0x2
 14299 0d7a 91       		.byte	0x91
 14300 0d7b 5C       		.sleb128 -36
 14301 0d7c 94       		.byte	0x94
 14302 0d7d 01       		.byte	0x1
 14303 0d7e 08       		.byte	0x8
 14304 0d7f FF       		.byte	0xff
 14305 0d80 1A       		.byte	0x1a
 14306 0d81 38       		.byte	0x38
 14307 0d82 24       		.byte	0x24
 14308 0d83 91       		.byte	0x91
 14309 0d84 5D       		.sleb128 -35
 14310 0d85 94       		.byte	0x94
 14311 0d86 01       		.byte	0x1
 14312 0d87 08       		.byte	0x8
 14313 0d88 FF       		.byte	0xff
ARM GAS  /tmp/cc18izUm.s 			page 316


 14314 0d89 1A       		.byte	0x1a
 14315 0d8a 21       		.byte	0x21
 14316 0d8b 9F       		.byte	0x9f
 14317 0d8c 93       		.byte	0x93
 14318 0d8d 02       		.uleb128 0x2
 14319 0d8e 91       		.byte	0x91
 14320 0d8f 5E       		.sleb128 -34
 14321 0d90 94       		.byte	0x94
 14322 0d91 01       		.byte	0x1
 14323 0d92 08       		.byte	0x8
 14324 0d93 FF       		.byte	0xff
 14325 0d94 1A       		.byte	0x1a
 14326 0d95 38       		.byte	0x38
 14327 0d96 24       		.byte	0x24
 14328 0d97 91       		.byte	0x91
 14329 0d98 5F       		.sleb128 -33
 14330 0d99 94       		.byte	0x94
 14331 0d9a 01       		.byte	0x1
 14332 0d9b 08       		.byte	0x8
 14333 0d9c FF       		.byte	0xff
 14334 0d9d 1A       		.byte	0x1a
 14335 0d9e 21       		.byte	0x21
 14336 0d9f 9F       		.byte	0x9f
 14337 0da0 93       		.byte	0x93
 14338 0da1 02       		.uleb128 0x2
 14339 0da2 00000000 		.4byte	0
 14340 0da6 00000000 		.4byte	0
 14341              	.LLST54:
 14342 0daa 00120000 		.4byte	.LVL307-.Ltext0
 14343 0dae 44120000 		.4byte	.LVL308-.Ltext0
 14344 0db2 0100     		.2byte	0x1
 14345 0db4 50       		.byte	0x50
 14346 0db5 44120000 		.4byte	.LVL308-.Ltext0
 14347 0db9 5E120000 		.4byte	.LVL310-.Ltext0
 14348 0dbd 0400     		.2byte	0x4
 14349 0dbf F3       		.byte	0xf3
 14350 0dc0 01       		.uleb128 0x1
 14351 0dc1 50       		.byte	0x50
 14352 0dc2 9F       		.byte	0x9f
 14353 0dc3 5E120000 		.4byte	.LVL310-.Ltext0
 14354 0dc7 68120000 		.4byte	.LVL311-.Ltext0
 14355 0dcb 0100     		.2byte	0x1
 14356 0dcd 50       		.byte	0x50
 14357 0dce 68120000 		.4byte	.LVL311-.Ltext0
 14358 0dd2 74120000 		.4byte	.LFE95-.Ltext0
 14359 0dd6 0400     		.2byte	0x4
 14360 0dd8 F3       		.byte	0xf3
 14361 0dd9 01       		.uleb128 0x1
 14362 0dda 50       		.byte	0x50
 14363 0ddb 9F       		.byte	0x9f
 14364 0ddc 00000000 		.4byte	0
 14365 0de0 00000000 		.4byte	0
 14366              	.LLST53:
 14367 0de4 F0110000 		.4byte	.LVL305-.Ltext0
 14368 0de8 F8110000 		.4byte	.LVL306-.Ltext0
 14369 0dec 0100     		.2byte	0x1
 14370 0dee 50       		.byte	0x50
ARM GAS  /tmp/cc18izUm.s 			page 317


 14371 0def F8110000 		.4byte	.LVL306-.Ltext0
 14372 0df3 00120000 		.4byte	.LFE94-.Ltext0
 14373 0df7 0500     		.2byte	0x5
 14374 0df9 03       		.byte	0x3
 14375 0dfa 22000000 		.4byte	st+34
 14376 0dfe 00000000 		.4byte	0
 14377 0e02 00000000 		.4byte	0
 14378              	.LLST52:
 14379 0e06 94100000 		.4byte	.LVL291-.Ltext0
 14380 0e0a AE100000 		.4byte	.LVL292-.Ltext0
 14381 0e0e 0100     		.2byte	0x1
 14382 0e10 50       		.byte	0x50
 14383 0e11 AE100000 		.4byte	.LVL292-.Ltext0
 14384 0e15 30110000 		.4byte	.LVL297-.Ltext0
 14385 0e19 0400     		.2byte	0x4
 14386 0e1b F3       		.byte	0xf3
 14387 0e1c 01       		.uleb128 0x1
 14388 0e1d 50       		.byte	0x50
 14389 0e1e 9F       		.byte	0x9f
 14390 0e1f 30110000 		.4byte	.LVL297-.Ltext0
 14391 0e23 36110000 		.4byte	.LVL298-.Ltext0
 14392 0e27 0100     		.2byte	0x1
 14393 0e29 50       		.byte	0x50
 14394 0e2a 36110000 		.4byte	.LVL298-.Ltext0
 14395 0e2e C8110000 		.4byte	.LVL303-.Ltext0
 14396 0e32 0400     		.2byte	0x4
 14397 0e34 F3       		.byte	0xf3
 14398 0e35 01       		.uleb128 0x1
 14399 0e36 50       		.byte	0x50
 14400 0e37 9F       		.byte	0x9f
 14401 0e38 C8110000 		.4byte	.LVL303-.Ltext0
 14402 0e3c CA110000 		.4byte	.LVL304-.Ltext0
 14403 0e40 0100     		.2byte	0x1
 14404 0e42 50       		.byte	0x50
 14405 0e43 CA110000 		.4byte	.LVL304-.Ltext0
 14406 0e47 F0110000 		.4byte	.LFE93-.Ltext0
 14407 0e4b 0400     		.2byte	0x4
 14408 0e4d F3       		.byte	0xf3
 14409 0e4e 01       		.uleb128 0x1
 14410 0e4f 50       		.byte	0x50
 14411 0e50 9F       		.byte	0x9f
 14412 0e51 00000000 		.4byte	0
 14413 0e55 00000000 		.4byte	0
 14414              	.LLST48:
 14415 0e59 D40F0000 		.4byte	.LVL273-.Ltext0
 14416 0e5d F60F0000 		.4byte	.LVL275-.Ltext0
 14417 0e61 0100     		.2byte	0x1
 14418 0e63 50       		.byte	0x50
 14419 0e64 F60F0000 		.4byte	.LVL275-.Ltext0
 14420 0e68 72100000 		.4byte	.LVL285-.Ltext0
 14421 0e6c 0400     		.2byte	0x4
 14422 0e6e F3       		.byte	0xf3
 14423 0e6f 01       		.uleb128 0x1
 14424 0e70 50       		.byte	0x50
 14425 0e71 9F       		.byte	0x9f
 14426 0e72 72100000 		.4byte	.LVL285-.Ltext0
 14427 0e76 76100000 		.4byte	.LVL286-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 318


 14428 0e7a 0100     		.2byte	0x1
 14429 0e7c 50       		.byte	0x50
 14430 0e7d 76100000 		.4byte	.LVL286-.Ltext0
 14431 0e81 78100000 		.4byte	.LVL287-.Ltext0
 14432 0e85 0400     		.2byte	0x4
 14433 0e87 F3       		.byte	0xf3
 14434 0e88 01       		.uleb128 0x1
 14435 0e89 50       		.byte	0x50
 14436 0e8a 9F       		.byte	0x9f
 14437 0e8b 78100000 		.4byte	.LVL287-.Ltext0
 14438 0e8f 7C100000 		.4byte	.LVL288-.Ltext0
 14439 0e93 0100     		.2byte	0x1
 14440 0e95 50       		.byte	0x50
 14441 0e96 7C100000 		.4byte	.LVL288-.Ltext0
 14442 0e9a 94100000 		.4byte	.LFE92-.Ltext0
 14443 0e9e 0400     		.2byte	0x4
 14444 0ea0 F3       		.byte	0xf3
 14445 0ea1 01       		.uleb128 0x1
 14446 0ea2 50       		.byte	0x50
 14447 0ea3 9F       		.byte	0x9f
 14448 0ea4 00000000 		.4byte	0
 14449 0ea8 00000000 		.4byte	0
 14450              	.LLST49:
 14451 0eac D40F0000 		.4byte	.LVL273-.Ltext0
 14452 0eb0 F40F0000 		.4byte	.LVL274-.Ltext0
 14453 0eb4 0100     		.2byte	0x1
 14454 0eb6 51       		.byte	0x51
 14455 0eb7 F40F0000 		.4byte	.LVL274-.Ltext0
 14456 0ebb 5A100000 		.4byte	.LVL282-.Ltext0
 14457 0ebf 0100     		.2byte	0x1
 14458 0ec1 57       		.byte	0x57
 14459 0ec2 5A100000 		.4byte	.LVL282-.Ltext0
 14460 0ec6 5E100000 		.4byte	.LVL283-.Ltext0
 14461 0eca 0400     		.2byte	0x4
 14462 0ecc F3       		.byte	0xf3
 14463 0ecd 01       		.uleb128 0x1
 14464 0ece 51       		.byte	0x51
 14465 0ecf 9F       		.byte	0x9f
 14466 0ed0 5E100000 		.4byte	.LVL283-.Ltext0
 14467 0ed4 72100000 		.4byte	.LVL285-.Ltext0
 14468 0ed8 0100     		.2byte	0x1
 14469 0eda 57       		.byte	0x57
 14470 0edb 72100000 		.4byte	.LVL285-.Ltext0
 14471 0edf 7E100000 		.4byte	.LVL289-.Ltext0
 14472 0ee3 0100     		.2byte	0x1
 14473 0ee5 51       		.byte	0x51
 14474 0ee6 7E100000 		.4byte	.LVL289-.Ltext0
 14475 0eea 94100000 		.4byte	.LFE92-.Ltext0
 14476 0eee 0100     		.2byte	0x1
 14477 0ef0 57       		.byte	0x57
 14478 0ef1 00000000 		.4byte	0
 14479 0ef5 00000000 		.4byte	0
 14480              	.LLST50:
 14481 0ef9 D40F0000 		.4byte	.LVL273-.Ltext0
 14482 0efd FA0F0000 		.4byte	.LVL276-.Ltext0
 14483 0f01 0100     		.2byte	0x1
 14484 0f03 52       		.byte	0x52
ARM GAS  /tmp/cc18izUm.s 			page 319


 14485 0f04 FA0F0000 		.4byte	.LVL276-.Ltext0
 14486 0f08 5A100000 		.4byte	.LVL282-.Ltext0
 14487 0f0c 0100     		.2byte	0x1
 14488 0f0e 56       		.byte	0x56
 14489 0f0f 5A100000 		.4byte	.LVL282-.Ltext0
 14490 0f13 5E100000 		.4byte	.LVL283-.Ltext0
 14491 0f17 0400     		.2byte	0x4
 14492 0f19 F3       		.byte	0xf3
 14493 0f1a 01       		.uleb128 0x1
 14494 0f1b 52       		.byte	0x52
 14495 0f1c 9F       		.byte	0x9f
 14496 0f1d 5E100000 		.4byte	.LVL283-.Ltext0
 14497 0f21 72100000 		.4byte	.LVL285-.Ltext0
 14498 0f25 0100     		.2byte	0x1
 14499 0f27 56       		.byte	0x56
 14500 0f28 72100000 		.4byte	.LVL285-.Ltext0
 14501 0f2c 7E100000 		.4byte	.LVL289-.Ltext0
 14502 0f30 0100     		.2byte	0x1
 14503 0f32 52       		.byte	0x52
 14504 0f33 7E100000 		.4byte	.LVL289-.Ltext0
 14505 0f37 94100000 		.4byte	.LFE92-.Ltext0
 14506 0f3b 0100     		.2byte	0x1
 14507 0f3d 56       		.byte	0x56
 14508 0f3e 00000000 		.4byte	0
 14509 0f42 00000000 		.4byte	0
 14510              	.LLST51:
 14511 0f46 12100000 		.4byte	.LVL278-.Ltext0
 14512 0f4a 56100000 		.4byte	.LVL281-.Ltext0
 14513 0f4e 0100     		.2byte	0x1
 14514 0f50 54       		.byte	0x54
 14515 0f51 5E100000 		.4byte	.LVL283-.Ltext0
 14516 0f55 72100000 		.4byte	.LVL285-.Ltext0
 14517 0f59 0100     		.2byte	0x1
 14518 0f5b 54       		.byte	0x54
 14519 0f5c 84100000 		.4byte	.LVL290-.Ltext0
 14520 0f60 94100000 		.4byte	.LFE92-.Ltext0
 14521 0f64 0100     		.2byte	0x1
 14522 0f66 54       		.byte	0x54
 14523 0f67 00000000 		.4byte	0
 14524 0f6b 00000000 		.4byte	0
 14525              	.LLST40:
 14526 0f6f E00D0000 		.4byte	.LVL234-.Ltext0
 14527 0f73 3A0E0000 		.4byte	.LVL244-.Ltext0
 14528 0f77 0100     		.2byte	0x1
 14529 0f79 50       		.byte	0x50
 14530 0f7a 3A0E0000 		.4byte	.LVL244-.Ltext0
 14531 0f7e 900F0000 		.4byte	.LVL259-.Ltext0
 14532 0f82 0100     		.2byte	0x1
 14533 0f84 57       		.byte	0x57
 14534 0f85 900F0000 		.4byte	.LVL259-.Ltext0
 14535 0f89 940F0000 		.4byte	.LVL260-.Ltext0
 14536 0f8d 0100     		.2byte	0x1
 14537 0f8f 50       		.byte	0x50
 14538 0f90 940F0000 		.4byte	.LVL260-.Ltext0
 14539 0f94 960F0000 		.4byte	.LVL261-.Ltext0
 14540 0f98 0400     		.2byte	0x4
 14541 0f9a F3       		.byte	0xf3
ARM GAS  /tmp/cc18izUm.s 			page 320


 14542 0f9b 01       		.uleb128 0x1
 14543 0f9c 50       		.byte	0x50
 14544 0f9d 9F       		.byte	0x9f
 14545 0f9e 960F0000 		.4byte	.LVL261-.Ltext0
 14546 0fa2 9A0F0000 		.4byte	.LVL262-.Ltext0
 14547 0fa6 0100     		.2byte	0x1
 14548 0fa8 50       		.byte	0x50
 14549 0fa9 9A0F0000 		.4byte	.LVL262-.Ltext0
 14550 0fad 9C0F0000 		.4byte	.LVL263-.Ltext0
 14551 0fb1 0400     		.2byte	0x4
 14552 0fb3 F3       		.byte	0xf3
 14553 0fb4 01       		.uleb128 0x1
 14554 0fb5 50       		.byte	0x50
 14555 0fb6 9F       		.byte	0x9f
 14556 0fb7 9C0F0000 		.4byte	.LVL263-.Ltext0
 14557 0fbb A00F0000 		.4byte	.LVL264-.Ltext0
 14558 0fbf 0100     		.2byte	0x1
 14559 0fc1 50       		.byte	0x50
 14560 0fc2 A00F0000 		.4byte	.LVL264-.Ltext0
 14561 0fc6 A20F0000 		.4byte	.LVL265-.Ltext0
 14562 0fca 0400     		.2byte	0x4
 14563 0fcc F3       		.byte	0xf3
 14564 0fcd 01       		.uleb128 0x1
 14565 0fce 50       		.byte	0x50
 14566 0fcf 9F       		.byte	0x9f
 14567 0fd0 A20F0000 		.4byte	.LVL265-.Ltext0
 14568 0fd4 D40F0000 		.4byte	.LFE91-.Ltext0
 14569 0fd8 0100     		.2byte	0x1
 14570 0fda 57       		.byte	0x57
 14571 0fdb 00000000 		.4byte	0
 14572 0fdf 00000000 		.4byte	0
 14573              	.LLST41:
 14574 0fe3 E00D0000 		.4byte	.LVL234-.Ltext0
 14575 0fe7 380E0000 		.4byte	.LVL243-.Ltext0
 14576 0feb 0100     		.2byte	0x1
 14577 0fed 51       		.byte	0x51
 14578 0fee 380E0000 		.4byte	.LVL243-.Ltext0
 14579 0ff2 900F0000 		.4byte	.LVL259-.Ltext0
 14580 0ff6 0100     		.2byte	0x1
 14581 0ff8 59       		.byte	0x59
 14582 0ff9 900F0000 		.4byte	.LVL259-.Ltext0
 14583 0ffd A20F0000 		.4byte	.LVL265-.Ltext0
 14584 1001 0100     		.2byte	0x1
 14585 1003 51       		.byte	0x51
 14586 1004 A20F0000 		.4byte	.LVL265-.Ltext0
 14587 1008 D40F0000 		.4byte	.LFE91-.Ltext0
 14588 100c 0100     		.2byte	0x1
 14589 100e 59       		.byte	0x59
 14590 100f 00000000 		.4byte	0
 14591 1013 00000000 		.4byte	0
 14592              	.LLST42:
 14593 1017 E00D0000 		.4byte	.LVL234-.Ltext0
 14594 101b E20D0000 		.4byte	.LVL235-.Ltext0
 14595 101f 0100     		.2byte	0x1
 14596 1021 52       		.byte	0x52
 14597 1022 E20D0000 		.4byte	.LVL235-.Ltext0
 14598 1026 D40F0000 		.4byte	.LFE91-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 321


 14599 102a 0400     		.2byte	0x4
 14600 102c F3       		.byte	0xf3
 14601 102d 01       		.uleb128 0x1
 14602 102e 52       		.byte	0x52
 14603 102f 9F       		.byte	0x9f
 14604 1030 00000000 		.4byte	0
 14605 1034 00000000 		.4byte	0
 14606              	.LLST43:
 14607 1038 E00D0000 		.4byte	.LVL234-.Ltext0
 14608 103c 360E0000 		.4byte	.LVL242-.Ltext0
 14609 1040 0100     		.2byte	0x1
 14610 1042 53       		.byte	0x53
 14611 1043 360E0000 		.4byte	.LVL242-.Ltext0
 14612 1047 900F0000 		.4byte	.LVL259-.Ltext0
 14613 104b 0100     		.2byte	0x1
 14614 104d 56       		.byte	0x56
 14615 104e 900F0000 		.4byte	.LVL259-.Ltext0
 14616 1052 A20F0000 		.4byte	.LVL265-.Ltext0
 14617 1056 0100     		.2byte	0x1
 14618 1058 53       		.byte	0x53
 14619 1059 A20F0000 		.4byte	.LVL265-.Ltext0
 14620 105d D40F0000 		.4byte	.LFE91-.Ltext0
 14621 1061 0100     		.2byte	0x1
 14622 1063 56       		.byte	0x56
 14623 1064 00000000 		.4byte	0
 14624 1068 00000000 		.4byte	0
 14625              	.LLST44:
 14626 106c E00D0000 		.4byte	.LVL234-.Ltext0
 14627 1070 B00F0000 		.4byte	.LVL268-.Ltext0
 14628 1074 0200     		.2byte	0x2
 14629 1076 91       		.byte	0x91
 14630 1077 00       		.sleb128 0
 14631 1078 B00F0000 		.4byte	.LVL268-.Ltext0
 14632 107c D40F0000 		.4byte	.LFE91-.Ltext0
 14633 1080 0200     		.2byte	0x2
 14634 1082 91       		.byte	0x91
 14635 1083 00       		.sleb128 0
 14636 1084 00000000 		.4byte	0
 14637 1088 00000000 		.4byte	0
 14638              	.LLST45:
 14639 108c E00D0000 		.4byte	.LVL234-.Ltext0
 14640 1090 120E0000 		.4byte	.LVL236-.Ltext0
 14641 1094 0200     		.2byte	0x2
 14642 1096 30       		.byte	0x30
 14643 1097 9F       		.byte	0x9f
 14644 1098 120E0000 		.4byte	.LVL236-.Ltext0
 14645 109c 220E0000 		.4byte	.LVL238-.Ltext0
 14646 10a0 0100     		.2byte	0x1
 14647 10a2 54       		.byte	0x54
 14648 10a3 220E0000 		.4byte	.LVL238-.Ltext0
 14649 10a7 240E0000 		.4byte	.LVL239-.Ltext0
 14650 10ab 3500     		.2byte	0x35
 14651 10ad 32       		.byte	0x32
 14652 10ae 72       		.byte	0x72
 14653 10af 00       		.sleb128 0
 14654 10b0 08       		.byte	0x8
 14655 10b1 40       		.byte	0x40
ARM GAS  /tmp/cc18izUm.s 			page 322


 14656 10b2 1A       		.byte	0x1a
 14657 10b3 72       		.byte	0x72
 14658 10b4 00       		.sleb128 0
 14659 10b5 08       		.byte	0x8
 14660 10b6 40       		.byte	0x40
 14661 10b7 1A       		.byte	0x1a
 14662 10b8 30       		.byte	0x30
 14663 10b9 2E       		.byte	0x2e
 14664 10ba 28       		.byte	0x28
 14665 10bb 0100     		.2byte	0x1
 14666 10bd 16       		.byte	0x16
 14667 10be 13       		.byte	0x13
 14668 10bf 23       		.byte	0x23
 14669 10c0 02       		.uleb128 0x2
 14670 10c1 32       		.byte	0x32
 14671 10c2 72       		.byte	0x72
 14672 10c3 00       		.sleb128 0
 14673 10c4 08       		.byte	0x8
 14674 10c5 40       		.byte	0x40
 14675 10c6 1A       		.byte	0x1a
 14676 10c7 72       		.byte	0x72
 14677 10c8 00       		.sleb128 0
 14678 10c9 08       		.byte	0x8
 14679 10ca 40       		.byte	0x40
 14680 10cb 1A       		.byte	0x1a
 14681 10cc 30       		.byte	0x30
 14682 10cd 2E       		.byte	0x2e
 14683 10ce 28       		.byte	0x28
 14684 10cf 0100     		.2byte	0x1
 14685 10d1 16       		.byte	0x16
 14686 10d2 13       		.byte	0x13
 14687 10d3 72       		.byte	0x72
 14688 10d4 00       		.sleb128 0
 14689 10d5 09       		.byte	0x9
 14690 10d6 FE       		.byte	0xfe
 14691 10d7 24       		.byte	0x24
 14692 10d8 33       		.byte	0x33
 14693 10d9 25       		.byte	0x25
 14694 10da 30       		.byte	0x30
 14695 10db 2E       		.byte	0x2e
 14696 10dc 28       		.byte	0x28
 14697 10dd 0100     		.2byte	0x1
 14698 10df 16       		.byte	0x16
 14699 10e0 13       		.byte	0x13
 14700 10e1 9F       		.byte	0x9f
 14701 10e2 240E0000 		.4byte	.LVL239-.Ltext0
 14702 10e6 2C0E0000 		.4byte	.LVL240-.Ltext0
 14703 10ea 0100     		.2byte	0x1
 14704 10ec 54       		.byte	0x54
 14705 10ed 2C0E0000 		.4byte	.LVL240-.Ltext0
 14706 10f1 2E0E0000 		.4byte	.LVL241-.Ltext0
 14707 10f5 0201     		.2byte	0x102
 14708 10f7 32       		.byte	0x32
 14709 10f8 72       		.byte	0x72
 14710 10f9 00       		.sleb128 0
 14711 10fa 08       		.byte	0x8
 14712 10fb 40       		.byte	0x40
ARM GAS  /tmp/cc18izUm.s 			page 323


 14713 10fc 1A       		.byte	0x1a
 14714 10fd 72       		.byte	0x72
 14715 10fe 00       		.sleb128 0
 14716 10ff 08       		.byte	0x8
 14717 1100 40       		.byte	0x40
 14718 1101 1A       		.byte	0x1a
 14719 1102 30       		.byte	0x30
 14720 1103 2E       		.byte	0x2e
 14721 1104 28       		.byte	0x28
 14722 1105 0100     		.2byte	0x1
 14723 1107 16       		.byte	0x16
 14724 1108 13       		.byte	0x13
 14725 1109 23       		.byte	0x23
 14726 110a 02       		.uleb128 0x2
 14727 110b 32       		.byte	0x32
 14728 110c 72       		.byte	0x72
 14729 110d 00       		.sleb128 0
 14730 110e 08       		.byte	0x8
 14731 110f 40       		.byte	0x40
 14732 1110 1A       		.byte	0x1a
 14733 1111 72       		.byte	0x72
 14734 1112 00       		.sleb128 0
 14735 1113 08       		.byte	0x8
 14736 1114 40       		.byte	0x40
 14737 1115 1A       		.byte	0x1a
 14738 1116 30       		.byte	0x30
 14739 1117 2E       		.byte	0x2e
 14740 1118 28       		.byte	0x28
 14741 1119 0100     		.2byte	0x1
 14742 111b 16       		.byte	0x16
 14743 111c 13       		.byte	0x13
 14744 111d 72       		.byte	0x72
 14745 111e 00       		.sleb128 0
 14746 111f 09       		.byte	0x9
 14747 1120 FE       		.byte	0xfe
 14748 1121 24       		.byte	0x24
 14749 1122 33       		.byte	0x33
 14750 1123 25       		.byte	0x25
 14751 1124 30       		.byte	0x30
 14752 1125 2E       		.byte	0x2e
 14753 1126 28       		.byte	0x28
 14754 1127 0100     		.2byte	0x1
 14755 1129 16       		.byte	0x16
 14756 112a 13       		.byte	0x13
 14757 112b 23       		.byte	0x23
 14758 112c 02       		.uleb128 0x2
 14759 112d 32       		.byte	0x32
 14760 112e 72       		.byte	0x72
 14761 112f 00       		.sleb128 0
 14762 1130 08       		.byte	0x8
 14763 1131 40       		.byte	0x40
 14764 1132 1A       		.byte	0x1a
 14765 1133 72       		.byte	0x72
 14766 1134 00       		.sleb128 0
 14767 1135 08       		.byte	0x8
 14768 1136 40       		.byte	0x40
 14769 1137 1A       		.byte	0x1a
ARM GAS  /tmp/cc18izUm.s 			page 324


 14770 1138 30       		.byte	0x30
 14771 1139 2E       		.byte	0x2e
 14772 113a 28       		.byte	0x28
 14773 113b 0100     		.2byte	0x1
 14774 113d 16       		.byte	0x16
 14775 113e 13       		.byte	0x13
 14776 113f 23       		.byte	0x23
 14777 1140 02       		.uleb128 0x2
 14778 1141 32       		.byte	0x32
 14779 1142 72       		.byte	0x72
 14780 1143 00       		.sleb128 0
 14781 1144 08       		.byte	0x8
 14782 1145 40       		.byte	0x40
 14783 1146 1A       		.byte	0x1a
 14784 1147 72       		.byte	0x72
 14785 1148 00       		.sleb128 0
 14786 1149 08       		.byte	0x8
 14787 114a 40       		.byte	0x40
 14788 114b 1A       		.byte	0x1a
 14789 114c 30       		.byte	0x30
 14790 114d 2E       		.byte	0x2e
 14791 114e 28       		.byte	0x28
 14792 114f 0100     		.2byte	0x1
 14793 1151 16       		.byte	0x16
 14794 1152 13       		.byte	0x13
 14795 1153 72       		.byte	0x72
 14796 1154 00       		.sleb128 0
 14797 1155 09       		.byte	0x9
 14798 1156 FE       		.byte	0xfe
 14799 1157 24       		.byte	0x24
 14800 1158 33       		.byte	0x33
 14801 1159 25       		.byte	0x25
 14802 115a 30       		.byte	0x30
 14803 115b 2E       		.byte	0x2e
 14804 115c 28       		.byte	0x28
 14805 115d 0100     		.2byte	0x1
 14806 115f 16       		.byte	0x16
 14807 1160 13       		.byte	0x13
 14808 1161 72       		.byte	0x72
 14809 1162 00       		.sleb128 0
 14810 1163 09       		.byte	0x9
 14811 1164 FF       		.byte	0xff
 14812 1165 24       		.byte	0x24
 14813 1166 33       		.byte	0x33
 14814 1167 25       		.byte	0x25
 14815 1168 30       		.byte	0x30
 14816 1169 2E       		.byte	0x2e
 14817 116a 28       		.byte	0x28
 14818 116b 0100     		.2byte	0x1
 14819 116d 16       		.byte	0x16
 14820 116e 13       		.byte	0x13
 14821 116f 08       		.byte	0x8
 14822 1170 FF       		.byte	0xff
 14823 1171 1A       		.byte	0x1a
 14824 1172 32       		.byte	0x32
 14825 1173 72       		.byte	0x72
 14826 1174 00       		.sleb128 0
ARM GAS  /tmp/cc18izUm.s 			page 325


 14827 1175 08       		.byte	0x8
 14828 1176 40       		.byte	0x40
 14829 1177 1A       		.byte	0x1a
 14830 1178 72       		.byte	0x72
 14831 1179 00       		.sleb128 0
 14832 117a 08       		.byte	0x8
 14833 117b 40       		.byte	0x40
 14834 117c 1A       		.byte	0x1a
 14835 117d 30       		.byte	0x30
 14836 117e 2E       		.byte	0x2e
 14837 117f 28       		.byte	0x28
 14838 1180 0100     		.2byte	0x1
 14839 1182 16       		.byte	0x16
 14840 1183 13       		.byte	0x13
 14841 1184 23       		.byte	0x23
 14842 1185 02       		.uleb128 0x2
 14843 1186 32       		.byte	0x32
 14844 1187 72       		.byte	0x72
 14845 1188 00       		.sleb128 0
 14846 1189 08       		.byte	0x8
 14847 118a 40       		.byte	0x40
 14848 118b 1A       		.byte	0x1a
 14849 118c 72       		.byte	0x72
 14850 118d 00       		.sleb128 0
 14851 118e 08       		.byte	0x8
 14852 118f 40       		.byte	0x40
 14853 1190 1A       		.byte	0x1a
 14854 1191 30       		.byte	0x30
 14855 1192 2E       		.byte	0x2e
 14856 1193 28       		.byte	0x28
 14857 1194 0100     		.2byte	0x1
 14858 1196 16       		.byte	0x16
 14859 1197 13       		.byte	0x13
 14860 1198 72       		.byte	0x72
 14861 1199 00       		.sleb128 0
 14862 119a 09       		.byte	0x9
 14863 119b FE       		.byte	0xfe
 14864 119c 24       		.byte	0x24
 14865 119d 33       		.byte	0x33
 14866 119e 25       		.byte	0x25
 14867 119f 30       		.byte	0x30
 14868 11a0 2E       		.byte	0x2e
 14869 11a1 28       		.byte	0x28
 14870 11a2 0100     		.2byte	0x1
 14871 11a4 16       		.byte	0x16
 14872 11a5 13       		.byte	0x13
 14873 11a6 23       		.byte	0x23
 14874 11a7 02       		.uleb128 0x2
 14875 11a8 32       		.byte	0x32
 14876 11a9 72       		.byte	0x72
 14877 11aa 00       		.sleb128 0
 14878 11ab 08       		.byte	0x8
 14879 11ac 40       		.byte	0x40
 14880 11ad 1A       		.byte	0x1a
 14881 11ae 72       		.byte	0x72
 14882 11af 00       		.sleb128 0
 14883 11b0 08       		.byte	0x8
ARM GAS  /tmp/cc18izUm.s 			page 326


 14884 11b1 40       		.byte	0x40
 14885 11b2 1A       		.byte	0x1a
 14886 11b3 30       		.byte	0x30
 14887 11b4 2E       		.byte	0x2e
 14888 11b5 28       		.byte	0x28
 14889 11b6 0100     		.2byte	0x1
 14890 11b8 16       		.byte	0x16
 14891 11b9 13       		.byte	0x13
 14892 11ba 23       		.byte	0x23
 14893 11bb 02       		.uleb128 0x2
 14894 11bc 32       		.byte	0x32
 14895 11bd 72       		.byte	0x72
 14896 11be 00       		.sleb128 0
 14897 11bf 08       		.byte	0x8
 14898 11c0 40       		.byte	0x40
 14899 11c1 1A       		.byte	0x1a
 14900 11c2 72       		.byte	0x72
 14901 11c3 00       		.sleb128 0
 14902 11c4 08       		.byte	0x8
 14903 11c5 40       		.byte	0x40
 14904 11c6 1A       		.byte	0x1a
 14905 11c7 30       		.byte	0x30
 14906 11c8 2E       		.byte	0x2e
 14907 11c9 28       		.byte	0x28
 14908 11ca 0100     		.2byte	0x1
 14909 11cc 16       		.byte	0x16
 14910 11cd 13       		.byte	0x13
 14911 11ce 72       		.byte	0x72
 14912 11cf 00       		.sleb128 0
 14913 11d0 09       		.byte	0x9
 14914 11d1 FE       		.byte	0xfe
 14915 11d2 24       		.byte	0x24
 14916 11d3 33       		.byte	0x33
 14917 11d4 25       		.byte	0x25
 14918 11d5 30       		.byte	0x30
 14919 11d6 2E       		.byte	0x2e
 14920 11d7 28       		.byte	0x28
 14921 11d8 0100     		.2byte	0x1
 14922 11da 16       		.byte	0x16
 14923 11db 13       		.byte	0x13
 14924 11dc 72       		.byte	0x72
 14925 11dd 00       		.sleb128 0
 14926 11de 09       		.byte	0x9
 14927 11df FF       		.byte	0xff
 14928 11e0 24       		.byte	0x24
 14929 11e1 33       		.byte	0x33
 14930 11e2 25       		.byte	0x25
 14931 11e3 30       		.byte	0x30
 14932 11e4 2E       		.byte	0x2e
 14933 11e5 28       		.byte	0x28
 14934 11e6 0100     		.2byte	0x1
 14935 11e8 16       		.byte	0x16
 14936 11e9 13       		.byte	0x13
 14937 11ea 72       		.byte	0x72
 14938 11eb 00       		.sleb128 0
 14939 11ec 09       		.byte	0x9
 14940 11ed FF       		.byte	0xff
ARM GAS  /tmp/cc18izUm.s 			page 327


 14941 11ee 24       		.byte	0x24
 14942 11ef 33       		.byte	0x33
 14943 11f0 25       		.byte	0x25
 14944 11f1 30       		.byte	0x30
 14945 11f2 2E       		.byte	0x2e
 14946 11f3 28       		.byte	0x28
 14947 11f4 0100     		.2byte	0x1
 14948 11f6 16       		.byte	0x16
 14949 11f7 13       		.byte	0x13
 14950 11f8 9F       		.byte	0x9f
 14951 11f9 2E0E0000 		.4byte	.LVL241-.Ltext0
 14952 11fd 900F0000 		.4byte	.LVL259-.Ltext0
 14953 1201 0100     		.2byte	0x1
 14954 1203 54       		.byte	0x54
 14955 1204 900F0000 		.4byte	.LVL259-.Ltext0
 14956 1208 A20F0000 		.4byte	.LVL265-.Ltext0
 14957 120c 0200     		.2byte	0x2
 14958 120e 30       		.byte	0x30
 14959 120f 9F       		.byte	0x9f
 14960 1210 A20F0000 		.4byte	.LVL265-.Ltext0
 14961 1214 D40F0000 		.4byte	.LFE91-.Ltext0
 14962 1218 0100     		.2byte	0x1
 14963 121a 54       		.byte	0x54
 14964 121b 00000000 		.4byte	0
 14965 121f 00000000 		.4byte	0
 14966              	.LLST46:
 14967 1223 580E0000 		.4byte	.LVL246-.Ltext0
 14968 1227 AA0E0000 		.4byte	.LVL249-.Ltext0
 14969 122b 0100     		.2byte	0x1
 14970 122d 55       		.byte	0x55
 14971 122e 820F0000 		.4byte	.LVL256-.Ltext0
 14972 1232 8C0F0000 		.4byte	.LVL258-.Ltext0
 14973 1236 0100     		.2byte	0x1
 14974 1238 55       		.byte	0x55
 14975 1239 A80F0000 		.4byte	.LVL266-.Ltext0
 14976 123d AA0F0000 		.4byte	.LVL267-.Ltext0
 14977 1241 0100     		.2byte	0x1
 14978 1243 55       		.byte	0x55
 14979 1244 B00F0000 		.4byte	.LVL268-.Ltext0
 14980 1248 BC0F0000 		.4byte	.LVL269-.Ltext0
 14981 124c 0100     		.2byte	0x1
 14982 124e 55       		.byte	0x55
 14983 124f 00000000 		.4byte	0
 14984 1253 00000000 		.4byte	0
 14985              	.LLST47:
 14986 1257 E00D0000 		.4byte	.LVL234-.Ltext0
 14987 125b FC0E0000 		.4byte	.LVL250-.Ltext0
 14988 125f 0200     		.2byte	0x2
 14989 1261 30       		.byte	0x30
 14990 1262 9F       		.byte	0x9f
 14991 1263 FC0E0000 		.4byte	.LVL250-.Ltext0
 14992 1267 FE0E0000 		.4byte	.LVL251-.Ltext0
 14993 126b 0200     		.2byte	0x2
 14994 126d 36       		.byte	0x36
 14995 126e 9F       		.byte	0x9f
 14996 126f 280F0000 		.4byte	.LVL252-.Ltext0
 14997 1273 2E0F0000 		.4byte	.LVL253-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 328


 14998 1277 0100     		.2byte	0x1
 14999 1279 52       		.byte	0x52
 15000 127a 540F0000 		.4byte	.LVL254-.Ltext0
 15001 127e 5A0F0000 		.4byte	.LVL255-.Ltext0
 15002 1282 0100     		.2byte	0x1
 15003 1284 52       		.byte	0x52
 15004 1285 820F0000 		.4byte	.LVL256-.Ltext0
 15005 1289 AA0F0000 		.4byte	.LVL267-.Ltext0
 15006 128d 0200     		.2byte	0x2
 15007 128f 30       		.byte	0x30
 15008 1290 9F       		.byte	0x9f
 15009 1291 B00F0000 		.4byte	.LVL268-.Ltext0
 15010 1295 C00F0000 		.4byte	.LVL270-.Ltext0
 15011 1299 0200     		.2byte	0x2
 15012 129b 30       		.byte	0x30
 15013 129c 9F       		.byte	0x9f
 15014 129d C40F0000 		.4byte	.LVL271-.Ltext0
 15015 12a1 CC0F0000 		.4byte	.LVL272-.Ltext0
 15016 12a5 0100     		.2byte	0x1
 15017 12a7 52       		.byte	0x52
 15018 12a8 00000000 		.4byte	0
 15019 12ac 00000000 		.4byte	0
 15020              	.LLST39:
 15021 12b0 9C0D0000 		.4byte	.LVL228-.Ltext0
 15022 12b4 AE0D0000 		.4byte	.LVL229-.Ltext0
 15023 12b8 0100     		.2byte	0x1
 15024 12ba 50       		.byte	0x50
 15025 12bb AE0D0000 		.4byte	.LVL229-.Ltext0
 15026 12bf CE0D0000 		.4byte	.LVL231-.Ltext0
 15027 12c3 0100     		.2byte	0x1
 15028 12c5 54       		.byte	0x54
 15029 12c6 CE0D0000 		.4byte	.LVL231-.Ltext0
 15030 12ca D20D0000 		.4byte	.LVL232-.Ltext0
 15031 12ce 0100     		.2byte	0x1
 15032 12d0 50       		.byte	0x50
 15033 12d1 D20D0000 		.4byte	.LVL232-.Ltext0
 15034 12d5 D40D0000 		.4byte	.LVL233-.Ltext0
 15035 12d9 0400     		.2byte	0x4
 15036 12db F3       		.byte	0xf3
 15037 12dc 01       		.uleb128 0x1
 15038 12dd 50       		.byte	0x50
 15039 12de 9F       		.byte	0x9f
 15040 12df D40D0000 		.4byte	.LVL233-.Ltext0
 15041 12e3 E00D0000 		.4byte	.LFE90-.Ltext0
 15042 12e7 0100     		.2byte	0x1
 15043 12e9 54       		.byte	0x54
 15044 12ea 00000000 		.4byte	0
 15045 12ee 00000000 		.4byte	0
 15046              	.LLST57:
 15047 12f2 EC130000 		.4byte	.LVL342-.Ltext0
 15048 12f6 04140000 		.4byte	.LVL343-.Ltext0
 15049 12fa 0100     		.2byte	0x1
 15050 12fc 50       		.byte	0x50
 15051 12fd 04140000 		.4byte	.LVL343-.Ltext0
 15052 1301 9A140000 		.4byte	.LVL348-.Ltext0
 15053 1305 0400     		.2byte	0x4
 15054 1307 F3       		.byte	0xf3
ARM GAS  /tmp/cc18izUm.s 			page 329


 15055 1308 01       		.uleb128 0x1
 15056 1309 50       		.byte	0x50
 15057 130a 9F       		.byte	0x9f
 15058 130b 9A140000 		.4byte	.LVL348-.Ltext0
 15059 130f B2140000 		.4byte	.LVL349-.Ltext0
 15060 1313 0100     		.2byte	0x1
 15061 1315 50       		.byte	0x50
 15062 1316 B2140000 		.4byte	.LVL349-.Ltext0
 15063 131a F0140000 		.4byte	.LFE89-.Ltext0
 15064 131e 0400     		.2byte	0x4
 15065 1320 F3       		.byte	0xf3
 15066 1321 01       		.uleb128 0x1
 15067 1322 50       		.byte	0x50
 15068 1323 9F       		.byte	0x9f
 15069 1324 00000000 		.4byte	0
 15070 1328 00000000 		.4byte	0
 15071              	.LLST38:
 15072 132c 840D0000 		.4byte	.LVL225-.Ltext0
 15073 1330 900D0000 		.4byte	.LVL226-.Ltext0
 15074 1334 0100     		.2byte	0x1
 15075 1336 50       		.byte	0x50
 15076 1337 900D0000 		.4byte	.LVL226-.Ltext0
 15077 133b 920D0000 		.4byte	.LVL227-.Ltext0
 15078 133f 0400     		.2byte	0x4
 15079 1341 F3       		.byte	0xf3
 15080 1342 01       		.uleb128 0x1
 15081 1343 50       		.byte	0x50
 15082 1344 9F       		.byte	0x9f
 15083 1345 920D0000 		.4byte	.LVL227-.Ltext0
 15084 1349 9C0D0000 		.4byte	.LFE88-.Ltext0
 15085 134d 0100     		.2byte	0x1
 15086 134f 50       		.byte	0x50
 15087 1350 00000000 		.4byte	0
 15088 1354 00000000 		.4byte	0
 15089              	.LLST35:
 15090 1358 240D0000 		.4byte	.LVL211-.Ltext0
 15091 135c 260D0000 		.4byte	.LVL212-.Ltext0
 15092 1360 0100     		.2byte	0x1
 15093 1362 50       		.byte	0x50
 15094 1363 260D0000 		.4byte	.LVL212-.Ltext0
 15095 1367 380D0000 		.4byte	.LVL213-.Ltext0
 15096 136b 0600     		.2byte	0x6
 15097 136d 70       		.byte	0x70
 15098 136e 00       		.sleb128 0
 15099 136f 09       		.byte	0x9
 15100 1370 FE       		.byte	0xfe
 15101 1371 1A       		.byte	0x1a
 15102 1372 9F       		.byte	0x9f
 15103 1373 380D0000 		.4byte	.LVL213-.Ltext0
 15104 1377 5A0D0000 		.4byte	.LVL218-.Ltext0
 15105 137b 0700     		.2byte	0x7
 15106 137d F3       		.byte	0xf3
 15107 137e 01       		.uleb128 0x1
 15108 137f 50       		.byte	0x50
 15109 1380 09       		.byte	0x9
 15110 1381 FE       		.byte	0xfe
 15111 1382 1A       		.byte	0x1a
ARM GAS  /tmp/cc18izUm.s 			page 330


 15112 1383 9F       		.byte	0x9f
 15113 1384 5A0D0000 		.4byte	.LVL218-.Ltext0
 15114 1388 5C0D0000 		.4byte	.LVL219-.Ltext0
 15115 138c 0600     		.2byte	0x6
 15116 138e 70       		.byte	0x70
 15117 138f 00       		.sleb128 0
 15118 1390 09       		.byte	0x9
 15119 1391 FE       		.byte	0xfe
 15120 1392 1A       		.byte	0x1a
 15121 1393 9F       		.byte	0x9f
 15122 1394 5C0D0000 		.4byte	.LVL219-.Ltext0
 15123 1398 600D0000 		.4byte	.LVL220-.Ltext0
 15124 139c 0700     		.2byte	0x7
 15125 139e F3       		.byte	0xf3
 15126 139f 01       		.uleb128 0x1
 15127 13a0 50       		.byte	0x50
 15128 13a1 09       		.byte	0x9
 15129 13a2 FE       		.byte	0xfe
 15130 13a3 1A       		.byte	0x1a
 15131 13a4 9F       		.byte	0x9f
 15132 13a5 600D0000 		.4byte	.LVL220-.Ltext0
 15133 13a9 660D0000 		.4byte	.LVL221-.Ltext0
 15134 13ad 0600     		.2byte	0x6
 15135 13af 70       		.byte	0x70
 15136 13b0 00       		.sleb128 0
 15137 13b1 09       		.byte	0x9
 15138 13b2 FE       		.byte	0xfe
 15139 13b3 1A       		.byte	0x1a
 15140 13b4 9F       		.byte	0x9f
 15141 13b5 660D0000 		.4byte	.LVL221-.Ltext0
 15142 13b9 840D0000 		.4byte	.LFE87-.Ltext0
 15143 13bd 0700     		.2byte	0x7
 15144 13bf F3       		.byte	0xf3
 15145 13c0 01       		.uleb128 0x1
 15146 13c1 50       		.byte	0x50
 15147 13c2 09       		.byte	0x9
 15148 13c3 FE       		.byte	0xfe
 15149 13c4 1A       		.byte	0x1a
 15150 13c5 9F       		.byte	0x9f
 15151 13c6 00000000 		.4byte	0
 15152 13ca 00000000 		.4byte	0
 15153              	.LLST36:
 15154 13ce 3A0D0000 		.4byte	.LVL214-.Ltext0
 15155 13d2 5A0D0000 		.4byte	.LVL218-.Ltext0
 15156 13d6 0100     		.2byte	0x1
 15157 13d8 55       		.byte	0x55
 15158 13d9 660D0000 		.4byte	.LVL221-.Ltext0
 15159 13dd 840D0000 		.4byte	.LFE87-.Ltext0
 15160 13e1 0100     		.2byte	0x1
 15161 13e3 55       		.byte	0x55
 15162 13e4 00000000 		.4byte	0
 15163 13e8 00000000 		.4byte	0
 15164              	.LLST37:
 15165 13ec 260D0000 		.4byte	.LVL212-.Ltext0
 15166 13f0 460D0000 		.4byte	.LVL215-.Ltext0
 15167 13f4 0200     		.2byte	0x2
 15168 13f6 30       		.byte	0x30
ARM GAS  /tmp/cc18izUm.s 			page 331


 15169 13f7 9F       		.byte	0x9f
 15170 13f8 460D0000 		.4byte	.LVL215-.Ltext0
 15171 13fc 5A0D0000 		.4byte	.LVL218-.Ltext0
 15172 1400 0100     		.2byte	0x1
 15173 1402 54       		.byte	0x54
 15174 1403 5A0D0000 		.4byte	.LVL218-.Ltext0
 15175 1407 5C0D0000 		.4byte	.LVL219-.Ltext0
 15176 140b 0200     		.2byte	0x2
 15177 140d 30       		.byte	0x30
 15178 140e 9F       		.byte	0x9f
 15179 140f 600D0000 		.4byte	.LVL220-.Ltext0
 15180 1413 660D0000 		.4byte	.LVL221-.Ltext0
 15181 1417 0200     		.2byte	0x2
 15182 1419 30       		.byte	0x30
 15183 141a 9F       		.byte	0x9f
 15184 141b 660D0000 		.4byte	.LVL221-.Ltext0
 15185 141f 7C0D0000 		.4byte	.LVL224-.Ltext0
 15186 1423 0100     		.2byte	0x1
 15187 1425 54       		.byte	0x54
 15188 1426 00000000 		.4byte	0
 15189 142a 00000000 		.4byte	0
 15190              	.LLST33:
 15191 142e C80C0000 		.4byte	.LVL203-.Ltext0
 15192 1432 EC0C0000 		.4byte	.LVL204-.Ltext0
 15193 1436 0100     		.2byte	0x1
 15194 1438 50       		.byte	0x50
 15195 1439 EC0C0000 		.4byte	.LVL204-.Ltext0
 15196 143d EE0C0000 		.4byte	.LVL205-.Ltext0
 15197 1441 0400     		.2byte	0x4
 15198 1443 F3       		.byte	0xf3
 15199 1444 01       		.uleb128 0x1
 15200 1445 50       		.byte	0x50
 15201 1446 9F       		.byte	0x9f
 15202 1447 EE0C0000 		.4byte	.LVL205-.Ltext0
 15203 144b 0A0D0000 		.4byte	.LVL206-.Ltext0
 15204 144f 0100     		.2byte	0x1
 15205 1451 50       		.byte	0x50
 15206 1452 0A0D0000 		.4byte	.LVL206-.Ltext0
 15207 1456 0C0D0000 		.4byte	.LVL207-.Ltext0
 15208 145a 0400     		.2byte	0x4
 15209 145c F3       		.byte	0xf3
 15210 145d 01       		.uleb128 0x1
 15211 145e 50       		.byte	0x50
 15212 145f 9F       		.byte	0x9f
 15213 1460 0C0D0000 		.4byte	.LVL207-.Ltext0
 15214 1464 0E0D0000 		.4byte	.LVL208-.Ltext0
 15215 1468 0100     		.2byte	0x1
 15216 146a 50       		.byte	0x50
 15217 146b 0E0D0000 		.4byte	.LVL208-.Ltext0
 15218 146f 140D0000 		.4byte	.LFE85-.Ltext0
 15219 1473 0400     		.2byte	0x4
 15220 1475 F3       		.byte	0xf3
 15221 1476 01       		.uleb128 0x1
 15222 1477 50       		.byte	0x50
 15223 1478 9F       		.byte	0x9f
 15224 1479 00000000 		.4byte	0
 15225 147d 00000000 		.4byte	0
ARM GAS  /tmp/cc18izUm.s 			page 332


 15226              	.LLST32:
 15227 1481 7C0C0000 		.4byte	.LVL193-.Ltext0
 15228 1485 920C0000 		.4byte	.LVL194-.Ltext0
 15229 1489 0100     		.2byte	0x1
 15230 148b 50       		.byte	0x50
 15231 148c 920C0000 		.4byte	.LVL194-.Ltext0
 15232 1490 940C0000 		.4byte	.LVL195-.Ltext0
 15233 1494 0400     		.2byte	0x4
 15234 1496 F3       		.byte	0xf3
 15235 1497 01       		.uleb128 0x1
 15236 1498 50       		.byte	0x50
 15237 1499 9F       		.byte	0x9f
 15238 149a 940C0000 		.4byte	.LVL195-.Ltext0
 15239 149e 9A0C0000 		.4byte	.LVL196-.Ltext0
 15240 14a2 0100     		.2byte	0x1
 15241 14a4 50       		.byte	0x50
 15242 14a5 9A0C0000 		.4byte	.LVL196-.Ltext0
 15243 14a9 9C0C0000 		.4byte	.LVL197-.Ltext0
 15244 14ad 0400     		.2byte	0x4
 15245 14af F3       		.byte	0xf3
 15246 14b0 01       		.uleb128 0x1
 15247 14b1 50       		.byte	0x50
 15248 14b2 9F       		.byte	0x9f
 15249 14b3 9C0C0000 		.4byte	.LVL197-.Ltext0
 15250 14b7 A20C0000 		.4byte	.LVL198-.Ltext0
 15251 14bb 0100     		.2byte	0x1
 15252 14bd 50       		.byte	0x50
 15253 14be A20C0000 		.4byte	.LVL198-.Ltext0
 15254 14c2 A40C0000 		.4byte	.LVL199-.Ltext0
 15255 14c6 0400     		.2byte	0x4
 15256 14c8 F3       		.byte	0xf3
 15257 14c9 01       		.uleb128 0x1
 15258 14ca 50       		.byte	0x50
 15259 14cb 9F       		.byte	0x9f
 15260 14cc A40C0000 		.4byte	.LVL199-.Ltext0
 15261 14d0 AA0C0000 		.4byte	.LVL200-.Ltext0
 15262 14d4 0100     		.2byte	0x1
 15263 14d6 50       		.byte	0x50
 15264 14d7 AA0C0000 		.4byte	.LVL200-.Ltext0
 15265 14db AC0C0000 		.4byte	.LVL201-.Ltext0
 15266 14df 0400     		.2byte	0x4
 15267 14e1 F3       		.byte	0xf3
 15268 14e2 01       		.uleb128 0x1
 15269 14e3 50       		.byte	0x50
 15270 14e4 9F       		.byte	0x9f
 15271 14e5 AC0C0000 		.4byte	.LVL201-.Ltext0
 15272 14e9 B00C0000 		.4byte	.LVL202-.Ltext0
 15273 14ed 0100     		.2byte	0x1
 15274 14ef 50       		.byte	0x50
 15275 14f0 B00C0000 		.4byte	.LVL202-.Ltext0
 15276 14f4 C80C0000 		.4byte	.LFE84-.Ltext0
 15277 14f8 0400     		.2byte	0x4
 15278 14fa F3       		.byte	0xf3
 15279 14fb 01       		.uleb128 0x1
 15280 14fc 50       		.byte	0x50
 15281 14fd 9F       		.byte	0x9f
 15282 14fe 00000000 		.4byte	0
ARM GAS  /tmp/cc18izUm.s 			page 333


 15283 1502 00000000 		.4byte	0
 15284              	.LLST31:
 15285 1506 760C0000 		.4byte	.LVL191-.Ltext0
 15286 150a 7A0C0000 		.4byte	.LVL192-.Ltext0
 15287 150e 0100     		.2byte	0x1
 15288 1510 50       		.byte	0x50
 15289 1511 7A0C0000 		.4byte	.LVL192-.Ltext0
 15290 1515 7C0C0000 		.4byte	.LFE83-.Ltext0
 15291 1519 0400     		.2byte	0x4
 15292 151b F3       		.byte	0xf3
 15293 151c 01       		.uleb128 0x1
 15294 151d 50       		.byte	0x50
 15295 151e 9F       		.byte	0x9f
 15296 151f 00000000 		.4byte	0
 15297 1523 00000000 		.4byte	0
 15298              	.LLST30:
 15299 1527 6C0C0000 		.4byte	.LVL189-.Ltext0
 15300 152b 740C0000 		.4byte	.LVL190-.Ltext0
 15301 152f 0100     		.2byte	0x1
 15302 1531 50       		.byte	0x50
 15303 1532 740C0000 		.4byte	.LVL190-.Ltext0
 15304 1536 760C0000 		.4byte	.LFE82-.Ltext0
 15305 153a 0400     		.2byte	0x4
 15306 153c F3       		.byte	0xf3
 15307 153d 01       		.uleb128 0x1
 15308 153e 50       		.byte	0x50
 15309 153f 9F       		.byte	0x9f
 15310 1540 00000000 		.4byte	0
 15311 1544 00000000 		.4byte	0
 15312              	.LLST56:
 15313 1548 50130000 		.4byte	.LVL327-.Ltext0
 15314 154c 78130000 		.4byte	.LVL328-.Ltext0
 15315 1550 0100     		.2byte	0x1
 15316 1552 50       		.byte	0x50
 15317 1553 78130000 		.4byte	.LVL328-.Ltext0
 15318 1557 86130000 		.4byte	.LVL330-.Ltext0
 15319 155b 0400     		.2byte	0x4
 15320 155d F3       		.byte	0xf3
 15321 155e 01       		.uleb128 0x1
 15322 155f 50       		.byte	0x50
 15323 1560 9F       		.byte	0x9f
 15324 1561 86130000 		.4byte	.LVL330-.Ltext0
 15325 1565 8C130000 		.4byte	.LVL331-.Ltext0
 15326 1569 1500     		.2byte	0x15
 15327 156b 74       		.byte	0x74
 15328 156c 00       		.sleb128 0
 15329 156d 12       		.byte	0x12
 15330 156e 0A       		.byte	0xa
 15331 156f FFFF     		.2byte	0xffff
 15332 1571 1A       		.byte	0x1a
 15333 1572 34       		.byte	0x34
 15334 1573 16       		.byte	0x16
 15335 1574 14       		.byte	0x14
 15336 1575 0A       		.byte	0xa
 15337 1576 FFFF     		.2byte	0xffff
 15338 1578 1A       		.byte	0x1a
 15339 1579 2B       		.byte	0x2b
ARM GAS  /tmp/cc18izUm.s 			page 334


 15340 157a 28       		.byte	0x28
 15341 157b 0100     		.2byte	0x1
 15342 157d 16       		.byte	0x16
 15343 157e 13       		.byte	0x13
 15344 157f 9F       		.byte	0x9f
 15345 1580 CC130000 		.4byte	.LVL334-.Ltext0
 15346 1584 CE130000 		.4byte	.LVL335-.Ltext0
 15347 1588 0100     		.2byte	0x1
 15348 158a 50       		.byte	0x50
 15349 158b CE130000 		.4byte	.LVL335-.Ltext0
 15350 158f D6130000 		.4byte	.LVL337-.Ltext0
 15351 1593 0400     		.2byte	0x4
 15352 1595 F3       		.byte	0xf3
 15353 1596 01       		.uleb128 0x1
 15354 1597 50       		.byte	0x50
 15355 1598 9F       		.byte	0x9f
 15356 1599 D6130000 		.4byte	.LVL337-.Ltext0
 15357 159d DA130000 		.4byte	.LVL338-.Ltext0
 15358 15a1 0100     		.2byte	0x1
 15359 15a3 50       		.byte	0x50
 15360 15a4 DA130000 		.4byte	.LVL338-.Ltext0
 15361 15a8 DC130000 		.4byte	.LVL339-.Ltext0
 15362 15ac 0400     		.2byte	0x4
 15363 15ae F3       		.byte	0xf3
 15364 15af 01       		.uleb128 0x1
 15365 15b0 50       		.byte	0x50
 15366 15b1 9F       		.byte	0x9f
 15367 15b2 DC130000 		.4byte	.LVL339-.Ltext0
 15368 15b6 E0130000 		.4byte	.LVL340-.Ltext0
 15369 15ba 0100     		.2byte	0x1
 15370 15bc 50       		.byte	0x50
 15371 15bd E0130000 		.4byte	.LVL340-.Ltext0
 15372 15c1 E2130000 		.4byte	.LVL341-.Ltext0
 15373 15c5 0400     		.2byte	0x4
 15374 15c7 F3       		.byte	0xf3
 15375 15c8 01       		.uleb128 0x1
 15376 15c9 50       		.byte	0x50
 15377 15ca 9F       		.byte	0x9f
 15378 15cb 00000000 		.4byte	0
 15379 15cf 00000000 		.4byte	0
 15380              	.LLST29:
 15381 15d3 500C0000 		.4byte	.LVL185-.Ltext0
 15382 15d7 600C0000 		.4byte	.LVL186-.Ltext0
 15383 15db 0100     		.2byte	0x1
 15384 15dd 50       		.byte	0x50
 15385 15de 600C0000 		.4byte	.LVL186-.Ltext0
 15386 15e2 620C0000 		.4byte	.LVL187-.Ltext0
 15387 15e6 0400     		.2byte	0x4
 15388 15e8 F3       		.byte	0xf3
 15389 15e9 01       		.uleb128 0x1
 15390 15ea 50       		.byte	0x50
 15391 15eb 9F       		.byte	0x9f
 15392 15ec 620C0000 		.4byte	.LVL187-.Ltext0
 15393 15f0 660C0000 		.4byte	.LVL188-.Ltext0
 15394 15f4 0100     		.2byte	0x1
 15395 15f6 50       		.byte	0x50
 15396 15f7 660C0000 		.4byte	.LVL188-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 335


 15397 15fb 6C0C0000 		.4byte	.LFE80-.Ltext0
 15398 15ff 0400     		.2byte	0x4
 15399 1601 F3       		.byte	0xf3
 15400 1602 01       		.uleb128 0x1
 15401 1603 50       		.byte	0x50
 15402 1604 9F       		.byte	0x9f
 15403 1605 00000000 		.4byte	0
 15404 1609 00000000 		.4byte	0
 15405              	.LLST28:
 15406 160d C40B0000 		.4byte	.LVL178-.Ltext0
 15407 1611 EC0B0000 		.4byte	.LVL179-.Ltext0
 15408 1615 0100     		.2byte	0x1
 15409 1617 50       		.byte	0x50
 15410 1618 EC0B0000 		.4byte	.LVL179-.Ltext0
 15411 161c 0A0C0000 		.4byte	.LVL181-.Ltext0
 15412 1620 0400     		.2byte	0x4
 15413 1622 F3       		.byte	0xf3
 15414 1623 01       		.uleb128 0x1
 15415 1624 50       		.byte	0x50
 15416 1625 9F       		.byte	0x9f
 15417 1626 0A0C0000 		.4byte	.LVL181-.Ltext0
 15418 162a 400C0000 		.4byte	.LVL182-.Ltext0
 15419 162e 0100     		.2byte	0x1
 15420 1630 50       		.byte	0x50
 15421 1631 400C0000 		.4byte	.LVL182-.Ltext0
 15422 1635 420C0000 		.4byte	.LVL183-.Ltext0
 15423 1639 0400     		.2byte	0x4
 15424 163b F3       		.byte	0xf3
 15425 163c 01       		.uleb128 0x1
 15426 163d 50       		.byte	0x50
 15427 163e 9F       		.byte	0x9f
 15428 163f 420C0000 		.4byte	.LVL183-.Ltext0
 15429 1643 440C0000 		.4byte	.LVL184-.Ltext0
 15430 1647 0100     		.2byte	0x1
 15431 1649 50       		.byte	0x50
 15432 164a 440C0000 		.4byte	.LVL184-.Ltext0
 15433 164e 500C0000 		.4byte	.LFE79-.Ltext0
 15434 1652 0400     		.2byte	0x4
 15435 1654 F3       		.byte	0xf3
 15436 1655 01       		.uleb128 0x1
 15437 1656 50       		.byte	0x50
 15438 1657 9F       		.byte	0x9f
 15439 1658 00000000 		.4byte	0
 15440 165c 00000000 		.4byte	0
 15441              	.LLST27:
 15442 1660 800B0000 		.4byte	.LVL175-.Ltext0
 15443 1664 9A0B0000 		.4byte	.LVL176-.Ltext0
 15444 1668 0100     		.2byte	0x1
 15445 166a 50       		.byte	0x50
 15446 166b 9A0B0000 		.4byte	.LVL176-.Ltext0
 15447 166f 9C0B0000 		.4byte	.LVL177-.Ltext0
 15448 1673 0400     		.2byte	0x4
 15449 1675 F3       		.byte	0xf3
 15450 1676 01       		.uleb128 0x1
 15451 1677 50       		.byte	0x50
 15452 1678 9F       		.byte	0x9f
 15453 1679 9C0B0000 		.4byte	.LVL177-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 336


 15454 167d C40B0000 		.4byte	.LFE78-.Ltext0
 15455 1681 0100     		.2byte	0x1
 15456 1683 50       		.byte	0x50
 15457 1684 00000000 		.4byte	0
 15458 1688 00000000 		.4byte	0
 15459              	.LLST26:
 15460 168c EC0A0000 		.4byte	.LVL170-.Ltext0
 15461 1690 FA0A0000 		.4byte	.LVL171-.Ltext0
 15462 1694 0100     		.2byte	0x1
 15463 1696 50       		.byte	0x50
 15464 1697 FA0A0000 		.4byte	.LVL171-.Ltext0
 15465 169b 640B0000 		.4byte	.LVL173-.Ltext0
 15466 169f 0400     		.2byte	0x4
 15467 16a1 F3       		.byte	0xf3
 15468 16a2 01       		.uleb128 0x1
 15469 16a3 50       		.byte	0x50
 15470 16a4 9F       		.byte	0x9f
 15471 16a5 640B0000 		.4byte	.LVL173-.Ltext0
 15472 16a9 680B0000 		.4byte	.LVL174-.Ltext0
 15473 16ad 0100     		.2byte	0x1
 15474 16af 50       		.byte	0x50
 15475 16b0 680B0000 		.4byte	.LVL174-.Ltext0
 15476 16b4 800B0000 		.4byte	.LFE77-.Ltext0
 15477 16b8 0400     		.2byte	0x4
 15478 16ba F3       		.byte	0xf3
 15479 16bb 01       		.uleb128 0x1
 15480 16bc 50       		.byte	0x50
 15481 16bd 9F       		.byte	0x9f
 15482 16be 00000000 		.4byte	0
 15483 16c2 00000000 		.4byte	0
 15484              	.LLST25:
 15485 16c6 A80A0000 		.4byte	.LVL164-.Ltext0
 15486 16ca CA0A0000 		.4byte	.LVL165-.Ltext0
 15487 16ce 0100     		.2byte	0x1
 15488 16d0 50       		.byte	0x50
 15489 16d1 CA0A0000 		.4byte	.LVL165-.Ltext0
 15490 16d5 CC0A0000 		.4byte	.LVL166-.Ltext0
 15491 16d9 0400     		.2byte	0x4
 15492 16db F3       		.byte	0xf3
 15493 16dc 01       		.uleb128 0x1
 15494 16dd 50       		.byte	0x50
 15495 16de 9F       		.byte	0x9f
 15496 16df CC0A0000 		.4byte	.LVL166-.Ltext0
 15497 16e3 E20A0000 		.4byte	.LVL167-.Ltext0
 15498 16e7 0100     		.2byte	0x1
 15499 16e9 50       		.byte	0x50
 15500 16ea E20A0000 		.4byte	.LVL167-.Ltext0
 15501 16ee E40A0000 		.4byte	.LVL168-.Ltext0
 15502 16f2 0400     		.2byte	0x4
 15503 16f4 F3       		.byte	0xf3
 15504 16f5 01       		.uleb128 0x1
 15505 16f6 50       		.byte	0x50
 15506 16f7 9F       		.byte	0x9f
 15507 16f8 E40A0000 		.4byte	.LVL168-.Ltext0
 15508 16fc E60A0000 		.4byte	.LVL169-.Ltext0
 15509 1700 0100     		.2byte	0x1
 15510 1702 50       		.byte	0x50
ARM GAS  /tmp/cc18izUm.s 			page 337


 15511 1703 E60A0000 		.4byte	.LVL169-.Ltext0
 15512 1707 EC0A0000 		.4byte	.LFE76-.Ltext0
 15513 170b 0400     		.2byte	0x4
 15514 170d F3       		.byte	0xf3
 15515 170e 01       		.uleb128 0x1
 15516 170f 50       		.byte	0x50
 15517 1710 9F       		.byte	0x9f
 15518 1711 00000000 		.4byte	0
 15519 1715 00000000 		.4byte	0
 15520              	.LLST24:
 15521 1719 180A0000 		.4byte	.LVL155-.Ltext0
 15522 171d 5E0A0000 		.4byte	.LVL156-.Ltext0
 15523 1721 0100     		.2byte	0x1
 15524 1723 50       		.byte	0x50
 15525 1724 5E0A0000 		.4byte	.LVL156-.Ltext0
 15526 1728 7E0A0000 		.4byte	.LVL158-.Ltext0
 15527 172c 0400     		.2byte	0x4
 15528 172e F3       		.byte	0xf3
 15529 172f 01       		.uleb128 0x1
 15530 1730 50       		.byte	0x50
 15531 1731 9F       		.byte	0x9f
 15532 1732 7E0A0000 		.4byte	.LVL158-.Ltext0
 15533 1736 920A0000 		.4byte	.LVL159-.Ltext0
 15534 173a 0100     		.2byte	0x1
 15535 173c 50       		.byte	0x50
 15536 173d 920A0000 		.4byte	.LVL159-.Ltext0
 15537 1741 940A0000 		.4byte	.LVL160-.Ltext0
 15538 1745 0400     		.2byte	0x4
 15539 1747 F3       		.byte	0xf3
 15540 1748 01       		.uleb128 0x1
 15541 1749 50       		.byte	0x50
 15542 174a 9F       		.byte	0x9f
 15543 174b 940A0000 		.4byte	.LVL160-.Ltext0
 15544 174f 980A0000 		.4byte	.LVL161-.Ltext0
 15545 1753 0100     		.2byte	0x1
 15546 1755 50       		.byte	0x50
 15547 1756 980A0000 		.4byte	.LVL161-.Ltext0
 15548 175a 9A0A0000 		.4byte	.LVL162-.Ltext0
 15549 175e 0400     		.2byte	0x4
 15550 1760 F3       		.byte	0xf3
 15551 1761 01       		.uleb128 0x1
 15552 1762 50       		.byte	0x50
 15553 1763 9F       		.byte	0x9f
 15554 1764 9A0A0000 		.4byte	.LVL162-.Ltext0
 15555 1768 9C0A0000 		.4byte	.LVL163-.Ltext0
 15556 176c 0100     		.2byte	0x1
 15557 176e 50       		.byte	0x50
 15558 176f 9C0A0000 		.4byte	.LVL163-.Ltext0
 15559 1773 A80A0000 		.4byte	.LFE75-.Ltext0
 15560 1777 0400     		.2byte	0x4
 15561 1779 F3       		.byte	0xf3
 15562 177a 01       		.uleb128 0x1
 15563 177b 50       		.byte	0x50
 15564 177c 9F       		.byte	0x9f
 15565 177d 00000000 		.4byte	0
 15566 1781 00000000 		.4byte	0
 15567              	.LLST23:
ARM GAS  /tmp/cc18izUm.s 			page 338


 15568 1785 DC090000 		.4byte	.LVL152-.Ltext0
 15569 1789 F2090000 		.4byte	.LVL153-.Ltext0
 15570 178d 0100     		.2byte	0x1
 15571 178f 50       		.byte	0x50
 15572 1790 F2090000 		.4byte	.LVL153-.Ltext0
 15573 1794 F4090000 		.4byte	.LVL154-.Ltext0
 15574 1798 0400     		.2byte	0x4
 15575 179a F3       		.byte	0xf3
 15576 179b 01       		.uleb128 0x1
 15577 179c 50       		.byte	0x50
 15578 179d 9F       		.byte	0x9f
 15579 179e F4090000 		.4byte	.LVL154-.Ltext0
 15580 17a2 180A0000 		.4byte	.LFE74-.Ltext0
 15581 17a6 0100     		.2byte	0x1
 15582 17a8 50       		.byte	0x50
 15583 17a9 00000000 		.4byte	0
 15584 17ad 00000000 		.4byte	0
 15585              	.LLST19:
 15586 17b1 EC060000 		.4byte	.LVL115-.Ltext0
 15587 17b5 08070000 		.4byte	.LVL116-.Ltext0
 15588 17b9 0100     		.2byte	0x1
 15589 17bb 50       		.byte	0x50
 15590 17bc 08070000 		.4byte	.LVL116-.Ltext0
 15591 17c0 46070000 		.4byte	.LVL121-.Ltext0
 15592 17c4 0100     		.2byte	0x1
 15593 17c6 55       		.byte	0x55
 15594 17c7 46070000 		.4byte	.LVL121-.Ltext0
 15595 17cb DE070000 		.4byte	.LVL136-.Ltext0
 15596 17cf 0400     		.2byte	0x4
 15597 17d1 F3       		.byte	0xf3
 15598 17d2 01       		.uleb128 0x1
 15599 17d3 50       		.byte	0x50
 15600 17d4 9F       		.byte	0x9f
 15601 17d5 DE070000 		.4byte	.LVL136-.Ltext0
 15602 17d9 E2070000 		.4byte	.LVL137-.Ltext0
 15603 17dd 0100     		.2byte	0x1
 15604 17df 50       		.byte	0x50
 15605 17e0 E2070000 		.4byte	.LVL137-.Ltext0
 15606 17e4 E4070000 		.4byte	.LVL138-.Ltext0
 15607 17e8 0400     		.2byte	0x4
 15608 17ea F3       		.byte	0xf3
 15609 17eb 01       		.uleb128 0x1
 15610 17ec 50       		.byte	0x50
 15611 17ed 9F       		.byte	0x9f
 15612 17ee E4070000 		.4byte	.LVL138-.Ltext0
 15613 17f2 E6070000 		.4byte	.LVL139-.Ltext0
 15614 17f6 0100     		.2byte	0x1
 15615 17f8 50       		.byte	0x50
 15616 17f9 E6070000 		.4byte	.LVL139-.Ltext0
 15617 17fd EE070000 		.4byte	.LVL140-.Ltext0
 15618 1801 0100     		.2byte	0x1
 15619 1803 55       		.byte	0x55
 15620 1804 EE070000 		.4byte	.LVL140-.Ltext0
 15621 1808 F8070000 		.4byte	.LFE72-.Ltext0
 15622 180c 0400     		.2byte	0x4
 15623 180e F3       		.byte	0xf3
 15624 180f 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 339


 15625 1810 50       		.byte	0x50
 15626 1811 9F       		.byte	0x9f
 15627 1812 00000000 		.4byte	0
 15628 1816 00000000 		.4byte	0
 15629              	.LLST20:
 15630 181a 2E070000 		.4byte	.LVL119-.Ltext0
 15631 181e 44070000 		.4byte	.LVL120-.Ltext0
 15632 1822 0500     		.2byte	0x5
 15633 1824 54       		.byte	0x54
 15634 1825 93       		.byte	0x93
 15635 1826 02       		.uleb128 0x2
 15636 1827 93       		.byte	0x93
 15637 1828 04       		.uleb128 0x4
 15638 1829 44070000 		.4byte	.LVL120-.Ltext0
 15639 182d 5A070000 		.4byte	.LVL122-.Ltext0
 15640 1831 0800     		.2byte	0x8
 15641 1833 54       		.byte	0x54
 15642 1834 93       		.byte	0x93
 15643 1835 02       		.uleb128 0x2
 15644 1836 56       		.byte	0x56
 15645 1837 93       		.byte	0x93
 15646 1838 02       		.uleb128 0x2
 15647 1839 93       		.byte	0x93
 15648 183a 02       		.uleb128 0x2
 15649 183b 5A070000 		.4byte	.LVL122-.Ltext0
 15650 183f 7C070000 		.4byte	.LVL125-.Ltext0
 15651 1843 0900     		.2byte	0x9
 15652 1845 54       		.byte	0x54
 15653 1846 93       		.byte	0x93
 15654 1847 02       		.uleb128 0x2
 15655 1848 56       		.byte	0x56
 15656 1849 93       		.byte	0x93
 15657 184a 02       		.uleb128 0x2
 15658 184b 55       		.byte	0x55
 15659 184c 93       		.byte	0x93
 15660 184d 02       		.uleb128 0x2
 15661 184e 7C070000 		.4byte	.LVL125-.Ltext0
 15662 1852 7E070000 		.4byte	.LVL126-.Ltext0
 15663 1856 0800     		.2byte	0x8
 15664 1858 93       		.byte	0x93
 15665 1859 02       		.uleb128 0x2
 15666 185a 56       		.byte	0x56
 15667 185b 93       		.byte	0x93
 15668 185c 02       		.uleb128 0x2
 15669 185d 55       		.byte	0x55
 15670 185e 93       		.byte	0x93
 15671 185f 02       		.uleb128 0x2
 15672 1860 7E070000 		.4byte	.LVL126-.Ltext0
 15673 1864 8E070000 		.4byte	.LVL127-.Ltext0
 15674 1868 0900     		.2byte	0x9
 15675 186a 54       		.byte	0x54
 15676 186b 93       		.byte	0x93
 15677 186c 02       		.uleb128 0x2
 15678 186d 56       		.byte	0x56
 15679 186e 93       		.byte	0x93
 15680 186f 02       		.uleb128 0x2
 15681 1870 55       		.byte	0x55
ARM GAS  /tmp/cc18izUm.s 			page 340


 15682 1871 93       		.byte	0x93
 15683 1872 02       		.uleb128 0x2
 15684 1873 8E070000 		.4byte	.LVL127-.Ltext0
 15685 1877 9E070000 		.4byte	.LVL128-.Ltext0
 15686 187b 0900     		.2byte	0x9
 15687 187d 54       		.byte	0x54
 15688 187e 93       		.byte	0x93
 15689 187f 02       		.uleb128 0x2
 15690 1880 52       		.byte	0x52
 15691 1881 93       		.byte	0x93
 15692 1882 02       		.uleb128 0x2
 15693 1883 55       		.byte	0x55
 15694 1884 93       		.byte	0x93
 15695 1885 02       		.uleb128 0x2
 15696 1886 9E070000 		.4byte	.LVL128-.Ltext0
 15697 188a BA070000 		.4byte	.LVL131-.Ltext0
 15698 188e 0900     		.2byte	0x9
 15699 1890 54       		.byte	0x54
 15700 1891 93       		.byte	0x93
 15701 1892 02       		.uleb128 0x2
 15702 1893 52       		.byte	0x52
 15703 1894 93       		.byte	0x93
 15704 1895 02       		.uleb128 0x2
 15705 1896 53       		.byte	0x53
 15706 1897 93       		.byte	0x93
 15707 1898 02       		.uleb128 0x2
 15708 1899 BA070000 		.4byte	.LVL131-.Ltext0
 15709 189d C4070000 		.4byte	.LVL133-.Ltext0
 15710 18a1 0800     		.2byte	0x8
 15711 18a3 54       		.byte	0x54
 15712 18a4 93       		.byte	0x93
 15713 18a5 02       		.uleb128 0x2
 15714 18a6 93       		.byte	0x93
 15715 18a7 02       		.uleb128 0x2
 15716 18a8 53       		.byte	0x53
 15717 18a9 93       		.byte	0x93
 15718 18aa 02       		.uleb128 0x2
 15719 18ab C4070000 		.4byte	.LVL133-.Ltext0
 15720 18af DA070000 		.4byte	.LVL135-.Ltext0
 15721 18b3 0500     		.2byte	0x5
 15722 18b5 54       		.byte	0x54
 15723 18b6 93       		.byte	0x93
 15724 18b7 02       		.uleb128 0x2
 15725 18b8 93       		.byte	0x93
 15726 18b9 04       		.uleb128 0x4
 15727 18ba EE070000 		.4byte	.LVL140-.Ltext0
 15728 18be F8070000 		.4byte	.LFE72-.Ltext0
 15729 18c2 0900     		.2byte	0x9
 15730 18c4 54       		.byte	0x54
 15731 18c5 93       		.byte	0x93
 15732 18c6 02       		.uleb128 0x2
 15733 18c7 56       		.byte	0x56
 15734 18c8 93       		.byte	0x93
 15735 18c9 02       		.uleb128 0x2
 15736 18ca 55       		.byte	0x55
 15737 18cb 93       		.byte	0x93
 15738 18cc 02       		.uleb128 0x2
ARM GAS  /tmp/cc18izUm.s 			page 341


 15739 18cd 00000000 		.4byte	0
 15740 18d1 00000000 		.4byte	0
 15741              	.LLST21:
 15742 18d5 6E070000 		.4byte	.LVL124-.Ltext0
 15743 18d9 A6070000 		.4byte	.LVL129-.Ltext0
 15744 18dd 3C00     		.2byte	0x3c
 15745 18df 7D       		.byte	0x7d
 15746 18e0 00       		.sleb128 0
 15747 18e1 94       		.byte	0x94
 15748 18e2 01       		.byte	0x1
 15749 18e3 08       		.byte	0x8
 15750 18e4 FF       		.byte	0xff
 15751 18e5 1A       		.byte	0x1a
 15752 18e6 38       		.byte	0x38
 15753 18e7 24       		.byte	0x24
 15754 18e8 91       		.byte	0x91
 15755 18e9 69       		.sleb128 -23
 15756 18ea 94       		.byte	0x94
 15757 18eb 01       		.byte	0x1
 15758 18ec 08       		.byte	0x8
 15759 18ed FF       		.byte	0xff
 15760 18ee 1A       		.byte	0x1a
 15761 18ef 21       		.byte	0x21
 15762 18f0 9F       		.byte	0x9f
 15763 18f1 93       		.byte	0x93
 15764 18f2 02       		.uleb128 0x2
 15765 18f3 91       		.byte	0x91
 15766 18f4 6A       		.sleb128 -22
 15767 18f5 94       		.byte	0x94
 15768 18f6 01       		.byte	0x1
 15769 18f7 08       		.byte	0x8
 15770 18f8 FF       		.byte	0xff
 15771 18f9 1A       		.byte	0x1a
 15772 18fa 38       		.byte	0x38
 15773 18fb 24       		.byte	0x24
 15774 18fc 91       		.byte	0x91
 15775 18fd 6B       		.sleb128 -21
 15776 18fe 94       		.byte	0x94
 15777 18ff 01       		.byte	0x1
 15778 1900 08       		.byte	0x8
 15779 1901 FF       		.byte	0xff
 15780 1902 1A       		.byte	0x1a
 15781 1903 21       		.byte	0x21
 15782 1904 9F       		.byte	0x9f
 15783 1905 93       		.byte	0x93
 15784 1906 02       		.uleb128 0x2
 15785 1907 91       		.byte	0x91
 15786 1908 6C       		.sleb128 -20
 15787 1909 94       		.byte	0x94
 15788 190a 01       		.byte	0x1
 15789 190b 08       		.byte	0x8
 15790 190c FF       		.byte	0xff
 15791 190d 1A       		.byte	0x1a
 15792 190e 38       		.byte	0x38
 15793 190f 24       		.byte	0x24
 15794 1910 91       		.byte	0x91
 15795 1911 6D       		.sleb128 -19
ARM GAS  /tmp/cc18izUm.s 			page 342


 15796 1912 94       		.byte	0x94
 15797 1913 01       		.byte	0x1
 15798 1914 08       		.byte	0x8
 15799 1915 FF       		.byte	0xff
 15800 1916 1A       		.byte	0x1a
 15801 1917 21       		.byte	0x21
 15802 1918 9F       		.byte	0x9f
 15803 1919 93       		.byte	0x93
 15804 191a 02       		.uleb128 0x2
 15805 191b A6070000 		.4byte	.LVL129-.Ltext0
 15806 191f B2070000 		.4byte	.LVL130-.Ltext0
 15807 1923 2A00     		.2byte	0x2a
 15808 1925 93       		.byte	0x93
 15809 1926 02       		.uleb128 0x2
 15810 1927 91       		.byte	0x91
 15811 1928 6A       		.sleb128 -22
 15812 1929 94       		.byte	0x94
 15813 192a 01       		.byte	0x1
 15814 192b 08       		.byte	0x8
 15815 192c FF       		.byte	0xff
 15816 192d 1A       		.byte	0x1a
 15817 192e 38       		.byte	0x38
 15818 192f 24       		.byte	0x24
 15819 1930 91       		.byte	0x91
 15820 1931 6B       		.sleb128 -21
 15821 1932 94       		.byte	0x94
 15822 1933 01       		.byte	0x1
 15823 1934 08       		.byte	0x8
 15824 1935 FF       		.byte	0xff
 15825 1936 1A       		.byte	0x1a
 15826 1937 21       		.byte	0x21
 15827 1938 9F       		.byte	0x9f
 15828 1939 93       		.byte	0x93
 15829 193a 02       		.uleb128 0x2
 15830 193b 91       		.byte	0x91
 15831 193c 6C       		.sleb128 -20
 15832 193d 94       		.byte	0x94
 15833 193e 01       		.byte	0x1
 15834 193f 08       		.byte	0x8
 15835 1940 FF       		.byte	0xff
 15836 1941 1A       		.byte	0x1a
 15837 1942 38       		.byte	0x38
 15838 1943 24       		.byte	0x24
 15839 1944 91       		.byte	0x91
 15840 1945 6D       		.sleb128 -19
 15841 1946 94       		.byte	0x94
 15842 1947 01       		.byte	0x1
 15843 1948 08       		.byte	0x8
 15844 1949 FF       		.byte	0xff
 15845 194a 1A       		.byte	0x1a
 15846 194b 21       		.byte	0x21
 15847 194c 9F       		.byte	0x9f
 15848 194d 93       		.byte	0x93
 15849 194e 02       		.uleb128 0x2
 15850 194f B2070000 		.4byte	.LVL130-.Ltext0
 15851 1953 BE070000 		.4byte	.LVL132-.Ltext0
 15852 1957 1600     		.2byte	0x16
ARM GAS  /tmp/cc18izUm.s 			page 343


 15853 1959 93       		.byte	0x93
 15854 195a 04       		.uleb128 0x4
 15855 195b 91       		.byte	0x91
 15856 195c 6C       		.sleb128 -20
 15857 195d 94       		.byte	0x94
 15858 195e 01       		.byte	0x1
 15859 195f 08       		.byte	0x8
 15860 1960 FF       		.byte	0xff
 15861 1961 1A       		.byte	0x1a
 15862 1962 38       		.byte	0x38
 15863 1963 24       		.byte	0x24
 15864 1964 91       		.byte	0x91
 15865 1965 6D       		.sleb128 -19
 15866 1966 94       		.byte	0x94
 15867 1967 01       		.byte	0x1
 15868 1968 08       		.byte	0x8
 15869 1969 FF       		.byte	0xff
 15870 196a 1A       		.byte	0x1a
 15871 196b 21       		.byte	0x21
 15872 196c 9F       		.byte	0x9f
 15873 196d 93       		.byte	0x93
 15874 196e 02       		.uleb128 0x2
 15875 196f 00000000 		.4byte	0
 15876 1973 00000000 		.4byte	0
 15877              	.LLST22:
 15878 1977 18070000 		.4byte	.LVL118-.Ltext0
 15879 197b 69070000 		.4byte	.LVL123-1-.Ltext0
 15880 197f 3000     		.2byte	0x30
 15881 1981 7D       		.byte	0x7d
 15882 1982 00       		.sleb128 0
 15883 1983 94       		.byte	0x94
 15884 1984 01       		.byte	0x1
 15885 1985 34       		.byte	0x34
 15886 1986 25       		.byte	0x25
 15887 1987 08       		.byte	0x8
 15888 1988 FF       		.byte	0xff
 15889 1989 1A       		.byte	0x1a
 15890 198a 23       		.byte	0x23
 15891 198b 08       		.uleb128 0x8
 15892 198c 3F       		.byte	0x3f
 15893 198d 1A       		.byte	0x1a
 15894 198e 9F       		.byte	0x9f
 15895 198f 93       		.byte	0x93
 15896 1990 02       		.uleb128 0x2
 15897 1991 91       		.byte	0x91
 15898 1992 69       		.sleb128 -23
 15899 1993 94       		.byte	0x94
 15900 1994 01       		.byte	0x1
 15901 1995 34       		.byte	0x34
 15902 1996 25       		.byte	0x25
 15903 1997 08       		.byte	0x8
 15904 1998 FF       		.byte	0xff
 15905 1999 1A       		.byte	0x1a
 15906 199a 23       		.byte	0x23
 15907 199b 08       		.uleb128 0x8
 15908 199c 3F       		.byte	0x3f
 15909 199d 1A       		.byte	0x1a
ARM GAS  /tmp/cc18izUm.s 			page 344


 15910 199e 9F       		.byte	0x9f
 15911 199f 93       		.byte	0x93
 15912 19a0 02       		.uleb128 0x2
 15913 19a1 91       		.byte	0x91
 15914 19a2 6A       		.sleb128 -22
 15915 19a3 94       		.byte	0x94
 15916 19a4 01       		.byte	0x1
 15917 19a5 34       		.byte	0x34
 15918 19a6 25       		.byte	0x25
 15919 19a7 08       		.byte	0x8
 15920 19a8 FF       		.byte	0xff
 15921 19a9 1A       		.byte	0x1a
 15922 19aa 23       		.byte	0x23
 15923 19ab 08       		.uleb128 0x8
 15924 19ac 3F       		.byte	0x3f
 15925 19ad 1A       		.byte	0x1a
 15926 19ae 9F       		.byte	0x9f
 15927 19af 93       		.byte	0x93
 15928 19b0 02       		.uleb128 0x2
 15929 19b1 00000000 		.4byte	0
 15930 19b5 00000000 		.4byte	0
 15931              	.LLST16:
 15932 19b9 64060000 		.4byte	.LVL99-.Ltext0
 15933 19bd 78060000 		.4byte	.LVL101-.Ltext0
 15934 19c1 0100     		.2byte	0x1
 15935 19c3 50       		.byte	0x50
 15936 19c4 78060000 		.4byte	.LVL101-.Ltext0
 15937 19c8 D8060000 		.4byte	.LVL112-.Ltext0
 15938 19cc 0100     		.2byte	0x1
 15939 19ce 55       		.byte	0x55
 15940 19cf D8060000 		.4byte	.LVL112-.Ltext0
 15941 19d3 DC060000 		.4byte	.LVL113-.Ltext0
 15942 19d7 0100     		.2byte	0x1
 15943 19d9 50       		.byte	0x50
 15944 19da DC060000 		.4byte	.LVL113-.Ltext0
 15945 19de DE060000 		.4byte	.LVL114-.Ltext0
 15946 19e2 0400     		.2byte	0x4
 15947 19e4 F3       		.byte	0xf3
 15948 19e5 01       		.uleb128 0x1
 15949 19e6 50       		.byte	0x50
 15950 19e7 9F       		.byte	0x9f
 15951 19e8 DE060000 		.4byte	.LVL114-.Ltext0
 15952 19ec EC060000 		.4byte	.LFE71-.Ltext0
 15953 19f0 0100     		.2byte	0x1
 15954 19f2 55       		.byte	0x55
 15955 19f3 00000000 		.4byte	0
 15956 19f7 00000000 		.4byte	0
 15957              	.LLST17:
 15958 19fb 64060000 		.4byte	.LVL99-.Ltext0
 15959 19ff 76060000 		.4byte	.LVL100-.Ltext0
 15960 1a03 0100     		.2byte	0x1
 15961 1a05 51       		.byte	0x51
 15962 1a06 76060000 		.4byte	.LVL100-.Ltext0
 15963 1a0a D8060000 		.4byte	.LVL112-.Ltext0
 15964 1a0e 0400     		.2byte	0x4
 15965 1a10 F3       		.byte	0xf3
 15966 1a11 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 345


 15967 1a12 51       		.byte	0x51
 15968 1a13 9F       		.byte	0x9f
 15969 1a14 D8060000 		.4byte	.LVL112-.Ltext0
 15970 1a18 DE060000 		.4byte	.LVL114-.Ltext0
 15971 1a1c 0100     		.2byte	0x1
 15972 1a1e 51       		.byte	0x51
 15973 1a1f DE060000 		.4byte	.LVL114-.Ltext0
 15974 1a23 EC060000 		.4byte	.LFE71-.Ltext0
 15975 1a27 0400     		.2byte	0x4
 15976 1a29 F3       		.byte	0xf3
 15977 1a2a 01       		.uleb128 0x1
 15978 1a2b 51       		.byte	0x51
 15979 1a2c 9F       		.byte	0x9f
 15980 1a2d 00000000 		.4byte	0
 15981 1a31 00000000 		.4byte	0
 15982              	.LLST18:
 15983 1a35 86060000 		.4byte	.LVL103-.Ltext0
 15984 1a39 9B060000 		.4byte	.LVL104-1-.Ltext0
 15985 1a3d 1200     		.2byte	0x12
 15986 1a3f 91       		.byte	0x91
 15987 1a40 6C       		.sleb128 -20
 15988 1a41 94       		.byte	0x94
 15989 1a42 01       		.byte	0x1
 15990 1a43 08       		.byte	0x8
 15991 1a44 FF       		.byte	0xff
 15992 1a45 1A       		.byte	0x1a
 15993 1a46 38       		.byte	0x38
 15994 1a47 24       		.byte	0x24
 15995 1a48 91       		.byte	0x91
 15996 1a49 6D       		.sleb128 -19
 15997 1a4a 94       		.byte	0x94
 15998 1a4b 01       		.byte	0x1
 15999 1a4c 08       		.byte	0x8
 16000 1a4d FF       		.byte	0xff
 16001 1a4e 1A       		.byte	0x1a
 16002 1a4f 21       		.byte	0x21
 16003 1a50 9F       		.byte	0x9f
 16004 1a51 00000000 		.4byte	0
 16005 1a55 00000000 		.4byte	0
 16006              	.LLST14:
 16007 1a59 00060000 		.4byte	.LVL92-.Ltext0
 16008 1a5d 16060000 		.4byte	.LVL94-.Ltext0
 16009 1a61 0100     		.2byte	0x1
 16010 1a63 50       		.byte	0x50
 16011 1a64 16060000 		.4byte	.LVL94-.Ltext0
 16012 1a68 52060000 		.4byte	.LVL96-.Ltext0
 16013 1a6c 0100     		.2byte	0x1
 16014 1a6e 54       		.byte	0x54
 16015 1a6f 52060000 		.4byte	.LVL96-.Ltext0
 16016 1a73 56060000 		.4byte	.LVL97-.Ltext0
 16017 1a77 0100     		.2byte	0x1
 16018 1a79 50       		.byte	0x50
 16019 1a7a 56060000 		.4byte	.LVL97-.Ltext0
 16020 1a7e 58060000 		.4byte	.LVL98-.Ltext0
 16021 1a82 0400     		.2byte	0x4
 16022 1a84 F3       		.byte	0xf3
 16023 1a85 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 346


 16024 1a86 50       		.byte	0x50
 16025 1a87 9F       		.byte	0x9f
 16026 1a88 58060000 		.4byte	.LVL98-.Ltext0
 16027 1a8c 64060000 		.4byte	.LFE70-.Ltext0
 16028 1a90 0100     		.2byte	0x1
 16029 1a92 54       		.byte	0x54
 16030 1a93 00000000 		.4byte	0
 16031 1a97 00000000 		.4byte	0
 16032              	.LLST15:
 16033 1a9b 00060000 		.4byte	.LVL92-.Ltext0
 16034 1a9f 14060000 		.4byte	.LVL93-.Ltext0
 16035 1aa3 0100     		.2byte	0x1
 16036 1aa5 51       		.byte	0x51
 16037 1aa6 14060000 		.4byte	.LVL93-.Ltext0
 16038 1aaa 52060000 		.4byte	.LVL96-.Ltext0
 16039 1aae 0400     		.2byte	0x4
 16040 1ab0 F3       		.byte	0xf3
 16041 1ab1 01       		.uleb128 0x1
 16042 1ab2 51       		.byte	0x51
 16043 1ab3 9F       		.byte	0x9f
 16044 1ab4 52060000 		.4byte	.LVL96-.Ltext0
 16045 1ab8 58060000 		.4byte	.LVL98-.Ltext0
 16046 1abc 0100     		.2byte	0x1
 16047 1abe 51       		.byte	0x51
 16048 1abf 58060000 		.4byte	.LVL98-.Ltext0
 16049 1ac3 64060000 		.4byte	.LFE70-.Ltext0
 16050 1ac7 0400     		.2byte	0x4
 16051 1ac9 F3       		.byte	0xf3
 16052 1aca 01       		.uleb128 0x1
 16053 1acb 51       		.byte	0x51
 16054 1acc 9F       		.byte	0x9f
 16055 1acd 00000000 		.4byte	0
 16056 1ad1 00000000 		.4byte	0
 16057              	.LLST12:
 16058 1ad5 9C050000 		.4byte	.LVL85-.Ltext0
 16059 1ad9 B2050000 		.4byte	.LVL87-.Ltext0
 16060 1add 0100     		.2byte	0x1
 16061 1adf 50       		.byte	0x50
 16062 1ae0 B2050000 		.4byte	.LVL87-.Ltext0
 16063 1ae4 EE050000 		.4byte	.LVL89-.Ltext0
 16064 1ae8 0100     		.2byte	0x1
 16065 1aea 54       		.byte	0x54
 16066 1aeb EE050000 		.4byte	.LVL89-.Ltext0
 16067 1aef F2050000 		.4byte	.LVL90-.Ltext0
 16068 1af3 0100     		.2byte	0x1
 16069 1af5 50       		.byte	0x50
 16070 1af6 F2050000 		.4byte	.LVL90-.Ltext0
 16071 1afa F4050000 		.4byte	.LVL91-.Ltext0
 16072 1afe 0400     		.2byte	0x4
 16073 1b00 F3       		.byte	0xf3
 16074 1b01 01       		.uleb128 0x1
 16075 1b02 50       		.byte	0x50
 16076 1b03 9F       		.byte	0x9f
 16077 1b04 F4050000 		.4byte	.LVL91-.Ltext0
 16078 1b08 00060000 		.4byte	.LFE69-.Ltext0
 16079 1b0c 0100     		.2byte	0x1
 16080 1b0e 54       		.byte	0x54
ARM GAS  /tmp/cc18izUm.s 			page 347


 16081 1b0f 00000000 		.4byte	0
 16082 1b13 00000000 		.4byte	0
 16083              	.LLST13:
 16084 1b17 9C050000 		.4byte	.LVL85-.Ltext0
 16085 1b1b B0050000 		.4byte	.LVL86-.Ltext0
 16086 1b1f 0100     		.2byte	0x1
 16087 1b21 51       		.byte	0x51
 16088 1b22 B0050000 		.4byte	.LVL86-.Ltext0
 16089 1b26 EE050000 		.4byte	.LVL89-.Ltext0
 16090 1b2a 0400     		.2byte	0x4
 16091 1b2c F3       		.byte	0xf3
 16092 1b2d 01       		.uleb128 0x1
 16093 1b2e 51       		.byte	0x51
 16094 1b2f 9F       		.byte	0x9f
 16095 1b30 EE050000 		.4byte	.LVL89-.Ltext0
 16096 1b34 F4050000 		.4byte	.LVL91-.Ltext0
 16097 1b38 0100     		.2byte	0x1
 16098 1b3a 51       		.byte	0x51
 16099 1b3b F4050000 		.4byte	.LVL91-.Ltext0
 16100 1b3f 00060000 		.4byte	.LFE69-.Ltext0
 16101 1b43 0400     		.2byte	0x4
 16102 1b45 F3       		.byte	0xf3
 16103 1b46 01       		.uleb128 0x1
 16104 1b47 51       		.byte	0x51
 16105 1b48 9F       		.byte	0x9f
 16106 1b49 00000000 		.4byte	0
 16107 1b4d 00000000 		.4byte	0
 16108              	.LLST55:
 16109 1b51 74120000 		.4byte	.LVL312-.Ltext0
 16110 1b55 82120000 		.4byte	.LVL313-.Ltext0
 16111 1b59 0100     		.2byte	0x1
 16112 1b5b 50       		.byte	0x50
 16113 1b5c 82120000 		.4byte	.LVL313-.Ltext0
 16114 1b60 B0120000 		.4byte	.LVL316-.Ltext0
 16115 1b64 0400     		.2byte	0x4
 16116 1b66 F3       		.byte	0xf3
 16117 1b67 01       		.uleb128 0x1
 16118 1b68 50       		.byte	0x50
 16119 1b69 9F       		.byte	0x9f
 16120 1b6a B0120000 		.4byte	.LVL316-.Ltext0
 16121 1b6e B2120000 		.4byte	.LVL317-.Ltext0
 16122 1b72 0100     		.2byte	0x1
 16123 1b74 50       		.byte	0x50
 16124 1b75 B2120000 		.4byte	.LVL317-.Ltext0
 16125 1b79 38130000 		.4byte	.LVL325-.Ltext0
 16126 1b7d 0400     		.2byte	0x4
 16127 1b7f F3       		.byte	0xf3
 16128 1b80 01       		.uleb128 0x1
 16129 1b81 50       		.byte	0x50
 16130 1b82 9F       		.byte	0x9f
 16131 1b83 38130000 		.4byte	.LVL325-.Ltext0
 16132 1b87 3C130000 		.4byte	.LVL326-.Ltext0
 16133 1b8b 0100     		.2byte	0x1
 16134 1b8d 50       		.byte	0x50
 16135 1b8e 3C130000 		.4byte	.LVL326-.Ltext0
 16136 1b92 50130000 		.4byte	.LFE68-.Ltext0
 16137 1b96 0400     		.2byte	0x4
ARM GAS  /tmp/cc18izUm.s 			page 348


 16138 1b98 F3       		.byte	0xf3
 16139 1b99 01       		.uleb128 0x1
 16140 1b9a 50       		.byte	0x50
 16141 1b9b 9F       		.byte	0x9f
 16142 1b9c 00000000 		.4byte	0
 16143 1ba0 00000000 		.4byte	0
 16144              	.LLST58:
 16145 1ba4 6C150000 		.4byte	.LVL355-.Ltext0
 16146 1ba8 6E150000 		.4byte	.LVL356-.Ltext0
 16147 1bac 0600     		.2byte	0x6
 16148 1bae 71       		.byte	0x71
 16149 1baf 00       		.sleb128 0
 16150 1bb0 73       		.byte	0x73
 16151 1bb1 00       		.sleb128 0
 16152 1bb2 21       		.byte	0x21
 16153 1bb3 9F       		.byte	0x9f
 16154 1bb4 6E150000 		.4byte	.LVL356-.Ltext0
 16155 1bb8 7C150000 		.4byte	.LVL357-.Ltext0
 16156 1bbc 1B00     		.2byte	0x1b
 16157 1bbe 91       		.byte	0x91
 16158 1bbf 75       		.sleb128 -11
 16159 1bc0 94       		.byte	0x94
 16160 1bc1 01       		.byte	0x1
 16161 1bc2 08       		.byte	0x8
 16162 1bc3 FF       		.byte	0xff
 16163 1bc4 1A       		.byte	0x1a
 16164 1bc5 32       		.byte	0x32
 16165 1bc6 24       		.byte	0x24
 16166 1bc7 34       		.byte	0x34
 16167 1bc8 1A       		.byte	0x1a
 16168 1bc9 91       		.byte	0x91
 16169 1bca 73       		.sleb128 -13
 16170 1bcb 94       		.byte	0x94
 16171 1bcc 01       		.byte	0x1
 16172 1bcd 08       		.byte	0x8
 16173 1bce FF       		.byte	0xff
 16174 1bcf 1A       		.byte	0x1a
 16175 1bd0 31       		.byte	0x31
 16176 1bd1 24       		.byte	0x24
 16177 1bd2 32       		.byte	0x32
 16178 1bd3 1A       		.byte	0x1a
 16179 1bd4 21       		.byte	0x21
 16180 1bd5 73       		.byte	0x73
 16181 1bd6 00       		.sleb128 0
 16182 1bd7 21       		.byte	0x21
 16183 1bd8 9F       		.byte	0x9f
 16184 1bd9 7C150000 		.4byte	.LVL357-.Ltext0
 16185 1bdd 7E150000 		.4byte	.LVL358-.Ltext0
 16186 1be1 2200     		.2byte	0x22
 16187 1be3 91       		.byte	0x91
 16188 1be4 75       		.sleb128 -11
 16189 1be5 94       		.byte	0x94
 16190 1be6 01       		.byte	0x1
 16191 1be7 08       		.byte	0x8
 16192 1be8 FF       		.byte	0xff
 16193 1be9 1A       		.byte	0x1a
 16194 1bea 32       		.byte	0x32
ARM GAS  /tmp/cc18izUm.s 			page 349


 16195 1beb 24       		.byte	0x24
 16196 1bec 34       		.byte	0x34
 16197 1bed 1A       		.byte	0x1a
 16198 1bee 91       		.byte	0x91
 16199 1bef 73       		.sleb128 -13
 16200 1bf0 94       		.byte	0x94
 16201 1bf1 01       		.byte	0x1
 16202 1bf2 08       		.byte	0x8
 16203 1bf3 FF       		.byte	0xff
 16204 1bf4 1A       		.byte	0x1a
 16205 1bf5 31       		.byte	0x31
 16206 1bf6 24       		.byte	0x24
 16207 1bf7 32       		.byte	0x32
 16208 1bf8 1A       		.byte	0x1a
 16209 1bf9 21       		.byte	0x21
 16210 1bfa 91       		.byte	0x91
 16211 1bfb 71       		.sleb128 -15
 16212 1bfc 94       		.byte	0x94
 16213 1bfd 01       		.byte	0x1
 16214 1bfe 31       		.byte	0x31
 16215 1bff 1A       		.byte	0x1a
 16216 1c00 08       		.byte	0x8
 16217 1c01 FF       		.byte	0xff
 16218 1c02 1A       		.byte	0x1a
 16219 1c03 21       		.byte	0x21
 16220 1c04 9F       		.byte	0x9f
 16221 1c05 02160000 		.4byte	.LVL366-.Ltext0
 16222 1c09 06160000 		.4byte	.LVL367-.Ltext0
 16223 1c0d 1B00     		.2byte	0x1b
 16224 1c0f 91       		.byte	0x91
 16225 1c10 75       		.sleb128 -11
 16226 1c11 94       		.byte	0x94
 16227 1c12 01       		.byte	0x1
 16228 1c13 08       		.byte	0x8
 16229 1c14 FF       		.byte	0xff
 16230 1c15 1A       		.byte	0x1a
 16231 1c16 32       		.byte	0x32
 16232 1c17 24       		.byte	0x24
 16233 1c18 34       		.byte	0x34
 16234 1c19 1A       		.byte	0x1a
 16235 1c1a 91       		.byte	0x91
 16236 1c1b 73       		.sleb128 -13
 16237 1c1c 94       		.byte	0x94
 16238 1c1d 01       		.byte	0x1
 16239 1c1e 08       		.byte	0x8
 16240 1c1f FF       		.byte	0xff
 16241 1c20 1A       		.byte	0x1a
 16242 1c21 31       		.byte	0x31
 16243 1c22 24       		.byte	0x24
 16244 1c23 32       		.byte	0x32
 16245 1c24 1A       		.byte	0x1a
 16246 1c25 21       		.byte	0x21
 16247 1c26 73       		.byte	0x73
 16248 1c27 00       		.sleb128 0
 16249 1c28 21       		.byte	0x21
 16250 1c29 9F       		.byte	0x9f
 16251 1c2a 06160000 		.4byte	.LVL367-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 350


 16252 1c2e 0A160000 		.4byte	.LVL368-.Ltext0
 16253 1c32 2200     		.2byte	0x22
 16254 1c34 91       		.byte	0x91
 16255 1c35 75       		.sleb128 -11
 16256 1c36 94       		.byte	0x94
 16257 1c37 01       		.byte	0x1
 16258 1c38 08       		.byte	0x8
 16259 1c39 FF       		.byte	0xff
 16260 1c3a 1A       		.byte	0x1a
 16261 1c3b 32       		.byte	0x32
 16262 1c3c 24       		.byte	0x24
 16263 1c3d 34       		.byte	0x34
 16264 1c3e 1A       		.byte	0x1a
 16265 1c3f 91       		.byte	0x91
 16266 1c40 73       		.sleb128 -13
 16267 1c41 94       		.byte	0x94
 16268 1c42 01       		.byte	0x1
 16269 1c43 08       		.byte	0x8
 16270 1c44 FF       		.byte	0xff
 16271 1c45 1A       		.byte	0x1a
 16272 1c46 31       		.byte	0x31
 16273 1c47 24       		.byte	0x24
 16274 1c48 32       		.byte	0x32
 16275 1c49 1A       		.byte	0x1a
 16276 1c4a 21       		.byte	0x21
 16277 1c4b 91       		.byte	0x91
 16278 1c4c 71       		.sleb128 -15
 16279 1c4d 94       		.byte	0x94
 16280 1c4e 01       		.byte	0x1
 16281 1c4f 31       		.byte	0x31
 16282 1c50 1A       		.byte	0x1a
 16283 1c51 08       		.byte	0x8
 16284 1c52 FF       		.byte	0xff
 16285 1c53 1A       		.byte	0x1a
 16286 1c54 21       		.byte	0x21
 16287 1c55 9F       		.byte	0x9f
 16288 1c56 0A160000 		.4byte	.LVL368-.Ltext0
 16289 1c5a 0F160000 		.4byte	.LVL369-1-.Ltext0
 16290 1c5e 1B00     		.2byte	0x1b
 16291 1c60 91       		.byte	0x91
 16292 1c61 75       		.sleb128 -11
 16293 1c62 94       		.byte	0x94
 16294 1c63 01       		.byte	0x1
 16295 1c64 08       		.byte	0x8
 16296 1c65 FF       		.byte	0xff
 16297 1c66 1A       		.byte	0x1a
 16298 1c67 32       		.byte	0x32
 16299 1c68 24       		.byte	0x24
 16300 1c69 34       		.byte	0x34
 16301 1c6a 1A       		.byte	0x1a
 16302 1c6b 91       		.byte	0x91
 16303 1c6c 73       		.sleb128 -13
 16304 1c6d 94       		.byte	0x94
 16305 1c6e 01       		.byte	0x1
 16306 1c6f 08       		.byte	0x8
 16307 1c70 FF       		.byte	0xff
 16308 1c71 1A       		.byte	0x1a
ARM GAS  /tmp/cc18izUm.s 			page 351


 16309 1c72 31       		.byte	0x31
 16310 1c73 24       		.byte	0x24
 16311 1c74 32       		.byte	0x32
 16312 1c75 1A       		.byte	0x1a
 16313 1c76 21       		.byte	0x21
 16314 1c77 73       		.byte	0x73
 16315 1c78 00       		.sleb128 0
 16316 1c79 21       		.byte	0x21
 16317 1c7a 9F       		.byte	0x9f
 16318 1c7b 16160000 		.4byte	.LVL370-.Ltext0
 16319 1c7f 18160000 		.4byte	.LVL371-.Ltext0
 16320 1c83 1B00     		.2byte	0x1b
 16321 1c85 91       		.byte	0x91
 16322 1c86 75       		.sleb128 -11
 16323 1c87 94       		.byte	0x94
 16324 1c88 01       		.byte	0x1
 16325 1c89 08       		.byte	0x8
 16326 1c8a FF       		.byte	0xff
 16327 1c8b 1A       		.byte	0x1a
 16328 1c8c 32       		.byte	0x32
 16329 1c8d 24       		.byte	0x24
 16330 1c8e 34       		.byte	0x34
 16331 1c8f 1A       		.byte	0x1a
 16332 1c90 91       		.byte	0x91
 16333 1c91 73       		.sleb128 -13
 16334 1c92 94       		.byte	0x94
 16335 1c93 01       		.byte	0x1
 16336 1c94 08       		.byte	0x8
 16337 1c95 FF       		.byte	0xff
 16338 1c96 1A       		.byte	0x1a
 16339 1c97 31       		.byte	0x31
 16340 1c98 24       		.byte	0x24
 16341 1c99 32       		.byte	0x32
 16342 1c9a 1A       		.byte	0x1a
 16343 1c9b 21       		.byte	0x21
 16344 1c9c 73       		.byte	0x73
 16345 1c9d 00       		.sleb128 0
 16346 1c9e 21       		.byte	0x21
 16347 1c9f 9F       		.byte	0x9f
 16348 1ca0 18160000 		.4byte	.LVL371-.Ltext0
 16349 1ca4 27160000 		.4byte	.LVL372-1-.Ltext0
 16350 1ca8 2200     		.2byte	0x22
 16351 1caa 91       		.byte	0x91
 16352 1cab 75       		.sleb128 -11
 16353 1cac 94       		.byte	0x94
 16354 1cad 01       		.byte	0x1
 16355 1cae 08       		.byte	0x8
 16356 1caf FF       		.byte	0xff
 16357 1cb0 1A       		.byte	0x1a
 16358 1cb1 32       		.byte	0x32
 16359 1cb2 24       		.byte	0x24
 16360 1cb3 34       		.byte	0x34
 16361 1cb4 1A       		.byte	0x1a
 16362 1cb5 91       		.byte	0x91
 16363 1cb6 73       		.sleb128 -13
 16364 1cb7 94       		.byte	0x94
 16365 1cb8 01       		.byte	0x1
ARM GAS  /tmp/cc18izUm.s 			page 352


 16366 1cb9 08       		.byte	0x8
 16367 1cba FF       		.byte	0xff
 16368 1cbb 1A       		.byte	0x1a
 16369 1cbc 31       		.byte	0x31
 16370 1cbd 24       		.byte	0x24
 16371 1cbe 32       		.byte	0x32
 16372 1cbf 1A       		.byte	0x1a
 16373 1cc0 21       		.byte	0x21
 16374 1cc1 91       		.byte	0x91
 16375 1cc2 71       		.sleb128 -15
 16376 1cc3 94       		.byte	0x94
 16377 1cc4 01       		.byte	0x1
 16378 1cc5 31       		.byte	0x31
 16379 1cc6 1A       		.byte	0x1a
 16380 1cc7 08       		.byte	0x8
 16381 1cc8 FF       		.byte	0xff
 16382 1cc9 1A       		.byte	0x1a
 16383 1cca 21       		.byte	0x21
 16384 1ccb 9F       		.byte	0x9f
 16385 1ccc 2E160000 		.4byte	.LVL373-.Ltext0
 16386 1cd0 32160000 		.4byte	.LVL374-.Ltext0
 16387 1cd4 0500     		.2byte	0x5
 16388 1cd6 73       		.byte	0x73
 16389 1cd7 00       		.sleb128 0
 16390 1cd8 3F       		.byte	0x3f
 16391 1cd9 1A       		.byte	0x1a
 16392 1cda 9F       		.byte	0x9f
 16393 1cdb 32160000 		.4byte	.LVL374-.Ltext0
 16394 1cdf 45160000 		.4byte	.LVL375-1-.Ltext0
 16395 1ce3 0700     		.2byte	0x7
 16396 1ce5 7D       		.byte	0x7d
 16397 1ce6 00       		.sleb128 0
 16398 1ce7 94       		.byte	0x94
 16399 1ce8 01       		.byte	0x1
 16400 1ce9 3F       		.byte	0x3f
 16401 1cea 1A       		.byte	0x1a
 16402 1ceb 9F       		.byte	0x9f
 16403 1cec 4C160000 		.4byte	.LVL376-.Ltext0
 16404 1cf0 51160000 		.4byte	.LVL377-1-.Ltext0
 16405 1cf4 0700     		.2byte	0x7
 16406 1cf6 7D       		.byte	0x7d
 16407 1cf7 00       		.sleb128 0
 16408 1cf8 94       		.byte	0x94
 16409 1cf9 01       		.byte	0x1
 16410 1cfa 3F       		.byte	0x3f
 16411 1cfb 1A       		.byte	0x1a
 16412 1cfc 9F       		.byte	0x9f
 16413 1cfd 00000000 		.4byte	0
 16414 1d01 00000000 		.4byte	0
 16415              	.LLST10:
 16416 1d05 5C050000 		.4byte	.LVL75-.Ltext0
 16417 1d09 80050000 		.4byte	.LVL77-.Ltext0
 16418 1d0d 0100     		.2byte	0x1
 16419 1d0f 50       		.byte	0x50
 16420 1d10 80050000 		.4byte	.LVL77-.Ltext0
 16421 1d14 86050000 		.4byte	.LVL79-.Ltext0
 16422 1d18 0400     		.2byte	0x4
ARM GAS  /tmp/cc18izUm.s 			page 353


 16423 1d1a F3       		.byte	0xf3
 16424 1d1b 01       		.uleb128 0x1
 16425 1d1c 50       		.byte	0x50
 16426 1d1d 9F       		.byte	0x9f
 16427 1d1e 86050000 		.4byte	.LVL79-.Ltext0
 16428 1d22 8A050000 		.4byte	.LVL80-.Ltext0
 16429 1d26 0100     		.2byte	0x1
 16430 1d28 50       		.byte	0x50
 16431 1d29 8A050000 		.4byte	.LVL80-.Ltext0
 16432 1d2d 8C050000 		.4byte	.LVL81-.Ltext0
 16433 1d31 0400     		.2byte	0x4
 16434 1d33 F3       		.byte	0xf3
 16435 1d34 01       		.uleb128 0x1
 16436 1d35 50       		.byte	0x50
 16437 1d36 9F       		.byte	0x9f
 16438 1d37 8C050000 		.4byte	.LVL81-.Ltext0
 16439 1d3b 90050000 		.4byte	.LVL82-.Ltext0
 16440 1d3f 0100     		.2byte	0x1
 16441 1d41 50       		.byte	0x50
 16442 1d42 90050000 		.4byte	.LVL82-.Ltext0
 16443 1d46 92050000 		.4byte	.LVL83-.Ltext0
 16444 1d4a 0400     		.2byte	0x4
 16445 1d4c F3       		.byte	0xf3
 16446 1d4d 01       		.uleb128 0x1
 16447 1d4e 50       		.byte	0x50
 16448 1d4f 9F       		.byte	0x9f
 16449 1d50 92050000 		.4byte	.LVL83-.Ltext0
 16450 1d54 96050000 		.4byte	.LVL84-.Ltext0
 16451 1d58 0100     		.2byte	0x1
 16452 1d5a 50       		.byte	0x50
 16453 1d5b 96050000 		.4byte	.LVL84-.Ltext0
 16454 1d5f 9C050000 		.4byte	.LFE66-.Ltext0
 16455 1d63 0400     		.2byte	0x4
 16456 1d65 F3       		.byte	0xf3
 16457 1d66 01       		.uleb128 0x1
 16458 1d67 50       		.byte	0x50
 16459 1d68 9F       		.byte	0x9f
 16460 1d69 00000000 		.4byte	0
 16461 1d6d 00000000 		.4byte	0
 16462              	.LLST11:
 16463 1d71 5C050000 		.4byte	.LVL75-.Ltext0
 16464 1d75 7C050000 		.4byte	.LVL76-.Ltext0
 16465 1d79 0100     		.2byte	0x1
 16466 1d7b 51       		.byte	0x51
 16467 1d7c 7C050000 		.4byte	.LVL76-.Ltext0
 16468 1d80 83050000 		.4byte	.LVL78-1-.Ltext0
 16469 1d84 0100     		.2byte	0x1
 16470 1d86 53       		.byte	0x53
 16471 1d87 83050000 		.4byte	.LVL78-1-.Ltext0
 16472 1d8b 86050000 		.4byte	.LVL79-.Ltext0
 16473 1d8f 0400     		.2byte	0x4
 16474 1d91 F3       		.byte	0xf3
 16475 1d92 01       		.uleb128 0x1
 16476 1d93 51       		.byte	0x51
 16477 1d94 9F       		.byte	0x9f
 16478 1d95 86050000 		.4byte	.LVL79-.Ltext0
 16479 1d99 9C050000 		.4byte	.LFE66-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 354


 16480 1d9d 0100     		.2byte	0x1
 16481 1d9f 51       		.byte	0x51
 16482 1da0 00000000 		.4byte	0
 16483 1da4 00000000 		.4byte	0
 16484              	.LLST9:
 16485 1da8 08050000 		.4byte	.LVL68-.Ltext0
 16486 1dac 1C050000 		.4byte	.LVL69-.Ltext0
 16487 1db0 0200     		.2byte	0x2
 16488 1db2 30       		.byte	0x30
 16489 1db3 9F       		.byte	0x9f
 16490 1db4 1C050000 		.4byte	.LVL69-.Ltext0
 16491 1db8 1E050000 		.4byte	.LVL70-.Ltext0
 16492 1dbc 0100     		.2byte	0x1
 16493 1dbe 54       		.byte	0x54
 16494 1dbf 20050000 		.4byte	.LVL71-.Ltext0
 16495 1dc3 54050000 		.4byte	.LVL74-.Ltext0
 16496 1dc7 0100     		.2byte	0x1
 16497 1dc9 54       		.byte	0x54
 16498 1dca 54050000 		.4byte	.LVL74-.Ltext0
 16499 1dce 5C050000 		.4byte	.LFE65-.Ltext0
 16500 1dd2 0200     		.2byte	0x2
 16501 1dd4 30       		.byte	0x30
 16502 1dd5 9F       		.byte	0x9f
 16503 1dd6 00000000 		.4byte	0
 16504 1dda 00000000 		.4byte	0
 16505              	.LLST0:
 16506 1dde 00000000 		.4byte	.LVL0-.Ltext0
 16507 1de2 1A000000 		.4byte	.LVL1-.Ltext0
 16508 1de6 0100     		.2byte	0x1
 16509 1de8 50       		.byte	0x50
 16510 1de9 1A000000 		.4byte	.LVL1-.Ltext0
 16511 1ded 38000000 		.4byte	.LVL3-.Ltext0
 16512 1df1 0400     		.2byte	0x4
 16513 1df3 F3       		.byte	0xf3
 16514 1df4 01       		.uleb128 0x1
 16515 1df5 50       		.byte	0x50
 16516 1df6 9F       		.byte	0x9f
 16517 1df7 38000000 		.4byte	.LVL3-.Ltext0
 16518 1dfb 5A000000 		.4byte	.LVL4-.Ltext0
 16519 1dff 0100     		.2byte	0x1
 16520 1e01 50       		.byte	0x50
 16521 1e02 5A000000 		.4byte	.LVL4-.Ltext0
 16522 1e06 74000000 		.4byte	.LVL6-.Ltext0
 16523 1e0a 0400     		.2byte	0x4
 16524 1e0c F3       		.byte	0xf3
 16525 1e0d 01       		.uleb128 0x1
 16526 1e0e 50       		.byte	0x50
 16527 1e0f 9F       		.byte	0x9f
 16528 1e10 74000000 		.4byte	.LVL6-.Ltext0
 16529 1e14 7C000000 		.4byte	.LVL7-.Ltext0
 16530 1e18 0100     		.2byte	0x1
 16531 1e1a 50       		.byte	0x50
 16532 1e1b 7C000000 		.4byte	.LVL7-.Ltext0
 16533 1e1f 82000000 		.4byte	.LVL8-.Ltext0
 16534 1e23 0400     		.2byte	0x4
 16535 1e25 F3       		.byte	0xf3
 16536 1e26 01       		.uleb128 0x1
ARM GAS  /tmp/cc18izUm.s 			page 355


 16537 1e27 50       		.byte	0x50
 16538 1e28 9F       		.byte	0x9f
 16539 1e29 82000000 		.4byte	.LVL8-.Ltext0
 16540 1e2d 86000000 		.4byte	.LVL9-.Ltext0
 16541 1e31 0100     		.2byte	0x1
 16542 1e33 50       		.byte	0x50
 16543 1e34 86000000 		.4byte	.LVL9-.Ltext0
 16544 1e38 88000000 		.4byte	.LVL10-.Ltext0
 16545 1e3c 0400     		.2byte	0x4
 16546 1e3e F3       		.byte	0xf3
 16547 1e3f 01       		.uleb128 0x1
 16548 1e40 50       		.byte	0x50
 16549 1e41 9F       		.byte	0x9f
 16550 1e42 88000000 		.4byte	.LVL10-.Ltext0
 16551 1e46 8A000000 		.4byte	.LVL11-.Ltext0
 16552 1e4a 0100     		.2byte	0x1
 16553 1e4c 50       		.byte	0x50
 16554 1e4d 8A000000 		.4byte	.LVL11-.Ltext0
 16555 1e51 98000000 		.4byte	.LFE64-.Ltext0
 16556 1e55 0400     		.2byte	0x4
 16557 1e57 F3       		.byte	0xf3
 16558 1e58 01       		.uleb128 0x1
 16559 1e59 50       		.byte	0x50
 16560 1e5a 9F       		.byte	0x9f
 16561 1e5b 00000000 		.4byte	0
 16562 1e5f 00000000 		.4byte	0
 16563              	.LLST34:
 16564 1e63 140D0000 		.4byte	.LVL209-.Ltext0
 16565 1e67 1C0D0000 		.4byte	.LVL210-.Ltext0
 16566 1e6b 0100     		.2byte	0x1
 16567 1e6d 50       		.byte	0x50
 16568 1e6e 1C0D0000 		.4byte	.LVL210-.Ltext0
 16569 1e72 240D0000 		.4byte	.LFE86-.Ltext0
 16570 1e76 0400     		.2byte	0x4
 16571 1e78 F3       		.byte	0xf3
 16572 1e79 01       		.uleb128 0x1
 16573 1e7a 50       		.byte	0x50
 16574 1e7b 9F       		.byte	0x9f
 16575 1e7c 00000000 		.4byte	0
 16576 1e80 00000000 		.4byte	0
 16577              		.section	.debug_aranges,"",%progbits
 16578 0000 1C000000 		.4byte	0x1c
 16579 0004 0200     		.2byte	0x2
 16580 0006 00000000 		.4byte	.Ldebug_info0
 16581 000a 04       		.byte	0x4
 16582 000b 00       		.byte	0
 16583 000c 0000     		.2byte	0
 16584 000e 0000     		.2byte	0
 16585 0010 00000000 		.4byte	.Ltext0
 16586 0014 321E0000 		.4byte	.Letext0-.Ltext0
 16587 0018 00000000 		.4byte	0
 16588 001c 00000000 		.4byte	0
 16589              		.section	.debug_ranges,"",%progbits
 16590              	.Ldebug_ranges0:
 16591 0000 EA020000 		.4byte	.LBB2-.Ltext0
 16592 0004 80030000 		.4byte	.LBE2-.Ltext0
 16593 0008 FA040000 		.4byte	.LBB3-.Ltext0
ARM GAS  /tmp/cc18izUm.s 			page 356


 16594 000c 08050000 		.4byte	.LBE3-.Ltext0
 16595 0010 00000000 		.4byte	0
 16596 0014 00000000 		.4byte	0
 16597 0018 92190000 		.4byte	.LBB14-.Ltext0
 16598 001c AA1A0000 		.4byte	.LBE14-.Ltext0
 16599 0020 F81B0000 		.4byte	.LBB25-.Ltext0
 16600 0024 2C1C0000 		.4byte	.LBE25-.Ltext0
 16601 0028 00000000 		.4byte	0
 16602 002c 00000000 		.4byte	0
 16603 0030 92190000 		.4byte	.LBB16-.Ltext0
 16604 0034 2E1A0000 		.4byte	.LBE16-.Ltext0
 16605 0038 F81B0000 		.4byte	.LBB19-.Ltext0
 16606 003c 101C0000 		.4byte	.LBE19-.Ltext0
 16607 0040 00000000 		.4byte	0
 16608 0044 00000000 		.4byte	0
 16609 0048 AE1A0000 		.4byte	.LBB21-.Ltext0
 16610 004c C41A0000 		.4byte	.LBE21-.Ltext0
 16611 0050 DC1A0000 		.4byte	.LBB24-.Ltext0
 16612 0054 AC1B0000 		.4byte	.LBE24-.Ltext0
 16613 0058 00000000 		.4byte	0
 16614 005c 00000000 		.4byte	0
 16615 0060 741C0000 		.4byte	.LBB31-.Ltext0
 16616 0064 181D0000 		.4byte	.LBE31-.Ltext0
 16617 0068 661D0000 		.4byte	.LBB34-.Ltext0
 16618 006c 161E0000 		.4byte	.LBE34-.Ltext0
 16619 0070 1E1E0000 		.4byte	.LBB35-.Ltext0
 16620 0074 301E0000 		.4byte	.LBE35-.Ltext0
 16621 0078 00000000 		.4byte	0
 16622 007c 00000000 		.4byte	0
 16623              		.section	.debug_line,"",%progbits
 16624              	.Ldebug_line0:
 16625 0000 C3070000 		.section	.debug_str,"MS",%progbits,1
 16625      02003702 
 16625      00000201 
 16625      FB0E0D00 
 16625      01010101 
 16626              	.LASF348:
 16627 0000 6D70755F 		.ascii	"mpu_get_fifo_config\000"
 16627      6765745F 
 16627      6669666F 
 16627      5F636F6E 
 16627      66696700 
 16628              	.LASF14:
 16629 0014 73697A65 		.ascii	"sizetype\000"
 16629      74797065 
 16629      00
 16630              	.LASF32:
 16631 001d 5F5F7661 		.ascii	"__value\000"
 16631      6C756500 
 16632              	.LASF250:
 16633 0025 6C70615F 		.ascii	"lpa_freq\000"
 16633      66726571 
 16633      00
 16634              	.LASF100:
 16635 002e 5F5F7366 		.ascii	"__sf\000"
 16635      00
 16636              	.LASF347:
ARM GAS  /tmp/cc18izUm.s 			page 357


 16637 0033 6D796765 		.ascii	"myget_ms\000"
 16637      745F6D73 
 16637      00
 16638              	.LASF67:
 16639 003c 5F726561 		.ascii	"_read\000"
 16639      6400
 16640              	.LASF304:
 16641 0042 6D70755F 		.ascii	"mpu_get_int_status\000"
 16641      6765745F 
 16641      696E745F 
 16641      73746174 
 16641      757300
 16642              	.LASF230:
 16643 0055 494E565F 		.ascii	"INV_FSR_1000DPS\000"
 16643      4653525F 
 16643      31303030 
 16643      44505300 
 16644              	.LASF271:
 16645 0065 6779726F 		.ascii	"gyro_st\000"
 16645      5F737400 
 16646              	.LASF211:
 16647 006d 6D61785F 		.ascii	"max_g\000"
 16647      6700
 16648              	.LASF68:
 16649 0073 5F777269 		.ascii	"_write\000"
 16649      746500
 16650              	.LASF264:
 16651 007a 73746172 		.ascii	"start_addr\000"
 16651      745F6164 
 16651      647200
 16652              	.LASF12:
 16653 0085 696E7433 		.ascii	"int32_t\000"
 16653      325F7400 
 16654              	.LASF112:
 16655 008d 5F617363 		.ascii	"_asctime_buf\000"
 16655      74696D65 
 16655      5F627566 
 16655      00
 16656              	.LASF94:
 16657 009a 5F637674 		.ascii	"_cvtlen\000"
 16657      6C656E00 
 16658              	.LASF334:
 16659 00a2 6D70755F 		.ascii	"mpu_init\000"
 16659      696E6974 
 16659      00
 16660              	.LASF318:
 16661 00ab 6D70755F 		.ascii	"mpu_get_sample_rate\000"
 16661      6765745F 
 16661      73616D70 
 16661      6C655F72 
 16661      61746500 
 16662              	.LASF131:
 16663 00bf 5F756E75 		.ascii	"_unused\000"
 16663      73656400 
 16664              	.LASF41:
 16665 00c7 5F5F746D 		.ascii	"__tm\000"
 16665      00
ARM GAS  /tmp/cc18izUm.s 			page 358


 16666              	.LASF127:
 16667 00cc 5F776373 		.ascii	"_wcsrtombs_state\000"
 16667      72746F6D 
 16667      62735F73 
 16667      74617465 
 16667      00
 16668              	.LASF72:
 16669 00dd 5F6E6275 		.ascii	"_nbuf\000"
 16669      6600
 16670              	.LASF42:
 16671 00e3 5F5F746D 		.ascii	"__tm_sec\000"
 16671      5F736563 
 16671      00
 16672              	.LASF210:
 16673 00ec 6D696E5F 		.ascii	"min_g\000"
 16673      6700
 16674              	.LASF120:
 16675 00f2 5F6C3634 		.ascii	"_l64a_buf\000"
 16675      615F6275 
 16675      6600
 16676              	.LASF259:
 16677 00fc 6D70755F 		.ascii	"mpu_set_dmp_state\000"
 16677      7365745F 
 16677      646D705F 
 16677      73746174 
 16677      6500
 16678              	.LASF336:
 16679 010e 6D70755F 		.ascii	"mpu_reg_dump\000"
 16679      7265675F 
 16679      64756D70 
 16679      00
 16680              	.LASF231:
 16681 011b 494E565F 		.ascii	"INV_FSR_2000DPS\000"
 16681      4653525F 
 16681      32303030 
 16681      44505300 
 16682              	.LASF76:
 16683 012b 5F6C6F63 		.ascii	"_lock\000"
 16683      6B00
 16684              	.LASF349:
 16685 0131 70757473 		.ascii	"puts\000"
 16685      00
 16686              	.LASF190:
 16687 0136 61636365 		.ascii	"accel_half\000"
 16687      6C5F6861 
 16687      6C6600
 16688              	.LASF192:
 16689 0141 696E745F 		.ascii	"int_motion_only\000"
 16689      6D6F7469 
 16689      6F6E5F6F 
 16689      6E6C7900 
 16690              	.LASF346:
 16691 0151 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/stm32-quadrocopter\000"
 16691      652F656E 
 16691      62696E2F 
 16691      446F6375 
 16691      6D656E74 
ARM GAS  /tmp/cc18izUm.s 			page 359


 16692              	.LASF108:
 16693 0183 5F6D756C 		.ascii	"_mult\000"
 16693      7400
 16694              	.LASF255:
 16695 0189 6D70755F 		.ascii	"mpu_get_compass_reg\000"
 16695      6765745F 
 16695      636F6D70 
 16695      6173735F 
 16695      72656700 
 16696              	.LASF242:
 16697 019d 4E554D5F 		.ascii	"NUM_CLK\000"
 16697      434C4B00 
 16698              	.LASF153:
 16699 01a5 6D6F7469 		.ascii	"motion_dur\000"
 16699      6F6E5F64 
 16699      757200
 16700              	.LASF29:
 16701 01b0 5F5F7763 		.ascii	"__wch\000"
 16701      6800
 16702              	.LASF194:
 16703 01b6 61637469 		.ascii	"active_low_int\000"
 16703      76655F6C 
 16703      6F775F69 
 16703      6E7400
 16704              	.LASF64:
 16705 01c5 5F66696C 		.ascii	"_file\000"
 16705      6500
 16706              	.LASF275:
 16707 01cb 72657375 		.ascii	"result\000"
 16707      6C7400
 16708              	.LASF51:
 16709 01d2 5F6F6E5F 		.ascii	"_on_exit_args\000"
 16709      65786974 
 16709      5F617267 
 16709      7300
 16710              	.LASF217:
 16711 01e0 6C70665F 		.ascii	"lpf_e\000"
 16711      6500
 16712              	.LASF143:
 16713 01e6 5F737973 		.ascii	"_sys_nerr\000"
 16713      5F6E6572 
 16713      7200
 16714              	.LASF323:
 16715 01f0 6D70755F 		.ascii	"mpu_set_gyro_fsr\000"
 16715      7365745F 
 16715      6779726F 
 16715      5F667372 
 16715      00
 16716              	.LASF21:
 16717 0201 477A5F6F 		.ascii	"Gz_offset\000"
 16717      66667365 
 16717      7400
 16718              	.LASF160:
 16719 020b 646D705F 		.ascii	"dmp_int_status\000"
 16719      696E745F 
 16719      73746174 
 16719      757300
ARM GAS  /tmp/cc18izUm.s 			page 360


 16720              	.LASF123:
 16721 021a 5F6D6272 		.ascii	"_mbrlen_state\000"
 16721      6C656E5F 
 16721      73746174 
 16721      6500
 16722              	.LASF5:
 16723 0228 6C6F6E67 		.ascii	"long int\000"
 16723      20696E74 
 16723      00
 16724              	.LASF132:
 16725 0231 5F696D70 		.ascii	"_impure_ptr\000"
 16725      7572655F 
 16725      70747200 
 16726              	.LASF91:
 16727 023d 5F726573 		.ascii	"_result_k\000"
 16727      756C745F 
 16727      6B00
 16728              	.LASF283:
 16729 0247 6779726F 		.ascii	"gyro_cur\000"
 16729      5F637572 
 16729      00
 16730              	.LASF61:
 16731 0250 5F73697A 		.ascii	"_size\000"
 16731      6500
 16732              	.LASF301:
 16733 0256 6D70755F 		.ascii	"mpu_read_fifo\000"
 16733      72656164 
 16733      5F666966 
 16733      6F00
 16734              	.LASF113:
 16735 0264 5F6C6F63 		.ascii	"_localtime_buf\000"
 16735      616C7469 
 16735      6D655F62 
 16735      756600
 16736              	.LASF215:
 16737 0273 74657374 		.ascii	"test\000"
 16737      00
 16738              	.LASF237:
 16739 0278 494E565F 		.ascii	"INV_FSR_16G\000"
 16739      4653525F 
 16739      31364700 
 16740              	.LASF145:
 16741 0284 77686F5F 		.ascii	"who_am_i\000"
 16741      616D5F69 
 16741      00
 16742              	.LASF4:
 16743 028d 73686F72 		.ascii	"short unsigned int\000"
 16743      7420756E 
 16743      7369676E 
 16743      65642069 
 16743      6E7400
 16744              	.LASF208:
 16745 02a0 6D61785F 		.ascii	"max_dps\000"
 16745      64707300 
 16746              	.LASF46:
 16747 02a8 5F5F746D 		.ascii	"__tm_mon\000"
 16747      5F6D6F6E 
ARM GAS  /tmp/cc18izUm.s 			page 361


 16747      00
 16748              	.LASF265:
 16749 02b1 74686973 		.ascii	"this_write\000"
 16749      5F777269 
 16749      746500
 16750              	.LASF306:
 16751 02bc 6D70755F 		.ascii	"mpu_set_sensors\000"
 16751      7365745F 
 16751      73656E73 
 16751      6F727300 
 16752              	.LASF282:
 16753 02cc 61636365 		.ascii	"accel_cur\000"
 16753      6C5F6375 
 16753      7200
 16754              	.LASF86:
 16755 02d6 5F637572 		.ascii	"_current_category\000"
 16755      72656E74 
 16755      5F636174 
 16755      65676F72 
 16755      7900
 16756              	.LASF278:
 16757 02e8 72657374 		.ascii	"restore\000"
 16757      6F726500 
 16758              	.LASF276:
 16759 02f0 646D705F 		.ascii	"dmp_was_on\000"
 16759      7761735F 
 16759      6F6E00
 16760              	.LASF110:
 16761 02fb 5F756E75 		.ascii	"_unused_rand\000"
 16761      7365645F 
 16761      72616E64 
 16761      00
 16762              	.LASF252:
 16763 0308 74687265 		.ascii	"thresh_hw\000"
 16763      73685F68 
 16763      7700
 16764              	.LASF339:
 16765 0312 4932435F 		.ascii	"I2C_Write\000"
 16765      57726974 
 16765      6500
 16766              	.LASF1:
 16767 031c 7369676E 		.ascii	"signed char\000"
 16767      65642063 
 16767      68617200 
 16768              	.LASF148:
 16769 0328 75736572 		.ascii	"user_ctrl\000"
 16769      5F637472 
 16769      6C00
 16770              	.LASF286:
 16771 0332 63616368 		.ascii	"cache_ptr\000"
 16771      655F7074 
 16771      7200
 16772              	.LASF161:
 16773 033c 696E745F 		.ascii	"int_status\000"
 16773      73746174 
 16773      757300
 16774              	.LASF256:
ARM GAS  /tmp/cc18izUm.s 			page 362


 16775 0347 74696D65 		.ascii	"timestamp\000"
 16775      7374616D 
 16775      7000
 16776              	.LASF232:
 16777 0351 4E554D5F 		.ascii	"NUM_GYRO_FSR\000"
 16777      4759524F 
 16777      5F465352 
 16777      00
 16778              	.LASF233:
 16779 035e 61636365 		.ascii	"accel_fsr_e\000"
 16779      6C5F6673 
 16779      725F6500 
 16780              	.LASF257:
 16781 036a 6D70755F 		.ascii	"mpu_get_dmp_state\000"
 16781      6765745F 
 16781      646D705F 
 16781      73746174 
 16781      6500
 16782              	.LASF340:
 16783 037c 44656C61 		.ascii	"DelayMs\000"
 16783      794D7300 
 16784              	.LASF173:
 16785 0384 6D61785F 		.ascii	"max_fifo\000"
 16785      6669666F 
 16785      00
 16786              	.LASF2:
 16787 038d 756E7369 		.ascii	"unsigned char\000"
 16787      676E6564 
 16787      20636861 
 16787      7200
 16788              	.LASF314:
 16789 039b 6D70755F 		.ascii	"mpu_set_compass_sample_rate\000"
 16789      7365745F 
 16789      636F6D70 
 16789      6173735F 
 16789      73616D70 
 16790              	.LASF326:
 16791 03b7 6D70755F 		.ascii	"mpu_set_accel_bias\000"
 16791      7365745F 
 16791      61636365 
 16791      6C5F6269 
 16791      617300
 16792              	.LASF79:
 16793 03ca 5F726565 		.ascii	"_reent\000"
 16793      6E7400
 16794              	.LASF316:
 16795 03d1 6D70755F 		.ascii	"mpu_get_compass_sample_rate\000"
 16795      6765745F 
 16795      636F6D70 
 16795      6173735F 
 16795      73616D70 
 16796              	.LASF133:
 16797 03ed 5F676C6F 		.ascii	"_global_impure_ptr\000"
 16797      62616C5F 
 16797      696D7075 
 16797      72655F70 
 16797      747200
ARM GAS  /tmp/cc18izUm.s 			page 363


 16798              	.LASF298:
 16799 0400 62797061 		.ascii	"bypass_on\000"
 16799      73735F6F 
 16799      6E00
 16800              	.LASF101:
 16801 040a 63686172 		.ascii	"char\000"
 16801      00
 16802              	.LASF58:
 16803 040f 5F666E73 		.ascii	"_fns\000"
 16803      00
 16804              	.LASF17:
 16805 0414 6779726F 		.ascii	"gyro\000"
 16805      00
 16806              	.LASF188:
 16807 0419 6669666F 		.ascii	"fifo_enable\000"
 16807      5F656E61 
 16807      626C6500 
 16808              	.LASF70:
 16809 0425 5F636C6F 		.ascii	"_close\000"
 16809      736500
 16810              	.LASF344:
 16811 042c 474E5520 		.ascii	"GNU C89 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -mfl"
 16811      43383920 
 16811      362E312E 
 16811      31203230 
 16811      31363035 
 16812 045f 6F61742D 		.ascii	"oat-abi=soft -g -O1 -std=gnu90 -fno-common -fno-mat"
 16812      6162693D 
 16812      736F6674 
 16812      202D6720 
 16812      2D4F3120 
 16813 0492 682D6572 		.ascii	"h-errno\000"
 16813      726E6F00 
 16814              	.LASF243:
 16815 049a 6C705F61 		.ascii	"lp_accel_rate_e\000"
 16815      6363656C 
 16815      5F726174 
 16815      655F6500 
 16816              	.LASF300:
 16817 04aa 6D6F7265 		.ascii	"more\000"
 16817      00
 16818              	.LASF273:
 16819 04af 61636365 		.ascii	"accel_result\000"
 16819      6C5F7265 
 16819      73756C74 
 16819      00
 16820              	.LASF263:
 16821 04bc 6669726D 		.ascii	"firmware\000"
 16821      77617265 
 16821      00
 16822              	.LASF159:
 16823 04c5 696E745F 		.ascii	"int_enable\000"
 16823      656E6162 
 16823      6C6500
 16824              	.LASF81:
 16825 04d0 5F737464 		.ascii	"_stdin\000"
 16825      696E00
ARM GAS  /tmp/cc18izUm.s 			page 364


 16826              	.LASF270:
 16827 04d7 74726965 		.ascii	"tries\000"
 16827      7300
 16828              	.LASF327:
 16829 04dd 61636365 		.ascii	"accel_bias\000"
 16829      6C5F6269 
 16829      617300
 16830              	.LASF274:
 16831 04e8 6779726F 		.ascii	"gyro_result\000"
 16831      5F726573 
 16831      756C7400 
 16832              	.LASF162:
 16833 04f4 7077725F 		.ascii	"pwr_mgmt_1\000"
 16833      6D676D74 
 16833      5F3100
 16834              	.LASF163:
 16835 04ff 7077725F 		.ascii	"pwr_mgmt_2\000"
 16835      6D676D74 
 16835      5F3200
 16836              	.LASF328:
 16837 050a 61636365 		.ascii	"accel_hw\000"
 16837      6C5F6877 
 16837      00
 16838              	.LASF291:
 16839 0513 61636365 		.ascii	"accel_self_test\000"
 16839      6C5F7365 
 16839      6C665F74 
 16839      65737400 
 16840              	.LASF238:
 16841 0523 4E554D5F 		.ascii	"NUM_ACCEL_FSR\000"
 16841      41434345 
 16841      4C5F4653 
 16841      5200
 16842              	.LASF332:
 16843 0531 6D70755F 		.ascii	"mpu_get_gyro_reg\000"
 16843      6765745F 
 16843      6779726F 
 16843      5F726567 
 16843      00
 16844              	.LASF234:
 16845 0542 494E565F 		.ascii	"INV_FSR_2G\000"
 16845      4653525F 
 16845      324700
 16846              	.LASF245:
 16847 054d 494E565F 		.ascii	"INV_LPA_5HZ\000"
 16847      4C50415F 
 16847      35485A00 
 16848              	.LASF213:
 16849 0559 6779726F 		.ascii	"gyro_state_s\000"
 16849      5F737461 
 16849      74655F73 
 16849      00
 16850              	.LASF167:
 16851 0566 6932635F 		.ascii	"i2c_mst\000"
 16851      6D737400 
 16852              	.LASF343:
 16853 056e 7072696E 		.ascii	"printf\000"
ARM GAS  /tmp/cc18izUm.s 			page 365


 16853      746600
 16854              	.LASF150:
 16855 0575 6779726F 		.ascii	"gyro_cfg\000"
 16855      5F636667 
 16855      00
 16856              	.LASF168:
 16857 057e 62616E6B 		.ascii	"bank_sel\000"
 16857      5F73656C 
 16857      00
 16858              	.LASF305:
 16859 0587 73746174 		.ascii	"status\000"
 16859      757300
 16860              	.LASF66:
 16861 058e 5F636F6F 		.ascii	"_cookie\000"
 16861      6B696500 
 16862              	.LASF39:
 16863 0596 5F776473 		.ascii	"_wds\000"
 16863      00
 16864              	.LASF315:
 16865 059b 72617465 		.ascii	"rate\000"
 16865      00
 16866              	.LASF183:
 16867 05a0 6669666F 		.ascii	"fifo_sensors\000"
 16867      5F73656E 
 16867      736F7273 
 16867      00
 16868              	.LASF98:
 16869 05ad 5F736967 		.ascii	"_sig_func\000"
 16869      5F66756E 
 16869      6300
 16870              	.LASF185:
 16871 05b7 63686970 		.ascii	"chip_cfg_s\000"
 16871      5F636667 
 16871      5F7300
 16872              	.LASF74:
 16873 05c2 5F6F6666 		.ascii	"_offset\000"
 16873      73657400 
 16874              	.LASF95:
 16875 05ca 5F637674 		.ascii	"_cvtbuf\000"
 16875      62756600 
 16876              	.LASF261:
 16877 05d2 6D70755F 		.ascii	"mpu_load_firmware\000"
 16877      6C6F6164 
 16877      5F666972 
 16877      6D776172 
 16877      6500
 16878              	.LASF249:
 16879 05e4 74687265 		.ascii	"thresh\000"
 16879      736800
 16880              	.LASF179:
 16881 05eb 6779726F 		.ascii	"gyro_fsr\000"
 16881      5F667372 
 16881      00
 16882              	.LASF235:
 16883 05f4 494E565F 		.ascii	"INV_FSR_4G\000"
 16883      4653525F 
 16883      344700
ARM GAS  /tmp/cc18izUm.s 			page 366


 16884              	.LASF331:
 16885 05ff 6D70755F 		.ascii	"mpu_get_accel_reg\000"
 16885      6765745F 
 16885      61636365 
 16885      6C5F7265 
 16885      6700
 16886              	.LASF258:
 16887 0611 656E6162 		.ascii	"enabled\000"
 16887      6C656400 
 16888              	.LASF196:
 16889 0619 646D705F 		.ascii	"dmp_loaded\000"
 16889      6C6F6164 
 16889      656400
 16890              	.LASF141:
 16891 0624 5F5F6664 		.ascii	"__fdlib_version\000"
 16891      6C69625F 
 16891      76657273 
 16891      696F6E00 
 16892              	.LASF147:
 16893 0634 70726F64 		.ascii	"prod_id\000"
 16893      5F696400 
 16894              	.LASF92:
 16895 063c 5F703573 		.ascii	"_p5s\000"
 16895      00
 16896              	.LASF8:
 16897 0641 6C6F6E67 		.ascii	"long unsigned int\000"
 16897      20756E73 
 16897      69676E65 
 16897      6420696E 
 16897      7400
 16898              	.LASF293:
 16899 0653 73686966 		.ascii	"shift_code\000"
 16899      745F636F 
 16899      646500
 16900              	.LASF218:
 16901 065e 494E565F 		.ascii	"INV_FILTER_256HZ_NOLPF2\000"
 16901      46494C54 
 16901      45525F32 
 16901      3536485A 
 16901      5F4E4F4C 
 16902              	.LASF62:
 16903 0676 5F5F7346 		.ascii	"__sFILE\000"
 16903      494C4500 
 16904              	.LASF88:
 16905 067e 5F5F7364 		.ascii	"__sdidinit\000"
 16905      6964696E 
 16905      697400
 16906              	.LASF78:
 16907 0689 5F666C61 		.ascii	"_flags2\000"
 16907      67733200 
 16908              	.LASF16:
 16909 0691 53797374 		.ascii	"SystemCoreClock\000"
 16909      656D436F 
 16909      7265436C 
 16909      6F636B00 
 16910              	.LASF222:
 16911 06a1 494E565F 		.ascii	"INV_FILTER_20HZ\000"
ARM GAS  /tmp/cc18izUm.s 			page 367


 16911      46494C54 
 16911      45525F32 
 16911      30485A00 
 16912              	.LASF279:
 16913 06b1 68775F74 		.ascii	"hw_test\000"
 16913      65737400 
 16914              	.LASF166:
 16915 06b9 61636365 		.ascii	"accel_offs\000"
 16915      6C5F6F66 
 16915      667300
 16916              	.LASF25:
 16917 06c4 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 16917      4B5F5245 
 16917      43555253 
 16917      4956455F 
 16917      5400
 16918              	.LASF80:
 16919 06d6 5F657272 		.ascii	"_errno\000"
 16919      6E6F00
 16920              	.LASF22:
 16921 06dd 41636331 		.ascii	"Acc1G_Values\000"
 16921      475F5661 
 16921      6C756573 
 16921      00
 16922              	.LASF322:
 16923 06ea 6D70755F 		.ascii	"mpu_get_accel_fsr\000"
 16923      6765745F 
 16923      61636365 
 16923      6C5F6673 
 16923      7200
 16924              	.LASF24:
 16925 06fc 526F6C6C 		.ascii	"Roll\000"
 16925      00
 16926              	.LASF121:
 16927 0701 5F736967 		.ascii	"_signal_buf\000"
 16927      6E616C5F 
 16927      62756600 
 16928              	.LASF206:
 16929 070d 7061636B 		.ascii	"packet_thresh\000"
 16929      65745F74 
 16929      68726573 
 16929      6800
 16930              	.LASF182:
 16931 071b 73656E73 		.ascii	"sensors_on\000"
 16931      6F72735F 
 16931      6F6E00
 16932              	.LASF189:
 16933 0726 62797061 		.ascii	"bypass_mode\000"
 16933      73735F6D 
 16933      6F646500 
 16934              	.LASF40:
 16935 0732 5F426967 		.ascii	"_Bigint\000"
 16935      696E7400 
 16936              	.LASF37:
 16937 073a 5F6D6178 		.ascii	"_maxwds\000"
 16937      77647300 
 16938              	.LASF154:
ARM GAS  /tmp/cc18izUm.s 			page 368


 16939 0742 6669666F 		.ascii	"fifo_count_h\000"
 16939      5F636F75 
 16939      6E745F68 
 16939      00
 16940              	.LASF89:
 16941 074f 5F5F636C 		.ascii	"__cleanup\000"
 16941      65616E75 
 16941      7000
 16942              	.LASF97:
 16943 0759 5F617465 		.ascii	"_atexit0\000"
 16943      78697430 
 16943      00
 16944              	.LASF224:
 16945 0762 494E565F 		.ascii	"INV_FILTER_5HZ\000"
 16945      46494C54 
 16945      45525F35 
 16945      485A00
 16946              	.LASF138:
 16947 0771 5F5F6664 		.ascii	"__fdlibm_svid\000"
 16947      6C69626D 
 16947      5F737669 
 16947      6400
 16948              	.LASF240:
 16949 077f 494E565F 		.ascii	"INV_CLK_INTERNAL\000"
 16949      434C4B5F 
 16949      494E5445 
 16949      524E414C 
 16949      00
 16950              	.LASF7:
 16951 0790 5F5F7569 		.ascii	"__uint32_t\000"
 16951      6E743332 
 16951      5F7400
 16952              	.LASF85:
 16953 079b 5F656D65 		.ascii	"_emergency\000"
 16953      7267656E 
 16953      637900
 16954              	.LASF312:
 16955 07a6 73656E73 		.ascii	"sens\000"
 16955      00
 16956              	.LASF9:
 16957 07ab 6C6F6E67 		.ascii	"long long int\000"
 16957      206C6F6E 
 16957      6720696E 
 16957      7400
 16958              	.LASF342:
 16959 07b9 4932435F 		.ascii	"I2C_Read\000"
 16959      52656164 
 16959      00
 16960              	.LASF104:
 16961 07c2 5F6E696F 		.ascii	"_niobs\000"
 16961      627300
 16962              	.LASF260:
 16963 07c9 656E6162 		.ascii	"enable\000"
 16963      6C6500
 16964              	.LASF20:
 16965 07d0 47795F6F 		.ascii	"Gy_offset\000"
 16965      66667365 
ARM GAS  /tmp/cc18izUm.s 			page 369


 16965      7400
 16966              	.LASF99:
 16967 07da 5F5F7367 		.ascii	"__sglue\000"
 16967      6C756500 
 16968              	.LASF130:
 16969 07e2 5F6E6D61 		.ascii	"_nmalloc\000"
 16969      6C6C6F63 
 16969      00
 16970              	.LASF200:
 16971 07eb 61636365 		.ascii	"accel_sens\000"
 16971      6C5F7365 
 16971      6E7300
 16972              	.LASF135:
 16973 07f6 646F7562 		.ascii	"double\000"
 16973      6C6500
 16974              	.LASF114:
 16975 07fd 5F67616D 		.ascii	"_gamma_signgam\000"
 16975      6D615F73 
 16975      69676E67 
 16975      616D00
 16976              	.LASF177:
 16977 080c 62616E6B 		.ascii	"bank_size\000"
 16977      5F73697A 
 16977      6500
 16978              	.LASF187:
 16979 0816 636C6B5F 		.ascii	"clk_src\000"
 16979      73726300 
 16980              	.LASF186:
 16981 081e 73656E73 		.ascii	"sensors\000"
 16981      6F727300 
 16982              	.LASF87:
 16983 0826 5F637572 		.ascii	"_current_locale\000"
 16983      72656E74 
 16983      5F6C6F63 
 16983      616C6500 
 16984              	.LASF175:
 16985 0836 74656D70 		.ascii	"temp_sens\000"
 16985      5F73656E 
 16985      7300
 16986              	.LASF93:
 16987 0840 5F667265 		.ascii	"_freelist\000"
 16987      656C6973 
 16987      7400
 16988              	.LASF236:
 16989 084a 494E565F 		.ascii	"INV_FSR_8G\000"
 16989      4653525F 
 16989      384700
 16990              	.LASF105:
 16991 0855 5F696F62 		.ascii	"_iobs\000"
 16991      7300
 16992              	.LASF103:
 16993 085b 5F676C75 		.ascii	"_glue\000"
 16993      6500
 16994              	.LASF319:
 16995 0861 6D70755F 		.ascii	"mpu_set_lpf\000"
 16995      7365745F 
 16995      6C706600 
ARM GAS  /tmp/cc18izUm.s 			page 370


 16996              	.LASF15:
 16997 086d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 16997      52784275 
 16997      66666572 
 16997      00
 16998              	.LASF38:
 16999 087a 5F736967 		.ascii	"_sign\000"
 16999      6E00
 17000              	.LASF226:
 17001 0880 4E554D5F 		.ascii	"NUM_FILTER\000"
 17001      46494C54 
 17001      455200
 17002              	.LASF289:
 17003 088b 73745F73 		.ascii	"st_shift_var\000"
 17003      68696674 
 17003      5F766172 
 17003      00
 17004              	.LASF172:
 17005 0898 61646472 		.ascii	"addr\000"
 17005      00
 17006              	.LASF266:
 17007 089d 6D70755F 		.ascii	"mpu_read_mem\000"
 17007      72656164 
 17007      5F6D656D 
 17007      00
 17008              	.LASF254:
 17009 08aa 6D70755F 		.ascii	"mpu_get_compass_fsr\000"
 17009      6765745F 
 17009      636F6D70 
 17009      6173735F 
 17009      66737200 
 17010              	.LASF11:
 17011 08be 756E7369 		.ascii	"unsigned int\000"
 17011      676E6564 
 17011      20696E74 
 17011      00
 17012              	.LASF335:
 17013 08cb 6D70755F 		.ascii	"mpu_read_reg\000"
 17013      72656164 
 17013      5F726567 
 17013      00
 17014              	.LASF299:
 17015 08d8 6D70755F 		.ascii	"mpu_read_fifo_stream\000"
 17015      72656164 
 17015      5F666966 
 17015      6F5F7374 
 17015      7265616D 
 17016              	.LASF297:
 17017 08ed 6D70755F 		.ascii	"mpu_set_bypass\000"
 17017      7365745F 
 17017      62797061 
 17017      737300
 17018              	.LASF128:
 17019 08fc 5F685F65 		.ascii	"_h_errno\000"
 17019      72726E6F 
 17019      00
 17020              	.LASF146:
ARM GAS  /tmp/cc18izUm.s 			page 371


 17021 0905 72617465 		.ascii	"rate_div\000"
 17021      5F646976 
 17021      00
 17022              	.LASF220:
 17023 090e 494E565F 		.ascii	"INV_FILTER_98HZ\000"
 17023      46494C54 
 17023      45525F39 
 17023      38485A00 
 17024              	.LASF345:
 17025 091e 64726976 		.ascii	"drivers/inv_mpu.c\000"
 17025      6572732F 
 17025      696E765F 
 17025      6D70752E 
 17025      6300
 17026              	.LASF126:
 17027 0930 5F776372 		.ascii	"_wcrtomb_state\000"
 17027      746F6D62 
 17027      5F737461 
 17027      746500
 17028              	.LASF144:
 17029 093f 6779726F 		.ascii	"gyro_reg_s\000"
 17029      5F726567 
 17029      5F7300
 17030              	.LASF45:
 17031 094a 5F5F746D 		.ascii	"__tm_mday\000"
 17031      5F6D6461 
 17031      7900
 17032              	.LASF337:
 17033 0954 6765745F 		.ascii	"get_st_biases\000"
 17033      73745F62 
 17033      69617365 
 17033      7300
 17034              	.LASF96:
 17035 0962 5F6E6577 		.ascii	"_new\000"
 17035      00
 17036              	.LASF71:
 17037 0967 5F756275 		.ascii	"_ubuf\000"
 17037      6600
 17038              	.LASF325:
 17039 096d 6D70755F 		.ascii	"mpu_reset_fifo\000"
 17039      72657365 
 17039      745F6669 
 17039      666F00
 17040              	.LASF83:
 17041 097c 5F737464 		.ascii	"_stderr\000"
 17041      65727200 
 17042              	.LASF119:
 17043 0984 5F776374 		.ascii	"_wctomb_state\000"
 17043      6F6D625F 
 17043      73746174 
 17043      6500
 17044              	.LASF77:
 17045 0992 5F6D6273 		.ascii	"_mbstate\000"
 17045      74617465 
 17045      00
 17046              	.LASF115:
 17047 099b 5F72616E 		.ascii	"_rand_next\000"
ARM GAS  /tmp/cc18izUm.s 			page 372


 17047      645F6E65 
 17047      787400
 17048              	.LASF178:
 17049 09a6 6D6F7469 		.ascii	"motion_int_cache_s\000"
 17049      6F6E5F69 
 17049      6E745F63 
 17049      61636865 
 17049      5F7300
 17050              	.LASF63:
 17051 09b9 5F666C61 		.ascii	"_flags\000"
 17051      677300
 17052              	.LASF56:
 17053 09c0 5F617465 		.ascii	"_atexit\000"
 17053      78697400 
 17054              	.LASF176:
 17055 09c8 74656D70 		.ascii	"temp_offset\000"
 17055      5F6F6666 
 17055      73657400 
 17056              	.LASF320:
 17057 09d4 6D70755F 		.ascii	"mpu_get_lpf\000"
 17057      6765745F 
 17057      6C706600 
 17058              	.LASF267:
 17059 09e0 6D656D5F 		.ascii	"mem_addr\000"
 17059      61646472 
 17059      00
 17060              	.LASF31:
 17061 09e9 5F5F636F 		.ascii	"__count\000"
 17061      756E7400 
 17062              	.LASF207:
 17063 09f1 6D696E5F 		.ascii	"min_dps\000"
 17063      64707300 
 17064              	.LASF246:
 17065 09f9 494E565F 		.ascii	"INV_LPA_20HZ\000"
 17065      4C50415F 
 17065      3230485A 
 17065      00
 17066              	.LASF281:
 17067 0a06 6669666F 		.ascii	"fifo_count\000"
 17067      5F636F75 
 17067      6E7400
 17068              	.LASF48:
 17069 0a11 5F5F746D 		.ascii	"__tm_wday\000"
 17069      5F776461 
 17069      7900
 17070              	.LASF193:
 17071 0a1b 63616368 		.ascii	"cache\000"
 17071      6500
 17072              	.LASF136:
 17073 0a21 6C6F6E67 		.ascii	"long double\000"
 17073      20646F75 
 17073      626C6500 
 17074              	.LASF247:
 17075 0a2d 494E565F 		.ascii	"INV_LPA_40HZ\000"
 17075      4C50415F 
 17075      3430485A 
 17075      00
ARM GAS  /tmp/cc18izUm.s 			page 373


 17076              	.LASF49:
 17077 0a3a 5F5F746D 		.ascii	"__tm_yday\000"
 17077      5F796461 
 17077      7900
 17078              	.LASF107:
 17079 0a44 5F736565 		.ascii	"_seed\000"
 17079      6400
 17080              	.LASF69:
 17081 0a4a 5F736565 		.ascii	"_seek\000"
 17081      6B00
 17082              	.LASF350:
 17083 0a50 5F5F6275 		.ascii	"__builtin_puts\000"
 17083      696C7469 
 17083      6E5F7075 
 17083      747300
 17084              	.LASF27:
 17085 0a5f 5F66706F 		.ascii	"_fpos_t\000"
 17085      735F7400 
 17086              	.LASF30:
 17087 0a67 5F5F7763 		.ascii	"__wchb\000"
 17087      686200
 17088              	.LASF253:
 17089 0a6e 6D70755F 		.ascii	"mpu_lp_motion_interrupt\000"
 17089      6C705F6D 
 17089      6F74696F 
 17089      6E5F696E 
 17089      74657272 
 17090              	.LASF118:
 17091 0a86 5F6D6274 		.ascii	"_mbtowc_state\000"
 17091      6F77635F 
 17091      73746174 
 17091      6500
 17092              	.LASF288:
 17093 0a94 73745F73 		.ascii	"st_shift_cust\000"
 17093      68696674 
 17093      5F637573 
 17093      7400
 17094              	.LASF268:
 17095 0aa2 6D70755F 		.ascii	"mpu_write_mem\000"
 17095      77726974 
 17095      655F6D65 
 17095      6D00
 17096              	.LASF272:
 17097 0ab0 61636365 		.ascii	"accel_st\000"
 17097      6C5F7374 
 17097      00
 17098              	.LASF10:
 17099 0ab9 6C6F6E67 		.ascii	"long long unsigned int\000"
 17099      206C6F6E 
 17099      6720756E 
 17099      7369676E 
 17099      65642069 
 17100              	.LASF313:
 17101 0ad0 6D70755F 		.ascii	"mpu_get_gyro_sens\000"
 17101      6765745F 
 17101      6779726F 
 17101      5F73656E 
ARM GAS  /tmp/cc18izUm.s 			page 374


 17101      7300
 17102              	.LASF307:
 17103 0ae2 6D70755F 		.ascii	"mpu_get_power_state\000"
 17103      6765745F 
 17103      706F7765 
 17103      725F7374 
 17103      61746500 
 17104              	.LASF151:
 17105 0af6 61636365 		.ascii	"accel_cfg\000"
 17105      6C5F6366 
 17105      6700
 17106              	.LASF262:
 17107 0b00 6C656E67 		.ascii	"length\000"
 17107      746800
 17108              	.LASF53:
 17109 0b07 5F64736F 		.ascii	"_dso_handle\000"
 17109      5F68616E 
 17109      646C6500 
 17110              	.LASF106:
 17111 0b13 5F72616E 		.ascii	"_rand48\000"
 17111      64343800 
 17112              	.LASF82:
 17113 0b1b 5F737464 		.ascii	"_stdout\000"
 17113      6F757400 
 17114              	.LASF216:
 17115 0b23 5F5F6664 		.ascii	"__fdlibm_version\000"
 17115      6C69626D 
 17115      5F766572 
 17115      73696F6E 
 17115      00
 17116              	.LASF302:
 17117 0b34 7061636B 		.ascii	"packet_size\000"
 17117      65745F73 
 17117      697A6500 
 17118              	.LASF155:
 17119 0b40 6669666F 		.ascii	"fifo_r_w\000"
 17119      5F725F77 
 17119      00
 17120              	.LASF73:
 17121 0b49 5F626C6B 		.ascii	"_blksize\000"
 17121      73697A65 
 17121      00
 17122              	.LASF296:
 17123 0b52 61637469 		.ascii	"active_low\000"
 17123      76655F6C 
 17123      6F7700
 17124              	.LASF229:
 17125 0b5d 494E565F 		.ascii	"INV_FSR_500DPS\000"
 17125      4653525F 
 17125      35303044 
 17125      505300
 17126              	.LASF60:
 17127 0b6c 5F626173 		.ascii	"_base\000"
 17127      6500
 17128              	.LASF227:
 17129 0b72 6779726F 		.ascii	"gyro_fsr_e\000"
 17129      5F667372 
ARM GAS  /tmp/cc18izUm.s 			page 375


 17129      5F6500
 17130              	.LASF191:
 17131 0b7d 6C705F61 		.ascii	"lp_accel_mode\000"
 17131      6363656C 
 17131      5F6D6F64 
 17131      6500
 17132              	.LASF111:
 17133 0b8b 5F737472 		.ascii	"_strtok_last\000"
 17133      746F6B5F 
 17133      6C617374 
 17133      00
 17134              	.LASF180:
 17135 0b98 61636365 		.ascii	"accel_fsr\000"
 17135      6C5F6673 
 17135      7200
 17136              	.LASF198:
 17137 0ba2 74657374 		.ascii	"test_s\000"
 17137      5F7300
 17138              	.LASF124:
 17139 0ba9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 17139      746F7763 
 17139      5F737461 
 17139      746500
 17140              	.LASF204:
 17141 0bb8 7265675F 		.ascii	"reg_accel_fsr\000"
 17141      61636365 
 17141      6C5F6673 
 17141      7200
 17142              	.LASF277:
 17143 0bc6 6C705F69 		.ascii	"lp_int_restore\000"
 17143      6E745F72 
 17143      6573746F 
 17143      726500
 17144              	.LASF34:
 17145 0bd5 5F666C6F 		.ascii	"_flock_t\000"
 17145      636B5F74 
 17145      00
 17146              	.LASF102:
 17147 0bde 5F5F4649 		.ascii	"__FILE\000"
 17147      4C4500
 17148              	.LASF33:
 17149 0be5 5F6D6273 		.ascii	"_mbstate_t\000"
 17149      74617465 
 17149      5F7400
 17150              	.LASF171:
 17151 0bf0 68775F73 		.ascii	"hw_s\000"
 17151      00
 17152              	.LASF219:
 17153 0bf5 494E565F 		.ascii	"INV_FILTER_188HZ\000"
 17153      46494C54 
 17153      45525F31 
 17153      3838485A 
 17153      00
 17154              	.LASF116:
 17155 0c06 5F723438 		.ascii	"_r48\000"
 17155      00
 17156              	.LASF321:
ARM GAS  /tmp/cc18izUm.s 			page 376


 17157 0c0b 6D70755F 		.ascii	"mpu_set_accel_fsr\000"
 17157      7365745F 
 17157      61636365 
 17157      6C5F6673 
 17157      7200
 17158              	.LASF28:
 17159 0c1d 77696E74 		.ascii	"wint_t\000"
 17159      5F7400
 17160              	.LASF36:
 17161 0c24 5F6E6578 		.ascii	"_next\000"
 17161      7400
 17162              	.LASF209:
 17163 0c2a 6D61785F 		.ascii	"max_gyro_var\000"
 17163      6779726F 
 17163      5F766172 
 17163      00
 17164              	.LASF75:
 17165 0c37 5F646174 		.ascii	"_data\000"
 17165      6100
 17166              	.LASF287:
 17167 0c3d 73745F73 		.ascii	"st_shift\000"
 17167      68696674 
 17167      00
 17168              	.LASF341:
 17169 0c46 6D656D63 		.ascii	"memcmp\000"
 17169      6D7000
 17170              	.LASF201:
 17171 0c4d 7265675F 		.ascii	"reg_rate_div\000"
 17171      72617465 
 17171      5F646976 
 17171      00
 17172              	.LASF202:
 17173 0c5a 7265675F 		.ascii	"reg_lpf\000"
 17173      6C706600 
 17174              	.LASF290:
 17175 0c62 6779726F 		.ascii	"gyro_self_test\000"
 17175      5F73656C 
 17175      665F7465 
 17175      737400
 17176              	.LASF295:
 17177 0c71 6D70755F 		.ascii	"mpu_set_int_level\000"
 17177      7365745F 
 17177      696E745F 
 17177      6C657665 
 17177      6C00
 17178              	.LASF241:
 17179 0c83 494E565F 		.ascii	"INV_CLK_PLL\000"
 17179      434C4B5F 
 17179      504C4C00 
 17180              	.LASF184:
 17181 0c8f 646D705F 		.ascii	"dmp_on\000"
 17181      6F6E00
 17182              	.LASF140:
 17183 0c96 5F5F6664 		.ascii	"__fdlibm_posix\000"
 17183      6C69626D 
 17183      5F706F73 
 17183      697800
ARM GAS  /tmp/cc18izUm.s 			page 377


 17184              	.LASF197:
 17185 0ca5 646D705F 		.ascii	"dmp_sample_rate\000"
 17185      73616D70 
 17185      6C655F72 
 17185      61746500 
 17186              	.LASF117:
 17187 0cb5 5F6D626C 		.ascii	"_mblen_state\000"
 17187      656E5F73 
 17187      74617465 
 17187      00
 17188              	.LASF3:
 17189 0cc2 73686F72 		.ascii	"short int\000"
 17189      7420696E 
 17189      7400
 17190              	.LASF269:
 17191 0ccc 6D70755F 		.ascii	"mpu_run_self_test\000"
 17191      72756E5F 
 17191      73656C66 
 17191      5F746573 
 17191      7400
 17192              	.LASF139:
 17193 0cde 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 17193      6C69626D 
 17193      5F786F70 
 17193      656E00
 17194              	.LASF212:
 17195 0ced 6D61785F 		.ascii	"max_accel_var\000"
 17195      61636365 
 17195      6C5F7661 
 17195      7200
 17196              	.LASF205:
 17197 0cfb 77616974 		.ascii	"wait_ms\000"
 17197      5F6D7300 
 17198              	.LASF329:
 17199 0d03 676F745F 		.ascii	"got_accel\000"
 17199      61636365 
 17199      6C00
 17200              	.LASF280:
 17201 0d0d 7061636B 		.ascii	"packet_count\000"
 17201      65745F63 
 17201      6F756E74 
 17201      00
 17202              	.LASF311:
 17203 0d1a 6D70755F 		.ascii	"mpu_get_accel_sens\000"
 17203      6765745F 
 17203      61636365 
 17203      6C5F7365 
 17203      6E7300
 17204              	.LASF134:
 17205 0d2d 7375626F 		.ascii	"suboptarg\000"
 17205      70746172 
 17205      6700
 17206              	.LASF54:
 17207 0d37 5F666E74 		.ascii	"_fntypes\000"
 17207      79706573 
 17207      00
 17208              	.LASF303:
ARM GAS  /tmp/cc18izUm.s 			page 378


 17209 0d40 696E6465 		.ascii	"index\000"
 17209      7800
 17210              	.LASF221:
 17211 0d46 494E565F 		.ascii	"INV_FILTER_42HZ\000"
 17211      46494C54 
 17211      45525F34 
 17211      32485A00 
 17212              	.LASF142:
 17213 0d56 5F737973 		.ascii	"_sys_errlist\000"
 17213      5F657272 
 17213      6C697374 
 17213      00
 17214              	.LASF47:
 17215 0d63 5F5F746D 		.ascii	"__tm_year\000"
 17215      5F796561 
 17215      7200
 17216              	.LASF244:
 17217 0d6d 494E565F 		.ascii	"INV_LPA_1_25HZ\000"
 17217      4C50415F 
 17217      315F3235 
 17217      485A00
 17218              	.LASF195:
 17219 0d7c 6C617463 		.ascii	"latched_int\000"
 17219      6865645F 
 17219      696E7400 
 17220              	.LASF164:
 17221 0d88 696E745F 		.ascii	"int_pin_cfg\000"
 17221      70696E5F 
 17221      63666700 
 17222              	.LASF157:
 17223 0d94 7261775F 		.ascii	"raw_accel\000"
 17223      61636365 
 17223      6C00
 17224              	.LASF181:
 17225 0d9e 73616D70 		.ascii	"sample_rate\000"
 17225      6C655F72 
 17225      61746500 
 17226              	.LASF65:
 17227 0daa 5F6C6266 		.ascii	"_lbfsize\000"
 17227      73697A65 
 17227      00
 17228              	.LASF18:
 17229 0db3 61636365 		.ascii	"accel\000"
 17229      6C00
 17230              	.LASF84:
 17231 0db9 5F696E63 		.ascii	"_inc\000"
 17231      00
 17232              	.LASF57:
 17233 0dbe 5F696E64 		.ascii	"_ind\000"
 17233      00
 17234              	.LASF19:
 17235 0dc3 47785F6F 		.ascii	"Gx_offset\000"
 17235      66667365 
 17235      7400
 17236              	.LASF137:
 17237 0dcd 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 17237      6C69626D 
ARM GAS  /tmp/cc18izUm.s 			page 379


 17237      5F696565 
 17237      6500
 17238              	.LASF59:
 17239 0ddb 5F5F7362 		.ascii	"__sbuf\000"
 17239      756600
 17240              	.LASF55:
 17241 0de2 5F69735F 		.ascii	"_is_cxa\000"
 17241      63786100 
 17242              	.LASF129:
 17243 0dea 5F6E6578 		.ascii	"_nextf\000"
 17243      746600
 17244              	.LASF294:
 17245 0df1 6D70755F 		.ascii	"mpu_set_int_latched\000"
 17245      7365745F 
 17245      696E745F 
 17245      6C617463 
 17245      68656400 
 17246              	.LASF225:
 17247 0e05 494E565F 		.ascii	"INV_FILTER_2100HZ_NOLPF\000"
 17247      46494C54 
 17247      45525F32 
 17247      31303048 
 17247      5A5F4E4F 
 17248              	.LASF23:
 17249 0e1d 50697463 		.ascii	"Pitch\000"
 17249      6800
 17250              	.LASF35:
 17251 0e23 5F5F554C 		.ascii	"__ULong\000"
 17251      6F6E6700 
 17252              	.LASF13:
 17253 0e2b 75696E74 		.ascii	"uint32_t\000"
 17253      33325F74 
 17253      00
 17254              	.LASF149:
 17255 0e34 6669666F 		.ascii	"fifo_en\000"
 17255      5F656E00 
 17256              	.LASF239:
 17257 0e3c 636C6F63 		.ascii	"clock_sel_e\000"
 17257      6B5F7365 
 17257      6C5F6500 
 17258              	.LASF90:
 17259 0e48 5F726573 		.ascii	"_result\000"
 17259      756C7400 
 17260              	.LASF228:
 17261 0e50 494E565F 		.ascii	"INV_FSR_250DPS\000"
 17261      4653525F 
 17261      32353044 
 17261      505300
 17262              	.LASF152:
 17263 0e5f 6D6F7469 		.ascii	"motion_thr\000"
 17263      6F6E5F74 
 17263      687200
 17264              	.LASF156:
 17265 0e6a 7261775F 		.ascii	"raw_gyro\000"
 17265      6779726F 
 17265      00
 17266              	.LASF330:
ARM GAS  /tmp/cc18izUm.s 			page 380


 17267 0e73 6D70755F 		.ascii	"mpu_get_temperature\000"
 17267      6765745F 
 17267      74656D70 
 17267      65726174 
 17267      75726500 
 17268              	.LASF26:
 17269 0e87 5F6F6666 		.ascii	"_off_t\000"
 17269      5F7400
 17270              	.LASF203:
 17271 0e8e 7265675F 		.ascii	"reg_gyro_fsr\000"
 17271      6779726F 
 17271      5F667372 
 17271      00
 17272              	.LASF223:
 17273 0e9b 494E565F 		.ascii	"INV_FILTER_10HZ\000"
 17273      46494C54 
 17273      45525F31 
 17273      30485A00 
 17274              	.LASF324:
 17275 0eab 6D70755F 		.ascii	"mpu_get_gyro_fsr\000"
 17275      6765745F 
 17275      6779726F 
 17275      5F667372 
 17275      00
 17276              	.LASF292:
 17277 0ebc 6765745F 		.ascii	"get_accel_prod_shift\000"
 17277      61636365 
 17277      6C5F7072 
 17277      6F645F73 
 17277      68696674 
 17278              	.LASF338:
 17279 0ed1 7365745F 		.ascii	"set_int_enable\000"
 17279      696E745F 
 17279      656E6162 
 17279      6C6500
 17280              	.LASF109:
 17281 0ee0 5F616464 		.ascii	"_add\000"
 17281      00
 17282              	.LASF0:
 17283 0ee5 666C6F61 		.ascii	"float\000"
 17283      7400
 17284              	.LASF44:
 17285 0eeb 5F5F746D 		.ascii	"__tm_hour\000"
 17285      5F686F75 
 17285      7200
 17286              	.LASF165:
 17287 0ef5 6D656D5F 		.ascii	"mem_r_w\000"
 17287      725F7700 
 17288              	.LASF317:
 17289 0efd 6D70755F 		.ascii	"mpu_set_sample_rate\000"
 17289      7365745F 
 17289      73616D70 
 17289      6C655F72 
 17289      61746500 
 17290              	.LASF125:
 17291 0f11 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 17291      72746F77 
ARM GAS  /tmp/cc18izUm.s 			page 381


 17291      63735F73 
 17291      74617465 
 17291      00
 17292              	.LASF248:
 17293 0f22 74696D65 		.ascii	"time\000"
 17293      00
 17294              	.LASF6:
 17295 0f27 5F5F696E 		.ascii	"__int32_t\000"
 17295      7433325F 
 17295      7400
 17296              	.LASF308:
 17297 0f31 706F7765 		.ascii	"power_on\000"
 17297      725F6F6E 
 17297      00
 17298              	.LASF170:
 17299 0f3a 7072676D 		.ascii	"prgm_start_h\000"
 17299      5F737461 
 17299      72745F68 
 17299      00
 17300              	.LASF310:
 17301 0f47 70726576 		.ascii	"prev\000"
 17301      00
 17302              	.LASF284:
 17303 0f4c 62696173 		.ascii	"bias_regular\000"
 17303      5F726567 
 17303      756C6172 
 17303      00
 17304              	.LASF285:
 17305 0f59 62696173 		.ascii	"bias_st\000"
 17305      5F737400 
 17306              	.LASF158:
 17307 0f61 74656D70 		.ascii	"temp\000"
 17307      00
 17308              	.LASF174:
 17309 0f66 6E756D5F 		.ascii	"num_reg\000"
 17309      72656700 
 17310              	.LASF52:
 17311 0f6e 5F666E61 		.ascii	"_fnargs\000"
 17311      72677300 
 17312              	.LASF50:
 17313 0f76 5F5F746D 		.ascii	"__tm_isdst\000"
 17313      5F697364 
 17313      737400
 17314              	.LASF214:
 17315 0f81 63686970 		.ascii	"chip_cfg\000"
 17315      5F636667 
 17315      00
 17316              	.LASF251:
 17317 0f8a 64617461 		.ascii	"data\000"
 17317      00
 17318              	.LASF169:
 17319 0f8f 6D656D5F 		.ascii	"mem_start_addr\000"
 17319      73746172 
 17319      745F6164 
 17319      647200
 17320              	.LASF199:
 17321 0f9e 6779726F 		.ascii	"gyro_sens\000"
ARM GAS  /tmp/cc18izUm.s 			page 382


 17321      5F73656E 
 17321      7300
 17322              	.LASF43:
 17323 0fa8 5F5F746D 		.ascii	"__tm_min\000"
 17323      5F6D696E 
 17323      00
 17324              	.LASF122:
 17325 0fb1 5F676574 		.ascii	"_getdate_err\000"
 17325      64617465 
 17325      5F657272 
 17325      00
 17326              	.LASF309:
 17327 0fbe 6D70755F 		.ascii	"mpu_configure_fifo\000"
 17327      636F6E66 
 17327      69677572 
 17327      655F6669 
 17327      666F00
 17328              	.LASF333:
 17329 0fd1 6D70755F 		.ascii	"mpu_lp_accel_mode\000"
 17329      6C705F61 
 17329      6363656C 
 17329      5F6D6F64 
 17329      6500
 17330              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/cc18izUm.s 			page 383


DEFINED SYMBOLS
                            *ABS*:0000000000000000 inv_mpu.c
     /tmp/cc18izUm.s:15     .text:0000000000000000 $t
     /tmp/cc18izUm.s:21     .text:0000000000000000 set_int_enable
     /tmp/cc18izUm.s:136    .text:0000000000000094 $d
     /tmp/cc18izUm.s:141    .text:0000000000000098 $t
     /tmp/cc18izUm.s:147    .text:0000000000000098 get_st_biases
     /tmp/cc18izUm.s:351    .text:0000000000000204 $d
     /tmp/cc18izUm.s:354    .text:0000000000000208 $t
     /tmp/cc18izUm.s:778    .text:0000000000000500 $d
     /tmp/cc18izUm.s:784    .text:0000000000000508 $t
     /tmp/cc18izUm.s:791    .text:0000000000000508 mpu_reg_dump
     /tmp/cc18izUm.s:875    .text:0000000000000558 $d
     /tmp/cc18izUm.s:879    .text:000000000000055c $t
     /tmp/cc18izUm.s:886    .text:000000000000055c mpu_read_reg
     /tmp/cc18izUm.s:951    .text:0000000000000598 $d
     /tmp/cc18izUm.s:955    .text:000000000000059c $t
     /tmp/cc18izUm.s:962    .text:000000000000059c mpu_get_gyro_reg
     /tmp/cc18izUm.s:1036   .text:00000000000005fc $d
     /tmp/cc18izUm.s:1040   .text:0000000000000600 $t
     /tmp/cc18izUm.s:1047   .text:0000000000000600 mpu_get_accel_reg
     /tmp/cc18izUm.s:1121   .text:0000000000000660 $d
     /tmp/cc18izUm.s:1131   .text:0000000000000664 $t
     /tmp/cc18izUm.s:1138   .text:0000000000000664 mpu_get_temperature
     /tmp/cc18izUm.s:1242   .text:00000000000006e4 $d
     /tmp/cc18izUm.s:1247   .text:00000000000006ec $t
     /tmp/cc18izUm.s:1254   .text:00000000000006ec mpu_set_accel_bias
     /tmp/cc18izUm.s:1446   .text:00000000000007f4 $d
     /tmp/cc18izUm.s:1450   .text:00000000000007f8 $t
     /tmp/cc18izUm.s:1457   .text:00000000000007f8 mpu_reset_fifo
     /tmp/cc18izUm.s:1739   .text:00000000000009d8 $d
     /tmp/cc18izUm.s:1743   .text:00000000000009dc $t
     /tmp/cc18izUm.s:1750   .text:00000000000009dc mpu_get_gyro_fsr
     /tmp/cc18izUm.s:1765   .text:00000000000009e8 $d
     /tmp/cc18izUm.s:1769   .text:00000000000009ec $t
     /tmp/cc18izUm.s:1807   .text:0000000000000a14 $d
     /tmp/cc18izUm.s:1811   .text:0000000000000a18 $t
     /tmp/cc18izUm.s:1818   .text:0000000000000a18 mpu_set_gyro_fsr
     /tmp/cc18izUm.s:1929   .text:0000000000000aa4 $d
     /tmp/cc18izUm.s:1933   .text:0000000000000aa8 $t
     /tmp/cc18izUm.s:1940   .text:0000000000000aa8 mpu_get_accel_fsr
     /tmp/cc18izUm.s:1955   .text:0000000000000ab4 $d
     /tmp/cc18izUm.s:1959   .text:0000000000000ab8 $t
     /tmp/cc18izUm.s:2011   .text:0000000000000ae8 $d
     /tmp/cc18izUm.s:2015   .text:0000000000000aec $t
     /tmp/cc18izUm.s:2022   .text:0000000000000aec mpu_set_accel_fsr
     /tmp/cc18izUm.s:2047   .text:0000000000000b02 $d
     /tmp/cc18izUm.s:2141   .text:0000000000000b7c $d
     /tmp/cc18izUm.s:2145   .text:0000000000000b80 $t
     /tmp/cc18izUm.s:2152   .text:0000000000000b80 mpu_get_lpf
     /tmp/cc18izUm.s:2168   .text:0000000000000b8e $d
     /tmp/cc18izUm.s:2174   .text:0000000000000b94 $t
     /tmp/cc18izUm.s:2224   .text:0000000000000bc0 $d
     /tmp/cc18izUm.s:2228   .text:0000000000000bc4 $t
     /tmp/cc18izUm.s:2235   .text:0000000000000bc4 mpu_set_lpf
     /tmp/cc18izUm.s:2347   .text:0000000000000c4c $d
     /tmp/cc18izUm.s:2351   .text:0000000000000c50 $t
ARM GAS  /tmp/cc18izUm.s 			page 384


     /tmp/cc18izUm.s:2358   .text:0000000000000c50 mpu_get_sample_rate
     /tmp/cc18izUm.s:2388   .text:0000000000000c68 $d
     /tmp/cc18izUm.s:2392   .text:0000000000000c6c $t
     /tmp/cc18izUm.s:2399   .text:0000000000000c6c mpu_get_compass_sample_rate
     /tmp/cc18izUm.s:2424   .text:0000000000000c76 mpu_set_compass_sample_rate
     /tmp/cc18izUm.s:2446   .text:0000000000000c7c mpu_get_gyro_sens
     /tmp/cc18izUm.s:2461   .text:0000000000000c88 $d
     /tmp/cc18izUm.s:2465   .text:0000000000000c8c $t
     /tmp/cc18izUm.s:2515   .text:0000000000000cb4 $d
     /tmp/cc18izUm.s:2523   .text:0000000000000cc8 $t
     /tmp/cc18izUm.s:2530   .text:0000000000000cc8 mpu_get_accel_sens
     /tmp/cc18izUm.s:2545   .text:0000000000000cd4 $d
     /tmp/cc18izUm.s:2549   .text:0000000000000cd8 $t
     /tmp/cc18izUm.s:2601   .text:0000000000000d10 $d
     /tmp/cc18izUm.s:2605   .text:0000000000000d14 $t
     /tmp/cc18izUm.s:2612   .text:0000000000000d14 mpu_get_fifo_config
     /tmp/cc18izUm.s:2631   .text:0000000000000d20 $d
     /tmp/cc18izUm.s:2635   .text:0000000000000d24 $t
     /tmp/cc18izUm.s:2642   .text:0000000000000d24 mpu_configure_fifo
     /tmp/cc18izUm.s:2728   .text:0000000000000d80 $d
     /tmp/cc18izUm.s:2732   .text:0000000000000d84 $t
     /tmp/cc18izUm.s:2739   .text:0000000000000d84 mpu_get_power_state
     /tmp/cc18izUm.s:2768   .text:0000000000000d98 $d
     /tmp/cc18izUm.s:2772   .text:0000000000000d9c $t
     /tmp/cc18izUm.s:2779   .text:0000000000000d9c mpu_get_int_status
     /tmp/cc18izUm.s:2841   .text:0000000000000ddc $d
     /tmp/cc18izUm.s:2845   .text:0000000000000de0 $t
     /tmp/cc18izUm.s:2852   .text:0000000000000de0 mpu_read_fifo
     /tmp/cc18izUm.s:3188   .text:0000000000000fd0 $d
     /tmp/cc18izUm.s:3192   .text:0000000000000fd4 $t
     /tmp/cc18izUm.s:3199   .text:0000000000000fd4 mpu_read_fifo_stream
     /tmp/cc18izUm.s:3341   .text:0000000000001090 $d
     /tmp/cc18izUm.s:3345   .text:0000000000001094 $t
     /tmp/cc18izUm.s:3352   .text:0000000000001094 mpu_set_bypass
     /tmp/cc18izUm.s:3566   .text:00000000000011ec $d
     /tmp/cc18izUm.s:3570   .text:00000000000011f0 $t
     /tmp/cc18izUm.s:3577   .text:00000000000011f0 mpu_set_int_level
     /tmp/cc18izUm.s:3595   .text:00000000000011fc $d
     /tmp/cc18izUm.s:3599   .text:0000000000001200 $t
     /tmp/cc18izUm.s:3606   .text:0000000000001200 mpu_set_int_latched
     /tmp/cc18izUm.s:3697   .text:0000000000001270 $d
     /tmp/cc18izUm.s:3701   .text:0000000000001274 $t
     /tmp/cc18izUm.s:3708   .text:0000000000001274 mpu_lp_accel_mode
     /tmp/cc18izUm.s:3872   .text:000000000000134c $d
     /tmp/cc18izUm.s:3876   .text:0000000000001350 $t
     /tmp/cc18izUm.s:3883   .text:0000000000001350 mpu_set_sample_rate
     /tmp/cc18izUm.s:4004   .text:00000000000013e8 $d
     /tmp/cc18izUm.s:4008   .text:00000000000013ec $t
     /tmp/cc18izUm.s:4015   .text:00000000000013ec mpu_set_sensors
     /tmp/cc18izUm.s:4177   .text:00000000000014ec $d
     /tmp/cc18izUm.s:4181   .text:00000000000014f0 $t
     /tmp/cc18izUm.s:4188   .text:00000000000014f0 mpu_init
     /tmp/cc18izUm.s:4469   .text:0000000000001698 $d
     /tmp/cc18izUm.s:4476   .text:00000000000016a8 $t
     /tmp/cc18izUm.s:4483   .text:00000000000016a8 mpu_write_mem
     /tmp/cc18izUm.s:4588   .text:000000000000171c $d
     /tmp/cc18izUm.s:4592   .text:0000000000001720 $t
ARM GAS  /tmp/cc18izUm.s 			page 385


     /tmp/cc18izUm.s:4599   .text:0000000000001720 mpu_read_mem
     /tmp/cc18izUm.s:4703   .text:0000000000001790 $d
     /tmp/cc18izUm.s:4707   .text:0000000000001794 $t
     /tmp/cc18izUm.s:4714   .text:0000000000001794 mpu_load_firmware
     /tmp/cc18izUm.s:4855   .text:0000000000001844 $d
     /tmp/cc18izUm.s:4859   .text:0000000000001848 $t
     /tmp/cc18izUm.s:4866   .text:0000000000001848 mpu_set_dmp_state
     /tmp/cc18izUm.s:4988   .text:00000000000018d4 $d
     /tmp/cc18izUm.s:4995   .text:00000000000018d8 $t
     /tmp/cc18izUm.s:5002   .text:00000000000018d8 mpu_run_self_test
     /tmp/cc18izUm.s:5503   .text:0000000000001bd0 $d
     /tmp/cc18izUm.s:5520   .text:0000000000001bf8 $t
     /tmp/cc18izUm.s:5554   .text:0000000000001c28 $d
     /tmp/cc18izUm.s:5560   .text:0000000000001c2c $t
     /tmp/cc18izUm.s:5567   .text:0000000000001c2c mpu_get_dmp_state
     /tmp/cc18izUm.s:5586   .text:0000000000001c38 $d
     /tmp/cc18izUm.s:5590   .text:0000000000001c3c $t
     /tmp/cc18izUm.s:5597   .text:0000000000001c3c mpu_get_compass_reg
     /tmp/cc18izUm.s:5619   .text:0000000000001c42 mpu_get_compass_fsr
     /tmp/cc18izUm.s:5641   .text:0000000000001c48 mpu_lp_motion_interrupt
     /tmp/cc18izUm.s:5991   .text:0000000000001e2c $d
     /tmp/cc18izUm.s:5996   .text:0000000000001e30 $t
     /tmp/cc18izUm.s:6003   .text:0000000000001e30 myget_ms
     /tmp/cc18izUm.s:6022   .rodata:0000000000000000 test
     /tmp/cc18izUm.s:6040   .rodata:0000000000000028 reg
     /tmp/cc18izUm.s:6071   .rodata:0000000000000044 hw
     /tmp/cc18izUm.s:6019   .rodata:0000000000000000 $d
     /tmp/cc18izUm.s:6081   .data:0000000000000000 $d
     /tmp/cc18izUm.s:6085   .data:0000000000000000 st
     /tmp/cc18izUm.s:6092   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
     /tmp/cc18izUm.s:2062   .text:0000000000000b11 $d
     /tmp/cc18izUm.s:2062   .text:0000000000000b12 $t

UNDEFINED SYMBOLS
I2C_Write
__aeabi_ldivmod
DelayMs
I2C_Read
__aeabi_i2f
__aeabi_fsub
__aeabi_fdiv
__aeabi_fadd
__aeabi_fmul
__aeabi_f2iz
printf
puts
memcmp
__aeabi_fcmpeq
__aeabi_fcmpgt
__aeabi_fcmplt
