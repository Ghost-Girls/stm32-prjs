ARM GAS  /tmp/ccwsohif.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	RCC_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	RCC_DeInit, %function
  22              	RCC_DeInit:
  23              	.LFB64:
  24              		.file 1 "lib/src/stm32f10x_rcc.c"
   1:lib/src/stm32f10x_rcc.c **** /**
   2:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:lib/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:lib/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:lib/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:lib/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:lib/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:lib/src/stm32f10x_rcc.c ****   * @attention
  10:lib/src/stm32f10x_rcc.c ****   *
  11:lib/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:lib/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:lib/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:lib/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:lib/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:lib/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:lib/src/stm32f10x_rcc.c ****   *
  18:lib/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:lib/src/stm32f10x_rcc.c ****   */
  21:lib/src/stm32f10x_rcc.c **** 
  22:lib/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:lib/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:lib/src/stm32f10x_rcc.c **** #include "conf.h"
  25:lib/src/stm32f10x_rcc.c **** 
  26:lib/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:lib/src/stm32f10x_rcc.c ****   * @{
  28:lib/src/stm32f10x_rcc.c ****   */
  29:lib/src/stm32f10x_rcc.c **** 
  30:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  31:lib/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  32:lib/src/stm32f10x_rcc.c ****   * @{
  33:lib/src/stm32f10x_rcc.c ****   */ 
ARM GAS  /tmp/ccwsohif.s 			page 2


  34:lib/src/stm32f10x_rcc.c **** 
  35:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  36:lib/src/stm32f10x_rcc.c ****   * @{
  37:lib/src/stm32f10x_rcc.c ****   */
  38:lib/src/stm32f10x_rcc.c **** 
  39:lib/src/stm32f10x_rcc.c **** /**
  40:lib/src/stm32f10x_rcc.c ****   * @}
  41:lib/src/stm32f10x_rcc.c ****   */
  42:lib/src/stm32f10x_rcc.c **** 
  43:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  44:lib/src/stm32f10x_rcc.c ****   * @{
  45:lib/src/stm32f10x_rcc.c ****   */
  46:lib/src/stm32f10x_rcc.c **** 
  47:lib/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  48:lib/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  49:lib/src/stm32f10x_rcc.c **** 
  50:lib/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  51:lib/src/stm32f10x_rcc.c **** 
  52:lib/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  53:lib/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  54:lib/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  55:lib/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  56:lib/src/stm32f10x_rcc.c **** 
  57:lib/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  58:lib/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  59:lib/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  60:lib/src/stm32f10x_rcc.c **** 
  61:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  62:lib/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  63:lib/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  64:lib/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  65:lib/src/stm32f10x_rcc.c **** 
  66:lib/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  67:lib/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  68:lib/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  69:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  70:lib/src/stm32f10x_rcc.c **** 
  71:lib/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  72:lib/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  73:lib/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  74:lib/src/stm32f10x_rcc.c **** 
  75:lib/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  76:lib/src/stm32f10x_rcc.c **** 
  77:lib/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  78:lib/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  79:lib/src/stm32f10x_rcc.c **** 
  80:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  81:lib/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  82:lib/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  83:lib/src/stm32f10x_rcc.c **** #else
  84:lib/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  85:lib/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  86:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  87:lib/src/stm32f10x_rcc.c **** 
  88:lib/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  89:lib/src/stm32f10x_rcc.c **** 
  90:lib/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
ARM GAS  /tmp/ccwsohif.s 			page 3


  91:lib/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  92:lib/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  93:lib/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  94:lib/src/stm32f10x_rcc.c **** 
  95:lib/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  96:lib/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  97:lib/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  98:lib/src/stm32f10x_rcc.c **** 
  99:lib/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 100:lib/src/stm32f10x_rcc.c **** 
 101:lib/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 102:lib/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 103:lib/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 104:lib/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 105:lib/src/stm32f10x_rcc.c **** 
 106:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 107:lib/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 108:lib/src/stm32f10x_rcc.c **** 
 109:lib/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 110:lib/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 111:lib/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 112:lib/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 113:lib/src/stm32f10x_rcc.c **** 
 114:lib/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 115:lib/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 116:lib/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 117:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 118:lib/src/stm32f10x_rcc.c **** 
 119:lib/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 120:lib/src/stm32f10x_rcc.c **** 
 121:lib/src/stm32f10x_rcc.c **** /* CR register bit mask */
 122:lib/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 123:lib/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 124:lib/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 125:lib/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 126:lib/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 127:lib/src/stm32f10x_rcc.c **** 
 128:lib/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 129:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 130:lib/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 131:lib/src/stm32f10x_rcc.c **** #else
 132:lib/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 133:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 134:lib/src/stm32f10x_rcc.c **** 
 135:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 136:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 137:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 138:lib/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 139:lib/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 140:lib/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 141:lib/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 142:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 143:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 144:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 145:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 146:lib/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 147:lib/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
ARM GAS  /tmp/ccwsohif.s 			page 4


 148:lib/src/stm32f10x_rcc.c **** 
 149:lib/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 150:lib/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 151:lib/src/stm32f10x_rcc.c **** 
 152:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 153:lib/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 154:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 155:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 156:lib/src/stm32f10x_rcc.c **** #endif
 157:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 158:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 159:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 160:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 161:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 162:lib/src/stm32f10x_rcc.c **** 
 163:lib/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 164:lib/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 165:lib/src/stm32f10x_rcc.c **** 
 166:lib/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 167:lib/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 168:lib/src/stm32f10x_rcc.c **** 
 169:lib/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 170:lib/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 171:lib/src/stm32f10x_rcc.c **** 
 172:lib/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 173:lib/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 174:lib/src/stm32f10x_rcc.c **** 
 175:lib/src/stm32f10x_rcc.c **** /* BDCR register base address */
 176:lib/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 177:lib/src/stm32f10x_rcc.c **** 
 178:lib/src/stm32f10x_rcc.c **** /**
 179:lib/src/stm32f10x_rcc.c ****   * @}
 180:lib/src/stm32f10x_rcc.c ****   */ 
 181:lib/src/stm32f10x_rcc.c **** 
 182:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 183:lib/src/stm32f10x_rcc.c ****   * @{
 184:lib/src/stm32f10x_rcc.c ****   */ 
 185:lib/src/stm32f10x_rcc.c **** 
 186:lib/src/stm32f10x_rcc.c **** /**
 187:lib/src/stm32f10x_rcc.c ****   * @}
 188:lib/src/stm32f10x_rcc.c ****   */ 
 189:lib/src/stm32f10x_rcc.c **** 
 190:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 191:lib/src/stm32f10x_rcc.c ****   * @{
 192:lib/src/stm32f10x_rcc.c ****   */ 
 193:lib/src/stm32f10x_rcc.c **** 
 194:lib/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 195:lib/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 196:lib/src/stm32f10x_rcc.c **** 
 197:lib/src/stm32f10x_rcc.c **** /**
 198:lib/src/stm32f10x_rcc.c ****   * @}
 199:lib/src/stm32f10x_rcc.c ****   */
 200:lib/src/stm32f10x_rcc.c **** 
 201:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 202:lib/src/stm32f10x_rcc.c ****   * @{
 203:lib/src/stm32f10x_rcc.c ****   */
 204:lib/src/stm32f10x_rcc.c **** 
ARM GAS  /tmp/ccwsohif.s 			page 5


 205:lib/src/stm32f10x_rcc.c **** /**
 206:lib/src/stm32f10x_rcc.c ****   * @}
 207:lib/src/stm32f10x_rcc.c ****   */
 208:lib/src/stm32f10x_rcc.c **** 
 209:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 210:lib/src/stm32f10x_rcc.c ****   * @{
 211:lib/src/stm32f10x_rcc.c ****   */
 212:lib/src/stm32f10x_rcc.c **** 
 213:lib/src/stm32f10x_rcc.c **** /**
 214:lib/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 215:lib/src/stm32f10x_rcc.c ****   * @param  None
 216:lib/src/stm32f10x_rcc.c ****   * @retval None
 217:lib/src/stm32f10x_rcc.c ****   */
 218:lib/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 219:lib/src/stm32f10x_rcc.c **** {
  25              		.loc 1 219 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 220:lib/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 221:lib/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  30              		.loc 1 221 0
  31 0000 0D4B     		ldr	r3, .L2
  32 0002 1A68     		ldr	r2, [r3]
  33 0004 42F00102 		orr	r2, r2, #1
  34 0008 1A60     		str	r2, [r3]
 222:lib/src/stm32f10x_rcc.c **** 
 223:lib/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 224:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 225:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  35              		.loc 1 225 0
  36 000a 5968     		ldr	r1, [r3, #4]
  37 000c 0B4A     		ldr	r2, .L2+4
  38 000e 0A40     		ands	r2, r2, r1
  39 0010 5A60     		str	r2, [r3, #4]
 226:lib/src/stm32f10x_rcc.c **** #else
 227:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 228:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 229:lib/src/stm32f10x_rcc.c ****   
 230:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 231:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  40              		.loc 1 231 0
  41 0012 1A68     		ldr	r2, [r3]
  42 0014 22F08472 		bic	r2, r2, #17301504
  43 0018 22F48032 		bic	r2, r2, #65536
  44 001c 1A60     		str	r2, [r3]
 232:lib/src/stm32f10x_rcc.c **** 
 233:lib/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 234:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  45              		.loc 1 234 0
  46 001e 1A68     		ldr	r2, [r3]
  47 0020 22F48022 		bic	r2, r2, #262144
  48 0024 1A60     		str	r2, [r3]
 235:lib/src/stm32f10x_rcc.c **** 
 236:lib/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 237:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
ARM GAS  /tmp/ccwsohif.s 			page 6


  49              		.loc 1 237 0
  50 0026 5A68     		ldr	r2, [r3, #4]
  51 0028 22F4FE02 		bic	r2, r2, #8323072
  52 002c 5A60     		str	r2, [r3, #4]
 238:lib/src/stm32f10x_rcc.c **** 
 239:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 240:lib/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 241:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 242:lib/src/stm32f10x_rcc.c **** 
 243:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 244:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 245:lib/src/stm32f10x_rcc.c **** 
 246:lib/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 247:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 248:lib/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 249:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 250:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 251:lib/src/stm32f10x_rcc.c **** 
 252:lib/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 253:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 254:lib/src/stm32f10x_rcc.c **** #else
 255:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 256:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  53              		.loc 1 256 0
  54 002e 4FF41F02 		mov	r2, #10420224
  55 0032 9A60     		str	r2, [r3, #8]
  56 0034 7047     		bx	lr
  57              	.L3:
  58 0036 00BF     		.align	2
  59              	.L2:
  60 0038 00100240 		.word	1073876992
  61 003c 0000FFF8 		.word	-117506048
  62              		.cfi_endproc
  63              	.LFE64:
  64              		.size	RCC_DeInit, .-RCC_DeInit
  65              		.align	1
  66              		.global	RCC_HSEConfig
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  71              		.type	RCC_HSEConfig, %function
  72              	RCC_HSEConfig:
  73              	.LFB65:
 257:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 258:lib/src/stm32f10x_rcc.c **** 
 259:lib/src/stm32f10x_rcc.c **** }
 260:lib/src/stm32f10x_rcc.c **** 
 261:lib/src/stm32f10x_rcc.c **** /**
 262:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 263:lib/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 264:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 265:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 266:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 267:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 268:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 269:lib/src/stm32f10x_rcc.c ****   * @retval None
ARM GAS  /tmp/ccwsohif.s 			page 7


 270:lib/src/stm32f10x_rcc.c ****   */
 271:lib/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 272:lib/src/stm32f10x_rcc.c **** {
  74              		.loc 1 272 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL0:
 273:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 274:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 275:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 276:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 277:lib/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  80              		.loc 1 277 0
  81 0040 0D4B     		ldr	r3, .L8
  82 0042 1A68     		ldr	r2, [r3]
  83 0044 22F48032 		bic	r2, r2, #65536
  84 0048 1A60     		str	r2, [r3]
 278:lib/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 279:lib/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
  85              		.loc 1 279 0
  86 004a 1A68     		ldr	r2, [r3]
  87 004c 22F48022 		bic	r2, r2, #262144
  88 0050 1A60     		str	r2, [r3]
 280:lib/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 281:lib/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  89              		.loc 1 281 0
  90 0052 B0F5803F 		cmp	r0, #65536
  91 0056 03D0     		beq	.L6
  92 0058 B0F5802F 		cmp	r0, #262144
  93 005c 06D0     		beq	.L7
  94 005e 7047     		bx	lr
  95              	.L6:
 282:lib/src/stm32f10x_rcc.c ****   {
 283:lib/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 284:lib/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 285:lib/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
  96              		.loc 1 285 0
  97 0060 054A     		ldr	r2, .L8
  98 0062 1368     		ldr	r3, [r2]
  99 0064 43F48033 		orr	r3, r3, #65536
 100 0068 1360     		str	r3, [r2]
 286:lib/src/stm32f10x_rcc.c ****       break;
 101              		.loc 1 286 0
 102 006a 7047     		bx	lr
 103              	.L7:
 287:lib/src/stm32f10x_rcc.c ****       
 288:lib/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 289:lib/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 290:lib/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 104              		.loc 1 290 0
 105 006c 024A     		ldr	r2, .L8
 106 006e 1368     		ldr	r3, [r2]
 107 0070 43F4A023 		orr	r3, r3, #327680
 108 0074 1360     		str	r3, [r2]
 109 0076 7047     		bx	lr
ARM GAS  /tmp/ccwsohif.s 			page 8


 110              	.L9:
 111              		.align	2
 112              	.L8:
 113 0078 00100240 		.word	1073876992
 114              		.cfi_endproc
 115              	.LFE65:
 116              		.size	RCC_HSEConfig, .-RCC_HSEConfig
 117              		.align	1
 118              		.global	RCC_AdjustHSICalibrationValue
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 123              		.type	RCC_AdjustHSICalibrationValue, %function
 124              	RCC_AdjustHSICalibrationValue:
 125              	.LFB67:
 291:lib/src/stm32f10x_rcc.c ****       break;
 292:lib/src/stm32f10x_rcc.c ****       
 293:lib/src/stm32f10x_rcc.c ****     default:
 294:lib/src/stm32f10x_rcc.c ****       break;
 295:lib/src/stm32f10x_rcc.c ****   }
 296:lib/src/stm32f10x_rcc.c **** }
 297:lib/src/stm32f10x_rcc.c **** 
 298:lib/src/stm32f10x_rcc.c **** /**
 299:lib/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 300:lib/src/stm32f10x_rcc.c ****   * @param  None
 301:lib/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 302:lib/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 303:lib/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 304:lib/src/stm32f10x_rcc.c ****   */
 305:lib/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 306:lib/src/stm32f10x_rcc.c **** {
 307:lib/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 308:lib/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 309:lib/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 310:lib/src/stm32f10x_rcc.c ****   
 311:lib/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 312:lib/src/stm32f10x_rcc.c ****   do
 313:lib/src/stm32f10x_rcc.c ****   {
 314:lib/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 315:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 316:lib/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 317:lib/src/stm32f10x_rcc.c ****   
 318:lib/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 319:lib/src/stm32f10x_rcc.c ****   {
 320:lib/src/stm32f10x_rcc.c ****     status = SUCCESS;
 321:lib/src/stm32f10x_rcc.c ****   }
 322:lib/src/stm32f10x_rcc.c ****   else
 323:lib/src/stm32f10x_rcc.c ****   {
 324:lib/src/stm32f10x_rcc.c ****     status = ERROR;
 325:lib/src/stm32f10x_rcc.c ****   }  
 326:lib/src/stm32f10x_rcc.c ****   return (status);
 327:lib/src/stm32f10x_rcc.c **** }
 328:lib/src/stm32f10x_rcc.c **** 
 329:lib/src/stm32f10x_rcc.c **** /**
 330:lib/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 331:lib/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
ARM GAS  /tmp/ccwsohif.s 			page 9


 332:lib/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 333:lib/src/stm32f10x_rcc.c ****   * @retval None
 334:lib/src/stm32f10x_rcc.c ****   */
 335:lib/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 336:lib/src/stm32f10x_rcc.c **** {
 126              		.loc 1 336 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL1:
 337:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 338:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 339:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 340:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 132              		.loc 1 340 0
 133 007c 034A     		ldr	r2, .L11
 134 007e 1368     		ldr	r3, [r2]
 135              	.LVL2:
 341:lib/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 342:lib/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 136              		.loc 1 342 0
 137 0080 23F0F803 		bic	r3, r3, #248
 138              	.LVL3:
 343:lib/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 344:lib/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 139              		.loc 1 344 0
 140 0084 43EAC000 		orr	r0, r3, r0, lsl #3
 141              	.LVL4:
 345:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 346:lib/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 142              		.loc 1 346 0
 143 0088 1060     		str	r0, [r2]
 144 008a 7047     		bx	lr
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 008c 00100240 		.word	1073876992
 149              		.cfi_endproc
 150              	.LFE67:
 151              		.size	RCC_AdjustHSICalibrationValue, .-RCC_AdjustHSICalibrationValue
 152              		.align	1
 153              		.global	RCC_HSICmd
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 158              		.type	RCC_HSICmd, %function
 159              	RCC_HSICmd:
 160              	.LFB68:
 347:lib/src/stm32f10x_rcc.c **** }
 348:lib/src/stm32f10x_rcc.c **** 
 349:lib/src/stm32f10x_rcc.c **** /**
 350:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 351:lib/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 352:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 353:lib/src/stm32f10x_rcc.c ****   * @retval None
ARM GAS  /tmp/ccwsohif.s 			page 10


 354:lib/src/stm32f10x_rcc.c ****   */
 355:lib/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 356:lib/src/stm32f10x_rcc.c **** {
 161              		.loc 1 356 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL5:
 357:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 358:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 167              		.loc 1 359 0
 168 0090 014B     		ldr	r3, .L14
 169 0092 1860     		str	r0, [r3]
 170 0094 7047     		bx	lr
 171              	.L15:
 172 0096 00BF     		.align	2
 173              	.L14:
 174 0098 00004242 		.word	1111621632
 175              		.cfi_endproc
 176              	.LFE68:
 177              		.size	RCC_HSICmd, .-RCC_HSICmd
 178              		.align	1
 179              		.global	RCC_PLLConfig
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 184              		.type	RCC_PLLConfig, %function
 185              	RCC_PLLConfig:
 186              	.LFB69:
 360:lib/src/stm32f10x_rcc.c **** }
 361:lib/src/stm32f10x_rcc.c **** 
 362:lib/src/stm32f10x_rcc.c **** /**
 363:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 364:lib/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 365:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 366:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 367:lib/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 368:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 369:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 370:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 371:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 372:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 373:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 374:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 375:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 376:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 377:lib/src/stm32f10x_rcc.c ****   * @retval None
 378:lib/src/stm32f10x_rcc.c ****   */
 379:lib/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 380:lib/src/stm32f10x_rcc.c **** {
 187              		.loc 1 380 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwsohif.s 			page 11


 191              		@ link register save eliminated.
 192              	.LVL6:
 381:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 382:lib/src/stm32f10x_rcc.c **** 
 383:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 384:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 385:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 386:lib/src/stm32f10x_rcc.c **** 
 387:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 193              		.loc 1 387 0
 194 009c 034A     		ldr	r2, .L17
 195 009e 5368     		ldr	r3, [r2, #4]
 196              	.LVL7:
 388:lib/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 389:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 197              		.loc 1 389 0
 198 00a0 23F47C13 		bic	r3, r3, #4128768
 199              	.LVL8:
 200 00a4 1943     		orrs	r1, r1, r3
 201              	.LVL9:
 390:lib/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 391:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 202              		.loc 1 391 0
 203 00a6 0143     		orrs	r1, r1, r0
 204              	.LVL10:
 392:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 393:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 205              		.loc 1 393 0
 206 00a8 5160     		str	r1, [r2, #4]
 207 00aa 7047     		bx	lr
 208              	.L18:
 209              		.align	2
 210              	.L17:
 211 00ac 00100240 		.word	1073876992
 212              		.cfi_endproc
 213              	.LFE69:
 214              		.size	RCC_PLLConfig, .-RCC_PLLConfig
 215              		.align	1
 216              		.global	RCC_PLLCmd
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 221              		.type	RCC_PLLCmd, %function
 222              	RCC_PLLCmd:
 223              	.LFB70:
 394:lib/src/stm32f10x_rcc.c **** }
 395:lib/src/stm32f10x_rcc.c **** 
 396:lib/src/stm32f10x_rcc.c **** /**
 397:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 398:lib/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 399:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 400:lib/src/stm32f10x_rcc.c ****   * @retval None
 401:lib/src/stm32f10x_rcc.c ****   */
 402:lib/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 403:lib/src/stm32f10x_rcc.c **** {
 224              		.loc 1 403 0
ARM GAS  /tmp/ccwsohif.s 			page 12


 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL11:
 404:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 405:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 406:lib/src/stm32f10x_rcc.c **** 
 407:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 230              		.loc 1 407 0
 231 00b0 014B     		ldr	r3, .L20
 232 00b2 1860     		str	r0, [r3]
 233 00b4 7047     		bx	lr
 234              	.L21:
 235 00b6 00BF     		.align	2
 236              	.L20:
 237 00b8 60004242 		.word	1111621728
 238              		.cfi_endproc
 239              	.LFE70:
 240              		.size	RCC_PLLCmd, .-RCC_PLLCmd
 241              		.align	1
 242              		.global	RCC_SYSCLKConfig
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu softvfp
 247              		.type	RCC_SYSCLKConfig, %function
 248              	RCC_SYSCLKConfig:
 249              	.LFB71:
 408:lib/src/stm32f10x_rcc.c **** }
 409:lib/src/stm32f10x_rcc.c **** 
 410:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 411:lib/src/stm32f10x_rcc.c **** /**
 412:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 413:lib/src/stm32f10x_rcc.c ****   * @note 
 414:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 415:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 416:lib/src/stm32f10x_rcc.c ****   *     devices.
 417:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 418:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 419:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 420:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 421:lib/src/stm32f10x_rcc.c ****   * @note 
 422:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 423:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 424:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 425:lib/src/stm32f10x_rcc.c ****   * @retval None
 426:lib/src/stm32f10x_rcc.c ****   */
 427:lib/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 428:lib/src/stm32f10x_rcc.c **** {
 429:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 430:lib/src/stm32f10x_rcc.c ****   
 431:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 432:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 433:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 434:lib/src/stm32f10x_rcc.c **** 
 435:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
ARM GAS  /tmp/ccwsohif.s 			page 13


 436:lib/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 437:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 438:lib/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 439:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 440:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 441:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 442:lib/src/stm32f10x_rcc.c **** }
 443:lib/src/stm32f10x_rcc.c **** #endif
 444:lib/src/stm32f10x_rcc.c **** 
 445:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 446:lib/src/stm32f10x_rcc.c **** /**
 447:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 448:lib/src/stm32f10x_rcc.c ****   * @note 
 449:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 450:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 451:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 452:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 453:lib/src/stm32f10x_rcc.c ****   * @retval None
 454:lib/src/stm32f10x_rcc.c ****   */
 455:lib/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 456:lib/src/stm32f10x_rcc.c **** {
 457:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 458:lib/src/stm32f10x_rcc.c **** 
 459:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 460:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 461:lib/src/stm32f10x_rcc.c **** 
 462:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 463:lib/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 464:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 465:lib/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 466:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 467:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 468:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 469:lib/src/stm32f10x_rcc.c **** }
 470:lib/src/stm32f10x_rcc.c **** 
 471:lib/src/stm32f10x_rcc.c **** /**
 472:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 473:lib/src/stm32f10x_rcc.c ****   * @note
 474:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 475:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 476:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 477:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 478:lib/src/stm32f10x_rcc.c ****   * @retval None
 479:lib/src/stm32f10x_rcc.c ****   */
 480:lib/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 481:lib/src/stm32f10x_rcc.c **** {
 482:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 483:lib/src/stm32f10x_rcc.c **** 
 484:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 485:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 486:lib/src/stm32f10x_rcc.c **** 
 487:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 488:lib/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 489:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 490:lib/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 491:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 492:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
ARM GAS  /tmp/ccwsohif.s 			page 14


 493:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 494:lib/src/stm32f10x_rcc.c **** }
 495:lib/src/stm32f10x_rcc.c **** 
 496:lib/src/stm32f10x_rcc.c **** 
 497:lib/src/stm32f10x_rcc.c **** /**
 498:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 499:lib/src/stm32f10x_rcc.c ****   * @note 
 500:lib/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 501:lib/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 502:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 503:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 504:lib/src/stm32f10x_rcc.c ****   * @retval None
 505:lib/src/stm32f10x_rcc.c ****   */
 506:lib/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 507:lib/src/stm32f10x_rcc.c **** {
 508:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 509:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 510:lib/src/stm32f10x_rcc.c **** 
 511:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 512:lib/src/stm32f10x_rcc.c **** }
 513:lib/src/stm32f10x_rcc.c **** 
 514:lib/src/stm32f10x_rcc.c **** 
 515:lib/src/stm32f10x_rcc.c **** /**
 516:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 517:lib/src/stm32f10x_rcc.c ****   * @note 
 518:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 519:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 520:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 521:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 522:lib/src/stm32f10x_rcc.c ****   * @retval None
 523:lib/src/stm32f10x_rcc.c ****   */
 524:lib/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 525:lib/src/stm32f10x_rcc.c **** {
 526:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 527:lib/src/stm32f10x_rcc.c **** 
 528:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 529:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 530:lib/src/stm32f10x_rcc.c **** 
 531:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 532:lib/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 533:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 534:lib/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 535:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 536:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 537:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 538:lib/src/stm32f10x_rcc.c **** }
 539:lib/src/stm32f10x_rcc.c **** 
 540:lib/src/stm32f10x_rcc.c **** 
 541:lib/src/stm32f10x_rcc.c **** /**
 542:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 543:lib/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 544:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 545:lib/src/stm32f10x_rcc.c ****   * @retval None
 546:lib/src/stm32f10x_rcc.c ****   */
 547:lib/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 548:lib/src/stm32f10x_rcc.c **** {
 549:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccwsohif.s 			page 15


 550:lib/src/stm32f10x_rcc.c **** 
 551:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 552:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 553:lib/src/stm32f10x_rcc.c **** }
 554:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 555:lib/src/stm32f10x_rcc.c **** 
 556:lib/src/stm32f10x_rcc.c **** /**
 557:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 558:lib/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 559:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 560:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 561:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 562:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 563:lib/src/stm32f10x_rcc.c ****   * @retval None
 564:lib/src/stm32f10x_rcc.c ****   */
 565:lib/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 566:lib/src/stm32f10x_rcc.c **** {
 250              		.loc 1 566 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL12:
 567:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 568:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 569:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 570:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 256              		.loc 1 570 0
 257 00bc 034A     		ldr	r2, .L23
 258 00be 5368     		ldr	r3, [r2, #4]
 259              	.LVL13:
 571:lib/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 572:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 260              		.loc 1 572 0
 261 00c0 23F00303 		bic	r3, r3, #3
 262              	.LVL14:
 573:lib/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 574:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 263              		.loc 1 574 0
 264 00c4 1843     		orrs	r0, r0, r3
 265              	.LVL15:
 575:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 576:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 266              		.loc 1 576 0
 267 00c6 5060     		str	r0, [r2, #4]
 268 00c8 7047     		bx	lr
 269              	.L24:
 270 00ca 00BF     		.align	2
 271              	.L23:
 272 00cc 00100240 		.word	1073876992
 273              		.cfi_endproc
 274              	.LFE71:
 275              		.size	RCC_SYSCLKConfig, .-RCC_SYSCLKConfig
 276              		.align	1
 277              		.global	RCC_GetSYSCLKSource
 278              		.syntax unified
 279              		.thumb
ARM GAS  /tmp/ccwsohif.s 			page 16


 280              		.thumb_func
 281              		.fpu softvfp
 282              		.type	RCC_GetSYSCLKSource, %function
 283              	RCC_GetSYSCLKSource:
 284              	.LFB72:
 577:lib/src/stm32f10x_rcc.c **** }
 578:lib/src/stm32f10x_rcc.c **** 
 579:lib/src/stm32f10x_rcc.c **** /**
 580:lib/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 581:lib/src/stm32f10x_rcc.c ****   * @param  None
 582:lib/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 583:lib/src/stm32f10x_rcc.c ****   *   be one of the following:
 584:lib/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 585:lib/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 586:lib/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 587:lib/src/stm32f10x_rcc.c ****   */
 588:lib/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 589:lib/src/stm32f10x_rcc.c **** {
 285              		.loc 1 589 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 590:lib/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 290              		.loc 1 590 0
 291 00d0 024B     		ldr	r3, .L26
 292 00d2 5868     		ldr	r0, [r3, #4]
 591:lib/src/stm32f10x_rcc.c **** }
 293              		.loc 1 591 0
 294 00d4 00F00C00 		and	r0, r0, #12
 295 00d8 7047     		bx	lr
 296              	.L27:
 297 00da 00BF     		.align	2
 298              	.L26:
 299 00dc 00100240 		.word	1073876992
 300              		.cfi_endproc
 301              	.LFE72:
 302              		.size	RCC_GetSYSCLKSource, .-RCC_GetSYSCLKSource
 303              		.align	1
 304              		.global	RCC_HCLKConfig
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu softvfp
 309              		.type	RCC_HCLKConfig, %function
 310              	RCC_HCLKConfig:
 311              	.LFB73:
 592:lib/src/stm32f10x_rcc.c **** 
 593:lib/src/stm32f10x_rcc.c **** /**
 594:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 595:lib/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 596:lib/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 597:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 598:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 599:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 600:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 601:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
ARM GAS  /tmp/ccwsohif.s 			page 17


 602:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 603:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 604:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 605:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 606:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 607:lib/src/stm32f10x_rcc.c ****   * @retval None
 608:lib/src/stm32f10x_rcc.c ****   */
 609:lib/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 610:lib/src/stm32f10x_rcc.c **** {
 312              		.loc 1 610 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL16:
 611:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 612:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 613:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 614:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 318              		.loc 1 614 0
 319 00e0 034A     		ldr	r2, .L29
 320 00e2 5368     		ldr	r3, [r2, #4]
 321              	.LVL17:
 615:lib/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 616:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 322              		.loc 1 616 0
 323 00e4 23F0F003 		bic	r3, r3, #240
 324              	.LVL18:
 617:lib/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 618:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 325              		.loc 1 618 0
 326 00e8 1843     		orrs	r0, r0, r3
 327              	.LVL19:
 619:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 620:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 328              		.loc 1 620 0
 329 00ea 5060     		str	r0, [r2, #4]
 330 00ec 7047     		bx	lr
 331              	.L30:
 332 00ee 00BF     		.align	2
 333              	.L29:
 334 00f0 00100240 		.word	1073876992
 335              		.cfi_endproc
 336              	.LFE73:
 337              		.size	RCC_HCLKConfig, .-RCC_HCLKConfig
 338              		.align	1
 339              		.global	RCC_PCLK1Config
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 344              		.type	RCC_PCLK1Config, %function
 345              	RCC_PCLK1Config:
 346              	.LFB74:
 621:lib/src/stm32f10x_rcc.c **** }
 622:lib/src/stm32f10x_rcc.c **** 
 623:lib/src/stm32f10x_rcc.c **** /**
ARM GAS  /tmp/ccwsohif.s 			page 18


 624:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 625:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 626:lib/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 627:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 628:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 629:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 630:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 631:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 632:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 633:lib/src/stm32f10x_rcc.c ****   * @retval None
 634:lib/src/stm32f10x_rcc.c ****   */
 635:lib/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 636:lib/src/stm32f10x_rcc.c **** {
 347              		.loc 1 636 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              	.LVL20:
 637:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 638:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 639:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 640:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 353              		.loc 1 640 0
 354 00f4 034A     		ldr	r2, .L32
 355 00f6 5368     		ldr	r3, [r2, #4]
 356              	.LVL21:
 641:lib/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 642:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 357              		.loc 1 642 0
 358 00f8 23F4E063 		bic	r3, r3, #1792
 359              	.LVL22:
 643:lib/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 644:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 360              		.loc 1 644 0
 361 00fc 1843     		orrs	r0, r0, r3
 362              	.LVL23:
 645:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 646:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 363              		.loc 1 646 0
 364 00fe 5060     		str	r0, [r2, #4]
 365 0100 7047     		bx	lr
 366              	.L33:
 367 0102 00BF     		.align	2
 368              	.L32:
 369 0104 00100240 		.word	1073876992
 370              		.cfi_endproc
 371              	.LFE74:
 372              		.size	RCC_PCLK1Config, .-RCC_PCLK1Config
 373              		.align	1
 374              		.global	RCC_PCLK2Config
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 379              		.type	RCC_PCLK2Config, %function
 380              	RCC_PCLK2Config:
ARM GAS  /tmp/ccwsohif.s 			page 19


 381              	.LFB75:
 647:lib/src/stm32f10x_rcc.c **** }
 648:lib/src/stm32f10x_rcc.c **** 
 649:lib/src/stm32f10x_rcc.c **** /**
 650:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 651:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 652:lib/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 653:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 654:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 655:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 656:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 657:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 658:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 659:lib/src/stm32f10x_rcc.c ****   * @retval None
 660:lib/src/stm32f10x_rcc.c ****   */
 661:lib/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 662:lib/src/stm32f10x_rcc.c **** {
 382              		.loc 1 662 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL24:
 663:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 664:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 665:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 666:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 388              		.loc 1 666 0
 389 0108 034A     		ldr	r2, .L35
 390 010a 5368     		ldr	r3, [r2, #4]
 391              	.LVL25:
 667:lib/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 668:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 392              		.loc 1 668 0
 393 010c 23F46053 		bic	r3, r3, #14336
 394              	.LVL26:
 669:lib/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 670:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 395              		.loc 1 670 0
 396 0110 43EAC000 		orr	r0, r3, r0, lsl #3
 397              	.LVL27:
 671:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 672:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 398              		.loc 1 672 0
 399 0114 5060     		str	r0, [r2, #4]
 400 0116 7047     		bx	lr
 401              	.L36:
 402              		.align	2
 403              	.L35:
 404 0118 00100240 		.word	1073876992
 405              		.cfi_endproc
 406              	.LFE75:
 407              		.size	RCC_PCLK2Config, .-RCC_PCLK2Config
 408              		.align	1
 409              		.global	RCC_ITConfig
 410              		.syntax unified
 411              		.thumb
ARM GAS  /tmp/ccwsohif.s 			page 20


 412              		.thumb_func
 413              		.fpu softvfp
 414              		.type	RCC_ITConfig, %function
 415              	RCC_ITConfig:
 416              	.LFB76:
 673:lib/src/stm32f10x_rcc.c **** }
 674:lib/src/stm32f10x_rcc.c **** 
 675:lib/src/stm32f10x_rcc.c **** /**
 676:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 677:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 678:lib/src/stm32f10x_rcc.c ****   * 
 679:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 680:lib/src/stm32f10x_rcc.c ****   *   of the following values        
 681:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 682:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 683:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 684:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 685:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 686:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 687:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 688:lib/src/stm32f10x_rcc.c ****   * 
 689:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 690:lib/src/stm32f10x_rcc.c ****   *   following values        
 691:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 692:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 693:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 694:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 695:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 696:lib/src/stm32f10x_rcc.c ****   *       
 697:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 698:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 699:lib/src/stm32f10x_rcc.c ****   * @retval None
 700:lib/src/stm32f10x_rcc.c ****   */
 701:lib/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 702:lib/src/stm32f10x_rcc.c **** {
 417              		.loc 1 702 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL28:
 703:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 704:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 705:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 423              		.loc 1 706 0
 424 011c 29B9     		cbnz	r1, .L40
 707:lib/src/stm32f10x_rcc.c ****   {
 708:lib/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 709:lib/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 710:lib/src/stm32f10x_rcc.c ****   }
 711:lib/src/stm32f10x_rcc.c ****   else
 712:lib/src/stm32f10x_rcc.c ****   {
 713:lib/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 714:lib/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 425              		.loc 1 714 0
 426 011e 054A     		ldr	r2, .L41
ARM GAS  /tmp/ccwsohif.s 			page 21


 427 0120 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 428 0122 23EA0000 		bic	r0, r3, r0
 429              	.LVL29:
 430 0126 1070     		strb	r0, [r2]
 431 0128 7047     		bx	lr
 432              	.LVL30:
 433              	.L40:
 709:lib/src/stm32f10x_rcc.c ****   }
 434              		.loc 1 709 0
 435 012a 024A     		ldr	r2, .L41
 436 012c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 437 012e 1843     		orrs	r0, r0, r3
 438              	.LVL31:
 439 0130 1070     		strb	r0, [r2]
 440 0132 7047     		bx	lr
 441              	.L42:
 442              		.align	2
 443              	.L41:
 444 0134 09100240 		.word	1073877001
 445              		.cfi_endproc
 446              	.LFE76:
 447              		.size	RCC_ITConfig, .-RCC_ITConfig
 448              		.align	1
 449              		.global	RCC_USBCLKConfig
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 454              		.type	RCC_USBCLKConfig, %function
 455              	RCC_USBCLKConfig:
 456              	.LFB77:
 715:lib/src/stm32f10x_rcc.c ****   }
 716:lib/src/stm32f10x_rcc.c **** }
 717:lib/src/stm32f10x_rcc.c **** 
 718:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 719:lib/src/stm32f10x_rcc.c **** /**
 720:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 721:lib/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 722:lib/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 723:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 724:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 725:lib/src/stm32f10x_rcc.c ****   *                                     clock source
 726:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 727:lib/src/stm32f10x_rcc.c ****   * @retval None
 728:lib/src/stm32f10x_rcc.c ****   */
 729:lib/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 730:lib/src/stm32f10x_rcc.c **** {
 457              		.loc 1 730 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL32:
 731:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 732:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 733:lib/src/stm32f10x_rcc.c **** 
 734:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
ARM GAS  /tmp/ccwsohif.s 			page 22


 463              		.loc 1 734 0
 464 0138 014B     		ldr	r3, .L44
 465 013a 1860     		str	r0, [r3]
 466 013c 7047     		bx	lr
 467              	.L45:
 468 013e 00BF     		.align	2
 469              	.L44:
 470 0140 D8004242 		.word	1111621848
 471              		.cfi_endproc
 472              	.LFE77:
 473              		.size	RCC_USBCLKConfig, .-RCC_USBCLKConfig
 474              		.align	1
 475              		.global	RCC_ADCCLKConfig
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu softvfp
 480              		.type	RCC_ADCCLKConfig, %function
 481              	RCC_ADCCLKConfig:
 482              	.LFB78:
 735:lib/src/stm32f10x_rcc.c **** }
 736:lib/src/stm32f10x_rcc.c **** #else
 737:lib/src/stm32f10x_rcc.c **** /**
 738:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 739:lib/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 740:lib/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 741:lib/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 742:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 743:lib/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:lib/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 745:lib/src/stm32f10x_rcc.c ****   * @retval None
 746:lib/src/stm32f10x_rcc.c ****   */
 747:lib/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 748:lib/src/stm32f10x_rcc.c **** {
 749:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 750:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 751:lib/src/stm32f10x_rcc.c **** 
 752:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 753:lib/src/stm32f10x_rcc.c **** }
 754:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 755:lib/src/stm32f10x_rcc.c **** 
 756:lib/src/stm32f10x_rcc.c **** /**
 757:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 758:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 759:lib/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 760:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 761:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 762:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 763:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 764:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 765:lib/src/stm32f10x_rcc.c ****   * @retval None
 766:lib/src/stm32f10x_rcc.c ****   */
 767:lib/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 768:lib/src/stm32f10x_rcc.c **** {
 483              		.loc 1 768 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwsohif.s 			page 23


 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL33:
 769:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 770:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 771:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 772:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 489              		.loc 1 772 0
 490 0144 034A     		ldr	r2, .L47
 491 0146 5368     		ldr	r3, [r2, #4]
 492              	.LVL34:
 773:lib/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 774:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 493              		.loc 1 774 0
 494 0148 23F44043 		bic	r3, r3, #49152
 495              	.LVL35:
 775:lib/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 776:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 496              		.loc 1 776 0
 497 014c 1843     		orrs	r0, r0, r3
 498              	.LVL36:
 777:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 778:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 499              		.loc 1 778 0
 500 014e 5060     		str	r0, [r2, #4]
 501 0150 7047     		bx	lr
 502              	.L48:
 503 0152 00BF     		.align	2
 504              	.L47:
 505 0154 00100240 		.word	1073876992
 506              		.cfi_endproc
 507              	.LFE78:
 508              		.size	RCC_ADCCLKConfig, .-RCC_ADCCLKConfig
 509              		.align	1
 510              		.global	RCC_LSEConfig
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu softvfp
 515              		.type	RCC_LSEConfig, %function
 516              	RCC_LSEConfig:
 517              	.LFB79:
 779:lib/src/stm32f10x_rcc.c **** }
 780:lib/src/stm32f10x_rcc.c **** 
 781:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 782:lib/src/stm32f10x_rcc.c **** /**
 783:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 784:lib/src/stm32f10x_rcc.c ****   * @note
 785:lib/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 786:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 787:lib/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 788:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 789:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 790:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 791:lib/src/stm32f10x_rcc.c ****   * @retval None
 792:lib/src/stm32f10x_rcc.c ****   */
 793:lib/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
ARM GAS  /tmp/ccwsohif.s 			page 24


 794:lib/src/stm32f10x_rcc.c **** {
 795:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 796:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 797:lib/src/stm32f10x_rcc.c **** 
 798:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 799:lib/src/stm32f10x_rcc.c **** }
 800:lib/src/stm32f10x_rcc.c **** 
 801:lib/src/stm32f10x_rcc.c **** /**
 802:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 803:lib/src/stm32f10x_rcc.c ****   * @note
 804:lib/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 805:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 806:lib/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 807:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 808:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 809:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 810:lib/src/stm32f10x_rcc.c ****   * @retval None
 811:lib/src/stm32f10x_rcc.c ****   */
 812:lib/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 813:lib/src/stm32f10x_rcc.c **** {
 814:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 815:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 816:lib/src/stm32f10x_rcc.c **** 
 817:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 818:lib/src/stm32f10x_rcc.c **** }
 819:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 820:lib/src/stm32f10x_rcc.c **** 
 821:lib/src/stm32f10x_rcc.c **** /**
 822:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 823:lib/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 824:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 825:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 826:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 827:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 828:lib/src/stm32f10x_rcc.c ****   * @retval None
 829:lib/src/stm32f10x_rcc.c ****   */
 830:lib/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 831:lib/src/stm32f10x_rcc.c **** {
 518              		.loc 1 831 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL37:
 832:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 833:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 834:lib/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 835:lib/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 836:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 524              		.loc 1 836 0
 525 0158 084B     		ldr	r3, .L53
 526 015a 0022     		movs	r2, #0
 527 015c 1A70     		strb	r2, [r3]
 837:lib/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 838:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 528              		.loc 1 838 0
 529 015e 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccwsohif.s 			page 25


 839:lib/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 840:lib/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 530              		.loc 1 840 0
 531 0160 0128     		cmp	r0, #1
 532 0162 02D0     		beq	.L51
 533 0164 0428     		cmp	r0, #4
 534 0166 04D0     		beq	.L52
 535 0168 7047     		bx	lr
 536              	.L51:
 841:lib/src/stm32f10x_rcc.c ****   {
 842:lib/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 843:lib/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 844:lib/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 537              		.loc 1 844 0
 538 016a 0122     		movs	r2, #1
 539 016c 034B     		ldr	r3, .L53
 540 016e 1A70     		strb	r2, [r3]
 845:lib/src/stm32f10x_rcc.c ****       break;
 541              		.loc 1 845 0
 542 0170 7047     		bx	lr
 543              	.L52:
 846:lib/src/stm32f10x_rcc.c ****       
 847:lib/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 848:lib/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 849:lib/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 544              		.loc 1 849 0
 545 0172 0522     		movs	r2, #5
 546 0174 014B     		ldr	r3, .L53
 547 0176 1A70     		strb	r2, [r3]
 548 0178 7047     		bx	lr
 549              	.L54:
 550 017a 00BF     		.align	2
 551              	.L53:
 552 017c 20100240 		.word	1073877024
 553              		.cfi_endproc
 554              	.LFE79:
 555              		.size	RCC_LSEConfig, .-RCC_LSEConfig
 556              		.align	1
 557              		.global	RCC_LSICmd
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 562              		.type	RCC_LSICmd, %function
 563              	RCC_LSICmd:
 564              	.LFB80:
 850:lib/src/stm32f10x_rcc.c ****       break;            
 851:lib/src/stm32f10x_rcc.c ****       
 852:lib/src/stm32f10x_rcc.c ****     default:
 853:lib/src/stm32f10x_rcc.c ****       break;      
 854:lib/src/stm32f10x_rcc.c ****   }
 855:lib/src/stm32f10x_rcc.c **** }
 856:lib/src/stm32f10x_rcc.c **** 
 857:lib/src/stm32f10x_rcc.c **** /**
 858:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 859:lib/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 860:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccwsohif.s 			page 26


 861:lib/src/stm32f10x_rcc.c ****   * @retval None
 862:lib/src/stm32f10x_rcc.c ****   */
 863:lib/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 864:lib/src/stm32f10x_rcc.c **** {
 565              		.loc 1 864 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL38:
 865:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 866:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 867:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 571              		.loc 1 867 0
 572 0180 014B     		ldr	r3, .L56
 573 0182 1860     		str	r0, [r3]
 574 0184 7047     		bx	lr
 575              	.L57:
 576 0186 00BF     		.align	2
 577              	.L56:
 578 0188 80044242 		.word	1111622784
 579              		.cfi_endproc
 580              	.LFE80:
 581              		.size	RCC_LSICmd, .-RCC_LSICmd
 582              		.align	1
 583              		.global	RCC_RTCCLKConfig
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu softvfp
 588              		.type	RCC_RTCCLKConfig, %function
 589              	RCC_RTCCLKConfig:
 590              	.LFB81:
 868:lib/src/stm32f10x_rcc.c **** }
 869:lib/src/stm32f10x_rcc.c **** 
 870:lib/src/stm32f10x_rcc.c **** /**
 871:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 872:lib/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 873:lib/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 874:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 875:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 876:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 877:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 878:lib/src/stm32f10x_rcc.c ****   * @retval None
 879:lib/src/stm32f10x_rcc.c ****   */
 880:lib/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 881:lib/src/stm32f10x_rcc.c **** {
 591              		.loc 1 881 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL39:
 882:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 883:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 884:lib/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 885:lib/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
ARM GAS  /tmp/ccwsohif.s 			page 27


 597              		.loc 1 885 0
 598 018c 024A     		ldr	r2, .L59
 599 018e 136A     		ldr	r3, [r2, #32]
 600 0190 1843     		orrs	r0, r0, r3
 601              	.LVL40:
 602 0192 1062     		str	r0, [r2, #32]
 603 0194 7047     		bx	lr
 604              	.L60:
 605 0196 00BF     		.align	2
 606              	.L59:
 607 0198 00100240 		.word	1073876992
 608              		.cfi_endproc
 609              	.LFE81:
 610              		.size	RCC_RTCCLKConfig, .-RCC_RTCCLKConfig
 611              		.align	1
 612              		.global	RCC_RTCCLKCmd
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu softvfp
 617              		.type	RCC_RTCCLKCmd, %function
 618              	RCC_RTCCLKCmd:
 619              	.LFB82:
 886:lib/src/stm32f10x_rcc.c **** }
 887:lib/src/stm32f10x_rcc.c **** 
 888:lib/src/stm32f10x_rcc.c **** /**
 889:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 890:lib/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 891:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 892:lib/src/stm32f10x_rcc.c ****   * @retval None
 893:lib/src/stm32f10x_rcc.c ****   */
 894:lib/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 895:lib/src/stm32f10x_rcc.c **** {
 620              		.loc 1 895 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625              	.LVL41:
 896:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 897:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 898:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 626              		.loc 1 898 0
 627 019c 014B     		ldr	r3, .L62
 628 019e 1860     		str	r0, [r3]
 629 01a0 7047     		bx	lr
 630              	.L63:
 631 01a2 00BF     		.align	2
 632              	.L62:
 633 01a4 3C044242 		.word	1111622716
 634              		.cfi_endproc
 635              	.LFE82:
 636              		.size	RCC_RTCCLKCmd, .-RCC_RTCCLKCmd
 637              		.align	1
 638              		.global	RCC_GetClocksFreq
 639              		.syntax unified
 640              		.thumb
ARM GAS  /tmp/ccwsohif.s 			page 28


 641              		.thumb_func
 642              		.fpu softvfp
 643              		.type	RCC_GetClocksFreq, %function
 644              	RCC_GetClocksFreq:
 645              	.LFB83:
 899:lib/src/stm32f10x_rcc.c **** }
 900:lib/src/stm32f10x_rcc.c **** 
 901:lib/src/stm32f10x_rcc.c **** /**
 902:lib/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 903:lib/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 904:lib/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 905:lib/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 906:lib/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 907:lib/src/stm32f10x_rcc.c ****   * @retval None
 908:lib/src/stm32f10x_rcc.c ****   */
 909:lib/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 910:lib/src/stm32f10x_rcc.c **** {
 646              		.loc 1 910 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651              	.LVL42:
 652 01a8 10B4     		push	{r4}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 4, -4
 655              	.LVL43:
 911:lib/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 912:lib/src/stm32f10x_rcc.c **** 
 913:lib/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 914:lib/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 915:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 916:lib/src/stm32f10x_rcc.c **** 
 917:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 918:lib/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 919:lib/src/stm32f10x_rcc.c **** #endif
 920:lib/src/stm32f10x_rcc.c ****     
 921:lib/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 922:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 656              		.loc 1 922 0
 657 01aa 274B     		ldr	r3, .L76
 658 01ac 5B68     		ldr	r3, [r3, #4]
 659              	.LVL44:
 660 01ae 03F00C03 		and	r3, r3, #12
 661              	.LVL45:
 923:lib/src/stm32f10x_rcc.c ****   
 924:lib/src/stm32f10x_rcc.c ****   switch (tmp)
 662              		.loc 1 924 0
 663 01b2 042B     		cmp	r3, #4
 664 01b4 2BD0     		beq	.L66
 665 01b6 082B     		cmp	r3, #8
 666 01b8 2CD0     		beq	.L67
 667 01ba 13B1     		cbz	r3, .L74
 925:lib/src/stm32f10x_rcc.c ****   {
 926:lib/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 927:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 928:lib/src/stm32f10x_rcc.c ****       break;
ARM GAS  /tmp/ccwsohif.s 			page 29


 929:lib/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 930:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 931:lib/src/stm32f10x_rcc.c ****       break;
 932:lib/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 933:lib/src/stm32f10x_rcc.c **** 
 934:lib/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 935:lib/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 936:lib/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 937:lib/src/stm32f10x_rcc.c ****       
 938:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 939:lib/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 940:lib/src/stm32f10x_rcc.c ****       
 941:lib/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 942:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 943:lib/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 944:lib/src/stm32f10x_rcc.c ****       }
 945:lib/src/stm32f10x_rcc.c ****       else
 946:lib/src/stm32f10x_rcc.c ****       {
 947:lib/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 948:lib/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 949:lib/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 950:lib/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 951:lib/src/stm32f10x_rcc.c ****  #else
 952:lib/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 953:lib/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 954:lib/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 955:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 956:lib/src/stm32f10x_rcc.c ****         }
 957:lib/src/stm32f10x_rcc.c ****         else
 958:lib/src/stm32f10x_rcc.c ****         {
 959:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 960:lib/src/stm32f10x_rcc.c ****         }
 961:lib/src/stm32f10x_rcc.c ****  #endif
 962:lib/src/stm32f10x_rcc.c ****       }
 963:lib/src/stm32f10x_rcc.c **** #else
 964:lib/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 965:lib/src/stm32f10x_rcc.c ****       
 966:lib/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 967:lib/src/stm32f10x_rcc.c ****       {
 968:lib/src/stm32f10x_rcc.c ****          pllmull += 2;
 969:lib/src/stm32f10x_rcc.c ****       }
 970:lib/src/stm32f10x_rcc.c ****       else
 971:lib/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 972:lib/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 973:lib/src/stm32f10x_rcc.c ****       }
 974:lib/src/stm32f10x_rcc.c ****             
 975:lib/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 976:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 977:lib/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 978:lib/src/stm32f10x_rcc.c ****       }
 979:lib/src/stm32f10x_rcc.c ****       else
 980:lib/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 981:lib/src/stm32f10x_rcc.c ****         
 982:lib/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 983:lib/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 984:lib/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 985:lib/src/stm32f10x_rcc.c ****         
ARM GAS  /tmp/ccwsohif.s 			page 30


 986:lib/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 987:lib/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 988:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 989:lib/src/stm32f10x_rcc.c ****         }
 990:lib/src/stm32f10x_rcc.c ****         else
 991:lib/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 992:lib/src/stm32f10x_rcc.c ****           
 993:lib/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 994:lib/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 995:lib/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 996:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 997:lib/src/stm32f10x_rcc.c ****         }
 998:lib/src/stm32f10x_rcc.c ****       }
 999:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1000:lib/src/stm32f10x_rcc.c ****       break;
1001:lib/src/stm32f10x_rcc.c **** 
1002:lib/src/stm32f10x_rcc.c ****     default:
1003:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 668              		.loc 1 1003 0
 669 01bc 234B     		ldr	r3, .L76+4
 670              	.LVL46:
 671 01be 0360     		str	r3, [r0]
1004:lib/src/stm32f10x_rcc.c ****       break;
 672              		.loc 1 1004 0
 673 01c0 01E0     		b	.L69
 674              	.LVL47:
 675              	.L74:
 927:lib/src/stm32f10x_rcc.c ****       break;
 676              		.loc 1 927 0
 677 01c2 224B     		ldr	r3, .L76+4
 678              	.LVL48:
 679 01c4 0360     		str	r3, [r0]
 680              	.LVL49:
 681              	.L69:
1005:lib/src/stm32f10x_rcc.c ****   }
1006:lib/src/stm32f10x_rcc.c **** 
1007:lib/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1008:lib/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1009:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 682              		.loc 1 1009 0
 683 01c6 204C     		ldr	r4, .L76
 684 01c8 6368     		ldr	r3, [r4, #4]
 685              	.LVL50:
1010:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 686              		.loc 1 1010 0
 687 01ca C3F30313 		ubfx	r3, r3, #4, #4
 688              	.LVL51:
1011:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 689              		.loc 1 1011 0
 690 01ce 204A     		ldr	r2, .L76+8
 691 01d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 692              	.LVL52:
 693 01d2 D9B2     		uxtb	r1, r3
 694              	.LVL53:
1012:lib/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1013:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 695              		.loc 1 1013 0
ARM GAS  /tmp/ccwsohif.s 			page 31


 696 01d4 0368     		ldr	r3, [r0]
 697 01d6 CB40     		lsrs	r3, r3, r1
 698 01d8 4360     		str	r3, [r0, #4]
1014:lib/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1015:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 699              		.loc 1 1015 0
 700 01da 6168     		ldr	r1, [r4, #4]
 701              	.LVL54:
1016:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 702              		.loc 1 1016 0
 703 01dc C1F30221 		ubfx	r1, r1, #8, #3
 704              	.LVL55:
1017:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 705              		.loc 1 1017 0
 706 01e0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 707              	.LVL56:
 708 01e2 C9B2     		uxtb	r1, r1
 709              	.LVL57:
1018:lib/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1019:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 710              		.loc 1 1019 0
 711 01e4 23FA01F1 		lsr	r1, r3, r1
 712              	.LVL58:
 713 01e8 8160     		str	r1, [r0, #8]
1020:lib/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1021:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 714              		.loc 1 1021 0
 715 01ea 6168     		ldr	r1, [r4, #4]
 716              	.LVL59:
1022:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 717              		.loc 1 1022 0
 718 01ec C1F3C221 		ubfx	r1, r1, #11, #3
 719              	.LVL60:
1023:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 720              		.loc 1 1023 0
 721 01f0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 722              	.LVL61:
 723 01f2 C9B2     		uxtb	r1, r1
 724              	.LVL62:
1024:lib/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1025:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 725              		.loc 1 1025 0
 726 01f4 CB40     		lsrs	r3, r3, r1
 727 01f6 C360     		str	r3, [r0, #12]
1026:lib/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1027:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 728              		.loc 1 1027 0
 729 01f8 6168     		ldr	r1, [r4, #4]
 730              	.LVL63:
1028:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 731              		.loc 1 1028 0
 732 01fa C1F38131 		ubfx	r1, r1, #14, #2
 733              	.LVL64:
1029:lib/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 734              		.loc 1 1029 0
 735 01fe 0A44     		add	r2, r2, r1
 736 0200 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
ARM GAS  /tmp/ccwsohif.s 			page 32


 737 0202 D2B2     		uxtb	r2, r2
 738              	.LVL65:
1030:lib/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1031:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 739              		.loc 1 1031 0
 740 0204 B3FBF2F3 		udiv	r3, r3, r2
 741 0208 0361     		str	r3, [r0, #16]
1032:lib/src/stm32f10x_rcc.c **** }
 742              		.loc 1 1032 0
 743 020a 10BC     		pop	{r4}
 744              		.cfi_remember_state
 745              		.cfi_restore 4
 746              		.cfi_def_cfa_offset 0
 747 020c 7047     		bx	lr
 748              	.LVL66:
 749              	.L66:
 750              		.cfi_restore_state
 930:lib/src/stm32f10x_rcc.c ****       break;
 751              		.loc 1 930 0
 752 020e 0F4B     		ldr	r3, .L76+4
 753              	.LVL67:
 754 0210 0360     		str	r3, [r0]
 931:lib/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 755              		.loc 1 931 0
 756 0212 D8E7     		b	.L69
 757              	.LVL68:
 758              	.L67:
 935:lib/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 759              		.loc 1 935 0
 760 0214 0C4A     		ldr	r2, .L76
 761 0216 5368     		ldr	r3, [r2, #4]
 762              	.LVL69:
 936:lib/src/stm32f10x_rcc.c ****       
 763              		.loc 1 936 0
 764 0218 5268     		ldr	r2, [r2, #4]
 765              	.LVL70:
 939:lib/src/stm32f10x_rcc.c ****       
 766              		.loc 1 939 0
 767 021a C3F38343 		ubfx	r3, r3, #18, #4
 768              	.LVL71:
 769 021e 0233     		adds	r3, r3, #2
 770              	.LVL72:
 941:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 771              		.loc 1 941 0
 772 0220 12F4803F 		tst	r2, #65536
 773 0224 0AD0     		beq	.L75
 953:lib/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 774              		.loc 1 953 0
 775 0226 084A     		ldr	r2, .L76
 776              	.LVL73:
 777 0228 5268     		ldr	r2, [r2, #4]
 778 022a 12F4003F 		tst	r2, #131072
 955:lib/src/stm32f10x_rcc.c ****         }
 779              		.loc 1 955 0
 780 022e 14BF     		ite	ne
 781 0230 084A     		ldrne	r2, .L76+12
 959:lib/src/stm32f10x_rcc.c ****         }
ARM GAS  /tmp/ccwsohif.s 			page 33


 782              		.loc 1 959 0
 783 0232 064A     		ldreq	r2, .L76+4
 784 0234 02FB03F3 		mul	r3, r2, r3
 785              	.LVL74:
 786 0238 0360     		str	r3, [r0]
 787 023a C4E7     		b	.L69
 788              	.LVL75:
 789              	.L75:
 943:lib/src/stm32f10x_rcc.c ****       }
 790              		.loc 1 943 0
 791 023c 054A     		ldr	r2, .L76+12
 792              	.LVL76:
 793 023e 02FB03F3 		mul	r3, r2, r3
 794              	.LVL77:
 795 0242 0360     		str	r3, [r0]
 796 0244 BFE7     		b	.L69
 797              	.L77:
 798 0246 00BF     		.align	2
 799              	.L76:
 800 0248 00100240 		.word	1073876992
 801 024c 00127A00 		.word	8000000
 802 0250 00000000 		.word	.LANCHOR0
 803 0254 00093D00 		.word	4000000
 804              		.cfi_endproc
 805              	.LFE83:
 806              		.size	RCC_GetClocksFreq, .-RCC_GetClocksFreq
 807              		.align	1
 808              		.global	RCC_AHBPeriphClockCmd
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu softvfp
 813              		.type	RCC_AHBPeriphClockCmd, %function
 814              	RCC_AHBPeriphClockCmd:
 815              	.LFB84:
1033:lib/src/stm32f10x_rcc.c **** 
1034:lib/src/stm32f10x_rcc.c **** /**
1035:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1036:lib/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1037:lib/src/stm32f10x_rcc.c ****   *   
1038:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1039:lib/src/stm32f10x_rcc.c ****   *   of the following values:        
1040:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1041:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1042:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1043:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1044:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1045:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1046:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1047:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1048:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1049:lib/src/stm32f10x_rcc.c ****   * 
1050:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1051:lib/src/stm32f10x_rcc.c ****   *   following values:        
1052:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1053:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1054:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
ARM GAS  /tmp/ccwsohif.s 			page 34


1055:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1056:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1057:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1058:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1059:lib/src/stm32f10x_rcc.c ****   *   
1060:lib/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1061:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1062:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1063:lib/src/stm32f10x_rcc.c ****   * @retval None
1064:lib/src/stm32f10x_rcc.c ****   */
1065:lib/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1066:lib/src/stm32f10x_rcc.c **** {
 816              		.loc 1 1066 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821              	.LVL78:
1067:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1068:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1069:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1070:lib/src/stm32f10x_rcc.c **** 
1071:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 822              		.loc 1 1071 0
 823 0258 29B9     		cbnz	r1, .L81
1072:lib/src/stm32f10x_rcc.c ****   {
1073:lib/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
1074:lib/src/stm32f10x_rcc.c ****   }
1075:lib/src/stm32f10x_rcc.c ****   else
1076:lib/src/stm32f10x_rcc.c ****   {
1077:lib/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 824              		.loc 1 1077 0
 825 025a 054A     		ldr	r2, .L82
 826 025c 5369     		ldr	r3, [r2, #20]
 827 025e 23EA0000 		bic	r0, r3, r0
 828              	.LVL79:
 829 0262 5061     		str	r0, [r2, #20]
 830 0264 7047     		bx	lr
 831              	.LVL80:
 832              	.L81:
1073:lib/src/stm32f10x_rcc.c ****   }
 833              		.loc 1 1073 0
 834 0266 024A     		ldr	r2, .L82
 835 0268 5369     		ldr	r3, [r2, #20]
 836 026a 1843     		orrs	r0, r0, r3
 837              	.LVL81:
 838 026c 5061     		str	r0, [r2, #20]
 839 026e 7047     		bx	lr
 840              	.L83:
 841              		.align	2
 842              	.L82:
 843 0270 00100240 		.word	1073876992
 844              		.cfi_endproc
 845              	.LFE84:
 846              		.size	RCC_AHBPeriphClockCmd, .-RCC_AHBPeriphClockCmd
 847              		.align	1
 848              		.global	RCC_APB2PeriphClockCmd
ARM GAS  /tmp/ccwsohif.s 			page 35


 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu softvfp
 853              		.type	RCC_APB2PeriphClockCmd, %function
 854              	RCC_APB2PeriphClockCmd:
 855              	.LFB85:
1078:lib/src/stm32f10x_rcc.c ****   }
1079:lib/src/stm32f10x_rcc.c **** }
1080:lib/src/stm32f10x_rcc.c **** 
1081:lib/src/stm32f10x_rcc.c **** /**
1082:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1083:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1084:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1085:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1086:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1087:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1088:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1089:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1090:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1091:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1092:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1093:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1094:lib/src/stm32f10x_rcc.c ****   * @retval None
1095:lib/src/stm32f10x_rcc.c ****   */
1096:lib/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1097:lib/src/stm32f10x_rcc.c **** {
 856              		.loc 1 1097 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861              	.LVL82:
1098:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1099:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1100:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1101:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 862              		.loc 1 1101 0
 863 0274 29B9     		cbnz	r1, .L87
1102:lib/src/stm32f10x_rcc.c ****   {
1103:lib/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
1104:lib/src/stm32f10x_rcc.c ****   }
1105:lib/src/stm32f10x_rcc.c ****   else
1106:lib/src/stm32f10x_rcc.c ****   {
1107:lib/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 864              		.loc 1 1107 0
 865 0276 054A     		ldr	r2, .L88
 866 0278 9369     		ldr	r3, [r2, #24]
 867 027a 23EA0000 		bic	r0, r3, r0
 868              	.LVL83:
 869 027e 9061     		str	r0, [r2, #24]
 870 0280 7047     		bx	lr
 871              	.LVL84:
 872              	.L87:
1103:lib/src/stm32f10x_rcc.c ****   }
 873              		.loc 1 1103 0
 874 0282 024A     		ldr	r2, .L88
ARM GAS  /tmp/ccwsohif.s 			page 36


 875 0284 9369     		ldr	r3, [r2, #24]
 876 0286 1843     		orrs	r0, r0, r3
 877              	.LVL85:
 878 0288 9061     		str	r0, [r2, #24]
 879 028a 7047     		bx	lr
 880              	.L89:
 881              		.align	2
 882              	.L88:
 883 028c 00100240 		.word	1073876992
 884              		.cfi_endproc
 885              	.LFE85:
 886              		.size	RCC_APB2PeriphClockCmd, .-RCC_APB2PeriphClockCmd
 887              		.align	1
 888              		.global	RCC_APB1PeriphClockCmd
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu softvfp
 893              		.type	RCC_APB1PeriphClockCmd, %function
 894              	RCC_APB1PeriphClockCmd:
 895              	.LFB86:
1108:lib/src/stm32f10x_rcc.c ****   }
1109:lib/src/stm32f10x_rcc.c **** }
1110:lib/src/stm32f10x_rcc.c **** 
1111:lib/src/stm32f10x_rcc.c **** /**
1112:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1113:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1114:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1115:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1116:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1117:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1118:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1119:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1120:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1121:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1122:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1123:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1124:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1125:lib/src/stm32f10x_rcc.c ****   * @retval None
1126:lib/src/stm32f10x_rcc.c ****   */
1127:lib/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1128:lib/src/stm32f10x_rcc.c **** {
 896              		.loc 1 1128 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL86:
1129:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1130:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1131:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1132:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 902              		.loc 1 1132 0
 903 0290 29B9     		cbnz	r1, .L93
1133:lib/src/stm32f10x_rcc.c ****   {
1134:lib/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
1135:lib/src/stm32f10x_rcc.c ****   }
ARM GAS  /tmp/ccwsohif.s 			page 37


1136:lib/src/stm32f10x_rcc.c ****   else
1137:lib/src/stm32f10x_rcc.c ****   {
1138:lib/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 904              		.loc 1 1138 0
 905 0292 054A     		ldr	r2, .L94
 906 0294 D369     		ldr	r3, [r2, #28]
 907 0296 23EA0000 		bic	r0, r3, r0
 908              	.LVL87:
 909 029a D061     		str	r0, [r2, #28]
 910 029c 7047     		bx	lr
 911              	.LVL88:
 912              	.L93:
1134:lib/src/stm32f10x_rcc.c ****   }
 913              		.loc 1 1134 0
 914 029e 024A     		ldr	r2, .L94
 915 02a0 D369     		ldr	r3, [r2, #28]
 916 02a2 1843     		orrs	r0, r0, r3
 917              	.LVL89:
 918 02a4 D061     		str	r0, [r2, #28]
 919 02a6 7047     		bx	lr
 920              	.L95:
 921              		.align	2
 922              	.L94:
 923 02a8 00100240 		.word	1073876992
 924              		.cfi_endproc
 925              	.LFE86:
 926              		.size	RCC_APB1PeriphClockCmd, .-RCC_APB1PeriphClockCmd
 927              		.align	1
 928              		.global	RCC_APB2PeriphResetCmd
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 933              		.type	RCC_APB2PeriphResetCmd, %function
 934              	RCC_APB2PeriphResetCmd:
 935              	.LFB87:
1139:lib/src/stm32f10x_rcc.c ****   }
1140:lib/src/stm32f10x_rcc.c **** }
1141:lib/src/stm32f10x_rcc.c **** 
1142:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1143:lib/src/stm32f10x_rcc.c **** /**
1144:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1145:lib/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1146:lib/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1147:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1148:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1149:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1150:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1151:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1152:lib/src/stm32f10x_rcc.c ****   * @retval None
1153:lib/src/stm32f10x_rcc.c ****   */
1154:lib/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1155:lib/src/stm32f10x_rcc.c **** {
1156:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1157:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1158:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1159:lib/src/stm32f10x_rcc.c **** 
ARM GAS  /tmp/ccwsohif.s 			page 38


1160:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1161:lib/src/stm32f10x_rcc.c ****   {
1162:lib/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1163:lib/src/stm32f10x_rcc.c ****   }
1164:lib/src/stm32f10x_rcc.c ****   else
1165:lib/src/stm32f10x_rcc.c ****   {
1166:lib/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1167:lib/src/stm32f10x_rcc.c ****   }
1168:lib/src/stm32f10x_rcc.c **** }
1169:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1170:lib/src/stm32f10x_rcc.c **** 
1171:lib/src/stm32f10x_rcc.c **** /**
1172:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1173:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1174:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1175:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1176:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1177:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1178:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1179:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1180:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1181:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1182:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1183:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1184:lib/src/stm32f10x_rcc.c ****   * @retval None
1185:lib/src/stm32f10x_rcc.c ****   */
1186:lib/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1187:lib/src/stm32f10x_rcc.c **** {
 936              		.loc 1 1187 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL90:
1188:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1189:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1190:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1191:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 942              		.loc 1 1191 0
 943 02ac 29B9     		cbnz	r1, .L99
1192:lib/src/stm32f10x_rcc.c ****   {
1193:lib/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
1194:lib/src/stm32f10x_rcc.c ****   }
1195:lib/src/stm32f10x_rcc.c ****   else
1196:lib/src/stm32f10x_rcc.c ****   {
1197:lib/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 944              		.loc 1 1197 0
 945 02ae 054A     		ldr	r2, .L100
 946 02b0 D368     		ldr	r3, [r2, #12]
 947 02b2 23EA0000 		bic	r0, r3, r0
 948              	.LVL91:
 949 02b6 D060     		str	r0, [r2, #12]
 950 02b8 7047     		bx	lr
 951              	.LVL92:
 952              	.L99:
1193:lib/src/stm32f10x_rcc.c ****   }
 953              		.loc 1 1193 0
ARM GAS  /tmp/ccwsohif.s 			page 39


 954 02ba 024A     		ldr	r2, .L100
 955 02bc D368     		ldr	r3, [r2, #12]
 956 02be 1843     		orrs	r0, r0, r3
 957              	.LVL93:
 958 02c0 D060     		str	r0, [r2, #12]
 959 02c2 7047     		bx	lr
 960              	.L101:
 961              		.align	2
 962              	.L100:
 963 02c4 00100240 		.word	1073876992
 964              		.cfi_endproc
 965              	.LFE87:
 966              		.size	RCC_APB2PeriphResetCmd, .-RCC_APB2PeriphResetCmd
 967              		.align	1
 968              		.global	RCC_APB1PeriphResetCmd
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu softvfp
 973              		.type	RCC_APB1PeriphResetCmd, %function
 974              	RCC_APB1PeriphResetCmd:
 975              	.LFB88:
1198:lib/src/stm32f10x_rcc.c ****   }
1199:lib/src/stm32f10x_rcc.c **** }
1200:lib/src/stm32f10x_rcc.c **** 
1201:lib/src/stm32f10x_rcc.c **** /**
1202:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1203:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1204:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1205:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1206:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1207:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1208:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1209:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1210:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1211:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1212:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1213:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1214:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1215:lib/src/stm32f10x_rcc.c ****   * @retval None
1216:lib/src/stm32f10x_rcc.c ****   */
1217:lib/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1218:lib/src/stm32f10x_rcc.c **** {
 976              		.loc 1 1218 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              		@ link register save eliminated.
 981              	.LVL94:
1219:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1220:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1221:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1222:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 982              		.loc 1 1222 0
 983 02c8 29B9     		cbnz	r1, .L105
1223:lib/src/stm32f10x_rcc.c ****   {
1224:lib/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
ARM GAS  /tmp/ccwsohif.s 			page 40


1225:lib/src/stm32f10x_rcc.c ****   }
1226:lib/src/stm32f10x_rcc.c ****   else
1227:lib/src/stm32f10x_rcc.c ****   {
1228:lib/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 984              		.loc 1 1228 0
 985 02ca 054A     		ldr	r2, .L106
 986 02cc 1369     		ldr	r3, [r2, #16]
 987 02ce 23EA0000 		bic	r0, r3, r0
 988              	.LVL95:
 989 02d2 1061     		str	r0, [r2, #16]
 990 02d4 7047     		bx	lr
 991              	.LVL96:
 992              	.L105:
1224:lib/src/stm32f10x_rcc.c ****   }
 993              		.loc 1 1224 0
 994 02d6 024A     		ldr	r2, .L106
 995 02d8 1369     		ldr	r3, [r2, #16]
 996 02da 1843     		orrs	r0, r0, r3
 997              	.LVL97:
 998 02dc 1061     		str	r0, [r2, #16]
 999 02de 7047     		bx	lr
 1000              	.L107:
 1001              		.align	2
 1002              	.L106:
 1003 02e0 00100240 		.word	1073876992
 1004              		.cfi_endproc
 1005              	.LFE88:
 1006              		.size	RCC_APB1PeriphResetCmd, .-RCC_APB1PeriphResetCmd
 1007              		.align	1
 1008              		.global	RCC_BackupResetCmd
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu softvfp
 1013              		.type	RCC_BackupResetCmd, %function
 1014              	RCC_BackupResetCmd:
 1015              	.LFB89:
1229:lib/src/stm32f10x_rcc.c ****   }
1230:lib/src/stm32f10x_rcc.c **** }
1231:lib/src/stm32f10x_rcc.c **** 
1232:lib/src/stm32f10x_rcc.c **** /**
1233:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1234:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1235:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1236:lib/src/stm32f10x_rcc.c ****   * @retval None
1237:lib/src/stm32f10x_rcc.c ****   */
1238:lib/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1239:lib/src/stm32f10x_rcc.c **** {
 1016              		.loc 1 1239 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021              	.LVL98:
1240:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1241:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1242:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
ARM GAS  /tmp/ccwsohif.s 			page 41


 1022              		.loc 1 1242 0
 1023 02e4 014B     		ldr	r3, .L109
 1024 02e6 1860     		str	r0, [r3]
 1025 02e8 7047     		bx	lr
 1026              	.L110:
 1027 02ea 00BF     		.align	2
 1028              	.L109:
 1029 02ec 40044242 		.word	1111622720
 1030              		.cfi_endproc
 1031              	.LFE89:
 1032              		.size	RCC_BackupResetCmd, .-RCC_BackupResetCmd
 1033              		.align	1
 1034              		.global	RCC_ClockSecuritySystemCmd
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1039              		.type	RCC_ClockSecuritySystemCmd, %function
 1040              	RCC_ClockSecuritySystemCmd:
 1041              	.LFB90:
1243:lib/src/stm32f10x_rcc.c **** }
1244:lib/src/stm32f10x_rcc.c **** 
1245:lib/src/stm32f10x_rcc.c **** /**
1246:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1247:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1248:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1249:lib/src/stm32f10x_rcc.c ****   * @retval None
1250:lib/src/stm32f10x_rcc.c ****   */
1251:lib/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1252:lib/src/stm32f10x_rcc.c **** {
 1042              		.loc 1 1252 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047              	.LVL99:
1253:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1254:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1255:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1048              		.loc 1 1255 0
 1049 02f0 014B     		ldr	r3, .L112
 1050 02f2 1860     		str	r0, [r3]
 1051 02f4 7047     		bx	lr
 1052              	.L113:
 1053 02f6 00BF     		.align	2
 1054              	.L112:
 1055 02f8 4C004242 		.word	1111621708
 1056              		.cfi_endproc
 1057              	.LFE90:
 1058              		.size	RCC_ClockSecuritySystemCmd, .-RCC_ClockSecuritySystemCmd
 1059              		.align	1
 1060              		.global	RCC_MCOConfig
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu softvfp
 1065              		.type	RCC_MCOConfig, %function
ARM GAS  /tmp/ccwsohif.s 			page 42


 1066              	RCC_MCOConfig:
 1067              	.LFB91:
1256:lib/src/stm32f10x_rcc.c **** }
1257:lib/src/stm32f10x_rcc.c **** 
1258:lib/src/stm32f10x_rcc.c **** /**
1259:lib/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1260:lib/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1261:lib/src/stm32f10x_rcc.c ****   *   
1262:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1263:lib/src/stm32f10x_rcc.c ****   *   following values:       
1264:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1265:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1266:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1267:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1268:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1269:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1270:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1271:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1272:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1273:lib/src/stm32f10x_rcc.c ****   * 
1274:lib/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1275:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1276:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1277:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1278:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1279:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1280:lib/src/stm32f10x_rcc.c ****   *   
1281:lib/src/stm32f10x_rcc.c ****   * @retval None
1282:lib/src/stm32f10x_rcc.c ****   */
1283:lib/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1284:lib/src/stm32f10x_rcc.c **** {
 1068              		.loc 1 1284 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073              	.LVL100:
1285:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1286:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1287:lib/src/stm32f10x_rcc.c **** 
1288:lib/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1289:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1074              		.loc 1 1289 0
 1075 02fc 014B     		ldr	r3, .L115
 1076 02fe 1870     		strb	r0, [r3]
 1077 0300 7047     		bx	lr
 1078              	.L116:
 1079 0302 00BF     		.align	2
 1080              	.L115:
 1081 0304 07100240 		.word	1073876999
 1082              		.cfi_endproc
 1083              	.LFE91:
 1084              		.size	RCC_MCOConfig, .-RCC_MCOConfig
 1085              		.align	1
 1086              		.global	RCC_GetFlagStatus
 1087              		.syntax unified
 1088              		.thumb
ARM GAS  /tmp/ccwsohif.s 			page 43


 1089              		.thumb_func
 1090              		.fpu softvfp
 1091              		.type	RCC_GetFlagStatus, %function
 1092              	RCC_GetFlagStatus:
 1093              	.LFB92:
1290:lib/src/stm32f10x_rcc.c **** }
1291:lib/src/stm32f10x_rcc.c **** 
1292:lib/src/stm32f10x_rcc.c **** /**
1293:lib/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1294:lib/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1295:lib/src/stm32f10x_rcc.c ****   *   
1296:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1297:lib/src/stm32f10x_rcc.c ****   *   following values:
1298:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1299:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1300:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1301:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1302:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1303:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1304:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1305:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1306:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1307:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1308:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1309:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1310:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1311:lib/src/stm32f10x_rcc.c ****   * 
1312:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1313:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1314:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1315:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1316:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1317:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1318:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1319:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1320:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1321:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1322:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1323:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1324:lib/src/stm32f10x_rcc.c ****   *   
1325:lib/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1326:lib/src/stm32f10x_rcc.c ****   */
1327:lib/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1328:lib/src/stm32f10x_rcc.c **** {
 1094              		.loc 1 1328 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099              	.LVL101:
1329:lib/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1330:lib/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1331:lib/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1332:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1333:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1334:lib/src/stm32f10x_rcc.c **** 
1335:lib/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
ARM GAS  /tmp/ccwsohif.s 			page 44


1336:lib/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1100              		.loc 1 1336 0
 1101 0308 4309     		lsrs	r3, r0, #5
 1102              	.LVL102:
1337:lib/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1103              		.loc 1 1337 0
 1104 030a 012B     		cmp	r3, #1
 1105 030c 0BD0     		beq	.L121
1338:lib/src/stm32f10x_rcc.c ****   {
1339:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
1340:lib/src/stm32f10x_rcc.c ****   }
1341:lib/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1106              		.loc 1 1341 0
 1107 030e 022B     		cmp	r3, #2
1342:lib/src/stm32f10x_rcc.c ****   {
1343:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1108              		.loc 1 1343 0
 1109 0310 064B     		ldr	r3, .L122
 1110              	.LVL103:
 1111 0312 0CBF     		ite	eq
 1112 0314 1B6A     		ldreq	r3, [r3, #32]
 1113              	.LVL104:
1344:lib/src/stm32f10x_rcc.c ****   }
1345:lib/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1346:lib/src/stm32f10x_rcc.c ****   {
1347:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1114              		.loc 1 1347 0
 1115 0316 5B6A     		ldrne	r3, [r3, #36]
 1116              	.LVL105:
 1117              	.L119:
1348:lib/src/stm32f10x_rcc.c ****   }
1349:lib/src/stm32f10x_rcc.c **** 
1350:lib/src/stm32f10x_rcc.c ****   /* Get the flag position */
1351:lib/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1118              		.loc 1 1351 0
 1119 0318 00F01F00 		and	r0, r0, #31
 1120              	.LVL106:
1352:lib/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1121              		.loc 1 1352 0
 1122 031c 23FA00F0 		lsr	r0, r3, r0
1353:lib/src/stm32f10x_rcc.c ****   {
1354:lib/src/stm32f10x_rcc.c ****     bitstatus = SET;
1355:lib/src/stm32f10x_rcc.c ****   }
1356:lib/src/stm32f10x_rcc.c ****   else
1357:lib/src/stm32f10x_rcc.c ****   {
1358:lib/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1359:lib/src/stm32f10x_rcc.c ****   }
1360:lib/src/stm32f10x_rcc.c **** 
1361:lib/src/stm32f10x_rcc.c ****   /* Return the flag status */
1362:lib/src/stm32f10x_rcc.c ****   return bitstatus;
1363:lib/src/stm32f10x_rcc.c **** }
 1123              		.loc 1 1363 0
 1124 0320 00F00100 		and	r0, r0, #1
 1125 0324 7047     		bx	lr
 1126              	.LVL107:
 1127              	.L121:
1339:lib/src/stm32f10x_rcc.c ****   }
ARM GAS  /tmp/ccwsohif.s 			page 45


 1128              		.loc 1 1339 0
 1129 0326 014B     		ldr	r3, .L122
 1130              	.LVL108:
 1131 0328 1B68     		ldr	r3, [r3]
 1132              	.LVL109:
 1133 032a F5E7     		b	.L119
 1134              	.L123:
 1135              		.align	2
 1136              	.L122:
 1137 032c 00100240 		.word	1073876992
 1138              		.cfi_endproc
 1139              	.LFE92:
 1140              		.size	RCC_GetFlagStatus, .-RCC_GetFlagStatus
 1141              		.align	1
 1142              		.global	RCC_WaitForHSEStartUp
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu softvfp
 1147              		.type	RCC_WaitForHSEStartUp, %function
 1148              	RCC_WaitForHSEStartUp:
 1149              	.LFB66:
 306:lib/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1150              		.loc 1 306 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154 0330 10B5     		push	{r4, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 4, -8
 1157              		.cfi_offset 14, -4
 1158 0332 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 16
 307:lib/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1160              		.loc 1 307 0
 1161 0334 0023     		movs	r3, #0
 1162 0336 0193     		str	r3, [sp, #4]
 1163              	.LVL110:
 314:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1164              		.loc 1 314 0
 1165 0338 3124     		movs	r4, #49
 1166              	.LVL111:
 1167              	.L126:
 314:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1168              		.loc 1 314 0 is_stmt 0 discriminator 2
 1169 033a 2046     		mov	r0, r4
 1170 033c FFF7FEFF 		bl	RCC_GetFlagStatus
 1171              	.LVL112:
 315:lib/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1172              		.loc 1 315 0 is_stmt 1 discriminator 2
 1173 0340 019B     		ldr	r3, [sp, #4]
 1174 0342 0133     		adds	r3, r3, #1
 1175 0344 0193     		str	r3, [sp, #4]
 316:lib/src/stm32f10x_rcc.c ****   
 1176              		.loc 1 316 0 discriminator 2
 1177 0346 019B     		ldr	r3, [sp, #4]
 1178 0348 B3F5A06F 		cmp	r3, #1280
ARM GAS  /tmp/ccwsohif.s 			page 46


 1179 034c 01D0     		beq	.L125
 316:lib/src/stm32f10x_rcc.c ****   
 1180              		.loc 1 316 0 is_stmt 0 discriminator 1
 1181 034e 0028     		cmp	r0, #0
 1182 0350 F3D0     		beq	.L126
 1183              	.L125:
 318:lib/src/stm32f10x_rcc.c ****   {
 1184              		.loc 1 318 0 is_stmt 1
 1185 0352 3120     		movs	r0, #49
 1186              	.LVL113:
 1187 0354 FFF7FEFF 		bl	RCC_GetFlagStatus
 1188              	.LVL114:
 327:lib/src/stm32f10x_rcc.c **** 
 1189              		.loc 1 327 0
 1190 0358 0030     		adds	r0, r0, #0
 1191              	.LVL115:
 1192 035a 18BF     		it	ne
 1193 035c 0120     		movne	r0, #1
 1194 035e 02B0     		add	sp, sp, #8
 1195              		.cfi_def_cfa_offset 8
 1196              		@ sp needed
 1197 0360 10BD     		pop	{r4, pc}
 1198              		.cfi_endproc
 1199              	.LFE66:
 1200              		.size	RCC_WaitForHSEStartUp, .-RCC_WaitForHSEStartUp
 1201              		.align	1
 1202              		.global	RCC_ClearFlag
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu softvfp
 1207              		.type	RCC_ClearFlag, %function
 1208              	RCC_ClearFlag:
 1209              	.LFB93:
1364:lib/src/stm32f10x_rcc.c **** 
1365:lib/src/stm32f10x_rcc.c **** /**
1366:lib/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1367:lib/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1368:lib/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1369:lib/src/stm32f10x_rcc.c ****   * @param  None
1370:lib/src/stm32f10x_rcc.c ****   * @retval None
1371:lib/src/stm32f10x_rcc.c ****   */
1372:lib/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1373:lib/src/stm32f10x_rcc.c **** {
 1210              		.loc 1 1373 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
1374:lib/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1375:lib/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1215              		.loc 1 1375 0
 1216 0362 034A     		ldr	r2, .L130
 1217 0364 536A     		ldr	r3, [r2, #36]
 1218 0366 43F08073 		orr	r3, r3, #16777216
 1219 036a 5362     		str	r3, [r2, #36]
 1220 036c 7047     		bx	lr
ARM GAS  /tmp/ccwsohif.s 			page 47


 1221              	.L131:
 1222 036e 00BF     		.align	2
 1223              	.L130:
 1224 0370 00100240 		.word	1073876992
 1225              		.cfi_endproc
 1226              	.LFE93:
 1227              		.size	RCC_ClearFlag, .-RCC_ClearFlag
 1228              		.align	1
 1229              		.global	RCC_GetITStatus
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu softvfp
 1234              		.type	RCC_GetITStatus, %function
 1235              	RCC_GetITStatus:
 1236              	.LFB94:
1376:lib/src/stm32f10x_rcc.c **** }
1377:lib/src/stm32f10x_rcc.c **** 
1378:lib/src/stm32f10x_rcc.c **** /**
1379:lib/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1380:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1381:lib/src/stm32f10x_rcc.c ****   *   
1382:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1383:lib/src/stm32f10x_rcc.c ****   *   following values:
1384:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1385:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1386:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1387:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1388:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1389:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1390:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1391:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1392:lib/src/stm32f10x_rcc.c ****   * 
1393:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1394:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1395:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1396:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1397:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1398:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1399:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1400:lib/src/stm32f10x_rcc.c ****   *   
1401:lib/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1402:lib/src/stm32f10x_rcc.c ****   */
1403:lib/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1404:lib/src/stm32f10x_rcc.c **** {
 1237              		.loc 1 1404 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242              	.LVL116:
1405:lib/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1406:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1407:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1408:lib/src/stm32f10x_rcc.c **** 
1409:lib/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1410:lib/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
ARM GAS  /tmp/ccwsohif.s 			page 48


 1243              		.loc 1 1410 0
 1244 0374 034B     		ldr	r3, .L133
 1245 0376 9B68     		ldr	r3, [r3, #8]
 1246              	.LVL117:
 1247 0378 1842     		tst	r0, r3
1411:lib/src/stm32f10x_rcc.c ****   {
1412:lib/src/stm32f10x_rcc.c ****     bitstatus = SET;
1413:lib/src/stm32f10x_rcc.c ****   }
1414:lib/src/stm32f10x_rcc.c ****   else
1415:lib/src/stm32f10x_rcc.c ****   {
1416:lib/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1417:lib/src/stm32f10x_rcc.c ****   }
1418:lib/src/stm32f10x_rcc.c **** 
1419:lib/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1420:lib/src/stm32f10x_rcc.c ****   return  bitstatus;
1421:lib/src/stm32f10x_rcc.c **** }
 1248              		.loc 1 1421 0
 1249 037a 14BF     		ite	ne
 1250 037c 0120     		movne	r0, #1
 1251              	.LVL118:
 1252 037e 0020     		moveq	r0, #0
 1253 0380 7047     		bx	lr
 1254              	.L134:
 1255 0382 00BF     		.align	2
 1256              	.L133:
 1257 0384 00100240 		.word	1073876992
 1258              		.cfi_endproc
 1259              	.LFE94:
 1260              		.size	RCC_GetITStatus, .-RCC_GetITStatus
 1261              		.align	1
 1262              		.global	RCC_ClearITPendingBit
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu softvfp
 1267              		.type	RCC_ClearITPendingBit, %function
 1268              	RCC_ClearITPendingBit:
 1269              	.LFB95:
1422:lib/src/stm32f10x_rcc.c **** 
1423:lib/src/stm32f10x_rcc.c **** /**
1424:lib/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1425:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1426:lib/src/stm32f10x_rcc.c ****   *   
1427:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1428:lib/src/stm32f10x_rcc.c ****   *   of the following values:
1429:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1430:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1431:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1432:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1433:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1434:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1435:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1436:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1437:lib/src/stm32f10x_rcc.c ****   * 
1438:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1439:lib/src/stm32f10x_rcc.c ****   *   following values:        
1440:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
ARM GAS  /tmp/ccwsohif.s 			page 49


1441:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1442:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1443:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1444:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1445:lib/src/stm32f10x_rcc.c ****   *   
1446:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1447:lib/src/stm32f10x_rcc.c ****   * @retval None
1448:lib/src/stm32f10x_rcc.c ****   */
1449:lib/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1450:lib/src/stm32f10x_rcc.c **** {
 1270              		.loc 1 1450 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275              	.LVL119:
1451:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1452:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1453:lib/src/stm32f10x_rcc.c **** 
1454:lib/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1455:lib/src/stm32f10x_rcc.c ****      pending bits */
1456:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1276              		.loc 1 1456 0
 1277 0388 014B     		ldr	r3, .L136
 1278 038a 1870     		strb	r0, [r3]
 1279 038c 7047     		bx	lr
 1280              	.L137:
 1281 038e 00BF     		.align	2
 1282              	.L136:
 1283 0390 0A100240 		.word	1073877002
 1284              		.cfi_endproc
 1285              	.LFE95:
 1286              		.size	RCC_ClearITPendingBit, .-RCC_ClearITPendingBit
 1287              		.data
 1288              		.align	2
 1289              		.set	.LANCHOR0,. + 0
 1290              		.type	APBAHBPrescTable, %object
 1291              		.size	APBAHBPrescTable, 16
 1292              	APBAHBPrescTable:
 1293 0000 00       		.byte	0
 1294 0001 00       		.byte	0
 1295 0002 00       		.byte	0
 1296 0003 00       		.byte	0
 1297 0004 01       		.byte	1
 1298 0005 02       		.byte	2
 1299 0006 03       		.byte	3
 1300 0007 04       		.byte	4
 1301 0008 01       		.byte	1
 1302 0009 02       		.byte	2
 1303 000a 03       		.byte	3
 1304 000b 04       		.byte	4
 1305 000c 06       		.byte	6
 1306 000d 07       		.byte	7
 1307 000e 08       		.byte	8
 1308 000f 09       		.byte	9
 1309              		.type	ADCPrescTable, %object
 1310              		.size	ADCPrescTable, 4
ARM GAS  /tmp/ccwsohif.s 			page 50


 1311              	ADCPrescTable:
 1312 0010 02       		.byte	2
 1313 0011 04       		.byte	4
 1314 0012 06       		.byte	6
 1315 0013 08       		.byte	8
 1316              		.text
 1317              	.Letext0:
 1318              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1319              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1320              		.file 4 "/home/enbin/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h"
 1321              		.file 5 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/system_stm32f10x.h"
 1322              		.file 6 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/stm32f10x.h"
 1323              		.file 7 "/home/enbin/Documents/code/STM/stm32-quadrocopter/lib/inc/stm32f10x_rcc.h"
 1324              		.file 8 "/home/enbin/Documents/code/STM/stm32-quadrocopter/drivers/MPU6050.h"
 1325              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 1326              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
 1327              		.file 11 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 1328              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 1329              		.file 13 "/usr/arm-none-eabi/include/stdlib.h"
 1330              		.file 14 "/usr/arm-none-eabi/include/math.h"
 1331              		.file 15 "/usr/arm-none-eabi/include/sys/errno.h"
 1332              		.section	.debug_info,"",%progbits
 1333              	.Ldebug_info0:
 1334 0000 EA110000 		.4byte	0x11ea
 1335 0004 0400     		.2byte	0x4
 1336 0006 00000000 		.4byte	.Ldebug_abbrev0
 1337 000a 04       		.byte	0x4
 1338 000b 01       		.uleb128 0x1
 1339 000c C4060000 		.4byte	.LASF232
 1340 0010 01       		.byte	0x1
 1341 0011 88040000 		.4byte	.LASF233
 1342 0015 4D020000 		.4byte	.LASF234
 1343 0019 00000000 		.4byte	.Ltext0
 1344 001d 94030000 		.4byte	.Letext0-.Ltext0
 1345 0021 00000000 		.4byte	.Ldebug_line0
 1346 0025 02       		.uleb128 0x2
 1347 0026 01       		.byte	0x1
 1348 0027 06       		.byte	0x6
 1349 0028 AC010000 		.4byte	.LASF0
 1350 002c 03       		.uleb128 0x3
 1351 002d 98000000 		.4byte	.LASF3
 1352 0031 02       		.byte	0x2
 1353 0032 1D       		.byte	0x1d
 1354 0033 37000000 		.4byte	0x37
 1355 0037 02       		.uleb128 0x2
 1356 0038 01       		.byte	0x1
 1357 0039 08       		.byte	0x8
 1358 003a 4E060000 		.4byte	.LASF1
 1359 003e 02       		.uleb128 0x2
 1360 003f 02       		.byte	0x2
 1361 0040 05       		.byte	0x5
 1362 0041 96080000 		.4byte	.LASF2
 1363 0045 03       		.uleb128 0x3
 1364 0046 80080000 		.4byte	.LASF4
 1365 004a 02       		.byte	0x2
 1366 004b 2B       		.byte	0x2b
 1367 004c 50000000 		.4byte	0x50
ARM GAS  /tmp/ccwsohif.s 			page 51


 1368 0050 02       		.uleb128 0x2
 1369 0051 02       		.byte	0x2
 1370 0052 07       		.byte	0x7
 1371 0053 F4080000 		.4byte	.LASF5
 1372 0057 03       		.uleb128 0x3
 1373 0058 A0080000 		.4byte	.LASF6
 1374 005c 02       		.byte	0x2
 1375 005d 3F       		.byte	0x3f
 1376 005e 62000000 		.4byte	0x62
 1377 0062 02       		.uleb128 0x2
 1378 0063 04       		.byte	0x4
 1379 0064 05       		.byte	0x5
 1380 0065 34020000 		.4byte	.LASF7
 1381 0069 03       		.uleb128 0x3
 1382 006a 6F030000 		.4byte	.LASF8
 1383 006e 02       		.byte	0x2
 1384 006f 41       		.byte	0x41
 1385 0070 74000000 		.4byte	0x74
 1386 0074 02       		.uleb128 0x2
 1387 0075 04       		.byte	0x4
 1388 0076 07       		.byte	0x7
 1389 0077 2B040000 		.4byte	.LASF9
 1390 007b 02       		.uleb128 0x2
 1391 007c 08       		.byte	0x8
 1392 007d 05       		.byte	0x5
 1393 007e BE020000 		.4byte	.LASF10
 1394 0082 02       		.uleb128 0x2
 1395 0083 08       		.byte	0x8
 1396 0084 07       		.byte	0x7
 1397 0085 13010000 		.4byte	.LASF11
 1398 0089 04       		.uleb128 0x4
 1399 008a 04       		.byte	0x4
 1400 008b 05       		.byte	0x5
 1401 008c 696E7400 		.ascii	"int\000"
 1402 0090 02       		.uleb128 0x2
 1403 0091 04       		.byte	0x4
 1404 0092 07       		.byte	0x7
 1405 0093 73080000 		.4byte	.LASF12
 1406 0097 03       		.uleb128 0x3
 1407 0098 CD090000 		.4byte	.LASF13
 1408 009c 03       		.byte	0x3
 1409 009d 18       		.byte	0x18
 1410 009e 2C000000 		.4byte	0x2c
 1411 00a2 05       		.uleb128 0x5
 1412 00a3 97000000 		.4byte	0x97
 1413 00a7 06       		.uleb128 0x6
 1414 00a8 A2000000 		.4byte	0xa2
 1415 00ac 03       		.uleb128 0x3
 1416 00ad E0040000 		.4byte	.LASF14
 1417 00b1 03       		.byte	0x3
 1418 00b2 24       		.byte	0x24
 1419 00b3 45000000 		.4byte	0x45
 1420 00b7 03       		.uleb128 0x3
 1421 00b8 46060000 		.4byte	.LASF15
 1422 00bc 03       		.byte	0x3
 1423 00bd 2C       		.byte	0x2c
 1424 00be 57000000 		.4byte	0x57
ARM GAS  /tmp/ccwsohif.s 			page 52


 1425 00c2 06       		.uleb128 0x6
 1426 00c3 B7000000 		.4byte	0xb7
 1427 00c7 03       		.uleb128 0x3
 1428 00c8 42010000 		.4byte	.LASF16
 1429 00cc 03       		.byte	0x3
 1430 00cd 30       		.byte	0x30
 1431 00ce 69000000 		.4byte	0x69
 1432 00d2 06       		.uleb128 0x6
 1433 00d3 C7000000 		.4byte	0xc7
 1434 00d7 02       		.uleb128 0x2
 1435 00d8 04       		.byte	0x4
 1436 00d9 07       		.byte	0x7
 1437 00da 3B050000 		.4byte	.LASF17
 1438 00de 07       		.uleb128 0x7
 1439 00df 4B010000 		.4byte	.LASF18
 1440 00e3 04       		.byte	0x4
 1441 00e4 9606     		.2byte	0x696
 1442 00e6 C2000000 		.4byte	0xc2
 1443 00ea 08       		.uleb128 0x8
 1444 00eb F5050000 		.4byte	.LASF19
 1445 00ef 05       		.byte	0x5
 1446 00f0 35       		.byte	0x35
 1447 00f1 C7000000 		.4byte	0xc7
 1448 00f5 09       		.uleb128 0x9
 1449 00f6 01       		.byte	0x1
 1450 00f7 37000000 		.4byte	0x37
 1451 00fb 06       		.byte	0x6
 1452 00fc 0702     		.2byte	0x207
 1453 00fe 0F010000 		.4byte	0x10f
 1454 0102 0A       		.uleb128 0xa
 1455 0103 32060000 		.4byte	.LASF20
 1456 0107 00       		.byte	0
 1457 0108 0B       		.uleb128 0xb
 1458 0109 53455400 		.ascii	"SET\000"
 1459 010d 01       		.byte	0x1
 1460 010e 00       		.byte	0
 1461 010f 0C       		.uleb128 0xc
 1462 0110 62000000 		.4byte	.LASF21
 1463 0114 06       		.byte	0x6
 1464 0115 0702     		.2byte	0x207
 1465 0117 F5000000 		.4byte	0xf5
 1466 011b 0C       		.uleb128 0xc
 1467 011c F9030000 		.4byte	.LASF22
 1468 0120 06       		.byte	0x6
 1469 0121 0702     		.2byte	0x207
 1470 0123 F5000000 		.4byte	0xf5
 1471 0127 09       		.uleb128 0x9
 1472 0128 01       		.byte	0x1
 1473 0129 37000000 		.4byte	0x37
 1474 012d 06       		.byte	0x6
 1475 012e 0902     		.2byte	0x209
 1476 0130 41010000 		.4byte	0x141
 1477 0134 0A       		.uleb128 0xa
 1478 0135 07040000 		.4byte	.LASF23
 1479 0139 00       		.byte	0
 1480 013a 0A       		.uleb128 0xa
 1481 013b 3D020000 		.4byte	.LASF24
ARM GAS  /tmp/ccwsohif.s 			page 53


 1482 013f 01       		.byte	0x1
 1483 0140 00       		.byte	0
 1484 0141 0C       		.uleb128 0xc
 1485 0142 92050000 		.4byte	.LASF25
 1486 0146 06       		.byte	0x6
 1487 0147 0902     		.2byte	0x209
 1488 0149 27010000 		.4byte	0x127
 1489 014d 09       		.uleb128 0x9
 1490 014e 01       		.byte	0x1
 1491 014f 37000000 		.4byte	0x37
 1492 0153 06       		.byte	0x6
 1493 0154 0C02     		.2byte	0x20c
 1494 0156 67010000 		.4byte	0x167
 1495 015a 0A       		.uleb128 0xa
 1496 015b 44050000 		.4byte	.LASF26
 1497 015f 00       		.byte	0
 1498 0160 0A       		.uleb128 0xa
 1499 0161 DF090000 		.4byte	.LASF27
 1500 0165 01       		.byte	0x1
 1501 0166 00       		.byte	0
 1502 0167 0C       		.uleb128 0xc
 1503 0168 7A030000 		.4byte	.LASF28
 1504 016c 06       		.byte	0x6
 1505 016d 0C02     		.2byte	0x20c
 1506 016f 4D010000 		.4byte	0x14d
 1507 0173 0D       		.uleb128 0xd
 1508 0174 28       		.byte	0x28
 1509 0175 06       		.byte	0x6
 1510 0176 3404     		.2byte	0x434
 1511 0178 FE010000 		.4byte	0x1fe
 1512 017c 0E       		.uleb128 0xe
 1513 017d 435200   		.ascii	"CR\000"
 1514 0180 06       		.byte	0x6
 1515 0181 3604     		.2byte	0x436
 1516 0183 D2000000 		.4byte	0xd2
 1517 0187 00       		.byte	0
 1518 0188 0F       		.uleb128 0xf
 1519 0189 16040000 		.4byte	.LASF29
 1520 018d 06       		.byte	0x6
 1521 018e 3704     		.2byte	0x437
 1522 0190 D2000000 		.4byte	0xd2
 1523 0194 04       		.byte	0x4
 1524 0195 0E       		.uleb128 0xe
 1525 0196 43495200 		.ascii	"CIR\000"
 1526 019a 06       		.byte	0x6
 1527 019b 3804     		.2byte	0x438
 1528 019d D2000000 		.4byte	0xd2
 1529 01a1 08       		.byte	0x8
 1530 01a2 0F       		.uleb128 0xf
 1531 01a3 44020000 		.4byte	.LASF30
 1532 01a7 06       		.byte	0x6
 1533 01a8 3904     		.2byte	0x439
 1534 01aa D2000000 		.4byte	0xd2
 1535 01ae 0C       		.byte	0xc
 1536 01af 0F       		.uleb128 0xf
 1537 01b0 E4010000 		.4byte	.LASF31
 1538 01b4 06       		.byte	0x6
ARM GAS  /tmp/ccwsohif.s 			page 54


 1539 01b5 3A04     		.2byte	0x43a
 1540 01b7 D2000000 		.4byte	0xd2
 1541 01bb 10       		.byte	0x10
 1542 01bc 0F       		.uleb128 0xf
 1543 01bd D60A0000 		.4byte	.LASF32
 1544 01c1 06       		.byte	0x6
 1545 01c2 3B04     		.2byte	0x43b
 1546 01c4 D2000000 		.4byte	0xd2
 1547 01c8 14       		.byte	0x14
 1548 01c9 0F       		.uleb128 0xf
 1549 01ca 63070000 		.4byte	.LASF33
 1550 01ce 06       		.byte	0x6
 1551 01cf 3C04     		.2byte	0x43c
 1552 01d1 D2000000 		.4byte	0xd2
 1553 01d5 18       		.byte	0x18
 1554 01d6 0F       		.uleb128 0xf
 1555 01d7 D1080000 		.4byte	.LASF34
 1556 01db 06       		.byte	0x6
 1557 01dc 3D04     		.2byte	0x43d
 1558 01de D2000000 		.4byte	0xd2
 1559 01e2 1C       		.byte	0x1c
 1560 01e3 0F       		.uleb128 0xf
 1561 01e4 96090000 		.4byte	.LASF35
 1562 01e8 06       		.byte	0x6
 1563 01e9 3E04     		.2byte	0x43e
 1564 01eb D2000000 		.4byte	0xd2
 1565 01ef 20       		.byte	0x20
 1566 01f0 0E       		.uleb128 0xe
 1567 01f1 43535200 		.ascii	"CSR\000"
 1568 01f5 06       		.byte	0x6
 1569 01f6 3F04     		.2byte	0x43f
 1570 01f8 D2000000 		.4byte	0xd2
 1571 01fc 24       		.byte	0x24
 1572 01fd 00       		.byte	0
 1573 01fe 0C       		.uleb128 0xc
 1574 01ff 5F040000 		.4byte	.LASF36
 1575 0203 06       		.byte	0x6
 1576 0204 4A04     		.2byte	0x44a
 1577 0206 73010000 		.4byte	0x173
 1578 020a 10       		.uleb128 0x10
 1579 020b 14       		.byte	0x14
 1580 020c 07       		.byte	0x7
 1581 020d 2E       		.byte	0x2e
 1582 020e 4F020000 		.4byte	0x24f
 1583 0212 11       		.uleb128 0x11
 1584 0213 4E040000 		.4byte	.LASF37
 1585 0217 07       		.byte	0x7
 1586 0218 30       		.byte	0x30
 1587 0219 C7000000 		.4byte	0xc7
 1588 021d 00       		.byte	0
 1589 021e 11       		.uleb128 0x11
 1590 021f E4030000 		.4byte	.LASF38
 1591 0223 07       		.byte	0x7
 1592 0224 31       		.byte	0x31
 1593 0225 C7000000 		.4byte	0xc7
 1594 0229 04       		.byte	0x4
 1595 022a 11       		.uleb128 0x11
ARM GAS  /tmp/ccwsohif.s 			page 55


 1596 022b EF070000 		.4byte	.LASF39
 1597 022f 07       		.byte	0x7
 1598 0230 32       		.byte	0x32
 1599 0231 C7000000 		.4byte	0xc7
 1600 0235 08       		.byte	0x8
 1601 0236 11       		.uleb128 0x11
 1602 0237 1C020000 		.4byte	.LASF40
 1603 023b 07       		.byte	0x7
 1604 023c 33       		.byte	0x33
 1605 023d C7000000 		.4byte	0xc7
 1606 0241 0C       		.byte	0xc
 1607 0242 11       		.uleb128 0x11
 1608 0243 59030000 		.4byte	.LASF41
 1609 0247 07       		.byte	0x7
 1610 0248 34       		.byte	0x34
 1611 0249 C7000000 		.4byte	0xc7
 1612 024d 10       		.byte	0x10
 1613 024e 00       		.byte	0
 1614 024f 03       		.uleb128 0x3
 1615 0250 FF090000 		.4byte	.LASF42
 1616 0254 07       		.byte	0x7
 1617 0255 35       		.byte	0x35
 1618 0256 0A020000 		.4byte	0x20a
 1619 025a 12       		.uleb128 0x12
 1620 025b 13       		.uleb128 0x13
 1621 025c 04       		.byte	0x4
 1622 025d 5A020000 		.4byte	0x25a
 1623 0261 14       		.uleb128 0x14
 1624 0262 3E000000 		.4byte	0x3e
 1625 0266 71020000 		.4byte	0x271
 1626 026a 15       		.uleb128 0x15
 1627 026b D7000000 		.4byte	0xd7
 1628 026f 02       		.byte	0x2
 1629 0270 00       		.byte	0
 1630 0271 07       		.uleb128 0x7
 1631 0272 68010000 		.4byte	.LASF43
 1632 0276 08       		.byte	0x8
 1633 0277 6601     		.2byte	0x166
 1634 0279 61020000 		.4byte	0x261
 1635 027d 07       		.uleb128 0x7
 1636 027e 82050000 		.4byte	.LASF44
 1637 0282 08       		.byte	0x8
 1638 0283 6601     		.2byte	0x166
 1639 0285 61020000 		.4byte	0x261
 1640 0289 07       		.uleb128 0x7
 1641 028a C5010000 		.4byte	.LASF45
 1642 028e 08       		.byte	0x8
 1643 028f 6701     		.2byte	0x167
 1644 0291 89000000 		.4byte	0x89
 1645 0295 07       		.uleb128 0x7
 1646 0296 73050000 		.4byte	.LASF46
 1647 029a 08       		.byte	0x8
 1648 029b 6701     		.2byte	0x167
 1649 029d 89000000 		.4byte	0x89
 1650 02a1 07       		.uleb128 0x7
 1651 02a2 88050000 		.4byte	.LASF47
 1652 02a6 08       		.byte	0x8
ARM GAS  /tmp/ccwsohif.s 			page 56


 1653 02a7 6701     		.2byte	0x167
 1654 02a9 89000000 		.4byte	0x89
 1655 02ad 07       		.uleb128 0x7
 1656 02ae 00020000 		.4byte	.LASF48
 1657 02b2 08       		.byte	0x8
 1658 02b3 6801     		.2byte	0x168
 1659 02b5 B9020000 		.4byte	0x2b9
 1660 02b9 02       		.uleb128 0x2
 1661 02ba 04       		.byte	0x4
 1662 02bb 04       		.byte	0x4
 1663 02bc 40080000 		.4byte	.LASF49
 1664 02c0 07       		.uleb128 0x7
 1665 02c1 0F060000 		.4byte	.LASF50
 1666 02c5 08       		.byte	0x8
 1667 02c6 6901     		.2byte	0x169
 1668 02c8 B9020000 		.4byte	0x2b9
 1669 02cc 07       		.uleb128 0x7
 1670 02cd B0080000 		.4byte	.LASF51
 1671 02d1 08       		.byte	0x8
 1672 02d2 6901     		.2byte	0x169
 1673 02d4 B9020000 		.4byte	0x2b9
 1674 02d8 16       		.uleb128 0x16
 1675 02d9 59617700 		.ascii	"Yaw\000"
 1676 02dd 08       		.byte	0x8
 1677 02de 6901     		.2byte	0x169
 1678 02e0 B9020000 		.4byte	0x2b9
 1679 02e4 17       		.uleb128 0x17
 1680 02e5 04       		.byte	0x4
 1681 02e6 03       		.uleb128 0x3
 1682 02e7 15060000 		.4byte	.LASF52
 1683 02eb 09       		.byte	0x9
 1684 02ec 07       		.byte	0x7
 1685 02ed 89000000 		.4byte	0x89
 1686 02f1 03       		.uleb128 0x3
 1687 02f2 9E010000 		.4byte	.LASF53
 1688 02f6 0A       		.byte	0xa
 1689 02f7 2C       		.byte	0x2c
 1690 02f8 62000000 		.4byte	0x62
 1691 02fc 03       		.uleb128 0x3
 1692 02fd 15000000 		.4byte	.LASF54
 1693 0301 0A       		.byte	0xa
 1694 0302 72       		.byte	0x72
 1695 0303 62000000 		.4byte	0x62
 1696 0307 0C       		.uleb128 0xc
 1697 0308 EE050000 		.4byte	.LASF55
 1698 030c 0B       		.byte	0xb
 1699 030d 6501     		.2byte	0x165
 1700 030f 90000000 		.4byte	0x90
 1701 0313 18       		.uleb128 0x18
 1702 0314 04       		.byte	0x4
 1703 0315 0A       		.byte	0xa
 1704 0316 A6       		.byte	0xa6
 1705 0317 32030000 		.4byte	0x332
 1706 031b 19       		.uleb128 0x19
 1707 031c CE040000 		.4byte	.LASF56
 1708 0320 0A       		.byte	0xa
 1709 0321 A8       		.byte	0xa8
ARM GAS  /tmp/ccwsohif.s 			page 57


 1710 0322 07030000 		.4byte	0x307
 1711 0326 19       		.uleb128 0x19
 1712 0327 0F040000 		.4byte	.LASF57
 1713 032b 0A       		.byte	0xa
 1714 032c A9       		.byte	0xa9
 1715 032d 32030000 		.4byte	0x332
 1716 0331 00       		.byte	0
 1717 0332 14       		.uleb128 0x14
 1718 0333 37000000 		.4byte	0x37
 1719 0337 42030000 		.4byte	0x342
 1720 033b 15       		.uleb128 0x15
 1721 033c D7000000 		.4byte	0xd7
 1722 0340 03       		.byte	0x3
 1723 0341 00       		.byte	0
 1724 0342 10       		.uleb128 0x10
 1725 0343 08       		.byte	0x8
 1726 0344 0A       		.byte	0xa
 1727 0345 A3       		.byte	0xa3
 1728 0346 63030000 		.4byte	0x363
 1729 034a 11       		.uleb128 0x11
 1730 034b 14050000 		.4byte	.LASF58
 1731 034f 0A       		.byte	0xa
 1732 0350 A5       		.byte	0xa5
 1733 0351 89000000 		.4byte	0x89
 1734 0355 00       		.byte	0
 1735 0356 11       		.uleb128 0x11
 1736 0357 DD070000 		.4byte	.LASF59
 1737 035b 0A       		.byte	0xa
 1738 035c AA       		.byte	0xaa
 1739 035d 13030000 		.4byte	0x313
 1740 0361 04       		.byte	0x4
 1741 0362 00       		.byte	0
 1742 0363 03       		.uleb128 0x3
 1743 0364 AF060000 		.4byte	.LASF60
 1744 0368 0A       		.byte	0xa
 1745 0369 AB       		.byte	0xab
 1746 036a 42030000 		.4byte	0x342
 1747 036e 03       		.uleb128 0x3
 1748 036f 80060000 		.4byte	.LASF61
 1749 0373 0A       		.byte	0xa
 1750 0374 AF       		.byte	0xaf
 1751 0375 E6020000 		.4byte	0x2e6
 1752 0379 03       		.uleb128 0x3
 1753 037a 30090000 		.4byte	.LASF62
 1754 037e 0C       		.byte	0xc
 1755 037f 16       		.byte	0x16
 1756 0380 74000000 		.4byte	0x74
 1757 0384 1A       		.uleb128 0x1a
 1758 0385 BC030000 		.4byte	.LASF67
 1759 0389 18       		.byte	0x18
 1760 038a 0C       		.byte	0xc
 1761 038b 2D       		.byte	0x2d
 1762 038c D7030000 		.4byte	0x3d7
 1763 0390 11       		.uleb128 0x11
 1764 0391 C5080000 		.4byte	.LASF63
 1765 0395 0C       		.byte	0xc
 1766 0396 2F       		.byte	0x2f
ARM GAS  /tmp/ccwsohif.s 			page 58


 1767 0397 D7030000 		.4byte	0x3d7
 1768 039b 00       		.byte	0
 1769 039c 1B       		.uleb128 0x1b
 1770 039d 5F6B00   		.ascii	"_k\000"
 1771 03a0 0C       		.byte	0xc
 1772 03a1 30       		.byte	0x30
 1773 03a2 89000000 		.4byte	0x89
 1774 03a6 04       		.byte	0x4
 1775 03a7 11       		.uleb128 0x11
 1776 03a8 A5070000 		.4byte	.LASF64
 1777 03ac 0C       		.byte	0xc
 1778 03ad 30       		.byte	0x30
 1779 03ae 89000000 		.4byte	0x89
 1780 03b2 08       		.byte	0x8
 1781 03b3 11       		.uleb128 0x11
 1782 03b4 AA080000 		.4byte	.LASF65
 1783 03b8 0C       		.byte	0xc
 1784 03b9 30       		.byte	0x30
 1785 03ba 89000000 		.4byte	0x89
 1786 03be 0C       		.byte	0xc
 1787 03bf 11       		.uleb128 0x11
 1788 03c0 7D050000 		.4byte	.LASF66
 1789 03c4 0C       		.byte	0xc
 1790 03c5 30       		.byte	0x30
 1791 03c6 89000000 		.4byte	0x89
 1792 03ca 10       		.byte	0x10
 1793 03cb 1B       		.uleb128 0x1b
 1794 03cc 5F7800   		.ascii	"_x\000"
 1795 03cf 0C       		.byte	0xc
 1796 03d0 31       		.byte	0x31
 1797 03d1 DD030000 		.4byte	0x3dd
 1798 03d5 14       		.byte	0x14
 1799 03d6 00       		.byte	0
 1800 03d7 13       		.uleb128 0x13
 1801 03d8 04       		.byte	0x4
 1802 03d9 84030000 		.4byte	0x384
 1803 03dd 14       		.uleb128 0x14
 1804 03de 79030000 		.4byte	0x379
 1805 03e2 ED030000 		.4byte	0x3ed
 1806 03e6 15       		.uleb128 0x15
 1807 03e7 D7000000 		.4byte	0xd7
 1808 03eb 00       		.byte	0
 1809 03ec 00       		.byte	0
 1810 03ed 1A       		.uleb128 0x1a
 1811 03ee 02040000 		.4byte	.LASF68
 1812 03f2 24       		.byte	0x24
 1813 03f3 0C       		.byte	0xc
 1814 03f4 35       		.byte	0x35
 1815 03f5 66040000 		.4byte	0x466
 1816 03f9 11       		.uleb128 0x11
 1817 03fa 95010000 		.4byte	.LASF69
 1818 03fe 0C       		.byte	0xc
 1819 03ff 37       		.byte	0x37
 1820 0400 89000000 		.4byte	0x89
 1821 0404 00       		.byte	0
 1822 0405 11       		.uleb128 0x11
 1823 0406 440A0000 		.4byte	.LASF70
ARM GAS  /tmp/ccwsohif.s 			page 59


 1824 040a 0C       		.byte	0xc
 1825 040b 38       		.byte	0x38
 1826 040c 89000000 		.4byte	0x89
 1827 0410 04       		.byte	0x4
 1828 0411 11       		.uleb128 0x11
 1829 0412 E5070000 		.4byte	.LASF71
 1830 0416 0C       		.byte	0xc
 1831 0417 39       		.byte	0x39
 1832 0418 89000000 		.4byte	0x89
 1833 041c 08       		.byte	0x8
 1834 041d 11       		.uleb128 0x11
 1835 041e CC0A0000 		.4byte	.LASF72
 1836 0422 0C       		.byte	0xc
 1837 0423 3A       		.byte	0x3a
 1838 0424 89000000 		.4byte	0x89
 1839 0428 0C       		.byte	0xc
 1840 0429 11       		.uleb128 0x11
 1841 042a A2050000 		.4byte	.LASF73
 1842 042e 0C       		.byte	0xc
 1843 042f 3B       		.byte	0x3b
 1844 0430 89000000 		.4byte	0x89
 1845 0434 10       		.byte	0x10
 1846 0435 11       		.uleb128 0x11
 1847 0436 0A050000 		.4byte	.LASF74
 1848 043a 0C       		.byte	0xc
 1849 043b 3C       		.byte	0x3c
 1850 043c 89000000 		.4byte	0x89
 1851 0440 14       		.byte	0x14
 1852 0441 11       		.uleb128 0x11
 1853 0442 07080000 		.4byte	.LASF75
 1854 0446 0C       		.byte	0xc
 1855 0447 3D       		.byte	0x3d
 1856 0448 89000000 		.4byte	0x89
 1857 044c 18       		.byte	0x18
 1858 044d 11       		.uleb128 0x11
 1859 044e 89060000 		.4byte	.LASF76
 1860 0452 0C       		.byte	0xc
 1861 0453 3E       		.byte	0x3e
 1862 0454 89000000 		.4byte	0x89
 1863 0458 1C       		.byte	0x1c
 1864 0459 11       		.uleb128 0x11
 1865 045a 2A0A0000 		.4byte	.LASF77
 1866 045e 0C       		.byte	0xc
 1867 045f 3F       		.byte	0x3f
 1868 0460 89000000 		.4byte	0x89
 1869 0464 20       		.byte	0x20
 1870 0465 00       		.byte	0
 1871 0466 1C       		.uleb128 0x1c
 1872 0467 F2010000 		.4byte	.LASF78
 1873 046b 0801     		.2byte	0x108
 1874 046d 0C       		.byte	0xc
 1875 046e 48       		.byte	0x48
 1876 046f A6040000 		.4byte	0x4a6
 1877 0473 11       		.uleb128 0x11
 1878 0474 2D000000 		.4byte	.LASF79
 1879 0478 0C       		.byte	0xc
 1880 0479 49       		.byte	0x49
ARM GAS  /tmp/ccwsohif.s 			page 60


 1881 047a A6040000 		.4byte	0x4a6
 1882 047e 00       		.byte	0
 1883 047f 11       		.uleb128 0x11
 1884 0480 00000000 		.4byte	.LASF80
 1885 0484 0C       		.byte	0xc
 1886 0485 4A       		.byte	0x4a
 1887 0486 A6040000 		.4byte	0x4a6
 1888 048a 80       		.byte	0x80
 1889 048b 1D       		.uleb128 0x1d
 1890 048c D9080000 		.4byte	.LASF81
 1891 0490 0C       		.byte	0xc
 1892 0491 4C       		.byte	0x4c
 1893 0492 79030000 		.4byte	0x379
 1894 0496 0001     		.2byte	0x100
 1895 0498 1D       		.uleb128 0x1d
 1896 0499 7F020000 		.4byte	.LASF82
 1897 049d 0C       		.byte	0xc
 1898 049e 4F       		.byte	0x4f
 1899 049f 79030000 		.4byte	0x379
 1900 04a3 0401     		.2byte	0x104
 1901 04a5 00       		.byte	0
 1902 04a6 14       		.uleb128 0x14
 1903 04a7 E4020000 		.4byte	0x2e4
 1904 04ab B6040000 		.4byte	0x4b6
 1905 04af 15       		.uleb128 0x15
 1906 04b0 D7000000 		.4byte	0xd7
 1907 04b4 1F       		.byte	0x1f
 1908 04b5 00       		.byte	0
 1909 04b6 1C       		.uleb128 0x1c
 1910 04b7 AB050000 		.4byte	.LASF83
 1911 04bb 9001     		.2byte	0x190
 1912 04bd 0C       		.byte	0xc
 1913 04be 5B       		.byte	0x5b
 1914 04bf F4040000 		.4byte	0x4f4
 1915 04c3 11       		.uleb128 0x11
 1916 04c4 C5080000 		.4byte	.LASF63
 1917 04c8 0C       		.byte	0xc
 1918 04c9 5C       		.byte	0x5c
 1919 04ca F4040000 		.4byte	0x4f4
 1920 04ce 00       		.byte	0
 1921 04cf 11       		.uleb128 0x11
 1922 04d0 5E070000 		.4byte	.LASF84
 1923 04d4 0C       		.byte	0xc
 1924 04d5 5D       		.byte	0x5d
 1925 04d6 89000000 		.4byte	0x89
 1926 04da 04       		.byte	0x4
 1927 04db 11       		.uleb128 0x11
 1928 04dc 6A030000 		.4byte	.LASF85
 1929 04e0 0C       		.byte	0xc
 1930 04e1 5F       		.byte	0x5f
 1931 04e2 FA040000 		.4byte	0x4fa
 1932 04e6 08       		.byte	0x8
 1933 04e7 11       		.uleb128 0x11
 1934 04e8 F2010000 		.4byte	.LASF78
 1935 04ec 0C       		.byte	0xc
 1936 04ed 60       		.byte	0x60
 1937 04ee 66040000 		.4byte	0x466
ARM GAS  /tmp/ccwsohif.s 			page 61


 1938 04f2 88       		.byte	0x88
 1939 04f3 00       		.byte	0
 1940 04f4 13       		.uleb128 0x13
 1941 04f5 04       		.byte	0x4
 1942 04f6 B6040000 		.4byte	0x4b6
 1943 04fa 14       		.uleb128 0x14
 1944 04fb 5B020000 		.4byte	0x25b
 1945 04ff 0A050000 		.4byte	0x50a
 1946 0503 15       		.uleb128 0x15
 1947 0504 D7000000 		.4byte	0xd7
 1948 0508 1F       		.byte	0x1f
 1949 0509 00       		.byte	0
 1950 050a 1A       		.uleb128 0x1a
 1951 050b 93060000 		.4byte	.LASF86
 1952 050f 08       		.byte	0x8
 1953 0510 0C       		.byte	0xc
 1954 0511 73       		.byte	0x73
 1955 0512 2F050000 		.4byte	0x52f
 1956 0516 11       		.uleb128 0x11
 1957 0517 DE010000 		.4byte	.LASF87
 1958 051b 0C       		.byte	0xc
 1959 051c 74       		.byte	0x74
 1960 051d 2F050000 		.4byte	0x52f
 1961 0521 00       		.byte	0
 1962 0522 11       		.uleb128 0x11
 1963 0523 6D080000 		.4byte	.LASF88
 1964 0527 0C       		.byte	0xc
 1965 0528 75       		.byte	0x75
 1966 0529 89000000 		.4byte	0x89
 1967 052d 04       		.byte	0x4
 1968 052e 00       		.byte	0
 1969 052f 13       		.uleb128 0x13
 1970 0530 04       		.byte	0x4
 1971 0531 37000000 		.4byte	0x37
 1972 0535 1A       		.uleb128 0x1a
 1973 0536 25000000 		.4byte	.LASF89
 1974 053a 68       		.byte	0x68
 1975 053b 0C       		.byte	0xc
 1976 053c B3       		.byte	0xb3
 1977 053d 5F060000 		.4byte	0x65f
 1978 0541 1B       		.uleb128 0x1b
 1979 0542 5F7000   		.ascii	"_p\000"
 1980 0545 0C       		.byte	0xc
 1981 0546 B4       		.byte	0xb4
 1982 0547 2F050000 		.4byte	0x52f
 1983 054b 00       		.byte	0
 1984 054c 1B       		.uleb128 0x1b
 1985 054d 5F7200   		.ascii	"_r\000"
 1986 0550 0C       		.byte	0xc
 1987 0551 B5       		.byte	0xb5
 1988 0552 89000000 		.4byte	0x89
 1989 0556 04       		.byte	0x4
 1990 0557 1B       		.uleb128 0x1b
 1991 0558 5F7700   		.ascii	"_w\000"
 1992 055b 0C       		.byte	0xc
 1993 055c B6       		.byte	0xb6
 1994 055d 89000000 		.4byte	0x89
ARM GAS  /tmp/ccwsohif.s 			page 62


 1995 0561 08       		.byte	0x8
 1996 0562 11       		.uleb128 0x11
 1997 0563 C6090000 		.4byte	.LASF90
 1998 0567 0C       		.byte	0xc
 1999 0568 B7       		.byte	0xb7
 2000 0569 3E000000 		.4byte	0x3e
 2001 056d 0C       		.byte	0xc
 2002 056e 11       		.uleb128 0x11
 2003 056f 48040000 		.4byte	.LASF91
 2004 0573 0C       		.byte	0xc
 2005 0574 B8       		.byte	0xb8
 2006 0575 3E000000 		.4byte	0x3e
 2007 0579 0E       		.byte	0xe
 2008 057a 1B       		.uleb128 0x1b
 2009 057b 5F626600 		.ascii	"_bf\000"
 2010 057f 0C       		.byte	0xc
 2011 0580 B9       		.byte	0xb9
 2012 0581 0A050000 		.4byte	0x50a
 2013 0585 10       		.byte	0x10
 2014 0586 11       		.uleb128 0x11
 2015 0587 39010000 		.4byte	.LASF92
 2016 058b 0C       		.byte	0xc
 2017 058c BA       		.byte	0xba
 2018 058d 89000000 		.4byte	0x89
 2019 0591 18       		.byte	0x18
 2020 0592 11       		.uleb128 0x11
 2021 0593 14020000 		.4byte	.LASF93
 2022 0597 0C       		.byte	0xc
 2023 0598 C1       		.byte	0xc1
 2024 0599 E4020000 		.4byte	0x2e4
 2025 059d 1C       		.byte	0x1c
 2026 059e 11       		.uleb128 0x11
 2027 059f F3030000 		.4byte	.LASF94
 2028 05a3 0C       		.byte	0xc
 2029 05a4 C3       		.byte	0xc3
 2030 05a5 CC070000 		.4byte	0x7cc
 2031 05a9 20       		.byte	0x20
 2032 05aa 11       		.uleb128 0x11
 2033 05ab 03050000 		.4byte	.LASF95
 2034 05af 0C       		.byte	0xc
 2035 05b0 C5       		.byte	0xc5
 2036 05b1 FB070000 		.4byte	0x7fb
 2037 05b5 24       		.byte	0x24
 2038 05b6 11       		.uleb128 0x11
 2039 05b7 CB080000 		.4byte	.LASF96
 2040 05bb 0C       		.byte	0xc
 2041 05bc C8       		.byte	0xc8
 2042 05bd 1F080000 		.4byte	0x81f
 2043 05c1 28       		.byte	0x28
 2044 05c2 11       		.uleb128 0x11
 2045 05c3 A5010000 		.4byte	.LASF97
 2046 05c7 0C       		.byte	0xc
 2047 05c8 C9       		.byte	0xc9
 2048 05c9 39080000 		.4byte	0x839
 2049 05cd 2C       		.byte	0x2c
 2050 05ce 1B       		.uleb128 0x1b
 2051 05cf 5F756200 		.ascii	"_ub\000"
ARM GAS  /tmp/ccwsohif.s 			page 63


 2052 05d3 0C       		.byte	0xc
 2053 05d4 CC       		.byte	0xcc
 2054 05d5 0A050000 		.4byte	0x50a
 2055 05d9 30       		.byte	0x30
 2056 05da 1B       		.uleb128 0x1b
 2057 05db 5F757000 		.ascii	"_up\000"
 2058 05df 0C       		.byte	0xc
 2059 05e0 CD       		.byte	0xcd
 2060 05e1 2F050000 		.4byte	0x52f
 2061 05e5 38       		.byte	0x38
 2062 05e6 1B       		.uleb128 0x1b
 2063 05e7 5F757200 		.ascii	"_ur\000"
 2064 05eb 0C       		.byte	0xc
 2065 05ec CE       		.byte	0xce
 2066 05ed 89000000 		.4byte	0x89
 2067 05f1 3C       		.byte	0x3c
 2068 05f2 11       		.uleb128 0x11
 2069 05f3 BF010000 		.4byte	.LASF98
 2070 05f7 0C       		.byte	0xc
 2071 05f8 D1       		.byte	0xd1
 2072 05f9 3F080000 		.4byte	0x83f
 2073 05fd 40       		.byte	0x40
 2074 05fe 11       		.uleb128 0x11
 2075 05ff 110A0000 		.4byte	.LASF99
 2076 0603 0C       		.byte	0xc
 2077 0604 D2       		.byte	0xd2
 2078 0605 4F080000 		.4byte	0x84f
 2079 0609 43       		.byte	0x43
 2080 060a 1B       		.uleb128 0x1b
 2081 060b 5F6C6200 		.ascii	"_lb\000"
 2082 060f 0C       		.byte	0xc
 2083 0610 D5       		.byte	0xd5
 2084 0611 0A050000 		.4byte	0x50a
 2085 0615 44       		.byte	0x44
 2086 0616 11       		.uleb128 0x11
 2087 0617 64080000 		.4byte	.LASF100
 2088 061b 0C       		.byte	0xc
 2089 061c D8       		.byte	0xd8
 2090 061d 89000000 		.4byte	0x89
 2091 0621 4C       		.byte	0x4c
 2092 0622 11       		.uleb128 0x11
 2093 0623 09030000 		.4byte	.LASF101
 2094 0627 0C       		.byte	0xc
 2095 0628 D9       		.byte	0xd9
 2096 0629 F1020000 		.4byte	0x2f1
 2097 062d 50       		.byte	0x50
 2098 062e 11       		.uleb128 0x11
 2099 062f 82040000 		.4byte	.LASF102
 2100 0633 0C       		.byte	0xc
 2101 0634 DC       		.byte	0xdc
 2102 0635 7D060000 		.4byte	0x67d
 2103 0639 54       		.byte	0x54
 2104 063a 11       		.uleb128 0x11
 2105 063b E9040000 		.4byte	.LASF103
 2106 063f 0C       		.byte	0xc
 2107 0640 E0       		.byte	0xe0
 2108 0641 6E030000 		.4byte	0x36e
ARM GAS  /tmp/ccwsohif.s 			page 64


 2109 0645 58       		.byte	0x58
 2110 0646 11       		.uleb128 0x11
 2111 0647 78000000 		.4byte	.LASF104
 2112 064b 0C       		.byte	0xc
 2113 064c E2       		.byte	0xe2
 2114 064d 63030000 		.4byte	0x363
 2115 0651 5C       		.byte	0x5c
 2116 0652 11       		.uleb128 0x11
 2117 0653 9A060000 		.4byte	.LASF105
 2118 0657 0C       		.byte	0xc
 2119 0658 E3       		.byte	0xe3
 2120 0659 89000000 		.4byte	0x89
 2121 065d 64       		.byte	0x64
 2122 065e 00       		.byte	0
 2123 065f 1E       		.uleb128 0x1e
 2124 0660 89000000 		.4byte	0x89
 2125 0664 7D060000 		.4byte	0x67d
 2126 0668 1F       		.uleb128 0x1f
 2127 0669 7D060000 		.4byte	0x67d
 2128 066d 1F       		.uleb128 0x1f
 2129 066e E4020000 		.4byte	0x2e4
 2130 0672 1F       		.uleb128 0x1f
 2131 0673 BA070000 		.4byte	0x7ba
 2132 0677 1F       		.uleb128 0x1f
 2133 0678 89000000 		.4byte	0x89
 2134 067c 00       		.byte	0
 2135 067d 13       		.uleb128 0x13
 2136 067e 04       		.byte	0x4
 2137 067f 88060000 		.4byte	0x688
 2138 0683 05       		.uleb128 0x5
 2139 0684 7D060000 		.4byte	0x67d
 2140 0688 20       		.uleb128 0x20
 2141 0689 AD070000 		.4byte	.LASF106
 2142 068d 2804     		.2byte	0x428
 2143 068f 0C       		.byte	0xc
 2144 0690 3802     		.2byte	0x238
 2145 0692 BA070000 		.4byte	0x7ba
 2146 0696 0F       		.uleb128 0xf
 2147 0697 58080000 		.4byte	.LASF107
 2148 069b 0C       		.byte	0xc
 2149 069c 3A02     		.2byte	0x23a
 2150 069e 89000000 		.4byte	0x89
 2151 06a2 00       		.byte	0
 2152 06a3 0F       		.uleb128 0xf
 2153 06a4 BF090000 		.4byte	.LASF108
 2154 06a8 0C       		.byte	0xc
 2155 06a9 3F02     		.2byte	0x23f
 2156 06ab A6080000 		.4byte	0x8a6
 2157 06af 04       		.byte	0x4
 2158 06b0 0F       		.uleb128 0xf
 2159 06b1 1B040000 		.4byte	.LASF109
 2160 06b5 0C       		.byte	0xc
 2161 06b6 3F02     		.2byte	0x23f
 2162 06b8 A6080000 		.4byte	0x8a6
 2163 06bc 08       		.byte	0x8
 2164 06bd 0F       		.uleb128 0xf
 2165 06be B4030000 		.4byte	.LASF110
ARM GAS  /tmp/ccwsohif.s 			page 65


 2166 06c2 0C       		.byte	0xc
 2167 06c3 3F02     		.2byte	0x23f
 2168 06c5 A6080000 		.4byte	0x8a6
 2169 06c9 0C       		.byte	0xc
 2170 06ca 0F       		.uleb128 0xf
 2171 06cb 59070000 		.4byte	.LASF111
 2172 06cf 0C       		.byte	0xc
 2173 06d0 4102     		.2byte	0x241
 2174 06d2 89000000 		.4byte	0x89
 2175 06d6 10       		.byte	0x10
 2176 06d7 0F       		.uleb128 0xf
 2177 06d8 6D000000 		.4byte	.LASF112
 2178 06dc 0C       		.byte	0xc
 2179 06dd 4202     		.2byte	0x242
 2180 06df 880A0000 		.4byte	0xa88
 2181 06e3 14       		.byte	0x14
 2182 06e4 0F       		.uleb128 0xf
 2183 06e5 62090000 		.4byte	.LASF113
 2184 06e9 0C       		.byte	0xc
 2185 06ea 4402     		.2byte	0x244
 2186 06ec 89000000 		.4byte	0x89
 2187 06f0 30       		.byte	0x30
 2188 06f1 0F       		.uleb128 0xf
 2189 06f2 630A0000 		.4byte	.LASF114
 2190 06f6 0C       		.byte	0xc
 2191 06f7 4502     		.2byte	0x245
 2192 06f9 F0070000 		.4byte	0x7f0
 2193 06fd 34       		.byte	0x34
 2194 06fe 0F       		.uleb128 0xf
 2195 06ff BD050000 		.4byte	.LASF115
 2196 0703 0C       		.byte	0xc
 2197 0704 4702     		.2byte	0x247
 2198 0706 89000000 		.4byte	0x89
 2199 070a 38       		.byte	0x38
 2200 070b 0F       		.uleb128 0xf
 2201 070c 9B070000 		.4byte	.LASF116
 2202 0710 0C       		.byte	0xc
 2203 0711 4902     		.2byte	0x249
 2204 0713 A30A0000 		.4byte	0xaa3
 2205 0717 3C       		.byte	0x3c
 2206 0718 0F       		.uleb128 0xf
 2207 0719 C6040000 		.4byte	.LASF117
 2208 071d 0C       		.byte	0xc
 2209 071e 4C02     		.2byte	0x24c
 2210 0720 D7030000 		.4byte	0x3d7
 2211 0724 40       		.byte	0x40
 2212 0725 0F       		.uleb128 0xf
 2213 0726 A5020000 		.4byte	.LASF118
 2214 072a 0C       		.byte	0xc
 2215 072b 4D02     		.2byte	0x24d
 2216 072d 89000000 		.4byte	0x89
 2217 0731 44       		.byte	0x44
 2218 0732 0F       		.uleb128 0xf
 2219 0733 810A0000 		.4byte	.LASF119
 2220 0737 0C       		.byte	0xc
 2221 0738 4E02     		.2byte	0x24e
 2222 073a D7030000 		.4byte	0x3d7
ARM GAS  /tmp/ccwsohif.s 			page 66


 2223 073e 48       		.byte	0x48
 2224 073f 0F       		.uleb128 0xf
 2225 0740 05060000 		.4byte	.LASF120
 2226 0744 0C       		.byte	0xc
 2227 0745 4F02     		.2byte	0x24f
 2228 0747 A90A0000 		.4byte	0xaa9
 2229 074b 4C       		.byte	0x4c
 2230 074c 0F       		.uleb128 0xf
 2231 074d 23040000 		.4byte	.LASF121
 2232 0751 0C       		.byte	0xc
 2233 0752 5202     		.2byte	0x252
 2234 0754 89000000 		.4byte	0x89
 2235 0758 50       		.byte	0x50
 2236 0759 0F       		.uleb128 0xf
 2237 075a 01030000 		.4byte	.LASF122
 2238 075e 0C       		.byte	0xc
 2239 075f 5302     		.2byte	0x253
 2240 0761 BA070000 		.4byte	0x7ba
 2241 0765 54       		.byte	0x54
 2242 0766 0F       		.uleb128 0xf
 2243 0767 DB040000 		.4byte	.LASF123
 2244 076b 0C       		.byte	0xc
 2245 076c 7602     		.2byte	0x276
 2246 076e 660A0000 		.4byte	0xa66
 2247 0772 58       		.byte	0x58
 2248 0773 21       		.uleb128 0x21
 2249 0774 AB050000 		.4byte	.LASF83
 2250 0778 0C       		.byte	0xc
 2251 0779 7A02     		.2byte	0x27a
 2252 077b F4040000 		.4byte	0x4f4
 2253 077f 4801     		.2byte	0x148
 2254 0781 21       		.uleb128 0x21
 2255 0782 AF000000 		.4byte	.LASF124
 2256 0786 0C       		.byte	0xc
 2257 0787 7B02     		.2byte	0x27b
 2258 0789 B6040000 		.4byte	0x4b6
 2259 078d 4C01     		.2byte	0x14c
 2260 078f 21       		.uleb128 0x21
 2261 0790 E7090000 		.4byte	.LASF125
 2262 0794 0C       		.byte	0xc
 2263 0795 7F02     		.2byte	0x27f
 2264 0797 BA0A0000 		.4byte	0xaba
 2265 079b DC02     		.2byte	0x2dc
 2266 079d 21       		.uleb128 0x21
 2267 079e 2C020000 		.4byte	.LASF126
 2268 07a2 0C       		.byte	0xc
 2269 07a3 8402     		.2byte	0x284
 2270 07a5 6B080000 		.4byte	0x86b
 2271 07a9 E002     		.2byte	0x2e0
 2272 07ab 21       		.uleb128 0x21
 2273 07ac ED010000 		.4byte	.LASF127
 2274 07b0 0C       		.byte	0xc
 2275 07b1 8502     		.2byte	0x285
 2276 07b3 C60A0000 		.4byte	0xac6
 2277 07b7 EC02     		.2byte	0x2ec
 2278 07b9 00       		.byte	0
 2279 07ba 13       		.uleb128 0x13
ARM GAS  /tmp/ccwsohif.s 			page 67


 2280 07bb 04       		.byte	0x4
 2281 07bc C0070000 		.4byte	0x7c0
 2282 07c0 02       		.uleb128 0x2
 2283 07c1 01       		.byte	0x1
 2284 07c2 08       		.byte	0x8
 2285 07c3 5F080000 		.4byte	.LASF128
 2286 07c7 05       		.uleb128 0x5
 2287 07c8 C0070000 		.4byte	0x7c0
 2288 07cc 13       		.uleb128 0x13
 2289 07cd 04       		.byte	0x4
 2290 07ce 5F060000 		.4byte	0x65f
 2291 07d2 1E       		.uleb128 0x1e
 2292 07d3 89000000 		.4byte	0x89
 2293 07d7 F0070000 		.4byte	0x7f0
 2294 07db 1F       		.uleb128 0x1f
 2295 07dc 7D060000 		.4byte	0x67d
 2296 07e0 1F       		.uleb128 0x1f
 2297 07e1 E4020000 		.4byte	0x2e4
 2298 07e5 1F       		.uleb128 0x1f
 2299 07e6 F0070000 		.4byte	0x7f0
 2300 07ea 1F       		.uleb128 0x1f
 2301 07eb 89000000 		.4byte	0x89
 2302 07ef 00       		.byte	0
 2303 07f0 13       		.uleb128 0x13
 2304 07f1 04       		.byte	0x4
 2305 07f2 C7070000 		.4byte	0x7c7
 2306 07f6 05       		.uleb128 0x5
 2307 07f7 F0070000 		.4byte	0x7f0
 2308 07fb 13       		.uleb128 0x13
 2309 07fc 04       		.byte	0x4
 2310 07fd D2070000 		.4byte	0x7d2
 2311 0801 1E       		.uleb128 0x1e
 2312 0802 FC020000 		.4byte	0x2fc
 2313 0806 1F080000 		.4byte	0x81f
 2314 080a 1F       		.uleb128 0x1f
 2315 080b 7D060000 		.4byte	0x67d
 2316 080f 1F       		.uleb128 0x1f
 2317 0810 E4020000 		.4byte	0x2e4
 2318 0814 1F       		.uleb128 0x1f
 2319 0815 FC020000 		.4byte	0x2fc
 2320 0819 1F       		.uleb128 0x1f
 2321 081a 89000000 		.4byte	0x89
 2322 081e 00       		.byte	0
 2323 081f 13       		.uleb128 0x13
 2324 0820 04       		.byte	0x4
 2325 0821 01080000 		.4byte	0x801
 2326 0825 1E       		.uleb128 0x1e
 2327 0826 89000000 		.4byte	0x89
 2328 082a 39080000 		.4byte	0x839
 2329 082e 1F       		.uleb128 0x1f
 2330 082f 7D060000 		.4byte	0x67d
 2331 0833 1F       		.uleb128 0x1f
 2332 0834 E4020000 		.4byte	0x2e4
 2333 0838 00       		.byte	0
 2334 0839 13       		.uleb128 0x13
 2335 083a 04       		.byte	0x4
 2336 083b 25080000 		.4byte	0x825
ARM GAS  /tmp/ccwsohif.s 			page 68


 2337 083f 14       		.uleb128 0x14
 2338 0840 37000000 		.4byte	0x37
 2339 0844 4F080000 		.4byte	0x84f
 2340 0848 15       		.uleb128 0x15
 2341 0849 D7000000 		.4byte	0xd7
 2342 084d 02       		.byte	0x2
 2343 084e 00       		.byte	0
 2344 084f 14       		.uleb128 0x14
 2345 0850 37000000 		.4byte	0x37
 2346 0854 5F080000 		.4byte	0x85f
 2347 0858 15       		.uleb128 0x15
 2348 0859 D7000000 		.4byte	0xd7
 2349 085d 00       		.byte	0
 2350 085e 00       		.byte	0
 2351 085f 0C       		.uleb128 0xc
 2352 0860 A8060000 		.4byte	.LASF129
 2353 0864 0C       		.byte	0xc
 2354 0865 1D01     		.2byte	0x11d
 2355 0867 35050000 		.4byte	0x535
 2356 086b 22       		.uleb128 0x22
 2357 086c A7040000 		.4byte	.LASF130
 2358 0870 0C       		.byte	0xc
 2359 0871 0C       		.byte	0xc
 2360 0872 2101     		.2byte	0x121
 2361 0874 A0080000 		.4byte	0x8a0
 2362 0878 0F       		.uleb128 0xf
 2363 0879 C5080000 		.4byte	.LASF63
 2364 087d 0C       		.byte	0xc
 2365 087e 2301     		.2byte	0x123
 2366 0880 A0080000 		.4byte	0x8a0
 2367 0884 00       		.byte	0
 2368 0885 0F       		.uleb128 0xf
 2369 0886 A0040000 		.4byte	.LASF131
 2370 088a 0C       		.byte	0xc
 2371 088b 2401     		.2byte	0x124
 2372 088d 89000000 		.4byte	0x89
 2373 0891 04       		.byte	0x4
 2374 0892 0F       		.uleb128 0xf
 2375 0893 A2060000 		.4byte	.LASF132
 2376 0897 0C       		.byte	0xc
 2377 0898 2501     		.2byte	0x125
 2378 089a A6080000 		.4byte	0x8a6
 2379 089e 08       		.byte	0x8
 2380 089f 00       		.byte	0
 2381 08a0 13       		.uleb128 0x13
 2382 08a1 04       		.byte	0x4
 2383 08a2 6B080000 		.4byte	0x86b
 2384 08a6 13       		.uleb128 0x13
 2385 08a7 04       		.byte	0x4
 2386 08a8 5F080000 		.4byte	0x85f
 2387 08ac 22       		.uleb128 0x22
 2388 08ad 41000000 		.4byte	.LASF133
 2389 08b1 0E       		.byte	0xe
 2390 08b2 0C       		.byte	0xc
 2391 08b3 3D01     		.2byte	0x13d
 2392 08b5 E1080000 		.4byte	0x8e1
 2393 08b9 0F       		.uleb128 0xf
ARM GAS  /tmp/ccwsohif.s 			page 69


 2394 08ba 38090000 		.4byte	.LASF134
 2395 08be 0C       		.byte	0xc
 2396 08bf 3E01     		.2byte	0x13e
 2397 08c1 E1080000 		.4byte	0x8e1
 2398 08c5 00       		.byte	0
 2399 08c6 0F       		.uleb128 0xf
 2400 08c7 EF040000 		.4byte	.LASF135
 2401 08cb 0C       		.byte	0xc
 2402 08cc 3F01     		.2byte	0x13f
 2403 08ce E1080000 		.4byte	0x8e1
 2404 08d2 06       		.byte	0x6
 2405 08d3 0F       		.uleb128 0xf
 2406 08d4 2B090000 		.4byte	.LASF136
 2407 08d8 0C       		.byte	0xc
 2408 08d9 4001     		.2byte	0x140
 2409 08db 50000000 		.4byte	0x50
 2410 08df 0C       		.byte	0xc
 2411 08e0 00       		.byte	0
 2412 08e1 14       		.uleb128 0x14
 2413 08e2 50000000 		.4byte	0x50
 2414 08e6 F1080000 		.4byte	0x8f1
 2415 08ea 15       		.uleb128 0x15
 2416 08eb D7000000 		.4byte	0xd7
 2417 08ef 02       		.byte	0x2
 2418 08f0 00       		.byte	0
 2419 08f1 0D       		.uleb128 0xd
 2420 08f2 D0       		.byte	0xd0
 2421 08f3 0C       		.byte	0xc
 2422 08f4 5702     		.2byte	0x257
 2423 08f6 F2090000 		.4byte	0x9f2
 2424 08fa 0F       		.uleb128 0xf
 2425 08fb 82090000 		.4byte	.LASF137
 2426 08ff 0C       		.byte	0xc
 2427 0900 5902     		.2byte	0x259
 2428 0902 90000000 		.4byte	0x90
 2429 0906 00       		.byte	0
 2430 0907 0F       		.uleb128 0xf
 2431 0908 2D030000 		.4byte	.LASF138
 2432 090c 0C       		.byte	0xc
 2433 090d 5A02     		.2byte	0x25a
 2434 090f BA070000 		.4byte	0x7ba
 2435 0913 04       		.byte	0x4
 2436 0914 0F       		.uleb128 0xf
 2437 0915 B9040000 		.4byte	.LASF139
 2438 0919 0C       		.byte	0xc
 2439 091a 5B02     		.2byte	0x25b
 2440 091c F2090000 		.4byte	0x9f2
 2441 0920 08       		.byte	0x8
 2442 0921 0F       		.uleb128 0xf
 2443 0922 350A0000 		.4byte	.LASF140
 2444 0926 0C       		.byte	0xc
 2445 0927 5C02     		.2byte	0x25c
 2446 0929 ED030000 		.4byte	0x3ed
 2447 092d 24       		.byte	0x24
 2448 092e 0F       		.uleb128 0xf
 2449 092f C8050000 		.4byte	.LASF141
 2450 0933 0C       		.byte	0xc
ARM GAS  /tmp/ccwsohif.s 			page 70


 2451 0934 5D02     		.2byte	0x25d
 2452 0936 89000000 		.4byte	0x89
 2453 093a 48       		.byte	0x48
 2454 093b 0F       		.uleb128 0xf
 2455 093c 32070000 		.4byte	.LASF142
 2456 0940 0C       		.byte	0xc
 2457 0941 5E02     		.2byte	0x25e
 2458 0943 82000000 		.4byte	0x82
 2459 0947 50       		.byte	0x50
 2460 0948 0F       		.uleb128 0xf
 2461 0949 4D0A0000 		.4byte	.LASF143
 2462 094d 0C       		.byte	0xc
 2463 094e 5F02     		.2byte	0x25f
 2464 0950 AC080000 		.4byte	0x8ac
 2465 0954 58       		.byte	0x58
 2466 0955 0F       		.uleb128 0xf
 2467 0956 4C070000 		.4byte	.LASF144
 2468 095a 0C       		.byte	0xc
 2469 095b 6002     		.2byte	0x260
 2470 095d 63030000 		.4byte	0x363
 2471 0961 68       		.byte	0x68
 2472 0962 0F       		.uleb128 0xf
 2473 0963 730A0000 		.4byte	.LASF145
 2474 0967 0C       		.byte	0xc
 2475 0968 6102     		.2byte	0x261
 2476 096a 63030000 		.4byte	0x363
 2477 096e 70       		.byte	0x70
 2478 096f 0F       		.uleb128 0xf
 2479 0970 87010000 		.4byte	.LASF146
 2480 0974 0C       		.byte	0xc
 2481 0975 6202     		.2byte	0x262
 2482 0977 63030000 		.4byte	0x363
 2483 097b 78       		.byte	0x78
 2484 097c 0F       		.uleb128 0xf
 2485 097d D5090000 		.4byte	.LASF147
 2486 0981 0C       		.byte	0xc
 2487 0982 6302     		.2byte	0x263
 2488 0984 020A0000 		.4byte	0xa02
 2489 0988 80       		.byte	0x80
 2490 0989 0F       		.uleb128 0xf
 2491 098a AD040000 		.4byte	.LASF148
 2492 098e 0C       		.byte	0xc
 2493 098f 6402     		.2byte	0x264
 2494 0991 120A0000 		.4byte	0xa12
 2495 0995 88       		.byte	0x88
 2496 0996 0F       		.uleb128 0xf
 2497 0997 A2000000 		.4byte	.LASF149
 2498 099b 0C       		.byte	0xc
 2499 099c 6502     		.2byte	0x265
 2500 099e 89000000 		.4byte	0x89
 2501 09a2 A0       		.byte	0xa0
 2502 09a3 0F       		.uleb128 0xf
 2503 09a4 3A030000 		.4byte	.LASF150
 2504 09a8 0C       		.byte	0xc
 2505 09a9 6602     		.2byte	0x266
 2506 09ab 63030000 		.4byte	0x363
 2507 09af A4       		.byte	0xa4
ARM GAS  /tmp/ccwsohif.s 			page 71


 2508 09b0 0F       		.uleb128 0xf
 2509 09b1 6D010000 		.4byte	.LASF151
 2510 09b5 0C       		.byte	0xc
 2511 09b6 6702     		.2byte	0x267
 2512 09b8 63030000 		.4byte	0x363
 2513 09bc AC       		.byte	0xac
 2514 09bd 0F       		.uleb128 0xf
 2515 09be 48030000 		.4byte	.LASF152
 2516 09c2 0C       		.byte	0xc
 2517 09c3 6802     		.2byte	0x268
 2518 09c5 63030000 		.4byte	0x363
 2519 09c9 B4       		.byte	0xb4
 2520 09ca 0F       		.uleb128 0xf
 2521 09cb DD000000 		.4byte	.LASF153
 2522 09cf 0C       		.byte	0xc
 2523 09d0 6902     		.2byte	0x269
 2524 09d2 63030000 		.4byte	0x363
 2525 09d6 BC       		.byte	0xbc
 2526 09d7 0F       		.uleb128 0xf
 2527 09d8 EC000000 		.4byte	.LASF154
 2528 09dc 0C       		.byte	0xc
 2529 09dd 6A02     		.2byte	0x26a
 2530 09df 63030000 		.4byte	0x363
 2531 09e3 C4       		.byte	0xc4
 2532 09e4 0F       		.uleb128 0xf
 2533 09e5 77060000 		.4byte	.LASF155
 2534 09e9 0C       		.byte	0xc
 2535 09ea 6B02     		.2byte	0x26b
 2536 09ec 89000000 		.4byte	0x89
 2537 09f0 CC       		.byte	0xcc
 2538 09f1 00       		.byte	0
 2539 09f2 14       		.uleb128 0x14
 2540 09f3 C0070000 		.4byte	0x7c0
 2541 09f7 020A0000 		.4byte	0xa02
 2542 09fb 15       		.uleb128 0x15
 2543 09fc D7000000 		.4byte	0xd7
 2544 0a00 19       		.byte	0x19
 2545 0a01 00       		.byte	0
 2546 0a02 14       		.uleb128 0x14
 2547 0a03 C0070000 		.4byte	0x7c0
 2548 0a07 120A0000 		.4byte	0xa12
 2549 0a0b 15       		.uleb128 0x15
 2550 0a0c D7000000 		.4byte	0xd7
 2551 0a10 07       		.byte	0x7
 2552 0a11 00       		.byte	0
 2553 0a12 14       		.uleb128 0x14
 2554 0a13 C0070000 		.4byte	0x7c0
 2555 0a17 220A0000 		.4byte	0xa22
 2556 0a1b 15       		.uleb128 0x15
 2557 0a1c D7000000 		.4byte	0xd7
 2558 0a20 17       		.byte	0x17
 2559 0a21 00       		.byte	0
 2560 0a22 0D       		.uleb128 0xd
 2561 0a23 F0       		.byte	0xf0
 2562 0a24 0C       		.byte	0xc
 2563 0a25 7002     		.2byte	0x270
 2564 0a27 460A0000 		.4byte	0xa46
ARM GAS  /tmp/ccwsohif.s 			page 72


 2565 0a2b 0F       		.uleb128 0xf
 2566 0a2c D4040000 		.4byte	.LASF156
 2567 0a30 0C       		.byte	0xc
 2568 0a31 7302     		.2byte	0x273
 2569 0a33 460A0000 		.4byte	0xa46
 2570 0a37 00       		.byte	0
 2571 0a38 0F       		.uleb128 0xf
 2572 0a39 24050000 		.4byte	.LASF157
 2573 0a3d 0C       		.byte	0xc
 2574 0a3e 7402     		.2byte	0x274
 2575 0a40 560A0000 		.4byte	0xa56
 2576 0a44 78       		.byte	0x78
 2577 0a45 00       		.byte	0
 2578 0a46 14       		.uleb128 0x14
 2579 0a47 2F050000 		.4byte	0x52f
 2580 0a4b 560A0000 		.4byte	0xa56
 2581 0a4f 15       		.uleb128 0x15
 2582 0a50 D7000000 		.4byte	0xd7
 2583 0a54 1D       		.byte	0x1d
 2584 0a55 00       		.byte	0
 2585 0a56 14       		.uleb128 0x14
 2586 0a57 90000000 		.4byte	0x90
 2587 0a5b 660A0000 		.4byte	0xa66
 2588 0a5f 15       		.uleb128 0x15
 2589 0a60 D7000000 		.4byte	0xd7
 2590 0a64 1D       		.byte	0x1d
 2591 0a65 00       		.byte	0
 2592 0a66 23       		.uleb128 0x23
 2593 0a67 F0       		.byte	0xf0
 2594 0a68 0C       		.byte	0xc
 2595 0a69 5502     		.2byte	0x255
 2596 0a6b 880A0000 		.4byte	0xa88
 2597 0a6f 24       		.uleb128 0x24
 2598 0a70 AD070000 		.4byte	.LASF106
 2599 0a74 0C       		.byte	0xc
 2600 0a75 6C02     		.2byte	0x26c
 2601 0a77 F1080000 		.4byte	0x8f1
 2602 0a7b 24       		.uleb128 0x24
 2603 0a7c 170A0000 		.4byte	.LASF158
 2604 0a80 0C       		.byte	0xc
 2605 0a81 7502     		.2byte	0x275
 2606 0a83 220A0000 		.4byte	0xa22
 2607 0a87 00       		.byte	0
 2608 0a88 14       		.uleb128 0x14
 2609 0a89 C0070000 		.4byte	0x7c0
 2610 0a8d 980A0000 		.4byte	0xa98
 2611 0a91 15       		.uleb128 0x15
 2612 0a92 D7000000 		.4byte	0xd7
 2613 0a96 18       		.byte	0x18
 2614 0a97 00       		.byte	0
 2615 0a98 25       		.uleb128 0x25
 2616 0a99 A30A0000 		.4byte	0xaa3
 2617 0a9d 1F       		.uleb128 0x1f
 2618 0a9e 7D060000 		.4byte	0x67d
 2619 0aa2 00       		.byte	0
 2620 0aa3 13       		.uleb128 0x13
 2621 0aa4 04       		.byte	0x4
ARM GAS  /tmp/ccwsohif.s 			page 73


 2622 0aa5 980A0000 		.4byte	0xa98
 2623 0aa9 13       		.uleb128 0x13
 2624 0aaa 04       		.byte	0x4
 2625 0aab D7030000 		.4byte	0x3d7
 2626 0aaf 25       		.uleb128 0x25
 2627 0ab0 BA0A0000 		.4byte	0xaba
 2628 0ab4 1F       		.uleb128 0x1f
 2629 0ab5 89000000 		.4byte	0x89
 2630 0ab9 00       		.byte	0
 2631 0aba 13       		.uleb128 0x13
 2632 0abb 04       		.byte	0x4
 2633 0abc C00A0000 		.4byte	0xac0
 2634 0ac0 13       		.uleb128 0x13
 2635 0ac1 04       		.byte	0x4
 2636 0ac2 AF0A0000 		.4byte	0xaaf
 2637 0ac6 14       		.uleb128 0x14
 2638 0ac7 5F080000 		.4byte	0x85f
 2639 0acb D60A0000 		.4byte	0xad6
 2640 0acf 15       		.uleb128 0x15
 2641 0ad0 D7000000 		.4byte	0xd7
 2642 0ad4 02       		.byte	0x2
 2643 0ad5 00       		.byte	0
 2644 0ad6 07       		.uleb128 0x7
 2645 0ad7 A8030000 		.4byte	.LASF159
 2646 0adb 0C       		.byte	0xc
 2647 0adc FD02     		.2byte	0x2fd
 2648 0ade 7D060000 		.4byte	0x67d
 2649 0ae2 07       		.uleb128 0x7
 2650 0ae3 4F090000 		.4byte	.LASF160
 2651 0ae7 0C       		.byte	0xc
 2652 0ae8 FE02     		.2byte	0x2fe
 2653 0aea 83060000 		.4byte	0x683
 2654 0aee 08       		.uleb128 0x8
 2655 0aef B3050000 		.4byte	.LASF161
 2656 0af3 0D       		.byte	0xd
 2657 0af4 5F       		.byte	0x5f
 2658 0af5 BA070000 		.4byte	0x7ba
 2659 0af9 02       		.uleb128 0x2
 2660 0afa 08       		.byte	0x8
 2661 0afb 04       		.byte	0x4
 2662 0afc BB0A0000 		.4byte	.LASF162
 2663 0b00 02       		.uleb128 0x2
 2664 0b01 08       		.byte	0x8
 2665 0b02 04       		.byte	0x4
 2666 0b03 35000000 		.4byte	.LASF163
 2667 0b07 26       		.uleb128 0x26
 2668 0b08 3E090000 		.4byte	.LASF235
 2669 0b0c 01       		.byte	0x1
 2670 0b0d 25000000 		.4byte	0x25
 2671 0b11 0E       		.byte	0xe
 2672 0b12 9902     		.2byte	0x299
 2673 0b14 310B0000 		.4byte	0xb31
 2674 0b18 27       		.uleb128 0x27
 2675 0b19 74090000 		.4byte	.LASF164
 2676 0b1d 7F       		.sleb128 -1
 2677 0b1e 0A       		.uleb128 0xa
 2678 0b1f 97020000 		.4byte	.LASF165
ARM GAS  /tmp/ccwsohif.s 			page 74


 2679 0b23 00       		.byte	0
 2680 0b24 0A       		.uleb128 0xa
 2681 0b25 53000000 		.4byte	.LASF166
 2682 0b29 01       		.byte	0x1
 2683 0b2a 0A       		.uleb128 0xa
 2684 0b2b 2A010000 		.4byte	.LASF167
 2685 0b2f 02       		.byte	0x2
 2686 0b30 00       		.byte	0
 2687 0b31 07       		.uleb128 0x7
 2688 0b32 58010000 		.4byte	.LASF168
 2689 0b36 0E       		.byte	0xe
 2690 0b37 A402     		.2byte	0x2a4
 2691 0b39 070B0000 		.4byte	0xb07
 2692 0b3d 14       		.uleb128 0x14
 2693 0b3e F6070000 		.4byte	0x7f6
 2694 0b42 480B0000 		.4byte	0xb48
 2695 0b46 28       		.uleb128 0x28
 2696 0b47 00       		.byte	0
 2697 0b48 05       		.uleb128 0x5
 2698 0b49 3D0B0000 		.4byte	0xb3d
 2699 0b4d 08       		.uleb128 0x8
 2700 0b4e DD020000 		.4byte	.LASF169
 2701 0b52 0F       		.byte	0xf
 2702 0b53 14       		.byte	0x14
 2703 0b54 480B0000 		.4byte	0xb48
 2704 0b58 08       		.uleb128 0x8
 2705 0b59 BA060000 		.4byte	.LASF170
 2706 0b5d 0F       		.byte	0xf
 2707 0b5e 15       		.byte	0x15
 2708 0b5f 89000000 		.4byte	0x89
 2709 0b63 14       		.uleb128 0x14
 2710 0b64 A7000000 		.4byte	0xa7
 2711 0b68 730B0000 		.4byte	0xb73
 2712 0b6c 15       		.uleb128 0x15
 2713 0b6d D7000000 		.4byte	0xd7
 2714 0b71 0F       		.byte	0xf
 2715 0b72 00       		.byte	0
 2716 0b73 05       		.uleb128 0x5
 2717 0b74 630B0000 		.4byte	0xb63
 2718 0b78 06       		.uleb128 0x6
 2719 0b79 730B0000 		.4byte	0xb73
 2720 0b7d 29       		.uleb128 0x29
 2721 0b7e 11080000 		.4byte	.LASF171
 2722 0b82 01       		.byte	0x1
 2723 0b83 C2       		.byte	0xc2
 2724 0b84 780B0000 		.4byte	0xb78
 2725 0b88 05       		.uleb128 0x5
 2726 0b89 03       		.byte	0x3
 2727 0b8a 00000000 		.4byte	APBAHBPrescTable
 2728 0b8e 14       		.uleb128 0x14
 2729 0b8f A7000000 		.4byte	0xa7
 2730 0b93 9E0B0000 		.4byte	0xb9e
 2731 0b97 15       		.uleb128 0x15
 2732 0b98 D7000000 		.4byte	0xd7
 2733 0b9c 03       		.byte	0x3
 2734 0b9d 00       		.byte	0
 2735 0b9e 05       		.uleb128 0x5
ARM GAS  /tmp/ccwsohif.s 			page 75


 2736 0b9f 8E0B0000 		.4byte	0xb8e
 2737 0ba3 06       		.uleb128 0x6
 2738 0ba4 9E0B0000 		.4byte	0xb9e
 2739 0ba8 29       		.uleb128 0x29
 2740 0ba9 F5040000 		.4byte	.LASF172
 2741 0bad 01       		.byte	0x1
 2742 0bae C3       		.byte	0xc3
 2743 0baf A30B0000 		.4byte	0xba3
 2744 0bb3 05       		.uleb128 0x5
 2745 0bb4 03       		.byte	0x3
 2746 0bb5 10000000 		.4byte	ADCPrescTable
 2747 0bb9 2A       		.uleb128 0x2a
 2748 0bba FD000000 		.4byte	.LASF179
 2749 0bbe 07       		.byte	0x7
 2750 0bbf C402     		.2byte	0x2c4
 2751 0bc1 88030000 		.4byte	.LFB95
 2752 0bc5 0C000000 		.4byte	.LFE95-.LFB95
 2753 0bc9 01       		.uleb128 0x1
 2754 0bca 9C       		.byte	0x9c
 2755 0bcb DE0B0000 		.4byte	0xbde
 2756 0bcf 2B       		.uleb128 0x2b
 2757 0bd0 B8010000 		.4byte	.LASF173
 2758 0bd4 01       		.byte	0x1
 2759 0bd5 A905     		.2byte	0x5a9
 2760 0bd7 97000000 		.4byte	0x97
 2761 0bdb 01       		.uleb128 0x1
 2762 0bdc 50       		.byte	0x50
 2763 0bdd 00       		.byte	0
 2764 0bde 2C       		.uleb128 0x2c
 2765 0bdf B5080000 		.4byte	.LASF175
 2766 0be3 07       		.byte	0x7
 2767 0be4 C302     		.2byte	0x2c3
 2768 0be6 1B010000 		.4byte	0x11b
 2769 0bea 74030000 		.4byte	.LFB94
 2770 0bee 14000000 		.4byte	.LFE94-.LFB94
 2771 0bf2 01       		.uleb128 0x1
 2772 0bf3 9C       		.byte	0x9c
 2773 0bf4 190C0000 		.4byte	0xc19
 2774 0bf8 2D       		.uleb128 0x2d
 2775 0bf9 B8010000 		.4byte	.LASF173
 2776 0bfd 01       		.byte	0x1
 2777 0bfe 7B05     		.2byte	0x57b
 2778 0c00 97000000 		.4byte	0x97
 2779 0c04 00000000 		.4byte	.LLST31
 2780 0c08 2E       		.uleb128 0x2e
 2781 0c09 DA030000 		.4byte	.LASF174
 2782 0c0d 01       		.byte	0x1
 2783 0c0e 7D05     		.2byte	0x57d
 2784 0c10 1B010000 		.4byte	0x11b
 2785 0c14 21000000 		.4byte	.LLST32
 2786 0c18 00       		.byte	0
 2787 0c19 2F       		.uleb128 0x2f
 2788 0c1a 9C0A0000 		.4byte	.LASF230
 2789 0c1e 07       		.byte	0x7
 2790 0c1f C202     		.2byte	0x2c2
 2791 0c21 62030000 		.4byte	.LFB93
 2792 0c25 12000000 		.4byte	.LFE93-.LFB93
ARM GAS  /tmp/ccwsohif.s 			page 76


 2793 0c29 01       		.uleb128 0x1
 2794 0c2a 9C       		.byte	0x9c
 2795 0c2b 2C       		.uleb128 0x2c
 2796 0c2c E2080000 		.4byte	.LASF176
 2797 0c30 07       		.byte	0x7
 2798 0c31 C102     		.2byte	0x2c1
 2799 0c33 0F010000 		.4byte	0x10f
 2800 0c37 08030000 		.4byte	.LFB92
 2801 0c3b 28000000 		.4byte	.LFE92-.LFB92
 2802 0c3f 01       		.uleb128 0x1
 2803 0c40 9C       		.byte	0x9c
 2804 0c41 860C0000 		.4byte	0xc86
 2805 0c45 2D       		.uleb128 0x2d
 2806 0c46 F8020000 		.4byte	.LASF177
 2807 0c4a 01       		.byte	0x1
 2808 0c4b 2F05     		.2byte	0x52f
 2809 0c4d 97000000 		.4byte	0x97
 2810 0c51 60000000 		.4byte	.LLST25
 2811 0c55 30       		.uleb128 0x30
 2812 0c56 746D7000 		.ascii	"tmp\000"
 2813 0c5a 01       		.byte	0x1
 2814 0c5b 3105     		.2byte	0x531
 2815 0c5d C7000000 		.4byte	0xc7
 2816 0c61 8C000000 		.4byte	.LLST26
 2817 0c65 2E       		.uleb128 0x2e
 2818 0c66 49000000 		.4byte	.LASF178
 2819 0c6a 01       		.byte	0x1
 2820 0c6b 3205     		.2byte	0x532
 2821 0c6d C7000000 		.4byte	0xc7
 2822 0c71 F9000000 		.4byte	.LLST27
 2823 0c75 2E       		.uleb128 0x2e
 2824 0c76 DA030000 		.4byte	.LASF174
 2825 0c7a 01       		.byte	0x1
 2826 0c7b 3305     		.2byte	0x533
 2827 0c7d 0F010000 		.4byte	0x10f
 2828 0c81 2F010000 		.4byte	.LLST28
 2829 0c85 00       		.byte	0
 2830 0c86 2A       		.uleb128 0x2a
 2831 0c87 B8000000 		.4byte	.LASF180
 2832 0c8b 07       		.byte	0x7
 2833 0c8c C002     		.2byte	0x2c0
 2834 0c8e FC020000 		.4byte	.LFB91
 2835 0c92 0C000000 		.4byte	.LFE91-.LFB91
 2836 0c96 01       		.uleb128 0x1
 2837 0c97 9C       		.byte	0x9c
 2838 0c98 AB0C0000 		.4byte	0xcab
 2839 0c9c 2B       		.uleb128 0x2b
 2840 0c9d FF070000 		.4byte	.LASF181
 2841 0ca1 01       		.byte	0x1
 2842 0ca2 0305     		.2byte	0x503
 2843 0ca4 97000000 		.4byte	0x97
 2844 0ca8 01       		.uleb128 0x1
 2845 0ca9 50       		.byte	0x50
 2846 0caa 00       		.byte	0
 2847 0cab 2A       		.uleb128 0x2a
 2848 0cac 4A050000 		.4byte	.LASF182
 2849 0cb0 07       		.byte	0x7
ARM GAS  /tmp/ccwsohif.s 			page 77


 2850 0cb1 BF02     		.2byte	0x2bf
 2851 0cb3 F0020000 		.4byte	.LFB90
 2852 0cb7 0C000000 		.4byte	.LFE90-.LFB90
 2853 0cbb 01       		.uleb128 0x1
 2854 0cbc 9C       		.byte	0x9c
 2855 0cbd D00C0000 		.4byte	0xcd0
 2856 0cc1 2B       		.uleb128 0x2b
 2857 0cc2 11030000 		.4byte	.LASF183
 2858 0cc6 01       		.byte	0x1
 2859 0cc7 E304     		.2byte	0x4e3
 2860 0cc9 41010000 		.4byte	0x141
 2861 0ccd 01       		.uleb128 0x1
 2862 0cce 50       		.byte	0x50
 2863 0ccf 00       		.byte	0
 2864 0cd0 2A       		.uleb128 0x2a
 2865 0cd1 1A030000 		.4byte	.LASF184
 2866 0cd5 07       		.byte	0x7
 2867 0cd6 BE02     		.2byte	0x2be
 2868 0cd8 E4020000 		.4byte	.LFB89
 2869 0cdc 0C000000 		.4byte	.LFE89-.LFB89
 2870 0ce0 01       		.uleb128 0x1
 2871 0ce1 9C       		.byte	0x9c
 2872 0ce2 F50C0000 		.4byte	0xcf5
 2873 0ce6 2B       		.uleb128 0x2b
 2874 0ce7 11030000 		.4byte	.LASF183
 2875 0ceb 01       		.byte	0x1
 2876 0cec D604     		.2byte	0x4d6
 2877 0cee 41010000 		.4byte	0x141
 2878 0cf2 01       		.uleb128 0x1
 2879 0cf3 50       		.byte	0x50
 2880 0cf4 00       		.byte	0
 2881 0cf5 2A       		.uleb128 0x2a
 2882 0cf6 C6000000 		.4byte	.LASF185
 2883 0cfa 07       		.byte	0x7
 2884 0cfb BD02     		.2byte	0x2bd
 2885 0cfd C8020000 		.4byte	.LFB88
 2886 0d01 1C000000 		.4byte	.LFE88-.LFB88
 2887 0d05 01       		.uleb128 0x1
 2888 0d06 9C       		.byte	0x9c
 2889 0d07 2A0D0000 		.4byte	0xd2a
 2890 0d0b 2D       		.uleb128 0x2d
 2891 0d0c CF010000 		.4byte	.LASF186
 2892 0d10 01       		.byte	0x1
 2893 0d11 C104     		.2byte	0x4c1
 2894 0d13 C7000000 		.4byte	0xc7
 2895 0d17 7E010000 		.4byte	.LLST24
 2896 0d1b 2B       		.uleb128 0x2b
 2897 0d1c 11030000 		.4byte	.LASF183
 2898 0d20 01       		.byte	0x1
 2899 0d21 C104     		.2byte	0x4c1
 2900 0d23 41010000 		.4byte	0x141
 2901 0d27 01       		.uleb128 0x1
 2902 0d28 51       		.byte	0x51
 2903 0d29 00       		.byte	0
 2904 0d2a 2A       		.uleb128 0x2a
 2905 0d2b D7050000 		.4byte	.LASF187
 2906 0d2f 07       		.byte	0x7
ARM GAS  /tmp/ccwsohif.s 			page 78


 2907 0d30 BC02     		.2byte	0x2bc
 2908 0d32 AC020000 		.4byte	.LFB87
 2909 0d36 1C000000 		.4byte	.LFE87-.LFB87
 2910 0d3a 01       		.uleb128 0x1
 2911 0d3b 9C       		.byte	0x9c
 2912 0d3c 5F0D0000 		.4byte	0xd5f
 2913 0d40 2D       		.uleb128 0x2d
 2914 0d41 1C090000 		.4byte	.LASF188
 2915 0d45 01       		.byte	0x1
 2916 0d46 A204     		.2byte	0x4a2
 2917 0d48 C7000000 		.4byte	0xc7
 2918 0d4c B8010000 		.4byte	.LLST23
 2919 0d50 2B       		.uleb128 0x2b
 2920 0d51 11030000 		.4byte	.LASF183
 2921 0d55 01       		.byte	0x1
 2922 0d56 A204     		.2byte	0x4a2
 2923 0d58 41010000 		.4byte	0x141
 2924 0d5c 01       		.uleb128 0x1
 2925 0d5d 51       		.byte	0x51
 2926 0d5e 00       		.byte	0
 2927 0d5f 2A       		.uleb128 0x2a
 2928 0d60 9B090000 		.4byte	.LASF189
 2929 0d64 07       		.byte	0x7
 2930 0d65 B602     		.2byte	0x2b6
 2931 0d67 90020000 		.4byte	.LFB86
 2932 0d6b 1C000000 		.4byte	.LFE86-.LFB86
 2933 0d6f 01       		.uleb128 0x1
 2934 0d70 9C       		.byte	0x9c
 2935 0d71 940D0000 		.4byte	0xd94
 2936 0d75 2D       		.uleb128 0x2d
 2937 0d76 CF010000 		.4byte	.LASF186
 2938 0d7a 01       		.byte	0x1
 2939 0d7b 6704     		.2byte	0x467
 2940 0d7d C7000000 		.4byte	0xc7
 2941 0d81 F2010000 		.4byte	.LLST22
 2942 0d85 2B       		.uleb128 0x2b
 2943 0d86 11030000 		.4byte	.LASF183
 2944 0d8a 01       		.byte	0x1
 2945 0d8b 6704     		.2byte	0x467
 2946 0d8d 41010000 		.4byte	0x141
 2947 0d91 01       		.uleb128 0x1
 2948 0d92 51       		.byte	0x51
 2949 0d93 00       		.byte	0
 2950 0d94 2A       		.uleb128 0x2a
 2951 0d95 81000000 		.4byte	.LASF190
 2952 0d99 07       		.byte	0x7
 2953 0d9a B502     		.2byte	0x2b5
 2954 0d9c 74020000 		.4byte	.LFB85
 2955 0da0 1C000000 		.4byte	.LFE85-.LFB85
 2956 0da4 01       		.uleb128 0x1
 2957 0da5 9C       		.byte	0x9c
 2958 0da6 C90D0000 		.4byte	0xdc9
 2959 0daa 2D       		.uleb128 0x2d
 2960 0dab 1C090000 		.4byte	.LASF188
 2961 0daf 01       		.byte	0x1
 2962 0db0 4804     		.2byte	0x448
 2963 0db2 C7000000 		.4byte	0xc7
ARM GAS  /tmp/ccwsohif.s 			page 79


 2964 0db6 2C020000 		.4byte	.LLST21
 2965 0dba 2B       		.uleb128 0x2b
 2966 0dbb 11030000 		.4byte	.LASF183
 2967 0dbf 01       		.byte	0x1
 2968 0dc0 4804     		.2byte	0x448
 2969 0dc2 41010000 		.4byte	0x141
 2970 0dc6 01       		.uleb128 0x1
 2971 0dc7 51       		.byte	0x51
 2972 0dc8 00       		.byte	0
 2973 0dc9 2A       		.uleb128 0x2a
 2974 0dca 860A0000 		.4byte	.LASF191
 2975 0dce 07       		.byte	0x7
 2976 0dcf B402     		.2byte	0x2b4
 2977 0dd1 58020000 		.4byte	.LFB84
 2978 0dd5 1C000000 		.4byte	.LFE84-.LFB84
 2979 0dd9 01       		.uleb128 0x1
 2980 0dda 9C       		.byte	0x9c
 2981 0ddb FE0D0000 		.4byte	0xdfe
 2982 0ddf 2D       		.uleb128 0x2d
 2983 0de0 65050000 		.4byte	.LASF192
 2984 0de4 01       		.byte	0x1
 2985 0de5 2904     		.2byte	0x429
 2986 0de7 C7000000 		.4byte	0xc7
 2987 0deb 66020000 		.4byte	.LLST20
 2988 0def 2B       		.uleb128 0x2b
 2989 0df0 11030000 		.4byte	.LASF183
 2990 0df4 01       		.byte	0x1
 2991 0df5 2904     		.2byte	0x429
 2992 0df7 41010000 		.4byte	0x141
 2993 0dfb 01       		.uleb128 0x1
 2994 0dfc 51       		.byte	0x51
 2995 0dfd 00       		.byte	0
 2996 0dfe 2A       		.uleb128 0x2a
 2997 0dff 46080000 		.4byte	.LASF193
 2998 0e03 07       		.byte	0x7
 2999 0e04 B302     		.2byte	0x2b3
 3000 0e06 A8010000 		.4byte	.LFB83
 3001 0e0a B0000000 		.4byte	.LFE83-.LFB83
 3002 0e0e 01       		.uleb128 0x1
 3003 0e0f 9C       		.byte	0x9c
 3004 0e10 630E0000 		.4byte	0xe63
 3005 0e14 2B       		.uleb128 0x2b
 3006 0e15 7C010000 		.4byte	.LASF194
 3007 0e19 01       		.byte	0x1
 3008 0e1a 8D03     		.2byte	0x38d
 3009 0e1c 630E0000 		.4byte	0xe63
 3010 0e20 01       		.uleb128 0x1
 3011 0e21 50       		.byte	0x50
 3012 0e22 30       		.uleb128 0x30
 3013 0e23 746D7000 		.ascii	"tmp\000"
 3014 0e27 01       		.byte	0x1
 3015 0e28 8F03     		.2byte	0x38f
 3016 0e2a C7000000 		.4byte	0xc7
 3017 0e2e A0020000 		.4byte	.LLST16
 3018 0e32 2E       		.uleb128 0x2e
 3019 0e33 1C050000 		.4byte	.LASF195
 3020 0e37 01       		.byte	0x1
ARM GAS  /tmp/ccwsohif.s 			page 80


 3021 0e38 8F03     		.2byte	0x38f
 3022 0e3a C7000000 		.4byte	0xc7
 3023 0e3e 5E030000 		.4byte	.LLST17
 3024 0e42 2E       		.uleb128 0x2e
 3025 0e43 C20A0000 		.4byte	.LASF196
 3026 0e47 01       		.byte	0x1
 3027 0e48 8F03     		.2byte	0x38f
 3028 0e4a C7000000 		.4byte	0xc7
 3029 0e4e A5030000 		.4byte	.LLST18
 3030 0e52 2E       		.uleb128 0x2e
 3031 0e53 6B040000 		.4byte	.LASF197
 3032 0e57 01       		.byte	0x1
 3033 0e58 8F03     		.2byte	0x38f
 3034 0e5a C7000000 		.4byte	0xc7
 3035 0e5e E7030000 		.4byte	.LLST19
 3036 0e62 00       		.byte	0
 3037 0e63 13       		.uleb128 0x13
 3038 0e64 04       		.byte	0x4
 3039 0e65 4F020000 		.4byte	0x24f
 3040 0e69 2A       		.uleb128 0x2a
 3041 0e6a 2D050000 		.4byte	.LASF198
 3042 0e6e 07       		.byte	0x7
 3043 0e6f B202     		.2byte	0x2b2
 3044 0e71 9C010000 		.4byte	.LFB82
 3045 0e75 0C000000 		.4byte	.LFE82-.LFB82
 3046 0e79 01       		.uleb128 0x1
 3047 0e7a 9C       		.byte	0x9c
 3048 0e7b 8E0E0000 		.4byte	0xe8e
 3049 0e7f 2B       		.uleb128 0x2b
 3050 0e80 11030000 		.4byte	.LASF183
 3051 0e84 01       		.byte	0x1
 3052 0e85 7E03     		.2byte	0x37e
 3053 0e87 41010000 		.4byte	0x141
 3054 0e8b 01       		.uleb128 0x1
 3055 0e8c 50       		.byte	0x50
 3056 0e8d 00       		.byte	0
 3057 0e8e 2A       		.uleb128 0x2a
 3058 0e8f 520A0000 		.4byte	.LASF199
 3059 0e93 07       		.byte	0x7
 3060 0e94 B102     		.2byte	0x2b1
 3061 0e96 8C010000 		.4byte	.LFB81
 3062 0e9a 10000000 		.4byte	.LFE81-.LFB81
 3063 0e9e 01       		.uleb128 0x1
 3064 0e9f 9C       		.byte	0x9c
 3065 0ea0 B50E0000 		.4byte	0xeb5
 3066 0ea4 2D       		.uleb128 0x2d
 3067 0ea5 71040000 		.4byte	.LASF200
 3068 0ea9 01       		.byte	0x1
 3069 0eaa 7003     		.2byte	0x370
 3070 0eac C7000000 		.4byte	0xc7
 3071 0eb0 47040000 		.4byte	.LLST15
 3072 0eb4 00       		.byte	0
 3073 0eb5 2A       		.uleb128 0x2a
 3074 0eb6 27060000 		.4byte	.LASF201
 3075 0eba 07       		.byte	0x7
 3076 0ebb B002     		.2byte	0x2b0
 3077 0ebd 80010000 		.4byte	.LFB80
ARM GAS  /tmp/ccwsohif.s 			page 81


 3078 0ec1 0C000000 		.4byte	.LFE80-.LFB80
 3079 0ec5 01       		.uleb128 0x1
 3080 0ec6 9C       		.byte	0x9c
 3081 0ec7 DA0E0000 		.4byte	0xeda
 3082 0ecb 2B       		.uleb128 0x2b
 3083 0ecc 11030000 		.4byte	.LASF183
 3084 0ed0 01       		.byte	0x1
 3085 0ed1 5F03     		.2byte	0x35f
 3086 0ed3 41010000 		.4byte	0x141
 3087 0ed7 01       		.uleb128 0x1
 3088 0ed8 50       		.byte	0x50
 3089 0ed9 00       		.byte	0
 3090 0eda 2A       		.uleb128 0x2a
 3091 0edb EA020000 		.4byte	.LASF202
 3092 0edf 07       		.byte	0x7
 3093 0ee0 AF02     		.2byte	0x2af
 3094 0ee2 58010000 		.4byte	.LFB79
 3095 0ee6 28000000 		.4byte	.LFE79-.LFB79
 3096 0eea 01       		.uleb128 0x1
 3097 0eeb 9C       		.byte	0x9c
 3098 0eec FF0E0000 		.4byte	0xeff
 3099 0ef0 2B       		.uleb128 0x2b
 3100 0ef1 1D000000 		.4byte	.LASF203
 3101 0ef5 01       		.byte	0x1
 3102 0ef6 3E03     		.2byte	0x33e
 3103 0ef8 97000000 		.4byte	0x97
 3104 0efc 01       		.uleb128 0x1
 3105 0efd 50       		.byte	0x50
 3106 0efe 00       		.byte	0
 3107 0eff 2A       		.uleb128 0x2a
 3108 0f00 5C060000 		.4byte	.LASF204
 3109 0f04 07       		.byte	0x7
 3110 0f05 A802     		.2byte	0x2a8
 3111 0f07 44010000 		.4byte	.LFB78
 3112 0f0b 14000000 		.4byte	.LFE78-.LFB78
 3113 0f0f 01       		.uleb128 0x1
 3114 0f10 9C       		.byte	0x9c
 3115 0f11 360F0000 		.4byte	0xf36
 3116 0f15 2D       		.uleb128 0x2d
 3117 0f16 6D060000 		.4byte	.LASF205
 3118 0f1a 01       		.byte	0x1
 3119 0f1b FF02     		.2byte	0x2ff
 3120 0f1d C7000000 		.4byte	0xc7
 3121 0f21 68040000 		.4byte	.LLST13
 3122 0f25 2E       		.uleb128 0x2e
 3123 0f26 0D020000 		.4byte	.LASF206
 3124 0f2a 01       		.byte	0x1
 3125 0f2b 0103     		.2byte	0x301
 3126 0f2d C7000000 		.4byte	0xc7
 3127 0f31 89040000 		.4byte	.LLST14
 3128 0f35 00       		.byte	0
 3129 0f36 2A       		.uleb128 0x2a
 3130 0f37 AA0A0000 		.4byte	.LASF207
 3131 0f3b 07       		.byte	0x7
 3132 0f3c A302     		.2byte	0x2a3
 3133 0f3e 38010000 		.4byte	.LFB77
 3134 0f42 0C000000 		.4byte	.LFE77-.LFB77
ARM GAS  /tmp/ccwsohif.s 			page 82


 3135 0f46 01       		.uleb128 0x1
 3136 0f47 9C       		.byte	0x9c
 3137 0f48 5B0F0000 		.4byte	0xf5b
 3138 0f4c 2B       		.uleb128 0x2b
 3139 0f4d 6B070000 		.4byte	.LASF208
 3140 0f51 01       		.byte	0x1
 3141 0f52 D902     		.2byte	0x2d9
 3142 0f54 C7000000 		.4byte	0xc7
 3143 0f58 01       		.uleb128 0x1
 3144 0f59 50       		.byte	0x50
 3145 0f5a 00       		.byte	0
 3146 0f5b 2A       		.uleb128 0x2a
 3147 0f5c B2090000 		.4byte	.LASF209
 3148 0f60 07       		.byte	0x7
 3149 0f61 A002     		.2byte	0x2a0
 3150 0f63 1C010000 		.4byte	.LFB76
 3151 0f67 1C000000 		.4byte	.LFE76-.LFB76
 3152 0f6b 01       		.uleb128 0x1
 3153 0f6c 9C       		.byte	0x9c
 3154 0f6d 900F0000 		.4byte	0xf90
 3155 0f71 2D       		.uleb128 0x2d
 3156 0f72 B8010000 		.4byte	.LASF173
 3157 0f76 01       		.byte	0x1
 3158 0f77 BD02     		.2byte	0x2bd
 3159 0f79 97000000 		.4byte	0x97
 3160 0f7d B3040000 		.4byte	.LLST12
 3161 0f81 2B       		.uleb128 0x2b
 3162 0f82 11030000 		.4byte	.LASF183
 3163 0f86 01       		.byte	0x1
 3164 0f87 BD02     		.2byte	0x2bd
 3165 0f89 41010000 		.4byte	0x141
 3166 0f8d 01       		.uleb128 0x1
 3167 0f8e 51       		.byte	0x51
 3168 0f8f 00       		.byte	0
 3169 0f90 2A       		.uleb128 0x2a
 3170 0f91 B4070000 		.4byte	.LASF210
 3171 0f95 07       		.byte	0x7
 3172 0f96 9F02     		.2byte	0x29f
 3173 0f98 08010000 		.4byte	.LFB75
 3174 0f9c 14000000 		.4byte	.LFE75-.LFB75
 3175 0fa0 01       		.uleb128 0x1
 3176 0fa1 9C       		.byte	0x9c
 3177 0fa2 C70F0000 		.4byte	0xfc7
 3178 0fa6 2D       		.uleb128 0x2d
 3179 0fa7 0C000000 		.4byte	.LASF211
 3180 0fab 01       		.byte	0x1
 3181 0fac 9502     		.2byte	0x295
 3182 0fae C7000000 		.4byte	0xc7
 3183 0fb2 ED040000 		.4byte	.LLST10
 3184 0fb6 2E       		.uleb128 0x2e
 3185 0fb7 0D020000 		.4byte	.LASF206
 3186 0fbb 01       		.byte	0x1
 3187 0fbc 9702     		.2byte	0x297
 3188 0fbe C7000000 		.4byte	0xc7
 3189 0fc2 0E050000 		.4byte	.LLST11
 3190 0fc6 00       		.byte	0
 3191 0fc7 2A       		.uleb128 0x2a
ARM GAS  /tmp/ccwsohif.s 			page 83


 3192 0fc8 87020000 		.4byte	.LASF212
 3193 0fcc 07       		.byte	0x7
 3194 0fcd 9E02     		.2byte	0x29e
 3195 0fcf F4000000 		.4byte	.LFB74
 3196 0fd3 14000000 		.4byte	.LFE74-.LFB74
 3197 0fd7 01       		.uleb128 0x1
 3198 0fd8 9C       		.byte	0x9c
 3199 0fd9 FE0F0000 		.4byte	0xffe
 3200 0fdd 2D       		.uleb128 0x2d
 3201 0fde 0C000000 		.4byte	.LASF211
 3202 0fe2 01       		.byte	0x1
 3203 0fe3 7B02     		.2byte	0x27b
 3204 0fe5 C7000000 		.4byte	0xc7
 3205 0fe9 38050000 		.4byte	.LLST8
 3206 0fed 2E       		.uleb128 0x2e
 3207 0fee 0D020000 		.4byte	.LASF206
 3208 0ff2 01       		.byte	0x1
 3209 0ff3 7D02     		.2byte	0x27d
 3210 0ff5 C7000000 		.4byte	0xc7
 3211 0ff9 59050000 		.4byte	.LLST9
 3212 0ffd 00       		.byte	0
 3213 0ffe 2A       		.uleb128 0x2a
 3214 0fff AF020000 		.4byte	.LASF213
 3215 1003 07       		.byte	0x7
 3216 1004 9D02     		.2byte	0x29d
 3217 1006 E0000000 		.4byte	.LFB73
 3218 100a 14000000 		.4byte	.LFE73-.LFB73
 3219 100e 01       		.uleb128 0x1
 3220 100f 9C       		.byte	0x9c
 3221 1010 35100000 		.4byte	0x1035
 3222 1014 2D       		.uleb128 0x2d
 3223 1015 3D040000 		.4byte	.LASF214
 3224 1019 01       		.byte	0x1
 3225 101a 6102     		.2byte	0x261
 3226 101c C7000000 		.4byte	0xc7
 3227 1020 83050000 		.4byte	.LLST6
 3228 1024 2E       		.uleb128 0x2e
 3229 1025 0D020000 		.4byte	.LASF206
 3230 1029 01       		.byte	0x1
 3231 102a 6302     		.2byte	0x263
 3232 102c C7000000 		.4byte	0xc7
 3233 1030 A4050000 		.4byte	.LLST7
 3234 1034 00       		.byte	0
 3235 1035 31       		.uleb128 0x31
 3236 1036 94030000 		.4byte	.LASF236
 3237 103a 07       		.byte	0x7
 3238 103b 9C02     		.2byte	0x29c
 3239 103d 97000000 		.4byte	0x97
 3240 1041 D0000000 		.4byte	.LFB72
 3241 1045 10000000 		.4byte	.LFE72-.LFB72
 3242 1049 01       		.uleb128 0x1
 3243 104a 9C       		.byte	0x9c
 3244 104b 2A       		.uleb128 0x2a
 3245 104c CC020000 		.4byte	.LASF215
 3246 1050 07       		.byte	0x7
 3247 1051 9B02     		.2byte	0x29b
 3248 1053 BC000000 		.4byte	.LFB71
ARM GAS  /tmp/ccwsohif.s 			page 84


 3249 1057 14000000 		.4byte	.LFE71-.LFB71
 3250 105b 01       		.uleb128 0x1
 3251 105c 9C       		.byte	0x9c
 3252 105d 82100000 		.4byte	0x1082
 3253 1061 2D       		.uleb128 0x2d
 3254 1062 C4070000 		.4byte	.LASF216
 3255 1066 01       		.byte	0x1
 3256 1067 3502     		.2byte	0x235
 3257 1069 C7000000 		.4byte	0xc7
 3258 106d CE050000 		.4byte	.LLST4
 3259 1071 2E       		.uleb128 0x2e
 3260 1072 0D020000 		.4byte	.LASF206
 3261 1076 01       		.byte	0x1
 3262 1077 3702     		.2byte	0x237
 3263 1079 C7000000 		.4byte	0xc7
 3264 107d EF050000 		.4byte	.LLST5
 3265 1081 00       		.byte	0
 3266 1082 2A       		.uleb128 0x2a
 3267 1083 90070000 		.4byte	.LASF217
 3268 1087 07       		.byte	0x7
 3269 1088 8D02     		.2byte	0x28d
 3270 108a B0000000 		.4byte	.LFB70
 3271 108e 0C000000 		.4byte	.LFE70-.LFB70
 3272 1092 01       		.uleb128 0x1
 3273 1093 9C       		.byte	0x9c
 3274 1094 A7100000 		.4byte	0x10a7
 3275 1098 2B       		.uleb128 0x2b
 3276 1099 11030000 		.4byte	.LASF183
 3277 109d 01       		.byte	0x1
 3278 109e 9201     		.2byte	0x192
 3279 10a0 41010000 		.4byte	0x141
 3280 10a4 01       		.uleb128 0x1
 3281 10a5 50       		.byte	0x50
 3282 10a6 00       		.byte	0
 3283 10a7 2A       		.uleb128 0x2a
 3284 10a8 F1090000 		.4byte	.LASF218
 3285 10ac 07       		.byte	0x7
 3286 10ad 8C02     		.2byte	0x28c
 3287 10af 9C000000 		.4byte	.LFB69
 3288 10b3 14000000 		.4byte	.LFE69-.LFB69
 3289 10b7 01       		.uleb128 0x1
 3290 10b8 9C       		.byte	0x9c
 3291 10b9 EC100000 		.4byte	0x10ec
 3292 10bd 2B       		.uleb128 0x2b
 3293 10be 86030000 		.4byte	.LASF219
 3294 10c2 01       		.byte	0x1
 3295 10c3 7B01     		.2byte	0x17b
 3296 10c5 C7000000 		.4byte	0xc7
 3297 10c9 01       		.uleb128 0x1
 3298 10ca 50       		.byte	0x50
 3299 10cb 2D       		.uleb128 0x2d
 3300 10cc 1F0A0000 		.4byte	.LASF220
 3301 10d0 01       		.byte	0x1
 3302 10d1 7B01     		.2byte	0x17b
 3303 10d3 C7000000 		.4byte	0xc7
 3304 10d7 19060000 		.4byte	.LLST2
 3305 10db 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccwsohif.s 			page 85


 3306 10dc 0D020000 		.4byte	.LASF206
 3307 10e0 01       		.byte	0x1
 3308 10e1 7D01     		.2byte	0x17d
 3309 10e3 C7000000 		.4byte	0xc7
 3310 10e7 3A060000 		.4byte	.LLST3
 3311 10eb 00       		.byte	0
 3312 10ec 2A       		.uleb128 0x2a
 3313 10ed 07090000 		.4byte	.LASF221
 3314 10f1 07       		.byte	0x7
 3315 10f2 8B02     		.2byte	0x28b
 3316 10f4 90000000 		.4byte	.LFB68
 3317 10f8 0C000000 		.4byte	.LFE68-.LFB68
 3318 10fc 01       		.uleb128 0x1
 3319 10fd 9C       		.byte	0x9c
 3320 10fe 11110000 		.4byte	0x1111
 3321 1102 2B       		.uleb128 0x2b
 3322 1103 11030000 		.4byte	.LASF183
 3323 1107 01       		.byte	0x1
 3324 1108 6301     		.2byte	0x163
 3325 110a 41010000 		.4byte	0x141
 3326 110e 01       		.uleb128 0x1
 3327 110f 50       		.byte	0x50
 3328 1110 00       		.byte	0
 3329 1111 2A       		.uleb128 0x2a
 3330 1112 22080000 		.4byte	.LASF222
 3331 1116 07       		.byte	0x7
 3332 1117 8A02     		.2byte	0x28a
 3333 1119 7C000000 		.4byte	.LFB67
 3334 111d 14000000 		.4byte	.LFE67-.LFB67
 3335 1121 01       		.uleb128 0x1
 3336 1122 9C       		.byte	0x9c
 3337 1123 48110000 		.4byte	0x1148
 3338 1127 2D       		.uleb128 0x2d
 3339 1128 7C070000 		.4byte	.LASF223
 3340 112c 01       		.byte	0x1
 3341 112d 4F01     		.2byte	0x14f
 3342 112f 97000000 		.4byte	0x97
 3343 1133 77060000 		.4byte	.LLST0
 3344 1137 2E       		.uleb128 0x2e
 3345 1138 0D020000 		.4byte	.LASF206
 3346 113c 01       		.byte	0x1
 3347 113d 5101     		.2byte	0x151
 3348 113f C7000000 		.4byte	0xc7
 3349 1143 98060000 		.4byte	.LLST1
 3350 1147 00       		.byte	0
 3351 1148 2C       		.uleb128 0x2c
 3352 1149 C4030000 		.4byte	.LASF224
 3353 114d 07       		.byte	0x7
 3354 114e 8902     		.2byte	0x289
 3355 1150 67010000 		.4byte	0x167
 3356 1154 30030000 		.4byte	.LFB66
 3357 1158 32000000 		.4byte	.LFE66-.LFB66
 3358 115c 01       		.uleb128 0x1
 3359 115d 9C       		.byte	0x9c
 3360 115e B6110000 		.4byte	0x11b6
 3361 1162 32       		.uleb128 0x32
 3362 1163 3D070000 		.4byte	.LASF225
ARM GAS  /tmp/ccwsohif.s 			page 86


 3363 1167 01       		.byte	0x1
 3364 1168 3301     		.2byte	0x133
 3365 116a D2000000 		.4byte	0xd2
 3366 116e 02       		.uleb128 0x2
 3367 116f 91       		.byte	0x91
 3368 1170 74       		.sleb128 -12
 3369 1171 2E       		.uleb128 0x2e
 3370 1172 8F090000 		.4byte	.LASF226
 3371 1176 01       		.byte	0x1
 3372 1177 3401     		.2byte	0x134
 3373 1179 67010000 		.4byte	0x167
 3374 117d C2060000 		.4byte	.LLST29
 3375 1181 2E       		.uleb128 0x2e
 3376 1182 12090000 		.4byte	.LASF227
 3377 1186 01       		.byte	0x1
 3378 1187 3501     		.2byte	0x135
 3379 1189 0F010000 		.4byte	0x10f
 3380 118d E7060000 		.4byte	.LLST30
 3381 1191 33       		.uleb128 0x33
 3382 1192 40030000 		.4byte	.LVL112
 3383 1196 2B0C0000 		.4byte	0xc2b
 3384 119a A5110000 		.4byte	0x11a5
 3385 119e 34       		.uleb128 0x34
 3386 119f 01       		.uleb128 0x1
 3387 11a0 50       		.byte	0x50
 3388 11a1 02       		.uleb128 0x2
 3389 11a2 74       		.byte	0x74
 3390 11a3 00       		.sleb128 0
 3391 11a4 00       		.byte	0
 3392 11a5 35       		.uleb128 0x35
 3393 11a6 58030000 		.4byte	.LVL114
 3394 11aa 2B0C0000 		.4byte	0xc2b
 3395 11ae 34       		.uleb128 0x34
 3396 11af 01       		.uleb128 0x1
 3397 11b0 50       		.byte	0x50
 3398 11b1 02       		.uleb128 0x2
 3399 11b2 74       		.byte	0x74
 3400 11b3 00       		.sleb128 0
 3401 11b4 00       		.byte	0
 3402 11b5 00       		.byte	0
 3403 11b6 2A       		.uleb128 0x2a
 3404 11b7 38060000 		.4byte	.LASF228
 3405 11bb 07       		.byte	0x7
 3406 11bc 8802     		.2byte	0x288
 3407 11be 40000000 		.4byte	.LFB65
 3408 11c2 3C000000 		.4byte	.LFE65-.LFB65
 3409 11c6 01       		.uleb128 0x1
 3410 11c7 9C       		.byte	0x9c
 3411 11c8 DB110000 		.4byte	0x11db
 3412 11cc 2B       		.uleb128 0x2b
 3413 11cd D5070000 		.4byte	.LASF229
 3414 11d1 01       		.byte	0x1
 3415 11d2 0F01     		.2byte	0x10f
 3416 11d4 C7000000 		.4byte	0xc7
 3417 11d8 01       		.uleb128 0x1
 3418 11d9 50       		.byte	0x50
 3419 11da 00       		.byte	0
ARM GAS  /tmp/ccwsohif.s 			page 87


 3420 11db 2F       		.uleb128 0x2f
 3421 11dc 8B080000 		.4byte	.LASF231
 3422 11e0 07       		.byte	0x7
 3423 11e1 8702     		.2byte	0x287
 3424 11e3 00000000 		.4byte	.LFB64
 3425 11e7 40000000 		.4byte	.LFE64-.LFB64
 3426 11eb 01       		.uleb128 0x1
 3427 11ec 9C       		.byte	0x9c
 3428 11ed 00       		.byte	0
 3429              		.section	.debug_abbrev,"",%progbits
 3430              	.Ldebug_abbrev0:
 3431 0000 01       		.uleb128 0x1
 3432 0001 11       		.uleb128 0x11
 3433 0002 01       		.byte	0x1
 3434 0003 25       		.uleb128 0x25
 3435 0004 0E       		.uleb128 0xe
 3436 0005 13       		.uleb128 0x13
 3437 0006 0B       		.uleb128 0xb
 3438 0007 03       		.uleb128 0x3
 3439 0008 0E       		.uleb128 0xe
 3440 0009 1B       		.uleb128 0x1b
 3441 000a 0E       		.uleb128 0xe
 3442 000b 11       		.uleb128 0x11
 3443 000c 01       		.uleb128 0x1
 3444 000d 12       		.uleb128 0x12
 3445 000e 06       		.uleb128 0x6
 3446 000f 10       		.uleb128 0x10
 3447 0010 17       		.uleb128 0x17
 3448 0011 00       		.byte	0
 3449 0012 00       		.byte	0
 3450 0013 02       		.uleb128 0x2
 3451 0014 24       		.uleb128 0x24
 3452 0015 00       		.byte	0
 3453 0016 0B       		.uleb128 0xb
 3454 0017 0B       		.uleb128 0xb
 3455 0018 3E       		.uleb128 0x3e
 3456 0019 0B       		.uleb128 0xb
 3457 001a 03       		.uleb128 0x3
 3458 001b 0E       		.uleb128 0xe
 3459 001c 00       		.byte	0
 3460 001d 00       		.byte	0
 3461 001e 03       		.uleb128 0x3
 3462 001f 16       		.uleb128 0x16
 3463 0020 00       		.byte	0
 3464 0021 03       		.uleb128 0x3
 3465 0022 0E       		.uleb128 0xe
 3466 0023 3A       		.uleb128 0x3a
 3467 0024 0B       		.uleb128 0xb
 3468 0025 3B       		.uleb128 0x3b
 3469 0026 0B       		.uleb128 0xb
 3470 0027 49       		.uleb128 0x49
 3471 0028 13       		.uleb128 0x13
 3472 0029 00       		.byte	0
 3473 002a 00       		.byte	0
 3474 002b 04       		.uleb128 0x4
 3475 002c 24       		.uleb128 0x24
 3476 002d 00       		.byte	0
ARM GAS  /tmp/ccwsohif.s 			page 88


 3477 002e 0B       		.uleb128 0xb
 3478 002f 0B       		.uleb128 0xb
 3479 0030 3E       		.uleb128 0x3e
 3480 0031 0B       		.uleb128 0xb
 3481 0032 03       		.uleb128 0x3
 3482 0033 08       		.uleb128 0x8
 3483 0034 00       		.byte	0
 3484 0035 00       		.byte	0
 3485 0036 05       		.uleb128 0x5
 3486 0037 26       		.uleb128 0x26
 3487 0038 00       		.byte	0
 3488 0039 49       		.uleb128 0x49
 3489 003a 13       		.uleb128 0x13
 3490 003b 00       		.byte	0
 3491 003c 00       		.byte	0
 3492 003d 06       		.uleb128 0x6
 3493 003e 35       		.uleb128 0x35
 3494 003f 00       		.byte	0
 3495 0040 49       		.uleb128 0x49
 3496 0041 13       		.uleb128 0x13
 3497 0042 00       		.byte	0
 3498 0043 00       		.byte	0
 3499 0044 07       		.uleb128 0x7
 3500 0045 34       		.uleb128 0x34
 3501 0046 00       		.byte	0
 3502 0047 03       		.uleb128 0x3
 3503 0048 0E       		.uleb128 0xe
 3504 0049 3A       		.uleb128 0x3a
 3505 004a 0B       		.uleb128 0xb
 3506 004b 3B       		.uleb128 0x3b
 3507 004c 05       		.uleb128 0x5
 3508 004d 49       		.uleb128 0x49
 3509 004e 13       		.uleb128 0x13
 3510 004f 3F       		.uleb128 0x3f
 3511 0050 19       		.uleb128 0x19
 3512 0051 3C       		.uleb128 0x3c
 3513 0052 19       		.uleb128 0x19
 3514 0053 00       		.byte	0
 3515 0054 00       		.byte	0
 3516 0055 08       		.uleb128 0x8
 3517 0056 34       		.uleb128 0x34
 3518 0057 00       		.byte	0
 3519 0058 03       		.uleb128 0x3
 3520 0059 0E       		.uleb128 0xe
 3521 005a 3A       		.uleb128 0x3a
 3522 005b 0B       		.uleb128 0xb
 3523 005c 3B       		.uleb128 0x3b
 3524 005d 0B       		.uleb128 0xb
 3525 005e 49       		.uleb128 0x49
 3526 005f 13       		.uleb128 0x13
 3527 0060 3F       		.uleb128 0x3f
 3528 0061 19       		.uleb128 0x19
 3529 0062 3C       		.uleb128 0x3c
 3530 0063 19       		.uleb128 0x19
 3531 0064 00       		.byte	0
 3532 0065 00       		.byte	0
 3533 0066 09       		.uleb128 0x9
ARM GAS  /tmp/ccwsohif.s 			page 89


 3534 0067 04       		.uleb128 0x4
 3535 0068 01       		.byte	0x1
 3536 0069 0B       		.uleb128 0xb
 3537 006a 0B       		.uleb128 0xb
 3538 006b 49       		.uleb128 0x49
 3539 006c 13       		.uleb128 0x13
 3540 006d 3A       		.uleb128 0x3a
 3541 006e 0B       		.uleb128 0xb
 3542 006f 3B       		.uleb128 0x3b
 3543 0070 05       		.uleb128 0x5
 3544 0071 01       		.uleb128 0x1
 3545 0072 13       		.uleb128 0x13
 3546 0073 00       		.byte	0
 3547 0074 00       		.byte	0
 3548 0075 0A       		.uleb128 0xa
 3549 0076 28       		.uleb128 0x28
 3550 0077 00       		.byte	0
 3551 0078 03       		.uleb128 0x3
 3552 0079 0E       		.uleb128 0xe
 3553 007a 1C       		.uleb128 0x1c
 3554 007b 0B       		.uleb128 0xb
 3555 007c 00       		.byte	0
 3556 007d 00       		.byte	0
 3557 007e 0B       		.uleb128 0xb
 3558 007f 28       		.uleb128 0x28
 3559 0080 00       		.byte	0
 3560 0081 03       		.uleb128 0x3
 3561 0082 08       		.uleb128 0x8
 3562 0083 1C       		.uleb128 0x1c
 3563 0084 0B       		.uleb128 0xb
 3564 0085 00       		.byte	0
 3565 0086 00       		.byte	0
 3566 0087 0C       		.uleb128 0xc
 3567 0088 16       		.uleb128 0x16
 3568 0089 00       		.byte	0
 3569 008a 03       		.uleb128 0x3
 3570 008b 0E       		.uleb128 0xe
 3571 008c 3A       		.uleb128 0x3a
 3572 008d 0B       		.uleb128 0xb
 3573 008e 3B       		.uleb128 0x3b
 3574 008f 05       		.uleb128 0x5
 3575 0090 49       		.uleb128 0x49
 3576 0091 13       		.uleb128 0x13
 3577 0092 00       		.byte	0
 3578 0093 00       		.byte	0
 3579 0094 0D       		.uleb128 0xd
 3580 0095 13       		.uleb128 0x13
 3581 0096 01       		.byte	0x1
 3582 0097 0B       		.uleb128 0xb
 3583 0098 0B       		.uleb128 0xb
 3584 0099 3A       		.uleb128 0x3a
 3585 009a 0B       		.uleb128 0xb
 3586 009b 3B       		.uleb128 0x3b
 3587 009c 05       		.uleb128 0x5
 3588 009d 01       		.uleb128 0x1
 3589 009e 13       		.uleb128 0x13
 3590 009f 00       		.byte	0
ARM GAS  /tmp/ccwsohif.s 			page 90


 3591 00a0 00       		.byte	0
 3592 00a1 0E       		.uleb128 0xe
 3593 00a2 0D       		.uleb128 0xd
 3594 00a3 00       		.byte	0
 3595 00a4 03       		.uleb128 0x3
 3596 00a5 08       		.uleb128 0x8
 3597 00a6 3A       		.uleb128 0x3a
 3598 00a7 0B       		.uleb128 0xb
 3599 00a8 3B       		.uleb128 0x3b
 3600 00a9 05       		.uleb128 0x5
 3601 00aa 49       		.uleb128 0x49
 3602 00ab 13       		.uleb128 0x13
 3603 00ac 38       		.uleb128 0x38
 3604 00ad 0B       		.uleb128 0xb
 3605 00ae 00       		.byte	0
 3606 00af 00       		.byte	0
 3607 00b0 0F       		.uleb128 0xf
 3608 00b1 0D       		.uleb128 0xd
 3609 00b2 00       		.byte	0
 3610 00b3 03       		.uleb128 0x3
 3611 00b4 0E       		.uleb128 0xe
 3612 00b5 3A       		.uleb128 0x3a
 3613 00b6 0B       		.uleb128 0xb
 3614 00b7 3B       		.uleb128 0x3b
 3615 00b8 05       		.uleb128 0x5
 3616 00b9 49       		.uleb128 0x49
 3617 00ba 13       		.uleb128 0x13
 3618 00bb 38       		.uleb128 0x38
 3619 00bc 0B       		.uleb128 0xb
 3620 00bd 00       		.byte	0
 3621 00be 00       		.byte	0
 3622 00bf 10       		.uleb128 0x10
 3623 00c0 13       		.uleb128 0x13
 3624 00c1 01       		.byte	0x1
 3625 00c2 0B       		.uleb128 0xb
 3626 00c3 0B       		.uleb128 0xb
 3627 00c4 3A       		.uleb128 0x3a
 3628 00c5 0B       		.uleb128 0xb
 3629 00c6 3B       		.uleb128 0x3b
 3630 00c7 0B       		.uleb128 0xb
 3631 00c8 01       		.uleb128 0x1
 3632 00c9 13       		.uleb128 0x13
 3633 00ca 00       		.byte	0
 3634 00cb 00       		.byte	0
 3635 00cc 11       		.uleb128 0x11
 3636 00cd 0D       		.uleb128 0xd
 3637 00ce 00       		.byte	0
 3638 00cf 03       		.uleb128 0x3
 3639 00d0 0E       		.uleb128 0xe
 3640 00d1 3A       		.uleb128 0x3a
 3641 00d2 0B       		.uleb128 0xb
 3642 00d3 3B       		.uleb128 0x3b
 3643 00d4 0B       		.uleb128 0xb
 3644 00d5 49       		.uleb128 0x49
 3645 00d6 13       		.uleb128 0x13
 3646 00d7 38       		.uleb128 0x38
 3647 00d8 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwsohif.s 			page 91


 3648 00d9 00       		.byte	0
 3649 00da 00       		.byte	0
 3650 00db 12       		.uleb128 0x12
 3651 00dc 15       		.uleb128 0x15
 3652 00dd 00       		.byte	0
 3653 00de 27       		.uleb128 0x27
 3654 00df 19       		.uleb128 0x19
 3655 00e0 00       		.byte	0
 3656 00e1 00       		.byte	0
 3657 00e2 13       		.uleb128 0x13
 3658 00e3 0F       		.uleb128 0xf
 3659 00e4 00       		.byte	0
 3660 00e5 0B       		.uleb128 0xb
 3661 00e6 0B       		.uleb128 0xb
 3662 00e7 49       		.uleb128 0x49
 3663 00e8 13       		.uleb128 0x13
 3664 00e9 00       		.byte	0
 3665 00ea 00       		.byte	0
 3666 00eb 14       		.uleb128 0x14
 3667 00ec 01       		.uleb128 0x1
 3668 00ed 01       		.byte	0x1
 3669 00ee 49       		.uleb128 0x49
 3670 00ef 13       		.uleb128 0x13
 3671 00f0 01       		.uleb128 0x1
 3672 00f1 13       		.uleb128 0x13
 3673 00f2 00       		.byte	0
 3674 00f3 00       		.byte	0
 3675 00f4 15       		.uleb128 0x15
 3676 00f5 21       		.uleb128 0x21
 3677 00f6 00       		.byte	0
 3678 00f7 49       		.uleb128 0x49
 3679 00f8 13       		.uleb128 0x13
 3680 00f9 2F       		.uleb128 0x2f
 3681 00fa 0B       		.uleb128 0xb
 3682 00fb 00       		.byte	0
 3683 00fc 00       		.byte	0
 3684 00fd 16       		.uleb128 0x16
 3685 00fe 34       		.uleb128 0x34
 3686 00ff 00       		.byte	0
 3687 0100 03       		.uleb128 0x3
 3688 0101 08       		.uleb128 0x8
 3689 0102 3A       		.uleb128 0x3a
 3690 0103 0B       		.uleb128 0xb
 3691 0104 3B       		.uleb128 0x3b
 3692 0105 05       		.uleb128 0x5
 3693 0106 49       		.uleb128 0x49
 3694 0107 13       		.uleb128 0x13
 3695 0108 3F       		.uleb128 0x3f
 3696 0109 19       		.uleb128 0x19
 3697 010a 3C       		.uleb128 0x3c
 3698 010b 19       		.uleb128 0x19
 3699 010c 00       		.byte	0
 3700 010d 00       		.byte	0
 3701 010e 17       		.uleb128 0x17
 3702 010f 0F       		.uleb128 0xf
 3703 0110 00       		.byte	0
 3704 0111 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwsohif.s 			page 92


 3705 0112 0B       		.uleb128 0xb
 3706 0113 00       		.byte	0
 3707 0114 00       		.byte	0
 3708 0115 18       		.uleb128 0x18
 3709 0116 17       		.uleb128 0x17
 3710 0117 01       		.byte	0x1
 3711 0118 0B       		.uleb128 0xb
 3712 0119 0B       		.uleb128 0xb
 3713 011a 3A       		.uleb128 0x3a
 3714 011b 0B       		.uleb128 0xb
 3715 011c 3B       		.uleb128 0x3b
 3716 011d 0B       		.uleb128 0xb
 3717 011e 01       		.uleb128 0x1
 3718 011f 13       		.uleb128 0x13
 3719 0120 00       		.byte	0
 3720 0121 00       		.byte	0
 3721 0122 19       		.uleb128 0x19
 3722 0123 0D       		.uleb128 0xd
 3723 0124 00       		.byte	0
 3724 0125 03       		.uleb128 0x3
 3725 0126 0E       		.uleb128 0xe
 3726 0127 3A       		.uleb128 0x3a
 3727 0128 0B       		.uleb128 0xb
 3728 0129 3B       		.uleb128 0x3b
 3729 012a 0B       		.uleb128 0xb
 3730 012b 49       		.uleb128 0x49
 3731 012c 13       		.uleb128 0x13
 3732 012d 00       		.byte	0
 3733 012e 00       		.byte	0
 3734 012f 1A       		.uleb128 0x1a
 3735 0130 13       		.uleb128 0x13
 3736 0131 01       		.byte	0x1
 3737 0132 03       		.uleb128 0x3
 3738 0133 0E       		.uleb128 0xe
 3739 0134 0B       		.uleb128 0xb
 3740 0135 0B       		.uleb128 0xb
 3741 0136 3A       		.uleb128 0x3a
 3742 0137 0B       		.uleb128 0xb
 3743 0138 3B       		.uleb128 0x3b
 3744 0139 0B       		.uleb128 0xb
 3745 013a 01       		.uleb128 0x1
 3746 013b 13       		.uleb128 0x13
 3747 013c 00       		.byte	0
 3748 013d 00       		.byte	0
 3749 013e 1B       		.uleb128 0x1b
 3750 013f 0D       		.uleb128 0xd
 3751 0140 00       		.byte	0
 3752 0141 03       		.uleb128 0x3
 3753 0142 08       		.uleb128 0x8
 3754 0143 3A       		.uleb128 0x3a
 3755 0144 0B       		.uleb128 0xb
 3756 0145 3B       		.uleb128 0x3b
 3757 0146 0B       		.uleb128 0xb
 3758 0147 49       		.uleb128 0x49
 3759 0148 13       		.uleb128 0x13
 3760 0149 38       		.uleb128 0x38
 3761 014a 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwsohif.s 			page 93


 3762 014b 00       		.byte	0
 3763 014c 00       		.byte	0
 3764 014d 1C       		.uleb128 0x1c
 3765 014e 13       		.uleb128 0x13
 3766 014f 01       		.byte	0x1
 3767 0150 03       		.uleb128 0x3
 3768 0151 0E       		.uleb128 0xe
 3769 0152 0B       		.uleb128 0xb
 3770 0153 05       		.uleb128 0x5
 3771 0154 3A       		.uleb128 0x3a
 3772 0155 0B       		.uleb128 0xb
 3773 0156 3B       		.uleb128 0x3b
 3774 0157 0B       		.uleb128 0xb
 3775 0158 01       		.uleb128 0x1
 3776 0159 13       		.uleb128 0x13
 3777 015a 00       		.byte	0
 3778 015b 00       		.byte	0
 3779 015c 1D       		.uleb128 0x1d
 3780 015d 0D       		.uleb128 0xd
 3781 015e 00       		.byte	0
 3782 015f 03       		.uleb128 0x3
 3783 0160 0E       		.uleb128 0xe
 3784 0161 3A       		.uleb128 0x3a
 3785 0162 0B       		.uleb128 0xb
 3786 0163 3B       		.uleb128 0x3b
 3787 0164 0B       		.uleb128 0xb
 3788 0165 49       		.uleb128 0x49
 3789 0166 13       		.uleb128 0x13
 3790 0167 38       		.uleb128 0x38
 3791 0168 05       		.uleb128 0x5
 3792 0169 00       		.byte	0
 3793 016a 00       		.byte	0
 3794 016b 1E       		.uleb128 0x1e
 3795 016c 15       		.uleb128 0x15
 3796 016d 01       		.byte	0x1
 3797 016e 27       		.uleb128 0x27
 3798 016f 19       		.uleb128 0x19
 3799 0170 49       		.uleb128 0x49
 3800 0171 13       		.uleb128 0x13
 3801 0172 01       		.uleb128 0x1
 3802 0173 13       		.uleb128 0x13
 3803 0174 00       		.byte	0
 3804 0175 00       		.byte	0
 3805 0176 1F       		.uleb128 0x1f
 3806 0177 05       		.uleb128 0x5
 3807 0178 00       		.byte	0
 3808 0179 49       		.uleb128 0x49
 3809 017a 13       		.uleb128 0x13
 3810 017b 00       		.byte	0
 3811 017c 00       		.byte	0
 3812 017d 20       		.uleb128 0x20
 3813 017e 13       		.uleb128 0x13
 3814 017f 01       		.byte	0x1
 3815 0180 03       		.uleb128 0x3
 3816 0181 0E       		.uleb128 0xe
 3817 0182 0B       		.uleb128 0xb
 3818 0183 05       		.uleb128 0x5
ARM GAS  /tmp/ccwsohif.s 			page 94


 3819 0184 3A       		.uleb128 0x3a
 3820 0185 0B       		.uleb128 0xb
 3821 0186 3B       		.uleb128 0x3b
 3822 0187 05       		.uleb128 0x5
 3823 0188 01       		.uleb128 0x1
 3824 0189 13       		.uleb128 0x13
 3825 018a 00       		.byte	0
 3826 018b 00       		.byte	0
 3827 018c 21       		.uleb128 0x21
 3828 018d 0D       		.uleb128 0xd
 3829 018e 00       		.byte	0
 3830 018f 03       		.uleb128 0x3
 3831 0190 0E       		.uleb128 0xe
 3832 0191 3A       		.uleb128 0x3a
 3833 0192 0B       		.uleb128 0xb
 3834 0193 3B       		.uleb128 0x3b
 3835 0194 05       		.uleb128 0x5
 3836 0195 49       		.uleb128 0x49
 3837 0196 13       		.uleb128 0x13
 3838 0197 38       		.uleb128 0x38
 3839 0198 05       		.uleb128 0x5
 3840 0199 00       		.byte	0
 3841 019a 00       		.byte	0
 3842 019b 22       		.uleb128 0x22
 3843 019c 13       		.uleb128 0x13
 3844 019d 01       		.byte	0x1
 3845 019e 03       		.uleb128 0x3
 3846 019f 0E       		.uleb128 0xe
 3847 01a0 0B       		.uleb128 0xb
 3848 01a1 0B       		.uleb128 0xb
 3849 01a2 3A       		.uleb128 0x3a
 3850 01a3 0B       		.uleb128 0xb
 3851 01a4 3B       		.uleb128 0x3b
 3852 01a5 05       		.uleb128 0x5
 3853 01a6 01       		.uleb128 0x1
 3854 01a7 13       		.uleb128 0x13
 3855 01a8 00       		.byte	0
 3856 01a9 00       		.byte	0
 3857 01aa 23       		.uleb128 0x23
 3858 01ab 17       		.uleb128 0x17
 3859 01ac 01       		.byte	0x1
 3860 01ad 0B       		.uleb128 0xb
 3861 01ae 0B       		.uleb128 0xb
 3862 01af 3A       		.uleb128 0x3a
 3863 01b0 0B       		.uleb128 0xb
 3864 01b1 3B       		.uleb128 0x3b
 3865 01b2 05       		.uleb128 0x5
 3866 01b3 01       		.uleb128 0x1
 3867 01b4 13       		.uleb128 0x13
 3868 01b5 00       		.byte	0
 3869 01b6 00       		.byte	0
 3870 01b7 24       		.uleb128 0x24
 3871 01b8 0D       		.uleb128 0xd
 3872 01b9 00       		.byte	0
 3873 01ba 03       		.uleb128 0x3
 3874 01bb 0E       		.uleb128 0xe
 3875 01bc 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccwsohif.s 			page 95


 3876 01bd 0B       		.uleb128 0xb
 3877 01be 3B       		.uleb128 0x3b
 3878 01bf 05       		.uleb128 0x5
 3879 01c0 49       		.uleb128 0x49
 3880 01c1 13       		.uleb128 0x13
 3881 01c2 00       		.byte	0
 3882 01c3 00       		.byte	0
 3883 01c4 25       		.uleb128 0x25
 3884 01c5 15       		.uleb128 0x15
 3885 01c6 01       		.byte	0x1
 3886 01c7 27       		.uleb128 0x27
 3887 01c8 19       		.uleb128 0x19
 3888 01c9 01       		.uleb128 0x1
 3889 01ca 13       		.uleb128 0x13
 3890 01cb 00       		.byte	0
 3891 01cc 00       		.byte	0
 3892 01cd 26       		.uleb128 0x26
 3893 01ce 04       		.uleb128 0x4
 3894 01cf 01       		.byte	0x1
 3895 01d0 03       		.uleb128 0x3
 3896 01d1 0E       		.uleb128 0xe
 3897 01d2 0B       		.uleb128 0xb
 3898 01d3 0B       		.uleb128 0xb
 3899 01d4 49       		.uleb128 0x49
 3900 01d5 13       		.uleb128 0x13
 3901 01d6 3A       		.uleb128 0x3a
 3902 01d7 0B       		.uleb128 0xb
 3903 01d8 3B       		.uleb128 0x3b
 3904 01d9 05       		.uleb128 0x5
 3905 01da 01       		.uleb128 0x1
 3906 01db 13       		.uleb128 0x13
 3907 01dc 00       		.byte	0
 3908 01dd 00       		.byte	0
 3909 01de 27       		.uleb128 0x27
 3910 01df 28       		.uleb128 0x28
 3911 01e0 00       		.byte	0
 3912 01e1 03       		.uleb128 0x3
 3913 01e2 0E       		.uleb128 0xe
 3914 01e3 1C       		.uleb128 0x1c
 3915 01e4 0D       		.uleb128 0xd
 3916 01e5 00       		.byte	0
 3917 01e6 00       		.byte	0
 3918 01e7 28       		.uleb128 0x28
 3919 01e8 21       		.uleb128 0x21
 3920 01e9 00       		.byte	0
 3921 01ea 00       		.byte	0
 3922 01eb 00       		.byte	0
 3923 01ec 29       		.uleb128 0x29
 3924 01ed 34       		.uleb128 0x34
 3925 01ee 00       		.byte	0
 3926 01ef 03       		.uleb128 0x3
 3927 01f0 0E       		.uleb128 0xe
 3928 01f1 3A       		.uleb128 0x3a
 3929 01f2 0B       		.uleb128 0xb
 3930 01f3 3B       		.uleb128 0x3b
 3931 01f4 0B       		.uleb128 0xb
 3932 01f5 49       		.uleb128 0x49
ARM GAS  /tmp/ccwsohif.s 			page 96


 3933 01f6 13       		.uleb128 0x13
 3934 01f7 02       		.uleb128 0x2
 3935 01f8 18       		.uleb128 0x18
 3936 01f9 00       		.byte	0
 3937 01fa 00       		.byte	0
 3938 01fb 2A       		.uleb128 0x2a
 3939 01fc 2E       		.uleb128 0x2e
 3940 01fd 01       		.byte	0x1
 3941 01fe 3F       		.uleb128 0x3f
 3942 01ff 19       		.uleb128 0x19
 3943 0200 03       		.uleb128 0x3
 3944 0201 0E       		.uleb128 0xe
 3945 0202 3A       		.uleb128 0x3a
 3946 0203 0B       		.uleb128 0xb
 3947 0204 3B       		.uleb128 0x3b
 3948 0205 05       		.uleb128 0x5
 3949 0206 27       		.uleb128 0x27
 3950 0207 19       		.uleb128 0x19
 3951 0208 11       		.uleb128 0x11
 3952 0209 01       		.uleb128 0x1
 3953 020a 12       		.uleb128 0x12
 3954 020b 06       		.uleb128 0x6
 3955 020c 40       		.uleb128 0x40
 3956 020d 18       		.uleb128 0x18
 3957 020e 9742     		.uleb128 0x2117
 3958 0210 19       		.uleb128 0x19
 3959 0211 01       		.uleb128 0x1
 3960 0212 13       		.uleb128 0x13
 3961 0213 00       		.byte	0
 3962 0214 00       		.byte	0
 3963 0215 2B       		.uleb128 0x2b
 3964 0216 05       		.uleb128 0x5
 3965 0217 00       		.byte	0
 3966 0218 03       		.uleb128 0x3
 3967 0219 0E       		.uleb128 0xe
 3968 021a 3A       		.uleb128 0x3a
 3969 021b 0B       		.uleb128 0xb
 3970 021c 3B       		.uleb128 0x3b
 3971 021d 05       		.uleb128 0x5
 3972 021e 49       		.uleb128 0x49
 3973 021f 13       		.uleb128 0x13
 3974 0220 02       		.uleb128 0x2
 3975 0221 18       		.uleb128 0x18
 3976 0222 00       		.byte	0
 3977 0223 00       		.byte	0
 3978 0224 2C       		.uleb128 0x2c
 3979 0225 2E       		.uleb128 0x2e
 3980 0226 01       		.byte	0x1
 3981 0227 3F       		.uleb128 0x3f
 3982 0228 19       		.uleb128 0x19
 3983 0229 03       		.uleb128 0x3
 3984 022a 0E       		.uleb128 0xe
 3985 022b 3A       		.uleb128 0x3a
 3986 022c 0B       		.uleb128 0xb
 3987 022d 3B       		.uleb128 0x3b
 3988 022e 05       		.uleb128 0x5
 3989 022f 27       		.uleb128 0x27
ARM GAS  /tmp/ccwsohif.s 			page 97


 3990 0230 19       		.uleb128 0x19
 3991 0231 49       		.uleb128 0x49
 3992 0232 13       		.uleb128 0x13
 3993 0233 11       		.uleb128 0x11
 3994 0234 01       		.uleb128 0x1
 3995 0235 12       		.uleb128 0x12
 3996 0236 06       		.uleb128 0x6
 3997 0237 40       		.uleb128 0x40
 3998 0238 18       		.uleb128 0x18
 3999 0239 9742     		.uleb128 0x2117
 4000 023b 19       		.uleb128 0x19
 4001 023c 01       		.uleb128 0x1
 4002 023d 13       		.uleb128 0x13
 4003 023e 00       		.byte	0
 4004 023f 00       		.byte	0
 4005 0240 2D       		.uleb128 0x2d
 4006 0241 05       		.uleb128 0x5
 4007 0242 00       		.byte	0
 4008 0243 03       		.uleb128 0x3
 4009 0244 0E       		.uleb128 0xe
 4010 0245 3A       		.uleb128 0x3a
 4011 0246 0B       		.uleb128 0xb
 4012 0247 3B       		.uleb128 0x3b
 4013 0248 05       		.uleb128 0x5
 4014 0249 49       		.uleb128 0x49
 4015 024a 13       		.uleb128 0x13
 4016 024b 02       		.uleb128 0x2
 4017 024c 17       		.uleb128 0x17
 4018 024d 00       		.byte	0
 4019 024e 00       		.byte	0
 4020 024f 2E       		.uleb128 0x2e
 4021 0250 34       		.uleb128 0x34
 4022 0251 00       		.byte	0
 4023 0252 03       		.uleb128 0x3
 4024 0253 0E       		.uleb128 0xe
 4025 0254 3A       		.uleb128 0x3a
 4026 0255 0B       		.uleb128 0xb
 4027 0256 3B       		.uleb128 0x3b
 4028 0257 05       		.uleb128 0x5
 4029 0258 49       		.uleb128 0x49
 4030 0259 13       		.uleb128 0x13
 4031 025a 02       		.uleb128 0x2
 4032 025b 17       		.uleb128 0x17
 4033 025c 00       		.byte	0
 4034 025d 00       		.byte	0
 4035 025e 2F       		.uleb128 0x2f
 4036 025f 2E       		.uleb128 0x2e
 4037 0260 00       		.byte	0
 4038 0261 3F       		.uleb128 0x3f
 4039 0262 19       		.uleb128 0x19
 4040 0263 03       		.uleb128 0x3
 4041 0264 0E       		.uleb128 0xe
 4042 0265 3A       		.uleb128 0x3a
 4043 0266 0B       		.uleb128 0xb
 4044 0267 3B       		.uleb128 0x3b
 4045 0268 05       		.uleb128 0x5
 4046 0269 27       		.uleb128 0x27
ARM GAS  /tmp/ccwsohif.s 			page 98


 4047 026a 19       		.uleb128 0x19
 4048 026b 11       		.uleb128 0x11
 4049 026c 01       		.uleb128 0x1
 4050 026d 12       		.uleb128 0x12
 4051 026e 06       		.uleb128 0x6
 4052 026f 40       		.uleb128 0x40
 4053 0270 18       		.uleb128 0x18
 4054 0271 9742     		.uleb128 0x2117
 4055 0273 19       		.uleb128 0x19
 4056 0274 00       		.byte	0
 4057 0275 00       		.byte	0
 4058 0276 30       		.uleb128 0x30
 4059 0277 34       		.uleb128 0x34
 4060 0278 00       		.byte	0
 4061 0279 03       		.uleb128 0x3
 4062 027a 08       		.uleb128 0x8
 4063 027b 3A       		.uleb128 0x3a
 4064 027c 0B       		.uleb128 0xb
 4065 027d 3B       		.uleb128 0x3b
 4066 027e 05       		.uleb128 0x5
 4067 027f 49       		.uleb128 0x49
 4068 0280 13       		.uleb128 0x13
 4069 0281 02       		.uleb128 0x2
 4070 0282 17       		.uleb128 0x17
 4071 0283 00       		.byte	0
 4072 0284 00       		.byte	0
 4073 0285 31       		.uleb128 0x31
 4074 0286 2E       		.uleb128 0x2e
 4075 0287 00       		.byte	0
 4076 0288 3F       		.uleb128 0x3f
 4077 0289 19       		.uleb128 0x19
 4078 028a 03       		.uleb128 0x3
 4079 028b 0E       		.uleb128 0xe
 4080 028c 3A       		.uleb128 0x3a
 4081 028d 0B       		.uleb128 0xb
 4082 028e 3B       		.uleb128 0x3b
 4083 028f 05       		.uleb128 0x5
 4084 0290 27       		.uleb128 0x27
 4085 0291 19       		.uleb128 0x19
 4086 0292 49       		.uleb128 0x49
 4087 0293 13       		.uleb128 0x13
 4088 0294 11       		.uleb128 0x11
 4089 0295 01       		.uleb128 0x1
 4090 0296 12       		.uleb128 0x12
 4091 0297 06       		.uleb128 0x6
 4092 0298 40       		.uleb128 0x40
 4093 0299 18       		.uleb128 0x18
 4094 029a 9742     		.uleb128 0x2117
 4095 029c 19       		.uleb128 0x19
 4096 029d 00       		.byte	0
 4097 029e 00       		.byte	0
 4098 029f 32       		.uleb128 0x32
 4099 02a0 34       		.uleb128 0x34
 4100 02a1 00       		.byte	0
 4101 02a2 03       		.uleb128 0x3
 4102 02a3 0E       		.uleb128 0xe
 4103 02a4 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccwsohif.s 			page 99


 4104 02a5 0B       		.uleb128 0xb
 4105 02a6 3B       		.uleb128 0x3b
 4106 02a7 05       		.uleb128 0x5
 4107 02a8 49       		.uleb128 0x49
 4108 02a9 13       		.uleb128 0x13
 4109 02aa 02       		.uleb128 0x2
 4110 02ab 18       		.uleb128 0x18
 4111 02ac 00       		.byte	0
 4112 02ad 00       		.byte	0
 4113 02ae 33       		.uleb128 0x33
 4114 02af 898201   		.uleb128 0x4109
 4115 02b2 01       		.byte	0x1
 4116 02b3 11       		.uleb128 0x11
 4117 02b4 01       		.uleb128 0x1
 4118 02b5 31       		.uleb128 0x31
 4119 02b6 13       		.uleb128 0x13
 4120 02b7 01       		.uleb128 0x1
 4121 02b8 13       		.uleb128 0x13
 4122 02b9 00       		.byte	0
 4123 02ba 00       		.byte	0
 4124 02bb 34       		.uleb128 0x34
 4125 02bc 8A8201   		.uleb128 0x410a
 4126 02bf 00       		.byte	0
 4127 02c0 02       		.uleb128 0x2
 4128 02c1 18       		.uleb128 0x18
 4129 02c2 9142     		.uleb128 0x2111
 4130 02c4 18       		.uleb128 0x18
 4131 02c5 00       		.byte	0
 4132 02c6 00       		.byte	0
 4133 02c7 35       		.uleb128 0x35
 4134 02c8 898201   		.uleb128 0x4109
 4135 02cb 01       		.byte	0x1
 4136 02cc 11       		.uleb128 0x11
 4137 02cd 01       		.uleb128 0x1
 4138 02ce 31       		.uleb128 0x31
 4139 02cf 13       		.uleb128 0x13
 4140 02d0 00       		.byte	0
 4141 02d1 00       		.byte	0
 4142 02d2 00       		.byte	0
 4143              		.section	.debug_loc,"",%progbits
 4144              	.Ldebug_loc0:
 4145              	.LLST31:
 4146 0000 74030000 		.4byte	.LVL116-.Ltext0
 4147 0004 7E030000 		.4byte	.LVL118-.Ltext0
 4148 0008 0100     		.2byte	0x1
 4149 000a 50       		.byte	0x50
 4150 000b 7E030000 		.4byte	.LVL118-.Ltext0
 4151 000f 88030000 		.4byte	.LFE94-.Ltext0
 4152 0013 0400     		.2byte	0x4
 4153 0015 F3       		.byte	0xf3
 4154 0016 01       		.uleb128 0x1
 4155 0017 50       		.byte	0x50
 4156 0018 9F       		.byte	0x9f
 4157 0019 00000000 		.4byte	0
 4158 001d 00000000 		.4byte	0
 4159              	.LLST32:
 4160 0021 74030000 		.4byte	.LVL116-.Ltext0
ARM GAS  /tmp/ccwsohif.s 			page 100


 4161 0025 78030000 		.4byte	.LVL117-.Ltext0
 4162 0029 0200     		.2byte	0x2
 4163 002b 30       		.byte	0x30
 4164 002c 9F       		.byte	0x9f
 4165 002d 78030000 		.4byte	.LVL117-.Ltext0
 4166 0031 7E030000 		.4byte	.LVL118-.Ltext0
 4167 0035 0B00     		.2byte	0xb
 4168 0037 70       		.byte	0x70
 4169 0038 00       		.sleb128 0
 4170 0039 08       		.byte	0x8
 4171 003a FF       		.byte	0xff
 4172 003b 1A       		.byte	0x1a
 4173 003c 73       		.byte	0x73
 4174 003d 00       		.sleb128 0
 4175 003e 1A       		.byte	0x1a
 4176 003f 30       		.byte	0x30
 4177 0040 2E       		.byte	0x2e
 4178 0041 9F       		.byte	0x9f
 4179 0042 7E030000 		.4byte	.LVL118-.Ltext0
 4180 0046 88030000 		.4byte	.LFE94-.Ltext0
 4181 004a 0C00     		.2byte	0xc
 4182 004c F3       		.byte	0xf3
 4183 004d 01       		.uleb128 0x1
 4184 004e 50       		.byte	0x50
 4185 004f 08       		.byte	0x8
 4186 0050 FF       		.byte	0xff
 4187 0051 1A       		.byte	0x1a
 4188 0052 73       		.byte	0x73
 4189 0053 00       		.sleb128 0
 4190 0054 1A       		.byte	0x1a
 4191 0055 30       		.byte	0x30
 4192 0056 2E       		.byte	0x2e
 4193 0057 9F       		.byte	0x9f
 4194 0058 00000000 		.4byte	0
 4195 005c 00000000 		.4byte	0
 4196              	.LLST25:
 4197 0060 08030000 		.4byte	.LVL101-.Ltext0
 4198 0064 1C030000 		.4byte	.LVL106-.Ltext0
 4199 0068 0100     		.2byte	0x1
 4200 006a 50       		.byte	0x50
 4201 006b 1C030000 		.4byte	.LVL106-.Ltext0
 4202 006f 26030000 		.4byte	.LVL107-.Ltext0
 4203 0073 0400     		.2byte	0x4
 4204 0075 F3       		.byte	0xf3
 4205 0076 01       		.uleb128 0x1
 4206 0077 50       		.byte	0x50
 4207 0078 9F       		.byte	0x9f
 4208 0079 26030000 		.4byte	.LVL107-.Ltext0
 4209 007d 30030000 		.4byte	.LFE92-.Ltext0
 4210 0081 0100     		.2byte	0x1
 4211 0083 50       		.byte	0x50
 4212 0084 00000000 		.4byte	0
 4213 0088 00000000 		.4byte	0
 4214              	.LLST26:
 4215 008c 08030000 		.4byte	.LVL101-.Ltext0
 4216 0090 0A030000 		.4byte	.LVL102-.Ltext0
 4217 0094 0200     		.2byte	0x2
ARM GAS  /tmp/ccwsohif.s 			page 101


 4218 0096 30       		.byte	0x30
 4219 0097 9F       		.byte	0x9f
 4220 0098 0A030000 		.4byte	.LVL102-.Ltext0
 4221 009c 12030000 		.4byte	.LVL103-.Ltext0
 4222 00a0 0100     		.2byte	0x1
 4223 00a2 53       		.byte	0x53
 4224 00a3 12030000 		.4byte	.LVL103-.Ltext0
 4225 00a7 18030000 		.4byte	.LVL105-.Ltext0
 4226 00ab 0500     		.2byte	0x5
 4227 00ad 70       		.byte	0x70
 4228 00ae 00       		.sleb128 0
 4229 00af 35       		.byte	0x35
 4230 00b0 25       		.byte	0x25
 4231 00b1 9F       		.byte	0x9f
 4232 00b2 18030000 		.4byte	.LVL105-.Ltext0
 4233 00b6 1C030000 		.4byte	.LVL106-.Ltext0
 4234 00ba 0800     		.2byte	0x8
 4235 00bc 70       		.byte	0x70
 4236 00bd 00       		.sleb128 0
 4237 00be 4F       		.byte	0x4f
 4238 00bf 1A       		.byte	0x1a
 4239 00c0 08       		.byte	0x8
 4240 00c1 FF       		.byte	0xff
 4241 00c2 1A       		.byte	0x1a
 4242 00c3 9F       		.byte	0x9f
 4243 00c4 1C030000 		.4byte	.LVL106-.Ltext0
 4244 00c8 26030000 		.4byte	.LVL107-.Ltext0
 4245 00cc 0900     		.2byte	0x9
 4246 00ce F3       		.byte	0xf3
 4247 00cf 01       		.uleb128 0x1
 4248 00d0 50       		.byte	0x50
 4249 00d1 4F       		.byte	0x4f
 4250 00d2 1A       		.byte	0x1a
 4251 00d3 08       		.byte	0x8
 4252 00d4 FF       		.byte	0xff
 4253 00d5 1A       		.byte	0x1a
 4254 00d6 9F       		.byte	0x9f
 4255 00d7 26030000 		.4byte	.LVL107-.Ltext0
 4256 00db 28030000 		.4byte	.LVL108-.Ltext0
 4257 00df 0100     		.2byte	0x1
 4258 00e1 53       		.byte	0x53
 4259 00e2 28030000 		.4byte	.LVL108-.Ltext0
 4260 00e6 30030000 		.4byte	.LFE92-.Ltext0
 4261 00ea 0500     		.2byte	0x5
 4262 00ec 70       		.byte	0x70
 4263 00ed 00       		.sleb128 0
 4264 00ee 35       		.byte	0x35
 4265 00ef 25       		.byte	0x25
 4266 00f0 9F       		.byte	0x9f
 4267 00f1 00000000 		.4byte	0
 4268 00f5 00000000 		.4byte	0
 4269              	.LLST27:
 4270 00f9 08030000 		.4byte	.LVL101-.Ltext0
 4271 00fd 16030000 		.4byte	.LVL104-.Ltext0
 4272 0101 0200     		.2byte	0x2
 4273 0103 30       		.byte	0x30
 4274 0104 9F       		.byte	0x9f
ARM GAS  /tmp/ccwsohif.s 			page 102


 4275 0105 16030000 		.4byte	.LVL104-.Ltext0
 4276 0109 26030000 		.4byte	.LVL107-.Ltext0
 4277 010d 0100     		.2byte	0x1
 4278 010f 53       		.byte	0x53
 4279 0110 26030000 		.4byte	.LVL107-.Ltext0
 4280 0114 2A030000 		.4byte	.LVL109-.Ltext0
 4281 0118 0200     		.2byte	0x2
 4282 011a 30       		.byte	0x30
 4283 011b 9F       		.byte	0x9f
 4284 011c 2A030000 		.4byte	.LVL109-.Ltext0
 4285 0120 30030000 		.4byte	.LFE92-.Ltext0
 4286 0124 0100     		.2byte	0x1
 4287 0126 53       		.byte	0x53
 4288 0127 00000000 		.4byte	0
 4289 012b 00000000 		.4byte	0
 4290              	.LLST28:
 4291 012f 08030000 		.4byte	.LVL101-.Ltext0
 4292 0133 18030000 		.4byte	.LVL105-.Ltext0
 4293 0137 0200     		.2byte	0x2
 4294 0139 30       		.byte	0x30
 4295 013a 9F       		.byte	0x9f
 4296 013b 18030000 		.4byte	.LVL105-.Ltext0
 4297 013f 1C030000 		.4byte	.LVL106-.Ltext0
 4298 0143 0D00     		.2byte	0xd
 4299 0145 73       		.byte	0x73
 4300 0146 00       		.sleb128 0
 4301 0147 70       		.byte	0x70
 4302 0148 00       		.sleb128 0
 4303 0149 4F       		.byte	0x4f
 4304 014a 1A       		.byte	0x1a
 4305 014b 08       		.byte	0x8
 4306 014c FF       		.byte	0xff
 4307 014d 1A       		.byte	0x1a
 4308 014e 25       		.byte	0x25
 4309 014f 31       		.byte	0x31
 4310 0150 1A       		.byte	0x1a
 4311 0151 9F       		.byte	0x9f
 4312 0152 1C030000 		.4byte	.LVL106-.Ltext0
 4313 0156 26030000 		.4byte	.LVL107-.Ltext0
 4314 015a 0E00     		.2byte	0xe
 4315 015c 73       		.byte	0x73
 4316 015d 00       		.sleb128 0
 4317 015e F3       		.byte	0xf3
 4318 015f 01       		.uleb128 0x1
 4319 0160 50       		.byte	0x50
 4320 0161 4F       		.byte	0x4f
 4321 0162 1A       		.byte	0x1a
 4322 0163 08       		.byte	0x8
 4323 0164 FF       		.byte	0xff
 4324 0165 1A       		.byte	0x1a
 4325 0166 25       		.byte	0x25
 4326 0167 31       		.byte	0x31
 4327 0168 1A       		.byte	0x1a
 4328 0169 9F       		.byte	0x9f
 4329 016a 26030000 		.4byte	.LVL107-.Ltext0
 4330 016e 30030000 		.4byte	.LFE92-.Ltext0
 4331 0172 0200     		.2byte	0x2
ARM GAS  /tmp/ccwsohif.s 			page 103


 4332 0174 30       		.byte	0x30
 4333 0175 9F       		.byte	0x9f
 4334 0176 00000000 		.4byte	0
 4335 017a 00000000 		.4byte	0
 4336              	.LLST24:
 4337 017e C8020000 		.4byte	.LVL94-.Ltext0
 4338 0182 D2020000 		.4byte	.LVL95-.Ltext0
 4339 0186 0100     		.2byte	0x1
 4340 0188 50       		.byte	0x50
 4341 0189 D2020000 		.4byte	.LVL95-.Ltext0
 4342 018d D6020000 		.4byte	.LVL96-.Ltext0
 4343 0191 0400     		.2byte	0x4
 4344 0193 F3       		.byte	0xf3
 4345 0194 01       		.uleb128 0x1
 4346 0195 50       		.byte	0x50
 4347 0196 9F       		.byte	0x9f
 4348 0197 D6020000 		.4byte	.LVL96-.Ltext0
 4349 019b DC020000 		.4byte	.LVL97-.Ltext0
 4350 019f 0100     		.2byte	0x1
 4351 01a1 50       		.byte	0x50
 4352 01a2 DC020000 		.4byte	.LVL97-.Ltext0
 4353 01a6 E4020000 		.4byte	.LFE88-.Ltext0
 4354 01aa 0400     		.2byte	0x4
 4355 01ac F3       		.byte	0xf3
 4356 01ad 01       		.uleb128 0x1
 4357 01ae 50       		.byte	0x50
 4358 01af 9F       		.byte	0x9f
 4359 01b0 00000000 		.4byte	0
 4360 01b4 00000000 		.4byte	0
 4361              	.LLST23:
 4362 01b8 AC020000 		.4byte	.LVL90-.Ltext0
 4363 01bc B6020000 		.4byte	.LVL91-.Ltext0
 4364 01c0 0100     		.2byte	0x1
 4365 01c2 50       		.byte	0x50
 4366 01c3 B6020000 		.4byte	.LVL91-.Ltext0
 4367 01c7 BA020000 		.4byte	.LVL92-.Ltext0
 4368 01cb 0400     		.2byte	0x4
 4369 01cd F3       		.byte	0xf3
 4370 01ce 01       		.uleb128 0x1
 4371 01cf 50       		.byte	0x50
 4372 01d0 9F       		.byte	0x9f
 4373 01d1 BA020000 		.4byte	.LVL92-.Ltext0
 4374 01d5 C0020000 		.4byte	.LVL93-.Ltext0
 4375 01d9 0100     		.2byte	0x1
 4376 01db 50       		.byte	0x50
 4377 01dc C0020000 		.4byte	.LVL93-.Ltext0
 4378 01e0 C8020000 		.4byte	.LFE87-.Ltext0
 4379 01e4 0400     		.2byte	0x4
 4380 01e6 F3       		.byte	0xf3
 4381 01e7 01       		.uleb128 0x1
 4382 01e8 50       		.byte	0x50
 4383 01e9 9F       		.byte	0x9f
 4384 01ea 00000000 		.4byte	0
 4385 01ee 00000000 		.4byte	0
 4386              	.LLST22:
 4387 01f2 90020000 		.4byte	.LVL86-.Ltext0
 4388 01f6 9A020000 		.4byte	.LVL87-.Ltext0
ARM GAS  /tmp/ccwsohif.s 			page 104


 4389 01fa 0100     		.2byte	0x1
 4390 01fc 50       		.byte	0x50
 4391 01fd 9A020000 		.4byte	.LVL87-.Ltext0
 4392 0201 9E020000 		.4byte	.LVL88-.Ltext0
 4393 0205 0400     		.2byte	0x4
 4394 0207 F3       		.byte	0xf3
 4395 0208 01       		.uleb128 0x1
 4396 0209 50       		.byte	0x50
 4397 020a 9F       		.byte	0x9f
 4398 020b 9E020000 		.4byte	.LVL88-.Ltext0
 4399 020f A4020000 		.4byte	.LVL89-.Ltext0
 4400 0213 0100     		.2byte	0x1
 4401 0215 50       		.byte	0x50
 4402 0216 A4020000 		.4byte	.LVL89-.Ltext0
 4403 021a AC020000 		.4byte	.LFE86-.Ltext0
 4404 021e 0400     		.2byte	0x4
 4405 0220 F3       		.byte	0xf3
 4406 0221 01       		.uleb128 0x1
 4407 0222 50       		.byte	0x50
 4408 0223 9F       		.byte	0x9f
 4409 0224 00000000 		.4byte	0
 4410 0228 00000000 		.4byte	0
 4411              	.LLST21:
 4412 022c 74020000 		.4byte	.LVL82-.Ltext0
 4413 0230 7E020000 		.4byte	.LVL83-.Ltext0
 4414 0234 0100     		.2byte	0x1
 4415 0236 50       		.byte	0x50
 4416 0237 7E020000 		.4byte	.LVL83-.Ltext0
 4417 023b 82020000 		.4byte	.LVL84-.Ltext0
 4418 023f 0400     		.2byte	0x4
 4419 0241 F3       		.byte	0xf3
 4420 0242 01       		.uleb128 0x1
 4421 0243 50       		.byte	0x50
 4422 0244 9F       		.byte	0x9f
 4423 0245 82020000 		.4byte	.LVL84-.Ltext0
 4424 0249 88020000 		.4byte	.LVL85-.Ltext0
 4425 024d 0100     		.2byte	0x1
 4426 024f 50       		.byte	0x50
 4427 0250 88020000 		.4byte	.LVL85-.Ltext0
 4428 0254 90020000 		.4byte	.LFE85-.Ltext0
 4429 0258 0400     		.2byte	0x4
 4430 025a F3       		.byte	0xf3
 4431 025b 01       		.uleb128 0x1
 4432 025c 50       		.byte	0x50
 4433 025d 9F       		.byte	0x9f
 4434 025e 00000000 		.4byte	0
 4435 0262 00000000 		.4byte	0
 4436              	.LLST20:
 4437 0266 58020000 		.4byte	.LVL78-.Ltext0
 4438 026a 62020000 		.4byte	.LVL79-.Ltext0
 4439 026e 0100     		.2byte	0x1
 4440 0270 50       		.byte	0x50
 4441 0271 62020000 		.4byte	.LVL79-.Ltext0
 4442 0275 66020000 		.4byte	.LVL80-.Ltext0
 4443 0279 0400     		.2byte	0x4
 4444 027b F3       		.byte	0xf3
 4445 027c 01       		.uleb128 0x1
ARM GAS  /tmp/ccwsohif.s 			page 105


 4446 027d 50       		.byte	0x50
 4447 027e 9F       		.byte	0x9f
 4448 027f 66020000 		.4byte	.LVL80-.Ltext0
 4449 0283 6C020000 		.4byte	.LVL81-.Ltext0
 4450 0287 0100     		.2byte	0x1
 4451 0289 50       		.byte	0x50
 4452 028a 6C020000 		.4byte	.LVL81-.Ltext0
 4453 028e 74020000 		.4byte	.LFE84-.Ltext0
 4454 0292 0400     		.2byte	0x4
 4455 0294 F3       		.byte	0xf3
 4456 0295 01       		.uleb128 0x1
 4457 0296 50       		.byte	0x50
 4458 0297 9F       		.byte	0x9f
 4459 0298 00000000 		.4byte	0
 4460 029c 00000000 		.4byte	0
 4461              	.LLST16:
 4462 02a0 AA010000 		.4byte	.LVL43-.Ltext0
 4463 02a4 AE010000 		.4byte	.LVL44-.Ltext0
 4464 02a8 0200     		.2byte	0x2
 4465 02aa 30       		.byte	0x30
 4466 02ab 9F       		.byte	0x9f
 4467 02ac AE010000 		.4byte	.LVL44-.Ltext0
 4468 02b0 B2010000 		.4byte	.LVL45-.Ltext0
 4469 02b4 0500     		.2byte	0x5
 4470 02b6 73       		.byte	0x73
 4471 02b7 00       		.sleb128 0
 4472 02b8 3C       		.byte	0x3c
 4473 02b9 1A       		.byte	0x1a
 4474 02ba 9F       		.byte	0x9f
 4475 02bb B2010000 		.4byte	.LVL45-.Ltext0
 4476 02bf BE010000 		.4byte	.LVL46-.Ltext0
 4477 02c3 0100     		.2byte	0x1
 4478 02c5 53       		.byte	0x53
 4479 02c6 C2010000 		.4byte	.LVL47-.Ltext0
 4480 02ca C4010000 		.4byte	.LVL48-.Ltext0
 4481 02ce 0100     		.2byte	0x1
 4482 02d0 53       		.byte	0x53
 4483 02d1 CA010000 		.4byte	.LVL50-.Ltext0
 4484 02d5 CE010000 		.4byte	.LVL51-.Ltext0
 4485 02d9 0600     		.2byte	0x6
 4486 02db 73       		.byte	0x73
 4487 02dc 00       		.sleb128 0
 4488 02dd 08       		.byte	0x8
 4489 02de F0       		.byte	0xf0
 4490 02df 1A       		.byte	0x1a
 4491 02e0 9F       		.byte	0x9f
 4492 02e1 CE010000 		.4byte	.LVL51-.Ltext0
 4493 02e5 D2010000 		.4byte	.LVL52-.Ltext0
 4494 02e9 0100     		.2byte	0x1
 4495 02eb 53       		.byte	0x53
 4496 02ec DC010000 		.4byte	.LVL54-.Ltext0
 4497 02f0 E0010000 		.4byte	.LVL55-.Ltext0
 4498 02f4 0700     		.2byte	0x7
 4499 02f6 71       		.byte	0x71
 4500 02f7 00       		.sleb128 0
 4501 02f8 0A       		.byte	0xa
 4502 02f9 0007     		.2byte	0x700
ARM GAS  /tmp/ccwsohif.s 			page 106


 4503 02fb 1A       		.byte	0x1a
 4504 02fc 9F       		.byte	0x9f
 4505 02fd E0010000 		.4byte	.LVL55-.Ltext0
 4506 0301 E2010000 		.4byte	.LVL56-.Ltext0
 4507 0305 0100     		.2byte	0x1
 4508 0307 51       		.byte	0x51
 4509 0308 EC010000 		.4byte	.LVL59-.Ltext0
 4510 030c F0010000 		.4byte	.LVL60-.Ltext0
 4511 0310 0700     		.2byte	0x7
 4512 0312 71       		.byte	0x71
 4513 0313 00       		.sleb128 0
 4514 0314 0A       		.byte	0xa
 4515 0315 0038     		.2byte	0x3800
 4516 0317 1A       		.byte	0x1a
 4517 0318 9F       		.byte	0x9f
 4518 0319 F0010000 		.4byte	.LVL60-.Ltext0
 4519 031d F2010000 		.4byte	.LVL61-.Ltext0
 4520 0321 0100     		.2byte	0x1
 4521 0323 51       		.byte	0x51
 4522 0324 FA010000 		.4byte	.LVL63-.Ltext0
 4523 0328 FE010000 		.4byte	.LVL64-.Ltext0
 4524 032c 0700     		.2byte	0x7
 4525 032e 71       		.byte	0x71
 4526 032f 00       		.sleb128 0
 4527 0330 0A       		.byte	0xa
 4528 0331 00C0     		.2byte	0xc000
 4529 0333 1A       		.byte	0x1a
 4530 0334 9F       		.byte	0x9f
 4531 0335 FE010000 		.4byte	.LVL64-.Ltext0
 4532 0339 0E020000 		.4byte	.LVL66-.Ltext0
 4533 033d 0100     		.2byte	0x1
 4534 033f 51       		.byte	0x51
 4535 0340 0E020000 		.4byte	.LVL66-.Ltext0
 4536 0344 10020000 		.4byte	.LVL67-.Ltext0
 4537 0348 0100     		.2byte	0x1
 4538 034a 53       		.byte	0x53
 4539 034b 14020000 		.4byte	.LVL68-.Ltext0
 4540 034f 18020000 		.4byte	.LVL69-.Ltext0
 4541 0353 0100     		.2byte	0x1
 4542 0355 53       		.byte	0x53
 4543 0356 00000000 		.4byte	0
 4544 035a 00000000 		.4byte	0
 4545              	.LLST17:
 4546 035e AA010000 		.4byte	.LVL43-.Ltext0
 4547 0362 C6010000 		.4byte	.LVL49-.Ltext0
 4548 0366 0200     		.2byte	0x2
 4549 0368 30       		.byte	0x30
 4550 0369 9F       		.byte	0x9f
 4551 036a 0E020000 		.4byte	.LVL66-.Ltext0
 4552 036e 18020000 		.4byte	.LVL69-.Ltext0
 4553 0372 0200     		.2byte	0x2
 4554 0374 30       		.byte	0x30
 4555 0375 9F       		.byte	0x9f
 4556 0376 18020000 		.4byte	.LVL69-.Ltext0
 4557 037a 1E020000 		.4byte	.LVL71-.Ltext0
 4558 037e 0700     		.2byte	0x7
 4559 0380 73       		.byte	0x73
ARM GAS  /tmp/ccwsohif.s 			page 107


 4560 0381 00       		.sleb128 0
 4561 0382 4E       		.byte	0x4e
 4562 0383 41       		.byte	0x41
 4563 0384 24       		.byte	0x24
 4564 0385 1A       		.byte	0x1a
 4565 0386 9F       		.byte	0x9f
 4566 0387 20020000 		.4byte	.LVL72-.Ltext0
 4567 038b 38020000 		.4byte	.LVL74-.Ltext0
 4568 038f 0100     		.2byte	0x1
 4569 0391 53       		.byte	0x53
 4570 0392 3C020000 		.4byte	.LVL75-.Ltext0
 4571 0396 42020000 		.4byte	.LVL77-.Ltext0
 4572 039a 0100     		.2byte	0x1
 4573 039c 53       		.byte	0x53
 4574 039d 00000000 		.4byte	0
 4575 03a1 00000000 		.4byte	0
 4576              	.LLST18:
 4577 03a5 AA010000 		.4byte	.LVL43-.Ltext0
 4578 03a9 C6010000 		.4byte	.LVL49-.Ltext0
 4579 03ad 0200     		.2byte	0x2
 4580 03af 30       		.byte	0x30
 4581 03b0 9F       		.byte	0x9f
 4582 03b1 0E020000 		.4byte	.LVL66-.Ltext0
 4583 03b5 1A020000 		.4byte	.LVL70-.Ltext0
 4584 03b9 0200     		.2byte	0x2
 4585 03bb 30       		.byte	0x30
 4586 03bc 9F       		.byte	0x9f
 4587 03bd 1A020000 		.4byte	.LVL70-.Ltext0
 4588 03c1 28020000 		.4byte	.LVL73-.Ltext0
 4589 03c5 0700     		.2byte	0x7
 4590 03c7 72       		.byte	0x72
 4591 03c8 00       		.sleb128 0
 4592 03c9 40       		.byte	0x40
 4593 03ca 3C       		.byte	0x3c
 4594 03cb 24       		.byte	0x24
 4595 03cc 1A       		.byte	0x1a
 4596 03cd 9F       		.byte	0x9f
 4597 03ce 3C020000 		.4byte	.LVL75-.Ltext0
 4598 03d2 3E020000 		.4byte	.LVL76-.Ltext0
 4599 03d6 0700     		.2byte	0x7
 4600 03d8 72       		.byte	0x72
 4601 03d9 00       		.sleb128 0
 4602 03da 40       		.byte	0x40
 4603 03db 3C       		.byte	0x3c
 4604 03dc 24       		.byte	0x24
 4605 03dd 1A       		.byte	0x1a
 4606 03de 9F       		.byte	0x9f
 4607 03df 00000000 		.4byte	0
 4608 03e3 00000000 		.4byte	0
 4609              	.LLST19:
 4610 03e7 AA010000 		.4byte	.LVL43-.Ltext0
 4611 03eb D4010000 		.4byte	.LVL53-.Ltext0
 4612 03ef 0200     		.2byte	0x2
 4613 03f1 30       		.byte	0x30
 4614 03f2 9F       		.byte	0x9f
 4615 03f3 D4010000 		.4byte	.LVL53-.Ltext0
 4616 03f7 DC010000 		.4byte	.LVL54-.Ltext0
ARM GAS  /tmp/ccwsohif.s 			page 108


 4617 03fb 0600     		.2byte	0x6
 4618 03fd 71       		.byte	0x71
 4619 03fe 00       		.sleb128 0
 4620 03ff 08       		.byte	0x8
 4621 0400 FF       		.byte	0xff
 4622 0401 1A       		.byte	0x1a
 4623 0402 9F       		.byte	0x9f
 4624 0403 E4010000 		.4byte	.LVL57-.Ltext0
 4625 0407 E8010000 		.4byte	.LVL58-.Ltext0
 4626 040b 0600     		.2byte	0x6
 4627 040d 71       		.byte	0x71
 4628 040e 00       		.sleb128 0
 4629 040f 08       		.byte	0x8
 4630 0410 FF       		.byte	0xff
 4631 0411 1A       		.byte	0x1a
 4632 0412 9F       		.byte	0x9f
 4633 0413 F4010000 		.4byte	.LVL62-.Ltext0
 4634 0417 FA010000 		.4byte	.LVL63-.Ltext0
 4635 041b 0600     		.2byte	0x6
 4636 041d 71       		.byte	0x71
 4637 041e 00       		.sleb128 0
 4638 041f 08       		.byte	0x8
 4639 0420 FF       		.byte	0xff
 4640 0421 1A       		.byte	0x1a
 4641 0422 9F       		.byte	0x9f
 4642 0423 04020000 		.4byte	.LVL65-.Ltext0
 4643 0427 0E020000 		.4byte	.LVL66-.Ltext0
 4644 042b 0600     		.2byte	0x6
 4645 042d 72       		.byte	0x72
 4646 042e 00       		.sleb128 0
 4647 042f 08       		.byte	0x8
 4648 0430 FF       		.byte	0xff
 4649 0431 1A       		.byte	0x1a
 4650 0432 9F       		.byte	0x9f
 4651 0433 0E020000 		.4byte	.LVL66-.Ltext0
 4652 0437 58020000 		.4byte	.LFE83-.Ltext0
 4653 043b 0200     		.2byte	0x2
 4654 043d 30       		.byte	0x30
 4655 043e 9F       		.byte	0x9f
 4656 043f 00000000 		.4byte	0
 4657 0443 00000000 		.4byte	0
 4658              	.LLST15:
 4659 0447 8C010000 		.4byte	.LVL39-.Ltext0
 4660 044b 92010000 		.4byte	.LVL40-.Ltext0
 4661 044f 0100     		.2byte	0x1
 4662 0451 50       		.byte	0x50
 4663 0452 92010000 		.4byte	.LVL40-.Ltext0
 4664 0456 9C010000 		.4byte	.LFE81-.Ltext0
 4665 045a 0400     		.2byte	0x4
 4666 045c F3       		.byte	0xf3
 4667 045d 01       		.uleb128 0x1
 4668 045e 50       		.byte	0x50
 4669 045f 9F       		.byte	0x9f
 4670 0460 00000000 		.4byte	0
 4671 0464 00000000 		.4byte	0
 4672              	.LLST13:
 4673 0468 44010000 		.4byte	.LVL33-.Ltext0
ARM GAS  /tmp/ccwsohif.s 			page 109


 4674 046c 4E010000 		.4byte	.LVL36-.Ltext0
 4675 0470 0100     		.2byte	0x1
 4676 0472 50       		.byte	0x50
 4677 0473 4E010000 		.4byte	.LVL36-.Ltext0
 4678 0477 58010000 		.4byte	.LFE78-.Ltext0
 4679 047b 0400     		.2byte	0x4
 4680 047d F3       		.byte	0xf3
 4681 047e 01       		.uleb128 0x1
 4682 047f 50       		.byte	0x50
 4683 0480 9F       		.byte	0x9f
 4684 0481 00000000 		.4byte	0
 4685 0485 00000000 		.4byte	0
 4686              	.LLST14:
 4687 0489 44010000 		.4byte	.LVL33-.Ltext0
 4688 048d 48010000 		.4byte	.LVL34-.Ltext0
 4689 0491 0200     		.2byte	0x2
 4690 0493 30       		.byte	0x30
 4691 0494 9F       		.byte	0x9f
 4692 0495 48010000 		.4byte	.LVL34-.Ltext0
 4693 0499 4E010000 		.4byte	.LVL36-.Ltext0
 4694 049d 0100     		.2byte	0x1
 4695 049f 53       		.byte	0x53
 4696 04a0 4E010000 		.4byte	.LVL36-.Ltext0
 4697 04a4 58010000 		.4byte	.LFE78-.Ltext0
 4698 04a8 0100     		.2byte	0x1
 4699 04aa 50       		.byte	0x50
 4700 04ab 00000000 		.4byte	0
 4701 04af 00000000 		.4byte	0
 4702              	.LLST12:
 4703 04b3 1C010000 		.4byte	.LVL28-.Ltext0
 4704 04b7 26010000 		.4byte	.LVL29-.Ltext0
 4705 04bb 0100     		.2byte	0x1
 4706 04bd 50       		.byte	0x50
 4707 04be 26010000 		.4byte	.LVL29-.Ltext0
 4708 04c2 2A010000 		.4byte	.LVL30-.Ltext0
 4709 04c6 0400     		.2byte	0x4
 4710 04c8 F3       		.byte	0xf3
 4711 04c9 01       		.uleb128 0x1
 4712 04ca 50       		.byte	0x50
 4713 04cb 9F       		.byte	0x9f
 4714 04cc 2A010000 		.4byte	.LVL30-.Ltext0
 4715 04d0 30010000 		.4byte	.LVL31-.Ltext0
 4716 04d4 0100     		.2byte	0x1
 4717 04d6 50       		.byte	0x50
 4718 04d7 30010000 		.4byte	.LVL31-.Ltext0
 4719 04db 38010000 		.4byte	.LFE76-.Ltext0
 4720 04df 0400     		.2byte	0x4
 4721 04e1 F3       		.byte	0xf3
 4722 04e2 01       		.uleb128 0x1
 4723 04e3 50       		.byte	0x50
 4724 04e4 9F       		.byte	0x9f
 4725 04e5 00000000 		.4byte	0
 4726 04e9 00000000 		.4byte	0
 4727              	.LLST10:
 4728 04ed 08010000 		.4byte	.LVL24-.Ltext0
 4729 04f1 14010000 		.4byte	.LVL27-.Ltext0
 4730 04f5 0100     		.2byte	0x1
ARM GAS  /tmp/ccwsohif.s 			page 110


 4731 04f7 50       		.byte	0x50
 4732 04f8 14010000 		.4byte	.LVL27-.Ltext0
 4733 04fc 1C010000 		.4byte	.LFE75-.Ltext0
 4734 0500 0400     		.2byte	0x4
 4735 0502 F3       		.byte	0xf3
 4736 0503 01       		.uleb128 0x1
 4737 0504 50       		.byte	0x50
 4738 0505 9F       		.byte	0x9f
 4739 0506 00000000 		.4byte	0
 4740 050a 00000000 		.4byte	0
 4741              	.LLST11:
 4742 050e 08010000 		.4byte	.LVL24-.Ltext0
 4743 0512 0C010000 		.4byte	.LVL25-.Ltext0
 4744 0516 0200     		.2byte	0x2
 4745 0518 30       		.byte	0x30
 4746 0519 9F       		.byte	0x9f
 4747 051a 0C010000 		.4byte	.LVL25-.Ltext0
 4748 051e 14010000 		.4byte	.LVL27-.Ltext0
 4749 0522 0100     		.2byte	0x1
 4750 0524 53       		.byte	0x53
 4751 0525 14010000 		.4byte	.LVL27-.Ltext0
 4752 0529 1C010000 		.4byte	.LFE75-.Ltext0
 4753 052d 0100     		.2byte	0x1
 4754 052f 50       		.byte	0x50
 4755 0530 00000000 		.4byte	0
 4756 0534 00000000 		.4byte	0
 4757              	.LLST8:
 4758 0538 F4000000 		.4byte	.LVL20-.Ltext0
 4759 053c FE000000 		.4byte	.LVL23-.Ltext0
 4760 0540 0100     		.2byte	0x1
 4761 0542 50       		.byte	0x50
 4762 0543 FE000000 		.4byte	.LVL23-.Ltext0
 4763 0547 08010000 		.4byte	.LFE74-.Ltext0
 4764 054b 0400     		.2byte	0x4
 4765 054d F3       		.byte	0xf3
 4766 054e 01       		.uleb128 0x1
 4767 054f 50       		.byte	0x50
 4768 0550 9F       		.byte	0x9f
 4769 0551 00000000 		.4byte	0
 4770 0555 00000000 		.4byte	0
 4771              	.LLST9:
 4772 0559 F4000000 		.4byte	.LVL20-.Ltext0
 4773 055d F8000000 		.4byte	.LVL21-.Ltext0
 4774 0561 0200     		.2byte	0x2
 4775 0563 30       		.byte	0x30
 4776 0564 9F       		.byte	0x9f
 4777 0565 F8000000 		.4byte	.LVL21-.Ltext0
 4778 0569 FE000000 		.4byte	.LVL23-.Ltext0
 4779 056d 0100     		.2byte	0x1
 4780 056f 53       		.byte	0x53
 4781 0570 FE000000 		.4byte	.LVL23-.Ltext0
 4782 0574 08010000 		.4byte	.LFE74-.Ltext0
 4783 0578 0100     		.2byte	0x1
 4784 057a 50       		.byte	0x50
 4785 057b 00000000 		.4byte	0
 4786 057f 00000000 		.4byte	0
 4787              	.LLST6:
ARM GAS  /tmp/ccwsohif.s 			page 111


 4788 0583 E0000000 		.4byte	.LVL16-.Ltext0
 4789 0587 EA000000 		.4byte	.LVL19-.Ltext0
 4790 058b 0100     		.2byte	0x1
 4791 058d 50       		.byte	0x50
 4792 058e EA000000 		.4byte	.LVL19-.Ltext0
 4793 0592 F4000000 		.4byte	.LFE73-.Ltext0
 4794 0596 0400     		.2byte	0x4
 4795 0598 F3       		.byte	0xf3
 4796 0599 01       		.uleb128 0x1
 4797 059a 50       		.byte	0x50
 4798 059b 9F       		.byte	0x9f
 4799 059c 00000000 		.4byte	0
 4800 05a0 00000000 		.4byte	0
 4801              	.LLST7:
 4802 05a4 E0000000 		.4byte	.LVL16-.Ltext0
 4803 05a8 E4000000 		.4byte	.LVL17-.Ltext0
 4804 05ac 0200     		.2byte	0x2
 4805 05ae 30       		.byte	0x30
 4806 05af 9F       		.byte	0x9f
 4807 05b0 E4000000 		.4byte	.LVL17-.Ltext0
 4808 05b4 EA000000 		.4byte	.LVL19-.Ltext0
 4809 05b8 0100     		.2byte	0x1
 4810 05ba 53       		.byte	0x53
 4811 05bb EA000000 		.4byte	.LVL19-.Ltext0
 4812 05bf F4000000 		.4byte	.LFE73-.Ltext0
 4813 05c3 0100     		.2byte	0x1
 4814 05c5 50       		.byte	0x50
 4815 05c6 00000000 		.4byte	0
 4816 05ca 00000000 		.4byte	0
 4817              	.LLST4:
 4818 05ce BC000000 		.4byte	.LVL12-.Ltext0
 4819 05d2 C6000000 		.4byte	.LVL15-.Ltext0
 4820 05d6 0100     		.2byte	0x1
 4821 05d8 50       		.byte	0x50
 4822 05d9 C6000000 		.4byte	.LVL15-.Ltext0
 4823 05dd D0000000 		.4byte	.LFE71-.Ltext0
 4824 05e1 0400     		.2byte	0x4
 4825 05e3 F3       		.byte	0xf3
 4826 05e4 01       		.uleb128 0x1
 4827 05e5 50       		.byte	0x50
 4828 05e6 9F       		.byte	0x9f
 4829 05e7 00000000 		.4byte	0
 4830 05eb 00000000 		.4byte	0
 4831              	.LLST5:
 4832 05ef BC000000 		.4byte	.LVL12-.Ltext0
 4833 05f3 C0000000 		.4byte	.LVL13-.Ltext0
 4834 05f7 0200     		.2byte	0x2
 4835 05f9 30       		.byte	0x30
 4836 05fa 9F       		.byte	0x9f
 4837 05fb C0000000 		.4byte	.LVL13-.Ltext0
 4838 05ff C6000000 		.4byte	.LVL15-.Ltext0
 4839 0603 0100     		.2byte	0x1
 4840 0605 53       		.byte	0x53
 4841 0606 C6000000 		.4byte	.LVL15-.Ltext0
 4842 060a D0000000 		.4byte	.LFE71-.Ltext0
 4843 060e 0100     		.2byte	0x1
 4844 0610 50       		.byte	0x50
ARM GAS  /tmp/ccwsohif.s 			page 112


 4845 0611 00000000 		.4byte	0
 4846 0615 00000000 		.4byte	0
 4847              	.LLST2:
 4848 0619 9C000000 		.4byte	.LVL6-.Ltext0
 4849 061d A6000000 		.4byte	.LVL9-.Ltext0
 4850 0621 0100     		.2byte	0x1
 4851 0623 51       		.byte	0x51
 4852 0624 A6000000 		.4byte	.LVL9-.Ltext0
 4853 0628 B0000000 		.4byte	.LFE69-.Ltext0
 4854 062c 0400     		.2byte	0x4
 4855 062e F3       		.byte	0xf3
 4856 062f 01       		.uleb128 0x1
 4857 0630 51       		.byte	0x51
 4858 0631 9F       		.byte	0x9f
 4859 0632 00000000 		.4byte	0
 4860 0636 00000000 		.4byte	0
 4861              	.LLST3:
 4862 063a 9C000000 		.4byte	.LVL6-.Ltext0
 4863 063e A0000000 		.4byte	.LVL7-.Ltext0
 4864 0642 0200     		.2byte	0x2
 4865 0644 30       		.byte	0x30
 4866 0645 9F       		.byte	0x9f
 4867 0646 A0000000 		.4byte	.LVL7-.Ltext0
 4868 064a A4000000 		.4byte	.LVL8-.Ltext0
 4869 064e 0900     		.2byte	0x9
 4870 0650 73       		.byte	0x73
 4871 0651 00       		.sleb128 0
 4872 0652 11       		.byte	0x11
 4873 0653 FFFF837E 		.sleb128 -4128769
 4874 0657 1A       		.byte	0x1a
 4875 0658 9F       		.byte	0x9f
 4876 0659 A4000000 		.4byte	.LVL8-.Ltext0
 4877 065d A8000000 		.4byte	.LVL10-.Ltext0
 4878 0661 0100     		.2byte	0x1
 4879 0663 53       		.byte	0x53
 4880 0664 A8000000 		.4byte	.LVL10-.Ltext0
 4881 0668 B0000000 		.4byte	.LFE69-.Ltext0
 4882 066c 0100     		.2byte	0x1
 4883 066e 51       		.byte	0x51
 4884 066f 00000000 		.4byte	0
 4885 0673 00000000 		.4byte	0
 4886              	.LLST0:
 4887 0677 7C000000 		.4byte	.LVL1-.Ltext0
 4888 067b 88000000 		.4byte	.LVL4-.Ltext0
 4889 067f 0100     		.2byte	0x1
 4890 0681 50       		.byte	0x50
 4891 0682 88000000 		.4byte	.LVL4-.Ltext0
 4892 0686 90000000 		.4byte	.LFE67-.Ltext0
 4893 068a 0400     		.2byte	0x4
 4894 068c F3       		.byte	0xf3
 4895 068d 01       		.uleb128 0x1
 4896 068e 50       		.byte	0x50
 4897 068f 9F       		.byte	0x9f
 4898 0690 00000000 		.4byte	0
 4899 0694 00000000 		.4byte	0
 4900              	.LLST1:
 4901 0698 7C000000 		.4byte	.LVL1-.Ltext0
ARM GAS  /tmp/ccwsohif.s 			page 113


 4902 069c 80000000 		.4byte	.LVL2-.Ltext0
 4903 06a0 0200     		.2byte	0x2
 4904 06a2 30       		.byte	0x30
 4905 06a3 9F       		.byte	0x9f
 4906 06a4 80000000 		.4byte	.LVL2-.Ltext0
 4907 06a8 88000000 		.4byte	.LVL4-.Ltext0
 4908 06ac 0100     		.2byte	0x1
 4909 06ae 53       		.byte	0x53
 4910 06af 88000000 		.4byte	.LVL4-.Ltext0
 4911 06b3 90000000 		.4byte	.LFE67-.Ltext0
 4912 06b7 0100     		.2byte	0x1
 4913 06b9 50       		.byte	0x50
 4914 06ba 00000000 		.4byte	0
 4915 06be 00000000 		.4byte	0
 4916              	.LLST29:
 4917 06c2 38030000 		.4byte	.LVL110-.Ltext0
 4918 06c6 58030000 		.4byte	.LVL114-.Ltext0
 4919 06ca 0200     		.2byte	0x2
 4920 06cc 30       		.byte	0x30
 4921 06cd 9F       		.byte	0x9f
 4922 06ce 58030000 		.4byte	.LVL114-.Ltext0
 4923 06d2 5A030000 		.4byte	.LVL115-.Ltext0
 4924 06d6 0700     		.2byte	0x7
 4925 06d8 70       		.byte	0x70
 4926 06d9 00       		.sleb128 0
 4927 06da 48       		.byte	0x48
 4928 06db 24       		.byte	0x24
 4929 06dc 30       		.byte	0x30
 4930 06dd 2E       		.byte	0x2e
 4931 06de 9F       		.byte	0x9f
 4932 06df 00000000 		.4byte	0
 4933 06e3 00000000 		.4byte	0
 4934              	.LLST30:
 4935 06e7 38030000 		.4byte	.LVL110-.Ltext0
 4936 06eb 3A030000 		.4byte	.LVL111-.Ltext0
 4937 06ef 0200     		.2byte	0x2
 4938 06f1 30       		.byte	0x30
 4939 06f2 9F       		.byte	0x9f
 4940 06f3 40030000 		.4byte	.LVL112-.Ltext0
 4941 06f7 54030000 		.4byte	.LVL113-.Ltext0
 4942 06fb 0100     		.2byte	0x1
 4943 06fd 50       		.byte	0x50
 4944 06fe 00000000 		.4byte	0
 4945 0702 00000000 		.4byte	0
 4946              		.section	.debug_aranges,"",%progbits
 4947 0000 1C000000 		.4byte	0x1c
 4948 0004 0200     		.2byte	0x2
 4949 0006 00000000 		.4byte	.Ldebug_info0
 4950 000a 04       		.byte	0x4
 4951 000b 00       		.byte	0
 4952 000c 0000     		.2byte	0
 4953 000e 0000     		.2byte	0
 4954 0010 00000000 		.4byte	.Ltext0
 4955 0014 94030000 		.4byte	.Letext0-.Ltext0
 4956 0018 00000000 		.4byte	0
 4957 001c 00000000 		.4byte	0
 4958              		.section	.debug_line,"",%progbits
ARM GAS  /tmp/ccwsohif.s 			page 114


 4959              	.Ldebug_line0:
 4960 0000 49030000 		.section	.debug_str,"MS",%progbits,1
 4960      02002202 
 4960      00000201 
 4960      FB0E0D00 
 4960      01010101 
 4961              	.LASF80:
 4962 0000 5F64736F 		.ascii	"_dso_handle\000"
 4962      5F68616E 
 4962      646C6500 
 4963              	.LASF211:
 4964 000c 5243435F 		.ascii	"RCC_HCLK\000"
 4964      48434C4B 
 4964      00
 4965              	.LASF54:
 4966 0015 5F66706F 		.ascii	"_fpos_t\000"
 4966      735F7400 
 4967              	.LASF203:
 4968 001d 5243435F 		.ascii	"RCC_LSE\000"
 4968      4C534500 
 4969              	.LASF89:
 4970 0025 5F5F7346 		.ascii	"__sFILE\000"
 4970      494C4500 
 4971              	.LASF79:
 4972 002d 5F666E61 		.ascii	"_fnargs\000"
 4972      72677300 
 4973              	.LASF163:
 4974 0035 6C6F6E67 		.ascii	"long double\000"
 4974      20646F75 
 4974      626C6500 
 4975              	.LASF133:
 4976 0041 5F72616E 		.ascii	"_rand48\000"
 4976      64343800 
 4977              	.LASF178:
 4978 0049 73746174 		.ascii	"statusreg\000"
 4978      75737265 
 4978      6700
 4979              	.LASF166:
 4980 0053 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 4980      6C69626D 
 4980      5F786F70 
 4980      656E00
 4981              	.LASF21:
 4982 0062 466C6167 		.ascii	"FlagStatus\000"
 4982      53746174 
 4982      757300
 4983              	.LASF112:
 4984 006d 5F656D65 		.ascii	"_emergency\000"
 4984      7267656E 
 4984      637900
 4985              	.LASF104:
 4986 0078 5F6D6273 		.ascii	"_mbstate\000"
 4986      74617465 
 4986      00
 4987              	.LASF190:
 4988 0081 5243435F 		.ascii	"RCC_APB2PeriphClockCmd\000"
 4988      41504232 
ARM GAS  /tmp/ccwsohif.s 			page 115


 4988      50657269 
 4988      7068436C 
 4988      6F636B43 
 4989              	.LASF3:
 4990 0098 5F5F7569 		.ascii	"__uint8_t\000"
 4990      6E74385F 
 4990      7400
 4991              	.LASF149:
 4992 00a2 5F676574 		.ascii	"_getdate_err\000"
 4992      64617465 
 4992      5F657272 
 4992      00
 4993              	.LASF124:
 4994 00af 5F617465 		.ascii	"_atexit0\000"
 4994      78697430 
 4994      00
 4995              	.LASF180:
 4996 00b8 5243435F 		.ascii	"RCC_MCOConfig\000"
 4996      4D434F43 
 4996      6F6E6669 
 4996      6700
 4997              	.LASF185:
 4998 00c6 5243435F 		.ascii	"RCC_APB1PeriphResetCmd\000"
 4998      41504231 
 4998      50657269 
 4998      70685265 
 4998      73657443 
 4999              	.LASF153:
 5000 00dd 5F776372 		.ascii	"_wcrtomb_state\000"
 5000      746F6D62 
 5000      5F737461 
 5000      746500
 5001              	.LASF154:
 5002 00ec 5F776373 		.ascii	"_wcsrtombs_state\000"
 5002      72746F6D 
 5002      62735F73 
 5002      74617465 
 5002      00
 5003              	.LASF179:
 5004 00fd 5243435F 		.ascii	"RCC_ClearITPendingBit\000"
 5004      436C6561 
 5004      72495450 
 5004      656E6469 
 5004      6E674269 
 5005              	.LASF11:
 5006 0113 6C6F6E67 		.ascii	"long long unsigned int\000"
 5006      206C6F6E 
 5006      6720756E 
 5006      7369676E 
 5006      65642069 
 5007              	.LASF167:
 5008 012a 5F5F6664 		.ascii	"__fdlibm_posix\000"
 5008      6C69626D 
 5008      5F706F73 
 5008      697800
 5009              	.LASF92:
 5010 0139 5F6C6266 		.ascii	"_lbfsize\000"
ARM GAS  /tmp/ccwsohif.s 			page 116


 5010      73697A65 
 5010      00
 5011              	.LASF16:
 5012 0142 75696E74 		.ascii	"uint32_t\000"
 5012      33325F74 
 5012      00
 5013              	.LASF18:
 5014 014b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5014      52784275 
 5014      66666572 
 5014      00
 5015              	.LASF168:
 5016 0158 5F5F6664 		.ascii	"__fdlib_version\000"
 5016      6C69625F 
 5016      76657273 
 5016      696F6E00 
 5017              	.LASF43:
 5018 0168 6779726F 		.ascii	"gyro\000"
 5018      00
 5019              	.LASF151:
 5020 016d 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5020      746F7763 
 5020      5F737461 
 5020      746500
 5021              	.LASF194:
 5022 017c 5243435F 		.ascii	"RCC_Clocks\000"
 5022      436C6F63 
 5022      6B7300
 5023              	.LASF146:
 5024 0187 5F776374 		.ascii	"_wctomb_state\000"
 5024      6F6D625F 
 5024      73746174 
 5024      6500
 5025              	.LASF69:
 5026 0195 5F5F746D 		.ascii	"__tm_sec\000"
 5026      5F736563 
 5026      00
 5027              	.LASF53:
 5028 019e 5F6F6666 		.ascii	"_off_t\000"
 5028      5F7400
 5029              	.LASF97:
 5030 01a5 5F636C6F 		.ascii	"_close\000"
 5030      736500
 5031              	.LASF0:
 5032 01ac 7369676E 		.ascii	"signed char\000"
 5032      65642063 
 5032      68617200 
 5033              	.LASF173:
 5034 01b8 5243435F 		.ascii	"RCC_IT\000"
 5034      495400
 5035              	.LASF98:
 5036 01bf 5F756275 		.ascii	"_ubuf\000"
 5036      6600
 5037              	.LASF45:
 5038 01c5 47785F6F 		.ascii	"Gx_offset\000"
 5038      66667365 
 5038      7400
ARM GAS  /tmp/ccwsohif.s 			page 117


 5039              	.LASF186:
 5040 01cf 5243435F 		.ascii	"RCC_APB1Periph\000"
 5040      41504231 
 5040      50657269 
 5040      706800
 5041              	.LASF87:
 5042 01de 5F626173 		.ascii	"_base\000"
 5042      6500
 5043              	.LASF31:
 5044 01e4 41504231 		.ascii	"APB1RSTR\000"
 5044      52535452 
 5044      00
 5045              	.LASF127:
 5046 01ed 5F5F7366 		.ascii	"__sf\000"
 5046      00
 5047              	.LASF78:
 5048 01f2 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5048      65786974 
 5048      5F617267 
 5048      7300
 5049              	.LASF48:
 5050 0200 41636331 		.ascii	"Acc1G_Values\000"
 5050      475F5661 
 5050      6C756573 
 5050      00
 5051              	.LASF206:
 5052 020d 746D7072 		.ascii	"tmpreg\000"
 5052      656700
 5053              	.LASF93:
 5054 0214 5F636F6F 		.ascii	"_cookie\000"
 5054      6B696500 
 5055              	.LASF40:
 5056 021c 50434C4B 		.ascii	"PCLK2_Frequency\000"
 5056      325F4672 
 5056      65717565 
 5056      6E637900 
 5057              	.LASF126:
 5058 022c 5F5F7367 		.ascii	"__sglue\000"
 5058      6C756500 
 5059              	.LASF7:
 5060 0234 6C6F6E67 		.ascii	"long int\000"
 5060      20696E74 
 5060      00
 5061              	.LASF24:
 5062 023d 454E4142 		.ascii	"ENABLE\000"
 5062      4C4500
 5063              	.LASF30:
 5064 0244 41504232 		.ascii	"APB2RSTR\000"
 5064      52535452 
 5064      00
 5065              	.LASF234:
 5066 024d 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/stm32-quadrocopter\000"
 5066      652F656E 
 5066      62696E2F 
 5066      446F6375 
 5066      6D656E74 
 5067              	.LASF82:
ARM GAS  /tmp/ccwsohif.s 			page 118


 5068 027f 5F69735F 		.ascii	"_is_cxa\000"
 5068      63786100 
 5069              	.LASF212:
 5070 0287 5243435F 		.ascii	"RCC_PCLK1Config\000"
 5070      50434C4B 
 5070      31436F6E 
 5070      66696700 
 5071              	.LASF165:
 5072 0297 5F5F6664 		.ascii	"__fdlibm_svid\000"
 5072      6C69626D 
 5072      5F737669 
 5072      6400
 5073              	.LASF118:
 5074 02a5 5F726573 		.ascii	"_result_k\000"
 5074      756C745F 
 5074      6B00
 5075              	.LASF213:
 5076 02af 5243435F 		.ascii	"RCC_HCLKConfig\000"
 5076      48434C4B 
 5076      436F6E66 
 5076      696700
 5077              	.LASF10:
 5078 02be 6C6F6E67 		.ascii	"long long int\000"
 5078      206C6F6E 
 5078      6720696E 
 5078      7400
 5079              	.LASF215:
 5080 02cc 5243435F 		.ascii	"RCC_SYSCLKConfig\000"
 5080      53595343 
 5080      4C4B436F 
 5080      6E666967 
 5080      00
 5081              	.LASF169:
 5082 02dd 5F737973 		.ascii	"_sys_errlist\000"
 5082      5F657272 
 5082      6C697374 
 5082      00
 5083              	.LASF202:
 5084 02ea 5243435F 		.ascii	"RCC_LSEConfig\000"
 5084      4C534543 
 5084      6F6E6669 
 5084      6700
 5085              	.LASF177:
 5086 02f8 5243435F 		.ascii	"RCC_FLAG\000"
 5086      464C4147 
 5086      00
 5087              	.LASF122:
 5088 0301 5F637674 		.ascii	"_cvtbuf\000"
 5088      62756600 
 5089              	.LASF101:
 5090 0309 5F6F6666 		.ascii	"_offset\000"
 5090      73657400 
 5091              	.LASF183:
 5092 0311 4E657753 		.ascii	"NewState\000"
 5092      74617465 
 5092      00
 5093              	.LASF184:
ARM GAS  /tmp/ccwsohif.s 			page 119


 5094 031a 5243435F 		.ascii	"RCC_BackupResetCmd\000"
 5094      4261636B 
 5094      75705265 
 5094      73657443 
 5094      6D6400
 5095              	.LASF138:
 5096 032d 5F737472 		.ascii	"_strtok_last\000"
 5096      746F6B5F 
 5096      6C617374 
 5096      00
 5097              	.LASF150:
 5098 033a 5F6D6272 		.ascii	"_mbrlen_state\000"
 5098      6C656E5F 
 5098      73746174 
 5098      6500
 5099              	.LASF152:
 5100 0348 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5100      72746F77 
 5100      63735F73 
 5100      74617465 
 5100      00
 5101              	.LASF41:
 5102 0359 41444343 		.ascii	"ADCCLK_Frequency\000"
 5102      4C4B5F46 
 5102      72657175 
 5102      656E6379 
 5102      00
 5103              	.LASF85:
 5104 036a 5F666E73 		.ascii	"_fns\000"
 5104      00
 5105              	.LASF8:
 5106 036f 5F5F7569 		.ascii	"__uint32_t\000"
 5106      6E743332 
 5106      5F7400
 5107              	.LASF28:
 5108 037a 4572726F 		.ascii	"ErrorStatus\000"
 5108      72537461 
 5108      74757300 
 5109              	.LASF219:
 5110 0386 5243435F 		.ascii	"RCC_PLLSource\000"
 5110      504C4C53 
 5110      6F757263 
 5110      6500
 5111              	.LASF236:
 5112 0394 5243435F 		.ascii	"RCC_GetSYSCLKSource\000"
 5112      47657453 
 5112      5953434C 
 5112      4B536F75 
 5112      72636500 
 5113              	.LASF159:
 5114 03a8 5F696D70 		.ascii	"_impure_ptr\000"
 5114      7572655F 
 5114      70747200 
 5115              	.LASF110:
 5116 03b4 5F737464 		.ascii	"_stderr\000"
 5116      65727200 
 5117              	.LASF67:
ARM GAS  /tmp/ccwsohif.s 			page 120


 5118 03bc 5F426967 		.ascii	"_Bigint\000"
 5118      696E7400 
 5119              	.LASF224:
 5120 03c4 5243435F 		.ascii	"RCC_WaitForHSEStartUp\000"
 5120      57616974 
 5120      466F7248 
 5120      53455374 
 5120      61727455 
 5121              	.LASF174:
 5122 03da 62697473 		.ascii	"bitstatus\000"
 5122      74617475 
 5122      7300
 5123              	.LASF38:
 5124 03e4 48434C4B 		.ascii	"HCLK_Frequency\000"
 5124      5F467265 
 5124      7175656E 
 5124      637900
 5125              	.LASF94:
 5126 03f3 5F726561 		.ascii	"_read\000"
 5126      6400
 5127              	.LASF22:
 5128 03f9 49545374 		.ascii	"ITStatus\000"
 5128      61747573 
 5128      00
 5129              	.LASF68:
 5130 0402 5F5F746D 		.ascii	"__tm\000"
 5130      00
 5131              	.LASF23:
 5132 0407 44495341 		.ascii	"DISABLE\000"
 5132      424C4500 
 5133              	.LASF57:
 5134 040f 5F5F7763 		.ascii	"__wchb\000"
 5134      686200
 5135              	.LASF29:
 5136 0416 43464752 		.ascii	"CFGR\000"
 5136      00
 5137              	.LASF109:
 5138 041b 5F737464 		.ascii	"_stdout\000"
 5138      6F757400 
 5139              	.LASF121:
 5140 0423 5F637674 		.ascii	"_cvtlen\000"
 5140      6C656E00 
 5141              	.LASF9:
 5142 042b 6C6F6E67 		.ascii	"long unsigned int\000"
 5142      20756E73 
 5142      69676E65 
 5142      6420696E 
 5142      7400
 5143              	.LASF214:
 5144 043d 5243435F 		.ascii	"RCC_SYSCLK\000"
 5144      53595343 
 5144      4C4B00
 5145              	.LASF91:
 5146 0448 5F66696C 		.ascii	"_file\000"
 5146      6500
 5147              	.LASF37:
 5148 044e 53595343 		.ascii	"SYSCLK_Frequency\000"
ARM GAS  /tmp/ccwsohif.s 			page 121


 5148      4C4B5F46 
 5148      72657175 
 5148      656E6379 
 5148      00
 5149              	.LASF36:
 5150 045f 5243435F 		.ascii	"RCC_TypeDef\000"
 5150      54797065 
 5150      44656600 
 5151              	.LASF197:
 5152 046b 70726573 		.ascii	"presc\000"
 5152      6300
 5153              	.LASF200:
 5154 0471 5243435F 		.ascii	"RCC_RTCCLKSource\000"
 5154      52544343 
 5154      4C4B536F 
 5154      75726365 
 5154      00
 5155              	.LASF102:
 5156 0482 5F646174 		.ascii	"_data\000"
 5156      6100
 5157              	.LASF233:
 5158 0488 6C69622F 		.ascii	"lib/src/stm32f10x_rcc.c\000"
 5158      7372632F 
 5158      73746D33 
 5158      32663130 
 5158      785F7263 
 5159              	.LASF131:
 5160 04a0 5F6E696F 		.ascii	"_niobs\000"
 5160      627300
 5161              	.LASF130:
 5162 04a7 5F676C75 		.ascii	"_glue\000"
 5162      6500
 5163              	.LASF148:
 5164 04ad 5F736967 		.ascii	"_signal_buf\000"
 5164      6E616C5F 
 5164      62756600 
 5165              	.LASF139:
 5166 04b9 5F617363 		.ascii	"_asctime_buf\000"
 5166      74696D65 
 5166      5F627566 
 5166      00
 5167              	.LASF117:
 5168 04c6 5F726573 		.ascii	"_result\000"
 5168      756C7400 
 5169              	.LASF56:
 5170 04ce 5F5F7763 		.ascii	"__wch\000"
 5170      6800
 5171              	.LASF156:
 5172 04d4 5F6E6578 		.ascii	"_nextf\000"
 5172      746600
 5173              	.LASF123:
 5174 04db 5F6E6577 		.ascii	"_new\000"
 5174      00
 5175              	.LASF14:
 5176 04e0 75696E74 		.ascii	"uint16_t\000"
 5176      31365F74 
 5176      00
ARM GAS  /tmp/ccwsohif.s 			page 122


 5177              	.LASF103:
 5178 04e9 5F6C6F63 		.ascii	"_lock\000"
 5178      6B00
 5179              	.LASF135:
 5180 04ef 5F6D756C 		.ascii	"_mult\000"
 5180      7400
 5181              	.LASF172:
 5182 04f5 41444350 		.ascii	"ADCPrescTable\000"
 5182      72657363 
 5182      5461626C 
 5182      6500
 5183              	.LASF95:
 5184 0503 5F777269 		.ascii	"_write\000"
 5184      746500
 5185              	.LASF74:
 5186 050a 5F5F746D 		.ascii	"__tm_year\000"
 5186      5F796561 
 5186      7200
 5187              	.LASF58:
 5188 0514 5F5F636F 		.ascii	"__count\000"
 5188      756E7400 
 5189              	.LASF195:
 5190 051c 706C6C6D 		.ascii	"pllmull\000"
 5190      756C6C00 
 5191              	.LASF157:
 5192 0524 5F6E6D61 		.ascii	"_nmalloc\000"
 5192      6C6C6F63 
 5192      00
 5193              	.LASF198:
 5194 052d 5243435F 		.ascii	"RCC_RTCCLKCmd\000"
 5194      52544343 
 5194      4C4B436D 
 5194      6400
 5195              	.LASF17:
 5196 053b 73697A65 		.ascii	"sizetype\000"
 5196      74797065 
 5196      00
 5197              	.LASF26:
 5198 0544 4552524F 		.ascii	"ERROR\000"
 5198      5200
 5199              	.LASF182:
 5200 054a 5243435F 		.ascii	"RCC_ClockSecuritySystemCmd\000"
 5200      436C6F63 
 5200      6B536563 
 5200      75726974 
 5200      79537973 
 5201              	.LASF192:
 5202 0565 5243435F 		.ascii	"RCC_AHBPeriph\000"
 5202      41484250 
 5202      65726970 
 5202      6800
 5203              	.LASF46:
 5204 0573 47795F6F 		.ascii	"Gy_offset\000"
 5204      66667365 
 5204      7400
 5205              	.LASF66:
 5206 057d 5F776473 		.ascii	"_wds\000"
ARM GAS  /tmp/ccwsohif.s 			page 123


 5206      00
 5207              	.LASF44:
 5208 0582 61636365 		.ascii	"accel\000"
 5208      6C00
 5209              	.LASF47:
 5210 0588 477A5F6F 		.ascii	"Gz_offset\000"
 5210      66667365 
 5210      7400
 5211              	.LASF25:
 5212 0592 46756E63 		.ascii	"FunctionalState\000"
 5212      74696F6E 
 5212      616C5374 
 5212      61746500 
 5213              	.LASF73:
 5214 05a2 5F5F746D 		.ascii	"__tm_mon\000"
 5214      5F6D6F6E 
 5214      00
 5215              	.LASF83:
 5216 05ab 5F617465 		.ascii	"_atexit\000"
 5216      78697400 
 5217              	.LASF161:
 5218 05b3 7375626F 		.ascii	"suboptarg\000"
 5218      70746172 
 5218      6700
 5219              	.LASF115:
 5220 05bd 5F5F7364 		.ascii	"__sdidinit\000"
 5220      6964696E 
 5220      697400
 5221              	.LASF141:
 5222 05c8 5F67616D 		.ascii	"_gamma_signgam\000"
 5222      6D615F73 
 5222      69676E67 
 5222      616D00
 5223              	.LASF187:
 5224 05d7 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 5224      41504232 
 5224      50657269 
 5224      70685265 
 5224      73657443 
 5225              	.LASF55:
 5226 05ee 77696E74 		.ascii	"wint_t\000"
 5226      5F7400
 5227              	.LASF19:
 5228 05f5 53797374 		.ascii	"SystemCoreClock\000"
 5228      656D436F 
 5228      7265436C 
 5228      6F636B00 
 5229              	.LASF120:
 5230 0605 5F667265 		.ascii	"_freelist\000"
 5230      656C6973 
 5230      7400
 5231              	.LASF50:
 5232 060f 50697463 		.ascii	"Pitch\000"
 5232      6800
 5233              	.LASF52:
 5234 0615 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5234      4B5F5245 
ARM GAS  /tmp/ccwsohif.s 			page 124


 5234      43555253 
 5234      4956455F 
 5234      5400
 5235              	.LASF201:
 5236 0627 5243435F 		.ascii	"RCC_LSICmd\000"
 5236      4C534943 
 5236      6D6400
 5237              	.LASF20:
 5238 0632 52455345 		.ascii	"RESET\000"
 5238      5400
 5239              	.LASF228:
 5240 0638 5243435F 		.ascii	"RCC_HSEConfig\000"
 5240      48534543 
 5240      6F6E6669 
 5240      6700
 5241              	.LASF15:
 5242 0646 696E7433 		.ascii	"int32_t\000"
 5242      325F7400 
 5243              	.LASF1:
 5244 064e 756E7369 		.ascii	"unsigned char\000"
 5244      676E6564 
 5244      20636861 
 5244      7200
 5245              	.LASF204:
 5246 065c 5243435F 		.ascii	"RCC_ADCCLKConfig\000"
 5246      41444343 
 5246      4C4B436F 
 5246      6E666967 
 5246      00
 5247              	.LASF205:
 5248 066d 5243435F 		.ascii	"RCC_PCLK2\000"
 5248      50434C4B 
 5248      3200
 5249              	.LASF155:
 5250 0677 5F685F65 		.ascii	"_h_errno\000"
 5250      72726E6F 
 5250      00
 5251              	.LASF61:
 5252 0680 5F666C6F 		.ascii	"_flock_t\000"
 5252      636B5F74 
 5252      00
 5253              	.LASF76:
 5254 0689 5F5F746D 		.ascii	"__tm_yday\000"
 5254      5F796461 
 5254      7900
 5255              	.LASF86:
 5256 0693 5F5F7362 		.ascii	"__sbuf\000"
 5256      756600
 5257              	.LASF105:
 5258 069a 5F666C61 		.ascii	"_flags2\000"
 5258      67733200 
 5259              	.LASF132:
 5260 06a2 5F696F62 		.ascii	"_iobs\000"
 5260      7300
 5261              	.LASF129:
 5262 06a8 5F5F4649 		.ascii	"__FILE\000"
 5262      4C4500
ARM GAS  /tmp/ccwsohif.s 			page 125


 5263              	.LASF60:
 5264 06af 5F6D6273 		.ascii	"_mbstate_t\000"
 5264      74617465 
 5264      5F7400
 5265              	.LASF170:
 5266 06ba 5F737973 		.ascii	"_sys_nerr\000"
 5266      5F6E6572 
 5266      7200
 5267              	.LASF232:
 5268 06c4 474E5520 		.ascii	"GNU C89 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -mfl"
 5268      43383920 
 5268      362E312E 
 5268      31203230 
 5268      31363035 
 5269 06f7 6F61742D 		.ascii	"oat-abi=soft -g -O1 -std=gnu90 -fno-common -fno-mat"
 5269      6162693D 
 5269      736F6674 
 5269      202D6720 
 5269      2D4F3120 
 5270 072a 682D6572 		.ascii	"h-errno\000"
 5270      726E6F00 
 5271              	.LASF142:
 5272 0732 5F72616E 		.ascii	"_rand_next\000"
 5272      645F6E65 
 5272      787400
 5273              	.LASF225:
 5274 073d 53746172 		.ascii	"StartUpCounter\000"
 5274      74557043 
 5274      6F756E74 
 5274      657200
 5275              	.LASF144:
 5276 074c 5F6D626C 		.ascii	"_mblen_state\000"
 5276      656E5F73 
 5276      74617465 
 5276      00
 5277              	.LASF111:
 5278 0759 5F696E63 		.ascii	"_inc\000"
 5278      00
 5279              	.LASF84:
 5280 075e 5F696E64 		.ascii	"_ind\000"
 5280      00
 5281              	.LASF33:
 5282 0763 41504232 		.ascii	"APB2ENR\000"
 5282      454E5200 
 5283              	.LASF208:
 5284 076b 5243435F 		.ascii	"RCC_USBCLKSource\000"
 5284      55534243 
 5284      4C4B536F 
 5284      75726365 
 5284      00
 5285              	.LASF223:
 5286 077c 48534943 		.ascii	"HSICalibrationValue\000"
 5286      616C6962 
 5286      72617469 
 5286      6F6E5661 
 5286      6C756500 
 5287              	.LASF217:
ARM GAS  /tmp/ccwsohif.s 			page 126


 5288 0790 5243435F 		.ascii	"RCC_PLLCmd\000"
 5288      504C4C43 
 5288      6D6400
 5289              	.LASF116:
 5290 079b 5F5F636C 		.ascii	"__cleanup\000"
 5290      65616E75 
 5290      7000
 5291              	.LASF64:
 5292 07a5 5F6D6178 		.ascii	"_maxwds\000"
 5292      77647300 
 5293              	.LASF106:
 5294 07ad 5F726565 		.ascii	"_reent\000"
 5294      6E7400
 5295              	.LASF210:
 5296 07b4 5243435F 		.ascii	"RCC_PCLK2Config\000"
 5296      50434C4B 
 5296      32436F6E 
 5296      66696700 
 5297              	.LASF216:
 5298 07c4 5243435F 		.ascii	"RCC_SYSCLKSource\000"
 5298      53595343 
 5298      4C4B536F 
 5298      75726365 
 5298      00
 5299              	.LASF229:
 5300 07d5 5243435F 		.ascii	"RCC_HSE\000"
 5300      48534500 
 5301              	.LASF59:
 5302 07dd 5F5F7661 		.ascii	"__value\000"
 5302      6C756500 
 5303              	.LASF71:
 5304 07e5 5F5F746D 		.ascii	"__tm_hour\000"
 5304      5F686F75 
 5304      7200
 5305              	.LASF39:
 5306 07ef 50434C4B 		.ascii	"PCLK1_Frequency\000"
 5306      315F4672 
 5306      65717565 
 5306      6E637900 
 5307              	.LASF181:
 5308 07ff 5243435F 		.ascii	"RCC_MCO\000"
 5308      4D434F00 
 5309              	.LASF75:
 5310 0807 5F5F746D 		.ascii	"__tm_wday\000"
 5310      5F776461 
 5310      7900
 5311              	.LASF171:
 5312 0811 41504241 		.ascii	"APBAHBPrescTable\000"
 5312      48425072 
 5312      65736354 
 5312      61626C65 
 5312      00
 5313              	.LASF222:
 5314 0822 5243435F 		.ascii	"RCC_AdjustHSICalibrationValue\000"
 5314      41646A75 
 5314      73744853 
 5314      4943616C 
ARM GAS  /tmp/ccwsohif.s 			page 127


 5314      69627261 
 5315              	.LASF49:
 5316 0840 666C6F61 		.ascii	"float\000"
 5316      7400
 5317              	.LASF193:
 5318 0846 5243435F 		.ascii	"RCC_GetClocksFreq\000"
 5318      47657443 
 5318      6C6F636B 
 5318      73467265 
 5318      7100
 5319              	.LASF107:
 5320 0858 5F657272 		.ascii	"_errno\000"
 5320      6E6F00
 5321              	.LASF128:
 5322 085f 63686172 		.ascii	"char\000"
 5322      00
 5323              	.LASF100:
 5324 0864 5F626C6B 		.ascii	"_blksize\000"
 5324      73697A65 
 5324      00
 5325              	.LASF88:
 5326 086d 5F73697A 		.ascii	"_size\000"
 5326      6500
 5327              	.LASF12:
 5328 0873 756E7369 		.ascii	"unsigned int\000"
 5328      676E6564 
 5328      20696E74 
 5328      00
 5329              	.LASF4:
 5330 0880 5F5F7569 		.ascii	"__uint16_t\000"
 5330      6E743136 
 5330      5F7400
 5331              	.LASF231:
 5332 088b 5243435F 		.ascii	"RCC_DeInit\000"
 5332      4465496E 
 5332      697400
 5333              	.LASF2:
 5334 0896 73686F72 		.ascii	"short int\000"
 5334      7420696E 
 5334      7400
 5335              	.LASF6:
 5336 08a0 5F5F696E 		.ascii	"__int32_t\000"
 5336      7433325F 
 5336      7400
 5337              	.LASF65:
 5338 08aa 5F736967 		.ascii	"_sign\000"
 5338      6E00
 5339              	.LASF51:
 5340 08b0 526F6C6C 		.ascii	"Roll\000"
 5340      00
 5341              	.LASF175:
 5342 08b5 5243435F 		.ascii	"RCC_GetITStatus\000"
 5342      47657449 
 5342      54537461 
 5342      74757300 
 5343              	.LASF63:
 5344 08c5 5F6E6578 		.ascii	"_next\000"
ARM GAS  /tmp/ccwsohif.s 			page 128


 5344      7400
 5345              	.LASF96:
 5346 08cb 5F736565 		.ascii	"_seek\000"
 5346      6B00
 5347              	.LASF34:
 5348 08d1 41504231 		.ascii	"APB1ENR\000"
 5348      454E5200 
 5349              	.LASF81:
 5350 08d9 5F666E74 		.ascii	"_fntypes\000"
 5350      79706573 
 5350      00
 5351              	.LASF176:
 5352 08e2 5243435F 		.ascii	"RCC_GetFlagStatus\000"
 5352      47657446 
 5352      6C616753 
 5352      74617475 
 5352      7300
 5353              	.LASF5:
 5354 08f4 73686F72 		.ascii	"short unsigned int\000"
 5354      7420756E 
 5354      7369676E 
 5354      65642069 
 5354      6E7400
 5355              	.LASF221:
 5356 0907 5243435F 		.ascii	"RCC_HSICmd\000"
 5356      48534943 
 5356      6D6400
 5357              	.LASF227:
 5358 0912 48534553 		.ascii	"HSEStatus\000"
 5358      74617475 
 5358      7300
 5359              	.LASF188:
 5360 091c 5243435F 		.ascii	"RCC_APB2Periph\000"
 5360      41504232 
 5360      50657269 
 5360      706800
 5361              	.LASF136:
 5362 092b 5F616464 		.ascii	"_add\000"
 5362      00
 5363              	.LASF62:
 5364 0930 5F5F554C 		.ascii	"__ULong\000"
 5364      6F6E6700 
 5365              	.LASF134:
 5366 0938 5F736565 		.ascii	"_seed\000"
 5366      6400
 5367              	.LASF235:
 5368 093e 5F5F6664 		.ascii	"__fdlibm_version\000"
 5368      6C69626D 
 5368      5F766572 
 5368      73696F6E 
 5368      00
 5369              	.LASF160:
 5370 094f 5F676C6F 		.ascii	"_global_impure_ptr\000"
 5370      62616C5F 
 5370      696D7075 
 5370      72655F70 
 5370      747200
ARM GAS  /tmp/ccwsohif.s 			page 129


 5371              	.LASF113:
 5372 0962 5F637572 		.ascii	"_current_category\000"
 5372      72656E74 
 5372      5F636174 
 5372      65676F72 
 5372      7900
 5373              	.LASF164:
 5374 0974 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 5374      6C69626D 
 5374      5F696565 
 5374      6500
 5375              	.LASF137:
 5376 0982 5F756E75 		.ascii	"_unused_rand\000"
 5376      7365645F 
 5376      72616E64 
 5376      00
 5377              	.LASF226:
 5378 098f 73746174 		.ascii	"status\000"
 5378      757300
 5379              	.LASF35:
 5380 0996 42444352 		.ascii	"BDCR\000"
 5380      00
 5381              	.LASF189:
 5382 099b 5243435F 		.ascii	"RCC_APB1PeriphClockCmd\000"
 5382      41504231 
 5382      50657269 
 5382      7068436C 
 5382      6F636B43 
 5383              	.LASF209:
 5384 09b2 5243435F 		.ascii	"RCC_ITConfig\000"
 5384      4954436F 
 5384      6E666967 
 5384      00
 5385              	.LASF108:
 5386 09bf 5F737464 		.ascii	"_stdin\000"
 5386      696E00
 5387              	.LASF90:
 5388 09c6 5F666C61 		.ascii	"_flags\000"
 5388      677300
 5389              	.LASF13:
 5390 09cd 75696E74 		.ascii	"uint8_t\000"
 5390      385F7400 
 5391              	.LASF147:
 5392 09d5 5F6C3634 		.ascii	"_l64a_buf\000"
 5392      615F6275 
 5392      6600
 5393              	.LASF27:
 5394 09df 53554343 		.ascii	"SUCCESS\000"
 5394      45535300 
 5395              	.LASF125:
 5396 09e7 5F736967 		.ascii	"_sig_func\000"
 5396      5F66756E 
 5396      6300
 5397              	.LASF218:
 5398 09f1 5243435F 		.ascii	"RCC_PLLConfig\000"
 5398      504C4C43 
 5398      6F6E6669 
ARM GAS  /tmp/ccwsohif.s 			page 130


 5398      6700
 5399              	.LASF42:
 5400 09ff 5243435F 		.ascii	"RCC_ClocksTypeDef\000"
 5400      436C6F63 
 5400      6B735479 
 5400      70654465 
 5400      6600
 5401              	.LASF99:
 5402 0a11 5F6E6275 		.ascii	"_nbuf\000"
 5402      6600
 5403              	.LASF158:
 5404 0a17 5F756E75 		.ascii	"_unused\000"
 5404      73656400 
 5405              	.LASF220:
 5406 0a1f 5243435F 		.ascii	"RCC_PLLMul\000"
 5406      504C4C4D 
 5406      756C00
 5407              	.LASF77:
 5408 0a2a 5F5F746D 		.ascii	"__tm_isdst\000"
 5408      5F697364 
 5408      737400
 5409              	.LASF140:
 5410 0a35 5F6C6F63 		.ascii	"_localtime_buf\000"
 5410      616C7469 
 5410      6D655F62 
 5410      756600
 5411              	.LASF70:
 5412 0a44 5F5F746D 		.ascii	"__tm_min\000"
 5412      5F6D696E 
 5412      00
 5413              	.LASF143:
 5414 0a4d 5F723438 		.ascii	"_r48\000"
 5414      00
 5415              	.LASF199:
 5416 0a52 5243435F 		.ascii	"RCC_RTCCLKConfig\000"
 5416      52544343 
 5416      4C4B436F 
 5416      6E666967 
 5416      00
 5417              	.LASF114:
 5418 0a63 5F637572 		.ascii	"_current_locale\000"
 5418      72656E74 
 5418      5F6C6F63 
 5418      616C6500 
 5419              	.LASF145:
 5420 0a73 5F6D6274 		.ascii	"_mbtowc_state\000"
 5420      6F77635F 
 5420      73746174 
 5420      6500
 5421              	.LASF119:
 5422 0a81 5F703573 		.ascii	"_p5s\000"
 5422      00
 5423              	.LASF191:
 5424 0a86 5243435F 		.ascii	"RCC_AHBPeriphClockCmd\000"
 5424      41484250 
 5424      65726970 
 5424      68436C6F 
ARM GAS  /tmp/ccwsohif.s 			page 131


 5424      636B436D 
 5425              	.LASF230:
 5426 0a9c 5243435F 		.ascii	"RCC_ClearFlag\000"
 5426      436C6561 
 5426      72466C61 
 5426      6700
 5427              	.LASF207:
 5428 0aaa 5243435F 		.ascii	"RCC_USBCLKConfig\000"
 5428      55534243 
 5428      4C4B436F 
 5428      6E666967 
 5428      00
 5429              	.LASF162:
 5430 0abb 646F7562 		.ascii	"double\000"
 5430      6C6500
 5431              	.LASF196:
 5432 0ac2 706C6C73 		.ascii	"pllsource\000"
 5432      6F757263 
 5432      6500
 5433              	.LASF72:
 5434 0acc 5F5F746D 		.ascii	"__tm_mday\000"
 5434      5F6D6461 
 5434      7900
 5435              	.LASF32:
 5436 0ad6 41484245 		.ascii	"AHBENR\000"
 5436      4E5200
 5437              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/ccwsohif.s 			page 132


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
     /tmp/ccwsohif.s:15     .text:0000000000000000 $t
     /tmp/ccwsohif.s:22     .text:0000000000000000 RCC_DeInit
     /tmp/ccwsohif.s:60     .text:0000000000000038 $d
     /tmp/ccwsohif.s:65     .text:0000000000000040 $t
     /tmp/ccwsohif.s:72     .text:0000000000000040 RCC_HSEConfig
     /tmp/ccwsohif.s:113    .text:0000000000000078 $d
     /tmp/ccwsohif.s:117    .text:000000000000007c $t
     /tmp/ccwsohif.s:124    .text:000000000000007c RCC_AdjustHSICalibrationValue
     /tmp/ccwsohif.s:148    .text:000000000000008c $d
     /tmp/ccwsohif.s:152    .text:0000000000000090 $t
     /tmp/ccwsohif.s:159    .text:0000000000000090 RCC_HSICmd
     /tmp/ccwsohif.s:174    .text:0000000000000098 $d
     /tmp/ccwsohif.s:178    .text:000000000000009c $t
     /tmp/ccwsohif.s:185    .text:000000000000009c RCC_PLLConfig
     /tmp/ccwsohif.s:211    .text:00000000000000ac $d
     /tmp/ccwsohif.s:215    .text:00000000000000b0 $t
     /tmp/ccwsohif.s:222    .text:00000000000000b0 RCC_PLLCmd
     /tmp/ccwsohif.s:237    .text:00000000000000b8 $d
     /tmp/ccwsohif.s:241    .text:00000000000000bc $t
     /tmp/ccwsohif.s:248    .text:00000000000000bc RCC_SYSCLKConfig
     /tmp/ccwsohif.s:272    .text:00000000000000cc $d
     /tmp/ccwsohif.s:276    .text:00000000000000d0 $t
     /tmp/ccwsohif.s:283    .text:00000000000000d0 RCC_GetSYSCLKSource
     /tmp/ccwsohif.s:299    .text:00000000000000dc $d
     /tmp/ccwsohif.s:303    .text:00000000000000e0 $t
     /tmp/ccwsohif.s:310    .text:00000000000000e0 RCC_HCLKConfig
     /tmp/ccwsohif.s:334    .text:00000000000000f0 $d
     /tmp/ccwsohif.s:338    .text:00000000000000f4 $t
     /tmp/ccwsohif.s:345    .text:00000000000000f4 RCC_PCLK1Config
     /tmp/ccwsohif.s:369    .text:0000000000000104 $d
     /tmp/ccwsohif.s:373    .text:0000000000000108 $t
     /tmp/ccwsohif.s:380    .text:0000000000000108 RCC_PCLK2Config
     /tmp/ccwsohif.s:404    .text:0000000000000118 $d
     /tmp/ccwsohif.s:408    .text:000000000000011c $t
     /tmp/ccwsohif.s:415    .text:000000000000011c RCC_ITConfig
     /tmp/ccwsohif.s:444    .text:0000000000000134 $d
     /tmp/ccwsohif.s:448    .text:0000000000000138 $t
     /tmp/ccwsohif.s:455    .text:0000000000000138 RCC_USBCLKConfig
     /tmp/ccwsohif.s:470    .text:0000000000000140 $d
     /tmp/ccwsohif.s:474    .text:0000000000000144 $t
     /tmp/ccwsohif.s:481    .text:0000000000000144 RCC_ADCCLKConfig
     /tmp/ccwsohif.s:505    .text:0000000000000154 $d
     /tmp/ccwsohif.s:509    .text:0000000000000158 $t
     /tmp/ccwsohif.s:516    .text:0000000000000158 RCC_LSEConfig
     /tmp/ccwsohif.s:552    .text:000000000000017c $d
     /tmp/ccwsohif.s:556    .text:0000000000000180 $t
     /tmp/ccwsohif.s:563    .text:0000000000000180 RCC_LSICmd
     /tmp/ccwsohif.s:578    .text:0000000000000188 $d
     /tmp/ccwsohif.s:582    .text:000000000000018c $t
     /tmp/ccwsohif.s:589    .text:000000000000018c RCC_RTCCLKConfig
     /tmp/ccwsohif.s:607    .text:0000000000000198 $d
     /tmp/ccwsohif.s:611    .text:000000000000019c $t
     /tmp/ccwsohif.s:618    .text:000000000000019c RCC_RTCCLKCmd
     /tmp/ccwsohif.s:633    .text:00000000000001a4 $d
     /tmp/ccwsohif.s:637    .text:00000000000001a8 $t
ARM GAS  /tmp/ccwsohif.s 			page 133


     /tmp/ccwsohif.s:644    .text:00000000000001a8 RCC_GetClocksFreq
     /tmp/ccwsohif.s:800    .text:0000000000000248 $d
     /tmp/ccwsohif.s:807    .text:0000000000000258 $t
     /tmp/ccwsohif.s:814    .text:0000000000000258 RCC_AHBPeriphClockCmd
     /tmp/ccwsohif.s:843    .text:0000000000000270 $d
     /tmp/ccwsohif.s:847    .text:0000000000000274 $t
     /tmp/ccwsohif.s:854    .text:0000000000000274 RCC_APB2PeriphClockCmd
     /tmp/ccwsohif.s:883    .text:000000000000028c $d
     /tmp/ccwsohif.s:887    .text:0000000000000290 $t
     /tmp/ccwsohif.s:894    .text:0000000000000290 RCC_APB1PeriphClockCmd
     /tmp/ccwsohif.s:923    .text:00000000000002a8 $d
     /tmp/ccwsohif.s:927    .text:00000000000002ac $t
     /tmp/ccwsohif.s:934    .text:00000000000002ac RCC_APB2PeriphResetCmd
     /tmp/ccwsohif.s:963    .text:00000000000002c4 $d
     /tmp/ccwsohif.s:967    .text:00000000000002c8 $t
     /tmp/ccwsohif.s:974    .text:00000000000002c8 RCC_APB1PeriphResetCmd
     /tmp/ccwsohif.s:1003   .text:00000000000002e0 $d
     /tmp/ccwsohif.s:1007   .text:00000000000002e4 $t
     /tmp/ccwsohif.s:1014   .text:00000000000002e4 RCC_BackupResetCmd
     /tmp/ccwsohif.s:1029   .text:00000000000002ec $d
     /tmp/ccwsohif.s:1033   .text:00000000000002f0 $t
     /tmp/ccwsohif.s:1040   .text:00000000000002f0 RCC_ClockSecuritySystemCmd
     /tmp/ccwsohif.s:1055   .text:00000000000002f8 $d
     /tmp/ccwsohif.s:1059   .text:00000000000002fc $t
     /tmp/ccwsohif.s:1066   .text:00000000000002fc RCC_MCOConfig
     /tmp/ccwsohif.s:1081   .text:0000000000000304 $d
     /tmp/ccwsohif.s:1085   .text:0000000000000308 $t
     /tmp/ccwsohif.s:1092   .text:0000000000000308 RCC_GetFlagStatus
     /tmp/ccwsohif.s:1137   .text:000000000000032c $d
     /tmp/ccwsohif.s:1141   .text:0000000000000330 $t
     /tmp/ccwsohif.s:1148   .text:0000000000000330 RCC_WaitForHSEStartUp
     /tmp/ccwsohif.s:1208   .text:0000000000000362 RCC_ClearFlag
     /tmp/ccwsohif.s:1224   .text:0000000000000370 $d
     /tmp/ccwsohif.s:1228   .text:0000000000000374 $t
     /tmp/ccwsohif.s:1235   .text:0000000000000374 RCC_GetITStatus
     /tmp/ccwsohif.s:1257   .text:0000000000000384 $d
     /tmp/ccwsohif.s:1261   .text:0000000000000388 $t
     /tmp/ccwsohif.s:1268   .text:0000000000000388 RCC_ClearITPendingBit
     /tmp/ccwsohif.s:1283   .text:0000000000000390 $d
     /tmp/ccwsohif.s:1288   .data:0000000000000000 $d
     /tmp/ccwsohif.s:1292   .data:0000000000000000 APBAHBPrescTable
     /tmp/ccwsohif.s:1311   .data:0000000000000010 ADCPrescTable
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
