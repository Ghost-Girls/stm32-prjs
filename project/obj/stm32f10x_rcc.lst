ARM GAS  /tmp/ccwtW74c.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	RCC_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	RCC_DeInit, %function
  22              	RCC_DeInit:
  23              	.LFB63:
  24              		.file 1 "lib/src/stm32f10x_rcc.c"
   1:lib/src/stm32f10x_rcc.c **** /**
   2:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:lib/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:lib/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:lib/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:lib/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:lib/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:lib/src/stm32f10x_rcc.c ****   * @attention
  10:lib/src/stm32f10x_rcc.c ****   *
  11:lib/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:lib/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:lib/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:lib/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:lib/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:lib/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:lib/src/stm32f10x_rcc.c ****   *
  18:lib/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:lib/src/stm32f10x_rcc.c ****   */
  21:lib/src/stm32f10x_rcc.c **** 
  22:lib/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:lib/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:lib/src/stm32f10x_rcc.c **** #include "conf.h"
  25:lib/src/stm32f10x_rcc.c **** 
  26:lib/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:lib/src/stm32f10x_rcc.c ****   * @{
  28:lib/src/stm32f10x_rcc.c ****   */
  29:lib/src/stm32f10x_rcc.c **** 
  30:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  31:lib/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  32:lib/src/stm32f10x_rcc.c ****   * @{
  33:lib/src/stm32f10x_rcc.c ****   */ 
ARM GAS  /tmp/ccwtW74c.s 			page 2


  34:lib/src/stm32f10x_rcc.c **** 
  35:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  36:lib/src/stm32f10x_rcc.c ****   * @{
  37:lib/src/stm32f10x_rcc.c ****   */
  38:lib/src/stm32f10x_rcc.c **** 
  39:lib/src/stm32f10x_rcc.c **** /**
  40:lib/src/stm32f10x_rcc.c ****   * @}
  41:lib/src/stm32f10x_rcc.c ****   */
  42:lib/src/stm32f10x_rcc.c **** 
  43:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  44:lib/src/stm32f10x_rcc.c ****   * @{
  45:lib/src/stm32f10x_rcc.c ****   */
  46:lib/src/stm32f10x_rcc.c **** 
  47:lib/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  48:lib/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  49:lib/src/stm32f10x_rcc.c **** 
  50:lib/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  51:lib/src/stm32f10x_rcc.c **** 
  52:lib/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  53:lib/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  54:lib/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  55:lib/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  56:lib/src/stm32f10x_rcc.c **** 
  57:lib/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  58:lib/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  59:lib/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  60:lib/src/stm32f10x_rcc.c **** 
  61:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  62:lib/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  63:lib/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  64:lib/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  65:lib/src/stm32f10x_rcc.c **** 
  66:lib/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  67:lib/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  68:lib/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  69:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  70:lib/src/stm32f10x_rcc.c **** 
  71:lib/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  72:lib/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  73:lib/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  74:lib/src/stm32f10x_rcc.c **** 
  75:lib/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  76:lib/src/stm32f10x_rcc.c **** 
  77:lib/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  78:lib/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  79:lib/src/stm32f10x_rcc.c **** 
  80:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  81:lib/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  82:lib/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  83:lib/src/stm32f10x_rcc.c **** #else
  84:lib/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  85:lib/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  86:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  87:lib/src/stm32f10x_rcc.c **** 
  88:lib/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  89:lib/src/stm32f10x_rcc.c **** 
  90:lib/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
ARM GAS  /tmp/ccwtW74c.s 			page 3


  91:lib/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  92:lib/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  93:lib/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  94:lib/src/stm32f10x_rcc.c **** 
  95:lib/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  96:lib/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  97:lib/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  98:lib/src/stm32f10x_rcc.c **** 
  99:lib/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 100:lib/src/stm32f10x_rcc.c **** 
 101:lib/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 102:lib/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 103:lib/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 104:lib/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 105:lib/src/stm32f10x_rcc.c **** 
 106:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 107:lib/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 108:lib/src/stm32f10x_rcc.c **** 
 109:lib/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 110:lib/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 111:lib/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 112:lib/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 113:lib/src/stm32f10x_rcc.c **** 
 114:lib/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 115:lib/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 116:lib/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 117:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 118:lib/src/stm32f10x_rcc.c **** 
 119:lib/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 120:lib/src/stm32f10x_rcc.c **** 
 121:lib/src/stm32f10x_rcc.c **** /* CR register bit mask */
 122:lib/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 123:lib/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 124:lib/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 125:lib/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 126:lib/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 127:lib/src/stm32f10x_rcc.c **** 
 128:lib/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 129:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 130:lib/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 131:lib/src/stm32f10x_rcc.c **** #else
 132:lib/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 133:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 134:lib/src/stm32f10x_rcc.c **** 
 135:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 136:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 137:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 138:lib/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 139:lib/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 140:lib/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 141:lib/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 142:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 143:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 144:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 145:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 146:lib/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 147:lib/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
ARM GAS  /tmp/ccwtW74c.s 			page 4


 148:lib/src/stm32f10x_rcc.c **** 
 149:lib/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 150:lib/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 151:lib/src/stm32f10x_rcc.c **** 
 152:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 153:lib/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 154:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 155:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 156:lib/src/stm32f10x_rcc.c **** #endif
 157:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 158:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 159:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 160:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 161:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 162:lib/src/stm32f10x_rcc.c **** 
 163:lib/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 164:lib/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 165:lib/src/stm32f10x_rcc.c **** 
 166:lib/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 167:lib/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 168:lib/src/stm32f10x_rcc.c **** 
 169:lib/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 170:lib/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 171:lib/src/stm32f10x_rcc.c **** 
 172:lib/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 173:lib/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 174:lib/src/stm32f10x_rcc.c **** 
 175:lib/src/stm32f10x_rcc.c **** /* BDCR register base address */
 176:lib/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 177:lib/src/stm32f10x_rcc.c **** 
 178:lib/src/stm32f10x_rcc.c **** /**
 179:lib/src/stm32f10x_rcc.c ****   * @}
 180:lib/src/stm32f10x_rcc.c ****   */ 
 181:lib/src/stm32f10x_rcc.c **** 
 182:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 183:lib/src/stm32f10x_rcc.c ****   * @{
 184:lib/src/stm32f10x_rcc.c ****   */ 
 185:lib/src/stm32f10x_rcc.c **** 
 186:lib/src/stm32f10x_rcc.c **** /**
 187:lib/src/stm32f10x_rcc.c ****   * @}
 188:lib/src/stm32f10x_rcc.c ****   */ 
 189:lib/src/stm32f10x_rcc.c **** 
 190:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 191:lib/src/stm32f10x_rcc.c ****   * @{
 192:lib/src/stm32f10x_rcc.c ****   */ 
 193:lib/src/stm32f10x_rcc.c **** 
 194:lib/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 195:lib/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 196:lib/src/stm32f10x_rcc.c **** 
 197:lib/src/stm32f10x_rcc.c **** /**
 198:lib/src/stm32f10x_rcc.c ****   * @}
 199:lib/src/stm32f10x_rcc.c ****   */
 200:lib/src/stm32f10x_rcc.c **** 
 201:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 202:lib/src/stm32f10x_rcc.c ****   * @{
 203:lib/src/stm32f10x_rcc.c ****   */
 204:lib/src/stm32f10x_rcc.c **** 
ARM GAS  /tmp/ccwtW74c.s 			page 5


 205:lib/src/stm32f10x_rcc.c **** /**
 206:lib/src/stm32f10x_rcc.c ****   * @}
 207:lib/src/stm32f10x_rcc.c ****   */
 208:lib/src/stm32f10x_rcc.c **** 
 209:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 210:lib/src/stm32f10x_rcc.c ****   * @{
 211:lib/src/stm32f10x_rcc.c ****   */
 212:lib/src/stm32f10x_rcc.c **** 
 213:lib/src/stm32f10x_rcc.c **** /**
 214:lib/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 215:lib/src/stm32f10x_rcc.c ****   * @param  None
 216:lib/src/stm32f10x_rcc.c ****   * @retval None
 217:lib/src/stm32f10x_rcc.c ****   */
 218:lib/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 219:lib/src/stm32f10x_rcc.c **** {
  25              		.loc 1 219 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 220:lib/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 221:lib/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  30              		.loc 1 221 0
  31 0000 0D4B     		ldr	r3, .L2
  32 0002 1A68     		ldr	r2, [r3]
  33 0004 42F00102 		orr	r2, r2, #1
  34 0008 1A60     		str	r2, [r3]
 222:lib/src/stm32f10x_rcc.c **** 
 223:lib/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 224:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 225:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  35              		.loc 1 225 0
  36 000a 5968     		ldr	r1, [r3, #4]
  37 000c 0B4A     		ldr	r2, .L2+4
  38 000e 0A40     		ands	r2, r2, r1
  39 0010 5A60     		str	r2, [r3, #4]
 226:lib/src/stm32f10x_rcc.c **** #else
 227:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 228:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 229:lib/src/stm32f10x_rcc.c ****   
 230:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 231:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  40              		.loc 1 231 0
  41 0012 1A68     		ldr	r2, [r3]
  42 0014 22F08472 		bic	r2, r2, #17301504
  43 0018 22F48032 		bic	r2, r2, #65536
  44 001c 1A60     		str	r2, [r3]
 232:lib/src/stm32f10x_rcc.c **** 
 233:lib/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 234:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  45              		.loc 1 234 0
  46 001e 1A68     		ldr	r2, [r3]
  47 0020 22F48022 		bic	r2, r2, #262144
  48 0024 1A60     		str	r2, [r3]
 235:lib/src/stm32f10x_rcc.c **** 
 236:lib/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 237:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
ARM GAS  /tmp/ccwtW74c.s 			page 6


  49              		.loc 1 237 0
  50 0026 5A68     		ldr	r2, [r3, #4]
  51 0028 22F4FE02 		bic	r2, r2, #8323072
  52 002c 5A60     		str	r2, [r3, #4]
 238:lib/src/stm32f10x_rcc.c **** 
 239:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 240:lib/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 241:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 242:lib/src/stm32f10x_rcc.c **** 
 243:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 244:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 245:lib/src/stm32f10x_rcc.c **** 
 246:lib/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 247:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 248:lib/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 249:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 250:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 251:lib/src/stm32f10x_rcc.c **** 
 252:lib/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 253:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 254:lib/src/stm32f10x_rcc.c **** #else
 255:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 256:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  53              		.loc 1 256 0
  54 002e 4FF41F02 		mov	r2, #10420224
  55 0032 9A60     		str	r2, [r3, #8]
  56 0034 7047     		bx	lr
  57              	.L3:
  58 0036 00BF     		.align	2
  59              	.L2:
  60 0038 00100240 		.word	1073876992
  61 003c 0000FFF8 		.word	-117506048
  62              		.cfi_endproc
  63              	.LFE63:
  64              		.size	RCC_DeInit, .-RCC_DeInit
  65              		.align	1
  66              		.global	RCC_HSEConfig
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  71              		.type	RCC_HSEConfig, %function
  72              	RCC_HSEConfig:
  73              	.LFB64:
 257:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 258:lib/src/stm32f10x_rcc.c **** 
 259:lib/src/stm32f10x_rcc.c **** }
 260:lib/src/stm32f10x_rcc.c **** 
 261:lib/src/stm32f10x_rcc.c **** /**
 262:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 263:lib/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 264:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 265:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 266:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 267:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 268:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 269:lib/src/stm32f10x_rcc.c ****   * @retval None
ARM GAS  /tmp/ccwtW74c.s 			page 7


 270:lib/src/stm32f10x_rcc.c ****   */
 271:lib/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 272:lib/src/stm32f10x_rcc.c **** {
  74              		.loc 1 272 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL0:
 273:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 274:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 275:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 276:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 277:lib/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  80              		.loc 1 277 0
  81 0040 0D4B     		ldr	r3, .L8
  82 0042 1A68     		ldr	r2, [r3]
  83 0044 22F48032 		bic	r2, r2, #65536
  84 0048 1A60     		str	r2, [r3]
 278:lib/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 279:lib/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
  85              		.loc 1 279 0
  86 004a 1A68     		ldr	r2, [r3]
  87 004c 22F48022 		bic	r2, r2, #262144
  88 0050 1A60     		str	r2, [r3]
 280:lib/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 281:lib/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  89              		.loc 1 281 0
  90 0052 B0F5803F 		cmp	r0, #65536
  91 0056 03D0     		beq	.L6
  92 0058 B0F5802F 		cmp	r0, #262144
  93 005c 06D0     		beq	.L7
  94 005e 7047     		bx	lr
  95              	.L6:
 282:lib/src/stm32f10x_rcc.c ****   {
 283:lib/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 284:lib/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 285:lib/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
  96              		.loc 1 285 0
  97 0060 054A     		ldr	r2, .L8
  98 0062 1368     		ldr	r3, [r2]
  99 0064 43F48033 		orr	r3, r3, #65536
 100 0068 1360     		str	r3, [r2]
 286:lib/src/stm32f10x_rcc.c ****       break;
 101              		.loc 1 286 0
 102 006a 7047     		bx	lr
 103              	.L7:
 287:lib/src/stm32f10x_rcc.c ****       
 288:lib/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 289:lib/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 290:lib/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 104              		.loc 1 290 0
 105 006c 024A     		ldr	r2, .L8
 106 006e 1368     		ldr	r3, [r2]
 107 0070 43F4A023 		orr	r3, r3, #327680
 108 0074 1360     		str	r3, [r2]
 109 0076 7047     		bx	lr
ARM GAS  /tmp/ccwtW74c.s 			page 8


 110              	.L9:
 111              		.align	2
 112              	.L8:
 113 0078 00100240 		.word	1073876992
 114              		.cfi_endproc
 115              	.LFE64:
 116              		.size	RCC_HSEConfig, .-RCC_HSEConfig
 117              		.align	1
 118              		.global	RCC_AdjustHSICalibrationValue
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 123              		.type	RCC_AdjustHSICalibrationValue, %function
 124              	RCC_AdjustHSICalibrationValue:
 125              	.LFB66:
 291:lib/src/stm32f10x_rcc.c ****       break;
 292:lib/src/stm32f10x_rcc.c ****       
 293:lib/src/stm32f10x_rcc.c ****     default:
 294:lib/src/stm32f10x_rcc.c ****       break;
 295:lib/src/stm32f10x_rcc.c ****   }
 296:lib/src/stm32f10x_rcc.c **** }
 297:lib/src/stm32f10x_rcc.c **** 
 298:lib/src/stm32f10x_rcc.c **** /**
 299:lib/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 300:lib/src/stm32f10x_rcc.c ****   * @param  None
 301:lib/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 302:lib/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 303:lib/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 304:lib/src/stm32f10x_rcc.c ****   */
 305:lib/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 306:lib/src/stm32f10x_rcc.c **** {
 307:lib/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 308:lib/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 309:lib/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 310:lib/src/stm32f10x_rcc.c ****   
 311:lib/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 312:lib/src/stm32f10x_rcc.c ****   do
 313:lib/src/stm32f10x_rcc.c ****   {
 314:lib/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 315:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 316:lib/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 317:lib/src/stm32f10x_rcc.c ****   
 318:lib/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 319:lib/src/stm32f10x_rcc.c ****   {
 320:lib/src/stm32f10x_rcc.c ****     status = SUCCESS;
 321:lib/src/stm32f10x_rcc.c ****   }
 322:lib/src/stm32f10x_rcc.c ****   else
 323:lib/src/stm32f10x_rcc.c ****   {
 324:lib/src/stm32f10x_rcc.c ****     status = ERROR;
 325:lib/src/stm32f10x_rcc.c ****   }  
 326:lib/src/stm32f10x_rcc.c ****   return (status);
 327:lib/src/stm32f10x_rcc.c **** }
 328:lib/src/stm32f10x_rcc.c **** 
 329:lib/src/stm32f10x_rcc.c **** /**
 330:lib/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 331:lib/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
ARM GAS  /tmp/ccwtW74c.s 			page 9


 332:lib/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 333:lib/src/stm32f10x_rcc.c ****   * @retval None
 334:lib/src/stm32f10x_rcc.c ****   */
 335:lib/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 336:lib/src/stm32f10x_rcc.c **** {
 126              		.loc 1 336 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL1:
 337:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 338:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 339:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 340:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 132              		.loc 1 340 0
 133 007c 034A     		ldr	r2, .L11
 134 007e 1368     		ldr	r3, [r2]
 135              	.LVL2:
 341:lib/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 342:lib/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 136              		.loc 1 342 0
 137 0080 23F0F803 		bic	r3, r3, #248
 138              	.LVL3:
 343:lib/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 344:lib/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 139              		.loc 1 344 0
 140 0084 43EAC000 		orr	r0, r3, r0, lsl #3
 141              	.LVL4:
 345:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 346:lib/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 142              		.loc 1 346 0
 143 0088 1060     		str	r0, [r2]
 144 008a 7047     		bx	lr
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 008c 00100240 		.word	1073876992
 149              		.cfi_endproc
 150              	.LFE66:
 151              		.size	RCC_AdjustHSICalibrationValue, .-RCC_AdjustHSICalibrationValue
 152              		.align	1
 153              		.global	RCC_HSICmd
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 158              		.type	RCC_HSICmd, %function
 159              	RCC_HSICmd:
 160              	.LFB67:
 347:lib/src/stm32f10x_rcc.c **** }
 348:lib/src/stm32f10x_rcc.c **** 
 349:lib/src/stm32f10x_rcc.c **** /**
 350:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 351:lib/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 352:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 353:lib/src/stm32f10x_rcc.c ****   * @retval None
ARM GAS  /tmp/ccwtW74c.s 			page 10


 354:lib/src/stm32f10x_rcc.c ****   */
 355:lib/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 356:lib/src/stm32f10x_rcc.c **** {
 161              		.loc 1 356 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL5:
 357:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 358:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 167              		.loc 1 359 0
 168 0090 014B     		ldr	r3, .L14
 169 0092 1860     		str	r0, [r3]
 170 0094 7047     		bx	lr
 171              	.L15:
 172 0096 00BF     		.align	2
 173              	.L14:
 174 0098 00004242 		.word	1111621632
 175              		.cfi_endproc
 176              	.LFE67:
 177              		.size	RCC_HSICmd, .-RCC_HSICmd
 178              		.align	1
 179              		.global	RCC_PLLConfig
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 184              		.type	RCC_PLLConfig, %function
 185              	RCC_PLLConfig:
 186              	.LFB68:
 360:lib/src/stm32f10x_rcc.c **** }
 361:lib/src/stm32f10x_rcc.c **** 
 362:lib/src/stm32f10x_rcc.c **** /**
 363:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 364:lib/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 365:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 366:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 367:lib/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 368:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 369:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 370:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 371:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 372:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 373:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 374:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 375:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 376:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 377:lib/src/stm32f10x_rcc.c ****   * @retval None
 378:lib/src/stm32f10x_rcc.c ****   */
 379:lib/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 380:lib/src/stm32f10x_rcc.c **** {
 187              		.loc 1 380 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwtW74c.s 			page 11


 191              		@ link register save eliminated.
 192              	.LVL6:
 381:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 382:lib/src/stm32f10x_rcc.c **** 
 383:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 384:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 385:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 386:lib/src/stm32f10x_rcc.c **** 
 387:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 193              		.loc 1 387 0
 194 009c 034A     		ldr	r2, .L17
 195 009e 5368     		ldr	r3, [r2, #4]
 196              	.LVL7:
 388:lib/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 389:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 197              		.loc 1 389 0
 198 00a0 23F47C13 		bic	r3, r3, #4128768
 199              	.LVL8:
 200 00a4 1943     		orrs	r1, r1, r3
 201              	.LVL9:
 390:lib/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 391:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 202              		.loc 1 391 0
 203 00a6 0143     		orrs	r1, r1, r0
 204              	.LVL10:
 392:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 393:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 205              		.loc 1 393 0
 206 00a8 5160     		str	r1, [r2, #4]
 207 00aa 7047     		bx	lr
 208              	.L18:
 209              		.align	2
 210              	.L17:
 211 00ac 00100240 		.word	1073876992
 212              		.cfi_endproc
 213              	.LFE68:
 214              		.size	RCC_PLLConfig, .-RCC_PLLConfig
 215              		.align	1
 216              		.global	RCC_PLLCmd
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 221              		.type	RCC_PLLCmd, %function
 222              	RCC_PLLCmd:
 223              	.LFB69:
 394:lib/src/stm32f10x_rcc.c **** }
 395:lib/src/stm32f10x_rcc.c **** 
 396:lib/src/stm32f10x_rcc.c **** /**
 397:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 398:lib/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 399:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 400:lib/src/stm32f10x_rcc.c ****   * @retval None
 401:lib/src/stm32f10x_rcc.c ****   */
 402:lib/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 403:lib/src/stm32f10x_rcc.c **** {
 224              		.loc 1 403 0
ARM GAS  /tmp/ccwtW74c.s 			page 12


 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL11:
 404:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 405:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 406:lib/src/stm32f10x_rcc.c **** 
 407:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 230              		.loc 1 407 0
 231 00b0 014B     		ldr	r3, .L20
 232 00b2 1860     		str	r0, [r3]
 233 00b4 7047     		bx	lr
 234              	.L21:
 235 00b6 00BF     		.align	2
 236              	.L20:
 237 00b8 60004242 		.word	1111621728
 238              		.cfi_endproc
 239              	.LFE69:
 240              		.size	RCC_PLLCmd, .-RCC_PLLCmd
 241              		.align	1
 242              		.global	RCC_SYSCLKConfig
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu softvfp
 247              		.type	RCC_SYSCLKConfig, %function
 248              	RCC_SYSCLKConfig:
 249              	.LFB70:
 408:lib/src/stm32f10x_rcc.c **** }
 409:lib/src/stm32f10x_rcc.c **** 
 410:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 411:lib/src/stm32f10x_rcc.c **** /**
 412:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 413:lib/src/stm32f10x_rcc.c ****   * @note 
 414:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 415:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 416:lib/src/stm32f10x_rcc.c ****   *     devices.
 417:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 418:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 419:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 420:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 421:lib/src/stm32f10x_rcc.c ****   * @note 
 422:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 423:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 424:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 425:lib/src/stm32f10x_rcc.c ****   * @retval None
 426:lib/src/stm32f10x_rcc.c ****   */
 427:lib/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 428:lib/src/stm32f10x_rcc.c **** {
 429:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 430:lib/src/stm32f10x_rcc.c ****   
 431:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 432:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 433:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 434:lib/src/stm32f10x_rcc.c **** 
 435:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
ARM GAS  /tmp/ccwtW74c.s 			page 13


 436:lib/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 437:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 438:lib/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 439:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 440:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 441:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 442:lib/src/stm32f10x_rcc.c **** }
 443:lib/src/stm32f10x_rcc.c **** #endif
 444:lib/src/stm32f10x_rcc.c **** 
 445:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 446:lib/src/stm32f10x_rcc.c **** /**
 447:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 448:lib/src/stm32f10x_rcc.c ****   * @note 
 449:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 450:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 451:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 452:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 453:lib/src/stm32f10x_rcc.c ****   * @retval None
 454:lib/src/stm32f10x_rcc.c ****   */
 455:lib/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 456:lib/src/stm32f10x_rcc.c **** {
 457:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 458:lib/src/stm32f10x_rcc.c **** 
 459:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 460:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 461:lib/src/stm32f10x_rcc.c **** 
 462:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 463:lib/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 464:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 465:lib/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 466:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 467:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 468:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 469:lib/src/stm32f10x_rcc.c **** }
 470:lib/src/stm32f10x_rcc.c **** 
 471:lib/src/stm32f10x_rcc.c **** /**
 472:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 473:lib/src/stm32f10x_rcc.c ****   * @note
 474:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 475:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 476:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 477:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 478:lib/src/stm32f10x_rcc.c ****   * @retval None
 479:lib/src/stm32f10x_rcc.c ****   */
 480:lib/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 481:lib/src/stm32f10x_rcc.c **** {
 482:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 483:lib/src/stm32f10x_rcc.c **** 
 484:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 485:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 486:lib/src/stm32f10x_rcc.c **** 
 487:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 488:lib/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 489:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 490:lib/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 491:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 492:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
ARM GAS  /tmp/ccwtW74c.s 			page 14


 493:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 494:lib/src/stm32f10x_rcc.c **** }
 495:lib/src/stm32f10x_rcc.c **** 
 496:lib/src/stm32f10x_rcc.c **** 
 497:lib/src/stm32f10x_rcc.c **** /**
 498:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 499:lib/src/stm32f10x_rcc.c ****   * @note 
 500:lib/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 501:lib/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 502:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 503:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 504:lib/src/stm32f10x_rcc.c ****   * @retval None
 505:lib/src/stm32f10x_rcc.c ****   */
 506:lib/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 507:lib/src/stm32f10x_rcc.c **** {
 508:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 509:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 510:lib/src/stm32f10x_rcc.c **** 
 511:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 512:lib/src/stm32f10x_rcc.c **** }
 513:lib/src/stm32f10x_rcc.c **** 
 514:lib/src/stm32f10x_rcc.c **** 
 515:lib/src/stm32f10x_rcc.c **** /**
 516:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 517:lib/src/stm32f10x_rcc.c ****   * @note 
 518:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 519:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 520:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 521:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 522:lib/src/stm32f10x_rcc.c ****   * @retval None
 523:lib/src/stm32f10x_rcc.c ****   */
 524:lib/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 525:lib/src/stm32f10x_rcc.c **** {
 526:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 527:lib/src/stm32f10x_rcc.c **** 
 528:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 529:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 530:lib/src/stm32f10x_rcc.c **** 
 531:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 532:lib/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 533:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 534:lib/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 535:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 536:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 537:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 538:lib/src/stm32f10x_rcc.c **** }
 539:lib/src/stm32f10x_rcc.c **** 
 540:lib/src/stm32f10x_rcc.c **** 
 541:lib/src/stm32f10x_rcc.c **** /**
 542:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 543:lib/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 544:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 545:lib/src/stm32f10x_rcc.c ****   * @retval None
 546:lib/src/stm32f10x_rcc.c ****   */
 547:lib/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 548:lib/src/stm32f10x_rcc.c **** {
 549:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccwtW74c.s 			page 15


 550:lib/src/stm32f10x_rcc.c **** 
 551:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 552:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 553:lib/src/stm32f10x_rcc.c **** }
 554:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 555:lib/src/stm32f10x_rcc.c **** 
 556:lib/src/stm32f10x_rcc.c **** /**
 557:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 558:lib/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 559:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 560:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 561:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 562:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 563:lib/src/stm32f10x_rcc.c ****   * @retval None
 564:lib/src/stm32f10x_rcc.c ****   */
 565:lib/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 566:lib/src/stm32f10x_rcc.c **** {
 250              		.loc 1 566 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL12:
 567:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 568:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 569:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 570:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 256              		.loc 1 570 0
 257 00bc 034A     		ldr	r2, .L23
 258 00be 5368     		ldr	r3, [r2, #4]
 259              	.LVL13:
 571:lib/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 572:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 260              		.loc 1 572 0
 261 00c0 23F00303 		bic	r3, r3, #3
 262              	.LVL14:
 573:lib/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 574:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 263              		.loc 1 574 0
 264 00c4 1843     		orrs	r0, r0, r3
 265              	.LVL15:
 575:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 576:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 266              		.loc 1 576 0
 267 00c6 5060     		str	r0, [r2, #4]
 268 00c8 7047     		bx	lr
 269              	.L24:
 270 00ca 00BF     		.align	2
 271              	.L23:
 272 00cc 00100240 		.word	1073876992
 273              		.cfi_endproc
 274              	.LFE70:
 275              		.size	RCC_SYSCLKConfig, .-RCC_SYSCLKConfig
 276              		.align	1
 277              		.global	RCC_GetSYSCLKSource
 278              		.syntax unified
 279              		.thumb
ARM GAS  /tmp/ccwtW74c.s 			page 16


 280              		.thumb_func
 281              		.fpu softvfp
 282              		.type	RCC_GetSYSCLKSource, %function
 283              	RCC_GetSYSCLKSource:
 284              	.LFB71:
 577:lib/src/stm32f10x_rcc.c **** }
 578:lib/src/stm32f10x_rcc.c **** 
 579:lib/src/stm32f10x_rcc.c **** /**
 580:lib/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 581:lib/src/stm32f10x_rcc.c ****   * @param  None
 582:lib/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 583:lib/src/stm32f10x_rcc.c ****   *   be one of the following:
 584:lib/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 585:lib/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 586:lib/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 587:lib/src/stm32f10x_rcc.c ****   */
 588:lib/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 589:lib/src/stm32f10x_rcc.c **** {
 285              		.loc 1 589 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 590:lib/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 290              		.loc 1 590 0
 291 00d0 024B     		ldr	r3, .L26
 292 00d2 5868     		ldr	r0, [r3, #4]
 591:lib/src/stm32f10x_rcc.c **** }
 293              		.loc 1 591 0
 294 00d4 00F00C00 		and	r0, r0, #12
 295 00d8 7047     		bx	lr
 296              	.L27:
 297 00da 00BF     		.align	2
 298              	.L26:
 299 00dc 00100240 		.word	1073876992
 300              		.cfi_endproc
 301              	.LFE71:
 302              		.size	RCC_GetSYSCLKSource, .-RCC_GetSYSCLKSource
 303              		.align	1
 304              		.global	RCC_HCLKConfig
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu softvfp
 309              		.type	RCC_HCLKConfig, %function
 310              	RCC_HCLKConfig:
 311              	.LFB72:
 592:lib/src/stm32f10x_rcc.c **** 
 593:lib/src/stm32f10x_rcc.c **** /**
 594:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 595:lib/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 596:lib/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 597:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 598:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 599:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 600:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 601:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
ARM GAS  /tmp/ccwtW74c.s 			page 17


 602:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 603:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 604:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 605:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 606:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 607:lib/src/stm32f10x_rcc.c ****   * @retval None
 608:lib/src/stm32f10x_rcc.c ****   */
 609:lib/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 610:lib/src/stm32f10x_rcc.c **** {
 312              		.loc 1 610 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL16:
 611:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 612:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 613:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 614:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 318              		.loc 1 614 0
 319 00e0 034A     		ldr	r2, .L29
 320 00e2 5368     		ldr	r3, [r2, #4]
 321              	.LVL17:
 615:lib/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 616:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 322              		.loc 1 616 0
 323 00e4 23F0F003 		bic	r3, r3, #240
 324              	.LVL18:
 617:lib/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 618:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 325              		.loc 1 618 0
 326 00e8 1843     		orrs	r0, r0, r3
 327              	.LVL19:
 619:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 620:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 328              		.loc 1 620 0
 329 00ea 5060     		str	r0, [r2, #4]
 330 00ec 7047     		bx	lr
 331              	.L30:
 332 00ee 00BF     		.align	2
 333              	.L29:
 334 00f0 00100240 		.word	1073876992
 335              		.cfi_endproc
 336              	.LFE72:
 337              		.size	RCC_HCLKConfig, .-RCC_HCLKConfig
 338              		.align	1
 339              		.global	RCC_PCLK1Config
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 344              		.type	RCC_PCLK1Config, %function
 345              	RCC_PCLK1Config:
 346              	.LFB73:
 621:lib/src/stm32f10x_rcc.c **** }
 622:lib/src/stm32f10x_rcc.c **** 
 623:lib/src/stm32f10x_rcc.c **** /**
ARM GAS  /tmp/ccwtW74c.s 			page 18


 624:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 625:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 626:lib/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 627:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 628:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 629:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 630:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 631:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 632:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 633:lib/src/stm32f10x_rcc.c ****   * @retval None
 634:lib/src/stm32f10x_rcc.c ****   */
 635:lib/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 636:lib/src/stm32f10x_rcc.c **** {
 347              		.loc 1 636 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              	.LVL20:
 637:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 638:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 639:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 640:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 353              		.loc 1 640 0
 354 00f4 034A     		ldr	r2, .L32
 355 00f6 5368     		ldr	r3, [r2, #4]
 356              	.LVL21:
 641:lib/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 642:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 357              		.loc 1 642 0
 358 00f8 23F4E063 		bic	r3, r3, #1792
 359              	.LVL22:
 643:lib/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 644:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 360              		.loc 1 644 0
 361 00fc 1843     		orrs	r0, r0, r3
 362              	.LVL23:
 645:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 646:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 363              		.loc 1 646 0
 364 00fe 5060     		str	r0, [r2, #4]
 365 0100 7047     		bx	lr
 366              	.L33:
 367 0102 00BF     		.align	2
 368              	.L32:
 369 0104 00100240 		.word	1073876992
 370              		.cfi_endproc
 371              	.LFE73:
 372              		.size	RCC_PCLK1Config, .-RCC_PCLK1Config
 373              		.align	1
 374              		.global	RCC_PCLK2Config
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 379              		.type	RCC_PCLK2Config, %function
 380              	RCC_PCLK2Config:
ARM GAS  /tmp/ccwtW74c.s 			page 19


 381              	.LFB74:
 647:lib/src/stm32f10x_rcc.c **** }
 648:lib/src/stm32f10x_rcc.c **** 
 649:lib/src/stm32f10x_rcc.c **** /**
 650:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 651:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 652:lib/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 653:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 654:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 655:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 656:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 657:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 658:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 659:lib/src/stm32f10x_rcc.c ****   * @retval None
 660:lib/src/stm32f10x_rcc.c ****   */
 661:lib/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 662:lib/src/stm32f10x_rcc.c **** {
 382              		.loc 1 662 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL24:
 663:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 664:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 665:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 666:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 388              		.loc 1 666 0
 389 0108 034A     		ldr	r2, .L35
 390 010a 5368     		ldr	r3, [r2, #4]
 391              	.LVL25:
 667:lib/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 668:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 392              		.loc 1 668 0
 393 010c 23F46053 		bic	r3, r3, #14336
 394              	.LVL26:
 669:lib/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 670:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 395              		.loc 1 670 0
 396 0110 43EAC000 		orr	r0, r3, r0, lsl #3
 397              	.LVL27:
 671:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 672:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 398              		.loc 1 672 0
 399 0114 5060     		str	r0, [r2, #4]
 400 0116 7047     		bx	lr
 401              	.L36:
 402              		.align	2
 403              	.L35:
 404 0118 00100240 		.word	1073876992
 405              		.cfi_endproc
 406              	.LFE74:
 407              		.size	RCC_PCLK2Config, .-RCC_PCLK2Config
 408              		.align	1
 409              		.global	RCC_ITConfig
 410              		.syntax unified
 411              		.thumb
ARM GAS  /tmp/ccwtW74c.s 			page 20


 412              		.thumb_func
 413              		.fpu softvfp
 414              		.type	RCC_ITConfig, %function
 415              	RCC_ITConfig:
 416              	.LFB75:
 673:lib/src/stm32f10x_rcc.c **** }
 674:lib/src/stm32f10x_rcc.c **** 
 675:lib/src/stm32f10x_rcc.c **** /**
 676:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 677:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 678:lib/src/stm32f10x_rcc.c ****   * 
 679:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 680:lib/src/stm32f10x_rcc.c ****   *   of the following values        
 681:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 682:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 683:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 684:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 685:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 686:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 687:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 688:lib/src/stm32f10x_rcc.c ****   * 
 689:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 690:lib/src/stm32f10x_rcc.c ****   *   following values        
 691:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 692:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 693:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 694:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 695:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 696:lib/src/stm32f10x_rcc.c ****   *       
 697:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 698:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 699:lib/src/stm32f10x_rcc.c ****   * @retval None
 700:lib/src/stm32f10x_rcc.c ****   */
 701:lib/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 702:lib/src/stm32f10x_rcc.c **** {
 417              		.loc 1 702 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL28:
 703:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 704:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 705:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 423              		.loc 1 706 0
 424 011c 29B9     		cbnz	r1, .L40
 707:lib/src/stm32f10x_rcc.c ****   {
 708:lib/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 709:lib/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 710:lib/src/stm32f10x_rcc.c ****   }
 711:lib/src/stm32f10x_rcc.c ****   else
 712:lib/src/stm32f10x_rcc.c ****   {
 713:lib/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 714:lib/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 425              		.loc 1 714 0
 426 011e 054A     		ldr	r2, .L41
ARM GAS  /tmp/ccwtW74c.s 			page 21


 427 0120 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 428 0122 23EA0000 		bic	r0, r3, r0
 429              	.LVL29:
 430 0126 1070     		strb	r0, [r2]
 431 0128 7047     		bx	lr
 432              	.LVL30:
 433              	.L40:
 709:lib/src/stm32f10x_rcc.c ****   }
 434              		.loc 1 709 0
 435 012a 024A     		ldr	r2, .L41
 436 012c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 437 012e 1843     		orrs	r0, r0, r3
 438              	.LVL31:
 439 0130 1070     		strb	r0, [r2]
 440 0132 7047     		bx	lr
 441              	.L42:
 442              		.align	2
 443              	.L41:
 444 0134 09100240 		.word	1073877001
 445              		.cfi_endproc
 446              	.LFE75:
 447              		.size	RCC_ITConfig, .-RCC_ITConfig
 448              		.align	1
 449              		.global	RCC_USBCLKConfig
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 454              		.type	RCC_USBCLKConfig, %function
 455              	RCC_USBCLKConfig:
 456              	.LFB76:
 715:lib/src/stm32f10x_rcc.c ****   }
 716:lib/src/stm32f10x_rcc.c **** }
 717:lib/src/stm32f10x_rcc.c **** 
 718:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 719:lib/src/stm32f10x_rcc.c **** /**
 720:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 721:lib/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 722:lib/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 723:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 724:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 725:lib/src/stm32f10x_rcc.c ****   *                                     clock source
 726:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 727:lib/src/stm32f10x_rcc.c ****   * @retval None
 728:lib/src/stm32f10x_rcc.c ****   */
 729:lib/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 730:lib/src/stm32f10x_rcc.c **** {
 457              		.loc 1 730 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL32:
 731:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 732:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 733:lib/src/stm32f10x_rcc.c **** 
 734:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
ARM GAS  /tmp/ccwtW74c.s 			page 22


 463              		.loc 1 734 0
 464 0138 014B     		ldr	r3, .L44
 465 013a 1860     		str	r0, [r3]
 466 013c 7047     		bx	lr
 467              	.L45:
 468 013e 00BF     		.align	2
 469              	.L44:
 470 0140 D8004242 		.word	1111621848
 471              		.cfi_endproc
 472              	.LFE76:
 473              		.size	RCC_USBCLKConfig, .-RCC_USBCLKConfig
 474              		.align	1
 475              		.global	RCC_ADCCLKConfig
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu softvfp
 480              		.type	RCC_ADCCLKConfig, %function
 481              	RCC_ADCCLKConfig:
 482              	.LFB77:
 735:lib/src/stm32f10x_rcc.c **** }
 736:lib/src/stm32f10x_rcc.c **** #else
 737:lib/src/stm32f10x_rcc.c **** /**
 738:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 739:lib/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 740:lib/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 741:lib/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 742:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 743:lib/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:lib/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 745:lib/src/stm32f10x_rcc.c ****   * @retval None
 746:lib/src/stm32f10x_rcc.c ****   */
 747:lib/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 748:lib/src/stm32f10x_rcc.c **** {
 749:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 750:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 751:lib/src/stm32f10x_rcc.c **** 
 752:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 753:lib/src/stm32f10x_rcc.c **** }
 754:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 755:lib/src/stm32f10x_rcc.c **** 
 756:lib/src/stm32f10x_rcc.c **** /**
 757:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 758:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 759:lib/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 760:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 761:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 762:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 763:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 764:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 765:lib/src/stm32f10x_rcc.c ****   * @retval None
 766:lib/src/stm32f10x_rcc.c ****   */
 767:lib/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 768:lib/src/stm32f10x_rcc.c **** {
 483              		.loc 1 768 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwtW74c.s 			page 23


 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL33:
 769:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 770:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 771:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 772:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 489              		.loc 1 772 0
 490 0144 034A     		ldr	r2, .L47
 491 0146 5368     		ldr	r3, [r2, #4]
 492              	.LVL34:
 773:lib/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 774:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 493              		.loc 1 774 0
 494 0148 23F44043 		bic	r3, r3, #49152
 495              	.LVL35:
 775:lib/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 776:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 496              		.loc 1 776 0
 497 014c 1843     		orrs	r0, r0, r3
 498              	.LVL36:
 777:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 778:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 499              		.loc 1 778 0
 500 014e 5060     		str	r0, [r2, #4]
 501 0150 7047     		bx	lr
 502              	.L48:
 503 0152 00BF     		.align	2
 504              	.L47:
 505 0154 00100240 		.word	1073876992
 506              		.cfi_endproc
 507              	.LFE77:
 508              		.size	RCC_ADCCLKConfig, .-RCC_ADCCLKConfig
 509              		.align	1
 510              		.global	RCC_LSEConfig
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu softvfp
 515              		.type	RCC_LSEConfig, %function
 516              	RCC_LSEConfig:
 517              	.LFB78:
 779:lib/src/stm32f10x_rcc.c **** }
 780:lib/src/stm32f10x_rcc.c **** 
 781:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 782:lib/src/stm32f10x_rcc.c **** /**
 783:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 784:lib/src/stm32f10x_rcc.c ****   * @note
 785:lib/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 786:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 787:lib/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 788:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 789:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 790:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 791:lib/src/stm32f10x_rcc.c ****   * @retval None
 792:lib/src/stm32f10x_rcc.c ****   */
 793:lib/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
ARM GAS  /tmp/ccwtW74c.s 			page 24


 794:lib/src/stm32f10x_rcc.c **** {
 795:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 796:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 797:lib/src/stm32f10x_rcc.c **** 
 798:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 799:lib/src/stm32f10x_rcc.c **** }
 800:lib/src/stm32f10x_rcc.c **** 
 801:lib/src/stm32f10x_rcc.c **** /**
 802:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 803:lib/src/stm32f10x_rcc.c ****   * @note
 804:lib/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 805:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 806:lib/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 807:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 808:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 809:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 810:lib/src/stm32f10x_rcc.c ****   * @retval None
 811:lib/src/stm32f10x_rcc.c ****   */
 812:lib/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 813:lib/src/stm32f10x_rcc.c **** {
 814:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 815:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 816:lib/src/stm32f10x_rcc.c **** 
 817:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 818:lib/src/stm32f10x_rcc.c **** }
 819:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 820:lib/src/stm32f10x_rcc.c **** 
 821:lib/src/stm32f10x_rcc.c **** /**
 822:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 823:lib/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 824:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 825:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 826:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 827:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 828:lib/src/stm32f10x_rcc.c ****   * @retval None
 829:lib/src/stm32f10x_rcc.c ****   */
 830:lib/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 831:lib/src/stm32f10x_rcc.c **** {
 518              		.loc 1 831 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL37:
 832:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 833:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 834:lib/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 835:lib/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 836:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 524              		.loc 1 836 0
 525 0158 084B     		ldr	r3, .L53
 526 015a 0022     		movs	r2, #0
 527 015c 1A70     		strb	r2, [r3]
 837:lib/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 838:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 528              		.loc 1 838 0
 529 015e 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccwtW74c.s 			page 25


 839:lib/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 840:lib/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 530              		.loc 1 840 0
 531 0160 0128     		cmp	r0, #1
 532 0162 02D0     		beq	.L51
 533 0164 0428     		cmp	r0, #4
 534 0166 04D0     		beq	.L52
 535 0168 7047     		bx	lr
 536              	.L51:
 841:lib/src/stm32f10x_rcc.c ****   {
 842:lib/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 843:lib/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 844:lib/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 537              		.loc 1 844 0
 538 016a 0122     		movs	r2, #1
 539 016c 034B     		ldr	r3, .L53
 540 016e 1A70     		strb	r2, [r3]
 845:lib/src/stm32f10x_rcc.c ****       break;
 541              		.loc 1 845 0
 542 0170 7047     		bx	lr
 543              	.L52:
 846:lib/src/stm32f10x_rcc.c ****       
 847:lib/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 848:lib/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 849:lib/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 544              		.loc 1 849 0
 545 0172 0522     		movs	r2, #5
 546 0174 014B     		ldr	r3, .L53
 547 0176 1A70     		strb	r2, [r3]
 548 0178 7047     		bx	lr
 549              	.L54:
 550 017a 00BF     		.align	2
 551              	.L53:
 552 017c 20100240 		.word	1073877024
 553              		.cfi_endproc
 554              	.LFE78:
 555              		.size	RCC_LSEConfig, .-RCC_LSEConfig
 556              		.align	1
 557              		.global	RCC_LSICmd
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 562              		.type	RCC_LSICmd, %function
 563              	RCC_LSICmd:
 564              	.LFB79:
 850:lib/src/stm32f10x_rcc.c ****       break;            
 851:lib/src/stm32f10x_rcc.c ****       
 852:lib/src/stm32f10x_rcc.c ****     default:
 853:lib/src/stm32f10x_rcc.c ****       break;      
 854:lib/src/stm32f10x_rcc.c ****   }
 855:lib/src/stm32f10x_rcc.c **** }
 856:lib/src/stm32f10x_rcc.c **** 
 857:lib/src/stm32f10x_rcc.c **** /**
 858:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 859:lib/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 860:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccwtW74c.s 			page 26


 861:lib/src/stm32f10x_rcc.c ****   * @retval None
 862:lib/src/stm32f10x_rcc.c ****   */
 863:lib/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 864:lib/src/stm32f10x_rcc.c **** {
 565              		.loc 1 864 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL38:
 865:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 866:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 867:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 571              		.loc 1 867 0
 572 0180 014B     		ldr	r3, .L56
 573 0182 1860     		str	r0, [r3]
 574 0184 7047     		bx	lr
 575              	.L57:
 576 0186 00BF     		.align	2
 577              	.L56:
 578 0188 80044242 		.word	1111622784
 579              		.cfi_endproc
 580              	.LFE79:
 581              		.size	RCC_LSICmd, .-RCC_LSICmd
 582              		.align	1
 583              		.global	RCC_RTCCLKConfig
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu softvfp
 588              		.type	RCC_RTCCLKConfig, %function
 589              	RCC_RTCCLKConfig:
 590              	.LFB80:
 868:lib/src/stm32f10x_rcc.c **** }
 869:lib/src/stm32f10x_rcc.c **** 
 870:lib/src/stm32f10x_rcc.c **** /**
 871:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 872:lib/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 873:lib/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 874:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 875:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 876:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 877:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 878:lib/src/stm32f10x_rcc.c ****   * @retval None
 879:lib/src/stm32f10x_rcc.c ****   */
 880:lib/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 881:lib/src/stm32f10x_rcc.c **** {
 591              		.loc 1 881 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL39:
 882:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 883:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 884:lib/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 885:lib/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
ARM GAS  /tmp/ccwtW74c.s 			page 27


 597              		.loc 1 885 0
 598 018c 024A     		ldr	r2, .L59
 599 018e 136A     		ldr	r3, [r2, #32]
 600 0190 1843     		orrs	r0, r0, r3
 601              	.LVL40:
 602 0192 1062     		str	r0, [r2, #32]
 603 0194 7047     		bx	lr
 604              	.L60:
 605 0196 00BF     		.align	2
 606              	.L59:
 607 0198 00100240 		.word	1073876992
 608              		.cfi_endproc
 609              	.LFE80:
 610              		.size	RCC_RTCCLKConfig, .-RCC_RTCCLKConfig
 611              		.align	1
 612              		.global	RCC_RTCCLKCmd
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu softvfp
 617              		.type	RCC_RTCCLKCmd, %function
 618              	RCC_RTCCLKCmd:
 619              	.LFB81:
 886:lib/src/stm32f10x_rcc.c **** }
 887:lib/src/stm32f10x_rcc.c **** 
 888:lib/src/stm32f10x_rcc.c **** /**
 889:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 890:lib/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 891:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 892:lib/src/stm32f10x_rcc.c ****   * @retval None
 893:lib/src/stm32f10x_rcc.c ****   */
 894:lib/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 895:lib/src/stm32f10x_rcc.c **** {
 620              		.loc 1 895 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625              	.LVL41:
 896:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 897:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 898:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 626              		.loc 1 898 0
 627 019c 014B     		ldr	r3, .L62
 628 019e 1860     		str	r0, [r3]
 629 01a0 7047     		bx	lr
 630              	.L63:
 631 01a2 00BF     		.align	2
 632              	.L62:
 633 01a4 3C044242 		.word	1111622716
 634              		.cfi_endproc
 635              	.LFE81:
 636              		.size	RCC_RTCCLKCmd, .-RCC_RTCCLKCmd
 637              		.align	1
 638              		.global	RCC_GetClocksFreq
 639              		.syntax unified
 640              		.thumb
ARM GAS  /tmp/ccwtW74c.s 			page 28


 641              		.thumb_func
 642              		.fpu softvfp
 643              		.type	RCC_GetClocksFreq, %function
 644              	RCC_GetClocksFreq:
 645              	.LFB82:
 899:lib/src/stm32f10x_rcc.c **** }
 900:lib/src/stm32f10x_rcc.c **** 
 901:lib/src/stm32f10x_rcc.c **** /**
 902:lib/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 903:lib/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 904:lib/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 905:lib/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 906:lib/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 907:lib/src/stm32f10x_rcc.c ****   * @retval None
 908:lib/src/stm32f10x_rcc.c ****   */
 909:lib/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 910:lib/src/stm32f10x_rcc.c **** {
 646              		.loc 1 910 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651              	.LVL42:
 652 01a8 10B4     		push	{r4}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 4, -4
 655              	.LVL43:
 911:lib/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 912:lib/src/stm32f10x_rcc.c **** 
 913:lib/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 914:lib/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 915:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 916:lib/src/stm32f10x_rcc.c **** 
 917:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 918:lib/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 919:lib/src/stm32f10x_rcc.c **** #endif
 920:lib/src/stm32f10x_rcc.c ****     
 921:lib/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 922:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 656              		.loc 1 922 0
 657 01aa 274B     		ldr	r3, .L76
 658 01ac 5B68     		ldr	r3, [r3, #4]
 659              	.LVL44:
 660 01ae 03F00C03 		and	r3, r3, #12
 661              	.LVL45:
 923:lib/src/stm32f10x_rcc.c ****   
 924:lib/src/stm32f10x_rcc.c ****   switch (tmp)
 662              		.loc 1 924 0
 663 01b2 042B     		cmp	r3, #4
 664 01b4 2BD0     		beq	.L66
 665 01b6 082B     		cmp	r3, #8
 666 01b8 2CD0     		beq	.L67
 667 01ba 13B1     		cbz	r3, .L74
 925:lib/src/stm32f10x_rcc.c ****   {
 926:lib/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 927:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 928:lib/src/stm32f10x_rcc.c ****       break;
ARM GAS  /tmp/ccwtW74c.s 			page 29


 929:lib/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 930:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 931:lib/src/stm32f10x_rcc.c ****       break;
 932:lib/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 933:lib/src/stm32f10x_rcc.c **** 
 934:lib/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 935:lib/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 936:lib/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 937:lib/src/stm32f10x_rcc.c ****       
 938:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 939:lib/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 940:lib/src/stm32f10x_rcc.c ****       
 941:lib/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 942:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 943:lib/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 944:lib/src/stm32f10x_rcc.c ****       }
 945:lib/src/stm32f10x_rcc.c ****       else
 946:lib/src/stm32f10x_rcc.c ****       {
 947:lib/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 948:lib/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 949:lib/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 950:lib/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 951:lib/src/stm32f10x_rcc.c ****  #else
 952:lib/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 953:lib/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 954:lib/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 955:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 956:lib/src/stm32f10x_rcc.c ****         }
 957:lib/src/stm32f10x_rcc.c ****         else
 958:lib/src/stm32f10x_rcc.c ****         {
 959:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 960:lib/src/stm32f10x_rcc.c ****         }
 961:lib/src/stm32f10x_rcc.c ****  #endif
 962:lib/src/stm32f10x_rcc.c ****       }
 963:lib/src/stm32f10x_rcc.c **** #else
 964:lib/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 965:lib/src/stm32f10x_rcc.c ****       
 966:lib/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 967:lib/src/stm32f10x_rcc.c ****       {
 968:lib/src/stm32f10x_rcc.c ****          pllmull += 2;
 969:lib/src/stm32f10x_rcc.c ****       }
 970:lib/src/stm32f10x_rcc.c ****       else
 971:lib/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 972:lib/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 973:lib/src/stm32f10x_rcc.c ****       }
 974:lib/src/stm32f10x_rcc.c ****             
 975:lib/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 976:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 977:lib/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 978:lib/src/stm32f10x_rcc.c ****       }
 979:lib/src/stm32f10x_rcc.c ****       else
 980:lib/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 981:lib/src/stm32f10x_rcc.c ****         
 982:lib/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 983:lib/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 984:lib/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 985:lib/src/stm32f10x_rcc.c ****         
ARM GAS  /tmp/ccwtW74c.s 			page 30


 986:lib/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 987:lib/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 988:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 989:lib/src/stm32f10x_rcc.c ****         }
 990:lib/src/stm32f10x_rcc.c ****         else
 991:lib/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 992:lib/src/stm32f10x_rcc.c ****           
 993:lib/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 994:lib/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 995:lib/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 996:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 997:lib/src/stm32f10x_rcc.c ****         }
 998:lib/src/stm32f10x_rcc.c ****       }
 999:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1000:lib/src/stm32f10x_rcc.c ****       break;
1001:lib/src/stm32f10x_rcc.c **** 
1002:lib/src/stm32f10x_rcc.c ****     default:
1003:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 668              		.loc 1 1003 0
 669 01bc 234B     		ldr	r3, .L76+4
 670              	.LVL46:
 671 01be 0360     		str	r3, [r0]
1004:lib/src/stm32f10x_rcc.c ****       break;
 672              		.loc 1 1004 0
 673 01c0 01E0     		b	.L69
 674              	.LVL47:
 675              	.L74:
 927:lib/src/stm32f10x_rcc.c ****       break;
 676              		.loc 1 927 0
 677 01c2 224B     		ldr	r3, .L76+4
 678              	.LVL48:
 679 01c4 0360     		str	r3, [r0]
 680              	.LVL49:
 681              	.L69:
1005:lib/src/stm32f10x_rcc.c ****   }
1006:lib/src/stm32f10x_rcc.c **** 
1007:lib/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1008:lib/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1009:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 682              		.loc 1 1009 0
 683 01c6 204C     		ldr	r4, .L76
 684 01c8 6368     		ldr	r3, [r4, #4]
 685              	.LVL50:
1010:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 686              		.loc 1 1010 0
 687 01ca C3F30313 		ubfx	r3, r3, #4, #4
 688              	.LVL51:
1011:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 689              		.loc 1 1011 0
 690 01ce 204A     		ldr	r2, .L76+8
 691 01d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 692              	.LVL52:
 693 01d2 D9B2     		uxtb	r1, r3
 694              	.LVL53:
1012:lib/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1013:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 695              		.loc 1 1013 0
ARM GAS  /tmp/ccwtW74c.s 			page 31


 696 01d4 0368     		ldr	r3, [r0]
 697 01d6 CB40     		lsrs	r3, r3, r1
 698 01d8 4360     		str	r3, [r0, #4]
1014:lib/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1015:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 699              		.loc 1 1015 0
 700 01da 6168     		ldr	r1, [r4, #4]
 701              	.LVL54:
1016:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 702              		.loc 1 1016 0
 703 01dc C1F30221 		ubfx	r1, r1, #8, #3
 704              	.LVL55:
1017:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 705              		.loc 1 1017 0
 706 01e0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 707              	.LVL56:
 708 01e2 C9B2     		uxtb	r1, r1
 709              	.LVL57:
1018:lib/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1019:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 710              		.loc 1 1019 0
 711 01e4 23FA01F1 		lsr	r1, r3, r1
 712              	.LVL58:
 713 01e8 8160     		str	r1, [r0, #8]
1020:lib/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1021:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 714              		.loc 1 1021 0
 715 01ea 6168     		ldr	r1, [r4, #4]
 716              	.LVL59:
1022:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 717              		.loc 1 1022 0
 718 01ec C1F3C221 		ubfx	r1, r1, #11, #3
 719              	.LVL60:
1023:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 720              		.loc 1 1023 0
 721 01f0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 722              	.LVL61:
 723 01f2 C9B2     		uxtb	r1, r1
 724              	.LVL62:
1024:lib/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1025:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 725              		.loc 1 1025 0
 726 01f4 CB40     		lsrs	r3, r3, r1
 727 01f6 C360     		str	r3, [r0, #12]
1026:lib/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1027:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 728              		.loc 1 1027 0
 729 01f8 6168     		ldr	r1, [r4, #4]
 730              	.LVL63:
1028:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 731              		.loc 1 1028 0
 732 01fa C1F38131 		ubfx	r1, r1, #14, #2
 733              	.LVL64:
1029:lib/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 734              		.loc 1 1029 0
 735 01fe 0A44     		add	r2, r2, r1
 736 0200 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
ARM GAS  /tmp/ccwtW74c.s 			page 32


 737 0202 D2B2     		uxtb	r2, r2
 738              	.LVL65:
1030:lib/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1031:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 739              		.loc 1 1031 0
 740 0204 B3FBF2F3 		udiv	r3, r3, r2
 741 0208 0361     		str	r3, [r0, #16]
1032:lib/src/stm32f10x_rcc.c **** }
 742              		.loc 1 1032 0
 743 020a 10BC     		pop	{r4}
 744              		.cfi_remember_state
 745              		.cfi_restore 4
 746              		.cfi_def_cfa_offset 0
 747 020c 7047     		bx	lr
 748              	.LVL66:
 749              	.L66:
 750              		.cfi_restore_state
 930:lib/src/stm32f10x_rcc.c ****       break;
 751              		.loc 1 930 0
 752 020e 0F4B     		ldr	r3, .L76+4
 753              	.LVL67:
 754 0210 0360     		str	r3, [r0]
 931:lib/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 755              		.loc 1 931 0
 756 0212 D8E7     		b	.L69
 757              	.LVL68:
 758              	.L67:
 935:lib/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 759              		.loc 1 935 0
 760 0214 0C4A     		ldr	r2, .L76
 761 0216 5368     		ldr	r3, [r2, #4]
 762              	.LVL69:
 936:lib/src/stm32f10x_rcc.c ****       
 763              		.loc 1 936 0
 764 0218 5268     		ldr	r2, [r2, #4]
 765              	.LVL70:
 939:lib/src/stm32f10x_rcc.c ****       
 766              		.loc 1 939 0
 767 021a C3F38343 		ubfx	r3, r3, #18, #4
 768              	.LVL71:
 769 021e 0233     		adds	r3, r3, #2
 770              	.LVL72:
 941:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 771              		.loc 1 941 0
 772 0220 12F4803F 		tst	r2, #65536
 773 0224 0AD0     		beq	.L75
 953:lib/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 774              		.loc 1 953 0
 775 0226 084A     		ldr	r2, .L76
 776              	.LVL73:
 777 0228 5268     		ldr	r2, [r2, #4]
 778 022a 12F4003F 		tst	r2, #131072
 955:lib/src/stm32f10x_rcc.c ****         }
 779              		.loc 1 955 0
 780 022e 14BF     		ite	ne
 781 0230 084A     		ldrne	r2, .L76+12
 959:lib/src/stm32f10x_rcc.c ****         }
ARM GAS  /tmp/ccwtW74c.s 			page 33


 782              		.loc 1 959 0
 783 0232 064A     		ldreq	r2, .L76+4
 784 0234 02FB03F3 		mul	r3, r2, r3
 785              	.LVL74:
 786 0238 0360     		str	r3, [r0]
 787 023a C4E7     		b	.L69
 788              	.LVL75:
 789              	.L75:
 943:lib/src/stm32f10x_rcc.c ****       }
 790              		.loc 1 943 0
 791 023c 054A     		ldr	r2, .L76+12
 792              	.LVL76:
 793 023e 02FB03F3 		mul	r3, r2, r3
 794              	.LVL77:
 795 0242 0360     		str	r3, [r0]
 796 0244 BFE7     		b	.L69
 797              	.L77:
 798 0246 00BF     		.align	2
 799              	.L76:
 800 0248 00100240 		.word	1073876992
 801 024c 00127A00 		.word	8000000
 802 0250 00000000 		.word	.LANCHOR0
 803 0254 00093D00 		.word	4000000
 804              		.cfi_endproc
 805              	.LFE82:
 806              		.size	RCC_GetClocksFreq, .-RCC_GetClocksFreq
 807              		.align	1
 808              		.global	RCC_AHBPeriphClockCmd
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu softvfp
 813              		.type	RCC_AHBPeriphClockCmd, %function
 814              	RCC_AHBPeriphClockCmd:
 815              	.LFB83:
1033:lib/src/stm32f10x_rcc.c **** 
1034:lib/src/stm32f10x_rcc.c **** /**
1035:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1036:lib/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1037:lib/src/stm32f10x_rcc.c ****   *   
1038:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1039:lib/src/stm32f10x_rcc.c ****   *   of the following values:        
1040:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1041:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1042:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1043:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1044:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1045:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1046:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1047:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1048:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1049:lib/src/stm32f10x_rcc.c ****   * 
1050:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1051:lib/src/stm32f10x_rcc.c ****   *   following values:        
1052:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1053:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1054:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
ARM GAS  /tmp/ccwtW74c.s 			page 34


1055:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1056:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1057:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1058:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1059:lib/src/stm32f10x_rcc.c ****   *   
1060:lib/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1061:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1062:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1063:lib/src/stm32f10x_rcc.c ****   * @retval None
1064:lib/src/stm32f10x_rcc.c ****   */
1065:lib/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1066:lib/src/stm32f10x_rcc.c **** {
 816              		.loc 1 1066 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821              	.LVL78:
1067:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1068:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1069:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1070:lib/src/stm32f10x_rcc.c **** 
1071:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 822              		.loc 1 1071 0
 823 0258 29B9     		cbnz	r1, .L81
1072:lib/src/stm32f10x_rcc.c ****   {
1073:lib/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
1074:lib/src/stm32f10x_rcc.c ****   }
1075:lib/src/stm32f10x_rcc.c ****   else
1076:lib/src/stm32f10x_rcc.c ****   {
1077:lib/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 824              		.loc 1 1077 0
 825 025a 054A     		ldr	r2, .L82
 826 025c 5369     		ldr	r3, [r2, #20]
 827 025e 23EA0000 		bic	r0, r3, r0
 828              	.LVL79:
 829 0262 5061     		str	r0, [r2, #20]
 830 0264 7047     		bx	lr
 831              	.LVL80:
 832              	.L81:
1073:lib/src/stm32f10x_rcc.c ****   }
 833              		.loc 1 1073 0
 834 0266 024A     		ldr	r2, .L82
 835 0268 5369     		ldr	r3, [r2, #20]
 836 026a 1843     		orrs	r0, r0, r3
 837              	.LVL81:
 838 026c 5061     		str	r0, [r2, #20]
 839 026e 7047     		bx	lr
 840              	.L83:
 841              		.align	2
 842              	.L82:
 843 0270 00100240 		.word	1073876992
 844              		.cfi_endproc
 845              	.LFE83:
 846              		.size	RCC_AHBPeriphClockCmd, .-RCC_AHBPeriphClockCmd
 847              		.align	1
 848              		.global	RCC_APB2PeriphClockCmd
ARM GAS  /tmp/ccwtW74c.s 			page 35


 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu softvfp
 853              		.type	RCC_APB2PeriphClockCmd, %function
 854              	RCC_APB2PeriphClockCmd:
 855              	.LFB84:
1078:lib/src/stm32f10x_rcc.c ****   }
1079:lib/src/stm32f10x_rcc.c **** }
1080:lib/src/stm32f10x_rcc.c **** 
1081:lib/src/stm32f10x_rcc.c **** /**
1082:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1083:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1084:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1085:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1086:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1087:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1088:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1089:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1090:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1091:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1092:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1093:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1094:lib/src/stm32f10x_rcc.c ****   * @retval None
1095:lib/src/stm32f10x_rcc.c ****   */
1096:lib/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1097:lib/src/stm32f10x_rcc.c **** {
 856              		.loc 1 1097 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861              	.LVL82:
1098:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1099:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1100:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1101:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 862              		.loc 1 1101 0
 863 0274 29B9     		cbnz	r1, .L87
1102:lib/src/stm32f10x_rcc.c ****   {
1103:lib/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
1104:lib/src/stm32f10x_rcc.c ****   }
1105:lib/src/stm32f10x_rcc.c ****   else
1106:lib/src/stm32f10x_rcc.c ****   {
1107:lib/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 864              		.loc 1 1107 0
 865 0276 054A     		ldr	r2, .L88
 866 0278 9369     		ldr	r3, [r2, #24]
 867 027a 23EA0000 		bic	r0, r3, r0
 868              	.LVL83:
 869 027e 9061     		str	r0, [r2, #24]
 870 0280 7047     		bx	lr
 871              	.LVL84:
 872              	.L87:
1103:lib/src/stm32f10x_rcc.c ****   }
 873              		.loc 1 1103 0
 874 0282 024A     		ldr	r2, .L88
ARM GAS  /tmp/ccwtW74c.s 			page 36


 875 0284 9369     		ldr	r3, [r2, #24]
 876 0286 1843     		orrs	r0, r0, r3
 877              	.LVL85:
 878 0288 9061     		str	r0, [r2, #24]
 879 028a 7047     		bx	lr
 880              	.L89:
 881              		.align	2
 882              	.L88:
 883 028c 00100240 		.word	1073876992
 884              		.cfi_endproc
 885              	.LFE84:
 886              		.size	RCC_APB2PeriphClockCmd, .-RCC_APB2PeriphClockCmd
 887              		.align	1
 888              		.global	RCC_APB1PeriphClockCmd
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu softvfp
 893              		.type	RCC_APB1PeriphClockCmd, %function
 894              	RCC_APB1PeriphClockCmd:
 895              	.LFB85:
1108:lib/src/stm32f10x_rcc.c ****   }
1109:lib/src/stm32f10x_rcc.c **** }
1110:lib/src/stm32f10x_rcc.c **** 
1111:lib/src/stm32f10x_rcc.c **** /**
1112:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1113:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1114:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1115:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1116:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1117:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1118:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1119:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1120:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1121:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1122:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1123:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1124:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1125:lib/src/stm32f10x_rcc.c ****   * @retval None
1126:lib/src/stm32f10x_rcc.c ****   */
1127:lib/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1128:lib/src/stm32f10x_rcc.c **** {
 896              		.loc 1 1128 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL86:
1129:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1130:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1131:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1132:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 902              		.loc 1 1132 0
 903 0290 29B9     		cbnz	r1, .L93
1133:lib/src/stm32f10x_rcc.c ****   {
1134:lib/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
1135:lib/src/stm32f10x_rcc.c ****   }
ARM GAS  /tmp/ccwtW74c.s 			page 37


1136:lib/src/stm32f10x_rcc.c ****   else
1137:lib/src/stm32f10x_rcc.c ****   {
1138:lib/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 904              		.loc 1 1138 0
 905 0292 054A     		ldr	r2, .L94
 906 0294 D369     		ldr	r3, [r2, #28]
 907 0296 23EA0000 		bic	r0, r3, r0
 908              	.LVL87:
 909 029a D061     		str	r0, [r2, #28]
 910 029c 7047     		bx	lr
 911              	.LVL88:
 912              	.L93:
1134:lib/src/stm32f10x_rcc.c ****   }
 913              		.loc 1 1134 0
 914 029e 024A     		ldr	r2, .L94
 915 02a0 D369     		ldr	r3, [r2, #28]
 916 02a2 1843     		orrs	r0, r0, r3
 917              	.LVL89:
 918 02a4 D061     		str	r0, [r2, #28]
 919 02a6 7047     		bx	lr
 920              	.L95:
 921              		.align	2
 922              	.L94:
 923 02a8 00100240 		.word	1073876992
 924              		.cfi_endproc
 925              	.LFE85:
 926              		.size	RCC_APB1PeriphClockCmd, .-RCC_APB1PeriphClockCmd
 927              		.align	1
 928              		.global	RCC_APB2PeriphResetCmd
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 933              		.type	RCC_APB2PeriphResetCmd, %function
 934              	RCC_APB2PeriphResetCmd:
 935              	.LFB86:
1139:lib/src/stm32f10x_rcc.c ****   }
1140:lib/src/stm32f10x_rcc.c **** }
1141:lib/src/stm32f10x_rcc.c **** 
1142:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1143:lib/src/stm32f10x_rcc.c **** /**
1144:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1145:lib/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1146:lib/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1147:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1148:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1149:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1150:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1151:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1152:lib/src/stm32f10x_rcc.c ****   * @retval None
1153:lib/src/stm32f10x_rcc.c ****   */
1154:lib/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1155:lib/src/stm32f10x_rcc.c **** {
1156:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1157:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1158:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1159:lib/src/stm32f10x_rcc.c **** 
ARM GAS  /tmp/ccwtW74c.s 			page 38


1160:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1161:lib/src/stm32f10x_rcc.c ****   {
1162:lib/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1163:lib/src/stm32f10x_rcc.c ****   }
1164:lib/src/stm32f10x_rcc.c ****   else
1165:lib/src/stm32f10x_rcc.c ****   {
1166:lib/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1167:lib/src/stm32f10x_rcc.c ****   }
1168:lib/src/stm32f10x_rcc.c **** }
1169:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1170:lib/src/stm32f10x_rcc.c **** 
1171:lib/src/stm32f10x_rcc.c **** /**
1172:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1173:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1174:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1175:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1176:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1177:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1178:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1179:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1180:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1181:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1182:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1183:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1184:lib/src/stm32f10x_rcc.c ****   * @retval None
1185:lib/src/stm32f10x_rcc.c ****   */
1186:lib/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1187:lib/src/stm32f10x_rcc.c **** {
 936              		.loc 1 1187 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL90:
1188:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1189:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1190:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1191:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 942              		.loc 1 1191 0
 943 02ac 29B9     		cbnz	r1, .L99
1192:lib/src/stm32f10x_rcc.c ****   {
1193:lib/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
1194:lib/src/stm32f10x_rcc.c ****   }
1195:lib/src/stm32f10x_rcc.c ****   else
1196:lib/src/stm32f10x_rcc.c ****   {
1197:lib/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 944              		.loc 1 1197 0
 945 02ae 054A     		ldr	r2, .L100
 946 02b0 D368     		ldr	r3, [r2, #12]
 947 02b2 23EA0000 		bic	r0, r3, r0
 948              	.LVL91:
 949 02b6 D060     		str	r0, [r2, #12]
 950 02b8 7047     		bx	lr
 951              	.LVL92:
 952              	.L99:
1193:lib/src/stm32f10x_rcc.c ****   }
 953              		.loc 1 1193 0
ARM GAS  /tmp/ccwtW74c.s 			page 39


 954 02ba 024A     		ldr	r2, .L100
 955 02bc D368     		ldr	r3, [r2, #12]
 956 02be 1843     		orrs	r0, r0, r3
 957              	.LVL93:
 958 02c0 D060     		str	r0, [r2, #12]
 959 02c2 7047     		bx	lr
 960              	.L101:
 961              		.align	2
 962              	.L100:
 963 02c4 00100240 		.word	1073876992
 964              		.cfi_endproc
 965              	.LFE86:
 966              		.size	RCC_APB2PeriphResetCmd, .-RCC_APB2PeriphResetCmd
 967              		.align	1
 968              		.global	RCC_APB1PeriphResetCmd
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu softvfp
 973              		.type	RCC_APB1PeriphResetCmd, %function
 974              	RCC_APB1PeriphResetCmd:
 975              	.LFB87:
1198:lib/src/stm32f10x_rcc.c ****   }
1199:lib/src/stm32f10x_rcc.c **** }
1200:lib/src/stm32f10x_rcc.c **** 
1201:lib/src/stm32f10x_rcc.c **** /**
1202:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1203:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1204:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1205:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1206:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1207:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1208:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1209:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1210:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1211:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1212:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1213:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1214:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1215:lib/src/stm32f10x_rcc.c ****   * @retval None
1216:lib/src/stm32f10x_rcc.c ****   */
1217:lib/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1218:lib/src/stm32f10x_rcc.c **** {
 976              		.loc 1 1218 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              		@ link register save eliminated.
 981              	.LVL94:
1219:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1220:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1221:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1222:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 982              		.loc 1 1222 0
 983 02c8 29B9     		cbnz	r1, .L105
1223:lib/src/stm32f10x_rcc.c ****   {
1224:lib/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
ARM GAS  /tmp/ccwtW74c.s 			page 40


1225:lib/src/stm32f10x_rcc.c ****   }
1226:lib/src/stm32f10x_rcc.c ****   else
1227:lib/src/stm32f10x_rcc.c ****   {
1228:lib/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 984              		.loc 1 1228 0
 985 02ca 054A     		ldr	r2, .L106
 986 02cc 1369     		ldr	r3, [r2, #16]
 987 02ce 23EA0000 		bic	r0, r3, r0
 988              	.LVL95:
 989 02d2 1061     		str	r0, [r2, #16]
 990 02d4 7047     		bx	lr
 991              	.LVL96:
 992              	.L105:
1224:lib/src/stm32f10x_rcc.c ****   }
 993              		.loc 1 1224 0
 994 02d6 024A     		ldr	r2, .L106
 995 02d8 1369     		ldr	r3, [r2, #16]
 996 02da 1843     		orrs	r0, r0, r3
 997              	.LVL97:
 998 02dc 1061     		str	r0, [r2, #16]
 999 02de 7047     		bx	lr
 1000              	.L107:
 1001              		.align	2
 1002              	.L106:
 1003 02e0 00100240 		.word	1073876992
 1004              		.cfi_endproc
 1005              	.LFE87:
 1006              		.size	RCC_APB1PeriphResetCmd, .-RCC_APB1PeriphResetCmd
 1007              		.align	1
 1008              		.global	RCC_BackupResetCmd
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu softvfp
 1013              		.type	RCC_BackupResetCmd, %function
 1014              	RCC_BackupResetCmd:
 1015              	.LFB88:
1229:lib/src/stm32f10x_rcc.c ****   }
1230:lib/src/stm32f10x_rcc.c **** }
1231:lib/src/stm32f10x_rcc.c **** 
1232:lib/src/stm32f10x_rcc.c **** /**
1233:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1234:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1235:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1236:lib/src/stm32f10x_rcc.c ****   * @retval None
1237:lib/src/stm32f10x_rcc.c ****   */
1238:lib/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1239:lib/src/stm32f10x_rcc.c **** {
 1016              		.loc 1 1239 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021              	.LVL98:
1240:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1241:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1242:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
ARM GAS  /tmp/ccwtW74c.s 			page 41


 1022              		.loc 1 1242 0
 1023 02e4 014B     		ldr	r3, .L109
 1024 02e6 1860     		str	r0, [r3]
 1025 02e8 7047     		bx	lr
 1026              	.L110:
 1027 02ea 00BF     		.align	2
 1028              	.L109:
 1029 02ec 40044242 		.word	1111622720
 1030              		.cfi_endproc
 1031              	.LFE88:
 1032              		.size	RCC_BackupResetCmd, .-RCC_BackupResetCmd
 1033              		.align	1
 1034              		.global	RCC_ClockSecuritySystemCmd
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1039              		.type	RCC_ClockSecuritySystemCmd, %function
 1040              	RCC_ClockSecuritySystemCmd:
 1041              	.LFB89:
1243:lib/src/stm32f10x_rcc.c **** }
1244:lib/src/stm32f10x_rcc.c **** 
1245:lib/src/stm32f10x_rcc.c **** /**
1246:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1247:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1248:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1249:lib/src/stm32f10x_rcc.c ****   * @retval None
1250:lib/src/stm32f10x_rcc.c ****   */
1251:lib/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1252:lib/src/stm32f10x_rcc.c **** {
 1042              		.loc 1 1252 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047              	.LVL99:
1253:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1254:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1255:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1048              		.loc 1 1255 0
 1049 02f0 014B     		ldr	r3, .L112
 1050 02f2 1860     		str	r0, [r3]
 1051 02f4 7047     		bx	lr
 1052              	.L113:
 1053 02f6 00BF     		.align	2
 1054              	.L112:
 1055 02f8 4C004242 		.word	1111621708
 1056              		.cfi_endproc
 1057              	.LFE89:
 1058              		.size	RCC_ClockSecuritySystemCmd, .-RCC_ClockSecuritySystemCmd
 1059              		.align	1
 1060              		.global	RCC_MCOConfig
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu softvfp
 1065              		.type	RCC_MCOConfig, %function
ARM GAS  /tmp/ccwtW74c.s 			page 42


 1066              	RCC_MCOConfig:
 1067              	.LFB90:
1256:lib/src/stm32f10x_rcc.c **** }
1257:lib/src/stm32f10x_rcc.c **** 
1258:lib/src/stm32f10x_rcc.c **** /**
1259:lib/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1260:lib/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1261:lib/src/stm32f10x_rcc.c ****   *   
1262:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1263:lib/src/stm32f10x_rcc.c ****   *   following values:       
1264:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1265:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1266:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1267:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1268:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1269:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1270:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1271:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1272:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1273:lib/src/stm32f10x_rcc.c ****   * 
1274:lib/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1275:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1276:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1277:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1278:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1279:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1280:lib/src/stm32f10x_rcc.c ****   *   
1281:lib/src/stm32f10x_rcc.c ****   * @retval None
1282:lib/src/stm32f10x_rcc.c ****   */
1283:lib/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1284:lib/src/stm32f10x_rcc.c **** {
 1068              		.loc 1 1284 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073              	.LVL100:
1285:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1286:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1287:lib/src/stm32f10x_rcc.c **** 
1288:lib/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1289:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1074              		.loc 1 1289 0
 1075 02fc 014B     		ldr	r3, .L115
 1076 02fe 1870     		strb	r0, [r3]
 1077 0300 7047     		bx	lr
 1078              	.L116:
 1079 0302 00BF     		.align	2
 1080              	.L115:
 1081 0304 07100240 		.word	1073876999
 1082              		.cfi_endproc
 1083              	.LFE90:
 1084              		.size	RCC_MCOConfig, .-RCC_MCOConfig
 1085              		.align	1
 1086              		.global	RCC_GetFlagStatus
 1087              		.syntax unified
 1088              		.thumb
ARM GAS  /tmp/ccwtW74c.s 			page 43


 1089              		.thumb_func
 1090              		.fpu softvfp
 1091              		.type	RCC_GetFlagStatus, %function
 1092              	RCC_GetFlagStatus:
 1093              	.LFB91:
1290:lib/src/stm32f10x_rcc.c **** }
1291:lib/src/stm32f10x_rcc.c **** 
1292:lib/src/stm32f10x_rcc.c **** /**
1293:lib/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1294:lib/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1295:lib/src/stm32f10x_rcc.c ****   *   
1296:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1297:lib/src/stm32f10x_rcc.c ****   *   following values:
1298:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1299:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1300:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1301:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1302:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1303:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1304:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1305:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1306:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1307:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1308:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1309:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1310:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1311:lib/src/stm32f10x_rcc.c ****   * 
1312:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1313:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1314:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1315:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1316:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1317:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1318:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1319:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1320:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1321:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1322:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1323:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1324:lib/src/stm32f10x_rcc.c ****   *   
1325:lib/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1326:lib/src/stm32f10x_rcc.c ****   */
1327:lib/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1328:lib/src/stm32f10x_rcc.c **** {
 1094              		.loc 1 1328 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099              	.LVL101:
1329:lib/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1330:lib/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1331:lib/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1332:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1333:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1334:lib/src/stm32f10x_rcc.c **** 
1335:lib/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
ARM GAS  /tmp/ccwtW74c.s 			page 44


1336:lib/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1100              		.loc 1 1336 0
 1101 0308 4309     		lsrs	r3, r0, #5
 1102              	.LVL102:
1337:lib/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1103              		.loc 1 1337 0
 1104 030a 012B     		cmp	r3, #1
 1105 030c 0BD0     		beq	.L121
1338:lib/src/stm32f10x_rcc.c ****   {
1339:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
1340:lib/src/stm32f10x_rcc.c ****   }
1341:lib/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1106              		.loc 1 1341 0
 1107 030e 022B     		cmp	r3, #2
1342:lib/src/stm32f10x_rcc.c ****   {
1343:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1108              		.loc 1 1343 0
 1109 0310 064B     		ldr	r3, .L122
 1110              	.LVL103:
 1111 0312 0CBF     		ite	eq
 1112 0314 1B6A     		ldreq	r3, [r3, #32]
 1113              	.LVL104:
1344:lib/src/stm32f10x_rcc.c ****   }
1345:lib/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1346:lib/src/stm32f10x_rcc.c ****   {
1347:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1114              		.loc 1 1347 0
 1115 0316 5B6A     		ldrne	r3, [r3, #36]
 1116              	.LVL105:
 1117              	.L119:
1348:lib/src/stm32f10x_rcc.c ****   }
1349:lib/src/stm32f10x_rcc.c **** 
1350:lib/src/stm32f10x_rcc.c ****   /* Get the flag position */
1351:lib/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1118              		.loc 1 1351 0
 1119 0318 00F01F00 		and	r0, r0, #31
 1120              	.LVL106:
1352:lib/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1121              		.loc 1 1352 0
 1122 031c 23FA00F0 		lsr	r0, r3, r0
1353:lib/src/stm32f10x_rcc.c ****   {
1354:lib/src/stm32f10x_rcc.c ****     bitstatus = SET;
1355:lib/src/stm32f10x_rcc.c ****   }
1356:lib/src/stm32f10x_rcc.c ****   else
1357:lib/src/stm32f10x_rcc.c ****   {
1358:lib/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1359:lib/src/stm32f10x_rcc.c ****   }
1360:lib/src/stm32f10x_rcc.c **** 
1361:lib/src/stm32f10x_rcc.c ****   /* Return the flag status */
1362:lib/src/stm32f10x_rcc.c ****   return bitstatus;
1363:lib/src/stm32f10x_rcc.c **** }
 1123              		.loc 1 1363 0
 1124 0320 00F00100 		and	r0, r0, #1
 1125 0324 7047     		bx	lr
 1126              	.LVL107:
 1127              	.L121:
1339:lib/src/stm32f10x_rcc.c ****   }
ARM GAS  /tmp/ccwtW74c.s 			page 45


 1128              		.loc 1 1339 0
 1129 0326 014B     		ldr	r3, .L122
 1130              	.LVL108:
 1131 0328 1B68     		ldr	r3, [r3]
 1132              	.LVL109:
 1133 032a F5E7     		b	.L119
 1134              	.L123:
 1135              		.align	2
 1136              	.L122:
 1137 032c 00100240 		.word	1073876992
 1138              		.cfi_endproc
 1139              	.LFE91:
 1140              		.size	RCC_GetFlagStatus, .-RCC_GetFlagStatus
 1141              		.align	1
 1142              		.global	RCC_WaitForHSEStartUp
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu softvfp
 1147              		.type	RCC_WaitForHSEStartUp, %function
 1148              	RCC_WaitForHSEStartUp:
 1149              	.LFB65:
 306:lib/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1150              		.loc 1 306 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154 0330 10B5     		push	{r4, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 4, -8
 1157              		.cfi_offset 14, -4
 1158 0332 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 16
 307:lib/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1160              		.loc 1 307 0
 1161 0334 0023     		movs	r3, #0
 1162 0336 0193     		str	r3, [sp, #4]
 1163              	.LVL110:
 314:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1164              		.loc 1 314 0
 1165 0338 3124     		movs	r4, #49
 1166              	.LVL111:
 1167              	.L126:
 314:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1168              		.loc 1 314 0 is_stmt 0 discriminator 2
 1169 033a 2046     		mov	r0, r4
 1170 033c FFF7FEFF 		bl	RCC_GetFlagStatus
 1171              	.LVL112:
 315:lib/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1172              		.loc 1 315 0 is_stmt 1 discriminator 2
 1173 0340 019B     		ldr	r3, [sp, #4]
 1174 0342 0133     		adds	r3, r3, #1
 1175 0344 0193     		str	r3, [sp, #4]
 316:lib/src/stm32f10x_rcc.c ****   
 1176              		.loc 1 316 0 discriminator 2
 1177 0346 019B     		ldr	r3, [sp, #4]
 1178 0348 B3F5A06F 		cmp	r3, #1280
ARM GAS  /tmp/ccwtW74c.s 			page 46


 1179 034c 01D0     		beq	.L125
 316:lib/src/stm32f10x_rcc.c ****   
 1180              		.loc 1 316 0 is_stmt 0 discriminator 1
 1181 034e 0028     		cmp	r0, #0
 1182 0350 F3D0     		beq	.L126
 1183              	.L125:
 318:lib/src/stm32f10x_rcc.c ****   {
 1184              		.loc 1 318 0 is_stmt 1
 1185 0352 3120     		movs	r0, #49
 1186              	.LVL113:
 1187 0354 FFF7FEFF 		bl	RCC_GetFlagStatus
 1188              	.LVL114:
 327:lib/src/stm32f10x_rcc.c **** 
 1189              		.loc 1 327 0
 1190 0358 0030     		adds	r0, r0, #0
 1191              	.LVL115:
 1192 035a 18BF     		it	ne
 1193 035c 0120     		movne	r0, #1
 1194 035e 02B0     		add	sp, sp, #8
 1195              		.cfi_def_cfa_offset 8
 1196              		@ sp needed
 1197 0360 10BD     		pop	{r4, pc}
 1198              		.cfi_endproc
 1199              	.LFE65:
 1200              		.size	RCC_WaitForHSEStartUp, .-RCC_WaitForHSEStartUp
 1201              		.align	1
 1202              		.global	RCC_ClearFlag
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu softvfp
 1207              		.type	RCC_ClearFlag, %function
 1208              	RCC_ClearFlag:
 1209              	.LFB92:
1364:lib/src/stm32f10x_rcc.c **** 
1365:lib/src/stm32f10x_rcc.c **** /**
1366:lib/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1367:lib/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1368:lib/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1369:lib/src/stm32f10x_rcc.c ****   * @param  None
1370:lib/src/stm32f10x_rcc.c ****   * @retval None
1371:lib/src/stm32f10x_rcc.c ****   */
1372:lib/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1373:lib/src/stm32f10x_rcc.c **** {
 1210              		.loc 1 1373 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
1374:lib/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1375:lib/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1215              		.loc 1 1375 0
 1216 0362 034A     		ldr	r2, .L130
 1217 0364 536A     		ldr	r3, [r2, #36]
 1218 0366 43F08073 		orr	r3, r3, #16777216
 1219 036a 5362     		str	r3, [r2, #36]
 1220 036c 7047     		bx	lr
ARM GAS  /tmp/ccwtW74c.s 			page 47


 1221              	.L131:
 1222 036e 00BF     		.align	2
 1223              	.L130:
 1224 0370 00100240 		.word	1073876992
 1225              		.cfi_endproc
 1226              	.LFE92:
 1227              		.size	RCC_ClearFlag, .-RCC_ClearFlag
 1228              		.align	1
 1229              		.global	RCC_GetITStatus
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu softvfp
 1234              		.type	RCC_GetITStatus, %function
 1235              	RCC_GetITStatus:
 1236              	.LFB93:
1376:lib/src/stm32f10x_rcc.c **** }
1377:lib/src/stm32f10x_rcc.c **** 
1378:lib/src/stm32f10x_rcc.c **** /**
1379:lib/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1380:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1381:lib/src/stm32f10x_rcc.c ****   *   
1382:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1383:lib/src/stm32f10x_rcc.c ****   *   following values:
1384:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1385:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1386:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1387:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1388:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1389:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1390:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1391:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1392:lib/src/stm32f10x_rcc.c ****   * 
1393:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1394:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1395:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1396:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1397:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1398:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1399:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1400:lib/src/stm32f10x_rcc.c ****   *   
1401:lib/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1402:lib/src/stm32f10x_rcc.c ****   */
1403:lib/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1404:lib/src/stm32f10x_rcc.c **** {
 1237              		.loc 1 1404 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242              	.LVL116:
1405:lib/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1406:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1407:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1408:lib/src/stm32f10x_rcc.c **** 
1409:lib/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1410:lib/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
ARM GAS  /tmp/ccwtW74c.s 			page 48


 1243              		.loc 1 1410 0
 1244 0374 034B     		ldr	r3, .L133
 1245 0376 9B68     		ldr	r3, [r3, #8]
 1246              	.LVL117:
 1247 0378 1842     		tst	r0, r3
1411:lib/src/stm32f10x_rcc.c ****   {
1412:lib/src/stm32f10x_rcc.c ****     bitstatus = SET;
1413:lib/src/stm32f10x_rcc.c ****   }
1414:lib/src/stm32f10x_rcc.c ****   else
1415:lib/src/stm32f10x_rcc.c ****   {
1416:lib/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1417:lib/src/stm32f10x_rcc.c ****   }
1418:lib/src/stm32f10x_rcc.c **** 
1419:lib/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1420:lib/src/stm32f10x_rcc.c ****   return  bitstatus;
1421:lib/src/stm32f10x_rcc.c **** }
 1248              		.loc 1 1421 0
 1249 037a 14BF     		ite	ne
 1250 037c 0120     		movne	r0, #1
 1251              	.LVL118:
 1252 037e 0020     		moveq	r0, #0
 1253 0380 7047     		bx	lr
 1254              	.L134:
 1255 0382 00BF     		.align	2
 1256              	.L133:
 1257 0384 00100240 		.word	1073876992
 1258              		.cfi_endproc
 1259              	.LFE93:
 1260              		.size	RCC_GetITStatus, .-RCC_GetITStatus
 1261              		.align	1
 1262              		.global	RCC_ClearITPendingBit
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu softvfp
 1267              		.type	RCC_ClearITPendingBit, %function
 1268              	RCC_ClearITPendingBit:
 1269              	.LFB94:
1422:lib/src/stm32f10x_rcc.c **** 
1423:lib/src/stm32f10x_rcc.c **** /**
1424:lib/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1425:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1426:lib/src/stm32f10x_rcc.c ****   *   
1427:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1428:lib/src/stm32f10x_rcc.c ****   *   of the following values:
1429:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1430:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1431:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1432:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1433:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1434:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1435:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1436:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1437:lib/src/stm32f10x_rcc.c ****   * 
1438:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1439:lib/src/stm32f10x_rcc.c ****   *   following values:        
1440:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
ARM GAS  /tmp/ccwtW74c.s 			page 49


1441:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1442:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1443:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1444:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1445:lib/src/stm32f10x_rcc.c ****   *   
1446:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1447:lib/src/stm32f10x_rcc.c ****   * @retval None
1448:lib/src/stm32f10x_rcc.c ****   */
1449:lib/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1450:lib/src/stm32f10x_rcc.c **** {
 1270              		.loc 1 1450 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275              	.LVL119:
1451:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1452:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1453:lib/src/stm32f10x_rcc.c **** 
1454:lib/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1455:lib/src/stm32f10x_rcc.c ****      pending bits */
1456:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1276              		.loc 1 1456 0
 1277 0388 014B     		ldr	r3, .L136
 1278 038a 1870     		strb	r0, [r3]
 1279 038c 7047     		bx	lr
 1280              	.L137:
 1281 038e 00BF     		.align	2
 1282              	.L136:
 1283 0390 0A100240 		.word	1073877002
 1284              		.cfi_endproc
 1285              	.LFE94:
 1286              		.size	RCC_ClearITPendingBit, .-RCC_ClearITPendingBit
 1287              		.data
 1288              		.align	2
 1289              		.set	.LANCHOR0,. + 0
 1290              		.type	APBAHBPrescTable, %object
 1291              		.size	APBAHBPrescTable, 16
 1292              	APBAHBPrescTable:
 1293 0000 00       		.byte	0
 1294 0001 00       		.byte	0
 1295 0002 00       		.byte	0
 1296 0003 00       		.byte	0
 1297 0004 01       		.byte	1
 1298 0005 02       		.byte	2
 1299 0006 03       		.byte	3
 1300 0007 04       		.byte	4
 1301 0008 01       		.byte	1
 1302 0009 02       		.byte	2
 1303 000a 03       		.byte	3
 1304 000b 04       		.byte	4
 1305 000c 06       		.byte	6
 1306 000d 07       		.byte	7
 1307 000e 08       		.byte	8
 1308 000f 09       		.byte	9
 1309              		.type	ADCPrescTable, %object
 1310              		.size	ADCPrescTable, 4
ARM GAS  /tmp/ccwtW74c.s 			page 50


 1311              	ADCPrescTable:
 1312 0010 02       		.byte	2
 1313 0011 04       		.byte	4
 1314 0012 06       		.byte	6
 1315 0013 08       		.byte	8
 1316              		.text
 1317              	.Letext0:
 1318              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1319              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1320              		.file 4 "/home/faker/Documents/code/STM/stm32-quadrocopter/cmsis/core_cm3.h"
 1321              		.file 5 "/home/faker/Documents/code/STM/stm32-quadrocopter/lib/inc/system_stm32f10x.h"
 1322              		.file 6 "/home/faker/Documents/code/STM/stm32-quadrocopter/lib/inc/stm32f10x.h"
 1323              		.file 7 "/home/faker/Documents/code/STM/stm32-quadrocopter/lib/inc/stm32f10x_rcc.h"
 1324              		.file 8 "/home/faker/Documents/code/STM/stm32-quadrocopter/drivers/ahrs.h"
 1325              		.file 9 "/home/faker/Documents/code/STM/stm32-quadrocopter/drivers/nvic.h"
 1326              		.file 10 "/home/faker/Documents/code/STM/stm32-quadrocopter/drivers/mpu6050.h"
 1327              		.file 11 "/usr/arm-none-eabi/include/sys/lock.h"
 1328              		.file 12 "/usr/arm-none-eabi/include/sys/_types.h"
 1329              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 1330              		.file 14 "/usr/arm-none-eabi/include/sys/reent.h"
 1331              		.file 15 "/usr/arm-none-eabi/include/stdlib.h"
 1332              		.file 16 "/usr/arm-none-eabi/include/math.h"
 1333              		.file 17 "/usr/arm-none-eabi/include/sys/errno.h"
 1334              		.section	.debug_info,"",%progbits
 1335              	.Ldebug_info0:
 1336 0000 09130000 		.4byte	0x1309
 1337 0004 0400     		.2byte	0x4
 1338 0006 00000000 		.4byte	.Ldebug_abbrev0
 1339 000a 04       		.byte	0x4
 1340 000b 01       		.uleb128 0x1
 1341 000c C1040000 		.4byte	.LASF251
 1342 0010 0C       		.byte	0xc
 1343 0011 FC090000 		.4byte	.LASF252
 1344 0015 F1000000 		.4byte	.LASF253
 1345 0019 00000000 		.4byte	.Ltext0
 1346 001d 94030000 		.4byte	.Letext0-.Ltext0
 1347 0021 00000000 		.4byte	.Ldebug_line0
 1348 0025 02       		.uleb128 0x2
 1349 0026 01       		.byte	0x1
 1350 0027 06       		.byte	0x6
 1351 0028 45020000 		.4byte	.LASF0
 1352 002c 03       		.uleb128 0x3
 1353 002d 32010000 		.4byte	.LASF2
 1354 0031 02       		.byte	0x2
 1355 0032 1D       		.byte	0x1d
 1356 0033 37000000 		.4byte	0x37
 1357 0037 02       		.uleb128 0x2
 1358 0038 01       		.byte	0x1
 1359 0039 08       		.byte	0x8
 1360 003a 94020000 		.4byte	.LASF1
 1361 003e 03       		.uleb128 0x3
 1362 003f E1080000 		.4byte	.LASF3
 1363 0043 02       		.byte	0x2
 1364 0044 29       		.byte	0x29
 1365 0045 49000000 		.4byte	0x49
 1366 0049 02       		.uleb128 0x2
 1367 004a 02       		.byte	0x2
ARM GAS  /tmp/ccwtW74c.s 			page 51


 1368 004b 05       		.byte	0x5
 1369 004c 7E090000 		.4byte	.LASF4
 1370 0050 03       		.uleb128 0x3
 1371 0051 32030000 		.4byte	.LASF5
 1372 0055 02       		.byte	0x2
 1373 0056 2B       		.byte	0x2b
 1374 0057 5B000000 		.4byte	0x5b
 1375 005b 02       		.uleb128 0x2
 1376 005c 02       		.byte	0x2
 1377 005d 07       		.byte	0x7
 1378 005e 7A0A0000 		.4byte	.LASF6
 1379 0062 03       		.uleb128 0x3
 1380 0063 C40A0000 		.4byte	.LASF7
 1381 0067 02       		.byte	0x2
 1382 0068 3F       		.byte	0x3f
 1383 0069 6D000000 		.4byte	0x6d
 1384 006d 02       		.uleb128 0x2
 1385 006e 04       		.byte	0x4
 1386 006f 05       		.byte	0x5
 1387 0070 89010000 		.4byte	.LASF8
 1388 0074 03       		.uleb128 0x3
 1389 0075 34050000 		.4byte	.LASF9
 1390 0079 02       		.byte	0x2
 1391 007a 41       		.byte	0x41
 1392 007b 7F000000 		.4byte	0x7f
 1393 007f 02       		.uleb128 0x2
 1394 0080 04       		.byte	0x4
 1395 0081 07       		.byte	0x7
 1396 0082 1B040000 		.4byte	.LASF10
 1397 0086 02       		.uleb128 0x2
 1398 0087 08       		.byte	0x8
 1399 0088 05       		.byte	0x5
 1400 0089 5B050000 		.4byte	.LASF11
 1401 008d 02       		.uleb128 0x2
 1402 008e 08       		.byte	0x8
 1403 008f 07       		.byte	0x7
 1404 0090 30080000 		.4byte	.LASF12
 1405 0094 04       		.uleb128 0x4
 1406 0095 04       		.byte	0x4
 1407 0096 05       		.byte	0x5
 1408 0097 696E7400 		.ascii	"int\000"
 1409 009b 02       		.uleb128 0x2
 1410 009c 04       		.byte	0x4
 1411 009d 07       		.byte	0x7
 1412 009e 92060000 		.4byte	.LASF13
 1413 00a2 03       		.uleb128 0x3
 1414 00a3 59020000 		.4byte	.LASF14
 1415 00a7 03       		.byte	0x3
 1416 00a8 18       		.byte	0x18
 1417 00a9 2C000000 		.4byte	0x2c
 1418 00ad 05       		.uleb128 0x5
 1419 00ae A2000000 		.4byte	0xa2
 1420 00b2 06       		.uleb128 0x6
 1421 00b3 AD000000 		.4byte	0xad
 1422 00b7 03       		.uleb128 0x3
 1423 00b8 AC090000 		.4byte	.LASF15
 1424 00bc 03       		.byte	0x3
ARM GAS  /tmp/ccwtW74c.s 			page 52


 1425 00bd 20       		.byte	0x20
 1426 00be 3E000000 		.4byte	0x3e
 1427 00c2 03       		.uleb128 0x3
 1428 00c3 47080000 		.4byte	.LASF16
 1429 00c7 03       		.byte	0x3
 1430 00c8 24       		.byte	0x24
 1431 00c9 50000000 		.4byte	0x50
 1432 00cd 03       		.uleb128 0x3
 1433 00ce 31000000 		.4byte	.LASF17
 1434 00d2 03       		.byte	0x3
 1435 00d3 2C       		.byte	0x2c
 1436 00d4 62000000 		.4byte	0x62
 1437 00d8 06       		.uleb128 0x6
 1438 00d9 CD000000 		.4byte	0xcd
 1439 00dd 03       		.uleb128 0x3
 1440 00de 5D0A0000 		.4byte	.LASF18
 1441 00e2 03       		.byte	0x3
 1442 00e3 30       		.byte	0x30
 1443 00e4 74000000 		.4byte	0x74
 1444 00e8 06       		.uleb128 0x6
 1445 00e9 DD000000 		.4byte	0xdd
 1446 00ed 02       		.uleb128 0x2
 1447 00ee 04       		.byte	0x4
 1448 00ef 07       		.byte	0x7
 1449 00f0 00000000 		.4byte	.LASF19
 1450 00f4 07       		.uleb128 0x7
 1451 00f5 16060000 		.4byte	.LASF20
 1452 00f9 04       		.byte	0x4
 1453 00fa 9606     		.2byte	0x696
 1454 00fc D8000000 		.4byte	0xd8
 1455 0100 08       		.uleb128 0x8
 1456 0101 5F040000 		.4byte	.LASF21
 1457 0105 05       		.byte	0x5
 1458 0106 35       		.byte	0x35
 1459 0107 DD000000 		.4byte	0xdd
 1460 010b 09       		.uleb128 0x9
 1461 010c 01       		.byte	0x1
 1462 010d 37000000 		.4byte	0x37
 1463 0111 06       		.byte	0x6
 1464 0112 0702     		.2byte	0x207
 1465 0114 25010000 		.4byte	0x125
 1466 0118 0A       		.uleb128 0xa
 1467 0119 EB080000 		.4byte	.LASF22
 1468 011d 00       		.byte	0
 1469 011e 0B       		.uleb128 0xb
 1470 011f 53455400 		.ascii	"SET\000"
 1471 0123 01       		.byte	0x1
 1472 0124 00       		.byte	0
 1473 0125 0C       		.uleb128 0xc
 1474 0126 2F090000 		.4byte	.LASF23
 1475 012a 06       		.byte	0x6
 1476 012b 0702     		.2byte	0x207
 1477 012d 0B010000 		.4byte	0x10b
 1478 0131 0C       		.uleb128 0xc
 1479 0132 A9070000 		.4byte	.LASF24
 1480 0136 06       		.byte	0x6
 1481 0137 0702     		.2byte	0x207
ARM GAS  /tmp/ccwtW74c.s 			page 53


 1482 0139 0B010000 		.4byte	0x10b
 1483 013d 09       		.uleb128 0x9
 1484 013e 01       		.byte	0x1
 1485 013f 37000000 		.4byte	0x37
 1486 0143 06       		.byte	0x6
 1487 0144 0902     		.2byte	0x209
 1488 0146 57010000 		.4byte	0x157
 1489 014a 0A       		.uleb128 0xa
 1490 014b A1070000 		.4byte	.LASF25
 1491 014f 00       		.byte	0
 1492 0150 0A       		.uleb128 0xa
 1493 0151 D1090000 		.4byte	.LASF26
 1494 0155 01       		.byte	0x1
 1495 0156 00       		.byte	0
 1496 0157 0C       		.uleb128 0xc
 1497 0158 20080000 		.4byte	.LASF27
 1498 015c 06       		.byte	0x6
 1499 015d 0902     		.2byte	0x209
 1500 015f 3D010000 		.4byte	0x13d
 1501 0163 09       		.uleb128 0x9
 1502 0164 01       		.byte	0x1
 1503 0165 37000000 		.4byte	0x37
 1504 0169 06       		.byte	0x6
 1505 016a 0C02     		.2byte	0x20c
 1506 016c 7D010000 		.4byte	0x17d
 1507 0170 0A       		.uleb128 0xa
 1508 0171 A2040000 		.4byte	.LASF28
 1509 0175 00       		.byte	0
 1510 0176 0A       		.uleb128 0xa
 1511 0177 AD080000 		.4byte	.LASF29
 1512 017b 01       		.byte	0x1
 1513 017c 00       		.byte	0
 1514 017d 0C       		.uleb128 0xc
 1515 017e D4070000 		.4byte	.LASF30
 1516 0182 06       		.byte	0x6
 1517 0183 0C02     		.2byte	0x20c
 1518 0185 63010000 		.4byte	0x163
 1519 0189 0D       		.uleb128 0xd
 1520 018a 28       		.byte	0x28
 1521 018b 06       		.byte	0x6
 1522 018c 3404     		.2byte	0x434
 1523 018e 14020000 		.4byte	0x214
 1524 0192 0E       		.uleb128 0xe
 1525 0193 435200   		.ascii	"CR\000"
 1526 0196 06       		.byte	0x6
 1527 0197 3604     		.2byte	0x436
 1528 0199 E8000000 		.4byte	0xe8
 1529 019d 00       		.byte	0
 1530 019e 0F       		.uleb128 0xf
 1531 019f D2030000 		.4byte	.LASF31
 1532 01a3 06       		.byte	0x6
 1533 01a4 3704     		.2byte	0x437
 1534 01a6 E8000000 		.4byte	0xe8
 1535 01aa 04       		.byte	0x4
 1536 01ab 0E       		.uleb128 0xe
 1537 01ac 43495200 		.ascii	"CIR\000"
 1538 01b0 06       		.byte	0x6
ARM GAS  /tmp/ccwtW74c.s 			page 54


 1539 01b1 3804     		.2byte	0x438
 1540 01b3 E8000000 		.4byte	0xe8
 1541 01b7 08       		.byte	0x8
 1542 01b8 0F       		.uleb128 0xf
 1543 01b9 B2050000 		.4byte	.LASF32
 1544 01bd 06       		.byte	0x6
 1545 01be 3904     		.2byte	0x439
 1546 01c0 E8000000 		.4byte	0xe8
 1547 01c4 0C       		.byte	0xc
 1548 01c5 0F       		.uleb128 0xf
 1549 01c6 EF070000 		.4byte	.LASF33
 1550 01ca 06       		.byte	0x6
 1551 01cb 3A04     		.2byte	0x43a
 1552 01cd E8000000 		.4byte	0xe8
 1553 01d1 10       		.byte	0x10
 1554 01d2 0F       		.uleb128 0xf
 1555 01d3 E2090000 		.4byte	.LASF34
 1556 01d7 06       		.byte	0x6
 1557 01d8 3B04     		.2byte	0x43b
 1558 01da E8000000 		.4byte	0xe8
 1559 01de 14       		.byte	0x14
 1560 01df 0F       		.uleb128 0xf
 1561 01e0 E7010000 		.4byte	.LASF35
 1562 01e4 06       		.byte	0x6
 1563 01e5 3C04     		.2byte	0x43c
 1564 01e7 E8000000 		.4byte	0xe8
 1565 01eb 18       		.byte	0x18
 1566 01ec 0F       		.uleb128 0xf
 1567 01ed 0A080000 		.4byte	.LASF36
 1568 01f1 06       		.byte	0x6
 1569 01f2 3D04     		.2byte	0x43d
 1570 01f4 E8000000 		.4byte	0xe8
 1571 01f8 1C       		.byte	0x1c
 1572 01f9 0F       		.uleb128 0xf
 1573 01fa AF030000 		.4byte	.LASF37
 1574 01fe 06       		.byte	0x6
 1575 01ff 3E04     		.2byte	0x43e
 1576 0201 E8000000 		.4byte	0xe8
 1577 0205 20       		.byte	0x20
 1578 0206 0E       		.uleb128 0xe
 1579 0207 43535200 		.ascii	"CSR\000"
 1580 020b 06       		.byte	0x6
 1581 020c 3F04     		.2byte	0x43f
 1582 020e E8000000 		.4byte	0xe8
 1583 0212 24       		.byte	0x24
 1584 0213 00       		.byte	0
 1585 0214 0C       		.uleb128 0xc
 1586 0215 65090000 		.4byte	.LASF38
 1587 0219 06       		.byte	0x6
 1588 021a 4A04     		.2byte	0x44a
 1589 021c 89010000 		.4byte	0x189
 1590 0220 10       		.uleb128 0x10
 1591 0221 14       		.byte	0x14
 1592 0222 07       		.byte	0x7
 1593 0223 2E       		.byte	0x2e
 1594 0224 65020000 		.4byte	0x265
 1595 0228 11       		.uleb128 0x11
ARM GAS  /tmp/ccwtW74c.s 			page 55


 1596 0229 A20A0000 		.4byte	.LASF39
 1597 022d 07       		.byte	0x7
 1598 022e 30       		.byte	0x30
 1599 022f DD000000 		.4byte	0xdd
 1600 0233 00       		.byte	0
 1601 0234 11       		.uleb128 0x11
 1602 0235 A9000000 		.4byte	.LASF40
 1603 0239 07       		.byte	0x7
 1604 023a 31       		.byte	0x31
 1605 023b DD000000 		.4byte	0xdd
 1606 023f 04       		.byte	0x4
 1607 0240 11       		.uleb128 0x11
 1608 0241 5F030000 		.4byte	.LASF41
 1609 0245 07       		.byte	0x7
 1610 0246 32       		.byte	0x32
 1611 0247 DD000000 		.4byte	0xdd
 1612 024b 08       		.byte	0x8
 1613 024c 11       		.uleb128 0x11
 1614 024d 3D030000 		.4byte	.LASF42
 1615 0251 07       		.byte	0x7
 1616 0252 33       		.byte	0x33
 1617 0253 DD000000 		.4byte	0xdd
 1618 0257 0C       		.byte	0xc
 1619 0258 11       		.uleb128 0x11
 1620 0259 3C010000 		.4byte	.LASF43
 1621 025d 07       		.byte	0x7
 1622 025e 34       		.byte	0x34
 1623 025f DD000000 		.4byte	0xdd
 1624 0263 10       		.byte	0x10
 1625 0264 00       		.byte	0
 1626 0265 03       		.uleb128 0x3
 1627 0266 53090000 		.4byte	.LASF44
 1628 026a 07       		.byte	0x7
 1629 026b 35       		.byte	0x35
 1630 026c 20020000 		.4byte	0x220
 1631 0270 08       		.uleb128 0x8
 1632 0271 69050000 		.4byte	.LASF45
 1633 0275 08       		.byte	0x8
 1634 0276 1A       		.byte	0x1a
 1635 0277 82020000 		.4byte	0x282
 1636 027b 02       		.uleb128 0x2
 1637 027c 04       		.byte	0x4
 1638 027d 04       		.byte	0x4
 1639 027e 47060000 		.4byte	.LASF46
 1640 0282 06       		.uleb128 0x6
 1641 0283 7B020000 		.4byte	0x27b
 1642 0287 12       		.uleb128 0x12
 1643 0288 713000   		.ascii	"q0\000"
 1644 028b 08       		.byte	0x8
 1645 028c 1B       		.byte	0x1b
 1646 028d 82020000 		.4byte	0x282
 1647 0291 12       		.uleb128 0x12
 1648 0292 713100   		.ascii	"q1\000"
 1649 0295 08       		.byte	0x8
 1650 0296 1B       		.byte	0x1b
 1651 0297 82020000 		.4byte	0x282
 1652 029b 12       		.uleb128 0x12
ARM GAS  /tmp/ccwtW74c.s 			page 56


 1653 029c 713200   		.ascii	"q2\000"
 1654 029f 08       		.byte	0x8
 1655 02a0 1B       		.byte	0x1b
 1656 02a1 82020000 		.4byte	0x282
 1657 02a5 12       		.uleb128 0x12
 1658 02a6 713300   		.ascii	"q3\000"
 1659 02a9 08       		.byte	0x8
 1660 02aa 1B       		.byte	0x1b
 1661 02ab 82020000 		.4byte	0x282
 1662 02af 13       		.uleb128 0x13
 1663 02b0 82020000 		.4byte	0x282
 1664 02b4 BF020000 		.4byte	0x2bf
 1665 02b8 14       		.uleb128 0x14
 1666 02b9 ED000000 		.4byte	0xed
 1667 02bd 02       		.byte	0x2
 1668 02be 00       		.byte	0
 1669 02bf 06       		.uleb128 0x6
 1670 02c0 AF020000 		.4byte	0x2af
 1671 02c4 12       		.uleb128 0x12
 1672 02c5 72707900 		.ascii	"rpy\000"
 1673 02c9 08       		.byte	0x8
 1674 02ca 1C       		.byte	0x1c
 1675 02cb BF020000 		.4byte	0x2bf
 1676 02cf 08       		.uleb128 0x8
 1677 02d0 A8010000 		.4byte	.LASF47
 1678 02d4 08       		.byte	0x8
 1679 02d5 1C       		.byte	0x1c
 1680 02d6 BF020000 		.4byte	0x2bf
 1681 02da 08       		.uleb128 0x8
 1682 02db 9D0A0000 		.4byte	.LASF48
 1683 02df 08       		.byte	0x8
 1684 02e0 1D       		.byte	0x1d
 1685 02e1 7B020000 		.4byte	0x27b
 1686 02e5 08       		.uleb128 0x8
 1687 02e6 970A0000 		.4byte	.LASF49
 1688 02ea 08       		.byte	0x8
 1689 02eb 1D       		.byte	0x1d
 1690 02ec 7B020000 		.4byte	0x27b
 1691 02f0 12       		.uleb128 0x12
 1692 02f1 79617700 		.ascii	"yaw\000"
 1693 02f5 08       		.byte	0x8
 1694 02f6 1D       		.byte	0x1d
 1695 02f7 7B020000 		.4byte	0x27b
 1696 02fb 08       		.uleb128 0x8
 1697 02fc A2020000 		.4byte	.LASF50
 1698 0300 09       		.byte	0x9
 1699 0301 0A       		.byte	0xa
 1700 0302 C2000000 		.4byte	0xc2
 1701 0306 08       		.uleb128 0x8
 1702 0307 01030000 		.4byte	.LASF51
 1703 030b 09       		.byte	0x9
 1704 030c 0B       		.byte	0xb
 1705 030d C2000000 		.4byte	0xc2
 1706 0311 08       		.uleb128 0x8
 1707 0312 97090000 		.4byte	.LASF52
 1708 0316 0A       		.byte	0xa
 1709 0317 07       		.byte	0x7
ARM GAS  /tmp/ccwtW74c.s 			page 57


 1710 0318 B7000000 		.4byte	0xb7
 1711 031c 08       		.uleb128 0x8
 1712 031d 9E090000 		.4byte	.LASF53
 1713 0321 0A       		.byte	0xa
 1714 0322 07       		.byte	0x7
 1715 0323 B7000000 		.4byte	0xb7
 1716 0327 08       		.uleb128 0x8
 1717 0328 A5090000 		.4byte	.LASF54
 1718 032c 0A       		.byte	0xa
 1719 032d 07       		.byte	0x7
 1720 032e B7000000 		.4byte	0xb7
 1721 0332 08       		.uleb128 0x8
 1722 0333 F8070000 		.4byte	.LASF55
 1723 0337 0A       		.byte	0xa
 1724 0338 08       		.byte	0x8
 1725 0339 B7000000 		.4byte	0xb7
 1726 033d 08       		.uleb128 0x8
 1727 033e FE070000 		.4byte	.LASF56
 1728 0342 0A       		.byte	0xa
 1729 0343 08       		.byte	0x8
 1730 0344 B7000000 		.4byte	0xb7
 1731 0348 08       		.uleb128 0x8
 1732 0349 04080000 		.4byte	.LASF57
 1733 034d 0A       		.byte	0xa
 1734 034e 08       		.byte	0x8
 1735 034f B7000000 		.4byte	0xb7
 1736 0353 08       		.uleb128 0x8
 1737 0354 3F0B0000 		.4byte	.LASF58
 1738 0358 0A       		.byte	0xa
 1739 0359 09       		.byte	0x9
 1740 035a 7B020000 		.4byte	0x27b
 1741 035e 08       		.uleb128 0x8
 1742 035f D4000000 		.4byte	.LASF59
 1743 0363 0A       		.byte	0xa
 1744 0364 09       		.byte	0x9
 1745 0365 7B020000 		.4byte	0x27b
 1746 0369 08       		.uleb128 0x8
 1747 036a 6D060000 		.4byte	.LASF60
 1748 036e 0A       		.byte	0xa
 1749 036f 09       		.byte	0x9
 1750 0370 7B020000 		.4byte	0x27b
 1751 0374 08       		.uleb128 0x8
 1752 0375 B5040000 		.4byte	.LASF61
 1753 0379 0A       		.byte	0xa
 1754 037a 0A       		.byte	0xa
 1755 037b 7B020000 		.4byte	0x27b
 1756 037f 08       		.uleb128 0x8
 1757 0380 87050000 		.4byte	.LASF62
 1758 0384 0A       		.byte	0xa
 1759 0385 0A       		.byte	0xa
 1760 0386 7B020000 		.4byte	0x27b
 1761 038a 08       		.uleb128 0x8
 1762 038b 71000000 		.4byte	.LASF63
 1763 038f 0A       		.byte	0xa
 1764 0390 0B       		.byte	0xb
 1765 0391 7B020000 		.4byte	0x27b
 1766 0395 08       		.uleb128 0x8
ARM GAS  /tmp/ccwtW74c.s 			page 58


 1767 0396 F50A0000 		.4byte	.LASF64
 1768 039a 0A       		.byte	0xa
 1769 039b 0B       		.byte	0xb
 1770 039c 7B020000 		.4byte	0x27b
 1771 03a0 08       		.uleb128 0x8
 1772 03a1 50070000 		.4byte	.LASF65
 1773 03a5 0A       		.byte	0xa
 1774 03a6 0B       		.byte	0xb
 1775 03a7 7B020000 		.4byte	0x27b
 1776 03ab 08       		.uleb128 0x8
 1777 03ac 51020000 		.4byte	.LASF66
 1778 03b0 0A       		.byte	0xa
 1779 03b1 0C       		.byte	0xc
 1780 03b2 7B020000 		.4byte	0x27b
 1781 03b6 12       		.uleb128 0x12
 1782 03b7 647400   		.ascii	"dt\000"
 1783 03ba 0A       		.byte	0xa
 1784 03bb 0D       		.byte	0xd
 1785 03bc 7B020000 		.4byte	0x27b
 1786 03c0 08       		.uleb128 0x8
 1787 03c1 CE0A0000 		.4byte	.LASF67
 1788 03c5 0A       		.byte	0xa
 1789 03c6 0D       		.byte	0xd
 1790 03c7 7B020000 		.4byte	0x27b
 1791 03cb 08       		.uleb128 0x8
 1792 03cc BE010000 		.4byte	.LASF68
 1793 03d0 0A       		.byte	0xa
 1794 03d1 0E       		.byte	0xe
 1795 03d2 A2000000 		.4byte	0xa2
 1796 03d6 13       		.uleb128 0x13
 1797 03d7 A2000000 		.4byte	0xa2
 1798 03db E6030000 		.4byte	0x3e6
 1799 03df 14       		.uleb128 0x14
 1800 03e0 ED000000 		.4byte	0xed
 1801 03e4 13       		.byte	0x13
 1802 03e5 00       		.byte	0
 1803 03e6 08       		.uleb128 0x8
 1804 03e7 6E050000 		.4byte	.LASF69
 1805 03eb 0A       		.byte	0xa
 1806 03ec 0E       		.byte	0xe
 1807 03ed D6030000 		.4byte	0x3d6
 1808 03f1 08       		.uleb128 0x8
 1809 03f2 BE070000 		.4byte	.LASF70
 1810 03f6 0A       		.byte	0xa
 1811 03f7 0E       		.byte	0xe
 1812 03f8 D6030000 		.4byte	0x3d6
 1813 03fc 02       		.uleb128 0x2
 1814 03fd 08       		.byte	0x8
 1815 03fe 04       		.byte	0x4
 1816 03ff B2070000 		.4byte	.LASF71
 1817 0403 03       		.uleb128 0x3
 1818 0404 7D040000 		.4byte	.LASF72
 1819 0408 0B       		.byte	0xb
 1820 0409 07       		.byte	0x7
 1821 040a 94000000 		.4byte	0x94
 1822 040e 03       		.uleb128 0x3
 1823 040f 6E0A0000 		.4byte	.LASF73
ARM GAS  /tmp/ccwtW74c.s 			page 59


 1824 0413 0C       		.byte	0xc
 1825 0414 2C       		.byte	0x2c
 1826 0415 6D000000 		.4byte	0x6d
 1827 0419 03       		.uleb128 0x3
 1828 041a E0070000 		.4byte	.LASF74
 1829 041e 0C       		.byte	0xc
 1830 041f 72       		.byte	0x72
 1831 0420 6D000000 		.4byte	0x6d
 1832 0424 0C       		.uleb128 0xc
 1833 0425 01090000 		.4byte	.LASF75
 1834 0429 0D       		.byte	0xd
 1835 042a 6501     		.2byte	0x165
 1836 042c 9B000000 		.4byte	0x9b
 1837 0430 15       		.uleb128 0x15
 1838 0431 04       		.byte	0x4
 1839 0432 0C       		.byte	0xc
 1840 0433 A6       		.byte	0xa6
 1841 0434 4F040000 		.4byte	0x44f
 1842 0438 16       		.uleb128 0x16
 1843 0439 2C010000 		.4byte	.LASF76
 1844 043d 0C       		.byte	0xc
 1845 043e A8       		.byte	0xa8
 1846 043f 24040000 		.4byte	0x424
 1847 0443 16       		.uleb128 0x16
 1848 0444 E8070000 		.4byte	.LASF77
 1849 0448 0C       		.byte	0xc
 1850 0449 A9       		.byte	0xa9
 1851 044a 4F040000 		.4byte	0x44f
 1852 044e 00       		.byte	0
 1853 044f 13       		.uleb128 0x13
 1854 0450 37000000 		.4byte	0x37
 1855 0454 5F040000 		.4byte	0x45f
 1856 0458 14       		.uleb128 0x14
 1857 0459 ED000000 		.4byte	0xed
 1858 045d 03       		.byte	0x3
 1859 045e 00       		.byte	0
 1860 045f 10       		.uleb128 0x10
 1861 0460 08       		.byte	0x8
 1862 0461 0C       		.byte	0xc
 1863 0462 A3       		.byte	0xa3
 1864 0463 80040000 		.4byte	0x480
 1865 0467 11       		.uleb128 0x11
 1866 0468 72070000 		.4byte	.LASF78
 1867 046c 0C       		.byte	0xc
 1868 046d A5       		.byte	0xa5
 1869 046e 94000000 		.4byte	0x94
 1870 0472 00       		.byte	0
 1871 0473 11       		.uleb128 0x11
 1872 0474 09000000 		.4byte	.LASF79
 1873 0478 0C       		.byte	0xc
 1874 0479 AA       		.byte	0xaa
 1875 047a 30040000 		.4byte	0x430
 1876 047e 04       		.byte	0x4
 1877 047f 00       		.byte	0
 1878 0480 03       		.uleb128 0x3
 1879 0481 F1080000 		.4byte	.LASF80
 1880 0485 0C       		.byte	0xc
ARM GAS  /tmp/ccwtW74c.s 			page 60


 1881 0486 AB       		.byte	0xab
 1882 0487 5F040000 		.4byte	0x45f
 1883 048b 03       		.uleb128 0x3
 1884 048c D1080000 		.4byte	.LASF81
 1885 0490 0C       		.byte	0xc
 1886 0491 AF       		.byte	0xaf
 1887 0492 03040000 		.4byte	0x403
 1888 0496 17       		.uleb128 0x17
 1889 0497 04       		.byte	0x4
 1890 0498 18       		.uleb128 0x18
 1891 0499 04       		.byte	0x4
 1892 049a 9E040000 		.4byte	0x49e
 1893 049e 02       		.uleb128 0x2
 1894 049f 01       		.byte	0x1
 1895 04a0 08       		.byte	0x8
 1896 04a1 DF020000 		.4byte	.LASF82
 1897 04a5 05       		.uleb128 0x5
 1898 04a6 9E040000 		.4byte	0x49e
 1899 04aa 03       		.uleb128 0x3
 1900 04ab 470A0000 		.4byte	.LASF83
 1901 04af 0E       		.byte	0xe
 1902 04b0 16       		.byte	0x16
 1903 04b1 7F000000 		.4byte	0x7f
 1904 04b5 19       		.uleb128 0x19
 1905 04b6 03050000 		.4byte	.LASF88
 1906 04ba 18       		.byte	0x18
 1907 04bb 0E       		.byte	0xe
 1908 04bc 2D       		.byte	0x2d
 1909 04bd 08050000 		.4byte	0x508
 1910 04c1 11       		.uleb128 0x11
 1911 04c2 08090000 		.4byte	.LASF84
 1912 04c6 0E       		.byte	0xe
 1913 04c7 2F       		.byte	0x2f
 1914 04c8 08050000 		.4byte	0x508
 1915 04cc 00       		.byte	0
 1916 04cd 1A       		.uleb128 0x1a
 1917 04ce 5F6B00   		.ascii	"_k\000"
 1918 04d1 0E       		.byte	0xe
 1919 04d2 30       		.byte	0x30
 1920 04d3 94000000 		.4byte	0x94
 1921 04d7 04       		.byte	0x4
 1922 04d8 11       		.uleb128 0x11
 1923 04d9 0B050000 		.4byte	.LASF85
 1924 04dd 0E       		.byte	0xe
 1925 04de 30       		.byte	0x30
 1926 04df 94000000 		.4byte	0x94
 1927 04e3 08       		.byte	0x8
 1928 04e4 11       		.uleb128 0x11
 1929 04e5 23060000 		.4byte	.LASF86
 1930 04e9 0E       		.byte	0xe
 1931 04ea 30       		.byte	0x30
 1932 04eb 94000000 		.4byte	0x94
 1933 04ef 0C       		.byte	0xc
 1934 04f0 11       		.uleb128 0x11
 1935 04f1 BC030000 		.4byte	.LASF87
 1936 04f5 0E       		.byte	0xe
 1937 04f6 30       		.byte	0x30
ARM GAS  /tmp/ccwtW74c.s 			page 61


 1938 04f7 94000000 		.4byte	0x94
 1939 04fb 10       		.byte	0x10
 1940 04fc 1A       		.uleb128 0x1a
 1941 04fd 5F7800   		.ascii	"_x\000"
 1942 0500 0E       		.byte	0xe
 1943 0501 31       		.byte	0x31
 1944 0502 0E050000 		.4byte	0x50e
 1945 0506 14       		.byte	0x14
 1946 0507 00       		.byte	0
 1947 0508 18       		.uleb128 0x18
 1948 0509 04       		.byte	0x4
 1949 050a B5040000 		.4byte	0x4b5
 1950 050e 13       		.uleb128 0x13
 1951 050f AA040000 		.4byte	0x4aa
 1952 0513 1E050000 		.4byte	0x51e
 1953 0517 14       		.uleb128 0x14
 1954 0518 ED000000 		.4byte	0xed
 1955 051c 00       		.byte	0
 1956 051d 00       		.byte	0
 1957 051e 19       		.uleb128 0x19
 1958 051f 84000000 		.4byte	.LASF89
 1959 0523 24       		.byte	0x24
 1960 0524 0E       		.byte	0xe
 1961 0525 35       		.byte	0x35
 1962 0526 97050000 		.4byte	0x597
 1963 052a 11       		.uleb128 0x11
 1964 052b A0000000 		.4byte	.LASF90
 1965 052f 0E       		.byte	0xe
 1966 0530 37       		.byte	0x37
 1967 0531 94000000 		.4byte	0x94
 1968 0535 00       		.byte	0
 1969 0536 11       		.uleb128 0x11
 1970 0537 EC0A0000 		.4byte	.LASF91
 1971 053b 0E       		.byte	0xe
 1972 053c 38       		.byte	0x38
 1973 053d 94000000 		.4byte	0x94
 1974 0541 04       		.byte	0x4
 1975 0542 11       		.uleb128 0x11
 1976 0543 8D0A0000 		.4byte	.LASF92
 1977 0547 0E       		.byte	0xe
 1978 0548 39       		.byte	0x39
 1979 0549 94000000 		.4byte	0x94
 1980 054d 08       		.byte	0x8
 1981 054e 11       		.uleb128 0x11
 1982 054f 02070000 		.4byte	.LASF93
 1983 0553 0E       		.byte	0xe
 1984 0554 3A       		.byte	0x3a
 1985 0555 94000000 		.4byte	0x94
 1986 0559 0C       		.byte	0xc
 1987 055a 11       		.uleb128 0x11
 1988 055b DE010000 		.4byte	.LASF94
 1989 055f 0E       		.byte	0xe
 1990 0560 3B       		.byte	0x3b
 1991 0561 94000000 		.4byte	0x94
 1992 0565 10       		.byte	0x10
 1993 0566 11       		.uleb128 0x11
 1994 0567 D8090000 		.4byte	.LASF95
ARM GAS  /tmp/ccwtW74c.s 			page 62


 1995 056b 0E       		.byte	0xe
 1996 056c 3C       		.byte	0x3c
 1997 056d 94000000 		.4byte	0x94
 1998 0571 14       		.byte	0x14
 1999 0572 11       		.uleb128 0x11
 2000 0573 97070000 		.4byte	.LASF96
 2001 0577 0E       		.byte	0xe
 2002 0578 3D       		.byte	0x3d
 2003 0579 94000000 		.4byte	0x94
 2004 057d 18       		.byte	0x18
 2005 057e 11       		.uleb128 0x11
 2006 057f C7020000 		.4byte	.LASF97
 2007 0583 0E       		.byte	0xe
 2008 0584 3E       		.byte	0x3e
 2009 0585 94000000 		.4byte	0x94
 2010 0589 1C       		.byte	0x1c
 2011 058a 11       		.uleb128 0x11
 2012 058b DB0A0000 		.4byte	.LASF98
 2013 058f 0E       		.byte	0xe
 2014 0590 3F       		.byte	0x3f
 2015 0591 94000000 		.4byte	0x94
 2016 0595 20       		.byte	0x20
 2017 0596 00       		.byte	0
 2018 0597 1B       		.uleb128 0x1b
 2019 0598 63010000 		.4byte	.LASF99
 2020 059c 0801     		.2byte	0x108
 2021 059e 0E       		.byte	0xe
 2022 059f 48       		.byte	0x48
 2023 05a0 D7050000 		.4byte	0x5d7
 2024 05a4 11       		.uleb128 0x11
 2025 05a5 D30A0000 		.4byte	.LASF100
 2026 05a9 0E       		.byte	0xe
 2027 05aa 49       		.byte	0x49
 2028 05ab D7050000 		.4byte	0x5d7
 2029 05af 00       		.byte	0
 2030 05b0 11       		.uleb128 0x11
 2031 05b1 50080000 		.4byte	.LASF101
 2032 05b5 0E       		.byte	0xe
 2033 05b6 4A       		.byte	0x4a
 2034 05b7 D7050000 		.4byte	0x5d7
 2035 05bb 80       		.byte	0x80
 2036 05bc 1C       		.uleb128 0x1c
 2037 05bd BE090000 		.4byte	.LASF102
 2038 05c1 0E       		.byte	0xe
 2039 05c2 4C       		.byte	0x4c
 2040 05c3 AA040000 		.4byte	0x4aa
 2041 05c7 0001     		.2byte	0x100
 2042 05c9 1C       		.uleb128 0x1c
 2043 05ca 290A0000 		.4byte	.LASF103
 2044 05ce 0E       		.byte	0xe
 2045 05cf 4F       		.byte	0x4f
 2046 05d0 AA040000 		.4byte	0x4aa
 2047 05d4 0401     		.2byte	0x104
 2048 05d6 00       		.byte	0
 2049 05d7 13       		.uleb128 0x13
 2050 05d8 96040000 		.4byte	0x496
 2051 05dc E7050000 		.4byte	0x5e7
ARM GAS  /tmp/ccwtW74c.s 			page 63


 2052 05e0 14       		.uleb128 0x14
 2053 05e1 ED000000 		.4byte	0xed
 2054 05e5 1F       		.byte	0x1f
 2055 05e6 00       		.byte	0
 2056 05e7 1B       		.uleb128 0x1b
 2057 05e8 5B070000 		.4byte	.LASF104
 2058 05ec 9001     		.2byte	0x190
 2059 05ee 0E       		.byte	0xe
 2060 05ef 5B       		.byte	0x5b
 2061 05f0 25060000 		.4byte	0x625
 2062 05f4 11       		.uleb128 0x11
 2063 05f5 08090000 		.4byte	.LASF84
 2064 05f9 0E       		.byte	0xe
 2065 05fa 5C       		.byte	0x5c
 2066 05fb 25060000 		.4byte	0x625
 2067 05ff 00       		.byte	0
 2068 0600 11       		.uleb128 0x11
 2069 0601 F7090000 		.4byte	.LASF105
 2070 0605 0E       		.byte	0xe
 2071 0606 5D       		.byte	0x5d
 2072 0607 94000000 		.4byte	0x94
 2073 060b 04       		.byte	0x4
 2074 060c 11       		.uleb128 0x11
 2075 060d F5020000 		.4byte	.LASF106
 2076 0611 0E       		.byte	0xe
 2077 0612 5F       		.byte	0x5f
 2078 0613 2B060000 		.4byte	0x62b
 2079 0617 08       		.byte	0x8
 2080 0618 11       		.uleb128 0x11
 2081 0619 63010000 		.4byte	.LASF99
 2082 061d 0E       		.byte	0xe
 2083 061e 60       		.byte	0x60
 2084 061f 97050000 		.4byte	0x597
 2085 0623 88       		.byte	0x88
 2086 0624 00       		.byte	0
 2087 0625 18       		.uleb128 0x18
 2088 0626 04       		.byte	0x4
 2089 0627 E7050000 		.4byte	0x5e7
 2090 062b 13       		.uleb128 0x13
 2091 062c 3B060000 		.4byte	0x63b
 2092 0630 3B060000 		.4byte	0x63b
 2093 0634 14       		.uleb128 0x14
 2094 0635 ED000000 		.4byte	0xed
 2095 0639 1F       		.byte	0x1f
 2096 063a 00       		.byte	0
 2097 063b 18       		.uleb128 0x18
 2098 063c 04       		.byte	0x4
 2099 063d 41060000 		.4byte	0x641
 2100 0641 1D       		.uleb128 0x1d
 2101 0642 19       		.uleb128 0x19
 2102 0643 220A0000 		.4byte	.LASF107
 2103 0647 08       		.byte	0x8
 2104 0648 0E       		.byte	0xe
 2105 0649 73       		.byte	0x73
 2106 064a 67060000 		.4byte	0x667
 2107 064e 11       		.uleb128 0x11
 2108 064f A7080000 		.4byte	.LASF108
ARM GAS  /tmp/ccwtW74c.s 			page 64


 2109 0653 0E       		.byte	0xe
 2110 0654 74       		.byte	0x74
 2111 0655 67060000 		.4byte	0x667
 2112 0659 00       		.byte	0
 2113 065a 11       		.uleb128 0x11
 2114 065b C2000000 		.4byte	.LASF109
 2115 065f 0E       		.byte	0xe
 2116 0660 75       		.byte	0x75
 2117 0661 94000000 		.4byte	0x94
 2118 0665 04       		.byte	0x4
 2119 0666 00       		.byte	0
 2120 0667 18       		.uleb128 0x18
 2121 0668 04       		.byte	0x4
 2122 0669 37000000 		.4byte	0x37
 2123 066d 19       		.uleb128 0x19
 2124 066e 44040000 		.4byte	.LASF110
 2125 0672 68       		.byte	0x68
 2126 0673 0E       		.byte	0xe
 2127 0674 B3       		.byte	0xb3
 2128 0675 97070000 		.4byte	0x797
 2129 0679 1A       		.uleb128 0x1a
 2130 067a 5F7000   		.ascii	"_p\000"
 2131 067d 0E       		.byte	0xe
 2132 067e B4       		.byte	0xb4
 2133 067f 67060000 		.4byte	0x667
 2134 0683 00       		.byte	0
 2135 0684 1A       		.uleb128 0x1a
 2136 0685 5F7200   		.ascii	"_r\000"
 2137 0688 0E       		.byte	0xe
 2138 0689 B5       		.byte	0xb5
 2139 068a 94000000 		.4byte	0x94
 2140 068e 04       		.byte	0x4
 2141 068f 1A       		.uleb128 0x1a
 2142 0690 5F7700   		.ascii	"_w\000"
 2143 0693 0E       		.byte	0xe
 2144 0694 B6       		.byte	0xb6
 2145 0695 94000000 		.4byte	0x94
 2146 0699 08       		.byte	0x8
 2147 069a 11       		.uleb128 0x11
 2148 069b CB030000 		.4byte	.LASF111
 2149 069f 0E       		.byte	0xe
 2150 06a0 B7       		.byte	0xb7
 2151 06a1 49000000 		.4byte	0x49
 2152 06a5 0C       		.byte	0xc
 2153 06a6 11       		.uleb128 0x11
 2154 06a7 5D010000 		.4byte	.LASF112
 2155 06ab 0E       		.byte	0xe
 2156 06ac B8       		.byte	0xb8
 2157 06ad 49000000 		.4byte	0x49
 2158 06b1 0E       		.byte	0xe
 2159 06b2 1A       		.uleb128 0x1a
 2160 06b3 5F626600 		.ascii	"_bf\000"
 2161 06b7 0E       		.byte	0xe
 2162 06b8 B9       		.byte	0xb9
 2163 06b9 42060000 		.4byte	0x642
 2164 06bd 10       		.byte	0x10
 2165 06be 11       		.uleb128 0x11
ARM GAS  /tmp/ccwtW74c.s 			page 65


 2166 06bf E9090000 		.4byte	.LASF113
 2167 06c3 0E       		.byte	0xe
 2168 06c4 BA       		.byte	0xba
 2169 06c5 94000000 		.4byte	0x94
 2170 06c9 18       		.byte	0x18
 2171 06ca 11       		.uleb128 0x11
 2172 06cb B4030000 		.4byte	.LASF114
 2173 06cf 0E       		.byte	0xe
 2174 06d0 C1       		.byte	0xc1
 2175 06d1 96040000 		.4byte	0x496
 2176 06d5 1C       		.byte	0x1c
 2177 06d6 11       		.uleb128 0x11
 2178 06d7 24000000 		.4byte	.LASF115
 2179 06db 0E       		.byte	0xe
 2180 06dc C3       		.byte	0xc3
 2181 06dd F2080000 		.4byte	0x8f2
 2182 06e1 20       		.byte	0x20
 2183 06e2 11       		.uleb128 0x11
 2184 06e3 2A000000 		.4byte	.LASF116
 2185 06e7 0E       		.byte	0xe
 2186 06e8 C5       		.byte	0xc5
 2187 06e9 21090000 		.4byte	0x921
 2188 06ed 24       		.byte	0x24
 2189 06ee 11       		.uleb128 0x11
 2190 06ef CE070000 		.4byte	.LASF117
 2191 06f3 0E       		.byte	0xe
 2192 06f4 C8       		.byte	0xc8
 2193 06f5 45090000 		.4byte	0x945
 2194 06f9 28       		.byte	0x28
 2195 06fa 11       		.uleb128 0x11
 2196 06fb FA020000 		.4byte	.LASF118
 2197 06ff 0E       		.byte	0xe
 2198 0700 C9       		.byte	0xc9
 2199 0701 5F090000 		.4byte	0x95f
 2200 0705 2C       		.byte	0x2c
 2201 0706 1A       		.uleb128 0x1a
 2202 0707 5F756200 		.ascii	"_ub\000"
 2203 070b 0E       		.byte	0xe
 2204 070c CC       		.byte	0xcc
 2205 070d 42060000 		.4byte	0x642
 2206 0711 30       		.byte	0x30
 2207 0712 1A       		.uleb128 0x1a
 2208 0713 5F757000 		.ascii	"_up\000"
 2209 0717 0E       		.byte	0xe
 2210 0718 CD       		.byte	0xcd
 2211 0719 67060000 		.4byte	0x667
 2212 071d 38       		.byte	0x38
 2213 071e 1A       		.uleb128 0x1a
 2214 071f 5F757200 		.ascii	"_ur\000"
 2215 0723 0E       		.byte	0xe
 2216 0724 CE       		.byte	0xce
 2217 0725 94000000 		.4byte	0x94
 2218 0729 3C       		.byte	0x3c
 2219 072a 11       		.uleb128 0x11
 2220 072b 11070000 		.4byte	.LASF119
 2221 072f 0E       		.byte	0xe
 2222 0730 D1       		.byte	0xd1
ARM GAS  /tmp/ccwtW74c.s 			page 66


 2223 0731 65090000 		.4byte	0x965
 2224 0735 40       		.byte	0x40
 2225 0736 11       		.uleb128 0x11
 2226 0737 9A000000 		.4byte	.LASF120
 2227 073b 0E       		.byte	0xe
 2228 073c D2       		.byte	0xd2
 2229 073d 75090000 		.4byte	0x975
 2230 0741 43       		.byte	0x43
 2231 0742 1A       		.uleb128 0x1a
 2232 0743 5F6C6200 		.ascii	"_lb\000"
 2233 0747 0E       		.byte	0xe
 2234 0748 D5       		.byte	0xd5
 2235 0749 42060000 		.4byte	0x642
 2236 074d 44       		.byte	0x44
 2237 074e 11       		.uleb128 0x11
 2238 074f 9E080000 		.4byte	.LASF121
 2239 0753 0E       		.byte	0xe
 2240 0754 D8       		.byte	0xd8
 2241 0755 94000000 		.4byte	0x94
 2242 0759 4C       		.byte	0x4c
 2243 075a 11       		.uleb128 0x11
 2244 075b EE030000 		.4byte	.LASF122
 2245 075f 0E       		.byte	0xe
 2246 0760 D9       		.byte	0xd9
 2247 0761 0E040000 		.4byte	0x40e
 2248 0765 50       		.byte	0x50
 2249 0766 11       		.uleb128 0x11
 2250 0767 29090000 		.4byte	.LASF123
 2251 076b 0E       		.byte	0xe
 2252 076c DC       		.byte	0xdc
 2253 076d B5070000 		.4byte	0x7b5
 2254 0771 54       		.byte	0x54
 2255 0772 11       		.uleb128 0x11
 2256 0773 C8000000 		.4byte	.LASF124
 2257 0777 0E       		.byte	0xe
 2258 0778 E0       		.byte	0xe0
 2259 0779 8B040000 		.4byte	0x48b
 2260 077d 58       		.byte	0x58
 2261 077e 11       		.uleb128 0x11
 2262 077f 3C070000 		.4byte	.LASF125
 2263 0783 0E       		.byte	0xe
 2264 0784 E2       		.byte	0xe2
 2265 0785 80040000 		.4byte	0x480
 2266 0789 5C       		.byte	0x5c
 2267 078a 11       		.uleb128 0x11
 2268 078b 57040000 		.4byte	.LASF126
 2269 078f 0E       		.byte	0xe
 2270 0790 E3       		.byte	0xe3
 2271 0791 94000000 		.4byte	0x94
 2272 0795 64       		.byte	0x64
 2273 0796 00       		.byte	0
 2274 0797 1E       		.uleb128 0x1e
 2275 0798 94000000 		.4byte	0x94
 2276 079c B5070000 		.4byte	0x7b5
 2277 07a0 1F       		.uleb128 0x1f
 2278 07a1 B5070000 		.4byte	0x7b5
 2279 07a5 1F       		.uleb128 0x1f
ARM GAS  /tmp/ccwtW74c.s 			page 67


 2280 07a6 96040000 		.4byte	0x496
 2281 07aa 1F       		.uleb128 0x1f
 2282 07ab 98040000 		.4byte	0x498
 2283 07af 1F       		.uleb128 0x1f
 2284 07b0 94000000 		.4byte	0x94
 2285 07b4 00       		.byte	0
 2286 07b5 18       		.uleb128 0x18
 2287 07b6 04       		.byte	0x4
 2288 07b7 C0070000 		.4byte	0x7c0
 2289 07bb 05       		.uleb128 0x5
 2290 07bc B5070000 		.4byte	0x7b5
 2291 07c0 20       		.uleb128 0x20
 2292 07c1 AD020000 		.4byte	.LASF127
 2293 07c5 2804     		.2byte	0x428
 2294 07c7 0E       		.byte	0xe
 2295 07c8 3802     		.2byte	0x238
 2296 07ca F2080000 		.4byte	0x8f2
 2297 07ce 0F       		.uleb128 0xf
 2298 07cf 8F040000 		.4byte	.LASF128
 2299 07d3 0E       		.byte	0xe
 2300 07d4 3A02     		.2byte	0x23a
 2301 07d6 94000000 		.4byte	0x94
 2302 07da 00       		.byte	0
 2303 07db 0F       		.uleb128 0xf
 2304 07dc 4D030000 		.4byte	.LASF129
 2305 07e0 0E       		.byte	0xe
 2306 07e1 3F02     		.2byte	0x23f
 2307 07e3 CC090000 		.4byte	0x9cc
 2308 07e7 04       		.byte	0x4
 2309 07e8 0F       		.uleb128 0xf
 2310 07e9 6F080000 		.4byte	.LASF130
 2311 07ed 0E       		.byte	0xe
 2312 07ee 3F02     		.2byte	0x23f
 2313 07f0 CC090000 		.4byte	0x9cc
 2314 07f4 08       		.byte	0x8
 2315 07f5 0F       		.uleb128 0xf
 2316 07f6 17070000 		.4byte	.LASF131
 2317 07fa 0E       		.byte	0xe
 2318 07fb 3F02     		.2byte	0x23f
 2319 07fd CC090000 		.4byte	0x9cc
 2320 0801 0C       		.byte	0xc
 2321 0802 0F       		.uleb128 0xf
 2322 0803 F2090000 		.4byte	.LASF132
 2323 0807 0E       		.byte	0xe
 2324 0808 4102     		.2byte	0x241
 2325 080a 94000000 		.4byte	0x94
 2326 080e 10       		.byte	0x10
 2327 080f 0F       		.uleb128 0xf
 2328 0810 3F050000 		.4byte	.LASF133
 2329 0814 0E       		.byte	0xe
 2330 0815 4202     		.2byte	0x242
 2331 0817 AE0B0000 		.4byte	0xbae
 2332 081b 14       		.byte	0x14
 2333 081c 0F       		.uleb128 0xf
 2334 081d 0D020000 		.4byte	.LASF134
 2335 0821 0E       		.byte	0xe
 2336 0822 4402     		.2byte	0x244
ARM GAS  /tmp/ccwtW74c.s 			page 68


 2337 0824 94000000 		.4byte	0x94
 2338 0828 30       		.byte	0x30
 2339 0829 0F       		.uleb128 0xf
 2340 082a D8050000 		.4byte	.LASF135
 2341 082e 0E       		.byte	0xe
 2342 082f 4502     		.2byte	0x245
 2343 0831 16090000 		.4byte	0x916
 2344 0835 34       		.byte	0x34
 2345 0836 0F       		.uleb128 0xf
 2346 0837 4C040000 		.4byte	.LASF136
 2347 083b 0E       		.byte	0xe
 2348 083c 4702     		.2byte	0x247
 2349 083e 94000000 		.4byte	0x94
 2350 0842 38       		.byte	0x38
 2351 0843 0F       		.uleb128 0xf
 2352 0844 13050000 		.4byte	.LASF137
 2353 0848 0E       		.byte	0xe
 2354 0849 4902     		.2byte	0x249
 2355 084b C90B0000 		.4byte	0xbc9
 2356 084f 3C       		.byte	0x3c
 2357 0850 0F       		.uleb128 0xf
 2358 0851 660A0000 		.4byte	.LASF138
 2359 0855 0E       		.byte	0xe
 2360 0856 4C02     		.2byte	0x24c
 2361 0858 08050000 		.4byte	0x508
 2362 085c 40       		.byte	0x40
 2363 085d 0F       		.uleb128 0xf
 2364 085e 9E010000 		.4byte	.LASF139
 2365 0862 0E       		.byte	0xe
 2366 0863 4D02     		.2byte	0x24d
 2367 0865 94000000 		.4byte	0x94
 2368 0869 44       		.byte	0x44
 2369 086a 0F       		.uleb128 0xf
 2370 086b 16040000 		.4byte	.LASF140
 2371 086f 0E       		.byte	0xe
 2372 0870 4E02     		.2byte	0x24e
 2373 0872 08050000 		.4byte	0x508
 2374 0876 48       		.byte	0x48
 2375 0877 0F       		.uleb128 0xf
 2376 0878 F5050000 		.4byte	.LASF141
 2377 087c 0E       		.byte	0xe
 2378 087d 4F02     		.2byte	0x24f
 2379 087f CF0B0000 		.4byte	0xbcf
 2380 0883 4C       		.byte	0x4c
 2381 0884 0F       		.uleb128 0xf
 2382 0885 46000000 		.4byte	.LASF142
 2383 0889 0E       		.byte	0xe
 2384 088a 5202     		.2byte	0x252
 2385 088c 94000000 		.4byte	0x94
 2386 0890 50       		.byte	0x50
 2387 0891 0F       		.uleb128 0xf
 2388 0892 F6030000 		.4byte	.LASF143
 2389 0896 0E       		.byte	0xe
 2390 0897 5302     		.2byte	0x253
 2391 0899 98040000 		.4byte	0x498
 2392 089d 54       		.byte	0x54
 2393 089e 0F       		.uleb128 0xf
ARM GAS  /tmp/ccwtW74c.s 			page 69


 2394 089f 0C070000 		.4byte	.LASF144
 2395 08a3 0E       		.byte	0xe
 2396 08a4 7602     		.2byte	0x276
 2397 08a6 8C0B0000 		.4byte	0xb8c
 2398 08aa 58       		.byte	0x58
 2399 08ab 21       		.uleb128 0x21
 2400 08ac 5B070000 		.4byte	.LASF104
 2401 08b0 0E       		.byte	0xe
 2402 08b1 7A02     		.2byte	0x27a
 2403 08b3 25060000 		.4byte	0x625
 2404 08b7 4801     		.2byte	0x148
 2405 08b9 21       		.uleb128 0x21
 2406 08ba 1D050000 		.4byte	.LASF145
 2407 08be 0E       		.byte	0xe
 2408 08bf 7B02     		.2byte	0x27b
 2409 08c1 E7050000 		.4byte	0x5e7
 2410 08c5 4C01     		.2byte	0x14c
 2411 08c7 21       		.uleb128 0x21
 2412 08c8 C1030000 		.4byte	.LASF146
 2413 08cc 0E       		.byte	0xe
 2414 08cd 7F02     		.2byte	0x27f
 2415 08cf E00B0000 		.4byte	0xbe0
 2416 08d3 DC02     		.2byte	0x2dc
 2417 08d5 21       		.uleb128 0x21
 2418 08d6 7F050000 		.4byte	.LASF147
 2419 08da 0E       		.byte	0xe
 2420 08db 8402     		.2byte	0x284
 2421 08dd 91090000 		.4byte	0x991
 2422 08e1 E002     		.2byte	0x2e0
 2423 08e3 21       		.uleb128 0x21
 2424 08e4 1F000000 		.4byte	.LASF148
 2425 08e8 0E       		.byte	0xe
 2426 08e9 8502     		.2byte	0x285
 2427 08eb EC0B0000 		.4byte	0xbec
 2428 08ef EC02     		.2byte	0x2ec
 2429 08f1 00       		.byte	0
 2430 08f2 18       		.uleb128 0x18
 2431 08f3 04       		.byte	0x4
 2432 08f4 97070000 		.4byte	0x797
 2433 08f8 1E       		.uleb128 0x1e
 2434 08f9 94000000 		.4byte	0x94
 2435 08fd 16090000 		.4byte	0x916
 2436 0901 1F       		.uleb128 0x1f
 2437 0902 B5070000 		.4byte	0x7b5
 2438 0906 1F       		.uleb128 0x1f
 2439 0907 96040000 		.4byte	0x496
 2440 090b 1F       		.uleb128 0x1f
 2441 090c 16090000 		.4byte	0x916
 2442 0910 1F       		.uleb128 0x1f
 2443 0911 94000000 		.4byte	0x94
 2444 0915 00       		.byte	0
 2445 0916 18       		.uleb128 0x18
 2446 0917 04       		.byte	0x4
 2447 0918 A5040000 		.4byte	0x4a5
 2448 091c 05       		.uleb128 0x5
 2449 091d 16090000 		.4byte	0x916
 2450 0921 18       		.uleb128 0x18
ARM GAS  /tmp/ccwtW74c.s 			page 70


 2451 0922 04       		.byte	0x4
 2452 0923 F8080000 		.4byte	0x8f8
 2453 0927 1E       		.uleb128 0x1e
 2454 0928 19040000 		.4byte	0x419
 2455 092c 45090000 		.4byte	0x945
 2456 0930 1F       		.uleb128 0x1f
 2457 0931 B5070000 		.4byte	0x7b5
 2458 0935 1F       		.uleb128 0x1f
 2459 0936 96040000 		.4byte	0x496
 2460 093a 1F       		.uleb128 0x1f
 2461 093b 19040000 		.4byte	0x419
 2462 093f 1F       		.uleb128 0x1f
 2463 0940 94000000 		.4byte	0x94
 2464 0944 00       		.byte	0
 2465 0945 18       		.uleb128 0x18
 2466 0946 04       		.byte	0x4
 2467 0947 27090000 		.4byte	0x927
 2468 094b 1E       		.uleb128 0x1e
 2469 094c 94000000 		.4byte	0x94
 2470 0950 5F090000 		.4byte	0x95f
 2471 0954 1F       		.uleb128 0x1f
 2472 0955 B5070000 		.4byte	0x7b5
 2473 0959 1F       		.uleb128 0x1f
 2474 095a 96040000 		.4byte	0x496
 2475 095e 00       		.byte	0
 2476 095f 18       		.uleb128 0x18
 2477 0960 04       		.byte	0x4
 2478 0961 4B090000 		.4byte	0x94b
 2479 0965 13       		.uleb128 0x13
 2480 0966 37000000 		.4byte	0x37
 2481 096a 75090000 		.4byte	0x975
 2482 096e 14       		.uleb128 0x14
 2483 096f ED000000 		.4byte	0xed
 2484 0973 02       		.byte	0x2
 2485 0974 00       		.byte	0
 2486 0975 13       		.uleb128 0x13
 2487 0976 37000000 		.4byte	0x37
 2488 097a 85090000 		.4byte	0x985
 2489 097e 14       		.uleb128 0x14
 2490 097f ED000000 		.4byte	0xed
 2491 0983 00       		.byte	0
 2492 0984 00       		.byte	0
 2493 0985 0C       		.uleb128 0xc
 2494 0986 DA080000 		.4byte	.LASF149
 2495 098a 0E       		.byte	0xe
 2496 098b 1D01     		.2byte	0x11d
 2497 098d 6D060000 		.4byte	0x66d
 2498 0991 22       		.uleb128 0x22
 2499 0992 10060000 		.4byte	.LASF150
 2500 0996 0C       		.byte	0xc
 2501 0997 0E       		.byte	0xe
 2502 0998 2101     		.2byte	0x121
 2503 099a C6090000 		.4byte	0x9c6
 2504 099e 0F       		.uleb128 0xf
 2505 099f 08090000 		.4byte	.LASF84
 2506 09a3 0E       		.byte	0xe
 2507 09a4 2301     		.2byte	0x123
ARM GAS  /tmp/ccwtW74c.s 			page 71


 2508 09a6 C6090000 		.4byte	0x9c6
 2509 09aa 00       		.byte	0
 2510 09ab 0F       		.uleb128 0xf
 2511 09ac 78050000 		.4byte	.LASF151
 2512 09b0 0E       		.byte	0xe
 2513 09b1 2401     		.2byte	0x124
 2514 09b3 94000000 		.4byte	0x94
 2515 09b7 04       		.byte	0x4
 2516 09b8 0F       		.uleb128 0xf
 2517 09b9 FF050000 		.4byte	.LASF152
 2518 09bd 0E       		.byte	0xe
 2519 09be 2501     		.2byte	0x125
 2520 09c0 CC090000 		.4byte	0x9cc
 2521 09c4 08       		.byte	0x8
 2522 09c5 00       		.byte	0
 2523 09c6 18       		.uleb128 0x18
 2524 09c7 04       		.byte	0x4
 2525 09c8 91090000 		.4byte	0x991
 2526 09cc 18       		.uleb128 0x18
 2527 09cd 04       		.byte	0x4
 2528 09ce 85090000 		.4byte	0x985
 2529 09d2 22       		.uleb128 0x22
 2530 09d3 5C080000 		.4byte	.LASF153
 2531 09d7 0E       		.byte	0xe
 2532 09d8 0E       		.byte	0xe
 2533 09d9 3D01     		.2byte	0x13d
 2534 09db 070A0000 		.4byte	0xa07
 2535 09df 0F       		.uleb128 0xf
 2536 09e0 C8070000 		.4byte	.LASF154
 2537 09e4 0E       		.byte	0xe
 2538 09e5 3E01     		.2byte	0x13e
 2539 09e7 070A0000 		.4byte	0xa07
 2540 09eb 00       		.byte	0
 2541 09ec 0F       		.uleb128 0xf
 2542 09ed CE000000 		.4byte	.LASF155
 2543 09f1 0E       		.byte	0xe
 2544 09f2 3F01     		.2byte	0x13f
 2545 09f4 070A0000 		.4byte	0xa07
 2546 09f8 06       		.byte	0x6
 2547 09f9 0F       		.uleb128 0xf
 2548 09fa 750A0000 		.4byte	.LASF156
 2549 09fe 0E       		.byte	0xe
 2550 09ff 4001     		.2byte	0x140
 2551 0a01 5B000000 		.4byte	0x5b
 2552 0a05 0C       		.byte	0xc
 2553 0a06 00       		.byte	0
 2554 0a07 13       		.uleb128 0x13
 2555 0a08 5B000000 		.4byte	0x5b
 2556 0a0c 170A0000 		.4byte	0xa17
 2557 0a10 14       		.uleb128 0x14
 2558 0a11 ED000000 		.4byte	0xed
 2559 0a15 02       		.byte	0x2
 2560 0a16 00       		.byte	0
 2561 0a17 0D       		.uleb128 0xd
 2562 0a18 D0       		.byte	0xd0
 2563 0a19 0E       		.byte	0xe
 2564 0a1a 5702     		.2byte	0x257
ARM GAS  /tmp/ccwtW74c.s 			page 72


 2565 0a1c 180B0000 		.4byte	0xb18
 2566 0a20 0F       		.uleb128 0xf
 2567 0a21 38020000 		.4byte	.LASF157
 2568 0a25 0E       		.byte	0xe
 2569 0a26 5902     		.2byte	0x259
 2570 0a28 9B000000 		.4byte	0x9b
 2571 0a2c 00       		.byte	0
 2572 0a2d 0F       		.uleb128 0xf
 2573 0a2e B5080000 		.4byte	.LASF158
 2574 0a32 0E       		.byte	0xe
 2575 0a33 5A02     		.2byte	0x25a
 2576 0a35 98040000 		.4byte	0x498
 2577 0a39 04       		.byte	0x4
 2578 0a3a 0F       		.uleb128 0xf
 2579 0a3b 39000000 		.4byte	.LASF159
 2580 0a3f 0E       		.byte	0xe
 2581 0a40 5B02     		.2byte	0x25b
 2582 0a42 180B0000 		.4byte	0xb18
 2583 0a46 08       		.byte	0x8
 2584 0a47 0F       		.uleb128 0xf
 2585 0a48 AF010000 		.4byte	.LASF160
 2586 0a4c 0E       		.byte	0xe
 2587 0a4d 5C02     		.2byte	0x25c
 2588 0a4f 1E050000 		.4byte	0x51e
 2589 0a53 24       		.byte	0x24
 2590 0a54 0F       		.uleb128 0xf
 2591 0a55 A3050000 		.4byte	.LASF161
 2592 0a59 0E       		.byte	0xe
 2593 0a5a 5D02     		.2byte	0x25d
 2594 0a5c 94000000 		.4byte	0x94
 2595 0a60 48       		.byte	0x48
 2596 0a61 0F       		.uleb128 0xf
 2597 0a62 45070000 		.4byte	.LASF162
 2598 0a66 0E       		.byte	0xe
 2599 0a67 5E02     		.2byte	0x25e
 2600 0a69 8D000000 		.4byte	0x8d
 2601 0a6d 50       		.byte	0x50
 2602 0a6e 0F       		.uleb128 0xf
 2603 0a6f FC080000 		.4byte	.LASF163
 2604 0a73 0E       		.byte	0xe
 2605 0a74 5F02     		.2byte	0x25f
 2606 0a76 D2090000 		.4byte	0x9d2
 2607 0a7a 58       		.byte	0x58
 2608 0a7b 0F       		.uleb128 0xf
 2609 0a7c 71090000 		.4byte	.LASF164
 2610 0a80 0E       		.byte	0xe
 2611 0a81 6002     		.2byte	0x260
 2612 0a83 80040000 		.4byte	0x480
 2613 0a87 68       		.byte	0x68
 2614 0a88 0F       		.uleb128 0xf
 2615 0a89 12080000 		.4byte	.LASF165
 2616 0a8d 0E       		.byte	0xe
 2617 0a8e 6102     		.2byte	0x261
 2618 0a90 80040000 		.4byte	0x480
 2619 0a94 70       		.byte	0x70
 2620 0a95 0F       		.uleb128 0xf
 2621 0a96 2E070000 		.4byte	.LASF166
ARM GAS  /tmp/ccwtW74c.s 			page 73


 2622 0a9a 0E       		.byte	0xe
 2623 0a9b 6202     		.2byte	0x262
 2624 0a9d 80040000 		.4byte	0x480
 2625 0aa1 78       		.byte	0x78
 2626 0aa2 0F       		.uleb128 0xf
 2627 0aa3 B8000000 		.4byte	.LASF167
 2628 0aa7 0E       		.byte	0xe
 2629 0aa8 6302     		.2byte	0x263
 2630 0aaa 280B0000 		.4byte	0xb28
 2631 0aae 80       		.byte	0x80
 2632 0aaf 0F       		.uleb128 0xf
 2633 0ab0 96040000 		.4byte	.LASF168
 2634 0ab4 0E       		.byte	0xe
 2635 0ab5 6402     		.2byte	0x264
 2636 0ab7 380B0000 		.4byte	0xb38
 2637 0abb 88       		.byte	0x88
 2638 0abc 0F       		.uleb128 0xf
 2639 0abd 000B0000 		.4byte	.LASF169
 2640 0ac1 0E       		.byte	0xe
 2641 0ac2 6502     		.2byte	0x265
 2642 0ac4 94000000 		.4byte	0x94
 2643 0ac8 A0       		.byte	0xa0
 2644 0ac9 0F       		.uleb128 0xf
 2645 0aca 7B010000 		.4byte	.LASF170
 2646 0ace 0E       		.byte	0xe
 2647 0acf 6602     		.2byte	0x266
 2648 0ad1 80040000 		.4byte	0x480
 2649 0ad5 A4       		.byte	0xa4
 2650 0ad6 0F       		.uleb128 0xf
 2651 0ad7 C2080000 		.4byte	.LASF171
 2652 0adb 0E       		.byte	0xe
 2653 0adc 6702     		.2byte	0x267
 2654 0ade 80040000 		.4byte	0x480
 2655 0ae2 AC       		.byte	0xac
 2656 0ae3 0F       		.uleb128 0xf
 2657 0ae4 B30A0000 		.4byte	.LASF172
 2658 0ae8 0E       		.byte	0xe
 2659 0ae9 6802     		.2byte	0x268
 2660 0aeb 80040000 		.4byte	0x480
 2661 0aef B4       		.byte	0xb4
 2662 0af0 0F       		.uleb128 0xf
 2663 0af1 F3060000 		.4byte	.LASF173
 2664 0af5 0E       		.byte	0xe
 2665 0af6 6902     		.2byte	0x269
 2666 0af8 80040000 		.4byte	0x480
 2667 0afc BC       		.byte	0xbc
 2668 0afd 0F       		.uleb128 0xf
 2669 0afe 89000000 		.4byte	.LASF174
 2670 0b02 0E       		.byte	0xe
 2671 0b03 6A02     		.2byte	0x26a
 2672 0b05 80040000 		.4byte	0x480
 2673 0b09 C4       		.byte	0xc4
 2674 0b0a 0F       		.uleb128 0xf
 2675 0b0b A8060000 		.4byte	.LASF175
 2676 0b0f 0E       		.byte	0xe
 2677 0b10 6B02     		.2byte	0x26b
 2678 0b12 94000000 		.4byte	0x94
ARM GAS  /tmp/ccwtW74c.s 			page 74


 2679 0b16 CC       		.byte	0xcc
 2680 0b17 00       		.byte	0
 2681 0b18 13       		.uleb128 0x13
 2682 0b19 9E040000 		.4byte	0x49e
 2683 0b1d 280B0000 		.4byte	0xb28
 2684 0b21 14       		.uleb128 0x14
 2685 0b22 ED000000 		.4byte	0xed
 2686 0b26 19       		.byte	0x19
 2687 0b27 00       		.byte	0
 2688 0b28 13       		.uleb128 0x13
 2689 0b29 9E040000 		.4byte	0x49e
 2690 0b2d 380B0000 		.4byte	0xb38
 2691 0b31 14       		.uleb128 0x14
 2692 0b32 ED000000 		.4byte	0xed
 2693 0b36 07       		.byte	0x7
 2694 0b37 00       		.byte	0
 2695 0b38 13       		.uleb128 0x13
 2696 0b39 9E040000 		.4byte	0x49e
 2697 0b3d 480B0000 		.4byte	0xb48
 2698 0b41 14       		.uleb128 0x14
 2699 0b42 ED000000 		.4byte	0xed
 2700 0b46 17       		.byte	0x17
 2701 0b47 00       		.byte	0
 2702 0b48 0D       		.uleb128 0xd
 2703 0b49 F0       		.byte	0xf0
 2704 0b4a 0E       		.byte	0xe
 2705 0b4b 7002     		.2byte	0x270
 2706 0b4d 6C0B0000 		.4byte	0xb6c
 2707 0b51 0F       		.uleb128 0xf
 2708 0b52 390A0000 		.4byte	.LASF176
 2709 0b56 0E       		.byte	0xe
 2710 0b57 7302     		.2byte	0x273
 2711 0b59 6C0B0000 		.4byte	0xb6c
 2712 0b5d 00       		.byte	0
 2713 0b5e 0F       		.uleb128 0xf
 2714 0b5f 93050000 		.4byte	.LASF177
 2715 0b63 0E       		.byte	0xe
 2716 0b64 7402     		.2byte	0x274
 2717 0b66 7C0B0000 		.4byte	0xb7c
 2718 0b6a 78       		.byte	0x78
 2719 0b6b 00       		.byte	0
 2720 0b6c 13       		.uleb128 0x13
 2721 0b6d 67060000 		.4byte	0x667
 2722 0b71 7C0B0000 		.4byte	0xb7c
 2723 0b75 14       		.uleb128 0x14
 2724 0b76 ED000000 		.4byte	0xed
 2725 0b7a 1D       		.byte	0x1d
 2726 0b7b 00       		.byte	0
 2727 0b7c 13       		.uleb128 0x13
 2728 0b7d 9B000000 		.4byte	0x9b
 2729 0b81 8C0B0000 		.4byte	0xb8c
 2730 0b85 14       		.uleb128 0x14
 2731 0b86 ED000000 		.4byte	0xed
 2732 0b8a 1D       		.byte	0x1d
 2733 0b8b 00       		.byte	0
 2734 0b8c 23       		.uleb128 0x23
 2735 0b8d F0       		.byte	0xf0
ARM GAS  /tmp/ccwtW74c.s 			page 75


 2736 0b8e 0E       		.byte	0xe
 2737 0b8f 5502     		.2byte	0x255
 2738 0b91 AE0B0000 		.4byte	0xbae
 2739 0b95 24       		.uleb128 0x24
 2740 0b96 AD020000 		.4byte	.LASF127
 2741 0b9a 0E       		.byte	0xe
 2742 0b9b 6C02     		.2byte	0x26c
 2743 0b9d 170A0000 		.4byte	0xa17
 2744 0ba1 24       		.uleb128 0x24
 2745 0ba2 7C000000 		.4byte	.LASF178
 2746 0ba6 0E       		.byte	0xe
 2747 0ba7 7502     		.2byte	0x275
 2748 0ba9 480B0000 		.4byte	0xb48
 2749 0bad 00       		.byte	0
 2750 0bae 13       		.uleb128 0x13
 2751 0baf 9E040000 		.4byte	0x49e
 2752 0bb3 BE0B0000 		.4byte	0xbbe
 2753 0bb7 14       		.uleb128 0x14
 2754 0bb8 ED000000 		.4byte	0xed
 2755 0bbc 18       		.byte	0x18
 2756 0bbd 00       		.byte	0
 2757 0bbe 25       		.uleb128 0x25
 2758 0bbf C90B0000 		.4byte	0xbc9
 2759 0bc3 1F       		.uleb128 0x1f
 2760 0bc4 B5070000 		.4byte	0x7b5
 2761 0bc8 00       		.byte	0
 2762 0bc9 18       		.uleb128 0x18
 2763 0bca 04       		.byte	0x4
 2764 0bcb BE0B0000 		.4byte	0xbbe
 2765 0bcf 18       		.uleb128 0x18
 2766 0bd0 04       		.byte	0x4
 2767 0bd1 08050000 		.4byte	0x508
 2768 0bd5 25       		.uleb128 0x25
 2769 0bd6 E00B0000 		.4byte	0xbe0
 2770 0bda 1F       		.uleb128 0x1f
 2771 0bdb 94000000 		.4byte	0x94
 2772 0bdf 00       		.byte	0
 2773 0be0 18       		.uleb128 0x18
 2774 0be1 04       		.byte	0x4
 2775 0be2 E60B0000 		.4byte	0xbe6
 2776 0be6 18       		.uleb128 0x18
 2777 0be7 04       		.byte	0x4
 2778 0be8 D50B0000 		.4byte	0xbd5
 2779 0bec 13       		.uleb128 0x13
 2780 0bed 85090000 		.4byte	0x985
 2781 0bf1 FC0B0000 		.4byte	0xbfc
 2782 0bf5 14       		.uleb128 0x14
 2783 0bf6 ED000000 		.4byte	0xed
 2784 0bfa 02       		.byte	0x2
 2785 0bfb 00       		.byte	0
 2786 0bfc 07       		.uleb128 0x7
 2787 0bfd 92010000 		.4byte	.LASF179
 2788 0c01 0E       		.byte	0xe
 2789 0c02 FD02     		.2byte	0x2fd
 2790 0c04 B5070000 		.4byte	0x7b5
 2791 0c08 07       		.uleb128 0x7
 2792 0c09 B4020000 		.4byte	.LASF180
ARM GAS  /tmp/ccwtW74c.s 			page 76


 2793 0c0d 0E       		.byte	0xe
 2794 0c0e FE02     		.2byte	0x2fe
 2795 0c10 BB070000 		.4byte	0x7bb
 2796 0c14 08       		.uleb128 0x8
 2797 0c15 B4090000 		.4byte	.LASF181
 2798 0c19 0F       		.byte	0xf
 2799 0c1a 5F       		.byte	0x5f
 2800 0c1b 98040000 		.4byte	0x498
 2801 0c1f 02       		.uleb128 0x2
 2802 0c20 08       		.byte	0x8
 2803 0c21 04       		.byte	0x4
 2804 0c22 9C050000 		.4byte	.LASF182
 2805 0c26 26       		.uleb128 0x26
 2806 0c27 8D080000 		.4byte	.LASF254
 2807 0c2b 01       		.byte	0x1
 2808 0c2c 25000000 		.4byte	0x25
 2809 0c30 10       		.byte	0x10
 2810 0c31 9902     		.2byte	0x299
 2811 0c33 500C0000 		.4byte	0xc50
 2812 0c37 27       		.uleb128 0x27
 2813 0c38 140A0000 		.4byte	.LASF183
 2814 0c3c 7F       		.sleb128 -1
 2815 0c3d 0A       		.uleb128 0xa
 2816 0c3e 26050000 		.4byte	.LASF184
 2817 0c42 00       		.byte	0
 2818 0c43 0A       		.uleb128 0xa
 2819 0c44 88090000 		.4byte	.LASF185
 2820 0c48 01       		.byte	0x1
 2821 0c49 0A       		.uleb128 0xa
 2822 0c4a 44090000 		.4byte	.LASF186
 2823 0c4e 02       		.byte	0x2
 2824 0c4f 00       		.byte	0
 2825 0c50 07       		.uleb128 0x7
 2826 0c51 06040000 		.4byte	.LASF187
 2827 0c55 10       		.byte	0x10
 2828 0c56 A402     		.2byte	0x2a4
 2829 0c58 260C0000 		.4byte	0xc26
 2830 0c5c 13       		.uleb128 0x13
 2831 0c5d 1C090000 		.4byte	0x91c
 2832 0c61 670C0000 		.4byte	0xc67
 2833 0c65 28       		.uleb128 0x28
 2834 0c66 00       		.byte	0
 2835 0c67 05       		.uleb128 0x5
 2836 0c68 5C0C0000 		.4byte	0xc5c
 2837 0c6c 08       		.uleb128 0x8
 2838 0c6d A8040000 		.4byte	.LASF188
 2839 0c71 11       		.byte	0x11
 2840 0c72 14       		.byte	0x14
 2841 0c73 670C0000 		.4byte	0xc67
 2842 0c77 08       		.uleb128 0x8
 2843 0c78 71010000 		.4byte	.LASF189
 2844 0c7c 11       		.byte	0x11
 2845 0c7d 15       		.byte	0x15
 2846 0c7e 94000000 		.4byte	0x94
 2847 0c82 13       		.uleb128 0x13
 2848 0c83 B2000000 		.4byte	0xb2
 2849 0c87 920C0000 		.4byte	0xc92
ARM GAS  /tmp/ccwtW74c.s 			page 77


 2850 0c8b 14       		.uleb128 0x14
 2851 0c8c ED000000 		.4byte	0xed
 2852 0c90 0F       		.byte	0xf
 2853 0c91 00       		.byte	0
 2854 0c92 05       		.uleb128 0x5
 2855 0c93 820C0000 		.4byte	0xc82
 2856 0c97 06       		.uleb128 0x6
 2857 0c98 920C0000 		.4byte	0xc92
 2858 0c9c 29       		.uleb128 0x29
 2859 0c9d 4A050000 		.4byte	.LASF190
 2860 0ca1 01       		.byte	0x1
 2861 0ca2 C2       		.byte	0xc2
 2862 0ca3 970C0000 		.4byte	0xc97
 2863 0ca7 05       		.uleb128 0x5
 2864 0ca8 03       		.byte	0x3
 2865 0ca9 00000000 		.4byte	APBAHBPrescTable
 2866 0cad 13       		.uleb128 0x13
 2867 0cae B2000000 		.4byte	0xb2
 2868 0cb2 BD0C0000 		.4byte	0xcbd
 2869 0cb6 14       		.uleb128 0x14
 2870 0cb7 ED000000 		.4byte	0xed
 2871 0cbb 03       		.byte	0x3
 2872 0cbc 00       		.byte	0
 2873 0cbd 05       		.uleb128 0x5
 2874 0cbe AD0C0000 		.4byte	0xcad
 2875 0cc2 06       		.uleb128 0x6
 2876 0cc3 BD0C0000 		.4byte	0xcbd
 2877 0cc7 29       		.uleb128 0x29
 2878 0cc8 D1020000 		.4byte	.LASF191
 2879 0ccc 01       		.byte	0x1
 2880 0ccd C3       		.byte	0xc3
 2881 0cce C20C0000 		.4byte	0xcc2
 2882 0cd2 05       		.uleb128 0x5
 2883 0cd3 03       		.byte	0x3
 2884 0cd4 10000000 		.4byte	ADCPrescTable
 2885 0cd8 2A       		.uleb128 0x2a
 2886 0cd9 C2060000 		.4byte	.LASF198
 2887 0cdd 07       		.byte	0x7
 2888 0cde C402     		.2byte	0x2c4
 2889 0ce0 88030000 		.4byte	.LFB94
 2890 0ce4 0C000000 		.4byte	.LFE94-.LFB94
 2891 0ce8 01       		.uleb128 0x1
 2892 0ce9 9C       		.byte	0x9c
 2893 0cea FD0C0000 		.4byte	0xcfd
 2894 0cee 2B       		.uleb128 0x2b
 2895 0cef 63070000 		.4byte	.LASF192
 2896 0cf3 01       		.byte	0x1
 2897 0cf4 A905     		.2byte	0x5a9
 2898 0cf6 A2000000 		.4byte	0xa2
 2899 0cfa 01       		.uleb128 0x1
 2900 0cfb 50       		.byte	0x50
 2901 0cfc 00       		.byte	0
 2902 0cfd 2C       		.uleb128 0x2c
 2903 0cfe 82060000 		.4byte	.LASF194
 2904 0d02 07       		.byte	0x7
 2905 0d03 C302     		.2byte	0x2c3
 2906 0d05 31010000 		.4byte	0x131
ARM GAS  /tmp/ccwtW74c.s 			page 78


 2907 0d09 74030000 		.4byte	.LFB93
 2908 0d0d 14000000 		.4byte	.LFE93-.LFB93
 2909 0d11 01       		.uleb128 0x1
 2910 0d12 9C       		.byte	0x9c
 2911 0d13 380D0000 		.4byte	0xd38
 2912 0d17 2D       		.uleb128 0x2d
 2913 0d18 63070000 		.4byte	.LASF192
 2914 0d1c 01       		.byte	0x1
 2915 0d1d 7B05     		.2byte	0x57b
 2916 0d1f A2000000 		.4byte	0xa2
 2917 0d23 00000000 		.4byte	.LLST31
 2918 0d27 2E       		.uleb128 0x2e
 2919 0d28 C7090000 		.4byte	.LASF193
 2920 0d2c 01       		.byte	0x1
 2921 0d2d 7D05     		.2byte	0x57d
 2922 0d2f 31010000 		.4byte	0x131
 2923 0d33 21000000 		.4byte	.LLST32
 2924 0d37 00       		.byte	0
 2925 0d38 2F       		.uleb128 0x2f
 2926 0d39 93030000 		.4byte	.LASF249
 2927 0d3d 07       		.byte	0x7
 2928 0d3e C202     		.2byte	0x2c2
 2929 0d40 62030000 		.4byte	.LFB92
 2930 0d44 12000000 		.4byte	.LFE92-.LFB92
 2931 0d48 01       		.uleb128 0x1
 2932 0d49 9C       		.byte	0x9c
 2933 0d4a 2C       		.uleb128 0x2c
 2934 0d4b BB050000 		.4byte	.LASF195
 2935 0d4f 07       		.byte	0x7
 2936 0d50 C102     		.2byte	0x2c1
 2937 0d52 25010000 		.4byte	0x125
 2938 0d56 08030000 		.4byte	.LFB91
 2939 0d5a 28000000 		.4byte	.LFE91-.LFB91
 2940 0d5e 01       		.uleb128 0x1
 2941 0d5f 9C       		.byte	0x9c
 2942 0d60 A50D0000 		.4byte	0xda5
 2943 0d64 2D       		.uleb128 0x2d
 2944 0d65 79060000 		.4byte	.LASF196
 2945 0d69 01       		.byte	0x1
 2946 0d6a 2F05     		.2byte	0x52f
 2947 0d6c A2000000 		.4byte	0xa2
 2948 0d70 60000000 		.4byte	.LLST25
 2949 0d74 30       		.uleb128 0x30
 2950 0d75 746D7000 		.ascii	"tmp\000"
 2951 0d79 01       		.byte	0x1
 2952 0d7a 3105     		.2byte	0x531
 2953 0d7c DD000000 		.4byte	0xdd
 2954 0d80 8C000000 		.4byte	.LLST26
 2955 0d84 2E       		.uleb128 0x2e
 2956 0d85 7A070000 		.4byte	.LASF197
 2957 0d89 01       		.byte	0x1
 2958 0d8a 3205     		.2byte	0x532
 2959 0d8c DD000000 		.4byte	0xdd
 2960 0d90 F9000000 		.4byte	.LLST27
 2961 0d94 2E       		.uleb128 0x2e
 2962 0d95 C7090000 		.4byte	.LASF193
 2963 0d99 01       		.byte	0x1
ARM GAS  /tmp/ccwtW74c.s 			page 79


 2964 0d9a 3305     		.2byte	0x533
 2965 0d9c 25010000 		.4byte	0x125
 2966 0da0 2F010000 		.4byte	.LLST28
 2967 0da4 00       		.byte	0
 2968 0da5 2A       		.uleb128 0x2a
 2969 0da6 6F040000 		.4byte	.LASF199
 2970 0daa 07       		.byte	0x7
 2971 0dab C002     		.2byte	0x2c0
 2972 0dad FC020000 		.4byte	.LFB90
 2973 0db1 0C000000 		.4byte	.LFE90-.LFB90
 2974 0db5 01       		.uleb128 0x1
 2975 0db6 9C       		.byte	0x9c
 2976 0db7 CA0D0000 		.4byte	0xdca
 2977 0dbb 2B       		.uleb128 0x2b
 2978 0dbc 310A0000 		.4byte	.LASF200
 2979 0dc0 01       		.byte	0x1
 2980 0dc1 0305     		.2byte	0x503
 2981 0dc3 A2000000 		.4byte	0xa2
 2982 0dc7 01       		.uleb128 0x1
 2983 0dc8 50       		.byte	0x50
 2984 0dc9 00       		.byte	0
 2985 0dca 2A       		.uleb128 0x2a
 2986 0dcb D8060000 		.4byte	.LASF201
 2987 0dcf 07       		.byte	0x7
 2988 0dd0 BF02     		.2byte	0x2bf
 2989 0dd2 F0020000 		.4byte	.LFB89
 2990 0dd6 0C000000 		.4byte	.LFE89-.LFB89
 2991 0dda 01       		.uleb128 0x1
 2992 0ddb 9C       		.byte	0x9c
 2993 0ddc EF0D0000 		.4byte	0xdef
 2994 0de0 2B       		.uleb128 0x2b
 2995 0de1 9F060000 		.4byte	.LASF202
 2996 0de5 01       		.byte	0x1
 2997 0de6 E304     		.2byte	0x4e3
 2998 0de8 57010000 		.4byte	0x157
 2999 0dec 01       		.uleb128 0x1
 3000 0ded 50       		.byte	0x50
 3001 0dee 00       		.byte	0
 3002 0def 2A       		.uleb128 0x2a
 3003 0df0 84070000 		.4byte	.LASF203
 3004 0df4 07       		.byte	0x7
 3005 0df5 BE02     		.2byte	0x2be
 3006 0df7 E4020000 		.4byte	.LFB88
 3007 0dfb 0C000000 		.4byte	.LFE88-.LFB88
 3008 0dff 01       		.uleb128 0x1
 3009 0e00 9C       		.byte	0x9c
 3010 0e01 140E0000 		.4byte	0xe14
 3011 0e05 2B       		.uleb128 0x2b
 3012 0e06 9F060000 		.4byte	.LASF202
 3013 0e0a 01       		.byte	0x1
 3014 0e0b D604     		.2byte	0x4d6
 3015 0e0d 57010000 		.4byte	0x157
 3016 0e11 01       		.uleb128 0x1
 3017 0e12 50       		.byte	0x50
 3018 0e13 00       		.byte	0
 3019 0e14 2A       		.uleb128 0x2a
 3020 0e15 D7030000 		.4byte	.LASF204
ARM GAS  /tmp/ccwtW74c.s 			page 80


 3021 0e19 07       		.byte	0x7
 3022 0e1a BD02     		.2byte	0x2bd
 3023 0e1c C8020000 		.4byte	.LFB87
 3024 0e20 1C000000 		.4byte	.LFE87-.LFB87
 3025 0e24 01       		.uleb128 0x1
 3026 0e25 9C       		.byte	0x9c
 3027 0e26 490E0000 		.4byte	0xe49
 3028 0e2a 2D       		.uleb128 0x2d
 3029 0e2b 4D060000 		.4byte	.LASF205
 3030 0e2f 01       		.byte	0x1
 3031 0e30 C104     		.2byte	0x4c1
 3032 0e32 DD000000 		.4byte	0xdd
 3033 0e36 7E010000 		.4byte	.LLST24
 3034 0e3a 2B       		.uleb128 0x2b
 3035 0e3b 9F060000 		.4byte	.LASF202
 3036 0e3f 01       		.byte	0x1
 3037 0e40 C104     		.2byte	0x4c1
 3038 0e42 57010000 		.4byte	0x157
 3039 0e46 01       		.uleb128 0x1
 3040 0e47 51       		.byte	0x51
 3041 0e48 00       		.byte	0
 3042 0e49 2A       		.uleb128 0x2a
 3043 0e4a 0C030000 		.4byte	.LASF206
 3044 0e4e 07       		.byte	0x7
 3045 0e4f BC02     		.2byte	0x2bc
 3046 0e51 AC020000 		.4byte	.LFB86
 3047 0e55 1C000000 		.4byte	.LFE86-.LFB86
 3048 0e59 01       		.uleb128 0x1
 3049 0e5a 9C       		.byte	0x9c
 3050 0e5b 7E0E0000 		.4byte	0xe7e
 3051 0e5f 2D       		.uleb128 0x2d
 3052 0e60 1F070000 		.4byte	.LASF207
 3053 0e64 01       		.byte	0x1
 3054 0e65 A204     		.2byte	0x4a2
 3055 0e67 DD000000 		.4byte	0xdd
 3056 0e6b B8010000 		.4byte	.LLST23
 3057 0e6f 2B       		.uleb128 0x2b
 3058 0e70 9F060000 		.4byte	.LASF202
 3059 0e74 01       		.byte	0x1
 3060 0e75 A204     		.2byte	0x4a2
 3061 0e77 57010000 		.4byte	0x157
 3062 0e7b 01       		.uleb128 0x1
 3063 0e7c 51       		.byte	0x51
 3064 0e7d 00       		.byte	0
 3065 0e7e 2A       		.uleb128 0x2a
 3066 0e7f 7D020000 		.4byte	.LASF208
 3067 0e83 07       		.byte	0x7
 3068 0e84 B602     		.2byte	0x2b6
 3069 0e86 90020000 		.4byte	.LFB85
 3070 0e8a 1C000000 		.4byte	.LFE85-.LFB85
 3071 0e8e 01       		.uleb128 0x1
 3072 0e8f 9C       		.byte	0x9c
 3073 0e90 B30E0000 		.4byte	0xeb3
 3074 0e94 2D       		.uleb128 0x2d
 3075 0e95 4D060000 		.4byte	.LASF205
 3076 0e99 01       		.byte	0x1
 3077 0e9a 6704     		.2byte	0x467
ARM GAS  /tmp/ccwtW74c.s 			page 81


 3078 0e9c DD000000 		.4byte	0xdd
 3079 0ea0 F2010000 		.4byte	.LLST22
 3080 0ea4 2B       		.uleb128 0x2b
 3081 0ea5 9F060000 		.4byte	.LASF202
 3082 0ea9 01       		.byte	0x1
 3083 0eaa 6704     		.2byte	0x467
 3084 0eac 57010000 		.4byte	0x157
 3085 0eb0 01       		.uleb128 0x1
 3086 0eb1 51       		.byte	0x51
 3087 0eb2 00       		.byte	0
 3088 0eb3 2A       		.uleb128 0x2a
 3089 0eb4 2D040000 		.4byte	.LASF209
 3090 0eb8 07       		.byte	0x7
 3091 0eb9 B502     		.2byte	0x2b5
 3092 0ebb 74020000 		.4byte	.LFB84
 3093 0ebf 1C000000 		.4byte	.LFE84-.LFB84
 3094 0ec3 01       		.uleb128 0x1
 3095 0ec4 9C       		.byte	0x9c
 3096 0ec5 E80E0000 		.4byte	0xee8
 3097 0ec9 2D       		.uleb128 0x2d
 3098 0eca 1F070000 		.4byte	.LASF207
 3099 0ece 01       		.byte	0x1
 3100 0ecf 4804     		.2byte	0x448
 3101 0ed1 DD000000 		.4byte	0xdd
 3102 0ed5 2C020000 		.4byte	.LLST21
 3103 0ed9 2B       		.uleb128 0x2b
 3104 0eda 9F060000 		.4byte	.LASF202
 3105 0ede 01       		.byte	0x1
 3106 0edf 4804     		.2byte	0x448
 3107 0ee1 57010000 		.4byte	0x157
 3108 0ee5 01       		.uleb128 0x1
 3109 0ee6 51       		.byte	0x51
 3110 0ee7 00       		.byte	0
 3111 0ee8 2A       		.uleb128 0x2a
 3112 0ee9 180B0000 		.4byte	.LASF210
 3113 0eed 07       		.byte	0x7
 3114 0eee B402     		.2byte	0x2b4
 3115 0ef0 58020000 		.4byte	.LFB83
 3116 0ef4 1C000000 		.4byte	.LFE83-.LFB83
 3117 0ef8 01       		.uleb128 0x1
 3118 0ef9 9C       		.byte	0x9c
 3119 0efa 1D0F0000 		.4byte	0xf1d
 3120 0efe 2D       		.uleb128 0x2d
 3121 0eff 11000000 		.4byte	.LASF211
 3122 0f03 01       		.byte	0x1
 3123 0f04 2904     		.2byte	0x429
 3124 0f06 DD000000 		.4byte	0xdd
 3125 0f0a 66020000 		.4byte	.LLST20
 3126 0f0e 2B       		.uleb128 0x2b
 3127 0f0f 9F060000 		.4byte	.LASF202
 3128 0f13 01       		.byte	0x1
 3129 0f14 2904     		.2byte	0x429
 3130 0f16 57010000 		.4byte	0x157
 3131 0f1a 01       		.uleb128 0x1
 3132 0f1b 51       		.byte	0x51
 3133 0f1c 00       		.byte	0
 3134 0f1d 2A       		.uleb128 0x2a
ARM GAS  /tmp/ccwtW74c.s 			page 82


 3135 0f1e 5F000000 		.4byte	.LASF212
 3136 0f22 07       		.byte	0x7
 3137 0f23 B302     		.2byte	0x2b3
 3138 0f25 A8010000 		.4byte	.LFB82
 3139 0f29 B0000000 		.4byte	.LFE82-.LFB82
 3140 0f2d 01       		.uleb128 0x1
 3141 0f2e 9C       		.byte	0x9c
 3142 0f2f 820F0000 		.4byte	0xf82
 3143 0f33 2B       		.uleb128 0x2b
 3144 0f34 CD050000 		.4byte	.LASF213
 3145 0f38 01       		.byte	0x1
 3146 0f39 8D03     		.2byte	0x38d
 3147 0f3b 820F0000 		.4byte	0xf82
 3148 0f3f 01       		.uleb128 0x1
 3149 0f40 50       		.byte	0x50
 3150 0f41 30       		.uleb128 0x30
 3151 0f42 746D7000 		.ascii	"tmp\000"
 3152 0f46 01       		.byte	0x1
 3153 0f47 8F03     		.2byte	0x38f
 3154 0f49 DD000000 		.4byte	0xdd
 3155 0f4d A0020000 		.4byte	.LLST16
 3156 0f51 2E       		.uleb128 0x2e
 3157 0f52 6A070000 		.4byte	.LASF214
 3158 0f56 01       		.byte	0x1
 3159 0f57 8F03     		.2byte	0x38f
 3160 0f59 DD000000 		.4byte	0xdd
 3161 0f5d 5E030000 		.4byte	.LLST17
 3162 0f61 2E       		.uleb128 0x2e
 3163 0f62 7A030000 		.4byte	.LASF215
 3164 0f66 01       		.byte	0x1
 3165 0f67 8F03     		.2byte	0x38f
 3166 0f69 DD000000 		.4byte	0xdd
 3167 0f6d A5030000 		.4byte	.LLST18
 3168 0f71 2E       		.uleb128 0x2e
 3169 0f72 E60A0000 		.4byte	.LASF216
 3170 0f76 01       		.byte	0x1
 3171 0f77 8F03     		.2byte	0x38f
 3172 0f79 DD000000 		.4byte	0xdd
 3173 0f7d E7030000 		.4byte	.LLST19
 3174 0f81 00       		.byte	0
 3175 0f82 18       		.uleb128 0x18
 3176 0f83 04       		.byte	0x4
 3177 0f84 65020000 		.4byte	0x265
 3178 0f88 2A       		.uleb128 0x2a
 3179 0f89 4F0A0000 		.4byte	.LASF217
 3180 0f8d 07       		.byte	0x7
 3181 0f8e B202     		.2byte	0x2b2
 3182 0f90 9C010000 		.4byte	.LFB81
 3183 0f94 0C000000 		.4byte	.LFE81-.LFB81
 3184 0f98 01       		.uleb128 0x1
 3185 0f99 9C       		.byte	0x9c
 3186 0f9a AD0F0000 		.4byte	0xfad
 3187 0f9e 2B       		.uleb128 0x2b
 3188 0f9f 9F060000 		.4byte	.LASF202
 3189 0fa3 01       		.byte	0x1
 3190 0fa4 7E03     		.2byte	0x37e
 3191 0fa6 57010000 		.4byte	0x157
ARM GAS  /tmp/ccwtW74c.s 			page 83


 3192 0faa 01       		.uleb128 0x1
 3193 0fab 50       		.byte	0x50
 3194 0fac 00       		.byte	0
 3195 0fad 2A       		.uleb128 0x2a
 3196 0fae 5C060000 		.4byte	.LASF218
 3197 0fb2 07       		.byte	0x7
 3198 0fb3 B102     		.2byte	0x2b1
 3199 0fb5 8C010000 		.4byte	.LFB80
 3200 0fb9 10000000 		.4byte	.LFE80-.LFB80
 3201 0fbd 01       		.uleb128 0x1
 3202 0fbe 9C       		.byte	0x9c
 3203 0fbf D40F0000 		.4byte	0xfd4
 3204 0fc3 2D       		.uleb128 0x2d
 3205 0fc4 E0000000 		.4byte	.LASF219
 3206 0fc8 01       		.byte	0x1
 3207 0fc9 7003     		.2byte	0x370
 3208 0fcb DD000000 		.4byte	0xdd
 3209 0fcf 47040000 		.4byte	.LLST15
 3210 0fd3 00       		.byte	0
 3211 0fd4 2A       		.uleb128 0x2a
 3212 0fd5 6F030000 		.4byte	.LASF220
 3213 0fd9 07       		.byte	0x7
 3214 0fda B002     		.2byte	0x2b0
 3215 0fdc 80010000 		.4byte	.LFB79
 3216 0fe0 0C000000 		.4byte	.LFE79-.LFB79
 3217 0fe4 01       		.uleb128 0x1
 3218 0fe5 9C       		.byte	0x9c
 3219 0fe6 F90F0000 		.4byte	0xff9
 3220 0fea 2B       		.uleb128 0x2b
 3221 0feb 9F060000 		.4byte	.LASF202
 3222 0fef 01       		.byte	0x1
 3223 0ff0 5F03     		.2byte	0x35f
 3224 0ff2 57010000 		.4byte	0x157
 3225 0ff6 01       		.uleb128 0x1
 3226 0ff7 50       		.byte	0x50
 3227 0ff8 00       		.byte	0
 3228 0ff9 2A       		.uleb128 0x2a
 3229 0ffa 61020000 		.4byte	.LASF221
 3230 0ffe 07       		.byte	0x7
 3231 0fff AF02     		.2byte	0x2af
 3232 1001 58010000 		.4byte	.LFB78
 3233 1005 28000000 		.4byte	.LFE78-.LFB78
 3234 1009 01       		.uleb128 0x1
 3235 100a 9C       		.byte	0x9c
 3236 100b 1E100000 		.4byte	0x101e
 3237 100f 2B       		.uleb128 0x2b
 3238 1010 1F020000 		.4byte	.LASF222
 3239 1014 01       		.byte	0x1
 3240 1015 3E03     		.2byte	0x33e
 3241 1017 A2000000 		.4byte	0xa2
 3242 101b 01       		.uleb128 0x1
 3243 101c 50       		.byte	0x50
 3244 101d 00       		.byte	0
 3245 101e 2A       		.uleb128 0x2a
 3246 101f 27020000 		.4byte	.LASF223
 3247 1023 07       		.byte	0x7
 3248 1024 A802     		.2byte	0x2a8
ARM GAS  /tmp/ccwtW74c.s 			page 84


 3249 1026 44010000 		.4byte	.LFB77
 3250 102a 14000000 		.4byte	.LFE77-.LFB77
 3251 102e 01       		.uleb128 0x1
 3252 102f 9C       		.byte	0x9c
 3253 1030 55100000 		.4byte	0x1055
 3254 1034 2D       		.uleb128 0x2d
 3255 1035 3A090000 		.4byte	.LASF224
 3256 1039 01       		.byte	0x1
 3257 103a FF02     		.2byte	0x2ff
 3258 103c DD000000 		.4byte	0xdd
 3259 1040 68040000 		.4byte	.LLST13
 3260 1044 2E       		.uleb128 0x2e
 3261 1045 22090000 		.4byte	.LASF225
 3262 1049 01       		.byte	0x1
 3263 104a 0103     		.2byte	0x301
 3264 104c DD000000 		.4byte	0xdd
 3265 1050 89040000 		.4byte	.LLST14
 3266 1054 00       		.byte	0
 3267 1055 2A       		.uleb128 0x2a
 3268 1056 4E000000 		.4byte	.LASF226
 3269 105a 07       		.byte	0x7
 3270 105b A302     		.2byte	0x2a3
 3271 105d 38010000 		.4byte	.LFB76
 3272 1061 0C000000 		.4byte	.LFE76-.LFB76
 3273 1065 01       		.uleb128 0x1
 3274 1066 9C       		.byte	0x9c
 3275 1067 7A100000 		.4byte	0x107a
 3276 106b 2B       		.uleb128 0x2b
 3277 106c E4020000 		.4byte	.LASF227
 3278 1070 01       		.byte	0x1
 3279 1071 D902     		.2byte	0x2d9
 3280 1073 DD000000 		.4byte	0xdd
 3281 1077 01       		.uleb128 0x1
 3282 1078 50       		.byte	0x50
 3283 1079 00       		.byte	0
 3284 107a 2A       		.uleb128 0x2a
 3285 107b E8050000 		.4byte	.LASF228
 3286 107f 07       		.byte	0x7
 3287 1080 A002     		.2byte	0x2a0
 3288 1082 1C010000 		.4byte	.LFB75
 3289 1086 1C000000 		.4byte	.LFE75-.LFB75
 3290 108a 01       		.uleb128 0x1
 3291 108b 9C       		.byte	0x9c
 3292 108c AF100000 		.4byte	0x10af
 3293 1090 2D       		.uleb128 0x2d
 3294 1091 63070000 		.4byte	.LASF192
 3295 1095 01       		.byte	0x1
 3296 1096 BD02     		.2byte	0x2bd
 3297 1098 A2000000 		.4byte	0xa2
 3298 109c B3040000 		.4byte	.LLST12
 3299 10a0 2B       		.uleb128 0x2b
 3300 10a1 9F060000 		.4byte	.LASF202
 3301 10a5 01       		.byte	0x1
 3302 10a6 BD02     		.2byte	0x2bd
 3303 10a8 57010000 		.4byte	0x157
 3304 10ac 01       		.uleb128 0x1
 3305 10ad 51       		.byte	0x51
ARM GAS  /tmp/ccwtW74c.s 			page 85


 3306 10ae 00       		.byte	0
 3307 10af 2A       		.uleb128 0x2a
 3308 10b0 C3010000 		.4byte	.LASF229
 3309 10b4 07       		.byte	0x7
 3310 10b5 9F02     		.2byte	0x29f
 3311 10b7 08010000 		.4byte	.LFB74
 3312 10bb 14000000 		.4byte	.LFE74-.LFB74
 3313 10bf 01       		.uleb128 0x1
 3314 10c0 9C       		.byte	0x9c
 3315 10c1 E6100000 		.4byte	0x10e6
 3316 10c5 2D       		.uleb128 0x2d
 3317 10c6 23010000 		.4byte	.LASF230
 3318 10ca 01       		.byte	0x1
 3319 10cb 9502     		.2byte	0x295
 3320 10cd DD000000 		.4byte	0xdd
 3321 10d1 ED040000 		.4byte	.LLST10
 3322 10d5 2E       		.uleb128 0x2e
 3323 10d6 22090000 		.4byte	.LASF225
 3324 10da 01       		.byte	0x1
 3325 10db 9702     		.2byte	0x297
 3326 10dd DD000000 		.4byte	0xdd
 3327 10e1 0E050000 		.4byte	.LLST11
 3328 10e5 00       		.byte	0
 3329 10e6 2A       		.uleb128 0x2a
 3330 10e7 4D010000 		.4byte	.LASF231
 3331 10eb 07       		.byte	0x7
 3332 10ec 9E02     		.2byte	0x29e
 3333 10ee F4000000 		.4byte	.LFB73
 3334 10f2 14000000 		.4byte	.LFE73-.LFB73
 3335 10f6 01       		.uleb128 0x1
 3336 10f7 9C       		.byte	0x9c
 3337 10f8 1D110000 		.4byte	0x111d
 3338 10fc 2D       		.uleb128 0x2d
 3339 10fd 23010000 		.4byte	.LASF230
 3340 1101 01       		.byte	0x1
 3341 1102 7B02     		.2byte	0x27b
 3342 1104 DD000000 		.4byte	0xdd
 3343 1108 38050000 		.4byte	.LLST8
 3344 110c 2E       		.uleb128 0x2e
 3345 110d 22090000 		.4byte	.LASF225
 3346 1111 01       		.byte	0x1
 3347 1112 7D02     		.2byte	0x27d
 3348 1114 DD000000 		.4byte	0xdd
 3349 1118 59050000 		.4byte	.LLST9
 3350 111c 00       		.byte	0
 3351 111d 2A       		.uleb128 0x2a
 3352 111e 84030000 		.4byte	.LASF232
 3353 1122 07       		.byte	0x7
 3354 1123 9D02     		.2byte	0x29d
 3355 1125 E0000000 		.4byte	.LFB72
 3356 1129 14000000 		.4byte	.LFE72-.LFB72
 3357 112d 01       		.uleb128 0x1
 3358 112e 9C       		.byte	0x9c
 3359 112f 54110000 		.4byte	0x1154
 3360 1133 2D       		.uleb128 0x2d
 3361 1134 54030000 		.4byte	.LASF233
 3362 1138 01       		.byte	0x1
ARM GAS  /tmp/ccwtW74c.s 			page 86


 3363 1139 6102     		.2byte	0x261
 3364 113b DD000000 		.4byte	0xdd
 3365 113f 83050000 		.4byte	.LLST6
 3366 1143 2E       		.uleb128 0x2e
 3367 1144 22090000 		.4byte	.LASF225
 3368 1148 01       		.byte	0x1
 3369 1149 6302     		.2byte	0x263
 3370 114b DD000000 		.4byte	0xdd
 3371 114f A4050000 		.4byte	.LLST7
 3372 1153 00       		.byte	0
 3373 1154 31       		.uleb128 0x31
 3374 1155 EF010000 		.4byte	.LASF255
 3375 1159 07       		.byte	0x7
 3376 115a 9C02     		.2byte	0x29c
 3377 115c A2000000 		.4byte	0xa2
 3378 1160 D0000000 		.4byte	.LFB71
 3379 1164 10000000 		.4byte	.LFE71-.LFB71
 3380 1168 01       		.uleb128 0x1
 3381 1169 9C       		.byte	0x9c
 3382 116a 2A       		.uleb128 0x2a
 3383 116b 2E0B0000 		.4byte	.LASF234
 3384 116f 07       		.byte	0x7
 3385 1170 9B02     		.2byte	0x29b
 3386 1172 BC000000 		.4byte	.LFB70
 3387 1176 14000000 		.4byte	.LFE70-.LFB70
 3388 117a 01       		.uleb128 0x1
 3389 117b 9C       		.byte	0x9c
 3390 117c A1110000 		.4byte	0x11a1
 3391 1180 2D       		.uleb128 0x2d
 3392 1181 B1060000 		.4byte	.LASF235
 3393 1185 01       		.byte	0x1
 3394 1186 3502     		.2byte	0x235
 3395 1188 DD000000 		.4byte	0xdd
 3396 118c CE050000 		.4byte	.LLST4
 3397 1190 2E       		.uleb128 0x2e
 3398 1191 22090000 		.4byte	.LASF225
 3399 1195 01       		.byte	0x1
 3400 1196 3702     		.2byte	0x237
 3401 1198 DD000000 		.4byte	0xdd
 3402 119c EF050000 		.4byte	.LLST5
 3403 11a0 00       		.byte	0
 3404 11a1 2A       		.uleb128 0x2a
 3405 11a2 64080000 		.4byte	.LASF236
 3406 11a6 07       		.byte	0x7
 3407 11a7 8D02     		.2byte	0x28d
 3408 11a9 B0000000 		.4byte	.LFB69
 3409 11ad 0C000000 		.4byte	.LFE69-.LFB69
 3410 11b1 01       		.uleb128 0x1
 3411 11b2 9C       		.byte	0x9c
 3412 11b3 C6110000 		.4byte	0x11c6
 3413 11b7 2B       		.uleb128 0x2b
 3414 11b8 9F060000 		.4byte	.LASF202
 3415 11bc 01       		.byte	0x1
 3416 11bd 9201     		.2byte	0x192
 3417 11bf 57010000 		.4byte	0x157
 3418 11c3 01       		.uleb128 0x1
 3419 11c4 50       		.byte	0x50
ARM GAS  /tmp/ccwtW74c.s 			page 87


 3420 11c5 00       		.byte	0
 3421 11c6 2A       		.uleb128 0x2a
 3422 11c7 4B0B0000 		.4byte	.LASF237
 3423 11cb 07       		.byte	0x7
 3424 11cc 8C02     		.2byte	0x28c
 3425 11ce 9C000000 		.4byte	.LFB68
 3426 11d2 14000000 		.4byte	.LFE68-.LFB68
 3427 11d6 01       		.uleb128 0x1
 3428 11d7 9C       		.byte	0x9c
 3429 11d8 0B120000 		.4byte	0x120b
 3430 11dc 2B       		.uleb128 0x2b
 3431 11dd 6F020000 		.4byte	.LASF238
 3432 11e1 01       		.byte	0x1
 3433 11e2 7B01     		.2byte	0x17b
 3434 11e4 DD000000 		.4byte	0xdd
 3435 11e8 01       		.uleb128 0x1
 3436 11e9 50       		.byte	0x50
 3437 11ea 2D       		.uleb128 0x2d
 3438 11eb 0D0B0000 		.4byte	.LASF239
 3439 11ef 01       		.byte	0x1
 3440 11f0 7B01     		.2byte	0x17b
 3441 11f2 DD000000 		.4byte	0xdd
 3442 11f6 19060000 		.4byte	.LLST2
 3443 11fa 2E       		.uleb128 0x2e
 3444 11fb 22090000 		.4byte	.LASF225
 3445 11ff 01       		.byte	0x1
 3446 1200 7D01     		.2byte	0x17d
 3447 1202 DD000000 		.4byte	0xdd
 3448 1206 3A060000 		.4byte	.LLST3
 3449 120a 00       		.byte	0
 3450 120b 2A       		.uleb128 0x2a
 3451 120c 05060000 		.4byte	.LASF240
 3452 1210 07       		.byte	0x7
 3453 1211 8B02     		.2byte	0x28b
 3454 1213 90000000 		.4byte	.LFB67
 3455 1217 0C000000 		.4byte	.LFE67-.LFB67
 3456 121b 01       		.uleb128 0x1
 3457 121c 9C       		.byte	0x9c
 3458 121d 30120000 		.4byte	0x1230
 3459 1221 2B       		.uleb128 0x2b
 3460 1222 9F060000 		.4byte	.LASF202
 3461 1226 01       		.byte	0x1
 3462 1227 6301     		.2byte	0x163
 3463 1229 57010000 		.4byte	0x157
 3464 122d 01       		.uleb128 0x1
 3465 122e 50       		.byte	0x50
 3466 122f 00       		.byte	0
 3467 1230 2A       		.uleb128 0x2a
 3468 1231 29060000 		.4byte	.LASF241
 3469 1235 07       		.byte	0x7
 3470 1236 8A02     		.2byte	0x28a
 3471 1238 7C000000 		.4byte	.LFB66
 3472 123c 14000000 		.4byte	.LFE66-.LFB66
 3473 1240 01       		.uleb128 0x1
 3474 1241 9C       		.byte	0x9c
 3475 1242 67120000 		.4byte	0x1267
 3476 1246 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccwtW74c.s 			page 88


 3477 1247 0E090000 		.4byte	.LASF242
 3478 124b 01       		.byte	0x1
 3479 124c 4F01     		.2byte	0x14f
 3480 124e A2000000 		.4byte	0xa2
 3481 1252 77060000 		.4byte	.LLST0
 3482 1256 2E       		.uleb128 0x2e
 3483 1257 22090000 		.4byte	.LASF225
 3484 125b 01       		.byte	0x1
 3485 125c 5101     		.2byte	0x151
 3486 125e DD000000 		.4byte	0xdd
 3487 1262 98060000 		.4byte	.LLST1
 3488 1266 00       		.byte	0
 3489 1267 2C       		.uleb128 0x2c
 3490 1268 77080000 		.4byte	.LASF243
 3491 126c 07       		.byte	0x7
 3492 126d 8902     		.2byte	0x289
 3493 126f 7D010000 		.4byte	0x17d
 3494 1273 30030000 		.4byte	.LFB65
 3495 1277 32000000 		.4byte	.LFE65-.LFB65
 3496 127b 01       		.uleb128 0x1
 3497 127c 9C       		.byte	0x9c
 3498 127d D5120000 		.4byte	0x12d5
 3499 1281 32       		.uleb128 0x32
 3500 1282 23030000 		.4byte	.LASF244
 3501 1286 01       		.byte	0x1
 3502 1287 3301     		.2byte	0x133
 3503 1289 E8000000 		.4byte	0xe8
 3504 128d 02       		.uleb128 0x2
 3505 128e 91       		.byte	0x91
 3506 128f 74       		.sleb128 -12
 3507 1290 2E       		.uleb128 0x2e
 3508 1291 400A0000 		.4byte	.LASF245
 3509 1295 01       		.byte	0x1
 3510 1296 3401     		.2byte	0x134
 3511 1298 7D010000 		.4byte	0x17d
 3512 129c C2060000 		.4byte	.LLST29
 3513 12a0 2E       		.uleb128 0x2e
 3514 12a1 03020000 		.4byte	.LASF246
 3515 12a5 01       		.byte	0x1
 3516 12a6 3501     		.2byte	0x135
 3517 12a8 25010000 		.4byte	0x125
 3518 12ac E7060000 		.4byte	.LLST30
 3519 12b0 33       		.uleb128 0x33
 3520 12b1 40030000 		.4byte	.LVL112
 3521 12b5 4A0D0000 		.4byte	0xd4a
 3522 12b9 C4120000 		.4byte	0x12c4
 3523 12bd 34       		.uleb128 0x34
 3524 12be 01       		.uleb128 0x1
 3525 12bf 50       		.byte	0x50
 3526 12c0 02       		.uleb128 0x2
 3527 12c1 74       		.byte	0x74
 3528 12c2 00       		.sleb128 0
 3529 12c3 00       		.byte	0
 3530 12c4 35       		.uleb128 0x35
 3531 12c5 58030000 		.4byte	.LVL114
 3532 12c9 4A0D0000 		.4byte	0xd4a
 3533 12cd 34       		.uleb128 0x34
ARM GAS  /tmp/ccwtW74c.s 			page 89


 3534 12ce 01       		.uleb128 0x1
 3535 12cf 50       		.byte	0x50
 3536 12d0 02       		.uleb128 0x2
 3537 12d1 74       		.byte	0x74
 3538 12d2 00       		.sleb128 0
 3539 12d3 00       		.byte	0
 3540 12d4 00       		.byte	0
 3541 12d5 2A       		.uleb128 0x2a
 3542 12d6 A1030000 		.4byte	.LASF247
 3543 12da 07       		.byte	0x7
 3544 12db 8802     		.2byte	0x288
 3545 12dd 40000000 		.4byte	.LFB64
 3546 12e1 3C000000 		.4byte	.LFE64-.LFB64
 3547 12e5 01       		.uleb128 0x1
 3548 12e6 9C       		.byte	0x9c
 3549 12e7 FA120000 		.4byte	0x12fa
 3550 12eb 2B       		.uleb128 0x2b
 3551 12ec FE030000 		.4byte	.LASF248
 3552 12f0 01       		.byte	0x1
 3553 12f1 0F01     		.2byte	0x10f
 3554 12f3 DD000000 		.4byte	0xdd
 3555 12f7 01       		.uleb128 0x1
 3556 12f8 50       		.byte	0x50
 3557 12f9 00       		.byte	0
 3558 12fa 2F       		.uleb128 0x2f
 3559 12fb D3010000 		.4byte	.LASF250
 3560 12ff 07       		.byte	0x7
 3561 1300 8702     		.2byte	0x287
 3562 1302 00000000 		.4byte	.LFB63
 3563 1306 40000000 		.4byte	.LFE63-.LFB63
 3564 130a 01       		.uleb128 0x1
 3565 130b 9C       		.byte	0x9c
 3566 130c 00       		.byte	0
 3567              		.section	.debug_abbrev,"",%progbits
 3568              	.Ldebug_abbrev0:
 3569 0000 01       		.uleb128 0x1
 3570 0001 11       		.uleb128 0x11
 3571 0002 01       		.byte	0x1
 3572 0003 25       		.uleb128 0x25
 3573 0004 0E       		.uleb128 0xe
 3574 0005 13       		.uleb128 0x13
 3575 0006 0B       		.uleb128 0xb
 3576 0007 03       		.uleb128 0x3
 3577 0008 0E       		.uleb128 0xe
 3578 0009 1B       		.uleb128 0x1b
 3579 000a 0E       		.uleb128 0xe
 3580 000b 11       		.uleb128 0x11
 3581 000c 01       		.uleb128 0x1
 3582 000d 12       		.uleb128 0x12
 3583 000e 06       		.uleb128 0x6
 3584 000f 10       		.uleb128 0x10
 3585 0010 17       		.uleb128 0x17
 3586 0011 00       		.byte	0
 3587 0012 00       		.byte	0
 3588 0013 02       		.uleb128 0x2
 3589 0014 24       		.uleb128 0x24
 3590 0015 00       		.byte	0
ARM GAS  /tmp/ccwtW74c.s 			page 90


 3591 0016 0B       		.uleb128 0xb
 3592 0017 0B       		.uleb128 0xb
 3593 0018 3E       		.uleb128 0x3e
 3594 0019 0B       		.uleb128 0xb
 3595 001a 03       		.uleb128 0x3
 3596 001b 0E       		.uleb128 0xe
 3597 001c 00       		.byte	0
 3598 001d 00       		.byte	0
 3599 001e 03       		.uleb128 0x3
 3600 001f 16       		.uleb128 0x16
 3601 0020 00       		.byte	0
 3602 0021 03       		.uleb128 0x3
 3603 0022 0E       		.uleb128 0xe
 3604 0023 3A       		.uleb128 0x3a
 3605 0024 0B       		.uleb128 0xb
 3606 0025 3B       		.uleb128 0x3b
 3607 0026 0B       		.uleb128 0xb
 3608 0027 49       		.uleb128 0x49
 3609 0028 13       		.uleb128 0x13
 3610 0029 00       		.byte	0
 3611 002a 00       		.byte	0
 3612 002b 04       		.uleb128 0x4
 3613 002c 24       		.uleb128 0x24
 3614 002d 00       		.byte	0
 3615 002e 0B       		.uleb128 0xb
 3616 002f 0B       		.uleb128 0xb
 3617 0030 3E       		.uleb128 0x3e
 3618 0031 0B       		.uleb128 0xb
 3619 0032 03       		.uleb128 0x3
 3620 0033 08       		.uleb128 0x8
 3621 0034 00       		.byte	0
 3622 0035 00       		.byte	0
 3623 0036 05       		.uleb128 0x5
 3624 0037 26       		.uleb128 0x26
 3625 0038 00       		.byte	0
 3626 0039 49       		.uleb128 0x49
 3627 003a 13       		.uleb128 0x13
 3628 003b 00       		.byte	0
 3629 003c 00       		.byte	0
 3630 003d 06       		.uleb128 0x6
 3631 003e 35       		.uleb128 0x35
 3632 003f 00       		.byte	0
 3633 0040 49       		.uleb128 0x49
 3634 0041 13       		.uleb128 0x13
 3635 0042 00       		.byte	0
 3636 0043 00       		.byte	0
 3637 0044 07       		.uleb128 0x7
 3638 0045 34       		.uleb128 0x34
 3639 0046 00       		.byte	0
 3640 0047 03       		.uleb128 0x3
 3641 0048 0E       		.uleb128 0xe
 3642 0049 3A       		.uleb128 0x3a
 3643 004a 0B       		.uleb128 0xb
 3644 004b 3B       		.uleb128 0x3b
 3645 004c 05       		.uleb128 0x5
 3646 004d 49       		.uleb128 0x49
 3647 004e 13       		.uleb128 0x13
ARM GAS  /tmp/ccwtW74c.s 			page 91


 3648 004f 3F       		.uleb128 0x3f
 3649 0050 19       		.uleb128 0x19
 3650 0051 3C       		.uleb128 0x3c
 3651 0052 19       		.uleb128 0x19
 3652 0053 00       		.byte	0
 3653 0054 00       		.byte	0
 3654 0055 08       		.uleb128 0x8
 3655 0056 34       		.uleb128 0x34
 3656 0057 00       		.byte	0
 3657 0058 03       		.uleb128 0x3
 3658 0059 0E       		.uleb128 0xe
 3659 005a 3A       		.uleb128 0x3a
 3660 005b 0B       		.uleb128 0xb
 3661 005c 3B       		.uleb128 0x3b
 3662 005d 0B       		.uleb128 0xb
 3663 005e 49       		.uleb128 0x49
 3664 005f 13       		.uleb128 0x13
 3665 0060 3F       		.uleb128 0x3f
 3666 0061 19       		.uleb128 0x19
 3667 0062 3C       		.uleb128 0x3c
 3668 0063 19       		.uleb128 0x19
 3669 0064 00       		.byte	0
 3670 0065 00       		.byte	0
 3671 0066 09       		.uleb128 0x9
 3672 0067 04       		.uleb128 0x4
 3673 0068 01       		.byte	0x1
 3674 0069 0B       		.uleb128 0xb
 3675 006a 0B       		.uleb128 0xb
 3676 006b 49       		.uleb128 0x49
 3677 006c 13       		.uleb128 0x13
 3678 006d 3A       		.uleb128 0x3a
 3679 006e 0B       		.uleb128 0xb
 3680 006f 3B       		.uleb128 0x3b
 3681 0070 05       		.uleb128 0x5
 3682 0071 01       		.uleb128 0x1
 3683 0072 13       		.uleb128 0x13
 3684 0073 00       		.byte	0
 3685 0074 00       		.byte	0
 3686 0075 0A       		.uleb128 0xa
 3687 0076 28       		.uleb128 0x28
 3688 0077 00       		.byte	0
 3689 0078 03       		.uleb128 0x3
 3690 0079 0E       		.uleb128 0xe
 3691 007a 1C       		.uleb128 0x1c
 3692 007b 0B       		.uleb128 0xb
 3693 007c 00       		.byte	0
 3694 007d 00       		.byte	0
 3695 007e 0B       		.uleb128 0xb
 3696 007f 28       		.uleb128 0x28
 3697 0080 00       		.byte	0
 3698 0081 03       		.uleb128 0x3
 3699 0082 08       		.uleb128 0x8
 3700 0083 1C       		.uleb128 0x1c
 3701 0084 0B       		.uleb128 0xb
 3702 0085 00       		.byte	0
 3703 0086 00       		.byte	0
 3704 0087 0C       		.uleb128 0xc
ARM GAS  /tmp/ccwtW74c.s 			page 92


 3705 0088 16       		.uleb128 0x16
 3706 0089 00       		.byte	0
 3707 008a 03       		.uleb128 0x3
 3708 008b 0E       		.uleb128 0xe
 3709 008c 3A       		.uleb128 0x3a
 3710 008d 0B       		.uleb128 0xb
 3711 008e 3B       		.uleb128 0x3b
 3712 008f 05       		.uleb128 0x5
 3713 0090 49       		.uleb128 0x49
 3714 0091 13       		.uleb128 0x13
 3715 0092 00       		.byte	0
 3716 0093 00       		.byte	0
 3717 0094 0D       		.uleb128 0xd
 3718 0095 13       		.uleb128 0x13
 3719 0096 01       		.byte	0x1
 3720 0097 0B       		.uleb128 0xb
 3721 0098 0B       		.uleb128 0xb
 3722 0099 3A       		.uleb128 0x3a
 3723 009a 0B       		.uleb128 0xb
 3724 009b 3B       		.uleb128 0x3b
 3725 009c 05       		.uleb128 0x5
 3726 009d 01       		.uleb128 0x1
 3727 009e 13       		.uleb128 0x13
 3728 009f 00       		.byte	0
 3729 00a0 00       		.byte	0
 3730 00a1 0E       		.uleb128 0xe
 3731 00a2 0D       		.uleb128 0xd
 3732 00a3 00       		.byte	0
 3733 00a4 03       		.uleb128 0x3
 3734 00a5 08       		.uleb128 0x8
 3735 00a6 3A       		.uleb128 0x3a
 3736 00a7 0B       		.uleb128 0xb
 3737 00a8 3B       		.uleb128 0x3b
 3738 00a9 05       		.uleb128 0x5
 3739 00aa 49       		.uleb128 0x49
 3740 00ab 13       		.uleb128 0x13
 3741 00ac 38       		.uleb128 0x38
 3742 00ad 0B       		.uleb128 0xb
 3743 00ae 00       		.byte	0
 3744 00af 00       		.byte	0
 3745 00b0 0F       		.uleb128 0xf
 3746 00b1 0D       		.uleb128 0xd
 3747 00b2 00       		.byte	0
 3748 00b3 03       		.uleb128 0x3
 3749 00b4 0E       		.uleb128 0xe
 3750 00b5 3A       		.uleb128 0x3a
 3751 00b6 0B       		.uleb128 0xb
 3752 00b7 3B       		.uleb128 0x3b
 3753 00b8 05       		.uleb128 0x5
 3754 00b9 49       		.uleb128 0x49
 3755 00ba 13       		.uleb128 0x13
 3756 00bb 38       		.uleb128 0x38
 3757 00bc 0B       		.uleb128 0xb
 3758 00bd 00       		.byte	0
 3759 00be 00       		.byte	0
 3760 00bf 10       		.uleb128 0x10
 3761 00c0 13       		.uleb128 0x13
ARM GAS  /tmp/ccwtW74c.s 			page 93


 3762 00c1 01       		.byte	0x1
 3763 00c2 0B       		.uleb128 0xb
 3764 00c3 0B       		.uleb128 0xb
 3765 00c4 3A       		.uleb128 0x3a
 3766 00c5 0B       		.uleb128 0xb
 3767 00c6 3B       		.uleb128 0x3b
 3768 00c7 0B       		.uleb128 0xb
 3769 00c8 01       		.uleb128 0x1
 3770 00c9 13       		.uleb128 0x13
 3771 00ca 00       		.byte	0
 3772 00cb 00       		.byte	0
 3773 00cc 11       		.uleb128 0x11
 3774 00cd 0D       		.uleb128 0xd
 3775 00ce 00       		.byte	0
 3776 00cf 03       		.uleb128 0x3
 3777 00d0 0E       		.uleb128 0xe
 3778 00d1 3A       		.uleb128 0x3a
 3779 00d2 0B       		.uleb128 0xb
 3780 00d3 3B       		.uleb128 0x3b
 3781 00d4 0B       		.uleb128 0xb
 3782 00d5 49       		.uleb128 0x49
 3783 00d6 13       		.uleb128 0x13
 3784 00d7 38       		.uleb128 0x38
 3785 00d8 0B       		.uleb128 0xb
 3786 00d9 00       		.byte	0
 3787 00da 00       		.byte	0
 3788 00db 12       		.uleb128 0x12
 3789 00dc 34       		.uleb128 0x34
 3790 00dd 00       		.byte	0
 3791 00de 03       		.uleb128 0x3
 3792 00df 08       		.uleb128 0x8
 3793 00e0 3A       		.uleb128 0x3a
 3794 00e1 0B       		.uleb128 0xb
 3795 00e2 3B       		.uleb128 0x3b
 3796 00e3 0B       		.uleb128 0xb
 3797 00e4 49       		.uleb128 0x49
 3798 00e5 13       		.uleb128 0x13
 3799 00e6 3F       		.uleb128 0x3f
 3800 00e7 19       		.uleb128 0x19
 3801 00e8 3C       		.uleb128 0x3c
 3802 00e9 19       		.uleb128 0x19
 3803 00ea 00       		.byte	0
 3804 00eb 00       		.byte	0
 3805 00ec 13       		.uleb128 0x13
 3806 00ed 01       		.uleb128 0x1
 3807 00ee 01       		.byte	0x1
 3808 00ef 49       		.uleb128 0x49
 3809 00f0 13       		.uleb128 0x13
 3810 00f1 01       		.uleb128 0x1
 3811 00f2 13       		.uleb128 0x13
 3812 00f3 00       		.byte	0
 3813 00f4 00       		.byte	0
 3814 00f5 14       		.uleb128 0x14
 3815 00f6 21       		.uleb128 0x21
 3816 00f7 00       		.byte	0
 3817 00f8 49       		.uleb128 0x49
 3818 00f9 13       		.uleb128 0x13
ARM GAS  /tmp/ccwtW74c.s 			page 94


 3819 00fa 2F       		.uleb128 0x2f
 3820 00fb 0B       		.uleb128 0xb
 3821 00fc 00       		.byte	0
 3822 00fd 00       		.byte	0
 3823 00fe 15       		.uleb128 0x15
 3824 00ff 17       		.uleb128 0x17
 3825 0100 01       		.byte	0x1
 3826 0101 0B       		.uleb128 0xb
 3827 0102 0B       		.uleb128 0xb
 3828 0103 3A       		.uleb128 0x3a
 3829 0104 0B       		.uleb128 0xb
 3830 0105 3B       		.uleb128 0x3b
 3831 0106 0B       		.uleb128 0xb
 3832 0107 01       		.uleb128 0x1
 3833 0108 13       		.uleb128 0x13
 3834 0109 00       		.byte	0
 3835 010a 00       		.byte	0
 3836 010b 16       		.uleb128 0x16
 3837 010c 0D       		.uleb128 0xd
 3838 010d 00       		.byte	0
 3839 010e 03       		.uleb128 0x3
 3840 010f 0E       		.uleb128 0xe
 3841 0110 3A       		.uleb128 0x3a
 3842 0111 0B       		.uleb128 0xb
 3843 0112 3B       		.uleb128 0x3b
 3844 0113 0B       		.uleb128 0xb
 3845 0114 49       		.uleb128 0x49
 3846 0115 13       		.uleb128 0x13
 3847 0116 00       		.byte	0
 3848 0117 00       		.byte	0
 3849 0118 17       		.uleb128 0x17
 3850 0119 0F       		.uleb128 0xf
 3851 011a 00       		.byte	0
 3852 011b 0B       		.uleb128 0xb
 3853 011c 0B       		.uleb128 0xb
 3854 011d 00       		.byte	0
 3855 011e 00       		.byte	0
 3856 011f 18       		.uleb128 0x18
 3857 0120 0F       		.uleb128 0xf
 3858 0121 00       		.byte	0
 3859 0122 0B       		.uleb128 0xb
 3860 0123 0B       		.uleb128 0xb
 3861 0124 49       		.uleb128 0x49
 3862 0125 13       		.uleb128 0x13
 3863 0126 00       		.byte	0
 3864 0127 00       		.byte	0
 3865 0128 19       		.uleb128 0x19
 3866 0129 13       		.uleb128 0x13
 3867 012a 01       		.byte	0x1
 3868 012b 03       		.uleb128 0x3
 3869 012c 0E       		.uleb128 0xe
 3870 012d 0B       		.uleb128 0xb
 3871 012e 0B       		.uleb128 0xb
 3872 012f 3A       		.uleb128 0x3a
 3873 0130 0B       		.uleb128 0xb
 3874 0131 3B       		.uleb128 0x3b
 3875 0132 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwtW74c.s 			page 95


 3876 0133 01       		.uleb128 0x1
 3877 0134 13       		.uleb128 0x13
 3878 0135 00       		.byte	0
 3879 0136 00       		.byte	0
 3880 0137 1A       		.uleb128 0x1a
 3881 0138 0D       		.uleb128 0xd
 3882 0139 00       		.byte	0
 3883 013a 03       		.uleb128 0x3
 3884 013b 08       		.uleb128 0x8
 3885 013c 3A       		.uleb128 0x3a
 3886 013d 0B       		.uleb128 0xb
 3887 013e 3B       		.uleb128 0x3b
 3888 013f 0B       		.uleb128 0xb
 3889 0140 49       		.uleb128 0x49
 3890 0141 13       		.uleb128 0x13
 3891 0142 38       		.uleb128 0x38
 3892 0143 0B       		.uleb128 0xb
 3893 0144 00       		.byte	0
 3894 0145 00       		.byte	0
 3895 0146 1B       		.uleb128 0x1b
 3896 0147 13       		.uleb128 0x13
 3897 0148 01       		.byte	0x1
 3898 0149 03       		.uleb128 0x3
 3899 014a 0E       		.uleb128 0xe
 3900 014b 0B       		.uleb128 0xb
 3901 014c 05       		.uleb128 0x5
 3902 014d 3A       		.uleb128 0x3a
 3903 014e 0B       		.uleb128 0xb
 3904 014f 3B       		.uleb128 0x3b
 3905 0150 0B       		.uleb128 0xb
 3906 0151 01       		.uleb128 0x1
 3907 0152 13       		.uleb128 0x13
 3908 0153 00       		.byte	0
 3909 0154 00       		.byte	0
 3910 0155 1C       		.uleb128 0x1c
 3911 0156 0D       		.uleb128 0xd
 3912 0157 00       		.byte	0
 3913 0158 03       		.uleb128 0x3
 3914 0159 0E       		.uleb128 0xe
 3915 015a 3A       		.uleb128 0x3a
 3916 015b 0B       		.uleb128 0xb
 3917 015c 3B       		.uleb128 0x3b
 3918 015d 0B       		.uleb128 0xb
 3919 015e 49       		.uleb128 0x49
 3920 015f 13       		.uleb128 0x13
 3921 0160 38       		.uleb128 0x38
 3922 0161 05       		.uleb128 0x5
 3923 0162 00       		.byte	0
 3924 0163 00       		.byte	0
 3925 0164 1D       		.uleb128 0x1d
 3926 0165 15       		.uleb128 0x15
 3927 0166 00       		.byte	0
 3928 0167 27       		.uleb128 0x27
 3929 0168 19       		.uleb128 0x19
 3930 0169 00       		.byte	0
 3931 016a 00       		.byte	0
 3932 016b 1E       		.uleb128 0x1e
ARM GAS  /tmp/ccwtW74c.s 			page 96


 3933 016c 15       		.uleb128 0x15
 3934 016d 01       		.byte	0x1
 3935 016e 27       		.uleb128 0x27
 3936 016f 19       		.uleb128 0x19
 3937 0170 49       		.uleb128 0x49
 3938 0171 13       		.uleb128 0x13
 3939 0172 01       		.uleb128 0x1
 3940 0173 13       		.uleb128 0x13
 3941 0174 00       		.byte	0
 3942 0175 00       		.byte	0
 3943 0176 1F       		.uleb128 0x1f
 3944 0177 05       		.uleb128 0x5
 3945 0178 00       		.byte	0
 3946 0179 49       		.uleb128 0x49
 3947 017a 13       		.uleb128 0x13
 3948 017b 00       		.byte	0
 3949 017c 00       		.byte	0
 3950 017d 20       		.uleb128 0x20
 3951 017e 13       		.uleb128 0x13
 3952 017f 01       		.byte	0x1
 3953 0180 03       		.uleb128 0x3
 3954 0181 0E       		.uleb128 0xe
 3955 0182 0B       		.uleb128 0xb
 3956 0183 05       		.uleb128 0x5
 3957 0184 3A       		.uleb128 0x3a
 3958 0185 0B       		.uleb128 0xb
 3959 0186 3B       		.uleb128 0x3b
 3960 0187 05       		.uleb128 0x5
 3961 0188 01       		.uleb128 0x1
 3962 0189 13       		.uleb128 0x13
 3963 018a 00       		.byte	0
 3964 018b 00       		.byte	0
 3965 018c 21       		.uleb128 0x21
 3966 018d 0D       		.uleb128 0xd
 3967 018e 00       		.byte	0
 3968 018f 03       		.uleb128 0x3
 3969 0190 0E       		.uleb128 0xe
 3970 0191 3A       		.uleb128 0x3a
 3971 0192 0B       		.uleb128 0xb
 3972 0193 3B       		.uleb128 0x3b
 3973 0194 05       		.uleb128 0x5
 3974 0195 49       		.uleb128 0x49
 3975 0196 13       		.uleb128 0x13
 3976 0197 38       		.uleb128 0x38
 3977 0198 05       		.uleb128 0x5
 3978 0199 00       		.byte	0
 3979 019a 00       		.byte	0
 3980 019b 22       		.uleb128 0x22
 3981 019c 13       		.uleb128 0x13
 3982 019d 01       		.byte	0x1
 3983 019e 03       		.uleb128 0x3
 3984 019f 0E       		.uleb128 0xe
 3985 01a0 0B       		.uleb128 0xb
 3986 01a1 0B       		.uleb128 0xb
 3987 01a2 3A       		.uleb128 0x3a
 3988 01a3 0B       		.uleb128 0xb
 3989 01a4 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccwtW74c.s 			page 97


 3990 01a5 05       		.uleb128 0x5
 3991 01a6 01       		.uleb128 0x1
 3992 01a7 13       		.uleb128 0x13
 3993 01a8 00       		.byte	0
 3994 01a9 00       		.byte	0
 3995 01aa 23       		.uleb128 0x23
 3996 01ab 17       		.uleb128 0x17
 3997 01ac 01       		.byte	0x1
 3998 01ad 0B       		.uleb128 0xb
 3999 01ae 0B       		.uleb128 0xb
 4000 01af 3A       		.uleb128 0x3a
 4001 01b0 0B       		.uleb128 0xb
 4002 01b1 3B       		.uleb128 0x3b
 4003 01b2 05       		.uleb128 0x5
 4004 01b3 01       		.uleb128 0x1
 4005 01b4 13       		.uleb128 0x13
 4006 01b5 00       		.byte	0
 4007 01b6 00       		.byte	0
 4008 01b7 24       		.uleb128 0x24
 4009 01b8 0D       		.uleb128 0xd
 4010 01b9 00       		.byte	0
 4011 01ba 03       		.uleb128 0x3
 4012 01bb 0E       		.uleb128 0xe
 4013 01bc 3A       		.uleb128 0x3a
 4014 01bd 0B       		.uleb128 0xb
 4015 01be 3B       		.uleb128 0x3b
 4016 01bf 05       		.uleb128 0x5
 4017 01c0 49       		.uleb128 0x49
 4018 01c1 13       		.uleb128 0x13
 4019 01c2 00       		.byte	0
 4020 01c3 00       		.byte	0
 4021 01c4 25       		.uleb128 0x25
 4022 01c5 15       		.uleb128 0x15
 4023 01c6 01       		.byte	0x1
 4024 01c7 27       		.uleb128 0x27
 4025 01c8 19       		.uleb128 0x19
 4026 01c9 01       		.uleb128 0x1
 4027 01ca 13       		.uleb128 0x13
 4028 01cb 00       		.byte	0
 4029 01cc 00       		.byte	0
 4030 01cd 26       		.uleb128 0x26
 4031 01ce 04       		.uleb128 0x4
 4032 01cf 01       		.byte	0x1
 4033 01d0 03       		.uleb128 0x3
 4034 01d1 0E       		.uleb128 0xe
 4035 01d2 0B       		.uleb128 0xb
 4036 01d3 0B       		.uleb128 0xb
 4037 01d4 49       		.uleb128 0x49
 4038 01d5 13       		.uleb128 0x13
 4039 01d6 3A       		.uleb128 0x3a
 4040 01d7 0B       		.uleb128 0xb
 4041 01d8 3B       		.uleb128 0x3b
 4042 01d9 05       		.uleb128 0x5
 4043 01da 01       		.uleb128 0x1
 4044 01db 13       		.uleb128 0x13
 4045 01dc 00       		.byte	0
 4046 01dd 00       		.byte	0
ARM GAS  /tmp/ccwtW74c.s 			page 98


 4047 01de 27       		.uleb128 0x27
 4048 01df 28       		.uleb128 0x28
 4049 01e0 00       		.byte	0
 4050 01e1 03       		.uleb128 0x3
 4051 01e2 0E       		.uleb128 0xe
 4052 01e3 1C       		.uleb128 0x1c
 4053 01e4 0D       		.uleb128 0xd
 4054 01e5 00       		.byte	0
 4055 01e6 00       		.byte	0
 4056 01e7 28       		.uleb128 0x28
 4057 01e8 21       		.uleb128 0x21
 4058 01e9 00       		.byte	0
 4059 01ea 00       		.byte	0
 4060 01eb 00       		.byte	0
 4061 01ec 29       		.uleb128 0x29
 4062 01ed 34       		.uleb128 0x34
 4063 01ee 00       		.byte	0
 4064 01ef 03       		.uleb128 0x3
 4065 01f0 0E       		.uleb128 0xe
 4066 01f1 3A       		.uleb128 0x3a
 4067 01f2 0B       		.uleb128 0xb
 4068 01f3 3B       		.uleb128 0x3b
 4069 01f4 0B       		.uleb128 0xb
 4070 01f5 49       		.uleb128 0x49
 4071 01f6 13       		.uleb128 0x13
 4072 01f7 02       		.uleb128 0x2
 4073 01f8 18       		.uleb128 0x18
 4074 01f9 00       		.byte	0
 4075 01fa 00       		.byte	0
 4076 01fb 2A       		.uleb128 0x2a
 4077 01fc 2E       		.uleb128 0x2e
 4078 01fd 01       		.byte	0x1
 4079 01fe 3F       		.uleb128 0x3f
 4080 01ff 19       		.uleb128 0x19
 4081 0200 03       		.uleb128 0x3
 4082 0201 0E       		.uleb128 0xe
 4083 0202 3A       		.uleb128 0x3a
 4084 0203 0B       		.uleb128 0xb
 4085 0204 3B       		.uleb128 0x3b
 4086 0205 05       		.uleb128 0x5
 4087 0206 27       		.uleb128 0x27
 4088 0207 19       		.uleb128 0x19
 4089 0208 11       		.uleb128 0x11
 4090 0209 01       		.uleb128 0x1
 4091 020a 12       		.uleb128 0x12
 4092 020b 06       		.uleb128 0x6
 4093 020c 40       		.uleb128 0x40
 4094 020d 18       		.uleb128 0x18
 4095 020e 9742     		.uleb128 0x2117
 4096 0210 19       		.uleb128 0x19
 4097 0211 01       		.uleb128 0x1
 4098 0212 13       		.uleb128 0x13
 4099 0213 00       		.byte	0
 4100 0214 00       		.byte	0
 4101 0215 2B       		.uleb128 0x2b
 4102 0216 05       		.uleb128 0x5
 4103 0217 00       		.byte	0
ARM GAS  /tmp/ccwtW74c.s 			page 99


 4104 0218 03       		.uleb128 0x3
 4105 0219 0E       		.uleb128 0xe
 4106 021a 3A       		.uleb128 0x3a
 4107 021b 0B       		.uleb128 0xb
 4108 021c 3B       		.uleb128 0x3b
 4109 021d 05       		.uleb128 0x5
 4110 021e 49       		.uleb128 0x49
 4111 021f 13       		.uleb128 0x13
 4112 0220 02       		.uleb128 0x2
 4113 0221 18       		.uleb128 0x18
 4114 0222 00       		.byte	0
 4115 0223 00       		.byte	0
 4116 0224 2C       		.uleb128 0x2c
 4117 0225 2E       		.uleb128 0x2e
 4118 0226 01       		.byte	0x1
 4119 0227 3F       		.uleb128 0x3f
 4120 0228 19       		.uleb128 0x19
 4121 0229 03       		.uleb128 0x3
 4122 022a 0E       		.uleb128 0xe
 4123 022b 3A       		.uleb128 0x3a
 4124 022c 0B       		.uleb128 0xb
 4125 022d 3B       		.uleb128 0x3b
 4126 022e 05       		.uleb128 0x5
 4127 022f 27       		.uleb128 0x27
 4128 0230 19       		.uleb128 0x19
 4129 0231 49       		.uleb128 0x49
 4130 0232 13       		.uleb128 0x13
 4131 0233 11       		.uleb128 0x11
 4132 0234 01       		.uleb128 0x1
 4133 0235 12       		.uleb128 0x12
 4134 0236 06       		.uleb128 0x6
 4135 0237 40       		.uleb128 0x40
 4136 0238 18       		.uleb128 0x18
 4137 0239 9742     		.uleb128 0x2117
 4138 023b 19       		.uleb128 0x19
 4139 023c 01       		.uleb128 0x1
 4140 023d 13       		.uleb128 0x13
 4141 023e 00       		.byte	0
 4142 023f 00       		.byte	0
 4143 0240 2D       		.uleb128 0x2d
 4144 0241 05       		.uleb128 0x5
 4145 0242 00       		.byte	0
 4146 0243 03       		.uleb128 0x3
 4147 0244 0E       		.uleb128 0xe
 4148 0245 3A       		.uleb128 0x3a
 4149 0246 0B       		.uleb128 0xb
 4150 0247 3B       		.uleb128 0x3b
 4151 0248 05       		.uleb128 0x5
 4152 0249 49       		.uleb128 0x49
 4153 024a 13       		.uleb128 0x13
 4154 024b 02       		.uleb128 0x2
 4155 024c 17       		.uleb128 0x17
 4156 024d 00       		.byte	0
 4157 024e 00       		.byte	0
 4158 024f 2E       		.uleb128 0x2e
 4159 0250 34       		.uleb128 0x34
 4160 0251 00       		.byte	0
ARM GAS  /tmp/ccwtW74c.s 			page 100


 4161 0252 03       		.uleb128 0x3
 4162 0253 0E       		.uleb128 0xe
 4163 0254 3A       		.uleb128 0x3a
 4164 0255 0B       		.uleb128 0xb
 4165 0256 3B       		.uleb128 0x3b
 4166 0257 05       		.uleb128 0x5
 4167 0258 49       		.uleb128 0x49
 4168 0259 13       		.uleb128 0x13
 4169 025a 02       		.uleb128 0x2
 4170 025b 17       		.uleb128 0x17
 4171 025c 00       		.byte	0
 4172 025d 00       		.byte	0
 4173 025e 2F       		.uleb128 0x2f
 4174 025f 2E       		.uleb128 0x2e
 4175 0260 00       		.byte	0
 4176 0261 3F       		.uleb128 0x3f
 4177 0262 19       		.uleb128 0x19
 4178 0263 03       		.uleb128 0x3
 4179 0264 0E       		.uleb128 0xe
 4180 0265 3A       		.uleb128 0x3a
 4181 0266 0B       		.uleb128 0xb
 4182 0267 3B       		.uleb128 0x3b
 4183 0268 05       		.uleb128 0x5
 4184 0269 27       		.uleb128 0x27
 4185 026a 19       		.uleb128 0x19
 4186 026b 11       		.uleb128 0x11
 4187 026c 01       		.uleb128 0x1
 4188 026d 12       		.uleb128 0x12
 4189 026e 06       		.uleb128 0x6
 4190 026f 40       		.uleb128 0x40
 4191 0270 18       		.uleb128 0x18
 4192 0271 9742     		.uleb128 0x2117
 4193 0273 19       		.uleb128 0x19
 4194 0274 00       		.byte	0
 4195 0275 00       		.byte	0
 4196 0276 30       		.uleb128 0x30
 4197 0277 34       		.uleb128 0x34
 4198 0278 00       		.byte	0
 4199 0279 03       		.uleb128 0x3
 4200 027a 08       		.uleb128 0x8
 4201 027b 3A       		.uleb128 0x3a
 4202 027c 0B       		.uleb128 0xb
 4203 027d 3B       		.uleb128 0x3b
 4204 027e 05       		.uleb128 0x5
 4205 027f 49       		.uleb128 0x49
 4206 0280 13       		.uleb128 0x13
 4207 0281 02       		.uleb128 0x2
 4208 0282 17       		.uleb128 0x17
 4209 0283 00       		.byte	0
 4210 0284 00       		.byte	0
 4211 0285 31       		.uleb128 0x31
 4212 0286 2E       		.uleb128 0x2e
 4213 0287 00       		.byte	0
 4214 0288 3F       		.uleb128 0x3f
 4215 0289 19       		.uleb128 0x19
 4216 028a 03       		.uleb128 0x3
 4217 028b 0E       		.uleb128 0xe
ARM GAS  /tmp/ccwtW74c.s 			page 101


 4218 028c 3A       		.uleb128 0x3a
 4219 028d 0B       		.uleb128 0xb
 4220 028e 3B       		.uleb128 0x3b
 4221 028f 05       		.uleb128 0x5
 4222 0290 27       		.uleb128 0x27
 4223 0291 19       		.uleb128 0x19
 4224 0292 49       		.uleb128 0x49
 4225 0293 13       		.uleb128 0x13
 4226 0294 11       		.uleb128 0x11
 4227 0295 01       		.uleb128 0x1
 4228 0296 12       		.uleb128 0x12
 4229 0297 06       		.uleb128 0x6
 4230 0298 40       		.uleb128 0x40
 4231 0299 18       		.uleb128 0x18
 4232 029a 9742     		.uleb128 0x2117
 4233 029c 19       		.uleb128 0x19
 4234 029d 00       		.byte	0
 4235 029e 00       		.byte	0
 4236 029f 32       		.uleb128 0x32
 4237 02a0 34       		.uleb128 0x34
 4238 02a1 00       		.byte	0
 4239 02a2 03       		.uleb128 0x3
 4240 02a3 0E       		.uleb128 0xe
 4241 02a4 3A       		.uleb128 0x3a
 4242 02a5 0B       		.uleb128 0xb
 4243 02a6 3B       		.uleb128 0x3b
 4244 02a7 05       		.uleb128 0x5
 4245 02a8 49       		.uleb128 0x49
 4246 02a9 13       		.uleb128 0x13
 4247 02aa 02       		.uleb128 0x2
 4248 02ab 18       		.uleb128 0x18
 4249 02ac 00       		.byte	0
 4250 02ad 00       		.byte	0
 4251 02ae 33       		.uleb128 0x33
 4252 02af 898201   		.uleb128 0x4109
 4253 02b2 01       		.byte	0x1
 4254 02b3 11       		.uleb128 0x11
 4255 02b4 01       		.uleb128 0x1
 4256 02b5 31       		.uleb128 0x31
 4257 02b6 13       		.uleb128 0x13
 4258 02b7 01       		.uleb128 0x1
 4259 02b8 13       		.uleb128 0x13
 4260 02b9 00       		.byte	0
 4261 02ba 00       		.byte	0
 4262 02bb 34       		.uleb128 0x34
 4263 02bc 8A8201   		.uleb128 0x410a
 4264 02bf 00       		.byte	0
 4265 02c0 02       		.uleb128 0x2
 4266 02c1 18       		.uleb128 0x18
 4267 02c2 9142     		.uleb128 0x2111
 4268 02c4 18       		.uleb128 0x18
 4269 02c5 00       		.byte	0
 4270 02c6 00       		.byte	0
 4271 02c7 35       		.uleb128 0x35
 4272 02c8 898201   		.uleb128 0x4109
 4273 02cb 01       		.byte	0x1
 4274 02cc 11       		.uleb128 0x11
ARM GAS  /tmp/ccwtW74c.s 			page 102


 4275 02cd 01       		.uleb128 0x1
 4276 02ce 31       		.uleb128 0x31
 4277 02cf 13       		.uleb128 0x13
 4278 02d0 00       		.byte	0
 4279 02d1 00       		.byte	0
 4280 02d2 00       		.byte	0
 4281              		.section	.debug_loc,"",%progbits
 4282              	.Ldebug_loc0:
 4283              	.LLST31:
 4284 0000 74030000 		.4byte	.LVL116-.Ltext0
 4285 0004 7E030000 		.4byte	.LVL118-.Ltext0
 4286 0008 0100     		.2byte	0x1
 4287 000a 50       		.byte	0x50
 4288 000b 7E030000 		.4byte	.LVL118-.Ltext0
 4289 000f 88030000 		.4byte	.LFE93-.Ltext0
 4290 0013 0400     		.2byte	0x4
 4291 0015 F3       		.byte	0xf3
 4292 0016 01       		.uleb128 0x1
 4293 0017 50       		.byte	0x50
 4294 0018 9F       		.byte	0x9f
 4295 0019 00000000 		.4byte	0
 4296 001d 00000000 		.4byte	0
 4297              	.LLST32:
 4298 0021 74030000 		.4byte	.LVL116-.Ltext0
 4299 0025 78030000 		.4byte	.LVL117-.Ltext0
 4300 0029 0200     		.2byte	0x2
 4301 002b 30       		.byte	0x30
 4302 002c 9F       		.byte	0x9f
 4303 002d 78030000 		.4byte	.LVL117-.Ltext0
 4304 0031 7E030000 		.4byte	.LVL118-.Ltext0
 4305 0035 0B00     		.2byte	0xb
 4306 0037 70       		.byte	0x70
 4307 0038 00       		.sleb128 0
 4308 0039 08       		.byte	0x8
 4309 003a FF       		.byte	0xff
 4310 003b 1A       		.byte	0x1a
 4311 003c 73       		.byte	0x73
 4312 003d 00       		.sleb128 0
 4313 003e 1A       		.byte	0x1a
 4314 003f 30       		.byte	0x30
 4315 0040 2E       		.byte	0x2e
 4316 0041 9F       		.byte	0x9f
 4317 0042 7E030000 		.4byte	.LVL118-.Ltext0
 4318 0046 88030000 		.4byte	.LFE93-.Ltext0
 4319 004a 0C00     		.2byte	0xc
 4320 004c F3       		.byte	0xf3
 4321 004d 01       		.uleb128 0x1
 4322 004e 50       		.byte	0x50
 4323 004f 08       		.byte	0x8
 4324 0050 FF       		.byte	0xff
 4325 0051 1A       		.byte	0x1a
 4326 0052 73       		.byte	0x73
 4327 0053 00       		.sleb128 0
 4328 0054 1A       		.byte	0x1a
 4329 0055 30       		.byte	0x30
 4330 0056 2E       		.byte	0x2e
 4331 0057 9F       		.byte	0x9f
ARM GAS  /tmp/ccwtW74c.s 			page 103


 4332 0058 00000000 		.4byte	0
 4333 005c 00000000 		.4byte	0
 4334              	.LLST25:
 4335 0060 08030000 		.4byte	.LVL101-.Ltext0
 4336 0064 1C030000 		.4byte	.LVL106-.Ltext0
 4337 0068 0100     		.2byte	0x1
 4338 006a 50       		.byte	0x50
 4339 006b 1C030000 		.4byte	.LVL106-.Ltext0
 4340 006f 26030000 		.4byte	.LVL107-.Ltext0
 4341 0073 0400     		.2byte	0x4
 4342 0075 F3       		.byte	0xf3
 4343 0076 01       		.uleb128 0x1
 4344 0077 50       		.byte	0x50
 4345 0078 9F       		.byte	0x9f
 4346 0079 26030000 		.4byte	.LVL107-.Ltext0
 4347 007d 30030000 		.4byte	.LFE91-.Ltext0
 4348 0081 0100     		.2byte	0x1
 4349 0083 50       		.byte	0x50
 4350 0084 00000000 		.4byte	0
 4351 0088 00000000 		.4byte	0
 4352              	.LLST26:
 4353 008c 08030000 		.4byte	.LVL101-.Ltext0
 4354 0090 0A030000 		.4byte	.LVL102-.Ltext0
 4355 0094 0200     		.2byte	0x2
 4356 0096 30       		.byte	0x30
 4357 0097 9F       		.byte	0x9f
 4358 0098 0A030000 		.4byte	.LVL102-.Ltext0
 4359 009c 12030000 		.4byte	.LVL103-.Ltext0
 4360 00a0 0100     		.2byte	0x1
 4361 00a2 53       		.byte	0x53
 4362 00a3 12030000 		.4byte	.LVL103-.Ltext0
 4363 00a7 18030000 		.4byte	.LVL105-.Ltext0
 4364 00ab 0500     		.2byte	0x5
 4365 00ad 70       		.byte	0x70
 4366 00ae 00       		.sleb128 0
 4367 00af 35       		.byte	0x35
 4368 00b0 25       		.byte	0x25
 4369 00b1 9F       		.byte	0x9f
 4370 00b2 18030000 		.4byte	.LVL105-.Ltext0
 4371 00b6 1C030000 		.4byte	.LVL106-.Ltext0
 4372 00ba 0800     		.2byte	0x8
 4373 00bc 70       		.byte	0x70
 4374 00bd 00       		.sleb128 0
 4375 00be 4F       		.byte	0x4f
 4376 00bf 1A       		.byte	0x1a
 4377 00c0 08       		.byte	0x8
 4378 00c1 FF       		.byte	0xff
 4379 00c2 1A       		.byte	0x1a
 4380 00c3 9F       		.byte	0x9f
 4381 00c4 1C030000 		.4byte	.LVL106-.Ltext0
 4382 00c8 26030000 		.4byte	.LVL107-.Ltext0
 4383 00cc 0900     		.2byte	0x9
 4384 00ce F3       		.byte	0xf3
 4385 00cf 01       		.uleb128 0x1
 4386 00d0 50       		.byte	0x50
 4387 00d1 4F       		.byte	0x4f
 4388 00d2 1A       		.byte	0x1a
ARM GAS  /tmp/ccwtW74c.s 			page 104


 4389 00d3 08       		.byte	0x8
 4390 00d4 FF       		.byte	0xff
 4391 00d5 1A       		.byte	0x1a
 4392 00d6 9F       		.byte	0x9f
 4393 00d7 26030000 		.4byte	.LVL107-.Ltext0
 4394 00db 28030000 		.4byte	.LVL108-.Ltext0
 4395 00df 0100     		.2byte	0x1
 4396 00e1 53       		.byte	0x53
 4397 00e2 28030000 		.4byte	.LVL108-.Ltext0
 4398 00e6 30030000 		.4byte	.LFE91-.Ltext0
 4399 00ea 0500     		.2byte	0x5
 4400 00ec 70       		.byte	0x70
 4401 00ed 00       		.sleb128 0
 4402 00ee 35       		.byte	0x35
 4403 00ef 25       		.byte	0x25
 4404 00f0 9F       		.byte	0x9f
 4405 00f1 00000000 		.4byte	0
 4406 00f5 00000000 		.4byte	0
 4407              	.LLST27:
 4408 00f9 08030000 		.4byte	.LVL101-.Ltext0
 4409 00fd 16030000 		.4byte	.LVL104-.Ltext0
 4410 0101 0200     		.2byte	0x2
 4411 0103 30       		.byte	0x30
 4412 0104 9F       		.byte	0x9f
 4413 0105 16030000 		.4byte	.LVL104-.Ltext0
 4414 0109 26030000 		.4byte	.LVL107-.Ltext0
 4415 010d 0100     		.2byte	0x1
 4416 010f 53       		.byte	0x53
 4417 0110 26030000 		.4byte	.LVL107-.Ltext0
 4418 0114 2A030000 		.4byte	.LVL109-.Ltext0
 4419 0118 0200     		.2byte	0x2
 4420 011a 30       		.byte	0x30
 4421 011b 9F       		.byte	0x9f
 4422 011c 2A030000 		.4byte	.LVL109-.Ltext0
 4423 0120 30030000 		.4byte	.LFE91-.Ltext0
 4424 0124 0100     		.2byte	0x1
 4425 0126 53       		.byte	0x53
 4426 0127 00000000 		.4byte	0
 4427 012b 00000000 		.4byte	0
 4428              	.LLST28:
 4429 012f 08030000 		.4byte	.LVL101-.Ltext0
 4430 0133 18030000 		.4byte	.LVL105-.Ltext0
 4431 0137 0200     		.2byte	0x2
 4432 0139 30       		.byte	0x30
 4433 013a 9F       		.byte	0x9f
 4434 013b 18030000 		.4byte	.LVL105-.Ltext0
 4435 013f 1C030000 		.4byte	.LVL106-.Ltext0
 4436 0143 0D00     		.2byte	0xd
 4437 0145 73       		.byte	0x73
 4438 0146 00       		.sleb128 0
 4439 0147 70       		.byte	0x70
 4440 0148 00       		.sleb128 0
 4441 0149 4F       		.byte	0x4f
 4442 014a 1A       		.byte	0x1a
 4443 014b 08       		.byte	0x8
 4444 014c FF       		.byte	0xff
 4445 014d 1A       		.byte	0x1a
ARM GAS  /tmp/ccwtW74c.s 			page 105


 4446 014e 25       		.byte	0x25
 4447 014f 31       		.byte	0x31
 4448 0150 1A       		.byte	0x1a
 4449 0151 9F       		.byte	0x9f
 4450 0152 1C030000 		.4byte	.LVL106-.Ltext0
 4451 0156 26030000 		.4byte	.LVL107-.Ltext0
 4452 015a 0E00     		.2byte	0xe
 4453 015c 73       		.byte	0x73
 4454 015d 00       		.sleb128 0
 4455 015e F3       		.byte	0xf3
 4456 015f 01       		.uleb128 0x1
 4457 0160 50       		.byte	0x50
 4458 0161 4F       		.byte	0x4f
 4459 0162 1A       		.byte	0x1a
 4460 0163 08       		.byte	0x8
 4461 0164 FF       		.byte	0xff
 4462 0165 1A       		.byte	0x1a
 4463 0166 25       		.byte	0x25
 4464 0167 31       		.byte	0x31
 4465 0168 1A       		.byte	0x1a
 4466 0169 9F       		.byte	0x9f
 4467 016a 26030000 		.4byte	.LVL107-.Ltext0
 4468 016e 30030000 		.4byte	.LFE91-.Ltext0
 4469 0172 0200     		.2byte	0x2
 4470 0174 30       		.byte	0x30
 4471 0175 9F       		.byte	0x9f
 4472 0176 00000000 		.4byte	0
 4473 017a 00000000 		.4byte	0
 4474              	.LLST24:
 4475 017e C8020000 		.4byte	.LVL94-.Ltext0
 4476 0182 D2020000 		.4byte	.LVL95-.Ltext0
 4477 0186 0100     		.2byte	0x1
 4478 0188 50       		.byte	0x50
 4479 0189 D2020000 		.4byte	.LVL95-.Ltext0
 4480 018d D6020000 		.4byte	.LVL96-.Ltext0
 4481 0191 0400     		.2byte	0x4
 4482 0193 F3       		.byte	0xf3
 4483 0194 01       		.uleb128 0x1
 4484 0195 50       		.byte	0x50
 4485 0196 9F       		.byte	0x9f
 4486 0197 D6020000 		.4byte	.LVL96-.Ltext0
 4487 019b DC020000 		.4byte	.LVL97-.Ltext0
 4488 019f 0100     		.2byte	0x1
 4489 01a1 50       		.byte	0x50
 4490 01a2 DC020000 		.4byte	.LVL97-.Ltext0
 4491 01a6 E4020000 		.4byte	.LFE87-.Ltext0
 4492 01aa 0400     		.2byte	0x4
 4493 01ac F3       		.byte	0xf3
 4494 01ad 01       		.uleb128 0x1
 4495 01ae 50       		.byte	0x50
 4496 01af 9F       		.byte	0x9f
 4497 01b0 00000000 		.4byte	0
 4498 01b4 00000000 		.4byte	0
 4499              	.LLST23:
 4500 01b8 AC020000 		.4byte	.LVL90-.Ltext0
 4501 01bc B6020000 		.4byte	.LVL91-.Ltext0
 4502 01c0 0100     		.2byte	0x1
ARM GAS  /tmp/ccwtW74c.s 			page 106


 4503 01c2 50       		.byte	0x50
 4504 01c3 B6020000 		.4byte	.LVL91-.Ltext0
 4505 01c7 BA020000 		.4byte	.LVL92-.Ltext0
 4506 01cb 0400     		.2byte	0x4
 4507 01cd F3       		.byte	0xf3
 4508 01ce 01       		.uleb128 0x1
 4509 01cf 50       		.byte	0x50
 4510 01d0 9F       		.byte	0x9f
 4511 01d1 BA020000 		.4byte	.LVL92-.Ltext0
 4512 01d5 C0020000 		.4byte	.LVL93-.Ltext0
 4513 01d9 0100     		.2byte	0x1
 4514 01db 50       		.byte	0x50
 4515 01dc C0020000 		.4byte	.LVL93-.Ltext0
 4516 01e0 C8020000 		.4byte	.LFE86-.Ltext0
 4517 01e4 0400     		.2byte	0x4
 4518 01e6 F3       		.byte	0xf3
 4519 01e7 01       		.uleb128 0x1
 4520 01e8 50       		.byte	0x50
 4521 01e9 9F       		.byte	0x9f
 4522 01ea 00000000 		.4byte	0
 4523 01ee 00000000 		.4byte	0
 4524              	.LLST22:
 4525 01f2 90020000 		.4byte	.LVL86-.Ltext0
 4526 01f6 9A020000 		.4byte	.LVL87-.Ltext0
 4527 01fa 0100     		.2byte	0x1
 4528 01fc 50       		.byte	0x50
 4529 01fd 9A020000 		.4byte	.LVL87-.Ltext0
 4530 0201 9E020000 		.4byte	.LVL88-.Ltext0
 4531 0205 0400     		.2byte	0x4
 4532 0207 F3       		.byte	0xf3
 4533 0208 01       		.uleb128 0x1
 4534 0209 50       		.byte	0x50
 4535 020a 9F       		.byte	0x9f
 4536 020b 9E020000 		.4byte	.LVL88-.Ltext0
 4537 020f A4020000 		.4byte	.LVL89-.Ltext0
 4538 0213 0100     		.2byte	0x1
 4539 0215 50       		.byte	0x50
 4540 0216 A4020000 		.4byte	.LVL89-.Ltext0
 4541 021a AC020000 		.4byte	.LFE85-.Ltext0
 4542 021e 0400     		.2byte	0x4
 4543 0220 F3       		.byte	0xf3
 4544 0221 01       		.uleb128 0x1
 4545 0222 50       		.byte	0x50
 4546 0223 9F       		.byte	0x9f
 4547 0224 00000000 		.4byte	0
 4548 0228 00000000 		.4byte	0
 4549              	.LLST21:
 4550 022c 74020000 		.4byte	.LVL82-.Ltext0
 4551 0230 7E020000 		.4byte	.LVL83-.Ltext0
 4552 0234 0100     		.2byte	0x1
 4553 0236 50       		.byte	0x50
 4554 0237 7E020000 		.4byte	.LVL83-.Ltext0
 4555 023b 82020000 		.4byte	.LVL84-.Ltext0
 4556 023f 0400     		.2byte	0x4
 4557 0241 F3       		.byte	0xf3
 4558 0242 01       		.uleb128 0x1
 4559 0243 50       		.byte	0x50
ARM GAS  /tmp/ccwtW74c.s 			page 107


 4560 0244 9F       		.byte	0x9f
 4561 0245 82020000 		.4byte	.LVL84-.Ltext0
 4562 0249 88020000 		.4byte	.LVL85-.Ltext0
 4563 024d 0100     		.2byte	0x1
 4564 024f 50       		.byte	0x50
 4565 0250 88020000 		.4byte	.LVL85-.Ltext0
 4566 0254 90020000 		.4byte	.LFE84-.Ltext0
 4567 0258 0400     		.2byte	0x4
 4568 025a F3       		.byte	0xf3
 4569 025b 01       		.uleb128 0x1
 4570 025c 50       		.byte	0x50
 4571 025d 9F       		.byte	0x9f
 4572 025e 00000000 		.4byte	0
 4573 0262 00000000 		.4byte	0
 4574              	.LLST20:
 4575 0266 58020000 		.4byte	.LVL78-.Ltext0
 4576 026a 62020000 		.4byte	.LVL79-.Ltext0
 4577 026e 0100     		.2byte	0x1
 4578 0270 50       		.byte	0x50
 4579 0271 62020000 		.4byte	.LVL79-.Ltext0
 4580 0275 66020000 		.4byte	.LVL80-.Ltext0
 4581 0279 0400     		.2byte	0x4
 4582 027b F3       		.byte	0xf3
 4583 027c 01       		.uleb128 0x1
 4584 027d 50       		.byte	0x50
 4585 027e 9F       		.byte	0x9f
 4586 027f 66020000 		.4byte	.LVL80-.Ltext0
 4587 0283 6C020000 		.4byte	.LVL81-.Ltext0
 4588 0287 0100     		.2byte	0x1
 4589 0289 50       		.byte	0x50
 4590 028a 6C020000 		.4byte	.LVL81-.Ltext0
 4591 028e 74020000 		.4byte	.LFE83-.Ltext0
 4592 0292 0400     		.2byte	0x4
 4593 0294 F3       		.byte	0xf3
 4594 0295 01       		.uleb128 0x1
 4595 0296 50       		.byte	0x50
 4596 0297 9F       		.byte	0x9f
 4597 0298 00000000 		.4byte	0
 4598 029c 00000000 		.4byte	0
 4599              	.LLST16:
 4600 02a0 AA010000 		.4byte	.LVL43-.Ltext0
 4601 02a4 AE010000 		.4byte	.LVL44-.Ltext0
 4602 02a8 0200     		.2byte	0x2
 4603 02aa 30       		.byte	0x30
 4604 02ab 9F       		.byte	0x9f
 4605 02ac AE010000 		.4byte	.LVL44-.Ltext0
 4606 02b0 B2010000 		.4byte	.LVL45-.Ltext0
 4607 02b4 0500     		.2byte	0x5
 4608 02b6 73       		.byte	0x73
 4609 02b7 00       		.sleb128 0
 4610 02b8 3C       		.byte	0x3c
 4611 02b9 1A       		.byte	0x1a
 4612 02ba 9F       		.byte	0x9f
 4613 02bb B2010000 		.4byte	.LVL45-.Ltext0
 4614 02bf BE010000 		.4byte	.LVL46-.Ltext0
 4615 02c3 0100     		.2byte	0x1
 4616 02c5 53       		.byte	0x53
ARM GAS  /tmp/ccwtW74c.s 			page 108


 4617 02c6 C2010000 		.4byte	.LVL47-.Ltext0
 4618 02ca C4010000 		.4byte	.LVL48-.Ltext0
 4619 02ce 0100     		.2byte	0x1
 4620 02d0 53       		.byte	0x53
 4621 02d1 CA010000 		.4byte	.LVL50-.Ltext0
 4622 02d5 CE010000 		.4byte	.LVL51-.Ltext0
 4623 02d9 0600     		.2byte	0x6
 4624 02db 73       		.byte	0x73
 4625 02dc 00       		.sleb128 0
 4626 02dd 08       		.byte	0x8
 4627 02de F0       		.byte	0xf0
 4628 02df 1A       		.byte	0x1a
 4629 02e0 9F       		.byte	0x9f
 4630 02e1 CE010000 		.4byte	.LVL51-.Ltext0
 4631 02e5 D2010000 		.4byte	.LVL52-.Ltext0
 4632 02e9 0100     		.2byte	0x1
 4633 02eb 53       		.byte	0x53
 4634 02ec DC010000 		.4byte	.LVL54-.Ltext0
 4635 02f0 E0010000 		.4byte	.LVL55-.Ltext0
 4636 02f4 0700     		.2byte	0x7
 4637 02f6 71       		.byte	0x71
 4638 02f7 00       		.sleb128 0
 4639 02f8 0A       		.byte	0xa
 4640 02f9 0007     		.2byte	0x700
 4641 02fb 1A       		.byte	0x1a
 4642 02fc 9F       		.byte	0x9f
 4643 02fd E0010000 		.4byte	.LVL55-.Ltext0
 4644 0301 E2010000 		.4byte	.LVL56-.Ltext0
 4645 0305 0100     		.2byte	0x1
 4646 0307 51       		.byte	0x51
 4647 0308 EC010000 		.4byte	.LVL59-.Ltext0
 4648 030c F0010000 		.4byte	.LVL60-.Ltext0
 4649 0310 0700     		.2byte	0x7
 4650 0312 71       		.byte	0x71
 4651 0313 00       		.sleb128 0
 4652 0314 0A       		.byte	0xa
 4653 0315 0038     		.2byte	0x3800
 4654 0317 1A       		.byte	0x1a
 4655 0318 9F       		.byte	0x9f
 4656 0319 F0010000 		.4byte	.LVL60-.Ltext0
 4657 031d F2010000 		.4byte	.LVL61-.Ltext0
 4658 0321 0100     		.2byte	0x1
 4659 0323 51       		.byte	0x51
 4660 0324 FA010000 		.4byte	.LVL63-.Ltext0
 4661 0328 FE010000 		.4byte	.LVL64-.Ltext0
 4662 032c 0700     		.2byte	0x7
 4663 032e 71       		.byte	0x71
 4664 032f 00       		.sleb128 0
 4665 0330 0A       		.byte	0xa
 4666 0331 00C0     		.2byte	0xc000
 4667 0333 1A       		.byte	0x1a
 4668 0334 9F       		.byte	0x9f
 4669 0335 FE010000 		.4byte	.LVL64-.Ltext0
 4670 0339 0E020000 		.4byte	.LVL66-.Ltext0
 4671 033d 0100     		.2byte	0x1
 4672 033f 51       		.byte	0x51
 4673 0340 0E020000 		.4byte	.LVL66-.Ltext0
ARM GAS  /tmp/ccwtW74c.s 			page 109


 4674 0344 10020000 		.4byte	.LVL67-.Ltext0
 4675 0348 0100     		.2byte	0x1
 4676 034a 53       		.byte	0x53
 4677 034b 14020000 		.4byte	.LVL68-.Ltext0
 4678 034f 18020000 		.4byte	.LVL69-.Ltext0
 4679 0353 0100     		.2byte	0x1
 4680 0355 53       		.byte	0x53
 4681 0356 00000000 		.4byte	0
 4682 035a 00000000 		.4byte	0
 4683              	.LLST17:
 4684 035e AA010000 		.4byte	.LVL43-.Ltext0
 4685 0362 C6010000 		.4byte	.LVL49-.Ltext0
 4686 0366 0200     		.2byte	0x2
 4687 0368 30       		.byte	0x30
 4688 0369 9F       		.byte	0x9f
 4689 036a 0E020000 		.4byte	.LVL66-.Ltext0
 4690 036e 18020000 		.4byte	.LVL69-.Ltext0
 4691 0372 0200     		.2byte	0x2
 4692 0374 30       		.byte	0x30
 4693 0375 9F       		.byte	0x9f
 4694 0376 18020000 		.4byte	.LVL69-.Ltext0
 4695 037a 1E020000 		.4byte	.LVL71-.Ltext0
 4696 037e 0700     		.2byte	0x7
 4697 0380 73       		.byte	0x73
 4698 0381 00       		.sleb128 0
 4699 0382 4E       		.byte	0x4e
 4700 0383 41       		.byte	0x41
 4701 0384 24       		.byte	0x24
 4702 0385 1A       		.byte	0x1a
 4703 0386 9F       		.byte	0x9f
 4704 0387 20020000 		.4byte	.LVL72-.Ltext0
 4705 038b 38020000 		.4byte	.LVL74-.Ltext0
 4706 038f 0100     		.2byte	0x1
 4707 0391 53       		.byte	0x53
 4708 0392 3C020000 		.4byte	.LVL75-.Ltext0
 4709 0396 42020000 		.4byte	.LVL77-.Ltext0
 4710 039a 0100     		.2byte	0x1
 4711 039c 53       		.byte	0x53
 4712 039d 00000000 		.4byte	0
 4713 03a1 00000000 		.4byte	0
 4714              	.LLST18:
 4715 03a5 AA010000 		.4byte	.LVL43-.Ltext0
 4716 03a9 C6010000 		.4byte	.LVL49-.Ltext0
 4717 03ad 0200     		.2byte	0x2
 4718 03af 30       		.byte	0x30
 4719 03b0 9F       		.byte	0x9f
 4720 03b1 0E020000 		.4byte	.LVL66-.Ltext0
 4721 03b5 1A020000 		.4byte	.LVL70-.Ltext0
 4722 03b9 0200     		.2byte	0x2
 4723 03bb 30       		.byte	0x30
 4724 03bc 9F       		.byte	0x9f
 4725 03bd 1A020000 		.4byte	.LVL70-.Ltext0
 4726 03c1 28020000 		.4byte	.LVL73-.Ltext0
 4727 03c5 0700     		.2byte	0x7
 4728 03c7 72       		.byte	0x72
 4729 03c8 00       		.sleb128 0
 4730 03c9 40       		.byte	0x40
ARM GAS  /tmp/ccwtW74c.s 			page 110


 4731 03ca 3C       		.byte	0x3c
 4732 03cb 24       		.byte	0x24
 4733 03cc 1A       		.byte	0x1a
 4734 03cd 9F       		.byte	0x9f
 4735 03ce 3C020000 		.4byte	.LVL75-.Ltext0
 4736 03d2 3E020000 		.4byte	.LVL76-.Ltext0
 4737 03d6 0700     		.2byte	0x7
 4738 03d8 72       		.byte	0x72
 4739 03d9 00       		.sleb128 0
 4740 03da 40       		.byte	0x40
 4741 03db 3C       		.byte	0x3c
 4742 03dc 24       		.byte	0x24
 4743 03dd 1A       		.byte	0x1a
 4744 03de 9F       		.byte	0x9f
 4745 03df 00000000 		.4byte	0
 4746 03e3 00000000 		.4byte	0
 4747              	.LLST19:
 4748 03e7 AA010000 		.4byte	.LVL43-.Ltext0
 4749 03eb D4010000 		.4byte	.LVL53-.Ltext0
 4750 03ef 0200     		.2byte	0x2
 4751 03f1 30       		.byte	0x30
 4752 03f2 9F       		.byte	0x9f
 4753 03f3 D4010000 		.4byte	.LVL53-.Ltext0
 4754 03f7 DC010000 		.4byte	.LVL54-.Ltext0
 4755 03fb 0600     		.2byte	0x6
 4756 03fd 71       		.byte	0x71
 4757 03fe 00       		.sleb128 0
 4758 03ff 08       		.byte	0x8
 4759 0400 FF       		.byte	0xff
 4760 0401 1A       		.byte	0x1a
 4761 0402 9F       		.byte	0x9f
 4762 0403 E4010000 		.4byte	.LVL57-.Ltext0
 4763 0407 E8010000 		.4byte	.LVL58-.Ltext0
 4764 040b 0600     		.2byte	0x6
 4765 040d 71       		.byte	0x71
 4766 040e 00       		.sleb128 0
 4767 040f 08       		.byte	0x8
 4768 0410 FF       		.byte	0xff
 4769 0411 1A       		.byte	0x1a
 4770 0412 9F       		.byte	0x9f
 4771 0413 F4010000 		.4byte	.LVL62-.Ltext0
 4772 0417 FA010000 		.4byte	.LVL63-.Ltext0
 4773 041b 0600     		.2byte	0x6
 4774 041d 71       		.byte	0x71
 4775 041e 00       		.sleb128 0
 4776 041f 08       		.byte	0x8
 4777 0420 FF       		.byte	0xff
 4778 0421 1A       		.byte	0x1a
 4779 0422 9F       		.byte	0x9f
 4780 0423 04020000 		.4byte	.LVL65-.Ltext0
 4781 0427 0E020000 		.4byte	.LVL66-.Ltext0
 4782 042b 0600     		.2byte	0x6
 4783 042d 72       		.byte	0x72
 4784 042e 00       		.sleb128 0
 4785 042f 08       		.byte	0x8
 4786 0430 FF       		.byte	0xff
 4787 0431 1A       		.byte	0x1a
ARM GAS  /tmp/ccwtW74c.s 			page 111


 4788 0432 9F       		.byte	0x9f
 4789 0433 0E020000 		.4byte	.LVL66-.Ltext0
 4790 0437 58020000 		.4byte	.LFE82-.Ltext0
 4791 043b 0200     		.2byte	0x2
 4792 043d 30       		.byte	0x30
 4793 043e 9F       		.byte	0x9f
 4794 043f 00000000 		.4byte	0
 4795 0443 00000000 		.4byte	0
 4796              	.LLST15:
 4797 0447 8C010000 		.4byte	.LVL39-.Ltext0
 4798 044b 92010000 		.4byte	.LVL40-.Ltext0
 4799 044f 0100     		.2byte	0x1
 4800 0451 50       		.byte	0x50
 4801 0452 92010000 		.4byte	.LVL40-.Ltext0
 4802 0456 9C010000 		.4byte	.LFE80-.Ltext0
 4803 045a 0400     		.2byte	0x4
 4804 045c F3       		.byte	0xf3
 4805 045d 01       		.uleb128 0x1
 4806 045e 50       		.byte	0x50
 4807 045f 9F       		.byte	0x9f
 4808 0460 00000000 		.4byte	0
 4809 0464 00000000 		.4byte	0
 4810              	.LLST13:
 4811 0468 44010000 		.4byte	.LVL33-.Ltext0
 4812 046c 4E010000 		.4byte	.LVL36-.Ltext0
 4813 0470 0100     		.2byte	0x1
 4814 0472 50       		.byte	0x50
 4815 0473 4E010000 		.4byte	.LVL36-.Ltext0
 4816 0477 58010000 		.4byte	.LFE77-.Ltext0
 4817 047b 0400     		.2byte	0x4
 4818 047d F3       		.byte	0xf3
 4819 047e 01       		.uleb128 0x1
 4820 047f 50       		.byte	0x50
 4821 0480 9F       		.byte	0x9f
 4822 0481 00000000 		.4byte	0
 4823 0485 00000000 		.4byte	0
 4824              	.LLST14:
 4825 0489 44010000 		.4byte	.LVL33-.Ltext0
 4826 048d 48010000 		.4byte	.LVL34-.Ltext0
 4827 0491 0200     		.2byte	0x2
 4828 0493 30       		.byte	0x30
 4829 0494 9F       		.byte	0x9f
 4830 0495 48010000 		.4byte	.LVL34-.Ltext0
 4831 0499 4E010000 		.4byte	.LVL36-.Ltext0
 4832 049d 0100     		.2byte	0x1
 4833 049f 53       		.byte	0x53
 4834 04a0 4E010000 		.4byte	.LVL36-.Ltext0
 4835 04a4 58010000 		.4byte	.LFE77-.Ltext0
 4836 04a8 0100     		.2byte	0x1
 4837 04aa 50       		.byte	0x50
 4838 04ab 00000000 		.4byte	0
 4839 04af 00000000 		.4byte	0
 4840              	.LLST12:
 4841 04b3 1C010000 		.4byte	.LVL28-.Ltext0
 4842 04b7 26010000 		.4byte	.LVL29-.Ltext0
 4843 04bb 0100     		.2byte	0x1
 4844 04bd 50       		.byte	0x50
ARM GAS  /tmp/ccwtW74c.s 			page 112


 4845 04be 26010000 		.4byte	.LVL29-.Ltext0
 4846 04c2 2A010000 		.4byte	.LVL30-.Ltext0
 4847 04c6 0400     		.2byte	0x4
 4848 04c8 F3       		.byte	0xf3
 4849 04c9 01       		.uleb128 0x1
 4850 04ca 50       		.byte	0x50
 4851 04cb 9F       		.byte	0x9f
 4852 04cc 2A010000 		.4byte	.LVL30-.Ltext0
 4853 04d0 30010000 		.4byte	.LVL31-.Ltext0
 4854 04d4 0100     		.2byte	0x1
 4855 04d6 50       		.byte	0x50
 4856 04d7 30010000 		.4byte	.LVL31-.Ltext0
 4857 04db 38010000 		.4byte	.LFE75-.Ltext0
 4858 04df 0400     		.2byte	0x4
 4859 04e1 F3       		.byte	0xf3
 4860 04e2 01       		.uleb128 0x1
 4861 04e3 50       		.byte	0x50
 4862 04e4 9F       		.byte	0x9f
 4863 04e5 00000000 		.4byte	0
 4864 04e9 00000000 		.4byte	0
 4865              	.LLST10:
 4866 04ed 08010000 		.4byte	.LVL24-.Ltext0
 4867 04f1 14010000 		.4byte	.LVL27-.Ltext0
 4868 04f5 0100     		.2byte	0x1
 4869 04f7 50       		.byte	0x50
 4870 04f8 14010000 		.4byte	.LVL27-.Ltext0
 4871 04fc 1C010000 		.4byte	.LFE74-.Ltext0
 4872 0500 0400     		.2byte	0x4
 4873 0502 F3       		.byte	0xf3
 4874 0503 01       		.uleb128 0x1
 4875 0504 50       		.byte	0x50
 4876 0505 9F       		.byte	0x9f
 4877 0506 00000000 		.4byte	0
 4878 050a 00000000 		.4byte	0
 4879              	.LLST11:
 4880 050e 08010000 		.4byte	.LVL24-.Ltext0
 4881 0512 0C010000 		.4byte	.LVL25-.Ltext0
 4882 0516 0200     		.2byte	0x2
 4883 0518 30       		.byte	0x30
 4884 0519 9F       		.byte	0x9f
 4885 051a 0C010000 		.4byte	.LVL25-.Ltext0
 4886 051e 14010000 		.4byte	.LVL27-.Ltext0
 4887 0522 0100     		.2byte	0x1
 4888 0524 53       		.byte	0x53
 4889 0525 14010000 		.4byte	.LVL27-.Ltext0
 4890 0529 1C010000 		.4byte	.LFE74-.Ltext0
 4891 052d 0100     		.2byte	0x1
 4892 052f 50       		.byte	0x50
 4893 0530 00000000 		.4byte	0
 4894 0534 00000000 		.4byte	0
 4895              	.LLST8:
 4896 0538 F4000000 		.4byte	.LVL20-.Ltext0
 4897 053c FE000000 		.4byte	.LVL23-.Ltext0
 4898 0540 0100     		.2byte	0x1
 4899 0542 50       		.byte	0x50
 4900 0543 FE000000 		.4byte	.LVL23-.Ltext0
 4901 0547 08010000 		.4byte	.LFE73-.Ltext0
ARM GAS  /tmp/ccwtW74c.s 			page 113


 4902 054b 0400     		.2byte	0x4
 4903 054d F3       		.byte	0xf3
 4904 054e 01       		.uleb128 0x1
 4905 054f 50       		.byte	0x50
 4906 0550 9F       		.byte	0x9f
 4907 0551 00000000 		.4byte	0
 4908 0555 00000000 		.4byte	0
 4909              	.LLST9:
 4910 0559 F4000000 		.4byte	.LVL20-.Ltext0
 4911 055d F8000000 		.4byte	.LVL21-.Ltext0
 4912 0561 0200     		.2byte	0x2
 4913 0563 30       		.byte	0x30
 4914 0564 9F       		.byte	0x9f
 4915 0565 F8000000 		.4byte	.LVL21-.Ltext0
 4916 0569 FE000000 		.4byte	.LVL23-.Ltext0
 4917 056d 0100     		.2byte	0x1
 4918 056f 53       		.byte	0x53
 4919 0570 FE000000 		.4byte	.LVL23-.Ltext0
 4920 0574 08010000 		.4byte	.LFE73-.Ltext0
 4921 0578 0100     		.2byte	0x1
 4922 057a 50       		.byte	0x50
 4923 057b 00000000 		.4byte	0
 4924 057f 00000000 		.4byte	0
 4925              	.LLST6:
 4926 0583 E0000000 		.4byte	.LVL16-.Ltext0
 4927 0587 EA000000 		.4byte	.LVL19-.Ltext0
 4928 058b 0100     		.2byte	0x1
 4929 058d 50       		.byte	0x50
 4930 058e EA000000 		.4byte	.LVL19-.Ltext0
 4931 0592 F4000000 		.4byte	.LFE72-.Ltext0
 4932 0596 0400     		.2byte	0x4
 4933 0598 F3       		.byte	0xf3
 4934 0599 01       		.uleb128 0x1
 4935 059a 50       		.byte	0x50
 4936 059b 9F       		.byte	0x9f
 4937 059c 00000000 		.4byte	0
 4938 05a0 00000000 		.4byte	0
 4939              	.LLST7:
 4940 05a4 E0000000 		.4byte	.LVL16-.Ltext0
 4941 05a8 E4000000 		.4byte	.LVL17-.Ltext0
 4942 05ac 0200     		.2byte	0x2
 4943 05ae 30       		.byte	0x30
 4944 05af 9F       		.byte	0x9f
 4945 05b0 E4000000 		.4byte	.LVL17-.Ltext0
 4946 05b4 EA000000 		.4byte	.LVL19-.Ltext0
 4947 05b8 0100     		.2byte	0x1
 4948 05ba 53       		.byte	0x53
 4949 05bb EA000000 		.4byte	.LVL19-.Ltext0
 4950 05bf F4000000 		.4byte	.LFE72-.Ltext0
 4951 05c3 0100     		.2byte	0x1
 4952 05c5 50       		.byte	0x50
 4953 05c6 00000000 		.4byte	0
 4954 05ca 00000000 		.4byte	0
 4955              	.LLST4:
 4956 05ce BC000000 		.4byte	.LVL12-.Ltext0
 4957 05d2 C6000000 		.4byte	.LVL15-.Ltext0
 4958 05d6 0100     		.2byte	0x1
ARM GAS  /tmp/ccwtW74c.s 			page 114


 4959 05d8 50       		.byte	0x50
 4960 05d9 C6000000 		.4byte	.LVL15-.Ltext0
 4961 05dd D0000000 		.4byte	.LFE70-.Ltext0
 4962 05e1 0400     		.2byte	0x4
 4963 05e3 F3       		.byte	0xf3
 4964 05e4 01       		.uleb128 0x1
 4965 05e5 50       		.byte	0x50
 4966 05e6 9F       		.byte	0x9f
 4967 05e7 00000000 		.4byte	0
 4968 05eb 00000000 		.4byte	0
 4969              	.LLST5:
 4970 05ef BC000000 		.4byte	.LVL12-.Ltext0
 4971 05f3 C0000000 		.4byte	.LVL13-.Ltext0
 4972 05f7 0200     		.2byte	0x2
 4973 05f9 30       		.byte	0x30
 4974 05fa 9F       		.byte	0x9f
 4975 05fb C0000000 		.4byte	.LVL13-.Ltext0
 4976 05ff C6000000 		.4byte	.LVL15-.Ltext0
 4977 0603 0100     		.2byte	0x1
 4978 0605 53       		.byte	0x53
 4979 0606 C6000000 		.4byte	.LVL15-.Ltext0
 4980 060a D0000000 		.4byte	.LFE70-.Ltext0
 4981 060e 0100     		.2byte	0x1
 4982 0610 50       		.byte	0x50
 4983 0611 00000000 		.4byte	0
 4984 0615 00000000 		.4byte	0
 4985              	.LLST2:
 4986 0619 9C000000 		.4byte	.LVL6-.Ltext0
 4987 061d A6000000 		.4byte	.LVL9-.Ltext0
 4988 0621 0100     		.2byte	0x1
 4989 0623 51       		.byte	0x51
 4990 0624 A6000000 		.4byte	.LVL9-.Ltext0
 4991 0628 B0000000 		.4byte	.LFE68-.Ltext0
 4992 062c 0400     		.2byte	0x4
 4993 062e F3       		.byte	0xf3
 4994 062f 01       		.uleb128 0x1
 4995 0630 51       		.byte	0x51
 4996 0631 9F       		.byte	0x9f
 4997 0632 00000000 		.4byte	0
 4998 0636 00000000 		.4byte	0
 4999              	.LLST3:
 5000 063a 9C000000 		.4byte	.LVL6-.Ltext0
 5001 063e A0000000 		.4byte	.LVL7-.Ltext0
 5002 0642 0200     		.2byte	0x2
 5003 0644 30       		.byte	0x30
 5004 0645 9F       		.byte	0x9f
 5005 0646 A0000000 		.4byte	.LVL7-.Ltext0
 5006 064a A4000000 		.4byte	.LVL8-.Ltext0
 5007 064e 0900     		.2byte	0x9
 5008 0650 73       		.byte	0x73
 5009 0651 00       		.sleb128 0
 5010 0652 11       		.byte	0x11
 5011 0653 FFFF837E 		.sleb128 -4128769
 5012 0657 1A       		.byte	0x1a
 5013 0658 9F       		.byte	0x9f
 5014 0659 A4000000 		.4byte	.LVL8-.Ltext0
 5015 065d A8000000 		.4byte	.LVL10-.Ltext0
ARM GAS  /tmp/ccwtW74c.s 			page 115


 5016 0661 0100     		.2byte	0x1
 5017 0663 53       		.byte	0x53
 5018 0664 A8000000 		.4byte	.LVL10-.Ltext0
 5019 0668 B0000000 		.4byte	.LFE68-.Ltext0
 5020 066c 0100     		.2byte	0x1
 5021 066e 51       		.byte	0x51
 5022 066f 00000000 		.4byte	0
 5023 0673 00000000 		.4byte	0
 5024              	.LLST0:
 5025 0677 7C000000 		.4byte	.LVL1-.Ltext0
 5026 067b 88000000 		.4byte	.LVL4-.Ltext0
 5027 067f 0100     		.2byte	0x1
 5028 0681 50       		.byte	0x50
 5029 0682 88000000 		.4byte	.LVL4-.Ltext0
 5030 0686 90000000 		.4byte	.LFE66-.Ltext0
 5031 068a 0400     		.2byte	0x4
 5032 068c F3       		.byte	0xf3
 5033 068d 01       		.uleb128 0x1
 5034 068e 50       		.byte	0x50
 5035 068f 9F       		.byte	0x9f
 5036 0690 00000000 		.4byte	0
 5037 0694 00000000 		.4byte	0
 5038              	.LLST1:
 5039 0698 7C000000 		.4byte	.LVL1-.Ltext0
 5040 069c 80000000 		.4byte	.LVL2-.Ltext0
 5041 06a0 0200     		.2byte	0x2
 5042 06a2 30       		.byte	0x30
 5043 06a3 9F       		.byte	0x9f
 5044 06a4 80000000 		.4byte	.LVL2-.Ltext0
 5045 06a8 88000000 		.4byte	.LVL4-.Ltext0
 5046 06ac 0100     		.2byte	0x1
 5047 06ae 53       		.byte	0x53
 5048 06af 88000000 		.4byte	.LVL4-.Ltext0
 5049 06b3 90000000 		.4byte	.LFE66-.Ltext0
 5050 06b7 0100     		.2byte	0x1
 5051 06b9 50       		.byte	0x50
 5052 06ba 00000000 		.4byte	0
 5053 06be 00000000 		.4byte	0
 5054              	.LLST29:
 5055 06c2 38030000 		.4byte	.LVL110-.Ltext0
 5056 06c6 58030000 		.4byte	.LVL114-.Ltext0
 5057 06ca 0200     		.2byte	0x2
 5058 06cc 30       		.byte	0x30
 5059 06cd 9F       		.byte	0x9f
 5060 06ce 58030000 		.4byte	.LVL114-.Ltext0
 5061 06d2 5A030000 		.4byte	.LVL115-.Ltext0
 5062 06d6 0700     		.2byte	0x7
 5063 06d8 70       		.byte	0x70
 5064 06d9 00       		.sleb128 0
 5065 06da 48       		.byte	0x48
 5066 06db 24       		.byte	0x24
 5067 06dc 30       		.byte	0x30
 5068 06dd 2E       		.byte	0x2e
 5069 06de 9F       		.byte	0x9f
 5070 06df 00000000 		.4byte	0
 5071 06e3 00000000 		.4byte	0
 5072              	.LLST30:
ARM GAS  /tmp/ccwtW74c.s 			page 116


 5073 06e7 38030000 		.4byte	.LVL110-.Ltext0
 5074 06eb 3A030000 		.4byte	.LVL111-.Ltext0
 5075 06ef 0200     		.2byte	0x2
 5076 06f1 30       		.byte	0x30
 5077 06f2 9F       		.byte	0x9f
 5078 06f3 40030000 		.4byte	.LVL112-.Ltext0
 5079 06f7 54030000 		.4byte	.LVL113-.Ltext0
 5080 06fb 0100     		.2byte	0x1
 5081 06fd 50       		.byte	0x50
 5082 06fe 00000000 		.4byte	0
 5083 0702 00000000 		.4byte	0
 5084              		.section	.debug_aranges,"",%progbits
 5085 0000 1C000000 		.4byte	0x1c
 5086 0004 0200     		.2byte	0x2
 5087 0006 00000000 		.4byte	.Ldebug_info0
 5088 000a 04       		.byte	0x4
 5089 000b 00       		.byte	0
 5090 000c 0000     		.2byte	0
 5091 000e 0000     		.2byte	0
 5092 0010 00000000 		.4byte	.Ltext0
 5093 0014 94030000 		.4byte	.Letext0-.Ltext0
 5094 0018 00000000 		.4byte	0
 5095 001c 00000000 		.4byte	0
 5096              		.section	.debug_line,"",%progbits
 5097              	.Ldebug_line0:
 5098 0000 5D030000 		.section	.debug_str,"MS",%progbits,1
 5098      02003602 
 5098      00000201 
 5098      FB0E0D00 
 5098      01010101 
 5099              	.LASF19:
 5100 0000 73697A65 		.ascii	"sizetype\000"
 5100      74797065 
 5100      00
 5101              	.LASF79:
 5102 0009 5F5F7661 		.ascii	"__value\000"
 5102      6C756500 
 5103              	.LASF211:
 5104 0011 5243435F 		.ascii	"RCC_AHBPeriph\000"
 5104      41484250 
 5104      65726970 
 5104      6800
 5105              	.LASF148:
 5106 001f 5F5F7366 		.ascii	"__sf\000"
 5106      00
 5107              	.LASF115:
 5108 0024 5F726561 		.ascii	"_read\000"
 5108      6400
 5109              	.LASF116:
 5110 002a 5F777269 		.ascii	"_write\000"
 5110      746500
 5111              	.LASF17:
 5112 0031 696E7433 		.ascii	"int32_t\000"
 5112      325F7400 
 5113              	.LASF159:
 5114 0039 5F617363 		.ascii	"_asctime_buf\000"
 5114      74696D65 
ARM GAS  /tmp/ccwtW74c.s 			page 117


 5114      5F627566 
 5114      00
 5115              	.LASF142:
 5116 0046 5F637674 		.ascii	"_cvtlen\000"
 5116      6C656E00 
 5117              	.LASF226:
 5118 004e 5243435F 		.ascii	"RCC_USBCLKConfig\000"
 5118      55534243 
 5118      4C4B436F 
 5118      6E666967 
 5118      00
 5119              	.LASF212:
 5120 005f 5243435F 		.ascii	"RCC_GetClocksFreq\000"
 5120      47657443 
 5120      6C6F636B 
 5120      73467265 
 5120      7100
 5121              	.LASF63:
 5122 0071 6163635F 		.ascii	"acc_x_temp\000"
 5122      785F7465 
 5122      6D7000
 5123              	.LASF178:
 5124 007c 5F756E75 		.ascii	"_unused\000"
 5124      73656400 
 5125              	.LASF89:
 5126 0084 5F5F746D 		.ascii	"__tm\000"
 5126      00
 5127              	.LASF174:
 5128 0089 5F776373 		.ascii	"_wcsrtombs_state\000"
 5128      72746F6D 
 5128      62735F73 
 5128      74617465 
 5128      00
 5129              	.LASF120:
 5130 009a 5F6E6275 		.ascii	"_nbuf\000"
 5130      6600
 5131              	.LASF90:
 5132 00a0 5F5F746D 		.ascii	"__tm_sec\000"
 5132      5F736563 
 5132      00
 5133              	.LASF40:
 5134 00a9 48434C4B 		.ascii	"HCLK_Frequency\000"
 5134      5F467265 
 5134      7175656E 
 5134      637900
 5135              	.LASF167:
 5136 00b8 5F6C3634 		.ascii	"_l64a_buf\000"
 5136      615F6275 
 5136      6600
 5137              	.LASF109:
 5138 00c2 5F73697A 		.ascii	"_size\000"
 5138      6500
 5139              	.LASF124:
 5140 00c8 5F6C6F63 		.ascii	"_lock\000"
 5140      6B00
 5141              	.LASF155:
 5142 00ce 5F6D756C 		.ascii	"_mult\000"
ARM GAS  /tmp/ccwtW74c.s 			page 118


 5142      7400
 5143              	.LASF59:
 5144 00d4 6779726F 		.ascii	"gyro_y_rate\000"
 5144      5F795F72 
 5144      61746500 
 5145              	.LASF219:
 5146 00e0 5243435F 		.ascii	"RCC_RTCCLKSource\000"
 5146      52544343 
 5146      4C4B536F 
 5146      75726365 
 5146      00
 5147              	.LASF253:
 5148 00f1 2F686F6D 		.ascii	"/home/faker/Documents/code/STM/stm32-quadrocopter\000"
 5148      652F6661 
 5148      6B65722F 
 5148      446F6375 
 5148      6D656E74 
 5149              	.LASF230:
 5150 0123 5243435F 		.ascii	"RCC_HCLK\000"
 5150      48434C4B 
 5150      00
 5151              	.LASF76:
 5152 012c 5F5F7763 		.ascii	"__wch\000"
 5152      6800
 5153              	.LASF2:
 5154 0132 5F5F7569 		.ascii	"__uint8_t\000"
 5154      6E74385F 
 5154      7400
 5155              	.LASF43:
 5156 013c 41444343 		.ascii	"ADCCLK_Frequency\000"
 5156      4C4B5F46 
 5156      72657175 
 5156      656E6379 
 5156      00
 5157              	.LASF231:
 5158 014d 5243435F 		.ascii	"RCC_PCLK1Config\000"
 5158      50434C4B 
 5158      31436F6E 
 5158      66696700 
 5159              	.LASF112:
 5160 015d 5F66696C 		.ascii	"_file\000"
 5160      6500
 5161              	.LASF99:
 5162 0163 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5162      65786974 
 5162      5F617267 
 5162      7300
 5163              	.LASF189:
 5164 0171 5F737973 		.ascii	"_sys_nerr\000"
 5164      5F6E6572 
 5164      7200
 5165              	.LASF170:
 5166 017b 5F6D6272 		.ascii	"_mbrlen_state\000"
 5166      6C656E5F 
 5166      73746174 
 5166      6500
 5167              	.LASF8:
ARM GAS  /tmp/ccwtW74c.s 			page 119


 5168 0189 6C6F6E67 		.ascii	"long int\000"
 5168      20696E74 
 5168      00
 5169              	.LASF179:
 5170 0192 5F696D70 		.ascii	"_impure_ptr\000"
 5170      7572655F 
 5170      70747200 
 5171              	.LASF139:
 5172 019e 5F726573 		.ascii	"_result_k\000"
 5172      756C745F 
 5172      6B00
 5173              	.LASF47:
 5174 01a8 45616E67 		.ascii	"Eangle\000"
 5174      6C6500
 5175              	.LASF160:
 5176 01af 5F6C6F63 		.ascii	"_localtime_buf\000"
 5176      616C7469 
 5176      6D655F62 
 5176      756600
 5177              	.LASF68:
 5178 01be 74657374 		.ascii	"test\000"
 5178      00
 5179              	.LASF229:
 5180 01c3 5243435F 		.ascii	"RCC_PCLK2Config\000"
 5180      50434C4B 
 5180      32436F6E 
 5180      66696700 
 5181              	.LASF250:
 5182 01d3 5243435F 		.ascii	"RCC_DeInit\000"
 5182      4465496E 
 5182      697400
 5183              	.LASF94:
 5184 01de 5F5F746D 		.ascii	"__tm_mon\000"
 5184      5F6D6F6E 
 5184      00
 5185              	.LASF35:
 5186 01e7 41504232 		.ascii	"APB2ENR\000"
 5186      454E5200 
 5187              	.LASF255:
 5188 01ef 5243435F 		.ascii	"RCC_GetSYSCLKSource\000"
 5188      47657453 
 5188      5953434C 
 5188      4B536F75 
 5188      72636500 
 5189              	.LASF246:
 5190 0203 48534553 		.ascii	"HSEStatus\000"
 5190      74617475 
 5190      7300
 5191              	.LASF134:
 5192 020d 5F637572 		.ascii	"_current_category\000"
 5192      72656E74 
 5192      5F636174 
 5192      65676F72 
 5192      7900
 5193              	.LASF222:
 5194 021f 5243435F 		.ascii	"RCC_LSE\000"
 5194      4C534500 
ARM GAS  /tmp/ccwtW74c.s 			page 120


 5195              	.LASF223:
 5196 0227 5243435F 		.ascii	"RCC_ADCCLKConfig\000"
 5196      41444343 
 5196      4C4B436F 
 5196      6E666967 
 5196      00
 5197              	.LASF157:
 5198 0238 5F756E75 		.ascii	"_unused_rand\000"
 5198      7365645F 
 5198      72616E64 
 5198      00
 5199              	.LASF0:
 5200 0245 7369676E 		.ascii	"signed char\000"
 5200      65642063 
 5200      68617200 
 5201              	.LASF66:
 5202 0251 7A5F616E 		.ascii	"z_angle\000"
 5202      676C6500 
 5203              	.LASF14:
 5204 0259 75696E74 		.ascii	"uint8_t\000"
 5204      385F7400 
 5205              	.LASF221:
 5206 0261 5243435F 		.ascii	"RCC_LSEConfig\000"
 5206      4C534543 
 5206      6F6E6669 
 5206      6700
 5207              	.LASF238:
 5208 026f 5243435F 		.ascii	"RCC_PLLSource\000"
 5208      504C4C53 
 5208      6F757263 
 5208      6500
 5209              	.LASF208:
 5210 027d 5243435F 		.ascii	"RCC_APB1PeriphClockCmd\000"
 5210      41504231 
 5210      50657269 
 5210      7068436C 
 5210      6F636B43 
 5211              	.LASF1:
 5212 0294 756E7369 		.ascii	"unsigned char\000"
 5212      676E6564 
 5212      20636861 
 5212      7200
 5213              	.LASF50:
 5214 02a2 74696D32 		.ascii	"tim2_count\000"
 5214      5F636F75 
 5214      6E7400
 5215              	.LASF127:
 5216 02ad 5F726565 		.ascii	"_reent\000"
 5216      6E7400
 5217              	.LASF180:
 5218 02b4 5F676C6F 		.ascii	"_global_impure_ptr\000"
 5218      62616C5F 
 5218      696D7075 
 5218      72655F70 
 5218      747200
 5219              	.LASF97:
 5220 02c7 5F5F746D 		.ascii	"__tm_yday\000"
ARM GAS  /tmp/ccwtW74c.s 			page 121


 5220      5F796461 
 5220      7900
 5221              	.LASF191:
 5222 02d1 41444350 		.ascii	"ADCPrescTable\000"
 5222      72657363 
 5222      5461626C 
 5222      6500
 5223              	.LASF82:
 5224 02df 63686172 		.ascii	"char\000"
 5224      00
 5225              	.LASF227:
 5226 02e4 5243435F 		.ascii	"RCC_USBCLKSource\000"
 5226      55534243 
 5226      4C4B536F 
 5226      75726365 
 5226      00
 5227              	.LASF106:
 5228 02f5 5F666E73 		.ascii	"_fns\000"
 5228      00
 5229              	.LASF118:
 5230 02fa 5F636C6F 		.ascii	"_close\000"
 5230      736500
 5231              	.LASF51:
 5232 0301 74696D33 		.ascii	"tim3_count\000"
 5232      5F636F75 
 5232      6E7400
 5233              	.LASF206:
 5234 030c 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 5234      41504232 
 5234      50657269 
 5234      70685265 
 5234      73657443 
 5235              	.LASF244:
 5236 0323 53746172 		.ascii	"StartUpCounter\000"
 5236      74557043 
 5236      6F756E74 
 5236      657200
 5237              	.LASF5:
 5238 0332 5F5F7569 		.ascii	"__uint16_t\000"
 5238      6E743136 
 5238      5F7400
 5239              	.LASF42:
 5240 033d 50434C4B 		.ascii	"PCLK2_Frequency\000"
 5240      325F4672 
 5240      65717565 
 5240      6E637900 
 5241              	.LASF129:
 5242 034d 5F737464 		.ascii	"_stdin\000"
 5242      696E00
 5243              	.LASF233:
 5244 0354 5243435F 		.ascii	"RCC_SYSCLK\000"
 5244      53595343 
 5244      4C4B00
 5245              	.LASF41:
 5246 035f 50434C4B 		.ascii	"PCLK1_Frequency\000"
 5246      315F4672 
 5246      65717565 
ARM GAS  /tmp/ccwtW74c.s 			page 122


 5246      6E637900 
 5247              	.LASF220:
 5248 036f 5243435F 		.ascii	"RCC_LSICmd\000"
 5248      4C534943 
 5248      6D6400
 5249              	.LASF215:
 5250 037a 706C6C73 		.ascii	"pllsource\000"
 5250      6F757263 
 5250      6500
 5251              	.LASF232:
 5252 0384 5243435F 		.ascii	"RCC_HCLKConfig\000"
 5252      48434C4B 
 5252      436F6E66 
 5252      696700
 5253              	.LASF249:
 5254 0393 5243435F 		.ascii	"RCC_ClearFlag\000"
 5254      436C6561 
 5254      72466C61 
 5254      6700
 5255              	.LASF247:
 5256 03a1 5243435F 		.ascii	"RCC_HSEConfig\000"
 5256      48534543 
 5256      6F6E6669 
 5256      6700
 5257              	.LASF37:
 5258 03af 42444352 		.ascii	"BDCR\000"
 5258      00
 5259              	.LASF114:
 5260 03b4 5F636F6F 		.ascii	"_cookie\000"
 5260      6B696500 
 5261              	.LASF87:
 5262 03bc 5F776473 		.ascii	"_wds\000"
 5262      00
 5263              	.LASF146:
 5264 03c1 5F736967 		.ascii	"_sig_func\000"
 5264      5F66756E 
 5264      6300
 5265              	.LASF111:
 5266 03cb 5F666C61 		.ascii	"_flags\000"
 5266      677300
 5267              	.LASF31:
 5268 03d2 43464752 		.ascii	"CFGR\000"
 5268      00
 5269              	.LASF204:
 5270 03d7 5243435F 		.ascii	"RCC_APB1PeriphResetCmd\000"
 5270      41504231 
 5270      50657269 
 5270      70685265 
 5270      73657443 
 5271              	.LASF122:
 5272 03ee 5F6F6666 		.ascii	"_offset\000"
 5272      73657400 
 5273              	.LASF143:
 5274 03f6 5F637674 		.ascii	"_cvtbuf\000"
 5274      62756600 
 5275              	.LASF248:
 5276 03fe 5243435F 		.ascii	"RCC_HSE\000"
ARM GAS  /tmp/ccwtW74c.s 			page 123


 5276      48534500 
 5277              	.LASF187:
 5278 0406 5F5F6664 		.ascii	"__fdlib_version\000"
 5278      6C69625F 
 5278      76657273 
 5278      696F6E00 
 5279              	.LASF140:
 5280 0416 5F703573 		.ascii	"_p5s\000"
 5280      00
 5281              	.LASF10:
 5282 041b 6C6F6E67 		.ascii	"long unsigned int\000"
 5282      20756E73 
 5282      69676E65 
 5282      6420696E 
 5282      7400
 5283              	.LASF209:
 5284 042d 5243435F 		.ascii	"RCC_APB2PeriphClockCmd\000"
 5284      41504232 
 5284      50657269 
 5284      7068436C 
 5284      6F636B43 
 5285              	.LASF110:
 5286 0444 5F5F7346 		.ascii	"__sFILE\000"
 5286      494C4500 
 5287              	.LASF136:
 5288 044c 5F5F7364 		.ascii	"__sdidinit\000"
 5288      6964696E 
 5288      697400
 5289              	.LASF126:
 5290 0457 5F666C61 		.ascii	"_flags2\000"
 5290      67733200 
 5291              	.LASF21:
 5292 045f 53797374 		.ascii	"SystemCoreClock\000"
 5292      656D436F 
 5292      7265436C 
 5292      6F636B00 
 5293              	.LASF199:
 5294 046f 5243435F 		.ascii	"RCC_MCOConfig\000"
 5294      4D434F43 
 5294      6F6E6669 
 5294      6700
 5295              	.LASF72:
 5296 047d 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5296      4B5F5245 
 5296      43555253 
 5296      4956455F 
 5296      5400
 5297              	.LASF128:
 5298 048f 5F657272 		.ascii	"_errno\000"
 5298      6E6F00
 5299              	.LASF168:
 5300 0496 5F736967 		.ascii	"_signal_buf\000"
 5300      6E616C5F 
 5300      62756600 
 5301              	.LASF28:
 5302 04a2 4552524F 		.ascii	"ERROR\000"
 5302      5200
ARM GAS  /tmp/ccwtW74c.s 			page 124


 5303              	.LASF188:
 5304 04a8 5F737973 		.ascii	"_sys_errlist\000"
 5304      5F657272 
 5304      6C697374 
 5304      00
 5305              	.LASF61:
 5306 04b5 6163635F 		.ascii	"acc_x_angle\000"
 5306      785F616E 
 5306      676C6500 
 5307              	.LASF251:
 5308 04c1 474E5520 		.ascii	"GNU C11 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -g -"
 5308      43313120 
 5308      362E312E 
 5308      31203230 
 5308      31363035 
 5309 04f4 4F31202D 		.ascii	"O1 -fno-common\000"
 5309      666E6F2D 
 5309      636F6D6D 
 5309      6F6E00
 5310              	.LASF88:
 5311 0503 5F426967 		.ascii	"_Bigint\000"
 5311      696E7400 
 5312              	.LASF85:
 5313 050b 5F6D6178 		.ascii	"_maxwds\000"
 5313      77647300 
 5314              	.LASF137:
 5315 0513 5F5F636C 		.ascii	"__cleanup\000"
 5315      65616E75 
 5315      7000
 5316              	.LASF145:
 5317 051d 5F617465 		.ascii	"_atexit0\000"
 5317      78697430 
 5317      00
 5318              	.LASF184:
 5319 0526 5F5F6664 		.ascii	"__fdlibm_svid\000"
 5319      6C69626D 
 5319      5F737669 
 5319      6400
 5320              	.LASF9:
 5321 0534 5F5F7569 		.ascii	"__uint32_t\000"
 5321      6E743332 
 5321      5F7400
 5322              	.LASF133:
 5323 053f 5F656D65 		.ascii	"_emergency\000"
 5323      7267656E 
 5323      637900
 5324              	.LASF190:
 5325 054a 41504241 		.ascii	"APBAHBPrescTable\000"
 5325      48425072 
 5325      65736354 
 5325      61626C65 
 5325      00
 5326              	.LASF11:
 5327 055b 6C6F6E67 		.ascii	"long long int\000"
 5327      206C6F6E 
 5327      6720696E 
 5327      7400
ARM GAS  /tmp/ccwtW74c.s 			page 125


 5328              	.LASF45:
 5329 0569 62657461 		.ascii	"beta\000"
 5329      00
 5330              	.LASF69:
 5331 056e 6932635F 		.ascii	"i2c_sdata\000"
 5331      73646174 
 5331      6100
 5332              	.LASF151:
 5333 0578 5F6E696F 		.ascii	"_niobs\000"
 5333      627300
 5334              	.LASF147:
 5335 057f 5F5F7367 		.ascii	"__sglue\000"
 5335      6C756500 
 5336              	.LASF62:
 5337 0587 6163635F 		.ascii	"acc_y_angle\000"
 5337      795F616E 
 5337      676C6500 
 5338              	.LASF177:
 5339 0593 5F6E6D61 		.ascii	"_nmalloc\000"
 5339      6C6C6F63 
 5339      00
 5340              	.LASF182:
 5341 059c 646F7562 		.ascii	"double\000"
 5341      6C6500
 5342              	.LASF161:
 5343 05a3 5F67616D 		.ascii	"_gamma_signgam\000"
 5343      6D615F73 
 5343      69676E67 
 5343      616D00
 5344              	.LASF32:
 5345 05b2 41504232 		.ascii	"APB2RSTR\000"
 5345      52535452 
 5345      00
 5346              	.LASF195:
 5347 05bb 5243435F 		.ascii	"RCC_GetFlagStatus\000"
 5347      47657446 
 5347      6C616753 
 5347      74617475 
 5347      7300
 5348              	.LASF213:
 5349 05cd 5243435F 		.ascii	"RCC_Clocks\000"
 5349      436C6F63 
 5349      6B7300
 5350              	.LASF135:
 5351 05d8 5F637572 		.ascii	"_current_locale\000"
 5351      72656E74 
 5351      5F6C6F63 
 5351      616C6500 
 5352              	.LASF228:
 5353 05e8 5243435F 		.ascii	"RCC_ITConfig\000"
 5353      4954436F 
 5353      6E666967 
 5353      00
 5354              	.LASF141:
 5355 05f5 5F667265 		.ascii	"_freelist\000"
 5355      656C6973 
 5355      7400
ARM GAS  /tmp/ccwtW74c.s 			page 126


 5356              	.LASF152:
 5357 05ff 5F696F62 		.ascii	"_iobs\000"
 5357      7300
 5358              	.LASF240:
 5359 0605 5243435F 		.ascii	"RCC_HSICmd\000"
 5359      48534943 
 5359      6D6400
 5360              	.LASF150:
 5361 0610 5F676C75 		.ascii	"_glue\000"
 5361      6500
 5362              	.LASF20:
 5363 0616 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5363      52784275 
 5363      66666572 
 5363      00
 5364              	.LASF86:
 5365 0623 5F736967 		.ascii	"_sign\000"
 5365      6E00
 5366              	.LASF241:
 5367 0629 5243435F 		.ascii	"RCC_AdjustHSICalibrationValue\000"
 5367      41646A75 
 5367      73744853 
 5367      4943616C 
 5367      69627261 
 5368              	.LASF46:
 5369 0647 666C6F61 		.ascii	"float\000"
 5369      7400
 5370              	.LASF205:
 5371 064d 5243435F 		.ascii	"RCC_APB1Periph\000"
 5371      41504231 
 5371      50657269 
 5371      706800
 5372              	.LASF218:
 5373 065c 5243435F 		.ascii	"RCC_RTCCLKConfig\000"
 5373      52544343 
 5373      4C4B436F 
 5373      6E666967 
 5373      00
 5374              	.LASF60:
 5375 066d 6779726F 		.ascii	"gyro_z_rate\000"
 5375      5F7A5F72 
 5375      61746500 
 5376              	.LASF196:
 5377 0679 5243435F 		.ascii	"RCC_FLAG\000"
 5377      464C4147 
 5377      00
 5378              	.LASF194:
 5379 0682 5243435F 		.ascii	"RCC_GetITStatus\000"
 5379      47657449 
 5379      54537461 
 5379      74757300 
 5380              	.LASF13:
 5381 0692 756E7369 		.ascii	"unsigned int\000"
 5381      676E6564 
 5381      20696E74 
 5381      00
 5382              	.LASF202:
ARM GAS  /tmp/ccwtW74c.s 			page 127


 5383 069f 4E657753 		.ascii	"NewState\000"
 5383      74617465 
 5383      00
 5384              	.LASF175:
 5385 06a8 5F685F65 		.ascii	"_h_errno\000"
 5385      72726E6F 
 5385      00
 5386              	.LASF235:
 5387 06b1 5243435F 		.ascii	"RCC_SYSCLKSource\000"
 5387      53595343 
 5387      4C4B536F 
 5387      75726365 
 5387      00
 5388              	.LASF198:
 5389 06c2 5243435F 		.ascii	"RCC_ClearITPendingBit\000"
 5389      436C6561 
 5389      72495450 
 5389      656E6469 
 5389      6E674269 
 5390              	.LASF201:
 5391 06d8 5243435F 		.ascii	"RCC_ClockSecuritySystemCmd\000"
 5391      436C6F63 
 5391      6B536563 
 5391      75726974 
 5391      79537973 
 5392              	.LASF173:
 5393 06f3 5F776372 		.ascii	"_wcrtomb_state\000"
 5393      746F6D62 
 5393      5F737461 
 5393      746500
 5394              	.LASF93:
 5395 0702 5F5F746D 		.ascii	"__tm_mday\000"
 5395      5F6D6461 
 5395      7900
 5396              	.LASF144:
 5397 070c 5F6E6577 		.ascii	"_new\000"
 5397      00
 5398              	.LASF119:
 5399 0711 5F756275 		.ascii	"_ubuf\000"
 5399      6600
 5400              	.LASF131:
 5401 0717 5F737464 		.ascii	"_stderr\000"
 5401      65727200 
 5402              	.LASF207:
 5403 071f 5243435F 		.ascii	"RCC_APB2Periph\000"
 5403      41504232 
 5403      50657269 
 5403      706800
 5404              	.LASF166:
 5405 072e 5F776374 		.ascii	"_wctomb_state\000"
 5405      6F6D625F 
 5405      73746174 
 5405      6500
 5406              	.LASF125:
 5407 073c 5F6D6273 		.ascii	"_mbstate\000"
 5407      74617465 
 5407      00
ARM GAS  /tmp/ccwtW74c.s 			page 128


 5408              	.LASF162:
 5409 0745 5F72616E 		.ascii	"_rand_next\000"
 5409      645F6E65 
 5409      787400
 5410              	.LASF65:
 5411 0750 6163635F 		.ascii	"acc_z_temp\000"
 5411      7A5F7465 
 5411      6D7000
 5412              	.LASF104:
 5413 075b 5F617465 		.ascii	"_atexit\000"
 5413      78697400 
 5414              	.LASF192:
 5415 0763 5243435F 		.ascii	"RCC_IT\000"
 5415      495400
 5416              	.LASF214:
 5417 076a 706C6C6D 		.ascii	"pllmull\000"
 5417      756C6C00 
 5418              	.LASF78:
 5419 0772 5F5F636F 		.ascii	"__count\000"
 5419      756E7400 
 5420              	.LASF197:
 5421 077a 73746174 		.ascii	"statusreg\000"
 5421      75737265 
 5421      6700
 5422              	.LASF203:
 5423 0784 5243435F 		.ascii	"RCC_BackupResetCmd\000"
 5423      4261636B 
 5423      75705265 
 5423      73657443 
 5423      6D6400
 5424              	.LASF96:
 5425 0797 5F5F746D 		.ascii	"__tm_wday\000"
 5425      5F776461 
 5425      7900
 5426              	.LASF25:
 5427 07a1 44495341 		.ascii	"DISABLE\000"
 5427      424C4500 
 5428              	.LASF24:
 5429 07a9 49545374 		.ascii	"ITStatus\000"
 5429      61747573 
 5429      00
 5430              	.LASF71:
 5431 07b2 6C6F6E67 		.ascii	"long double\000"
 5431      20646F75 
 5431      626C6500 
 5432              	.LASF70:
 5433 07be 6932635F 		.ascii	"i2c_rdata\000"
 5433      72646174 
 5433      6100
 5434              	.LASF154:
 5435 07c8 5F736565 		.ascii	"_seed\000"
 5435      6400
 5436              	.LASF117:
 5437 07ce 5F736565 		.ascii	"_seek\000"
 5437      6B00
 5438              	.LASF30:
 5439 07d4 4572726F 		.ascii	"ErrorStatus\000"
ARM GAS  /tmp/ccwtW74c.s 			page 129


 5439      72537461 
 5439      74757300 
 5440              	.LASF74:
 5441 07e0 5F66706F 		.ascii	"_fpos_t\000"
 5441      735F7400 
 5442              	.LASF77:
 5443 07e8 5F5F7763 		.ascii	"__wchb\000"
 5443      686200
 5444              	.LASF33:
 5445 07ef 41504231 		.ascii	"APB1RSTR\000"
 5445      52535452 
 5445      00
 5446              	.LASF55:
 5447 07f8 6163635F 		.ascii	"acc_x\000"
 5447      7800
 5448              	.LASF56:
 5449 07fe 6163635F 		.ascii	"acc_y\000"
 5449      7900
 5450              	.LASF57:
 5451 0804 6163635F 		.ascii	"acc_z\000"
 5451      7A00
 5452              	.LASF36:
 5453 080a 41504231 		.ascii	"APB1ENR\000"
 5453      454E5200 
 5454              	.LASF165:
 5455 0812 5F6D6274 		.ascii	"_mbtowc_state\000"
 5455      6F77635F 
 5455      73746174 
 5455      6500
 5456              	.LASF27:
 5457 0820 46756E63 		.ascii	"FunctionalState\000"
 5457      74696F6E 
 5457      616C5374 
 5457      61746500 
 5458              	.LASF12:
 5459 0830 6C6F6E67 		.ascii	"long long unsigned int\000"
 5459      206C6F6E 
 5459      6720756E 
 5459      7369676E 
 5459      65642069 
 5460              	.LASF16:
 5461 0847 75696E74 		.ascii	"uint16_t\000"
 5461      31365F74 
 5461      00
 5462              	.LASF101:
 5463 0850 5F64736F 		.ascii	"_dso_handle\000"
 5463      5F68616E 
 5463      646C6500 
 5464              	.LASF153:
 5465 085c 5F72616E 		.ascii	"_rand48\000"
 5465      64343800 
 5466              	.LASF236:
 5467 0864 5243435F 		.ascii	"RCC_PLLCmd\000"
 5467      504C4C43 
 5467      6D6400
 5468              	.LASF130:
 5469 086f 5F737464 		.ascii	"_stdout\000"
ARM GAS  /tmp/ccwtW74c.s 			page 130


 5469      6F757400 
 5470              	.LASF243:
 5471 0877 5243435F 		.ascii	"RCC_WaitForHSEStartUp\000"
 5471      57616974 
 5471      466F7248 
 5471      53455374 
 5471      61727455 
 5472              	.LASF254:
 5473 088d 5F5F6664 		.ascii	"__fdlibm_version\000"
 5473      6C69626D 
 5473      5F766572 
 5473      73696F6E 
 5473      00
 5474              	.LASF121:
 5475 089e 5F626C6B 		.ascii	"_blksize\000"
 5475      73697A65 
 5475      00
 5476              	.LASF108:
 5477 08a7 5F626173 		.ascii	"_base\000"
 5477      6500
 5478              	.LASF29:
 5479 08ad 53554343 		.ascii	"SUCCESS\000"
 5479      45535300 
 5480              	.LASF158:
 5481 08b5 5F737472 		.ascii	"_strtok_last\000"
 5481      746F6B5F 
 5481      6C617374 
 5481      00
 5482              	.LASF171:
 5483 08c2 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5483      746F7763 
 5483      5F737461 
 5483      746500
 5484              	.LASF81:
 5485 08d1 5F666C6F 		.ascii	"_flock_t\000"
 5485      636B5F74 
 5485      00
 5486              	.LASF149:
 5487 08da 5F5F4649 		.ascii	"__FILE\000"
 5487      4C4500
 5488              	.LASF3:
 5489 08e1 5F5F696E 		.ascii	"__int16_t\000"
 5489      7431365F 
 5489      7400
 5490              	.LASF22:
 5491 08eb 52455345 		.ascii	"RESET\000"
 5491      5400
 5492              	.LASF80:
 5493 08f1 5F6D6273 		.ascii	"_mbstate_t\000"
 5493      74617465 
 5493      5F7400
 5494              	.LASF163:
 5495 08fc 5F723438 		.ascii	"_r48\000"
 5495      00
 5496              	.LASF75:
 5497 0901 77696E74 		.ascii	"wint_t\000"
 5497      5F7400
ARM GAS  /tmp/ccwtW74c.s 			page 131


 5498              	.LASF84:
 5499 0908 5F6E6578 		.ascii	"_next\000"
 5499      7400
 5500              	.LASF242:
 5501 090e 48534943 		.ascii	"HSICalibrationValue\000"
 5501      616C6962 
 5501      72617469 
 5501      6F6E5661 
 5501      6C756500 
 5502              	.LASF225:
 5503 0922 746D7072 		.ascii	"tmpreg\000"
 5503      656700
 5504              	.LASF123:
 5505 0929 5F646174 		.ascii	"_data\000"
 5505      6100
 5506              	.LASF23:
 5507 092f 466C6167 		.ascii	"FlagStatus\000"
 5507      53746174 
 5507      757300
 5508              	.LASF224:
 5509 093a 5243435F 		.ascii	"RCC_PCLK2\000"
 5509      50434C4B 
 5509      3200
 5510              	.LASF186:
 5511 0944 5F5F6664 		.ascii	"__fdlibm_posix\000"
 5511      6C69626D 
 5511      5F706F73 
 5511      697800
 5512              	.LASF44:
 5513 0953 5243435F 		.ascii	"RCC_ClocksTypeDef\000"
 5513      436C6F63 
 5513      6B735479 
 5513      70654465 
 5513      6600
 5514              	.LASF38:
 5515 0965 5243435F 		.ascii	"RCC_TypeDef\000"
 5515      54797065 
 5515      44656600 
 5516              	.LASF164:
 5517 0971 5F6D626C 		.ascii	"_mblen_state\000"
 5517      656E5F73 
 5517      74617465 
 5517      00
 5518              	.LASF4:
 5519 097e 73686F72 		.ascii	"short int\000"
 5519      7420696E 
 5519      7400
 5520              	.LASF185:
 5521 0988 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 5521      6C69626D 
 5521      5F786F70 
 5521      656E00
 5522              	.LASF52:
 5523 0997 6779726F 		.ascii	"gyro_x\000"
 5523      5F7800
 5524              	.LASF53:
 5525 099e 6779726F 		.ascii	"gyro_y\000"
ARM GAS  /tmp/ccwtW74c.s 			page 132


 5525      5F7900
 5526              	.LASF54:
 5527 09a5 6779726F 		.ascii	"gyro_z\000"
 5527      5F7A00
 5528              	.LASF15:
 5529 09ac 696E7431 		.ascii	"int16_t\000"
 5529      365F7400 
 5530              	.LASF181:
 5531 09b4 7375626F 		.ascii	"suboptarg\000"
 5531      70746172 
 5531      6700
 5532              	.LASF102:
 5533 09be 5F666E74 		.ascii	"_fntypes\000"
 5533      79706573 
 5533      00
 5534              	.LASF193:
 5535 09c7 62697473 		.ascii	"bitstatus\000"
 5535      74617475 
 5535      7300
 5536              	.LASF26:
 5537 09d1 454E4142 		.ascii	"ENABLE\000"
 5537      4C4500
 5538              	.LASF95:
 5539 09d8 5F5F746D 		.ascii	"__tm_year\000"
 5539      5F796561 
 5539      7200
 5540              	.LASF34:
 5541 09e2 41484245 		.ascii	"AHBENR\000"
 5541      4E5200
 5542              	.LASF113:
 5543 09e9 5F6C6266 		.ascii	"_lbfsize\000"
 5543      73697A65 
 5543      00
 5544              	.LASF132:
 5545 09f2 5F696E63 		.ascii	"_inc\000"
 5545      00
 5546              	.LASF105:
 5547 09f7 5F696E64 		.ascii	"_ind\000"
 5547      00
 5548              	.LASF252:
 5549 09fc 6C69622F 		.ascii	"lib/src/stm32f10x_rcc.c\000"
 5549      7372632F 
 5549      73746D33 
 5549      32663130 
 5549      785F7263 
 5550              	.LASF183:
 5551 0a14 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 5551      6C69626D 
 5551      5F696565 
 5551      6500
 5552              	.LASF107:
 5553 0a22 5F5F7362 		.ascii	"__sbuf\000"
 5553      756600
 5554              	.LASF103:
 5555 0a29 5F69735F 		.ascii	"_is_cxa\000"
 5555      63786100 
 5556              	.LASF200:
ARM GAS  /tmp/ccwtW74c.s 			page 133


 5557 0a31 5243435F 		.ascii	"RCC_MCO\000"
 5557      4D434F00 
 5558              	.LASF176:
 5559 0a39 5F6E6578 		.ascii	"_nextf\000"
 5559      746600
 5560              	.LASF245:
 5561 0a40 73746174 		.ascii	"status\000"
 5561      757300
 5562              	.LASF83:
 5563 0a47 5F5F554C 		.ascii	"__ULong\000"
 5563      6F6E6700 
 5564              	.LASF217:
 5565 0a4f 5243435F 		.ascii	"RCC_RTCCLKCmd\000"
 5565      52544343 
 5565      4C4B436D 
 5565      6400
 5566              	.LASF18:
 5567 0a5d 75696E74 		.ascii	"uint32_t\000"
 5567      33325F74 
 5567      00
 5568              	.LASF138:
 5569 0a66 5F726573 		.ascii	"_result\000"
 5569      756C7400 
 5570              	.LASF73:
 5571 0a6e 5F6F6666 		.ascii	"_off_t\000"
 5571      5F7400
 5572              	.LASF156:
 5573 0a75 5F616464 		.ascii	"_add\000"
 5573      00
 5574              	.LASF6:
 5575 0a7a 73686F72 		.ascii	"short unsigned int\000"
 5575      7420756E 
 5575      7369676E 
 5575      65642069 
 5575      6E7400
 5576              	.LASF92:
 5577 0a8d 5F5F746D 		.ascii	"__tm_hour\000"
 5577      5F686F75 
 5577      7200
 5578              	.LASF49:
 5579 0a97 70697463 		.ascii	"pitch\000"
 5579      6800
 5580              	.LASF48:
 5581 0a9d 726F6C6C 		.ascii	"roll\000"
 5581      00
 5582              	.LASF39:
 5583 0aa2 53595343 		.ascii	"SYSCLK_Frequency\000"
 5583      4C4B5F46 
 5583      72657175 
 5583      656E6379 
 5583      00
 5584              	.LASF172:
 5585 0ab3 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5585      72746F77 
 5585      63735F73 
 5585      74617465 
 5585      00
ARM GAS  /tmp/ccwtW74c.s 			page 134


 5586              	.LASF7:
 5587 0ac4 5F5F696E 		.ascii	"__int32_t\000"
 5587      7433325F 
 5587      7400
 5588              	.LASF67:
 5589 0ace 74656D70 		.ascii	"temp\000"
 5589      00
 5590              	.LASF100:
 5591 0ad3 5F666E61 		.ascii	"_fnargs\000"
 5591      72677300 
 5592              	.LASF98:
 5593 0adb 5F5F746D 		.ascii	"__tm_isdst\000"
 5593      5F697364 
 5593      737400
 5594              	.LASF216:
 5595 0ae6 70726573 		.ascii	"presc\000"
 5595      6300
 5596              	.LASF91:
 5597 0aec 5F5F746D 		.ascii	"__tm_min\000"
 5597      5F6D696E 
 5597      00
 5598              	.LASF64:
 5599 0af5 6163635F 		.ascii	"acc_y_temp\000"
 5599      795F7465 
 5599      6D7000
 5600              	.LASF169:
 5601 0b00 5F676574 		.ascii	"_getdate_err\000"
 5601      64617465 
 5601      5F657272 
 5601      00
 5602              	.LASF239:
 5603 0b0d 5243435F 		.ascii	"RCC_PLLMul\000"
 5603      504C4C4D 
 5603      756C00
 5604              	.LASF210:
 5605 0b18 5243435F 		.ascii	"RCC_AHBPeriphClockCmd\000"
 5605      41484250 
 5605      65726970 
 5605      68436C6F 
 5605      636B436D 
 5606              	.LASF234:
 5607 0b2e 5243435F 		.ascii	"RCC_SYSCLKConfig\000"
 5607      53595343 
 5607      4C4B436F 
 5607      6E666967 
 5607      00
 5608              	.LASF58:
 5609 0b3f 6779726F 		.ascii	"gyro_x_rate\000"
 5609      5F785F72 
 5609      61746500 
 5610              	.LASF237:
 5611 0b4b 5243435F 		.ascii	"RCC_PLLConfig\000"
 5611      504C4C43 
 5611      6F6E6669 
 5611      6700
 5612              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/ccwtW74c.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
     /tmp/ccwtW74c.s:15     .text:0000000000000000 $t
     /tmp/ccwtW74c.s:22     .text:0000000000000000 RCC_DeInit
     /tmp/ccwtW74c.s:60     .text:0000000000000038 $d
     /tmp/ccwtW74c.s:65     .text:0000000000000040 $t
     /tmp/ccwtW74c.s:72     .text:0000000000000040 RCC_HSEConfig
     /tmp/ccwtW74c.s:113    .text:0000000000000078 $d
     /tmp/ccwtW74c.s:117    .text:000000000000007c $t
     /tmp/ccwtW74c.s:124    .text:000000000000007c RCC_AdjustHSICalibrationValue
     /tmp/ccwtW74c.s:148    .text:000000000000008c $d
     /tmp/ccwtW74c.s:152    .text:0000000000000090 $t
     /tmp/ccwtW74c.s:159    .text:0000000000000090 RCC_HSICmd
     /tmp/ccwtW74c.s:174    .text:0000000000000098 $d
     /tmp/ccwtW74c.s:178    .text:000000000000009c $t
     /tmp/ccwtW74c.s:185    .text:000000000000009c RCC_PLLConfig
     /tmp/ccwtW74c.s:211    .text:00000000000000ac $d
     /tmp/ccwtW74c.s:215    .text:00000000000000b0 $t
     /tmp/ccwtW74c.s:222    .text:00000000000000b0 RCC_PLLCmd
     /tmp/ccwtW74c.s:237    .text:00000000000000b8 $d
     /tmp/ccwtW74c.s:241    .text:00000000000000bc $t
     /tmp/ccwtW74c.s:248    .text:00000000000000bc RCC_SYSCLKConfig
     /tmp/ccwtW74c.s:272    .text:00000000000000cc $d
     /tmp/ccwtW74c.s:276    .text:00000000000000d0 $t
     /tmp/ccwtW74c.s:283    .text:00000000000000d0 RCC_GetSYSCLKSource
     /tmp/ccwtW74c.s:299    .text:00000000000000dc $d
     /tmp/ccwtW74c.s:303    .text:00000000000000e0 $t
     /tmp/ccwtW74c.s:310    .text:00000000000000e0 RCC_HCLKConfig
     /tmp/ccwtW74c.s:334    .text:00000000000000f0 $d
     /tmp/ccwtW74c.s:338    .text:00000000000000f4 $t
     /tmp/ccwtW74c.s:345    .text:00000000000000f4 RCC_PCLK1Config
     /tmp/ccwtW74c.s:369    .text:0000000000000104 $d
     /tmp/ccwtW74c.s:373    .text:0000000000000108 $t
     /tmp/ccwtW74c.s:380    .text:0000000000000108 RCC_PCLK2Config
     /tmp/ccwtW74c.s:404    .text:0000000000000118 $d
     /tmp/ccwtW74c.s:408    .text:000000000000011c $t
     /tmp/ccwtW74c.s:415    .text:000000000000011c RCC_ITConfig
     /tmp/ccwtW74c.s:444    .text:0000000000000134 $d
     /tmp/ccwtW74c.s:448    .text:0000000000000138 $t
     /tmp/ccwtW74c.s:455    .text:0000000000000138 RCC_USBCLKConfig
     /tmp/ccwtW74c.s:470    .text:0000000000000140 $d
     /tmp/ccwtW74c.s:474    .text:0000000000000144 $t
     /tmp/ccwtW74c.s:481    .text:0000000000000144 RCC_ADCCLKConfig
     /tmp/ccwtW74c.s:505    .text:0000000000000154 $d
     /tmp/ccwtW74c.s:509    .text:0000000000000158 $t
     /tmp/ccwtW74c.s:516    .text:0000000000000158 RCC_LSEConfig
     /tmp/ccwtW74c.s:552    .text:000000000000017c $d
     /tmp/ccwtW74c.s:556    .text:0000000000000180 $t
     /tmp/ccwtW74c.s:563    .text:0000000000000180 RCC_LSICmd
     /tmp/ccwtW74c.s:578    .text:0000000000000188 $d
     /tmp/ccwtW74c.s:582    .text:000000000000018c $t
     /tmp/ccwtW74c.s:589    .text:000000000000018c RCC_RTCCLKConfig
     /tmp/ccwtW74c.s:607    .text:0000000000000198 $d
     /tmp/ccwtW74c.s:611    .text:000000000000019c $t
     /tmp/ccwtW74c.s:618    .text:000000000000019c RCC_RTCCLKCmd
     /tmp/ccwtW74c.s:633    .text:00000000000001a4 $d
     /tmp/ccwtW74c.s:637    .text:00000000000001a8 $t
ARM GAS  /tmp/ccwtW74c.s 			page 136


     /tmp/ccwtW74c.s:644    .text:00000000000001a8 RCC_GetClocksFreq
     /tmp/ccwtW74c.s:800    .text:0000000000000248 $d
     /tmp/ccwtW74c.s:807    .text:0000000000000258 $t
     /tmp/ccwtW74c.s:814    .text:0000000000000258 RCC_AHBPeriphClockCmd
     /tmp/ccwtW74c.s:843    .text:0000000000000270 $d
     /tmp/ccwtW74c.s:847    .text:0000000000000274 $t
     /tmp/ccwtW74c.s:854    .text:0000000000000274 RCC_APB2PeriphClockCmd
     /tmp/ccwtW74c.s:883    .text:000000000000028c $d
     /tmp/ccwtW74c.s:887    .text:0000000000000290 $t
     /tmp/ccwtW74c.s:894    .text:0000000000000290 RCC_APB1PeriphClockCmd
     /tmp/ccwtW74c.s:923    .text:00000000000002a8 $d
     /tmp/ccwtW74c.s:927    .text:00000000000002ac $t
     /tmp/ccwtW74c.s:934    .text:00000000000002ac RCC_APB2PeriphResetCmd
     /tmp/ccwtW74c.s:963    .text:00000000000002c4 $d
     /tmp/ccwtW74c.s:967    .text:00000000000002c8 $t
     /tmp/ccwtW74c.s:974    .text:00000000000002c8 RCC_APB1PeriphResetCmd
     /tmp/ccwtW74c.s:1003   .text:00000000000002e0 $d
     /tmp/ccwtW74c.s:1007   .text:00000000000002e4 $t
     /tmp/ccwtW74c.s:1014   .text:00000000000002e4 RCC_BackupResetCmd
     /tmp/ccwtW74c.s:1029   .text:00000000000002ec $d
     /tmp/ccwtW74c.s:1033   .text:00000000000002f0 $t
     /tmp/ccwtW74c.s:1040   .text:00000000000002f0 RCC_ClockSecuritySystemCmd
     /tmp/ccwtW74c.s:1055   .text:00000000000002f8 $d
     /tmp/ccwtW74c.s:1059   .text:00000000000002fc $t
     /tmp/ccwtW74c.s:1066   .text:00000000000002fc RCC_MCOConfig
     /tmp/ccwtW74c.s:1081   .text:0000000000000304 $d
     /tmp/ccwtW74c.s:1085   .text:0000000000000308 $t
     /tmp/ccwtW74c.s:1092   .text:0000000000000308 RCC_GetFlagStatus
     /tmp/ccwtW74c.s:1137   .text:000000000000032c $d
     /tmp/ccwtW74c.s:1141   .text:0000000000000330 $t
     /tmp/ccwtW74c.s:1148   .text:0000000000000330 RCC_WaitForHSEStartUp
     /tmp/ccwtW74c.s:1208   .text:0000000000000362 RCC_ClearFlag
     /tmp/ccwtW74c.s:1224   .text:0000000000000370 $d
     /tmp/ccwtW74c.s:1228   .text:0000000000000374 $t
     /tmp/ccwtW74c.s:1235   .text:0000000000000374 RCC_GetITStatus
     /tmp/ccwtW74c.s:1257   .text:0000000000000384 $d
     /tmp/ccwtW74c.s:1261   .text:0000000000000388 $t
     /tmp/ccwtW74c.s:1268   .text:0000000000000388 RCC_ClearITPendingBit
     /tmp/ccwtW74c.s:1283   .text:0000000000000390 $d
     /tmp/ccwtW74c.s:1288   .data:0000000000000000 $d
     /tmp/ccwtW74c.s:1292   .data:0000000000000000 APBAHBPrescTable
     /tmp/ccwtW74c.s:1311   .data:0000000000000010 ADCPrescTable
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
