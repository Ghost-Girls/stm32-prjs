ARM GAS  /tmp/ccZsv2Jc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	RCC_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	RCC_DeInit, %function
  22              	RCC_DeInit:
  23              	.LFB64:
  24              		.file 1 "lib/src/stm32f10x_rcc.c"
   1:lib/src/stm32f10x_rcc.c **** /**
   2:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:lib/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:lib/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:lib/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:lib/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:lib/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:lib/src/stm32f10x_rcc.c ****   * @attention
  10:lib/src/stm32f10x_rcc.c ****   *
  11:lib/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:lib/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:lib/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:lib/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:lib/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:lib/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:lib/src/stm32f10x_rcc.c ****   *
  18:lib/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:lib/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:lib/src/stm32f10x_rcc.c ****   */
  21:lib/src/stm32f10x_rcc.c **** 
  22:lib/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:lib/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:lib/src/stm32f10x_rcc.c **** #include "conf.h"
  25:lib/src/stm32f10x_rcc.c **** 
  26:lib/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:lib/src/stm32f10x_rcc.c ****   * @{
  28:lib/src/stm32f10x_rcc.c ****   */
  29:lib/src/stm32f10x_rcc.c **** 
  30:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  31:lib/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  32:lib/src/stm32f10x_rcc.c ****   * @{
  33:lib/src/stm32f10x_rcc.c ****   */ 
ARM GAS  /tmp/ccZsv2Jc.s 			page 2


  34:lib/src/stm32f10x_rcc.c **** 
  35:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  36:lib/src/stm32f10x_rcc.c ****   * @{
  37:lib/src/stm32f10x_rcc.c ****   */
  38:lib/src/stm32f10x_rcc.c **** 
  39:lib/src/stm32f10x_rcc.c **** /**
  40:lib/src/stm32f10x_rcc.c ****   * @}
  41:lib/src/stm32f10x_rcc.c ****   */
  42:lib/src/stm32f10x_rcc.c **** 
  43:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  44:lib/src/stm32f10x_rcc.c ****   * @{
  45:lib/src/stm32f10x_rcc.c ****   */
  46:lib/src/stm32f10x_rcc.c **** 
  47:lib/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  48:lib/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  49:lib/src/stm32f10x_rcc.c **** 
  50:lib/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  51:lib/src/stm32f10x_rcc.c **** 
  52:lib/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  53:lib/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  54:lib/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  55:lib/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  56:lib/src/stm32f10x_rcc.c **** 
  57:lib/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  58:lib/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  59:lib/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  60:lib/src/stm32f10x_rcc.c **** 
  61:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  62:lib/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  63:lib/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  64:lib/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  65:lib/src/stm32f10x_rcc.c **** 
  66:lib/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  67:lib/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  68:lib/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  69:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  70:lib/src/stm32f10x_rcc.c **** 
  71:lib/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  72:lib/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  73:lib/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  74:lib/src/stm32f10x_rcc.c **** 
  75:lib/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  76:lib/src/stm32f10x_rcc.c **** 
  77:lib/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  78:lib/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  79:lib/src/stm32f10x_rcc.c **** 
  80:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  81:lib/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  82:lib/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  83:lib/src/stm32f10x_rcc.c **** #else
  84:lib/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  85:lib/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  86:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  87:lib/src/stm32f10x_rcc.c **** 
  88:lib/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  89:lib/src/stm32f10x_rcc.c **** 
  90:lib/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
ARM GAS  /tmp/ccZsv2Jc.s 			page 3


  91:lib/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  92:lib/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  93:lib/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  94:lib/src/stm32f10x_rcc.c **** 
  95:lib/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  96:lib/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  97:lib/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  98:lib/src/stm32f10x_rcc.c **** 
  99:lib/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 100:lib/src/stm32f10x_rcc.c **** 
 101:lib/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 102:lib/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 103:lib/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 104:lib/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 105:lib/src/stm32f10x_rcc.c **** 
 106:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 107:lib/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 108:lib/src/stm32f10x_rcc.c **** 
 109:lib/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 110:lib/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 111:lib/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 112:lib/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 113:lib/src/stm32f10x_rcc.c **** 
 114:lib/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 115:lib/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 116:lib/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 117:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 118:lib/src/stm32f10x_rcc.c **** 
 119:lib/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 120:lib/src/stm32f10x_rcc.c **** 
 121:lib/src/stm32f10x_rcc.c **** /* CR register bit mask */
 122:lib/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 123:lib/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 124:lib/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 125:lib/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 126:lib/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 127:lib/src/stm32f10x_rcc.c **** 
 128:lib/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 129:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 130:lib/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 131:lib/src/stm32f10x_rcc.c **** #else
 132:lib/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 133:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 134:lib/src/stm32f10x_rcc.c **** 
 135:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 136:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 137:lib/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 138:lib/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 139:lib/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 140:lib/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 141:lib/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 142:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 143:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 144:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 145:lib/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 146:lib/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 147:lib/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
ARM GAS  /tmp/ccZsv2Jc.s 			page 4


 148:lib/src/stm32f10x_rcc.c **** 
 149:lib/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 150:lib/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 151:lib/src/stm32f10x_rcc.c **** 
 152:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 153:lib/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 154:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 155:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 156:lib/src/stm32f10x_rcc.c **** #endif
 157:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 158:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 159:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 160:lib/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 161:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 162:lib/src/stm32f10x_rcc.c **** 
 163:lib/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 164:lib/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 165:lib/src/stm32f10x_rcc.c **** 
 166:lib/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 167:lib/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 168:lib/src/stm32f10x_rcc.c **** 
 169:lib/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 170:lib/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 171:lib/src/stm32f10x_rcc.c **** 
 172:lib/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 173:lib/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 174:lib/src/stm32f10x_rcc.c **** 
 175:lib/src/stm32f10x_rcc.c **** /* BDCR register base address */
 176:lib/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 177:lib/src/stm32f10x_rcc.c **** 
 178:lib/src/stm32f10x_rcc.c **** /**
 179:lib/src/stm32f10x_rcc.c ****   * @}
 180:lib/src/stm32f10x_rcc.c ****   */ 
 181:lib/src/stm32f10x_rcc.c **** 
 182:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 183:lib/src/stm32f10x_rcc.c ****   * @{
 184:lib/src/stm32f10x_rcc.c ****   */ 
 185:lib/src/stm32f10x_rcc.c **** 
 186:lib/src/stm32f10x_rcc.c **** /**
 187:lib/src/stm32f10x_rcc.c ****   * @}
 188:lib/src/stm32f10x_rcc.c ****   */ 
 189:lib/src/stm32f10x_rcc.c **** 
 190:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 191:lib/src/stm32f10x_rcc.c ****   * @{
 192:lib/src/stm32f10x_rcc.c ****   */ 
 193:lib/src/stm32f10x_rcc.c **** 
 194:lib/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 195:lib/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 196:lib/src/stm32f10x_rcc.c **** 
 197:lib/src/stm32f10x_rcc.c **** /**
 198:lib/src/stm32f10x_rcc.c ****   * @}
 199:lib/src/stm32f10x_rcc.c ****   */
 200:lib/src/stm32f10x_rcc.c **** 
 201:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 202:lib/src/stm32f10x_rcc.c ****   * @{
 203:lib/src/stm32f10x_rcc.c ****   */
 204:lib/src/stm32f10x_rcc.c **** 
ARM GAS  /tmp/ccZsv2Jc.s 			page 5


 205:lib/src/stm32f10x_rcc.c **** /**
 206:lib/src/stm32f10x_rcc.c ****   * @}
 207:lib/src/stm32f10x_rcc.c ****   */
 208:lib/src/stm32f10x_rcc.c **** 
 209:lib/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 210:lib/src/stm32f10x_rcc.c ****   * @{
 211:lib/src/stm32f10x_rcc.c ****   */
 212:lib/src/stm32f10x_rcc.c **** 
 213:lib/src/stm32f10x_rcc.c **** /**
 214:lib/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 215:lib/src/stm32f10x_rcc.c ****   * @param  None
 216:lib/src/stm32f10x_rcc.c ****   * @retval None
 217:lib/src/stm32f10x_rcc.c ****   */
 218:lib/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 219:lib/src/stm32f10x_rcc.c **** {
  25              		.loc 1 219 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 220:lib/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 221:lib/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  30              		.loc 1 221 0
  31 0000 0D4B     		ldr	r3, .L2
  32 0002 1A68     		ldr	r2, [r3]
  33 0004 42F00102 		orr	r2, r2, #1
  34 0008 1A60     		str	r2, [r3]
 222:lib/src/stm32f10x_rcc.c **** 
 223:lib/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 224:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 225:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  35              		.loc 1 225 0
  36 000a 5968     		ldr	r1, [r3, #4]
  37 000c 0B4A     		ldr	r2, .L2+4
  38 000e 0A40     		ands	r2, r2, r1
  39 0010 5A60     		str	r2, [r3, #4]
 226:lib/src/stm32f10x_rcc.c **** #else
 227:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 228:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 229:lib/src/stm32f10x_rcc.c ****   
 230:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 231:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  40              		.loc 1 231 0
  41 0012 1A68     		ldr	r2, [r3]
  42 0014 22F08472 		bic	r2, r2, #17301504
  43 0018 22F48032 		bic	r2, r2, #65536
  44 001c 1A60     		str	r2, [r3]
 232:lib/src/stm32f10x_rcc.c **** 
 233:lib/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 234:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  45              		.loc 1 234 0
  46 001e 1A68     		ldr	r2, [r3]
  47 0020 22F48022 		bic	r2, r2, #262144
  48 0024 1A60     		str	r2, [r3]
 235:lib/src/stm32f10x_rcc.c **** 
 236:lib/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 237:lib/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
ARM GAS  /tmp/ccZsv2Jc.s 			page 6


  49              		.loc 1 237 0
  50 0026 5A68     		ldr	r2, [r3, #4]
  51 0028 22F4FE02 		bic	r2, r2, #8323072
  52 002c 5A60     		str	r2, [r3, #4]
 238:lib/src/stm32f10x_rcc.c **** 
 239:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 240:lib/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 241:lib/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 242:lib/src/stm32f10x_rcc.c **** 
 243:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 244:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 245:lib/src/stm32f10x_rcc.c **** 
 246:lib/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 247:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 248:lib/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 249:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 250:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 251:lib/src/stm32f10x_rcc.c **** 
 252:lib/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 253:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 254:lib/src/stm32f10x_rcc.c **** #else
 255:lib/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 256:lib/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  53              		.loc 1 256 0
  54 002e 4FF41F02 		mov	r2, #10420224
  55 0032 9A60     		str	r2, [r3, #8]
  56 0034 7047     		bx	lr
  57              	.L3:
  58 0036 00BF     		.align	2
  59              	.L2:
  60 0038 00100240 		.word	1073876992
  61 003c 0000FFF8 		.word	-117506048
  62              		.cfi_endproc
  63              	.LFE64:
  64              		.size	RCC_DeInit, .-RCC_DeInit
  65              		.align	1
  66              		.global	RCC_HSEConfig
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  71              		.type	RCC_HSEConfig, %function
  72              	RCC_HSEConfig:
  73              	.LFB65:
 257:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 258:lib/src/stm32f10x_rcc.c **** 
 259:lib/src/stm32f10x_rcc.c **** }
 260:lib/src/stm32f10x_rcc.c **** 
 261:lib/src/stm32f10x_rcc.c **** /**
 262:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 263:lib/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 264:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 265:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 266:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 267:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 268:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 269:lib/src/stm32f10x_rcc.c ****   * @retval None
ARM GAS  /tmp/ccZsv2Jc.s 			page 7


 270:lib/src/stm32f10x_rcc.c ****   */
 271:lib/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 272:lib/src/stm32f10x_rcc.c **** {
  74              		.loc 1 272 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL0:
 273:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 274:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 275:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 276:lib/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 277:lib/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  80              		.loc 1 277 0
  81 0040 0D4B     		ldr	r3, .L8
  82 0042 1A68     		ldr	r2, [r3]
  83 0044 22F48032 		bic	r2, r2, #65536
  84 0048 1A60     		str	r2, [r3]
 278:lib/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 279:lib/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
  85              		.loc 1 279 0
  86 004a 1A68     		ldr	r2, [r3]
  87 004c 22F48022 		bic	r2, r2, #262144
  88 0050 1A60     		str	r2, [r3]
 280:lib/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 281:lib/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  89              		.loc 1 281 0
  90 0052 B0F5803F 		cmp	r0, #65536
  91 0056 03D0     		beq	.L6
  92 0058 B0F5802F 		cmp	r0, #262144
  93 005c 06D0     		beq	.L7
  94 005e 7047     		bx	lr
  95              	.L6:
 282:lib/src/stm32f10x_rcc.c ****   {
 283:lib/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 284:lib/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 285:lib/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
  96              		.loc 1 285 0
  97 0060 054A     		ldr	r2, .L8
  98 0062 1368     		ldr	r3, [r2]
  99 0064 43F48033 		orr	r3, r3, #65536
 100 0068 1360     		str	r3, [r2]
 286:lib/src/stm32f10x_rcc.c ****       break;
 101              		.loc 1 286 0
 102 006a 7047     		bx	lr
 103              	.L7:
 287:lib/src/stm32f10x_rcc.c ****       
 288:lib/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 289:lib/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 290:lib/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 104              		.loc 1 290 0
 105 006c 024A     		ldr	r2, .L8
 106 006e 1368     		ldr	r3, [r2]
 107 0070 43F4A023 		orr	r3, r3, #327680
 108 0074 1360     		str	r3, [r2]
 109 0076 7047     		bx	lr
ARM GAS  /tmp/ccZsv2Jc.s 			page 8


 110              	.L9:
 111              		.align	2
 112              	.L8:
 113 0078 00100240 		.word	1073876992
 114              		.cfi_endproc
 115              	.LFE65:
 116              		.size	RCC_HSEConfig, .-RCC_HSEConfig
 117              		.align	1
 118              		.global	RCC_AdjustHSICalibrationValue
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 123              		.type	RCC_AdjustHSICalibrationValue, %function
 124              	RCC_AdjustHSICalibrationValue:
 125              	.LFB67:
 291:lib/src/stm32f10x_rcc.c ****       break;
 292:lib/src/stm32f10x_rcc.c ****       
 293:lib/src/stm32f10x_rcc.c ****     default:
 294:lib/src/stm32f10x_rcc.c ****       break;
 295:lib/src/stm32f10x_rcc.c ****   }
 296:lib/src/stm32f10x_rcc.c **** }
 297:lib/src/stm32f10x_rcc.c **** 
 298:lib/src/stm32f10x_rcc.c **** /**
 299:lib/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 300:lib/src/stm32f10x_rcc.c ****   * @param  None
 301:lib/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 302:lib/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 303:lib/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 304:lib/src/stm32f10x_rcc.c ****   */
 305:lib/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 306:lib/src/stm32f10x_rcc.c **** {
 307:lib/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 308:lib/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 309:lib/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 310:lib/src/stm32f10x_rcc.c ****   
 311:lib/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 312:lib/src/stm32f10x_rcc.c ****   do
 313:lib/src/stm32f10x_rcc.c ****   {
 314:lib/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 315:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 316:lib/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 317:lib/src/stm32f10x_rcc.c ****   
 318:lib/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 319:lib/src/stm32f10x_rcc.c ****   {
 320:lib/src/stm32f10x_rcc.c ****     status = SUCCESS;
 321:lib/src/stm32f10x_rcc.c ****   }
 322:lib/src/stm32f10x_rcc.c ****   else
 323:lib/src/stm32f10x_rcc.c ****   {
 324:lib/src/stm32f10x_rcc.c ****     status = ERROR;
 325:lib/src/stm32f10x_rcc.c ****   }  
 326:lib/src/stm32f10x_rcc.c ****   return (status);
 327:lib/src/stm32f10x_rcc.c **** }
 328:lib/src/stm32f10x_rcc.c **** 
 329:lib/src/stm32f10x_rcc.c **** /**
 330:lib/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 331:lib/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
ARM GAS  /tmp/ccZsv2Jc.s 			page 9


 332:lib/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 333:lib/src/stm32f10x_rcc.c ****   * @retval None
 334:lib/src/stm32f10x_rcc.c ****   */
 335:lib/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 336:lib/src/stm32f10x_rcc.c **** {
 126              		.loc 1 336 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL1:
 337:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 338:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 339:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 340:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 132              		.loc 1 340 0
 133 007c 034A     		ldr	r2, .L11
 134 007e 1368     		ldr	r3, [r2]
 135              	.LVL2:
 341:lib/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 342:lib/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 136              		.loc 1 342 0
 137 0080 23F0F803 		bic	r3, r3, #248
 138              	.LVL3:
 343:lib/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 344:lib/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 139              		.loc 1 344 0
 140 0084 43EAC000 		orr	r0, r3, r0, lsl #3
 141              	.LVL4:
 345:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 346:lib/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 142              		.loc 1 346 0
 143 0088 1060     		str	r0, [r2]
 144 008a 7047     		bx	lr
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 008c 00100240 		.word	1073876992
 149              		.cfi_endproc
 150              	.LFE67:
 151              		.size	RCC_AdjustHSICalibrationValue, .-RCC_AdjustHSICalibrationValue
 152              		.align	1
 153              		.global	RCC_HSICmd
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 158              		.type	RCC_HSICmd, %function
 159              	RCC_HSICmd:
 160              	.LFB68:
 347:lib/src/stm32f10x_rcc.c **** }
 348:lib/src/stm32f10x_rcc.c **** 
 349:lib/src/stm32f10x_rcc.c **** /**
 350:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 351:lib/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 352:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 353:lib/src/stm32f10x_rcc.c ****   * @retval None
ARM GAS  /tmp/ccZsv2Jc.s 			page 10


 354:lib/src/stm32f10x_rcc.c ****   */
 355:lib/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 356:lib/src/stm32f10x_rcc.c **** {
 161              		.loc 1 356 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL5:
 357:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 358:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 167              		.loc 1 359 0
 168 0090 014B     		ldr	r3, .L14
 169 0092 1860     		str	r0, [r3]
 170 0094 7047     		bx	lr
 171              	.L15:
 172 0096 00BF     		.align	2
 173              	.L14:
 174 0098 00004242 		.word	1111621632
 175              		.cfi_endproc
 176              	.LFE68:
 177              		.size	RCC_HSICmd, .-RCC_HSICmd
 178              		.align	1
 179              		.global	RCC_PLLConfig
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 184              		.type	RCC_PLLConfig, %function
 185              	RCC_PLLConfig:
 186              	.LFB69:
 360:lib/src/stm32f10x_rcc.c **** }
 361:lib/src/stm32f10x_rcc.c **** 
 362:lib/src/stm32f10x_rcc.c **** /**
 363:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 364:lib/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 365:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 366:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 367:lib/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 368:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 369:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 370:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 371:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 372:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 373:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 374:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 375:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 376:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 377:lib/src/stm32f10x_rcc.c ****   * @retval None
 378:lib/src/stm32f10x_rcc.c ****   */
 379:lib/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 380:lib/src/stm32f10x_rcc.c **** {
 187              		.loc 1 380 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccZsv2Jc.s 			page 11


 191              		@ link register save eliminated.
 192              	.LVL6:
 381:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 382:lib/src/stm32f10x_rcc.c **** 
 383:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 384:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 385:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 386:lib/src/stm32f10x_rcc.c **** 
 387:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 193              		.loc 1 387 0
 194 009c 034A     		ldr	r2, .L17
 195 009e 5368     		ldr	r3, [r2, #4]
 196              	.LVL7:
 388:lib/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 389:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 197              		.loc 1 389 0
 198 00a0 23F47C13 		bic	r3, r3, #4128768
 199              	.LVL8:
 200 00a4 1943     		orrs	r1, r1, r3
 201              	.LVL9:
 390:lib/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 391:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 202              		.loc 1 391 0
 203 00a6 0143     		orrs	r1, r1, r0
 204              	.LVL10:
 392:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 393:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 205              		.loc 1 393 0
 206 00a8 5160     		str	r1, [r2, #4]
 207 00aa 7047     		bx	lr
 208              	.L18:
 209              		.align	2
 210              	.L17:
 211 00ac 00100240 		.word	1073876992
 212              		.cfi_endproc
 213              	.LFE69:
 214              		.size	RCC_PLLConfig, .-RCC_PLLConfig
 215              		.align	1
 216              		.global	RCC_PLLCmd
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 221              		.type	RCC_PLLCmd, %function
 222              	RCC_PLLCmd:
 223              	.LFB70:
 394:lib/src/stm32f10x_rcc.c **** }
 395:lib/src/stm32f10x_rcc.c **** 
 396:lib/src/stm32f10x_rcc.c **** /**
 397:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 398:lib/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 399:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 400:lib/src/stm32f10x_rcc.c ****   * @retval None
 401:lib/src/stm32f10x_rcc.c ****   */
 402:lib/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 403:lib/src/stm32f10x_rcc.c **** {
 224              		.loc 1 403 0
ARM GAS  /tmp/ccZsv2Jc.s 			page 12


 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL11:
 404:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 405:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 406:lib/src/stm32f10x_rcc.c **** 
 407:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 230              		.loc 1 407 0
 231 00b0 014B     		ldr	r3, .L20
 232 00b2 1860     		str	r0, [r3]
 233 00b4 7047     		bx	lr
 234              	.L21:
 235 00b6 00BF     		.align	2
 236              	.L20:
 237 00b8 60004242 		.word	1111621728
 238              		.cfi_endproc
 239              	.LFE70:
 240              		.size	RCC_PLLCmd, .-RCC_PLLCmd
 241              		.align	1
 242              		.global	RCC_SYSCLKConfig
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu softvfp
 247              		.type	RCC_SYSCLKConfig, %function
 248              	RCC_SYSCLKConfig:
 249              	.LFB71:
 408:lib/src/stm32f10x_rcc.c **** }
 409:lib/src/stm32f10x_rcc.c **** 
 410:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 411:lib/src/stm32f10x_rcc.c **** /**
 412:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 413:lib/src/stm32f10x_rcc.c ****   * @note 
 414:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 415:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 416:lib/src/stm32f10x_rcc.c ****   *     devices.
 417:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 418:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 419:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 420:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 421:lib/src/stm32f10x_rcc.c ****   * @note 
 422:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 423:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 424:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 425:lib/src/stm32f10x_rcc.c ****   * @retval None
 426:lib/src/stm32f10x_rcc.c ****   */
 427:lib/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 428:lib/src/stm32f10x_rcc.c **** {
 429:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 430:lib/src/stm32f10x_rcc.c ****   
 431:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 432:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 433:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 434:lib/src/stm32f10x_rcc.c **** 
 435:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
ARM GAS  /tmp/ccZsv2Jc.s 			page 13


 436:lib/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 437:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 438:lib/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 439:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 440:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 441:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 442:lib/src/stm32f10x_rcc.c **** }
 443:lib/src/stm32f10x_rcc.c **** #endif
 444:lib/src/stm32f10x_rcc.c **** 
 445:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 446:lib/src/stm32f10x_rcc.c **** /**
 447:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 448:lib/src/stm32f10x_rcc.c ****   * @note 
 449:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 450:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 451:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 452:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 453:lib/src/stm32f10x_rcc.c ****   * @retval None
 454:lib/src/stm32f10x_rcc.c ****   */
 455:lib/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 456:lib/src/stm32f10x_rcc.c **** {
 457:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 458:lib/src/stm32f10x_rcc.c **** 
 459:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 460:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 461:lib/src/stm32f10x_rcc.c **** 
 462:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 463:lib/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 464:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 465:lib/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 466:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 467:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 468:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 469:lib/src/stm32f10x_rcc.c **** }
 470:lib/src/stm32f10x_rcc.c **** 
 471:lib/src/stm32f10x_rcc.c **** /**
 472:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 473:lib/src/stm32f10x_rcc.c ****   * @note
 474:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 475:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 476:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 477:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 478:lib/src/stm32f10x_rcc.c ****   * @retval None
 479:lib/src/stm32f10x_rcc.c ****   */
 480:lib/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 481:lib/src/stm32f10x_rcc.c **** {
 482:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 483:lib/src/stm32f10x_rcc.c **** 
 484:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 485:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 486:lib/src/stm32f10x_rcc.c **** 
 487:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 488:lib/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 489:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 490:lib/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 491:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 492:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
ARM GAS  /tmp/ccZsv2Jc.s 			page 14


 493:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 494:lib/src/stm32f10x_rcc.c **** }
 495:lib/src/stm32f10x_rcc.c **** 
 496:lib/src/stm32f10x_rcc.c **** 
 497:lib/src/stm32f10x_rcc.c **** /**
 498:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 499:lib/src/stm32f10x_rcc.c ****   * @note 
 500:lib/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 501:lib/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 502:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 503:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 504:lib/src/stm32f10x_rcc.c ****   * @retval None
 505:lib/src/stm32f10x_rcc.c ****   */
 506:lib/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 507:lib/src/stm32f10x_rcc.c **** {
 508:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 509:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 510:lib/src/stm32f10x_rcc.c **** 
 511:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 512:lib/src/stm32f10x_rcc.c **** }
 513:lib/src/stm32f10x_rcc.c **** 
 514:lib/src/stm32f10x_rcc.c **** 
 515:lib/src/stm32f10x_rcc.c **** /**
 516:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 517:lib/src/stm32f10x_rcc.c ****   * @note 
 518:lib/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 519:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 520:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 521:lib/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 522:lib/src/stm32f10x_rcc.c ****   * @retval None
 523:lib/src/stm32f10x_rcc.c ****   */
 524:lib/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 525:lib/src/stm32f10x_rcc.c **** {
 526:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 527:lib/src/stm32f10x_rcc.c **** 
 528:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 529:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 530:lib/src/stm32f10x_rcc.c **** 
 531:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 532:lib/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 533:lib/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 534:lib/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 535:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 536:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 537:lib/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 538:lib/src/stm32f10x_rcc.c **** }
 539:lib/src/stm32f10x_rcc.c **** 
 540:lib/src/stm32f10x_rcc.c **** 
 541:lib/src/stm32f10x_rcc.c **** /**
 542:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 543:lib/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 544:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 545:lib/src/stm32f10x_rcc.c ****   * @retval None
 546:lib/src/stm32f10x_rcc.c ****   */
 547:lib/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 548:lib/src/stm32f10x_rcc.c **** {
 549:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccZsv2Jc.s 			page 15


 550:lib/src/stm32f10x_rcc.c **** 
 551:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 552:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 553:lib/src/stm32f10x_rcc.c **** }
 554:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 555:lib/src/stm32f10x_rcc.c **** 
 556:lib/src/stm32f10x_rcc.c **** /**
 557:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 558:lib/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 559:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 560:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 561:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 562:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 563:lib/src/stm32f10x_rcc.c ****   * @retval None
 564:lib/src/stm32f10x_rcc.c ****   */
 565:lib/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 566:lib/src/stm32f10x_rcc.c **** {
 250              		.loc 1 566 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL12:
 567:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 568:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 569:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 570:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 256              		.loc 1 570 0
 257 00bc 034A     		ldr	r2, .L23
 258 00be 5368     		ldr	r3, [r2, #4]
 259              	.LVL13:
 571:lib/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 572:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 260              		.loc 1 572 0
 261 00c0 23F00303 		bic	r3, r3, #3
 262              	.LVL14:
 573:lib/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 574:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 263              		.loc 1 574 0
 264 00c4 1843     		orrs	r0, r0, r3
 265              	.LVL15:
 575:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 576:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 266              		.loc 1 576 0
 267 00c6 5060     		str	r0, [r2, #4]
 268 00c8 7047     		bx	lr
 269              	.L24:
 270 00ca 00BF     		.align	2
 271              	.L23:
 272 00cc 00100240 		.word	1073876992
 273              		.cfi_endproc
 274              	.LFE71:
 275              		.size	RCC_SYSCLKConfig, .-RCC_SYSCLKConfig
 276              		.align	1
 277              		.global	RCC_GetSYSCLKSource
 278              		.syntax unified
 279              		.thumb
ARM GAS  /tmp/ccZsv2Jc.s 			page 16


 280              		.thumb_func
 281              		.fpu softvfp
 282              		.type	RCC_GetSYSCLKSource, %function
 283              	RCC_GetSYSCLKSource:
 284              	.LFB72:
 577:lib/src/stm32f10x_rcc.c **** }
 578:lib/src/stm32f10x_rcc.c **** 
 579:lib/src/stm32f10x_rcc.c **** /**
 580:lib/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 581:lib/src/stm32f10x_rcc.c ****   * @param  None
 582:lib/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 583:lib/src/stm32f10x_rcc.c ****   *   be one of the following:
 584:lib/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 585:lib/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 586:lib/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 587:lib/src/stm32f10x_rcc.c ****   */
 588:lib/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 589:lib/src/stm32f10x_rcc.c **** {
 285              		.loc 1 589 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 590:lib/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 290              		.loc 1 590 0
 291 00d0 024B     		ldr	r3, .L26
 292 00d2 5868     		ldr	r0, [r3, #4]
 591:lib/src/stm32f10x_rcc.c **** }
 293              		.loc 1 591 0
 294 00d4 00F00C00 		and	r0, r0, #12
 295 00d8 7047     		bx	lr
 296              	.L27:
 297 00da 00BF     		.align	2
 298              	.L26:
 299 00dc 00100240 		.word	1073876992
 300              		.cfi_endproc
 301              	.LFE72:
 302              		.size	RCC_GetSYSCLKSource, .-RCC_GetSYSCLKSource
 303              		.align	1
 304              		.global	RCC_HCLKConfig
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu softvfp
 309              		.type	RCC_HCLKConfig, %function
 310              	RCC_HCLKConfig:
 311              	.LFB73:
 592:lib/src/stm32f10x_rcc.c **** 
 593:lib/src/stm32f10x_rcc.c **** /**
 594:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 595:lib/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 596:lib/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 597:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 598:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 599:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 600:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 601:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
ARM GAS  /tmp/ccZsv2Jc.s 			page 17


 602:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 603:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 604:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 605:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 606:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 607:lib/src/stm32f10x_rcc.c ****   * @retval None
 608:lib/src/stm32f10x_rcc.c ****   */
 609:lib/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 610:lib/src/stm32f10x_rcc.c **** {
 312              		.loc 1 610 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL16:
 611:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 612:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 613:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 614:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 318              		.loc 1 614 0
 319 00e0 034A     		ldr	r2, .L29
 320 00e2 5368     		ldr	r3, [r2, #4]
 321              	.LVL17:
 615:lib/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 616:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 322              		.loc 1 616 0
 323 00e4 23F0F003 		bic	r3, r3, #240
 324              	.LVL18:
 617:lib/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 618:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 325              		.loc 1 618 0
 326 00e8 1843     		orrs	r0, r0, r3
 327              	.LVL19:
 619:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 620:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 328              		.loc 1 620 0
 329 00ea 5060     		str	r0, [r2, #4]
 330 00ec 7047     		bx	lr
 331              	.L30:
 332 00ee 00BF     		.align	2
 333              	.L29:
 334 00f0 00100240 		.word	1073876992
 335              		.cfi_endproc
 336              	.LFE73:
 337              		.size	RCC_HCLKConfig, .-RCC_HCLKConfig
 338              		.align	1
 339              		.global	RCC_PCLK1Config
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 344              		.type	RCC_PCLK1Config, %function
 345              	RCC_PCLK1Config:
 346              	.LFB74:
 621:lib/src/stm32f10x_rcc.c **** }
 622:lib/src/stm32f10x_rcc.c **** 
 623:lib/src/stm32f10x_rcc.c **** /**
ARM GAS  /tmp/ccZsv2Jc.s 			page 18


 624:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 625:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 626:lib/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 627:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 628:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 629:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 630:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 631:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 632:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 633:lib/src/stm32f10x_rcc.c ****   * @retval None
 634:lib/src/stm32f10x_rcc.c ****   */
 635:lib/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 636:lib/src/stm32f10x_rcc.c **** {
 347              		.loc 1 636 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              	.LVL20:
 637:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 638:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 639:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 640:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 353              		.loc 1 640 0
 354 00f4 034A     		ldr	r2, .L32
 355 00f6 5368     		ldr	r3, [r2, #4]
 356              	.LVL21:
 641:lib/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 642:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 357              		.loc 1 642 0
 358 00f8 23F4E063 		bic	r3, r3, #1792
 359              	.LVL22:
 643:lib/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 644:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 360              		.loc 1 644 0
 361 00fc 1843     		orrs	r0, r0, r3
 362              	.LVL23:
 645:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 646:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 363              		.loc 1 646 0
 364 00fe 5060     		str	r0, [r2, #4]
 365 0100 7047     		bx	lr
 366              	.L33:
 367 0102 00BF     		.align	2
 368              	.L32:
 369 0104 00100240 		.word	1073876992
 370              		.cfi_endproc
 371              	.LFE74:
 372              		.size	RCC_PCLK1Config, .-RCC_PCLK1Config
 373              		.align	1
 374              		.global	RCC_PCLK2Config
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 379              		.type	RCC_PCLK2Config, %function
 380              	RCC_PCLK2Config:
ARM GAS  /tmp/ccZsv2Jc.s 			page 19


 381              	.LFB75:
 647:lib/src/stm32f10x_rcc.c **** }
 648:lib/src/stm32f10x_rcc.c **** 
 649:lib/src/stm32f10x_rcc.c **** /**
 650:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 651:lib/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 652:lib/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 653:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 654:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 655:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 656:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 657:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 658:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 659:lib/src/stm32f10x_rcc.c ****   * @retval None
 660:lib/src/stm32f10x_rcc.c ****   */
 661:lib/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 662:lib/src/stm32f10x_rcc.c **** {
 382              		.loc 1 662 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL24:
 663:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 664:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 665:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 666:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 388              		.loc 1 666 0
 389 0108 034A     		ldr	r2, .L35
 390 010a 5368     		ldr	r3, [r2, #4]
 391              	.LVL25:
 667:lib/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 668:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 392              		.loc 1 668 0
 393 010c 23F46053 		bic	r3, r3, #14336
 394              	.LVL26:
 669:lib/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 670:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 395              		.loc 1 670 0
 396 0110 43EAC000 		orr	r0, r3, r0, lsl #3
 397              	.LVL27:
 671:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 672:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 398              		.loc 1 672 0
 399 0114 5060     		str	r0, [r2, #4]
 400 0116 7047     		bx	lr
 401              	.L36:
 402              		.align	2
 403              	.L35:
 404 0118 00100240 		.word	1073876992
 405              		.cfi_endproc
 406              	.LFE75:
 407              		.size	RCC_PCLK2Config, .-RCC_PCLK2Config
 408              		.align	1
 409              		.global	RCC_ITConfig
 410              		.syntax unified
 411              		.thumb
ARM GAS  /tmp/ccZsv2Jc.s 			page 20


 412              		.thumb_func
 413              		.fpu softvfp
 414              		.type	RCC_ITConfig, %function
 415              	RCC_ITConfig:
 416              	.LFB76:
 673:lib/src/stm32f10x_rcc.c **** }
 674:lib/src/stm32f10x_rcc.c **** 
 675:lib/src/stm32f10x_rcc.c **** /**
 676:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 677:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 678:lib/src/stm32f10x_rcc.c ****   * 
 679:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 680:lib/src/stm32f10x_rcc.c ****   *   of the following values        
 681:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 682:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 683:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 684:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 685:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 686:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 687:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 688:lib/src/stm32f10x_rcc.c ****   * 
 689:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 690:lib/src/stm32f10x_rcc.c ****   *   following values        
 691:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 692:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 693:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 694:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 695:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 696:lib/src/stm32f10x_rcc.c ****   *       
 697:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 698:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 699:lib/src/stm32f10x_rcc.c ****   * @retval None
 700:lib/src/stm32f10x_rcc.c ****   */
 701:lib/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 702:lib/src/stm32f10x_rcc.c **** {
 417              		.loc 1 702 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL28:
 703:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 704:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 705:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 423              		.loc 1 706 0
 424 011c 29B9     		cbnz	r1, .L40
 707:lib/src/stm32f10x_rcc.c ****   {
 708:lib/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 709:lib/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 710:lib/src/stm32f10x_rcc.c ****   }
 711:lib/src/stm32f10x_rcc.c ****   else
 712:lib/src/stm32f10x_rcc.c ****   {
 713:lib/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 714:lib/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 425              		.loc 1 714 0
 426 011e 054A     		ldr	r2, .L41
ARM GAS  /tmp/ccZsv2Jc.s 			page 21


 427 0120 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 428 0122 23EA0000 		bic	r0, r3, r0
 429              	.LVL29:
 430 0126 1070     		strb	r0, [r2]
 431 0128 7047     		bx	lr
 432              	.LVL30:
 433              	.L40:
 709:lib/src/stm32f10x_rcc.c ****   }
 434              		.loc 1 709 0
 435 012a 024A     		ldr	r2, .L41
 436 012c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 437 012e 1843     		orrs	r0, r0, r3
 438              	.LVL31:
 439 0130 1070     		strb	r0, [r2]
 440 0132 7047     		bx	lr
 441              	.L42:
 442              		.align	2
 443              	.L41:
 444 0134 09100240 		.word	1073877001
 445              		.cfi_endproc
 446              	.LFE76:
 447              		.size	RCC_ITConfig, .-RCC_ITConfig
 448              		.align	1
 449              		.global	RCC_USBCLKConfig
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 454              		.type	RCC_USBCLKConfig, %function
 455              	RCC_USBCLKConfig:
 456              	.LFB77:
 715:lib/src/stm32f10x_rcc.c ****   }
 716:lib/src/stm32f10x_rcc.c **** }
 717:lib/src/stm32f10x_rcc.c **** 
 718:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 719:lib/src/stm32f10x_rcc.c **** /**
 720:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 721:lib/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 722:lib/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 723:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 724:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 725:lib/src/stm32f10x_rcc.c ****   *                                     clock source
 726:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 727:lib/src/stm32f10x_rcc.c ****   * @retval None
 728:lib/src/stm32f10x_rcc.c ****   */
 729:lib/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 730:lib/src/stm32f10x_rcc.c **** {
 457              		.loc 1 730 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL32:
 731:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 732:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 733:lib/src/stm32f10x_rcc.c **** 
 734:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
ARM GAS  /tmp/ccZsv2Jc.s 			page 22


 463              		.loc 1 734 0
 464 0138 014B     		ldr	r3, .L44
 465 013a 1860     		str	r0, [r3]
 466 013c 7047     		bx	lr
 467              	.L45:
 468 013e 00BF     		.align	2
 469              	.L44:
 470 0140 D8004242 		.word	1111621848
 471              		.cfi_endproc
 472              	.LFE77:
 473              		.size	RCC_USBCLKConfig, .-RCC_USBCLKConfig
 474              		.align	1
 475              		.global	RCC_ADCCLKConfig
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu softvfp
 480              		.type	RCC_ADCCLKConfig, %function
 481              	RCC_ADCCLKConfig:
 482              	.LFB78:
 735:lib/src/stm32f10x_rcc.c **** }
 736:lib/src/stm32f10x_rcc.c **** #else
 737:lib/src/stm32f10x_rcc.c **** /**
 738:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 739:lib/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 740:lib/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 741:lib/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 742:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 743:lib/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:lib/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 745:lib/src/stm32f10x_rcc.c ****   * @retval None
 746:lib/src/stm32f10x_rcc.c ****   */
 747:lib/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 748:lib/src/stm32f10x_rcc.c **** {
 749:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 750:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 751:lib/src/stm32f10x_rcc.c **** 
 752:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 753:lib/src/stm32f10x_rcc.c **** }
 754:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 755:lib/src/stm32f10x_rcc.c **** 
 756:lib/src/stm32f10x_rcc.c **** /**
 757:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 758:lib/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 759:lib/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 760:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 761:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 762:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 763:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 764:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 765:lib/src/stm32f10x_rcc.c ****   * @retval None
 766:lib/src/stm32f10x_rcc.c ****   */
 767:lib/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 768:lib/src/stm32f10x_rcc.c **** {
 483              		.loc 1 768 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccZsv2Jc.s 			page 23


 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL33:
 769:lib/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 770:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 771:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 772:lib/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 489              		.loc 1 772 0
 490 0144 034A     		ldr	r2, .L47
 491 0146 5368     		ldr	r3, [r2, #4]
 492              	.LVL34:
 773:lib/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 774:lib/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 493              		.loc 1 774 0
 494 0148 23F44043 		bic	r3, r3, #49152
 495              	.LVL35:
 775:lib/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 776:lib/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 496              		.loc 1 776 0
 497 014c 1843     		orrs	r0, r0, r3
 498              	.LVL36:
 777:lib/src/stm32f10x_rcc.c ****   /* Store the new value */
 778:lib/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 499              		.loc 1 778 0
 500 014e 5060     		str	r0, [r2, #4]
 501 0150 7047     		bx	lr
 502              	.L48:
 503 0152 00BF     		.align	2
 504              	.L47:
 505 0154 00100240 		.word	1073876992
 506              		.cfi_endproc
 507              	.LFE78:
 508              		.size	RCC_ADCCLKConfig, .-RCC_ADCCLKConfig
 509              		.align	1
 510              		.global	RCC_LSEConfig
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu softvfp
 515              		.type	RCC_LSEConfig, %function
 516              	RCC_LSEConfig:
 517              	.LFB79:
 779:lib/src/stm32f10x_rcc.c **** }
 780:lib/src/stm32f10x_rcc.c **** 
 781:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 782:lib/src/stm32f10x_rcc.c **** /**
 783:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 784:lib/src/stm32f10x_rcc.c ****   * @note
 785:lib/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 786:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 787:lib/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 788:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 789:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 790:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 791:lib/src/stm32f10x_rcc.c ****   * @retval None
 792:lib/src/stm32f10x_rcc.c ****   */
 793:lib/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
ARM GAS  /tmp/ccZsv2Jc.s 			page 24


 794:lib/src/stm32f10x_rcc.c **** {
 795:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 796:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 797:lib/src/stm32f10x_rcc.c **** 
 798:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 799:lib/src/stm32f10x_rcc.c **** }
 800:lib/src/stm32f10x_rcc.c **** 
 801:lib/src/stm32f10x_rcc.c **** /**
 802:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 803:lib/src/stm32f10x_rcc.c ****   * @note
 804:lib/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 805:lib/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 806:lib/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 807:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 808:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 809:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 810:lib/src/stm32f10x_rcc.c ****   * @retval None
 811:lib/src/stm32f10x_rcc.c ****   */
 812:lib/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 813:lib/src/stm32f10x_rcc.c **** {
 814:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 815:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 816:lib/src/stm32f10x_rcc.c **** 
 817:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 818:lib/src/stm32f10x_rcc.c **** }
 819:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 820:lib/src/stm32f10x_rcc.c **** 
 821:lib/src/stm32f10x_rcc.c **** /**
 822:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 823:lib/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 824:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 825:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 826:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 827:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 828:lib/src/stm32f10x_rcc.c ****   * @retval None
 829:lib/src/stm32f10x_rcc.c ****   */
 830:lib/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 831:lib/src/stm32f10x_rcc.c **** {
 518              		.loc 1 831 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL37:
 832:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 833:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 834:lib/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 835:lib/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 836:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 524              		.loc 1 836 0
 525 0158 084B     		ldr	r3, .L53
 526 015a 0022     		movs	r2, #0
 527 015c 1A70     		strb	r2, [r3]
 837:lib/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 838:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 528              		.loc 1 838 0
 529 015e 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccZsv2Jc.s 			page 25


 839:lib/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 840:lib/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 530              		.loc 1 840 0
 531 0160 0128     		cmp	r0, #1
 532 0162 02D0     		beq	.L51
 533 0164 0428     		cmp	r0, #4
 534 0166 04D0     		beq	.L52
 535 0168 7047     		bx	lr
 536              	.L51:
 841:lib/src/stm32f10x_rcc.c ****   {
 842:lib/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 843:lib/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 844:lib/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 537              		.loc 1 844 0
 538 016a 0122     		movs	r2, #1
 539 016c 034B     		ldr	r3, .L53
 540 016e 1A70     		strb	r2, [r3]
 845:lib/src/stm32f10x_rcc.c ****       break;
 541              		.loc 1 845 0
 542 0170 7047     		bx	lr
 543              	.L52:
 846:lib/src/stm32f10x_rcc.c ****       
 847:lib/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 848:lib/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 849:lib/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 544              		.loc 1 849 0
 545 0172 0522     		movs	r2, #5
 546 0174 014B     		ldr	r3, .L53
 547 0176 1A70     		strb	r2, [r3]
 548 0178 7047     		bx	lr
 549              	.L54:
 550 017a 00BF     		.align	2
 551              	.L53:
 552 017c 20100240 		.word	1073877024
 553              		.cfi_endproc
 554              	.LFE79:
 555              		.size	RCC_LSEConfig, .-RCC_LSEConfig
 556              		.align	1
 557              		.global	RCC_LSICmd
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 562              		.type	RCC_LSICmd, %function
 563              	RCC_LSICmd:
 564              	.LFB80:
 850:lib/src/stm32f10x_rcc.c ****       break;            
 851:lib/src/stm32f10x_rcc.c ****       
 852:lib/src/stm32f10x_rcc.c ****     default:
 853:lib/src/stm32f10x_rcc.c ****       break;      
 854:lib/src/stm32f10x_rcc.c ****   }
 855:lib/src/stm32f10x_rcc.c **** }
 856:lib/src/stm32f10x_rcc.c **** 
 857:lib/src/stm32f10x_rcc.c **** /**
 858:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 859:lib/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 860:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccZsv2Jc.s 			page 26


 861:lib/src/stm32f10x_rcc.c ****   * @retval None
 862:lib/src/stm32f10x_rcc.c ****   */
 863:lib/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 864:lib/src/stm32f10x_rcc.c **** {
 565              		.loc 1 864 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL38:
 865:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 866:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 867:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 571              		.loc 1 867 0
 572 0180 014B     		ldr	r3, .L56
 573 0182 1860     		str	r0, [r3]
 574 0184 7047     		bx	lr
 575              	.L57:
 576 0186 00BF     		.align	2
 577              	.L56:
 578 0188 80044242 		.word	1111622784
 579              		.cfi_endproc
 580              	.LFE80:
 581              		.size	RCC_LSICmd, .-RCC_LSICmd
 582              		.align	1
 583              		.global	RCC_RTCCLKConfig
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu softvfp
 588              		.type	RCC_RTCCLKConfig, %function
 589              	RCC_RTCCLKConfig:
 590              	.LFB81:
 868:lib/src/stm32f10x_rcc.c **** }
 869:lib/src/stm32f10x_rcc.c **** 
 870:lib/src/stm32f10x_rcc.c **** /**
 871:lib/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 872:lib/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 873:lib/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 874:lib/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 875:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 876:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 877:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 878:lib/src/stm32f10x_rcc.c ****   * @retval None
 879:lib/src/stm32f10x_rcc.c ****   */
 880:lib/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 881:lib/src/stm32f10x_rcc.c **** {
 591              		.loc 1 881 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL39:
 882:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 883:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 884:lib/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 885:lib/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
ARM GAS  /tmp/ccZsv2Jc.s 			page 27


 597              		.loc 1 885 0
 598 018c 024A     		ldr	r2, .L59
 599 018e 136A     		ldr	r3, [r2, #32]
 600 0190 1843     		orrs	r0, r0, r3
 601              	.LVL40:
 602 0192 1062     		str	r0, [r2, #32]
 603 0194 7047     		bx	lr
 604              	.L60:
 605 0196 00BF     		.align	2
 606              	.L59:
 607 0198 00100240 		.word	1073876992
 608              		.cfi_endproc
 609              	.LFE81:
 610              		.size	RCC_RTCCLKConfig, .-RCC_RTCCLKConfig
 611              		.align	1
 612              		.global	RCC_RTCCLKCmd
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu softvfp
 617              		.type	RCC_RTCCLKCmd, %function
 618              	RCC_RTCCLKCmd:
 619              	.LFB82:
 886:lib/src/stm32f10x_rcc.c **** }
 887:lib/src/stm32f10x_rcc.c **** 
 888:lib/src/stm32f10x_rcc.c **** /**
 889:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 890:lib/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 891:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 892:lib/src/stm32f10x_rcc.c ****   * @retval None
 893:lib/src/stm32f10x_rcc.c ****   */
 894:lib/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 895:lib/src/stm32f10x_rcc.c **** {
 620              		.loc 1 895 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625              	.LVL41:
 896:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
 897:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 898:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 626              		.loc 1 898 0
 627 019c 014B     		ldr	r3, .L62
 628 019e 1860     		str	r0, [r3]
 629 01a0 7047     		bx	lr
 630              	.L63:
 631 01a2 00BF     		.align	2
 632              	.L62:
 633 01a4 3C044242 		.word	1111622716
 634              		.cfi_endproc
 635              	.LFE82:
 636              		.size	RCC_RTCCLKCmd, .-RCC_RTCCLKCmd
 637              		.align	1
 638              		.global	RCC_GetClocksFreq
 639              		.syntax unified
 640              		.thumb
ARM GAS  /tmp/ccZsv2Jc.s 			page 28


 641              		.thumb_func
 642              		.fpu softvfp
 643              		.type	RCC_GetClocksFreq, %function
 644              	RCC_GetClocksFreq:
 645              	.LFB83:
 899:lib/src/stm32f10x_rcc.c **** }
 900:lib/src/stm32f10x_rcc.c **** 
 901:lib/src/stm32f10x_rcc.c **** /**
 902:lib/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 903:lib/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 904:lib/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 905:lib/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 906:lib/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 907:lib/src/stm32f10x_rcc.c ****   * @retval None
 908:lib/src/stm32f10x_rcc.c ****   */
 909:lib/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 910:lib/src/stm32f10x_rcc.c **** {
 646              		.loc 1 910 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651              	.LVL42:
 652 01a8 10B4     		push	{r4}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 4, -4
 655              	.LVL43:
 911:lib/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 912:lib/src/stm32f10x_rcc.c **** 
 913:lib/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 914:lib/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 915:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 916:lib/src/stm32f10x_rcc.c **** 
 917:lib/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 918:lib/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 919:lib/src/stm32f10x_rcc.c **** #endif
 920:lib/src/stm32f10x_rcc.c ****     
 921:lib/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 922:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 656              		.loc 1 922 0
 657 01aa 274B     		ldr	r3, .L76
 658 01ac 5B68     		ldr	r3, [r3, #4]
 659              	.LVL44:
 660 01ae 03F00C03 		and	r3, r3, #12
 661              	.LVL45:
 923:lib/src/stm32f10x_rcc.c ****   
 924:lib/src/stm32f10x_rcc.c ****   switch (tmp)
 662              		.loc 1 924 0
 663 01b2 042B     		cmp	r3, #4
 664 01b4 2BD0     		beq	.L66
 665 01b6 082B     		cmp	r3, #8
 666 01b8 2CD0     		beq	.L67
 667 01ba 13B1     		cbz	r3, .L74
 925:lib/src/stm32f10x_rcc.c ****   {
 926:lib/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 927:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 928:lib/src/stm32f10x_rcc.c ****       break;
ARM GAS  /tmp/ccZsv2Jc.s 			page 29


 929:lib/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 930:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 931:lib/src/stm32f10x_rcc.c ****       break;
 932:lib/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 933:lib/src/stm32f10x_rcc.c **** 
 934:lib/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 935:lib/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 936:lib/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 937:lib/src/stm32f10x_rcc.c ****       
 938:lib/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 939:lib/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 940:lib/src/stm32f10x_rcc.c ****       
 941:lib/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 942:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 943:lib/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 944:lib/src/stm32f10x_rcc.c ****       }
 945:lib/src/stm32f10x_rcc.c ****       else
 946:lib/src/stm32f10x_rcc.c ****       {
 947:lib/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 948:lib/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 949:lib/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 950:lib/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 951:lib/src/stm32f10x_rcc.c ****  #else
 952:lib/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 953:lib/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 954:lib/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 955:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 956:lib/src/stm32f10x_rcc.c ****         }
 957:lib/src/stm32f10x_rcc.c ****         else
 958:lib/src/stm32f10x_rcc.c ****         {
 959:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 960:lib/src/stm32f10x_rcc.c ****         }
 961:lib/src/stm32f10x_rcc.c ****  #endif
 962:lib/src/stm32f10x_rcc.c ****       }
 963:lib/src/stm32f10x_rcc.c **** #else
 964:lib/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 965:lib/src/stm32f10x_rcc.c ****       
 966:lib/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 967:lib/src/stm32f10x_rcc.c ****       {
 968:lib/src/stm32f10x_rcc.c ****          pllmull += 2;
 969:lib/src/stm32f10x_rcc.c ****       }
 970:lib/src/stm32f10x_rcc.c ****       else
 971:lib/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 972:lib/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 973:lib/src/stm32f10x_rcc.c ****       }
 974:lib/src/stm32f10x_rcc.c ****             
 975:lib/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 976:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 977:lib/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 978:lib/src/stm32f10x_rcc.c ****       }
 979:lib/src/stm32f10x_rcc.c ****       else
 980:lib/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 981:lib/src/stm32f10x_rcc.c ****         
 982:lib/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 983:lib/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 984:lib/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 985:lib/src/stm32f10x_rcc.c ****         
ARM GAS  /tmp/ccZsv2Jc.s 			page 30


 986:lib/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 987:lib/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 988:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 989:lib/src/stm32f10x_rcc.c ****         }
 990:lib/src/stm32f10x_rcc.c ****         else
 991:lib/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 992:lib/src/stm32f10x_rcc.c ****           
 993:lib/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 994:lib/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 995:lib/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 996:lib/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 997:lib/src/stm32f10x_rcc.c ****         }
 998:lib/src/stm32f10x_rcc.c ****       }
 999:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1000:lib/src/stm32f10x_rcc.c ****       break;
1001:lib/src/stm32f10x_rcc.c **** 
1002:lib/src/stm32f10x_rcc.c ****     default:
1003:lib/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 668              		.loc 1 1003 0
 669 01bc 234B     		ldr	r3, .L76+4
 670              	.LVL46:
 671 01be 0360     		str	r3, [r0]
1004:lib/src/stm32f10x_rcc.c ****       break;
 672              		.loc 1 1004 0
 673 01c0 01E0     		b	.L69
 674              	.LVL47:
 675              	.L74:
 927:lib/src/stm32f10x_rcc.c ****       break;
 676              		.loc 1 927 0
 677 01c2 224B     		ldr	r3, .L76+4
 678              	.LVL48:
 679 01c4 0360     		str	r3, [r0]
 680              	.LVL49:
 681              	.L69:
1005:lib/src/stm32f10x_rcc.c ****   }
1006:lib/src/stm32f10x_rcc.c **** 
1007:lib/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1008:lib/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1009:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 682              		.loc 1 1009 0
 683 01c6 204C     		ldr	r4, .L76
 684 01c8 6368     		ldr	r3, [r4, #4]
 685              	.LVL50:
1010:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 686              		.loc 1 1010 0
 687 01ca C3F30313 		ubfx	r3, r3, #4, #4
 688              	.LVL51:
1011:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 689              		.loc 1 1011 0
 690 01ce 204A     		ldr	r2, .L76+8
 691 01d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 692              	.LVL52:
 693 01d2 D9B2     		uxtb	r1, r3
 694              	.LVL53:
1012:lib/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1013:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 695              		.loc 1 1013 0
ARM GAS  /tmp/ccZsv2Jc.s 			page 31


 696 01d4 0368     		ldr	r3, [r0]
 697 01d6 CB40     		lsrs	r3, r3, r1
 698 01d8 4360     		str	r3, [r0, #4]
1014:lib/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1015:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 699              		.loc 1 1015 0
 700 01da 6168     		ldr	r1, [r4, #4]
 701              	.LVL54:
1016:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 702              		.loc 1 1016 0
 703 01dc C1F30221 		ubfx	r1, r1, #8, #3
 704              	.LVL55:
1017:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 705              		.loc 1 1017 0
 706 01e0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 707              	.LVL56:
 708 01e2 C9B2     		uxtb	r1, r1
 709              	.LVL57:
1018:lib/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1019:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 710              		.loc 1 1019 0
 711 01e4 23FA01F1 		lsr	r1, r3, r1
 712              	.LVL58:
 713 01e8 8160     		str	r1, [r0, #8]
1020:lib/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1021:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 714              		.loc 1 1021 0
 715 01ea 6168     		ldr	r1, [r4, #4]
 716              	.LVL59:
1022:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 717              		.loc 1 1022 0
 718 01ec C1F3C221 		ubfx	r1, r1, #11, #3
 719              	.LVL60:
1023:lib/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 720              		.loc 1 1023 0
 721 01f0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 722              	.LVL61:
 723 01f2 C9B2     		uxtb	r1, r1
 724              	.LVL62:
1024:lib/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1025:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 725              		.loc 1 1025 0
 726 01f4 CB40     		lsrs	r3, r3, r1
 727 01f6 C360     		str	r3, [r0, #12]
1026:lib/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1027:lib/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 728              		.loc 1 1027 0
 729 01f8 6168     		ldr	r1, [r4, #4]
 730              	.LVL63:
1028:lib/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 731              		.loc 1 1028 0
 732 01fa C1F38131 		ubfx	r1, r1, #14, #2
 733              	.LVL64:
1029:lib/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 734              		.loc 1 1029 0
 735 01fe 0A44     		add	r2, r2, r1
 736 0200 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
ARM GAS  /tmp/ccZsv2Jc.s 			page 32


 737 0202 D2B2     		uxtb	r2, r2
 738              	.LVL65:
1030:lib/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1031:lib/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 739              		.loc 1 1031 0
 740 0204 B3FBF2F3 		udiv	r3, r3, r2
 741 0208 0361     		str	r3, [r0, #16]
1032:lib/src/stm32f10x_rcc.c **** }
 742              		.loc 1 1032 0
 743 020a 10BC     		pop	{r4}
 744              		.cfi_remember_state
 745              		.cfi_restore 4
 746              		.cfi_def_cfa_offset 0
 747 020c 7047     		bx	lr
 748              	.LVL66:
 749              	.L66:
 750              		.cfi_restore_state
 930:lib/src/stm32f10x_rcc.c ****       break;
 751              		.loc 1 930 0
 752 020e 0F4B     		ldr	r3, .L76+4
 753              	.LVL67:
 754 0210 0360     		str	r3, [r0]
 931:lib/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 755              		.loc 1 931 0
 756 0212 D8E7     		b	.L69
 757              	.LVL68:
 758              	.L67:
 935:lib/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 759              		.loc 1 935 0
 760 0214 0C4A     		ldr	r2, .L76
 761 0216 5368     		ldr	r3, [r2, #4]
 762              	.LVL69:
 936:lib/src/stm32f10x_rcc.c ****       
 763              		.loc 1 936 0
 764 0218 5268     		ldr	r2, [r2, #4]
 765              	.LVL70:
 939:lib/src/stm32f10x_rcc.c ****       
 766              		.loc 1 939 0
 767 021a C3F38343 		ubfx	r3, r3, #18, #4
 768              	.LVL71:
 769 021e 0233     		adds	r3, r3, #2
 770              	.LVL72:
 941:lib/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 771              		.loc 1 941 0
 772 0220 12F4803F 		tst	r2, #65536
 773 0224 0AD0     		beq	.L75
 953:lib/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 774              		.loc 1 953 0
 775 0226 084A     		ldr	r2, .L76
 776              	.LVL73:
 777 0228 5268     		ldr	r2, [r2, #4]
 778 022a 12F4003F 		tst	r2, #131072
 955:lib/src/stm32f10x_rcc.c ****         }
 779              		.loc 1 955 0
 780 022e 14BF     		ite	ne
 781 0230 084A     		ldrne	r2, .L76+12
 959:lib/src/stm32f10x_rcc.c ****         }
ARM GAS  /tmp/ccZsv2Jc.s 			page 33


 782              		.loc 1 959 0
 783 0232 064A     		ldreq	r2, .L76+4
 784 0234 02FB03F3 		mul	r3, r2, r3
 785              	.LVL74:
 786 0238 0360     		str	r3, [r0]
 787 023a C4E7     		b	.L69
 788              	.LVL75:
 789              	.L75:
 943:lib/src/stm32f10x_rcc.c ****       }
 790              		.loc 1 943 0
 791 023c 054A     		ldr	r2, .L76+12
 792              	.LVL76:
 793 023e 02FB03F3 		mul	r3, r2, r3
 794              	.LVL77:
 795 0242 0360     		str	r3, [r0]
 796 0244 BFE7     		b	.L69
 797              	.L77:
 798 0246 00BF     		.align	2
 799              	.L76:
 800 0248 00100240 		.word	1073876992
 801 024c 00127A00 		.word	8000000
 802 0250 00000000 		.word	.LANCHOR0
 803 0254 00093D00 		.word	4000000
 804              		.cfi_endproc
 805              	.LFE83:
 806              		.size	RCC_GetClocksFreq, .-RCC_GetClocksFreq
 807              		.align	1
 808              		.global	RCC_AHBPeriphClockCmd
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu softvfp
 813              		.type	RCC_AHBPeriphClockCmd, %function
 814              	RCC_AHBPeriphClockCmd:
 815              	.LFB84:
1033:lib/src/stm32f10x_rcc.c **** 
1034:lib/src/stm32f10x_rcc.c **** /**
1035:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1036:lib/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1037:lib/src/stm32f10x_rcc.c ****   *   
1038:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1039:lib/src/stm32f10x_rcc.c ****   *   of the following values:        
1040:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1041:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1042:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1043:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1044:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1045:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1046:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1047:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1048:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1049:lib/src/stm32f10x_rcc.c ****   * 
1050:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1051:lib/src/stm32f10x_rcc.c ****   *   following values:        
1052:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1053:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1054:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
ARM GAS  /tmp/ccZsv2Jc.s 			page 34


1055:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1056:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1057:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1058:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1059:lib/src/stm32f10x_rcc.c ****   *   
1060:lib/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1061:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1062:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1063:lib/src/stm32f10x_rcc.c ****   * @retval None
1064:lib/src/stm32f10x_rcc.c ****   */
1065:lib/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1066:lib/src/stm32f10x_rcc.c **** {
 816              		.loc 1 1066 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821              	.LVL78:
1067:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1068:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1069:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1070:lib/src/stm32f10x_rcc.c **** 
1071:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 822              		.loc 1 1071 0
 823 0258 29B9     		cbnz	r1, .L81
1072:lib/src/stm32f10x_rcc.c ****   {
1073:lib/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
1074:lib/src/stm32f10x_rcc.c ****   }
1075:lib/src/stm32f10x_rcc.c ****   else
1076:lib/src/stm32f10x_rcc.c ****   {
1077:lib/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 824              		.loc 1 1077 0
 825 025a 054A     		ldr	r2, .L82
 826 025c 5369     		ldr	r3, [r2, #20]
 827 025e 23EA0000 		bic	r0, r3, r0
 828              	.LVL79:
 829 0262 5061     		str	r0, [r2, #20]
 830 0264 7047     		bx	lr
 831              	.LVL80:
 832              	.L81:
1073:lib/src/stm32f10x_rcc.c ****   }
 833              		.loc 1 1073 0
 834 0266 024A     		ldr	r2, .L82
 835 0268 5369     		ldr	r3, [r2, #20]
 836 026a 1843     		orrs	r0, r0, r3
 837              	.LVL81:
 838 026c 5061     		str	r0, [r2, #20]
 839 026e 7047     		bx	lr
 840              	.L83:
 841              		.align	2
 842              	.L82:
 843 0270 00100240 		.word	1073876992
 844              		.cfi_endproc
 845              	.LFE84:
 846              		.size	RCC_AHBPeriphClockCmd, .-RCC_AHBPeriphClockCmd
 847              		.align	1
 848              		.global	RCC_APB2PeriphClockCmd
ARM GAS  /tmp/ccZsv2Jc.s 			page 35


 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu softvfp
 853              		.type	RCC_APB2PeriphClockCmd, %function
 854              	RCC_APB2PeriphClockCmd:
 855              	.LFB85:
1078:lib/src/stm32f10x_rcc.c ****   }
1079:lib/src/stm32f10x_rcc.c **** }
1080:lib/src/stm32f10x_rcc.c **** 
1081:lib/src/stm32f10x_rcc.c **** /**
1082:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1083:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1084:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1085:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1086:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1087:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1088:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1089:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1090:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1091:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1092:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1093:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1094:lib/src/stm32f10x_rcc.c ****   * @retval None
1095:lib/src/stm32f10x_rcc.c ****   */
1096:lib/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1097:lib/src/stm32f10x_rcc.c **** {
 856              		.loc 1 1097 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861              	.LVL82:
1098:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1099:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1100:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1101:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 862              		.loc 1 1101 0
 863 0274 29B9     		cbnz	r1, .L87
1102:lib/src/stm32f10x_rcc.c ****   {
1103:lib/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
1104:lib/src/stm32f10x_rcc.c ****   }
1105:lib/src/stm32f10x_rcc.c ****   else
1106:lib/src/stm32f10x_rcc.c ****   {
1107:lib/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 864              		.loc 1 1107 0
 865 0276 054A     		ldr	r2, .L88
 866 0278 9369     		ldr	r3, [r2, #24]
 867 027a 23EA0000 		bic	r0, r3, r0
 868              	.LVL83:
 869 027e 9061     		str	r0, [r2, #24]
 870 0280 7047     		bx	lr
 871              	.LVL84:
 872              	.L87:
1103:lib/src/stm32f10x_rcc.c ****   }
 873              		.loc 1 1103 0
 874 0282 024A     		ldr	r2, .L88
ARM GAS  /tmp/ccZsv2Jc.s 			page 36


 875 0284 9369     		ldr	r3, [r2, #24]
 876 0286 1843     		orrs	r0, r0, r3
 877              	.LVL85:
 878 0288 9061     		str	r0, [r2, #24]
 879 028a 7047     		bx	lr
 880              	.L89:
 881              		.align	2
 882              	.L88:
 883 028c 00100240 		.word	1073876992
 884              		.cfi_endproc
 885              	.LFE85:
 886              		.size	RCC_APB2PeriphClockCmd, .-RCC_APB2PeriphClockCmd
 887              		.align	1
 888              		.global	RCC_APB1PeriphClockCmd
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu softvfp
 893              		.type	RCC_APB1PeriphClockCmd, %function
 894              	RCC_APB1PeriphClockCmd:
 895              	.LFB86:
1108:lib/src/stm32f10x_rcc.c ****   }
1109:lib/src/stm32f10x_rcc.c **** }
1110:lib/src/stm32f10x_rcc.c **** 
1111:lib/src/stm32f10x_rcc.c **** /**
1112:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1113:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1114:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1115:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1116:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1117:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1118:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1119:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1120:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1121:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1122:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1123:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1124:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1125:lib/src/stm32f10x_rcc.c ****   * @retval None
1126:lib/src/stm32f10x_rcc.c ****   */
1127:lib/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1128:lib/src/stm32f10x_rcc.c **** {
 896              		.loc 1 1128 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL86:
1129:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1130:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1131:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1132:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 902              		.loc 1 1132 0
 903 0290 29B9     		cbnz	r1, .L93
1133:lib/src/stm32f10x_rcc.c ****   {
1134:lib/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
1135:lib/src/stm32f10x_rcc.c ****   }
ARM GAS  /tmp/ccZsv2Jc.s 			page 37


1136:lib/src/stm32f10x_rcc.c ****   else
1137:lib/src/stm32f10x_rcc.c ****   {
1138:lib/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 904              		.loc 1 1138 0
 905 0292 054A     		ldr	r2, .L94
 906 0294 D369     		ldr	r3, [r2, #28]
 907 0296 23EA0000 		bic	r0, r3, r0
 908              	.LVL87:
 909 029a D061     		str	r0, [r2, #28]
 910 029c 7047     		bx	lr
 911              	.LVL88:
 912              	.L93:
1134:lib/src/stm32f10x_rcc.c ****   }
 913              		.loc 1 1134 0
 914 029e 024A     		ldr	r2, .L94
 915 02a0 D369     		ldr	r3, [r2, #28]
 916 02a2 1843     		orrs	r0, r0, r3
 917              	.LVL89:
 918 02a4 D061     		str	r0, [r2, #28]
 919 02a6 7047     		bx	lr
 920              	.L95:
 921              		.align	2
 922              	.L94:
 923 02a8 00100240 		.word	1073876992
 924              		.cfi_endproc
 925              	.LFE86:
 926              		.size	RCC_APB1PeriphClockCmd, .-RCC_APB1PeriphClockCmd
 927              		.align	1
 928              		.global	RCC_APB2PeriphResetCmd
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 933              		.type	RCC_APB2PeriphResetCmd, %function
 934              	RCC_APB2PeriphResetCmd:
 935              	.LFB87:
1139:lib/src/stm32f10x_rcc.c ****   }
1140:lib/src/stm32f10x_rcc.c **** }
1141:lib/src/stm32f10x_rcc.c **** 
1142:lib/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1143:lib/src/stm32f10x_rcc.c **** /**
1144:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1145:lib/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1146:lib/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1147:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1148:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1149:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1150:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1151:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1152:lib/src/stm32f10x_rcc.c ****   * @retval None
1153:lib/src/stm32f10x_rcc.c ****   */
1154:lib/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1155:lib/src/stm32f10x_rcc.c **** {
1156:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1157:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1158:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1159:lib/src/stm32f10x_rcc.c **** 
ARM GAS  /tmp/ccZsv2Jc.s 			page 38


1160:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1161:lib/src/stm32f10x_rcc.c ****   {
1162:lib/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1163:lib/src/stm32f10x_rcc.c ****   }
1164:lib/src/stm32f10x_rcc.c ****   else
1165:lib/src/stm32f10x_rcc.c ****   {
1166:lib/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1167:lib/src/stm32f10x_rcc.c ****   }
1168:lib/src/stm32f10x_rcc.c **** }
1169:lib/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1170:lib/src/stm32f10x_rcc.c **** 
1171:lib/src/stm32f10x_rcc.c **** /**
1172:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1173:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1174:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1175:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1176:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1177:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1178:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1179:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1180:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1181:lib/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1182:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1183:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1184:lib/src/stm32f10x_rcc.c ****   * @retval None
1185:lib/src/stm32f10x_rcc.c ****   */
1186:lib/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1187:lib/src/stm32f10x_rcc.c **** {
 936              		.loc 1 1187 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL90:
1188:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1189:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1190:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1191:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 942              		.loc 1 1191 0
 943 02ac 29B9     		cbnz	r1, .L99
1192:lib/src/stm32f10x_rcc.c ****   {
1193:lib/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
1194:lib/src/stm32f10x_rcc.c ****   }
1195:lib/src/stm32f10x_rcc.c ****   else
1196:lib/src/stm32f10x_rcc.c ****   {
1197:lib/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 944              		.loc 1 1197 0
 945 02ae 054A     		ldr	r2, .L100
 946 02b0 D368     		ldr	r3, [r2, #12]
 947 02b2 23EA0000 		bic	r0, r3, r0
 948              	.LVL91:
 949 02b6 D060     		str	r0, [r2, #12]
 950 02b8 7047     		bx	lr
 951              	.LVL92:
 952              	.L99:
1193:lib/src/stm32f10x_rcc.c ****   }
 953              		.loc 1 1193 0
ARM GAS  /tmp/ccZsv2Jc.s 			page 39


 954 02ba 024A     		ldr	r2, .L100
 955 02bc D368     		ldr	r3, [r2, #12]
 956 02be 1843     		orrs	r0, r0, r3
 957              	.LVL93:
 958 02c0 D060     		str	r0, [r2, #12]
 959 02c2 7047     		bx	lr
 960              	.L101:
 961              		.align	2
 962              	.L100:
 963 02c4 00100240 		.word	1073876992
 964              		.cfi_endproc
 965              	.LFE87:
 966              		.size	RCC_APB2PeriphResetCmd, .-RCC_APB2PeriphResetCmd
 967              		.align	1
 968              		.global	RCC_APB1PeriphResetCmd
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu softvfp
 973              		.type	RCC_APB1PeriphResetCmd, %function
 974              	RCC_APB1PeriphResetCmd:
 975              	.LFB88:
1198:lib/src/stm32f10x_rcc.c ****   }
1199:lib/src/stm32f10x_rcc.c **** }
1200:lib/src/stm32f10x_rcc.c **** 
1201:lib/src/stm32f10x_rcc.c **** /**
1202:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1203:lib/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1204:lib/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1205:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1206:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1207:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1208:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1209:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1210:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1211:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1212:lib/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1213:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1214:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1215:lib/src/stm32f10x_rcc.c ****   * @retval None
1216:lib/src/stm32f10x_rcc.c ****   */
1217:lib/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1218:lib/src/stm32f10x_rcc.c **** {
 976              		.loc 1 1218 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              		@ link register save eliminated.
 981              	.LVL94:
1219:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1220:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1221:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1222:lib/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 982              		.loc 1 1222 0
 983 02c8 29B9     		cbnz	r1, .L105
1223:lib/src/stm32f10x_rcc.c ****   {
1224:lib/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
ARM GAS  /tmp/ccZsv2Jc.s 			page 40


1225:lib/src/stm32f10x_rcc.c ****   }
1226:lib/src/stm32f10x_rcc.c ****   else
1227:lib/src/stm32f10x_rcc.c ****   {
1228:lib/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 984              		.loc 1 1228 0
 985 02ca 054A     		ldr	r2, .L106
 986 02cc 1369     		ldr	r3, [r2, #16]
 987 02ce 23EA0000 		bic	r0, r3, r0
 988              	.LVL95:
 989 02d2 1061     		str	r0, [r2, #16]
 990 02d4 7047     		bx	lr
 991              	.LVL96:
 992              	.L105:
1224:lib/src/stm32f10x_rcc.c ****   }
 993              		.loc 1 1224 0
 994 02d6 024A     		ldr	r2, .L106
 995 02d8 1369     		ldr	r3, [r2, #16]
 996 02da 1843     		orrs	r0, r0, r3
 997              	.LVL97:
 998 02dc 1061     		str	r0, [r2, #16]
 999 02de 7047     		bx	lr
 1000              	.L107:
 1001              		.align	2
 1002              	.L106:
 1003 02e0 00100240 		.word	1073876992
 1004              		.cfi_endproc
 1005              	.LFE88:
 1006              		.size	RCC_APB1PeriphResetCmd, .-RCC_APB1PeriphResetCmd
 1007              		.align	1
 1008              		.global	RCC_BackupResetCmd
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu softvfp
 1013              		.type	RCC_BackupResetCmd, %function
 1014              	RCC_BackupResetCmd:
 1015              	.LFB89:
1229:lib/src/stm32f10x_rcc.c ****   }
1230:lib/src/stm32f10x_rcc.c **** }
1231:lib/src/stm32f10x_rcc.c **** 
1232:lib/src/stm32f10x_rcc.c **** /**
1233:lib/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1234:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1235:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1236:lib/src/stm32f10x_rcc.c ****   * @retval None
1237:lib/src/stm32f10x_rcc.c ****   */
1238:lib/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1239:lib/src/stm32f10x_rcc.c **** {
 1016              		.loc 1 1239 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021              	.LVL98:
1240:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1241:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1242:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
ARM GAS  /tmp/ccZsv2Jc.s 			page 41


 1022              		.loc 1 1242 0
 1023 02e4 014B     		ldr	r3, .L109
 1024 02e6 1860     		str	r0, [r3]
 1025 02e8 7047     		bx	lr
 1026              	.L110:
 1027 02ea 00BF     		.align	2
 1028              	.L109:
 1029 02ec 40044242 		.word	1111622720
 1030              		.cfi_endproc
 1031              	.LFE89:
 1032              		.size	RCC_BackupResetCmd, .-RCC_BackupResetCmd
 1033              		.align	1
 1034              		.global	RCC_ClockSecuritySystemCmd
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1039              		.type	RCC_ClockSecuritySystemCmd, %function
 1040              	RCC_ClockSecuritySystemCmd:
 1041              	.LFB90:
1243:lib/src/stm32f10x_rcc.c **** }
1244:lib/src/stm32f10x_rcc.c **** 
1245:lib/src/stm32f10x_rcc.c **** /**
1246:lib/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1247:lib/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1248:lib/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1249:lib/src/stm32f10x_rcc.c ****   * @retval None
1250:lib/src/stm32f10x_rcc.c ****   */
1251:lib/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1252:lib/src/stm32f10x_rcc.c **** {
 1042              		.loc 1 1252 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047              	.LVL99:
1253:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1254:lib/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1255:lib/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1048              		.loc 1 1255 0
 1049 02f0 014B     		ldr	r3, .L112
 1050 02f2 1860     		str	r0, [r3]
 1051 02f4 7047     		bx	lr
 1052              	.L113:
 1053 02f6 00BF     		.align	2
 1054              	.L112:
 1055 02f8 4C004242 		.word	1111621708
 1056              		.cfi_endproc
 1057              	.LFE90:
 1058              		.size	RCC_ClockSecuritySystemCmd, .-RCC_ClockSecuritySystemCmd
 1059              		.align	1
 1060              		.global	RCC_MCOConfig
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu softvfp
 1065              		.type	RCC_MCOConfig, %function
ARM GAS  /tmp/ccZsv2Jc.s 			page 42


 1066              	RCC_MCOConfig:
 1067              	.LFB91:
1256:lib/src/stm32f10x_rcc.c **** }
1257:lib/src/stm32f10x_rcc.c **** 
1258:lib/src/stm32f10x_rcc.c **** /**
1259:lib/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1260:lib/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1261:lib/src/stm32f10x_rcc.c ****   *   
1262:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1263:lib/src/stm32f10x_rcc.c ****   *   following values:       
1264:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1265:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1266:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1267:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1268:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1269:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1270:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1271:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1272:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1273:lib/src/stm32f10x_rcc.c ****   * 
1274:lib/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1275:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1276:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1277:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1278:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1279:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1280:lib/src/stm32f10x_rcc.c ****   *   
1281:lib/src/stm32f10x_rcc.c ****   * @retval None
1282:lib/src/stm32f10x_rcc.c ****   */
1283:lib/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1284:lib/src/stm32f10x_rcc.c **** {
 1068              		.loc 1 1284 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073              	.LVL100:
1285:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1286:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1287:lib/src/stm32f10x_rcc.c **** 
1288:lib/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1289:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1074              		.loc 1 1289 0
 1075 02fc 014B     		ldr	r3, .L115
 1076 02fe 1870     		strb	r0, [r3]
 1077 0300 7047     		bx	lr
 1078              	.L116:
 1079 0302 00BF     		.align	2
 1080              	.L115:
 1081 0304 07100240 		.word	1073876999
 1082              		.cfi_endproc
 1083              	.LFE91:
 1084              		.size	RCC_MCOConfig, .-RCC_MCOConfig
 1085              		.align	1
 1086              		.global	RCC_GetFlagStatus
 1087              		.syntax unified
 1088              		.thumb
ARM GAS  /tmp/ccZsv2Jc.s 			page 43


 1089              		.thumb_func
 1090              		.fpu softvfp
 1091              		.type	RCC_GetFlagStatus, %function
 1092              	RCC_GetFlagStatus:
 1093              	.LFB92:
1290:lib/src/stm32f10x_rcc.c **** }
1291:lib/src/stm32f10x_rcc.c **** 
1292:lib/src/stm32f10x_rcc.c **** /**
1293:lib/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1294:lib/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1295:lib/src/stm32f10x_rcc.c ****   *   
1296:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1297:lib/src/stm32f10x_rcc.c ****   *   following values:
1298:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1299:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1300:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1301:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1302:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1303:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1304:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1305:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1306:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1307:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1308:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1309:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1310:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1311:lib/src/stm32f10x_rcc.c ****   * 
1312:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1313:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1314:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1315:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1316:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1317:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1318:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1319:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1320:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1321:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1322:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1323:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1324:lib/src/stm32f10x_rcc.c ****   *   
1325:lib/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1326:lib/src/stm32f10x_rcc.c ****   */
1327:lib/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1328:lib/src/stm32f10x_rcc.c **** {
 1094              		.loc 1 1328 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099              	.LVL101:
1329:lib/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1330:lib/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1331:lib/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1332:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1333:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1334:lib/src/stm32f10x_rcc.c **** 
1335:lib/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
ARM GAS  /tmp/ccZsv2Jc.s 			page 44


1336:lib/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1100              		.loc 1 1336 0
 1101 0308 4309     		lsrs	r3, r0, #5
 1102              	.LVL102:
1337:lib/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1103              		.loc 1 1337 0
 1104 030a 012B     		cmp	r3, #1
 1105 030c 0BD0     		beq	.L121
1338:lib/src/stm32f10x_rcc.c ****   {
1339:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
1340:lib/src/stm32f10x_rcc.c ****   }
1341:lib/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1106              		.loc 1 1341 0
 1107 030e 022B     		cmp	r3, #2
1342:lib/src/stm32f10x_rcc.c ****   {
1343:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1108              		.loc 1 1343 0
 1109 0310 064B     		ldr	r3, .L122
 1110              	.LVL103:
 1111 0312 0CBF     		ite	eq
 1112 0314 1B6A     		ldreq	r3, [r3, #32]
 1113              	.LVL104:
1344:lib/src/stm32f10x_rcc.c ****   }
1345:lib/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1346:lib/src/stm32f10x_rcc.c ****   {
1347:lib/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1114              		.loc 1 1347 0
 1115 0316 5B6A     		ldrne	r3, [r3, #36]
 1116              	.LVL105:
 1117              	.L119:
1348:lib/src/stm32f10x_rcc.c ****   }
1349:lib/src/stm32f10x_rcc.c **** 
1350:lib/src/stm32f10x_rcc.c ****   /* Get the flag position */
1351:lib/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1118              		.loc 1 1351 0
 1119 0318 00F01F00 		and	r0, r0, #31
 1120              	.LVL106:
1352:lib/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1121              		.loc 1 1352 0
 1122 031c 23FA00F0 		lsr	r0, r3, r0
1353:lib/src/stm32f10x_rcc.c ****   {
1354:lib/src/stm32f10x_rcc.c ****     bitstatus = SET;
1355:lib/src/stm32f10x_rcc.c ****   }
1356:lib/src/stm32f10x_rcc.c ****   else
1357:lib/src/stm32f10x_rcc.c ****   {
1358:lib/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1359:lib/src/stm32f10x_rcc.c ****   }
1360:lib/src/stm32f10x_rcc.c **** 
1361:lib/src/stm32f10x_rcc.c ****   /* Return the flag status */
1362:lib/src/stm32f10x_rcc.c ****   return bitstatus;
1363:lib/src/stm32f10x_rcc.c **** }
 1123              		.loc 1 1363 0
 1124 0320 00F00100 		and	r0, r0, #1
 1125 0324 7047     		bx	lr
 1126              	.LVL107:
 1127              	.L121:
1339:lib/src/stm32f10x_rcc.c ****   }
ARM GAS  /tmp/ccZsv2Jc.s 			page 45


 1128              		.loc 1 1339 0
 1129 0326 014B     		ldr	r3, .L122
 1130              	.LVL108:
 1131 0328 1B68     		ldr	r3, [r3]
 1132              	.LVL109:
 1133 032a F5E7     		b	.L119
 1134              	.L123:
 1135              		.align	2
 1136              	.L122:
 1137 032c 00100240 		.word	1073876992
 1138              		.cfi_endproc
 1139              	.LFE92:
 1140              		.size	RCC_GetFlagStatus, .-RCC_GetFlagStatus
 1141              		.align	1
 1142              		.global	RCC_WaitForHSEStartUp
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu softvfp
 1147              		.type	RCC_WaitForHSEStartUp, %function
 1148              	RCC_WaitForHSEStartUp:
 1149              	.LFB66:
 306:lib/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1150              		.loc 1 306 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154 0330 10B5     		push	{r4, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 4, -8
 1157              		.cfi_offset 14, -4
 1158 0332 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 16
 307:lib/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1160              		.loc 1 307 0
 1161 0334 0023     		movs	r3, #0
 1162 0336 0193     		str	r3, [sp, #4]
 1163              	.LVL110:
 314:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1164              		.loc 1 314 0
 1165 0338 3124     		movs	r4, #49
 1166              	.LVL111:
 1167              	.L126:
 314:lib/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1168              		.loc 1 314 0 is_stmt 0 discriminator 2
 1169 033a 2046     		mov	r0, r4
 1170 033c FFF7FEFF 		bl	RCC_GetFlagStatus
 1171              	.LVL112:
 315:lib/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1172              		.loc 1 315 0 is_stmt 1 discriminator 2
 1173 0340 019B     		ldr	r3, [sp, #4]
 1174 0342 0133     		adds	r3, r3, #1
 1175 0344 0193     		str	r3, [sp, #4]
 316:lib/src/stm32f10x_rcc.c ****   
 1176              		.loc 1 316 0 discriminator 2
 1177 0346 019B     		ldr	r3, [sp, #4]
 1178 0348 B3F5A06F 		cmp	r3, #1280
ARM GAS  /tmp/ccZsv2Jc.s 			page 46


 1179 034c 01D0     		beq	.L125
 316:lib/src/stm32f10x_rcc.c ****   
 1180              		.loc 1 316 0 is_stmt 0 discriminator 1
 1181 034e 0028     		cmp	r0, #0
 1182 0350 F3D0     		beq	.L126
 1183              	.L125:
 318:lib/src/stm32f10x_rcc.c ****   {
 1184              		.loc 1 318 0 is_stmt 1
 1185 0352 3120     		movs	r0, #49
 1186              	.LVL113:
 1187 0354 FFF7FEFF 		bl	RCC_GetFlagStatus
 1188              	.LVL114:
 327:lib/src/stm32f10x_rcc.c **** 
 1189              		.loc 1 327 0
 1190 0358 0030     		adds	r0, r0, #0
 1191              	.LVL115:
 1192 035a 18BF     		it	ne
 1193 035c 0120     		movne	r0, #1
 1194 035e 02B0     		add	sp, sp, #8
 1195              		.cfi_def_cfa_offset 8
 1196              		@ sp needed
 1197 0360 10BD     		pop	{r4, pc}
 1198              		.cfi_endproc
 1199              	.LFE66:
 1200              		.size	RCC_WaitForHSEStartUp, .-RCC_WaitForHSEStartUp
 1201              		.align	1
 1202              		.global	RCC_ClearFlag
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu softvfp
 1207              		.type	RCC_ClearFlag, %function
 1208              	RCC_ClearFlag:
 1209              	.LFB93:
1364:lib/src/stm32f10x_rcc.c **** 
1365:lib/src/stm32f10x_rcc.c **** /**
1366:lib/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1367:lib/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1368:lib/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1369:lib/src/stm32f10x_rcc.c ****   * @param  None
1370:lib/src/stm32f10x_rcc.c ****   * @retval None
1371:lib/src/stm32f10x_rcc.c ****   */
1372:lib/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1373:lib/src/stm32f10x_rcc.c **** {
 1210              		.loc 1 1373 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
1374:lib/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1375:lib/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1215              		.loc 1 1375 0
 1216 0362 034A     		ldr	r2, .L130
 1217 0364 536A     		ldr	r3, [r2, #36]
 1218 0366 43F08073 		orr	r3, r3, #16777216
 1219 036a 5362     		str	r3, [r2, #36]
 1220 036c 7047     		bx	lr
ARM GAS  /tmp/ccZsv2Jc.s 			page 47


 1221              	.L131:
 1222 036e 00BF     		.align	2
 1223              	.L130:
 1224 0370 00100240 		.word	1073876992
 1225              		.cfi_endproc
 1226              	.LFE93:
 1227              		.size	RCC_ClearFlag, .-RCC_ClearFlag
 1228              		.align	1
 1229              		.global	RCC_GetITStatus
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu softvfp
 1234              		.type	RCC_GetITStatus, %function
 1235              	RCC_GetITStatus:
 1236              	.LFB94:
1376:lib/src/stm32f10x_rcc.c **** }
1377:lib/src/stm32f10x_rcc.c **** 
1378:lib/src/stm32f10x_rcc.c **** /**
1379:lib/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1380:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1381:lib/src/stm32f10x_rcc.c ****   *   
1382:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1383:lib/src/stm32f10x_rcc.c ****   *   following values:
1384:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1385:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1386:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1387:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1388:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1389:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1390:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1391:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1392:lib/src/stm32f10x_rcc.c ****   * 
1393:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1394:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1395:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1396:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1397:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1398:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1399:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1400:lib/src/stm32f10x_rcc.c ****   *   
1401:lib/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1402:lib/src/stm32f10x_rcc.c ****   */
1403:lib/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1404:lib/src/stm32f10x_rcc.c **** {
 1237              		.loc 1 1404 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242              	.LVL116:
1405:lib/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1406:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1407:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1408:lib/src/stm32f10x_rcc.c **** 
1409:lib/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1410:lib/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
ARM GAS  /tmp/ccZsv2Jc.s 			page 48


 1243              		.loc 1 1410 0
 1244 0374 034B     		ldr	r3, .L133
 1245 0376 9B68     		ldr	r3, [r3, #8]
 1246              	.LVL117:
 1247 0378 1842     		tst	r0, r3
1411:lib/src/stm32f10x_rcc.c ****   {
1412:lib/src/stm32f10x_rcc.c ****     bitstatus = SET;
1413:lib/src/stm32f10x_rcc.c ****   }
1414:lib/src/stm32f10x_rcc.c ****   else
1415:lib/src/stm32f10x_rcc.c ****   {
1416:lib/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1417:lib/src/stm32f10x_rcc.c ****   }
1418:lib/src/stm32f10x_rcc.c **** 
1419:lib/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1420:lib/src/stm32f10x_rcc.c ****   return  bitstatus;
1421:lib/src/stm32f10x_rcc.c **** }
 1248              		.loc 1 1421 0
 1249 037a 14BF     		ite	ne
 1250 037c 0120     		movne	r0, #1
 1251              	.LVL118:
 1252 037e 0020     		moveq	r0, #0
 1253 0380 7047     		bx	lr
 1254              	.L134:
 1255 0382 00BF     		.align	2
 1256              	.L133:
 1257 0384 00100240 		.word	1073876992
 1258              		.cfi_endproc
 1259              	.LFE94:
 1260              		.size	RCC_GetITStatus, .-RCC_GetITStatus
 1261              		.align	1
 1262              		.global	RCC_ClearITPendingBit
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu softvfp
 1267              		.type	RCC_ClearITPendingBit, %function
 1268              	RCC_ClearITPendingBit:
 1269              	.LFB95:
1422:lib/src/stm32f10x_rcc.c **** 
1423:lib/src/stm32f10x_rcc.c **** /**
1424:lib/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1425:lib/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1426:lib/src/stm32f10x_rcc.c ****   *   
1427:lib/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1428:lib/src/stm32f10x_rcc.c ****   *   of the following values:
1429:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1430:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1431:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1432:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1433:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1434:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1435:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1436:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1437:lib/src/stm32f10x_rcc.c ****   * 
1438:lib/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1439:lib/src/stm32f10x_rcc.c ****   *   following values:        
1440:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
ARM GAS  /tmp/ccZsv2Jc.s 			page 49


1441:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1442:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1443:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1444:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1445:lib/src/stm32f10x_rcc.c ****   *   
1446:lib/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1447:lib/src/stm32f10x_rcc.c ****   * @retval None
1448:lib/src/stm32f10x_rcc.c ****   */
1449:lib/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1450:lib/src/stm32f10x_rcc.c **** {
 1270              		.loc 1 1450 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275              	.LVL119:
1451:lib/src/stm32f10x_rcc.c ****   /* Check the parameters */
1452:lib/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1453:lib/src/stm32f10x_rcc.c **** 
1454:lib/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1455:lib/src/stm32f10x_rcc.c ****      pending bits */
1456:lib/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1276              		.loc 1 1456 0
 1277 0388 014B     		ldr	r3, .L136
 1278 038a 1870     		strb	r0, [r3]
 1279 038c 7047     		bx	lr
 1280              	.L137:
 1281 038e 00BF     		.align	2
 1282              	.L136:
 1283 0390 0A100240 		.word	1073877002
 1284              		.cfi_endproc
 1285              	.LFE95:
 1286              		.size	RCC_ClearITPendingBit, .-RCC_ClearITPendingBit
 1287              		.data
 1288              		.align	2
 1289              		.set	.LANCHOR0,. + 0
 1290              		.type	APBAHBPrescTable, %object
 1291              		.size	APBAHBPrescTable, 16
 1292              	APBAHBPrescTable:
 1293 0000 00       		.byte	0
 1294 0001 00       		.byte	0
 1295 0002 00       		.byte	0
 1296 0003 00       		.byte	0
 1297 0004 01       		.byte	1
 1298 0005 02       		.byte	2
 1299 0006 03       		.byte	3
 1300 0007 04       		.byte	4
 1301 0008 01       		.byte	1
 1302 0009 02       		.byte	2
 1303 000a 03       		.byte	3
 1304 000b 04       		.byte	4
 1305 000c 06       		.byte	6
 1306 000d 07       		.byte	7
 1307 000e 08       		.byte	8
 1308 000f 09       		.byte	9
 1309              		.type	ADCPrescTable, %object
 1310              		.size	ADCPrescTable, 4
ARM GAS  /tmp/ccZsv2Jc.s 			page 50


 1311              	ADCPrescTable:
 1312 0010 02       		.byte	2
 1313 0011 04       		.byte	4
 1314 0012 06       		.byte	6
 1315 0013 08       		.byte	8
 1316              		.text
 1317              	.Letext0:
 1318              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1319              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1320              		.file 4 "cmsis/core_cm3.h"
 1321              		.file 5 "lib/inc/system_stm32f10x.h"
 1322              		.file 6 "lib/inc/stm32f10x.h"
 1323              		.file 7 "lib/inc/stm32f10x_rcc.h"
 1324              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 1325              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 1326              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 1327              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 1328              		.file 12 "/usr/arm-none-eabi/include/stdlib.h"
 1329              		.file 13 "/usr/arm-none-eabi/include/math.h"
 1330              		.file 14 "/usr/arm-none-eabi/include/sys/errno.h"
 1331              		.section	.debug_info,"",%progbits
 1332              	.Ldebug_info0:
 1333 0000 6D110000 		.4byte	0x116d
 1334 0004 0400     		.2byte	0x4
 1335 0006 00000000 		.4byte	.Ldebug_abbrev0
 1336 000a 04       		.byte	0x4
 1337 000b 01       		.uleb128 0x1
 1338 000c A3090000 		.4byte	.LASF224
 1339 0010 0C       		.byte	0xc
 1340 0011 49040000 		.4byte	.LASF225
 1341 0015 1E060000 		.4byte	.LASF226
 1342 0019 00000000 		.4byte	.Ltext0
 1343 001d 94030000 		.4byte	.Letext0-.Ltext0
 1344 0021 00000000 		.4byte	.Ldebug_line0
 1345 0025 02       		.uleb128 0x2
 1346 0026 01       		.byte	0x1
 1347 0027 06       		.byte	0x6
 1348 0028 9E010000 		.4byte	.LASF0
 1349 002c 03       		.uleb128 0x3
 1350 002d 8F000000 		.4byte	.LASF3
 1351 0031 02       		.byte	0x2
 1352 0032 1D       		.byte	0x1d
 1353 0033 37000000 		.4byte	0x37
 1354 0037 02       		.uleb128 0x2
 1355 0038 01       		.byte	0x1
 1356 0039 08       		.byte	0x8
 1357 003a 10060000 		.4byte	.LASF1
 1358 003e 02       		.uleb128 0x2
 1359 003f 02       		.byte	0x2
 1360 0040 05       		.byte	0x5
 1361 0041 09080000 		.4byte	.LASF2
 1362 0045 03       		.uleb128 0x3
 1363 0046 F3070000 		.4byte	.LASF4
 1364 004a 02       		.byte	0x2
 1365 004b 2B       		.byte	0x2b
 1366 004c 50000000 		.4byte	0x50
 1367 0050 02       		.uleb128 0x2
ARM GAS  /tmp/ccZsv2Jc.s 			page 51


 1368 0051 02       		.byte	0x2
 1369 0052 07       		.byte	0x7
 1370 0053 62080000 		.4byte	.LASF5
 1371 0057 03       		.uleb128 0x3
 1372 0058 13080000 		.4byte	.LASF6
 1373 005c 02       		.byte	0x2
 1374 005d 3F       		.byte	0x3f
 1375 005e 62000000 		.4byte	0x62
 1376 0062 02       		.uleb128 0x2
 1377 0063 04       		.byte	0x4
 1378 0064 05       		.byte	0x5
 1379 0065 17020000 		.4byte	.LASF7
 1380 0069 03       		.uleb128 0x3
 1381 006a 30030000 		.4byte	.LASF8
 1382 006e 02       		.byte	0x2
 1383 006f 41       		.byte	0x41
 1384 0070 74000000 		.4byte	0x74
 1385 0074 02       		.uleb128 0x2
 1386 0075 04       		.byte	0x4
 1387 0076 07       		.byte	0x7
 1388 0077 EC030000 		.4byte	.LASF9
 1389 007b 02       		.uleb128 0x2
 1390 007c 08       		.byte	0x8
 1391 007d 05       		.byte	0x5
 1392 007e 76020000 		.4byte	.LASF10
 1393 0082 02       		.uleb128 0x2
 1394 0083 08       		.byte	0x8
 1395 0084 07       		.byte	0x7
 1396 0085 0A010000 		.4byte	.LASF11
 1397 0089 04       		.uleb128 0x4
 1398 008a 04       		.byte	0x4
 1399 008b 05       		.byte	0x5
 1400 008c 696E7400 		.ascii	"int\000"
 1401 0090 02       		.uleb128 0x2
 1402 0091 04       		.byte	0x4
 1403 0092 07       		.byte	0x7
 1404 0093 E6070000 		.4byte	.LASF12
 1405 0097 03       		.uleb128 0x3
 1406 0098 23090000 		.4byte	.LASF13
 1407 009c 03       		.byte	0x3
 1408 009d 18       		.byte	0x18
 1409 009e 2C000000 		.4byte	0x2c
 1410 00a2 05       		.uleb128 0x5
 1411 00a3 97000000 		.4byte	0x97
 1412 00a7 06       		.uleb128 0x6
 1413 00a8 A2000000 		.4byte	0xa2
 1414 00ac 03       		.uleb128 0x3
 1415 00ad 95020000 		.4byte	.LASF14
 1416 00b1 03       		.byte	0x3
 1417 00b2 24       		.byte	0x24
 1418 00b3 45000000 		.4byte	0x45
 1419 00b7 03       		.uleb128 0x3
 1420 00b8 08060000 		.4byte	.LASF15
 1421 00bc 03       		.byte	0x3
 1422 00bd 2C       		.byte	0x2c
 1423 00be 57000000 		.4byte	0x57
 1424 00c2 06       		.uleb128 0x6
ARM GAS  /tmp/ccZsv2Jc.s 			page 52


 1425 00c3 B7000000 		.4byte	0xb7
 1426 00c7 03       		.uleb128 0x3
 1427 00c8 39010000 		.4byte	.LASF16
 1428 00cc 03       		.byte	0x3
 1429 00cd 30       		.byte	0x30
 1430 00ce 69000000 		.4byte	0x69
 1431 00d2 06       		.uleb128 0x6
 1432 00d3 C7000000 		.4byte	0xc7
 1433 00d7 02       		.uleb128 0x2
 1434 00d8 04       		.byte	0x4
 1435 00d9 07       		.byte	0x7
 1436 00da F0040000 		.4byte	.LASF17
 1437 00de 07       		.uleb128 0x7
 1438 00df 42010000 		.4byte	.LASF18
 1439 00e3 04       		.byte	0x4
 1440 00e4 9606     		.2byte	0x696
 1441 00e6 C2000000 		.4byte	0xc2
 1442 00ea 08       		.uleb128 0x8
 1443 00eb BD050000 		.4byte	.LASF19
 1444 00ef 05       		.byte	0x5
 1445 00f0 35       		.byte	0x35
 1446 00f1 C7000000 		.4byte	0xc7
 1447 00f5 09       		.uleb128 0x9
 1448 00f6 01       		.byte	0x1
 1449 00f7 37000000 		.4byte	0x37
 1450 00fb 06       		.byte	0x6
 1451 00fc 0702     		.2byte	0x207
 1452 00fe 0F010000 		.4byte	0x10f
 1453 0102 0A       		.uleb128 0xa
 1454 0103 F4050000 		.4byte	.LASF20
 1455 0107 00       		.byte	0
 1456 0108 0B       		.uleb128 0xb
 1457 0109 53455400 		.ascii	"SET\000"
 1458 010d 01       		.byte	0x1
 1459 010e 00       		.byte	0
 1460 010f 0C       		.uleb128 0xc
 1461 0110 62000000 		.4byte	.LASF21
 1462 0114 06       		.byte	0x6
 1463 0115 0702     		.2byte	0x207
 1464 0117 F5000000 		.4byte	0xf5
 1465 011b 0C       		.uleb128 0xc
 1466 011c BA030000 		.4byte	.LASF22
 1467 0120 06       		.byte	0x6
 1468 0121 0702     		.2byte	0x207
 1469 0123 F5000000 		.4byte	0xf5
 1470 0127 09       		.uleb128 0x9
 1471 0128 01       		.byte	0x1
 1472 0129 37000000 		.4byte	0x37
 1473 012d 06       		.byte	0x6
 1474 012e 0902     		.2byte	0x209
 1475 0130 41010000 		.4byte	0x141
 1476 0134 0A       		.uleb128 0xa
 1477 0135 C8030000 		.4byte	.LASF23
 1478 0139 00       		.byte	0
 1479 013a 0A       		.uleb128 0xa
 1480 013b 20020000 		.4byte	.LASF24
 1481 013f 01       		.byte	0x1
ARM GAS  /tmp/ccZsv2Jc.s 			page 53


 1482 0140 00       		.byte	0
 1483 0141 0C       		.uleb128 0xc
 1484 0142 49050000 		.4byte	.LASF25
 1485 0146 06       		.byte	0x6
 1486 0147 0902     		.2byte	0x209
 1487 0149 27010000 		.4byte	0x127
 1488 014d 09       		.uleb128 0x9
 1489 014e 01       		.byte	0x1
 1490 014f 37000000 		.4byte	0x37
 1491 0153 06       		.byte	0x6
 1492 0154 0C02     		.2byte	0x20c
 1493 0156 67010000 		.4byte	0x167
 1494 015a 0A       		.uleb128 0xa
 1495 015b F9040000 		.4byte	.LASF26
 1496 015f 00       		.byte	0
 1497 0160 0A       		.uleb128 0xa
 1498 0161 35090000 		.4byte	.LASF27
 1499 0165 01       		.byte	0x1
 1500 0166 00       		.byte	0
 1501 0167 0C       		.uleb128 0xc
 1502 0168 3B030000 		.4byte	.LASF28
 1503 016c 06       		.byte	0x6
 1504 016d 0C02     		.2byte	0x20c
 1505 016f 4D010000 		.4byte	0x14d
 1506 0173 0D       		.uleb128 0xd
 1507 0174 28       		.byte	0x28
 1508 0175 06       		.byte	0x6
 1509 0176 3404     		.2byte	0x434
 1510 0178 FE010000 		.4byte	0x1fe
 1511 017c 0E       		.uleb128 0xe
 1512 017d 435200   		.ascii	"CR\000"
 1513 0180 06       		.byte	0x6
 1514 0181 3604     		.2byte	0x436
 1515 0183 D2000000 		.4byte	0xd2
 1516 0187 00       		.byte	0
 1517 0188 0F       		.uleb128 0xf
 1518 0189 D7030000 		.4byte	.LASF29
 1519 018d 06       		.byte	0x6
 1520 018e 3704     		.2byte	0x437
 1521 0190 D2000000 		.4byte	0xd2
 1522 0194 04       		.byte	0x4
 1523 0195 0E       		.uleb128 0xe
 1524 0196 43495200 		.ascii	"CIR\000"
 1525 019a 06       		.byte	0x6
 1526 019b 3804     		.2byte	0x438
 1527 019d D2000000 		.4byte	0xd2
 1528 01a1 08       		.byte	0x8
 1529 01a2 0F       		.uleb128 0xf
 1530 01a3 27020000 		.4byte	.LASF30
 1531 01a7 06       		.byte	0x6
 1532 01a8 3904     		.2byte	0x439
 1533 01aa D2000000 		.4byte	0xd2
 1534 01ae 0C       		.byte	0xc
 1535 01af 0F       		.uleb128 0xf
 1536 01b0 CC010000 		.4byte	.LASF31
 1537 01b4 06       		.byte	0x6
 1538 01b5 3A04     		.2byte	0x43a
ARM GAS  /tmp/ccZsv2Jc.s 			page 54


 1539 01b7 D2000000 		.4byte	0xd2
 1540 01bb 10       		.byte	0x10
 1541 01bc 0F       		.uleb128 0xf
 1542 01bd 690A0000 		.4byte	.LASF32
 1543 01c1 06       		.byte	0x6
 1544 01c2 3B04     		.2byte	0x43b
 1545 01c4 D2000000 		.4byte	0xd2
 1546 01c8 14       		.byte	0x14
 1547 01c9 0F       		.uleb128 0xf
 1548 01ca D6060000 		.4byte	.LASF33
 1549 01ce 06       		.byte	0x6
 1550 01cf 3C04     		.2byte	0x43c
 1551 01d1 D2000000 		.4byte	0xd2
 1552 01d5 18       		.byte	0x18
 1553 01d6 0F       		.uleb128 0xf
 1554 01d7 3F080000 		.4byte	.LASF34
 1555 01db 06       		.byte	0x6
 1556 01dc 3D04     		.2byte	0x43d
 1557 01de D2000000 		.4byte	0xd2
 1558 01e2 1C       		.byte	0x1c
 1559 01e3 0F       		.uleb128 0xf
 1560 01e4 04090000 		.4byte	.LASF35
 1561 01e8 06       		.byte	0x6
 1562 01e9 3E04     		.2byte	0x43e
 1563 01eb D2000000 		.4byte	0xd2
 1564 01ef 20       		.byte	0x20
 1565 01f0 0E       		.uleb128 0xe
 1566 01f1 43535200 		.ascii	"CSR\000"
 1567 01f5 06       		.byte	0x6
 1568 01f6 3F04     		.2byte	0x43f
 1569 01f8 D2000000 		.4byte	0xd2
 1570 01fc 24       		.byte	0x24
 1571 01fd 00       		.byte	0
 1572 01fe 0C       		.uleb128 0xc
 1573 01ff 20040000 		.4byte	.LASF36
 1574 0203 06       		.byte	0x6
 1575 0204 4A04     		.2byte	0x44a
 1576 0206 73010000 		.4byte	0x173
 1577 020a 10       		.uleb128 0x10
 1578 020b 14       		.byte	0x14
 1579 020c 07       		.byte	0x7
 1580 020d 2E       		.byte	0x2e
 1581 020e 4F020000 		.4byte	0x24f
 1582 0212 11       		.uleb128 0x11
 1583 0213 0F040000 		.4byte	.LASF37
 1584 0217 07       		.byte	0x7
 1585 0218 30       		.byte	0x30
 1586 0219 C7000000 		.4byte	0xc7
 1587 021d 00       		.byte	0
 1588 021e 11       		.uleb128 0x11
 1589 021f A5030000 		.4byte	.LASF38
 1590 0223 07       		.byte	0x7
 1591 0224 31       		.byte	0x31
 1592 0225 C7000000 		.4byte	0xc7
 1593 0229 04       		.byte	0x4
 1594 022a 11       		.uleb128 0x11
 1595 022b 62070000 		.4byte	.LASF39
ARM GAS  /tmp/ccZsv2Jc.s 			page 55


 1596 022f 07       		.byte	0x7
 1597 0230 32       		.byte	0x32
 1598 0231 C7000000 		.4byte	0xc7
 1599 0235 08       		.byte	0x8
 1600 0236 11       		.uleb128 0x11
 1601 0237 FF010000 		.4byte	.LASF40
 1602 023b 07       		.byte	0x7
 1603 023c 33       		.byte	0x33
 1604 023d C7000000 		.4byte	0xc7
 1605 0241 0C       		.byte	0xc
 1606 0242 11       		.uleb128 0x11
 1607 0243 1A030000 		.4byte	.LASF41
 1608 0247 07       		.byte	0x7
 1609 0248 34       		.byte	0x34
 1610 0249 C7000000 		.4byte	0xc7
 1611 024d 10       		.byte	0x10
 1612 024e 00       		.byte	0
 1613 024f 03       		.uleb128 0x3
 1614 0250 55090000 		.4byte	.LASF42
 1615 0254 07       		.byte	0x7
 1616 0255 35       		.byte	0x35
 1617 0256 0A020000 		.4byte	0x20a
 1618 025a 02       		.uleb128 0x2
 1619 025b 08       		.byte	0x8
 1620 025c 04       		.byte	0x4
 1621 025d 35000000 		.4byte	.LASF43
 1622 0261 12       		.uleb128 0x12
 1623 0262 04       		.byte	0x4
 1624 0263 03       		.uleb128 0x3
 1625 0264 D7050000 		.4byte	.LASF44
 1626 0268 08       		.byte	0x8
 1627 0269 07       		.byte	0x7
 1628 026a 89000000 		.4byte	0x89
 1629 026e 03       		.uleb128 0x3
 1630 026f 90010000 		.4byte	.LASF45
 1631 0273 09       		.byte	0x9
 1632 0274 2C       		.byte	0x2c
 1633 0275 62000000 		.4byte	0x62
 1634 0279 03       		.uleb128 0x3
 1635 027a 15000000 		.4byte	.LASF46
 1636 027e 09       		.byte	0x9
 1637 027f 72       		.byte	0x72
 1638 0280 62000000 		.4byte	0x62
 1639 0284 0C       		.uleb128 0xc
 1640 0285 B6050000 		.4byte	.LASF47
 1641 0289 0A       		.byte	0xa
 1642 028a 6501     		.2byte	0x165
 1643 028c 90000000 		.4byte	0x90
 1644 0290 13       		.uleb128 0x13
 1645 0291 04       		.byte	0x4
 1646 0292 09       		.byte	0x9
 1647 0293 A6       		.byte	0xa6
 1648 0294 AF020000 		.4byte	0x2af
 1649 0298 14       		.uleb128 0x14
 1650 0299 94040000 		.4byte	.LASF48
 1651 029d 09       		.byte	0x9
 1652 029e A8       		.byte	0xa8
ARM GAS  /tmp/ccZsv2Jc.s 			page 56


 1653 029f 84020000 		.4byte	0x284
 1654 02a3 14       		.uleb128 0x14
 1655 02a4 D0030000 		.4byte	.LASF49
 1656 02a8 09       		.byte	0x9
 1657 02a9 A9       		.byte	0xa9
 1658 02aa AF020000 		.4byte	0x2af
 1659 02ae 00       		.byte	0
 1660 02af 15       		.uleb128 0x15
 1661 02b0 37000000 		.4byte	0x37
 1662 02b4 BF020000 		.4byte	0x2bf
 1663 02b8 16       		.uleb128 0x16
 1664 02b9 D7000000 		.4byte	0xd7
 1665 02bd 03       		.byte	0x3
 1666 02be 00       		.byte	0
 1667 02bf 10       		.uleb128 0x10
 1668 02c0 08       		.byte	0x8
 1669 02c1 09       		.byte	0x9
 1670 02c2 A3       		.byte	0xa3
 1671 02c3 E0020000 		.4byte	0x2e0
 1672 02c7 11       		.uleb128 0x11
 1673 02c8 D1040000 		.4byte	.LASF50
 1674 02cc 09       		.byte	0x9
 1675 02cd A5       		.byte	0xa5
 1676 02ce 89000000 		.4byte	0x89
 1677 02d2 00       		.byte	0
 1678 02d3 11       		.uleb128 0x11
 1679 02d4 50070000 		.4byte	.LASF51
 1680 02d8 09       		.byte	0x9
 1681 02d9 AA       		.byte	0xaa
 1682 02da 90020000 		.4byte	0x290
 1683 02de 04       		.byte	0x4
 1684 02df 00       		.byte	0
 1685 02e0 03       		.uleb128 0x3
 1686 02e1 92060000 		.4byte	.LASF52
 1687 02e5 09       		.byte	0x9
 1688 02e6 AB       		.byte	0xab
 1689 02e7 BF020000 		.4byte	0x2bf
 1690 02eb 03       		.uleb128 0x3
 1691 02ec 63060000 		.4byte	.LASF53
 1692 02f0 09       		.byte	0x9
 1693 02f1 AF       		.byte	0xaf
 1694 02f2 63020000 		.4byte	0x263
 1695 02f6 03       		.uleb128 0x3
 1696 02f7 9E080000 		.4byte	.LASF54
 1697 02fb 0B       		.byte	0xb
 1698 02fc 16       		.byte	0x16
 1699 02fd 74000000 		.4byte	0x74
 1700 0301 17       		.uleb128 0x17
 1701 0302 7D030000 		.4byte	.LASF59
 1702 0306 18       		.byte	0x18
 1703 0307 0B       		.byte	0xb
 1704 0308 2D       		.byte	0x2d
 1705 0309 54030000 		.4byte	0x354
 1706 030d 11       		.uleb128 0x11
 1707 030e 33080000 		.4byte	.LASF55
 1708 0312 0B       		.byte	0xb
 1709 0313 2F       		.byte	0x2f
ARM GAS  /tmp/ccZsv2Jc.s 			page 57


 1710 0314 54030000 		.4byte	0x354
 1711 0318 00       		.byte	0
 1712 0319 18       		.uleb128 0x18
 1713 031a 5F6B00   		.ascii	"_k\000"
 1714 031d 0B       		.byte	0xb
 1715 031e 30       		.byte	0x30
 1716 031f 89000000 		.4byte	0x89
 1717 0323 04       		.byte	0x4
 1718 0324 11       		.uleb128 0x11
 1719 0325 18070000 		.4byte	.LASF56
 1720 0329 0B       		.byte	0xb
 1721 032a 30       		.byte	0x30
 1722 032b 89000000 		.4byte	0x89
 1723 032f 08       		.byte	0x8
 1724 0330 11       		.uleb128 0x11
 1725 0331 1D080000 		.4byte	.LASF57
 1726 0335 0B       		.byte	0xb
 1727 0336 30       		.byte	0x30
 1728 0337 89000000 		.4byte	0x89
 1729 033b 0C       		.byte	0xc
 1730 033c 11       		.uleb128 0x11
 1731 033d 28050000 		.4byte	.LASF58
 1732 0341 0B       		.byte	0xb
 1733 0342 30       		.byte	0x30
 1734 0343 89000000 		.4byte	0x89
 1735 0347 10       		.byte	0x10
 1736 0348 18       		.uleb128 0x18
 1737 0349 5F7800   		.ascii	"_x\000"
 1738 034c 0B       		.byte	0xb
 1739 034d 31       		.byte	0x31
 1740 034e 5A030000 		.4byte	0x35a
 1741 0352 14       		.byte	0x14
 1742 0353 00       		.byte	0
 1743 0354 19       		.uleb128 0x19
 1744 0355 04       		.byte	0x4
 1745 0356 01030000 		.4byte	0x301
 1746 035a 15       		.uleb128 0x15
 1747 035b F6020000 		.4byte	0x2f6
 1748 035f 6A030000 		.4byte	0x36a
 1749 0363 16       		.uleb128 0x16
 1750 0364 D7000000 		.4byte	0xd7
 1751 0368 00       		.byte	0
 1752 0369 00       		.byte	0
 1753 036a 17       		.uleb128 0x17
 1754 036b C3030000 		.4byte	.LASF60
 1755 036f 24       		.byte	0x24
 1756 0370 0B       		.byte	0xb
 1757 0371 35       		.byte	0x35
 1758 0372 E3030000 		.4byte	0x3e3
 1759 0376 11       		.uleb128 0x11
 1760 0377 87010000 		.4byte	.LASF61
 1761 037b 0B       		.byte	0xb
 1762 037c 37       		.byte	0x37
 1763 037d 89000000 		.4byte	0x89
 1764 0381 00       		.byte	0
 1765 0382 11       		.uleb128 0x11
 1766 0383 9A090000 		.4byte	.LASF62
ARM GAS  /tmp/ccZsv2Jc.s 			page 58


 1767 0387 0B       		.byte	0xb
 1768 0388 38       		.byte	0x38
 1769 0389 89000000 		.4byte	0x89
 1770 038d 04       		.byte	0x4
 1771 038e 11       		.uleb128 0x11
 1772 038f 58070000 		.4byte	.LASF63
 1773 0393 0B       		.byte	0xb
 1774 0394 39       		.byte	0x39
 1775 0395 89000000 		.4byte	0x89
 1776 0399 08       		.byte	0x8
 1777 039a 11       		.uleb128 0x11
 1778 039b 5F0A0000 		.4byte	.LASF64
 1779 039f 0B       		.byte	0xb
 1780 03a0 3A       		.byte	0x3a
 1781 03a1 89000000 		.4byte	0x89
 1782 03a5 0C       		.byte	0xc
 1783 03a6 11       		.uleb128 0x11
 1784 03a7 59050000 		.4byte	.LASF65
 1785 03ab 0B       		.byte	0xb
 1786 03ac 3B       		.byte	0x3b
 1787 03ad 89000000 		.4byte	0x89
 1788 03b1 10       		.byte	0x10
 1789 03b2 11       		.uleb128 0x11
 1790 03b3 C7040000 		.4byte	.LASF66
 1791 03b7 0B       		.byte	0xb
 1792 03b8 3C       		.byte	0x3c
 1793 03b9 89000000 		.4byte	0x89
 1794 03bd 14       		.byte	0x14
 1795 03be 11       		.uleb128 0x11
 1796 03bf 7A070000 		.4byte	.LASF67
 1797 03c3 0B       		.byte	0xb
 1798 03c4 3D       		.byte	0x3d
 1799 03c5 89000000 		.4byte	0x89
 1800 03c9 18       		.byte	0x18
 1801 03ca 11       		.uleb128 0x11
 1802 03cb 6C060000 		.4byte	.LASF68
 1803 03cf 0B       		.byte	0xb
 1804 03d0 3E       		.byte	0x3e
 1805 03d1 89000000 		.4byte	0x89
 1806 03d5 1C       		.byte	0x1c
 1807 03d6 11       		.uleb128 0x11
 1808 03d7 80090000 		.4byte	.LASF69
 1809 03db 0B       		.byte	0xb
 1810 03dc 3F       		.byte	0x3f
 1811 03dd 89000000 		.4byte	0x89
 1812 03e1 20       		.byte	0x20
 1813 03e2 00       		.byte	0
 1814 03e3 1A       		.uleb128 0x1a
 1815 03e4 DA010000 		.4byte	.LASF70
 1816 03e8 0801     		.2byte	0x108
 1817 03ea 0B       		.byte	0xb
 1818 03eb 48       		.byte	0x48
 1819 03ec 23040000 		.4byte	0x423
 1820 03f0 11       		.uleb128 0x11
 1821 03f1 2D000000 		.4byte	.LASF71
 1822 03f5 0B       		.byte	0xb
 1823 03f6 49       		.byte	0x49
ARM GAS  /tmp/ccZsv2Jc.s 			page 59


 1824 03f7 23040000 		.4byte	0x423
 1825 03fb 00       		.byte	0
 1826 03fc 11       		.uleb128 0x11
 1827 03fd 00000000 		.4byte	.LASF72
 1828 0401 0B       		.byte	0xb
 1829 0402 4A       		.byte	0x4a
 1830 0403 23040000 		.4byte	0x423
 1831 0407 80       		.byte	0x80
 1832 0408 1B       		.uleb128 0x1b
 1833 0409 47080000 		.4byte	.LASF73
 1834 040d 0B       		.byte	0xb
 1835 040e 4C       		.byte	0x4c
 1836 040f F6020000 		.4byte	0x2f6
 1837 0413 0001     		.2byte	0x100
 1838 0415 1B       		.uleb128 0x1b
 1839 0416 37020000 		.4byte	.LASF74
 1840 041a 0B       		.byte	0xb
 1841 041b 4F       		.byte	0x4f
 1842 041c F6020000 		.4byte	0x2f6
 1843 0420 0401     		.2byte	0x104
 1844 0422 00       		.byte	0
 1845 0423 15       		.uleb128 0x15
 1846 0424 61020000 		.4byte	0x261
 1847 0428 33040000 		.4byte	0x433
 1848 042c 16       		.uleb128 0x16
 1849 042d D7000000 		.4byte	0xd7
 1850 0431 1F       		.byte	0x1f
 1851 0432 00       		.byte	0
 1852 0433 1A       		.uleb128 0x1a
 1853 0434 62050000 		.4byte	.LASF75
 1854 0438 9001     		.2byte	0x190
 1855 043a 0B       		.byte	0xb
 1856 043b 5B       		.byte	0x5b
 1857 043c 71040000 		.4byte	0x471
 1858 0440 11       		.uleb128 0x11
 1859 0441 33080000 		.4byte	.LASF55
 1860 0445 0B       		.byte	0xb
 1861 0446 5C       		.byte	0x5c
 1862 0447 71040000 		.4byte	0x471
 1863 044b 00       		.byte	0
 1864 044c 11       		.uleb128 0x11
 1865 044d D1060000 		.4byte	.LASF76
 1866 0451 0B       		.byte	0xb
 1867 0452 5D       		.byte	0x5d
 1868 0453 89000000 		.4byte	0x89
 1869 0457 04       		.byte	0x4
 1870 0458 11       		.uleb128 0x11
 1871 0459 2B030000 		.4byte	.LASF77
 1872 045d 0B       		.byte	0xb
 1873 045e 5F       		.byte	0x5f
 1874 045f 77040000 		.4byte	0x477
 1875 0463 08       		.byte	0x8
 1876 0464 11       		.uleb128 0x11
 1877 0465 DA010000 		.4byte	.LASF70
 1878 0469 0B       		.byte	0xb
 1879 046a 60       		.byte	0x60
 1880 046b E3030000 		.4byte	0x3e3
ARM GAS  /tmp/ccZsv2Jc.s 			page 60


 1881 046f 88       		.byte	0x88
 1882 0470 00       		.byte	0
 1883 0471 19       		.uleb128 0x19
 1884 0472 04       		.byte	0x4
 1885 0473 33040000 		.4byte	0x433
 1886 0477 15       		.uleb128 0x15
 1887 0478 87040000 		.4byte	0x487
 1888 047c 87040000 		.4byte	0x487
 1889 0480 16       		.uleb128 0x16
 1890 0481 D7000000 		.4byte	0xd7
 1891 0485 1F       		.byte	0x1f
 1892 0486 00       		.byte	0
 1893 0487 19       		.uleb128 0x19
 1894 0488 04       		.byte	0x4
 1895 0489 8D040000 		.4byte	0x48d
 1896 048d 1C       		.uleb128 0x1c
 1897 048e 17       		.uleb128 0x17
 1898 048f 76060000 		.4byte	.LASF78
 1899 0493 08       		.byte	0x8
 1900 0494 0B       		.byte	0xb
 1901 0495 73       		.byte	0x73
 1902 0496 B3040000 		.4byte	0x4b3
 1903 049a 11       		.uleb128 0x11
 1904 049b C6010000 		.4byte	.LASF79
 1905 049f 0B       		.byte	0xb
 1906 04a0 74       		.byte	0x74
 1907 04a1 B3040000 		.4byte	0x4b3
 1908 04a5 00       		.byte	0
 1909 04a6 11       		.uleb128 0x11
 1910 04a7 E0070000 		.4byte	.LASF80
 1911 04ab 0B       		.byte	0xb
 1912 04ac 75       		.byte	0x75
 1913 04ad 89000000 		.4byte	0x89
 1914 04b1 04       		.byte	0x4
 1915 04b2 00       		.byte	0
 1916 04b3 19       		.uleb128 0x19
 1917 04b4 04       		.byte	0x4
 1918 04b5 37000000 		.4byte	0x37
 1919 04b9 17       		.uleb128 0x17
 1920 04ba 25000000 		.4byte	.LASF81
 1921 04be 68       		.byte	0x68
 1922 04bf 0B       		.byte	0xb
 1923 04c0 B3       		.byte	0xb3
 1924 04c1 E3050000 		.4byte	0x5e3
 1925 04c5 18       		.uleb128 0x18
 1926 04c6 5F7000   		.ascii	"_p\000"
 1927 04c9 0B       		.byte	0xb
 1928 04ca B4       		.byte	0xb4
 1929 04cb B3040000 		.4byte	0x4b3
 1930 04cf 00       		.byte	0
 1931 04d0 18       		.uleb128 0x18
 1932 04d1 5F7200   		.ascii	"_r\000"
 1933 04d4 0B       		.byte	0xb
 1934 04d5 B5       		.byte	0xb5
 1935 04d6 89000000 		.4byte	0x89
 1936 04da 04       		.byte	0x4
 1937 04db 18       		.uleb128 0x18
ARM GAS  /tmp/ccZsv2Jc.s 			page 61


 1938 04dc 5F7700   		.ascii	"_w\000"
 1939 04df 0B       		.byte	0xb
 1940 04e0 B6       		.byte	0xb6
 1941 04e1 89000000 		.4byte	0x89
 1942 04e5 08       		.byte	0x8
 1943 04e6 11       		.uleb128 0x11
 1944 04e7 30020000 		.4byte	.LASF82
 1945 04eb 0B       		.byte	0xb
 1946 04ec B7       		.byte	0xb7
 1947 04ed 3E000000 		.4byte	0x3e
 1948 04f1 0C       		.byte	0xc
 1949 04f2 11       		.uleb128 0x11
 1950 04f3 09040000 		.4byte	.LASF83
 1951 04f7 0B       		.byte	0xb
 1952 04f8 B8       		.byte	0xb8
 1953 04f9 3E000000 		.4byte	0x3e
 1954 04fd 0E       		.byte	0xe
 1955 04fe 18       		.uleb128 0x18
 1956 04ff 5F626600 		.ascii	"_bf\000"
 1957 0503 0B       		.byte	0xb
 1958 0504 B9       		.byte	0xb9
 1959 0505 8E040000 		.4byte	0x48e
 1960 0509 10       		.byte	0x10
 1961 050a 11       		.uleb128 0x11
 1962 050b 30010000 		.4byte	.LASF84
 1963 050f 0B       		.byte	0xb
 1964 0510 BA       		.byte	0xba
 1965 0511 89000000 		.4byte	0x89
 1966 0515 18       		.byte	0x18
 1967 0516 11       		.uleb128 0x11
 1968 0517 F7010000 		.4byte	.LASF85
 1969 051b 0B       		.byte	0xb
 1970 051c C1       		.byte	0xc1
 1971 051d 61020000 		.4byte	0x261
 1972 0521 1C       		.byte	0x1c
 1973 0522 11       		.uleb128 0x11
 1974 0523 B4030000 		.4byte	.LASF86
 1975 0527 0B       		.byte	0xb
 1976 0528 C3       		.byte	0xc3
 1977 0529 50070000 		.4byte	0x750
 1978 052d 20       		.byte	0x20
 1979 052e 11       		.uleb128 0x11
 1980 052f C0040000 		.4byte	.LASF87
 1981 0533 0B       		.byte	0xb
 1982 0534 C5       		.byte	0xc5
 1983 0535 7F070000 		.4byte	0x77f
 1984 0539 24       		.byte	0x24
 1985 053a 11       		.uleb128 0x11
 1986 053b 39080000 		.4byte	.LASF88
 1987 053f 0B       		.byte	0xb
 1988 0540 C8       		.byte	0xc8
 1989 0541 A3070000 		.4byte	0x7a3
 1990 0545 28       		.byte	0x28
 1991 0546 11       		.uleb128 0x11
 1992 0547 97010000 		.4byte	.LASF89
 1993 054b 0B       		.byte	0xb
 1994 054c C9       		.byte	0xc9
ARM GAS  /tmp/ccZsv2Jc.s 			page 62


 1995 054d BD070000 		.4byte	0x7bd
 1996 0551 2C       		.byte	0x2c
 1997 0552 18       		.uleb128 0x18
 1998 0553 5F756200 		.ascii	"_ub\000"
 1999 0557 0B       		.byte	0xb
 2000 0558 CC       		.byte	0xcc
 2001 0559 8E040000 		.4byte	0x48e
 2002 055d 30       		.byte	0x30
 2003 055e 18       		.uleb128 0x18
 2004 055f 5F757000 		.ascii	"_up\000"
 2005 0563 0B       		.byte	0xb
 2006 0564 CD       		.byte	0xcd
 2007 0565 B3040000 		.4byte	0x4b3
 2008 0569 38       		.byte	0x38
 2009 056a 18       		.uleb128 0x18
 2010 056b 5F757200 		.ascii	"_ur\000"
 2011 056f 0B       		.byte	0xb
 2012 0570 CE       		.byte	0xce
 2013 0571 89000000 		.4byte	0x89
 2014 0575 3C       		.byte	0x3c
 2015 0576 11       		.uleb128 0x11
 2016 0577 B1010000 		.4byte	.LASF90
 2017 057b 0B       		.byte	0xb
 2018 057c D1       		.byte	0xd1
 2019 057d C3070000 		.4byte	0x7c3
 2020 0581 40       		.byte	0x40
 2021 0582 11       		.uleb128 0x11
 2022 0583 67090000 		.4byte	.LASF91
 2023 0587 0B       		.byte	0xb
 2024 0588 D2       		.byte	0xd2
 2025 0589 D3070000 		.4byte	0x7d3
 2026 058d 43       		.byte	0x43
 2027 058e 18       		.uleb128 0x18
 2028 058f 5F6C6200 		.ascii	"_lb\000"
 2029 0593 0B       		.byte	0xb
 2030 0594 D5       		.byte	0xd5
 2031 0595 8E040000 		.4byte	0x48e
 2032 0599 44       		.byte	0x44
 2033 059a 11       		.uleb128 0x11
 2034 059b D7070000 		.4byte	.LASF92
 2035 059f 0B       		.byte	0xb
 2036 05a0 D8       		.byte	0xd8
 2037 05a1 89000000 		.4byte	0x89
 2038 05a5 4C       		.byte	0x4c
 2039 05a6 11       		.uleb128 0x11
 2040 05a7 CA020000 		.4byte	.LASF93
 2041 05ab 0B       		.byte	0xb
 2042 05ac D9       		.byte	0xd9
 2043 05ad 6E020000 		.4byte	0x26e
 2044 05b1 50       		.byte	0x50
 2045 05b2 11       		.uleb128 0x11
 2046 05b3 43040000 		.4byte	.LASF94
 2047 05b7 0B       		.byte	0xb
 2048 05b8 DC       		.byte	0xdc
 2049 05b9 01060000 		.4byte	0x601
 2050 05bd 54       		.byte	0x54
 2051 05be 11       		.uleb128 0x11
ARM GAS  /tmp/ccZsv2Jc.s 			page 63


 2052 05bf A6040000 		.4byte	.LASF95
 2053 05c3 0B       		.byte	0xb
 2054 05c4 E0       		.byte	0xe0
 2055 05c5 EB020000 		.4byte	0x2eb
 2056 05c9 58       		.byte	0x58
 2057 05ca 11       		.uleb128 0x11
 2058 05cb A7060000 		.4byte	.LASF96
 2059 05cf 0B       		.byte	0xb
 2060 05d0 E2       		.byte	0xe2
 2061 05d1 E0020000 		.4byte	0x2e0
 2062 05d5 5C       		.byte	0x5c
 2063 05d6 11       		.uleb128 0x11
 2064 05d7 7D060000 		.4byte	.LASF97
 2065 05db 0B       		.byte	0xb
 2066 05dc E3       		.byte	0xe3
 2067 05dd 89000000 		.4byte	0x89
 2068 05e1 64       		.byte	0x64
 2069 05e2 00       		.byte	0
 2070 05e3 1D       		.uleb128 0x1d
 2071 05e4 89000000 		.4byte	0x89
 2072 05e8 01060000 		.4byte	0x601
 2073 05ec 1E       		.uleb128 0x1e
 2074 05ed 01060000 		.4byte	0x601
 2075 05f1 1E       		.uleb128 0x1e
 2076 05f2 61020000 		.4byte	0x261
 2077 05f6 1E       		.uleb128 0x1e
 2078 05f7 3E070000 		.4byte	0x73e
 2079 05fb 1E       		.uleb128 0x1e
 2080 05fc 89000000 		.4byte	0x89
 2081 0600 00       		.byte	0
 2082 0601 19       		.uleb128 0x19
 2083 0602 04       		.byte	0x4
 2084 0603 0C060000 		.4byte	0x60c
 2085 0607 05       		.uleb128 0x5
 2086 0608 01060000 		.4byte	0x601
 2087 060c 1F       		.uleb128 0x1f
 2088 060d 20070000 		.4byte	.LASF98
 2089 0611 2804     		.2byte	0x428
 2090 0613 0B       		.byte	0xb
 2091 0614 3802     		.2byte	0x238
 2092 0616 3E070000 		.4byte	0x73e
 2093 061a 0F       		.uleb128 0xf
 2094 061b CB070000 		.4byte	.LASF99
 2095 061f 0B       		.byte	0xb
 2096 0620 3A02     		.2byte	0x23a
 2097 0622 89000000 		.4byte	0x89
 2098 0626 00       		.byte	0
 2099 0627 0F       		.uleb128 0xf
 2100 0628 1C090000 		.4byte	.LASF100
 2101 062c 0B       		.byte	0xb
 2102 062d 3F02     		.2byte	0x23f
 2103 062f 2A080000 		.4byte	0x82a
 2104 0633 04       		.byte	0x4
 2105 0634 0F       		.uleb128 0xf
 2106 0635 DC030000 		.4byte	.LASF101
 2107 0639 0B       		.byte	0xb
 2108 063a 3F02     		.2byte	0x23f
ARM GAS  /tmp/ccZsv2Jc.s 			page 64


 2109 063c 2A080000 		.4byte	0x82a
 2110 0640 08       		.byte	0x8
 2111 0641 0F       		.uleb128 0xf
 2112 0642 75030000 		.4byte	.LASF102
 2113 0646 0B       		.byte	0xb
 2114 0647 3F02     		.2byte	0x23f
 2115 0649 2A080000 		.4byte	0x82a
 2116 064d 0C       		.byte	0xc
 2117 064e 0F       		.uleb128 0xf
 2118 064f CC060000 		.4byte	.LASF103
 2119 0653 0B       		.byte	0xb
 2120 0654 4102     		.2byte	0x241
 2121 0656 89000000 		.4byte	0x89
 2122 065a 10       		.byte	0x10
 2123 065b 0F       		.uleb128 0xf
 2124 065c 6D000000 		.4byte	.LASF104
 2125 0660 0B       		.byte	0xb
 2126 0661 4202     		.2byte	0x242
 2127 0663 0C0A0000 		.4byte	0xa0c
 2128 0667 14       		.byte	0x14
 2129 0668 0F       		.uleb128 0xf
 2130 0669 D0080000 		.4byte	.LASF105
 2131 066d 0B       		.byte	0xb
 2132 066e 4402     		.2byte	0x244
 2133 0670 89000000 		.4byte	0x89
 2134 0674 30       		.byte	0x30
 2135 0675 0F       		.uleb128 0xf
 2136 0676 F6090000 		.4byte	.LASF106
 2137 067a 0B       		.byte	0xb
 2138 067b 4502     		.2byte	0x245
 2139 067d 74070000 		.4byte	0x774
 2140 0681 34       		.byte	0x34
 2141 0682 0F       		.uleb128 0xf
 2142 0683 74050000 		.4byte	.LASF107
 2143 0687 0B       		.byte	0xb
 2144 0688 4702     		.2byte	0x247
 2145 068a 89000000 		.4byte	0x89
 2146 068e 38       		.byte	0x38
 2147 068f 0F       		.uleb128 0xf
 2148 0690 0E070000 		.4byte	.LASF108
 2149 0694 0B       		.byte	0xb
 2150 0695 4902     		.2byte	0x249
 2151 0697 270A0000 		.4byte	0xa27
 2152 069b 3C       		.byte	0x3c
 2153 069c 0F       		.uleb128 0xf
 2154 069d 8C040000 		.4byte	.LASF109
 2155 06a1 0B       		.byte	0xb
 2156 06a2 4C02     		.2byte	0x24c
 2157 06a4 54030000 		.4byte	0x354
 2158 06a8 40       		.byte	0x40
 2159 06a9 0F       		.uleb128 0xf
 2160 06aa 5D020000 		.4byte	.LASF110
 2161 06ae 0B       		.byte	0xb
 2162 06af 4D02     		.2byte	0x24d
 2163 06b1 89000000 		.4byte	0x89
 2164 06b5 44       		.byte	0x44
 2165 06b6 0F       		.uleb128 0xf
ARM GAS  /tmp/ccZsv2Jc.s 			page 65


 2166 06b7 140A0000 		.4byte	.LASF111
 2167 06bb 0B       		.byte	0xb
 2168 06bc 4E02     		.2byte	0x24e
 2169 06be 54030000 		.4byte	0x354
 2170 06c2 48       		.byte	0x48
 2171 06c3 0F       		.uleb128 0xf
 2172 06c4 CD050000 		.4byte	.LASF112
 2173 06c8 0B       		.byte	0xb
 2174 06c9 4F02     		.2byte	0x24f
 2175 06cb 2D0A0000 		.4byte	0xa2d
 2176 06cf 4C       		.byte	0x4c
 2177 06d0 0F       		.uleb128 0xf
 2178 06d1 E4030000 		.4byte	.LASF113
 2179 06d5 0B       		.byte	0xb
 2180 06d6 5202     		.2byte	0x252
 2181 06d8 89000000 		.4byte	0x89
 2182 06dc 50       		.byte	0x50
 2183 06dd 0F       		.uleb128 0xf
 2184 06de C2020000 		.4byte	.LASF114
 2185 06e2 0B       		.byte	0xb
 2186 06e3 5302     		.2byte	0x253
 2187 06e5 3E070000 		.4byte	0x73e
 2188 06e9 54       		.byte	0x54
 2189 06ea 0F       		.uleb128 0xf
 2190 06eb A1040000 		.4byte	.LASF115
 2191 06ef 0B       		.byte	0xb
 2192 06f0 7602     		.2byte	0x276
 2193 06f2 EA090000 		.4byte	0x9ea
 2194 06f6 58       		.byte	0x58
 2195 06f7 20       		.uleb128 0x20
 2196 06f8 62050000 		.4byte	.LASF75
 2197 06fc 0B       		.byte	0xb
 2198 06fd 7A02     		.2byte	0x27a
 2199 06ff 71040000 		.4byte	0x471
 2200 0703 4801     		.2byte	0x148
 2201 0705 20       		.uleb128 0x20
 2202 0706 A6000000 		.4byte	.LASF116
 2203 070a 0B       		.byte	0xb
 2204 070b 7B02     		.2byte	0x27b
 2205 070d 33040000 		.4byte	0x433
 2206 0711 4C01     		.2byte	0x14c
 2207 0713 20       		.uleb128 0x20
 2208 0714 3D090000 		.4byte	.LASF117
 2209 0718 0B       		.byte	0xb
 2210 0719 7F02     		.2byte	0x27f
 2211 071b 3E0A0000 		.4byte	0xa3e
 2212 071f DC02     		.2byte	0x2dc
 2213 0721 20       		.uleb128 0x20
 2214 0722 0F020000 		.4byte	.LASF118
 2215 0726 0B       		.byte	0xb
 2216 0727 8402     		.2byte	0x284
 2217 0729 EF070000 		.4byte	0x7ef
 2218 072d E002     		.2byte	0x2e0
 2219 072f 20       		.uleb128 0x20
 2220 0730 D5010000 		.4byte	.LASF119
 2221 0734 0B       		.byte	0xb
 2222 0735 8502     		.2byte	0x285
ARM GAS  /tmp/ccZsv2Jc.s 			page 66


 2223 0737 4A0A0000 		.4byte	0xa4a
 2224 073b EC02     		.2byte	0x2ec
 2225 073d 00       		.byte	0
 2226 073e 19       		.uleb128 0x19
 2227 073f 04       		.byte	0x4
 2228 0740 44070000 		.4byte	0x744
 2229 0744 02       		.uleb128 0x2
 2230 0745 01       		.byte	0x1
 2231 0746 08       		.byte	0x8
 2232 0747 D2070000 		.4byte	.LASF120
 2233 074b 05       		.uleb128 0x5
 2234 074c 44070000 		.4byte	0x744
 2235 0750 19       		.uleb128 0x19
 2236 0751 04       		.byte	0x4
 2237 0752 E3050000 		.4byte	0x5e3
 2238 0756 1D       		.uleb128 0x1d
 2239 0757 89000000 		.4byte	0x89
 2240 075b 74070000 		.4byte	0x774
 2241 075f 1E       		.uleb128 0x1e
 2242 0760 01060000 		.4byte	0x601
 2243 0764 1E       		.uleb128 0x1e
 2244 0765 61020000 		.4byte	0x261
 2245 0769 1E       		.uleb128 0x1e
 2246 076a 74070000 		.4byte	0x774
 2247 076e 1E       		.uleb128 0x1e
 2248 076f 89000000 		.4byte	0x89
 2249 0773 00       		.byte	0
 2250 0774 19       		.uleb128 0x19
 2251 0775 04       		.byte	0x4
 2252 0776 4B070000 		.4byte	0x74b
 2253 077a 05       		.uleb128 0x5
 2254 077b 74070000 		.4byte	0x774
 2255 077f 19       		.uleb128 0x19
 2256 0780 04       		.byte	0x4
 2257 0781 56070000 		.4byte	0x756
 2258 0785 1D       		.uleb128 0x1d
 2259 0786 79020000 		.4byte	0x279
 2260 078a A3070000 		.4byte	0x7a3
 2261 078e 1E       		.uleb128 0x1e
 2262 078f 01060000 		.4byte	0x601
 2263 0793 1E       		.uleb128 0x1e
 2264 0794 61020000 		.4byte	0x261
 2265 0798 1E       		.uleb128 0x1e
 2266 0799 79020000 		.4byte	0x279
 2267 079d 1E       		.uleb128 0x1e
 2268 079e 89000000 		.4byte	0x89
 2269 07a2 00       		.byte	0
 2270 07a3 19       		.uleb128 0x19
 2271 07a4 04       		.byte	0x4
 2272 07a5 85070000 		.4byte	0x785
 2273 07a9 1D       		.uleb128 0x1d
 2274 07aa 89000000 		.4byte	0x89
 2275 07ae BD070000 		.4byte	0x7bd
 2276 07b2 1E       		.uleb128 0x1e
 2277 07b3 01060000 		.4byte	0x601
 2278 07b7 1E       		.uleb128 0x1e
 2279 07b8 61020000 		.4byte	0x261
ARM GAS  /tmp/ccZsv2Jc.s 			page 67


 2280 07bc 00       		.byte	0
 2281 07bd 19       		.uleb128 0x19
 2282 07be 04       		.byte	0x4
 2283 07bf A9070000 		.4byte	0x7a9
 2284 07c3 15       		.uleb128 0x15
 2285 07c4 37000000 		.4byte	0x37
 2286 07c8 D3070000 		.4byte	0x7d3
 2287 07cc 16       		.uleb128 0x16
 2288 07cd D7000000 		.4byte	0xd7
 2289 07d1 02       		.byte	0x2
 2290 07d2 00       		.byte	0
 2291 07d3 15       		.uleb128 0x15
 2292 07d4 37000000 		.4byte	0x37
 2293 07d8 E3070000 		.4byte	0x7e3
 2294 07dc 16       		.uleb128 0x16
 2295 07dd D7000000 		.4byte	0xd7
 2296 07e1 00       		.byte	0
 2297 07e2 00       		.byte	0
 2298 07e3 0C       		.uleb128 0xc
 2299 07e4 8B060000 		.4byte	.LASF121
 2300 07e8 0B       		.byte	0xb
 2301 07e9 1D01     		.2byte	0x11d
 2302 07eb B9040000 		.4byte	0x4b9
 2303 07ef 21       		.uleb128 0x21
 2304 07f0 09090000 		.4byte	.LASF122
 2305 07f4 0C       		.byte	0xc
 2306 07f5 0B       		.byte	0xb
 2307 07f6 2101     		.2byte	0x121
 2308 07f8 24080000 		.4byte	0x824
 2309 07fc 0F       		.uleb128 0xf
 2310 07fd 33080000 		.4byte	.LASF55
 2311 0801 0B       		.byte	0xb
 2312 0802 2301     		.2byte	0x123
 2313 0804 24080000 		.4byte	0x824
 2314 0808 00       		.byte	0
 2315 0809 0F       		.uleb128 0xf
 2316 080a 61040000 		.4byte	.LASF123
 2317 080e 0B       		.byte	0xb
 2318 080f 2401     		.2byte	0x124
 2319 0811 89000000 		.4byte	0x89
 2320 0815 04       		.byte	0x4
 2321 0816 0F       		.uleb128 0xf
 2322 0817 85060000 		.4byte	.LASF124
 2323 081b 0B       		.byte	0xb
 2324 081c 2501     		.2byte	0x125
 2325 081e 2A080000 		.4byte	0x82a
 2326 0822 08       		.byte	0x8
 2327 0823 00       		.byte	0
 2328 0824 19       		.uleb128 0x19
 2329 0825 04       		.byte	0x4
 2330 0826 EF070000 		.4byte	0x7ef
 2331 082a 19       		.uleb128 0x19
 2332 082b 04       		.byte	0x4
 2333 082c E3070000 		.4byte	0x7e3
 2334 0830 21       		.uleb128 0x21
 2335 0831 41000000 		.4byte	.LASF125
 2336 0835 0E       		.byte	0xe
ARM GAS  /tmp/ccZsv2Jc.s 			page 68


 2337 0836 0B       		.byte	0xb
 2338 0837 3D01     		.2byte	0x13d
 2339 0839 65080000 		.4byte	0x865
 2340 083d 0F       		.uleb128 0xf
 2341 083e A6080000 		.4byte	.LASF126
 2342 0842 0B       		.byte	0xb
 2343 0843 3E01     		.2byte	0x13e
 2344 0845 65080000 		.4byte	0x865
 2345 0849 00       		.byte	0
 2346 084a 0F       		.uleb128 0xf
 2347 084b AC040000 		.4byte	.LASF127
 2348 084f 0B       		.byte	0xb
 2349 0850 3F01     		.2byte	0x13f
 2350 0852 65080000 		.4byte	0x865
 2351 0856 06       		.byte	0x6
 2352 0857 0F       		.uleb128 0xf
 2353 0858 99080000 		.4byte	.LASF128
 2354 085c 0B       		.byte	0xb
 2355 085d 4001     		.2byte	0x140
 2356 085f 50000000 		.4byte	0x50
 2357 0863 0C       		.byte	0xc
 2358 0864 00       		.byte	0
 2359 0865 15       		.uleb128 0x15
 2360 0866 50000000 		.4byte	0x50
 2361 086a 75080000 		.4byte	0x875
 2362 086e 16       		.uleb128 0x16
 2363 086f D7000000 		.4byte	0xd7
 2364 0873 02       		.byte	0x2
 2365 0874 00       		.byte	0
 2366 0875 0D       		.uleb128 0xd
 2367 0876 D0       		.byte	0xd0
 2368 0877 0B       		.byte	0xb
 2369 0878 5702     		.2byte	0x257
 2370 087a 76090000 		.4byte	0x976
 2371 087e 0F       		.uleb128 0xf
 2372 087f F0080000 		.4byte	.LASF129
 2373 0883 0B       		.byte	0xb
 2374 0884 5902     		.2byte	0x259
 2375 0886 90000000 		.4byte	0x90
 2376 088a 00       		.byte	0
 2377 088b 0F       		.uleb128 0xf
 2378 088c EE020000 		.4byte	.LASF130
 2379 0890 0B       		.byte	0xb
 2380 0891 5A02     		.2byte	0x25a
 2381 0893 3E070000 		.4byte	0x73e
 2382 0897 04       		.byte	0x4
 2383 0898 0F       		.uleb128 0xf
 2384 0899 7F040000 		.4byte	.LASF131
 2385 089d 0B       		.byte	0xb
 2386 089e 5B02     		.2byte	0x25b
 2387 08a0 76090000 		.4byte	0x976
 2388 08a4 08       		.byte	0x8
 2389 08a5 0F       		.uleb128 0xf
 2390 08a6 8B090000 		.4byte	.LASF132
 2391 08aa 0B       		.byte	0xb
 2392 08ab 5C02     		.2byte	0x25c
 2393 08ad 6A030000 		.4byte	0x36a
ARM GAS  /tmp/ccZsv2Jc.s 			page 69


 2394 08b1 24       		.byte	0x24
 2395 08b2 0F       		.uleb128 0xf
 2396 08b3 7F050000 		.4byte	.LASF133
 2397 08b7 0B       		.byte	0xb
 2398 08b8 5D02     		.2byte	0x25d
 2399 08ba 89000000 		.4byte	0x89
 2400 08be 48       		.byte	0x48
 2401 08bf 0F       		.uleb128 0xf
 2402 08c0 68040000 		.4byte	.LASF134
 2403 08c4 0B       		.byte	0xb
 2404 08c5 5E02     		.2byte	0x25e
 2405 08c7 82000000 		.4byte	0x82
 2406 08cb 50       		.byte	0x50
 2407 08cc 0F       		.uleb128 0xf
 2408 08cd 2D050000 		.4byte	.LASF135
 2409 08d1 0B       		.byte	0xb
 2410 08d2 5F02     		.2byte	0x25f
 2411 08d4 30080000 		.4byte	0x830
 2412 08d8 58       		.byte	0x58
 2413 08d9 0F       		.uleb128 0xf
 2414 08da BF060000 		.4byte	.LASF136
 2415 08de 0B       		.byte	0xb
 2416 08df 6002     		.2byte	0x260
 2417 08e1 E0020000 		.4byte	0x2e0
 2418 08e5 68       		.byte	0x68
 2419 08e6 0F       		.uleb128 0xf
 2420 08e7 060A0000 		.4byte	.LASF137
 2421 08eb 0B       		.byte	0xb
 2422 08ec 6102     		.2byte	0x261
 2423 08ee E0020000 		.4byte	0x2e0
 2424 08f2 70       		.byte	0x70
 2425 08f3 0F       		.uleb128 0xf
 2426 08f4 79010000 		.4byte	.LASF138
 2427 08f8 0B       		.byte	0xb
 2428 08f9 6202     		.2byte	0x262
 2429 08fb E0020000 		.4byte	0x2e0
 2430 08ff 78       		.byte	0x78
 2431 0900 0F       		.uleb128 0xf
 2432 0901 2B090000 		.4byte	.LASF139
 2433 0905 0B       		.byte	0xb
 2434 0906 6302     		.2byte	0x263
 2435 0908 86090000 		.4byte	0x986
 2436 090c 80       		.byte	0x80
 2437 090d 0F       		.uleb128 0xf
 2438 090e 73040000 		.4byte	.LASF140
 2439 0912 0B       		.byte	0xb
 2440 0913 6402     		.2byte	0x264
 2441 0915 96090000 		.4byte	0x996
 2442 0919 88       		.byte	0x88
 2443 091a 0F       		.uleb128 0xf
 2444 091b 99000000 		.4byte	.LASF141
 2445 091f 0B       		.byte	0xb
 2446 0920 6502     		.2byte	0x265
 2447 0922 89000000 		.4byte	0x89
 2448 0926 A0       		.byte	0xa0
 2449 0927 0F       		.uleb128 0xf
 2450 0928 FB020000 		.4byte	.LASF142
ARM GAS  /tmp/ccZsv2Jc.s 			page 70


 2451 092c 0B       		.byte	0xb
 2452 092d 6602     		.2byte	0x266
 2453 092f E0020000 		.4byte	0x2e0
 2454 0933 A4       		.byte	0xa4
 2455 0934 0F       		.uleb128 0xf
 2456 0935 5F010000 		.4byte	.LASF143
 2457 0939 0B       		.byte	0xb
 2458 093a 6702     		.2byte	0x267
 2459 093c E0020000 		.4byte	0x2e0
 2460 0940 AC       		.byte	0xac
 2461 0941 0F       		.uleb128 0xf
 2462 0942 09030000 		.4byte	.LASF144
 2463 0946 0B       		.byte	0xb
 2464 0947 6802     		.2byte	0x268
 2465 0949 E0020000 		.4byte	0x2e0
 2466 094d B4       		.byte	0xb4
 2467 094e 0F       		.uleb128 0xf
 2468 094f D4000000 		.4byte	.LASF145
 2469 0953 0B       		.byte	0xb
 2470 0954 6902     		.2byte	0x269
 2471 0956 E0020000 		.4byte	0x2e0
 2472 095a BC       		.byte	0xbc
 2473 095b 0F       		.uleb128 0xf
 2474 095c E3000000 		.4byte	.LASF146
 2475 0960 0B       		.byte	0xb
 2476 0961 6A02     		.2byte	0x26a
 2477 0963 E0020000 		.4byte	0x2e0
 2478 0967 C4       		.byte	0xc4
 2479 0968 0F       		.uleb128 0xf
 2480 0969 5A060000 		.4byte	.LASF147
 2481 096d 0B       		.byte	0xb
 2482 096e 6B02     		.2byte	0x26b
 2483 0970 89000000 		.4byte	0x89
 2484 0974 CC       		.byte	0xcc
 2485 0975 00       		.byte	0
 2486 0976 15       		.uleb128 0x15
 2487 0977 44070000 		.4byte	0x744
 2488 097b 86090000 		.4byte	0x986
 2489 097f 16       		.uleb128 0x16
 2490 0980 D7000000 		.4byte	0xd7
 2491 0984 19       		.byte	0x19
 2492 0985 00       		.byte	0
 2493 0986 15       		.uleb128 0x15
 2494 0987 44070000 		.4byte	0x744
 2495 098b 96090000 		.4byte	0x996
 2496 098f 16       		.uleb128 0x16
 2497 0990 D7000000 		.4byte	0xd7
 2498 0994 07       		.byte	0x7
 2499 0995 00       		.byte	0
 2500 0996 15       		.uleb128 0x15
 2501 0997 44070000 		.4byte	0x744
 2502 099b A6090000 		.4byte	0x9a6
 2503 099f 16       		.uleb128 0x16
 2504 09a0 D7000000 		.4byte	0xd7
 2505 09a4 17       		.byte	0x17
 2506 09a5 00       		.byte	0
 2507 09a6 0D       		.uleb128 0xd
ARM GAS  /tmp/ccZsv2Jc.s 			page 71


 2508 09a7 F0       		.byte	0xf0
 2509 09a8 0B       		.byte	0xb
 2510 09a9 7002     		.2byte	0x270
 2511 09ab CA090000 		.4byte	0x9ca
 2512 09af 0F       		.uleb128 0xf
 2513 09b0 9A040000 		.4byte	.LASF148
 2514 09b4 0B       		.byte	0xb
 2515 09b5 7302     		.2byte	0x273
 2516 09b7 CA090000 		.4byte	0x9ca
 2517 09bb 00       		.byte	0
 2518 09bc 0F       		.uleb128 0xf
 2519 09bd D9040000 		.4byte	.LASF149
 2520 09c1 0B       		.byte	0xb
 2521 09c2 7402     		.2byte	0x274
 2522 09c4 DA090000 		.4byte	0x9da
 2523 09c8 78       		.byte	0x78
 2524 09c9 00       		.byte	0
 2525 09ca 15       		.uleb128 0x15
 2526 09cb B3040000 		.4byte	0x4b3
 2527 09cf DA090000 		.4byte	0x9da
 2528 09d3 16       		.uleb128 0x16
 2529 09d4 D7000000 		.4byte	0xd7
 2530 09d8 1D       		.byte	0x1d
 2531 09d9 00       		.byte	0
 2532 09da 15       		.uleb128 0x15
 2533 09db 90000000 		.4byte	0x90
 2534 09df EA090000 		.4byte	0x9ea
 2535 09e3 16       		.uleb128 0x16
 2536 09e4 D7000000 		.4byte	0xd7
 2537 09e8 1D       		.byte	0x1d
 2538 09e9 00       		.byte	0
 2539 09ea 22       		.uleb128 0x22
 2540 09eb F0       		.byte	0xf0
 2541 09ec 0B       		.byte	0xb
 2542 09ed 5502     		.2byte	0x255
 2543 09ef 0C0A0000 		.4byte	0xa0c
 2544 09f3 23       		.uleb128 0x23
 2545 09f4 20070000 		.4byte	.LASF98
 2546 09f8 0B       		.byte	0xb
 2547 09f9 6C02     		.2byte	0x26c
 2548 09fb 75080000 		.4byte	0x875
 2549 09ff 23       		.uleb128 0x23
 2550 0a00 6D090000 		.4byte	.LASF150
 2551 0a04 0B       		.byte	0xb
 2552 0a05 7502     		.2byte	0x275
 2553 0a07 A6090000 		.4byte	0x9a6
 2554 0a0b 00       		.byte	0
 2555 0a0c 15       		.uleb128 0x15
 2556 0a0d 44070000 		.4byte	0x744
 2557 0a11 1C0A0000 		.4byte	0xa1c
 2558 0a15 16       		.uleb128 0x16
 2559 0a16 D7000000 		.4byte	0xd7
 2560 0a1a 18       		.byte	0x18
 2561 0a1b 00       		.byte	0
 2562 0a1c 24       		.uleb128 0x24
 2563 0a1d 270A0000 		.4byte	0xa27
 2564 0a21 1E       		.uleb128 0x1e
ARM GAS  /tmp/ccZsv2Jc.s 			page 72


 2565 0a22 01060000 		.4byte	0x601
 2566 0a26 00       		.byte	0
 2567 0a27 19       		.uleb128 0x19
 2568 0a28 04       		.byte	0x4
 2569 0a29 1C0A0000 		.4byte	0xa1c
 2570 0a2d 19       		.uleb128 0x19
 2571 0a2e 04       		.byte	0x4
 2572 0a2f 54030000 		.4byte	0x354
 2573 0a33 24       		.uleb128 0x24
 2574 0a34 3E0A0000 		.4byte	0xa3e
 2575 0a38 1E       		.uleb128 0x1e
 2576 0a39 89000000 		.4byte	0x89
 2577 0a3d 00       		.byte	0
 2578 0a3e 19       		.uleb128 0x19
 2579 0a3f 04       		.byte	0x4
 2580 0a40 440A0000 		.4byte	0xa44
 2581 0a44 19       		.uleb128 0x19
 2582 0a45 04       		.byte	0x4
 2583 0a46 330A0000 		.4byte	0xa33
 2584 0a4a 15       		.uleb128 0x15
 2585 0a4b E3070000 		.4byte	0x7e3
 2586 0a4f 5A0A0000 		.4byte	0xa5a
 2587 0a53 16       		.uleb128 0x16
 2588 0a54 D7000000 		.4byte	0xd7
 2589 0a58 02       		.byte	0x2
 2590 0a59 00       		.byte	0
 2591 0a5a 07       		.uleb128 0x7
 2592 0a5b 69030000 		.4byte	.LASF151
 2593 0a5f 0B       		.byte	0xb
 2594 0a60 FD02     		.2byte	0x2fd
 2595 0a62 01060000 		.4byte	0x601
 2596 0a66 07       		.uleb128 0x7
 2597 0a67 BD080000 		.4byte	.LASF152
 2598 0a6b 0B       		.byte	0xb
 2599 0a6c FE02     		.2byte	0x2fe
 2600 0a6e 07060000 		.4byte	0x607
 2601 0a72 08       		.uleb128 0x8
 2602 0a73 6A050000 		.4byte	.LASF153
 2603 0a77 0C       		.byte	0xc
 2604 0a78 5F       		.byte	0x5f
 2605 0a79 3E070000 		.4byte	0x73e
 2606 0a7d 02       		.uleb128 0x2
 2607 0a7e 08       		.byte	0x8
 2608 0a7f 04       		.byte	0x4
 2609 0a80 4E0A0000 		.4byte	.LASF154
 2610 0a84 02       		.uleb128 0x2
 2611 0a85 04       		.byte	0x4
 2612 0a86 04       		.byte	0x4
 2613 0a87 B3070000 		.4byte	.LASF155
 2614 0a8b 25       		.uleb128 0x25
 2615 0a8c AC080000 		.4byte	.LASF227
 2616 0a90 01       		.byte	0x1
 2617 0a91 25000000 		.4byte	0x25
 2618 0a95 0D       		.byte	0xd
 2619 0a96 9902     		.2byte	0x299
 2620 0a98 B50A0000 		.4byte	0xab5
 2621 0a9c 26       		.uleb128 0x26
ARM GAS  /tmp/ccZsv2Jc.s 			page 73


 2622 0a9d E2080000 		.4byte	.LASF156
 2623 0aa1 7F       		.sleb128 -1
 2624 0aa2 0A       		.uleb128 0xa
 2625 0aa3 4F020000 		.4byte	.LASF157
 2626 0aa7 00       		.byte	0
 2627 0aa8 0A       		.uleb128 0xa
 2628 0aa9 53000000 		.4byte	.LASF158
 2629 0aad 01       		.byte	0x1
 2630 0aae 0A       		.uleb128 0xa
 2631 0aaf 21010000 		.4byte	.LASF159
 2632 0ab3 02       		.byte	0x2
 2633 0ab4 00       		.byte	0
 2634 0ab5 07       		.uleb128 0x7
 2635 0ab6 4F010000 		.4byte	.LASF160
 2636 0aba 0D       		.byte	0xd
 2637 0abb A402     		.2byte	0x2a4
 2638 0abd 8B0A0000 		.4byte	0xa8b
 2639 0ac1 15       		.uleb128 0x15
 2640 0ac2 7A070000 		.4byte	0x77a
 2641 0ac6 CC0A0000 		.4byte	0xacc
 2642 0aca 27       		.uleb128 0x27
 2643 0acb 00       		.byte	0
 2644 0acc 05       		.uleb128 0x5
 2645 0acd C10A0000 		.4byte	0xac1
 2646 0ad1 08       		.uleb128 0x8
 2647 0ad2 9E020000 		.4byte	.LASF161
 2648 0ad6 0E       		.byte	0xe
 2649 0ad7 14       		.byte	0x14
 2650 0ad8 CC0A0000 		.4byte	0xacc
 2651 0adc 08       		.uleb128 0x8
 2652 0add 9D060000 		.4byte	.LASF162
 2653 0ae1 0E       		.byte	0xe
 2654 0ae2 15       		.byte	0x15
 2655 0ae3 89000000 		.4byte	0x89
 2656 0ae7 15       		.uleb128 0x15
 2657 0ae8 A7000000 		.4byte	0xa7
 2658 0aec F70A0000 		.4byte	0xaf7
 2659 0af0 16       		.uleb128 0x16
 2660 0af1 D7000000 		.4byte	0xd7
 2661 0af5 0F       		.byte	0xf
 2662 0af6 00       		.byte	0
 2663 0af7 05       		.uleb128 0x5
 2664 0af8 E70A0000 		.4byte	0xae7
 2665 0afc 06       		.uleb128 0x6
 2666 0afd F70A0000 		.4byte	0xaf7
 2667 0b01 28       		.uleb128 0x28
 2668 0b02 84070000 		.4byte	.LASF163
 2669 0b06 01       		.byte	0x1
 2670 0b07 C2       		.byte	0xc2
 2671 0b08 FC0A0000 		.4byte	0xafc
 2672 0b0c 05       		.uleb128 0x5
 2673 0b0d 03       		.byte	0x3
 2674 0b0e 00000000 		.4byte	APBAHBPrescTable
 2675 0b12 15       		.uleb128 0x15
 2676 0b13 A7000000 		.4byte	0xa7
 2677 0b17 220B0000 		.4byte	0xb22
 2678 0b1b 16       		.uleb128 0x16
ARM GAS  /tmp/ccZsv2Jc.s 			page 74


 2679 0b1c D7000000 		.4byte	0xd7
 2680 0b20 03       		.byte	0x3
 2681 0b21 00       		.byte	0
 2682 0b22 05       		.uleb128 0x5
 2683 0b23 120B0000 		.4byte	0xb12
 2684 0b27 06       		.uleb128 0x6
 2685 0b28 220B0000 		.4byte	0xb22
 2686 0b2c 28       		.uleb128 0x28
 2687 0b2d B2040000 		.4byte	.LASF164
 2688 0b31 01       		.byte	0x1
 2689 0b32 C3       		.byte	0xc3
 2690 0b33 270B0000 		.4byte	0xb27
 2691 0b37 05       		.uleb128 0x5
 2692 0b38 03       		.byte	0x3
 2693 0b39 10000000 		.4byte	ADCPrescTable
 2694 0b3d 29       		.uleb128 0x29
 2695 0b3e F4000000 		.4byte	.LASF171
 2696 0b42 01       		.byte	0x1
 2697 0b43 A905     		.2byte	0x5a9
 2698 0b45 88030000 		.4byte	.LFB95
 2699 0b49 0C000000 		.4byte	.LFE95-.LFB95
 2700 0b4d 01       		.uleb128 0x1
 2701 0b4e 9C       		.byte	0x9c
 2702 0b4f 620B0000 		.4byte	0xb62
 2703 0b53 2A       		.uleb128 0x2a
 2704 0b54 AA010000 		.4byte	.LASF165
 2705 0b58 01       		.byte	0x1
 2706 0b59 A905     		.2byte	0x5a9
 2707 0b5b 97000000 		.4byte	0x97
 2708 0b5f 01       		.uleb128 0x1
 2709 0b60 50       		.byte	0x50
 2710 0b61 00       		.byte	0
 2711 0b62 2B       		.uleb128 0x2b
 2712 0b63 23080000 		.4byte	.LASF167
 2713 0b67 01       		.byte	0x1
 2714 0b68 7B05     		.2byte	0x57b
 2715 0b6a 1B010000 		.4byte	0x11b
 2716 0b6e 74030000 		.4byte	.LFB94
 2717 0b72 14000000 		.4byte	.LFE94-.LFB94
 2718 0b76 01       		.uleb128 0x1
 2719 0b77 9C       		.byte	0x9c
 2720 0b78 9D0B0000 		.4byte	0xb9d
 2721 0b7c 2C       		.uleb128 0x2c
 2722 0b7d AA010000 		.4byte	.LASF165
 2723 0b81 01       		.byte	0x1
 2724 0b82 7B05     		.2byte	0x57b
 2725 0b84 97000000 		.4byte	0x97
 2726 0b88 00000000 		.4byte	.LLST31
 2727 0b8c 2D       		.uleb128 0x2d
 2728 0b8d 9B030000 		.4byte	.LASF166
 2729 0b91 01       		.byte	0x1
 2730 0b92 7D05     		.2byte	0x57d
 2731 0b94 1B010000 		.4byte	0x11b
 2732 0b98 21000000 		.4byte	.LLST32
 2733 0b9c 00       		.byte	0
 2734 0b9d 2E       		.uleb128 0x2e
 2735 0b9e 2F0A0000 		.4byte	.LASF222
ARM GAS  /tmp/ccZsv2Jc.s 			page 75


 2736 0ba2 01       		.byte	0x1
 2737 0ba3 5C05     		.2byte	0x55c
 2738 0ba5 62030000 		.4byte	.LFB93
 2739 0ba9 12000000 		.4byte	.LFE93-.LFB93
 2740 0bad 01       		.uleb128 0x1
 2741 0bae 9C       		.byte	0x9c
 2742 0baf 2B       		.uleb128 0x2b
 2743 0bb0 50080000 		.4byte	.LASF168
 2744 0bb4 01       		.byte	0x1
 2745 0bb5 2F05     		.2byte	0x52f
 2746 0bb7 0F010000 		.4byte	0x10f
 2747 0bbb 08030000 		.4byte	.LFB92
 2748 0bbf 28000000 		.4byte	.LFE92-.LFB92
 2749 0bc3 01       		.uleb128 0x1
 2750 0bc4 9C       		.byte	0x9c
 2751 0bc5 0A0C0000 		.4byte	0xc0a
 2752 0bc9 2C       		.uleb128 0x2c
 2753 0bca B9020000 		.4byte	.LASF169
 2754 0bce 01       		.byte	0x1
 2755 0bcf 2F05     		.2byte	0x52f
 2756 0bd1 97000000 		.4byte	0x97
 2757 0bd5 60000000 		.4byte	.LLST25
 2758 0bd9 2F       		.uleb128 0x2f
 2759 0bda 746D7000 		.ascii	"tmp\000"
 2760 0bde 01       		.byte	0x1
 2761 0bdf 3105     		.2byte	0x531
 2762 0be1 C7000000 		.4byte	0xc7
 2763 0be5 8C000000 		.4byte	.LLST26
 2764 0be9 2D       		.uleb128 0x2d
 2765 0bea 49000000 		.4byte	.LASF170
 2766 0bee 01       		.byte	0x1
 2767 0bef 3205     		.2byte	0x532
 2768 0bf1 C7000000 		.4byte	0xc7
 2769 0bf5 F9000000 		.4byte	.LLST27
 2770 0bf9 2D       		.uleb128 0x2d
 2771 0bfa 9B030000 		.4byte	.LASF166
 2772 0bfe 01       		.byte	0x1
 2773 0bff 3305     		.2byte	0x533
 2774 0c01 0F010000 		.4byte	0x10f
 2775 0c05 2F010000 		.4byte	.LLST28
 2776 0c09 00       		.byte	0
 2777 0c0a 29       		.uleb128 0x29
 2778 0c0b AF000000 		.4byte	.LASF172
 2779 0c0f 01       		.byte	0x1
 2780 0c10 0305     		.2byte	0x503
 2781 0c12 FC020000 		.4byte	.LFB91
 2782 0c16 0C000000 		.4byte	.LFE91-.LFB91
 2783 0c1a 01       		.uleb128 0x1
 2784 0c1b 9C       		.byte	0x9c
 2785 0c1c 2F0C0000 		.4byte	0xc2f
 2786 0c20 2A       		.uleb128 0x2a
 2787 0c21 72070000 		.4byte	.LASF173
 2788 0c25 01       		.byte	0x1
 2789 0c26 0305     		.2byte	0x503
 2790 0c28 97000000 		.4byte	0x97
 2791 0c2c 01       		.uleb128 0x1
 2792 0c2d 50       		.byte	0x50
ARM GAS  /tmp/ccZsv2Jc.s 			page 76


 2793 0c2e 00       		.byte	0
 2794 0c2f 29       		.uleb128 0x29
 2795 0c30 FF040000 		.4byte	.LASF174
 2796 0c34 01       		.byte	0x1
 2797 0c35 E304     		.2byte	0x4e3
 2798 0c37 F0020000 		.4byte	.LFB90
 2799 0c3b 0C000000 		.4byte	.LFE90-.LFB90
 2800 0c3f 01       		.uleb128 0x1
 2801 0c40 9C       		.byte	0x9c
 2802 0c41 540C0000 		.4byte	0xc54
 2803 0c45 2A       		.uleb128 0x2a
 2804 0c46 D2020000 		.4byte	.LASF175
 2805 0c4a 01       		.byte	0x1
 2806 0c4b E304     		.2byte	0x4e3
 2807 0c4d 41010000 		.4byte	0x141
 2808 0c51 01       		.uleb128 0x1
 2809 0c52 50       		.byte	0x50
 2810 0c53 00       		.byte	0
 2811 0c54 29       		.uleb128 0x29
 2812 0c55 DB020000 		.4byte	.LASF176
 2813 0c59 01       		.byte	0x1
 2814 0c5a D604     		.2byte	0x4d6
 2815 0c5c E4020000 		.4byte	.LFB89
 2816 0c60 0C000000 		.4byte	.LFE89-.LFB89
 2817 0c64 01       		.uleb128 0x1
 2818 0c65 9C       		.byte	0x9c
 2819 0c66 790C0000 		.4byte	0xc79
 2820 0c6a 2A       		.uleb128 0x2a
 2821 0c6b D2020000 		.4byte	.LASF175
 2822 0c6f 01       		.byte	0x1
 2823 0c70 D604     		.2byte	0x4d6
 2824 0c72 41010000 		.4byte	0x141
 2825 0c76 01       		.uleb128 0x1
 2826 0c77 50       		.byte	0x50
 2827 0c78 00       		.byte	0
 2828 0c79 29       		.uleb128 0x29
 2829 0c7a BD000000 		.4byte	.LASF177
 2830 0c7e 01       		.byte	0x1
 2831 0c7f C104     		.2byte	0x4c1
 2832 0c81 C8020000 		.4byte	.LFB88
 2833 0c85 1C000000 		.4byte	.LFE88-.LFB88
 2834 0c89 01       		.uleb128 0x1
 2835 0c8a 9C       		.byte	0x9c
 2836 0c8b AE0C0000 		.4byte	0xcae
 2837 0c8f 2C       		.uleb128 0x2c
 2838 0c90 B7010000 		.4byte	.LASF178
 2839 0c94 01       		.byte	0x1
 2840 0c95 C104     		.2byte	0x4c1
 2841 0c97 C7000000 		.4byte	0xc7
 2842 0c9b 7E010000 		.4byte	.LLST24
 2843 0c9f 2A       		.uleb128 0x2a
 2844 0ca0 D2020000 		.4byte	.LASF175
 2845 0ca4 01       		.byte	0x1
 2846 0ca5 C104     		.2byte	0x4c1
 2847 0ca7 41010000 		.4byte	0x141
 2848 0cab 01       		.uleb128 0x1
 2849 0cac 51       		.byte	0x51
ARM GAS  /tmp/ccZsv2Jc.s 			page 77


 2850 0cad 00       		.byte	0
 2851 0cae 29       		.uleb128 0x29
 2852 0caf 8E050000 		.4byte	.LASF179
 2853 0cb3 01       		.byte	0x1
 2854 0cb4 A204     		.2byte	0x4a2
 2855 0cb6 AC020000 		.4byte	.LFB87
 2856 0cba 1C000000 		.4byte	.LFE87-.LFB87
 2857 0cbe 01       		.uleb128 0x1
 2858 0cbf 9C       		.byte	0x9c
 2859 0cc0 E30C0000 		.4byte	0xce3
 2860 0cc4 2C       		.uleb128 0x2c
 2861 0cc5 8A080000 		.4byte	.LASF180
 2862 0cc9 01       		.byte	0x1
 2863 0cca A204     		.2byte	0x4a2
 2864 0ccc C7000000 		.4byte	0xc7
 2865 0cd0 B8010000 		.4byte	.LLST23
 2866 0cd4 2A       		.uleb128 0x2a
 2867 0cd5 D2020000 		.4byte	.LASF175
 2868 0cd9 01       		.byte	0x1
 2869 0cda A204     		.2byte	0x4a2
 2870 0cdc 41010000 		.4byte	0x141
 2871 0ce0 01       		.uleb128 0x1
 2872 0ce1 51       		.byte	0x51
 2873 0ce2 00       		.byte	0
 2874 0ce3 29       		.uleb128 0x29
 2875 0ce4 32050000 		.4byte	.LASF181
 2876 0ce8 01       		.byte	0x1
 2877 0ce9 6704     		.2byte	0x467
 2878 0ceb 90020000 		.4byte	.LFB86
 2879 0cef 1C000000 		.4byte	.LFE86-.LFB86
 2880 0cf3 01       		.uleb128 0x1
 2881 0cf4 9C       		.byte	0x9c
 2882 0cf5 180D0000 		.4byte	0xd18
 2883 0cf9 2C       		.uleb128 0x2c
 2884 0cfa B7010000 		.4byte	.LASF178
 2885 0cfe 01       		.byte	0x1
 2886 0cff 6704     		.2byte	0x467
 2887 0d01 C7000000 		.4byte	0xc7
 2888 0d05 F2010000 		.4byte	.LLST22
 2889 0d09 2A       		.uleb128 0x2a
 2890 0d0a D2020000 		.4byte	.LASF175
 2891 0d0e 01       		.byte	0x1
 2892 0d0f 6704     		.2byte	0x467
 2893 0d11 41010000 		.4byte	0x141
 2894 0d15 01       		.uleb128 0x1
 2895 0d16 51       		.byte	0x51
 2896 0d17 00       		.byte	0
 2897 0d18 29       		.uleb128 0x29
 2898 0d19 78000000 		.4byte	.LASF182
 2899 0d1d 01       		.byte	0x1
 2900 0d1e 4804     		.2byte	0x448
 2901 0d20 74020000 		.4byte	.LFB85
 2902 0d24 1C000000 		.4byte	.LFE85-.LFB85
 2903 0d28 01       		.uleb128 0x1
 2904 0d29 9C       		.byte	0x9c
 2905 0d2a 4D0D0000 		.4byte	0xd4d
 2906 0d2e 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccZsv2Jc.s 			page 78


 2907 0d2f 8A080000 		.4byte	.LASF180
 2908 0d33 01       		.byte	0x1
 2909 0d34 4804     		.2byte	0x448
 2910 0d36 C7000000 		.4byte	0xc7
 2911 0d3a 2C020000 		.4byte	.LLST21
 2912 0d3e 2A       		.uleb128 0x2a
 2913 0d3f D2020000 		.4byte	.LASF175
 2914 0d43 01       		.byte	0x1
 2915 0d44 4804     		.2byte	0x448
 2916 0d46 41010000 		.4byte	0x141
 2917 0d4a 01       		.uleb128 0x1
 2918 0d4b 51       		.byte	0x51
 2919 0d4c 00       		.byte	0
 2920 0d4d 29       		.uleb128 0x29
 2921 0d4e 190A0000 		.4byte	.LASF183
 2922 0d52 01       		.byte	0x1
 2923 0d53 2904     		.2byte	0x429
 2924 0d55 58020000 		.4byte	.LFB84
 2925 0d59 1C000000 		.4byte	.LFE84-.LFB84
 2926 0d5d 01       		.uleb128 0x1
 2927 0d5e 9C       		.byte	0x9c
 2928 0d5f 820D0000 		.4byte	0xd82
 2929 0d63 2C       		.uleb128 0x2c
 2930 0d64 1A050000 		.4byte	.LASF184
 2931 0d68 01       		.byte	0x1
 2932 0d69 2904     		.2byte	0x429
 2933 0d6b C7000000 		.4byte	0xc7
 2934 0d6f 66020000 		.4byte	.LLST20
 2935 0d73 2A       		.uleb128 0x2a
 2936 0d74 D2020000 		.4byte	.LASF175
 2937 0d78 01       		.byte	0x1
 2938 0d79 2904     		.2byte	0x429
 2939 0d7b 41010000 		.4byte	0x141
 2940 0d7f 01       		.uleb128 0x1
 2941 0d80 51       		.byte	0x51
 2942 0d81 00       		.byte	0
 2943 0d82 29       		.uleb128 0x29
 2944 0d83 B9070000 		.4byte	.LASF185
 2945 0d87 01       		.byte	0x1
 2946 0d88 8D03     		.2byte	0x38d
 2947 0d8a A8010000 		.4byte	.LFB83
 2948 0d8e B0000000 		.4byte	.LFE83-.LFB83
 2949 0d92 01       		.uleb128 0x1
 2950 0d93 9C       		.byte	0x9c
 2951 0d94 E70D0000 		.4byte	0xde7
 2952 0d98 2A       		.uleb128 0x2a
 2953 0d99 6E010000 		.4byte	.LASF186
 2954 0d9d 01       		.byte	0x1
 2955 0d9e 8D03     		.2byte	0x38d
 2956 0da0 E70D0000 		.4byte	0xde7
 2957 0da4 01       		.uleb128 0x1
 2958 0da5 50       		.byte	0x50
 2959 0da6 2F       		.uleb128 0x2f
 2960 0da7 746D7000 		.ascii	"tmp\000"
 2961 0dab 01       		.byte	0x1
 2962 0dac 8F03     		.2byte	0x38f
 2963 0dae C7000000 		.4byte	0xc7
ARM GAS  /tmp/ccZsv2Jc.s 			page 79


 2964 0db2 A0020000 		.4byte	.LLST16
 2965 0db6 2D       		.uleb128 0x2d
 2966 0db7 E8010000 		.4byte	.LASF187
 2967 0dbb 01       		.byte	0x1
 2968 0dbc 8F03     		.2byte	0x38f
 2969 0dbe C7000000 		.4byte	0xc7
 2970 0dc2 5E030000 		.4byte	.LLST17
 2971 0dc6 2D       		.uleb128 0x2d
 2972 0dc7 550A0000 		.4byte	.LASF188
 2973 0dcb 01       		.byte	0x1
 2974 0dcc 8F03     		.2byte	0x38f
 2975 0dce C7000000 		.4byte	0xc7
 2976 0dd2 A5030000 		.4byte	.LLST18
 2977 0dd6 2D       		.uleb128 0x2d
 2978 0dd7 2C040000 		.4byte	.LASF189
 2979 0ddb 01       		.byte	0x1
 2980 0ddc 8F03     		.2byte	0x38f
 2981 0dde C7000000 		.4byte	0xc7
 2982 0de2 E7030000 		.4byte	.LLST19
 2983 0de6 00       		.byte	0
 2984 0de7 19       		.uleb128 0x19
 2985 0de8 04       		.byte	0x4
 2986 0de9 4F020000 		.4byte	0x24f
 2987 0ded 29       		.uleb128 0x29
 2988 0dee E2040000 		.4byte	.LASF190
 2989 0df2 01       		.byte	0x1
 2990 0df3 7E03     		.2byte	0x37e
 2991 0df5 9C010000 		.4byte	.LFB82
 2992 0df9 0C000000 		.4byte	.LFE82-.LFB82
 2993 0dfd 01       		.uleb128 0x1
 2994 0dfe 9C       		.byte	0x9c
 2995 0dff 120E0000 		.4byte	0xe12
 2996 0e03 2A       		.uleb128 0x2a
 2997 0e04 D2020000 		.4byte	.LASF175
 2998 0e08 01       		.byte	0x1
 2999 0e09 7E03     		.2byte	0x37e
 3000 0e0b 41010000 		.4byte	0x141
 3001 0e0f 01       		.uleb128 0x1
 3002 0e10 50       		.byte	0x50
 3003 0e11 00       		.byte	0
 3004 0e12 29       		.uleb128 0x29
 3005 0e13 E5090000 		.4byte	.LASF191
 3006 0e17 01       		.byte	0x1
 3007 0e18 7003     		.2byte	0x370
 3008 0e1a 8C010000 		.4byte	.LFB81
 3009 0e1e 10000000 		.4byte	.LFE81-.LFB81
 3010 0e22 01       		.uleb128 0x1
 3011 0e23 9C       		.byte	0x9c
 3012 0e24 390E0000 		.4byte	0xe39
 3013 0e28 2C       		.uleb128 0x2c
 3014 0e29 32040000 		.4byte	.LASF192
 3015 0e2d 01       		.byte	0x1
 3016 0e2e 7003     		.2byte	0x370
 3017 0e30 C7000000 		.4byte	0xc7
 3018 0e34 47040000 		.4byte	.LLST15
 3019 0e38 00       		.byte	0
 3020 0e39 29       		.uleb128 0x29
ARM GAS  /tmp/ccZsv2Jc.s 			page 80


 3021 0e3a E9050000 		.4byte	.LASF193
 3022 0e3e 01       		.byte	0x1
 3023 0e3f 5F03     		.2byte	0x35f
 3024 0e41 80010000 		.4byte	.LFB80
 3025 0e45 0C000000 		.4byte	.LFE80-.LFB80
 3026 0e49 01       		.uleb128 0x1
 3027 0e4a 9C       		.byte	0x9c
 3028 0e4b 5E0E0000 		.4byte	0xe5e
 3029 0e4f 2A       		.uleb128 0x2a
 3030 0e50 D2020000 		.4byte	.LASF175
 3031 0e54 01       		.byte	0x1
 3032 0e55 5F03     		.2byte	0x35f
 3033 0e57 41010000 		.4byte	0x141
 3034 0e5b 01       		.uleb128 0x1
 3035 0e5c 50       		.byte	0x50
 3036 0e5d 00       		.byte	0
 3037 0e5e 29       		.uleb128 0x29
 3038 0e5f AB020000 		.4byte	.LASF194
 3039 0e63 01       		.byte	0x1
 3040 0e64 3E03     		.2byte	0x33e
 3041 0e66 58010000 		.4byte	.LFB79
 3042 0e6a 28000000 		.4byte	.LFE79-.LFB79
 3043 0e6e 01       		.uleb128 0x1
 3044 0e6f 9C       		.byte	0x9c
 3045 0e70 830E0000 		.4byte	0xe83
 3046 0e74 2A       		.uleb128 0x2a
 3047 0e75 1D000000 		.4byte	.LASF195
 3048 0e79 01       		.byte	0x1
 3049 0e7a 3E03     		.2byte	0x33e
 3050 0e7c 97000000 		.4byte	0x97
 3051 0e80 01       		.uleb128 0x1
 3052 0e81 50       		.byte	0x50
 3053 0e82 00       		.byte	0
 3054 0e83 29       		.uleb128 0x29
 3055 0e84 A5050000 		.4byte	.LASF196
 3056 0e88 01       		.byte	0x1
 3057 0e89 FF02     		.2byte	0x2ff
 3058 0e8b 44010000 		.4byte	.LFB78
 3059 0e8f 14000000 		.4byte	.LFE78-.LFB78
 3060 0e93 01       		.uleb128 0x1
 3061 0e94 9C       		.byte	0x9c
 3062 0e95 BA0E0000 		.4byte	0xeba
 3063 0e99 2C       		.uleb128 0x2c
 3064 0e9a 50060000 		.4byte	.LASF197
 3065 0e9e 01       		.byte	0x1
 3066 0e9f FF02     		.2byte	0x2ff
 3067 0ea1 C7000000 		.4byte	0xc7
 3068 0ea5 68040000 		.4byte	.LLST13
 3069 0ea9 2D       		.uleb128 0x2d
 3070 0eaa F0010000 		.4byte	.LASF198
 3071 0eae 01       		.byte	0x1
 3072 0eaf 0103     		.2byte	0x301
 3073 0eb1 C7000000 		.4byte	0xc7
 3074 0eb5 89040000 		.4byte	.LLST14
 3075 0eb9 00       		.byte	0
 3076 0eba 29       		.uleb128 0x29
 3077 0ebb 3D0A0000 		.4byte	.LASF199
ARM GAS  /tmp/ccZsv2Jc.s 			page 81


 3078 0ebf 01       		.byte	0x1
 3079 0ec0 D902     		.2byte	0x2d9
 3080 0ec2 38010000 		.4byte	.LFB77
 3081 0ec6 0C000000 		.4byte	.LFE77-.LFB77
 3082 0eca 01       		.uleb128 0x1
 3083 0ecb 9C       		.byte	0x9c
 3084 0ecc DF0E0000 		.4byte	0xedf
 3085 0ed0 2A       		.uleb128 0x2a
 3086 0ed1 DE060000 		.4byte	.LASF200
 3087 0ed5 01       		.byte	0x1
 3088 0ed6 D902     		.2byte	0x2d9
 3089 0ed8 C7000000 		.4byte	0xc7
 3090 0edc 01       		.uleb128 0x1
 3091 0edd 50       		.byte	0x50
 3092 0ede 00       		.byte	0
 3093 0edf 29       		.uleb128 0x29
 3094 0ee0 0F090000 		.4byte	.LASF201
 3095 0ee4 01       		.byte	0x1
 3096 0ee5 BD02     		.2byte	0x2bd
 3097 0ee7 1C010000 		.4byte	.LFB76
 3098 0eeb 1C000000 		.4byte	.LFE76-.LFB76
 3099 0eef 01       		.uleb128 0x1
 3100 0ef0 9C       		.byte	0x9c
 3101 0ef1 140F0000 		.4byte	0xf14
 3102 0ef5 2C       		.uleb128 0x2c
 3103 0ef6 AA010000 		.4byte	.LASF165
 3104 0efa 01       		.byte	0x1
 3105 0efb BD02     		.2byte	0x2bd
 3106 0efd 97000000 		.4byte	0x97
 3107 0f01 B3040000 		.4byte	.LLST12
 3108 0f05 2A       		.uleb128 0x2a
 3109 0f06 D2020000 		.4byte	.LASF175
 3110 0f0a 01       		.byte	0x1
 3111 0f0b BD02     		.2byte	0x2bd
 3112 0f0d 41010000 		.4byte	0x141
 3113 0f11 01       		.uleb128 0x1
 3114 0f12 51       		.byte	0x51
 3115 0f13 00       		.byte	0
 3116 0f14 29       		.uleb128 0x29
 3117 0f15 27070000 		.4byte	.LASF202
 3118 0f19 01       		.byte	0x1
 3119 0f1a 9502     		.2byte	0x295
 3120 0f1c 08010000 		.4byte	.LFB75
 3121 0f20 14000000 		.4byte	.LFE75-.LFB75
 3122 0f24 01       		.uleb128 0x1
 3123 0f25 9C       		.byte	0x9c
 3124 0f26 4B0F0000 		.4byte	0xf4b
 3125 0f2a 2C       		.uleb128 0x2c
 3126 0f2b 0C000000 		.4byte	.LASF203
 3127 0f2f 01       		.byte	0x1
 3128 0f30 9502     		.2byte	0x295
 3129 0f32 C7000000 		.4byte	0xc7
 3130 0f36 ED040000 		.4byte	.LLST10
 3131 0f3a 2D       		.uleb128 0x2d
 3132 0f3b F0010000 		.4byte	.LASF198
 3133 0f3f 01       		.byte	0x1
 3134 0f40 9702     		.2byte	0x297
ARM GAS  /tmp/ccZsv2Jc.s 			page 82


 3135 0f42 C7000000 		.4byte	0xc7
 3136 0f46 0E050000 		.4byte	.LLST11
 3137 0f4a 00       		.byte	0
 3138 0f4b 29       		.uleb128 0x29
 3139 0f4c 3F020000 		.4byte	.LASF204
 3140 0f50 01       		.byte	0x1
 3141 0f51 7B02     		.2byte	0x27b
 3142 0f53 F4000000 		.4byte	.LFB74
 3143 0f57 14000000 		.4byte	.LFE74-.LFB74
 3144 0f5b 01       		.uleb128 0x1
 3145 0f5c 9C       		.byte	0x9c
 3146 0f5d 820F0000 		.4byte	0xf82
 3147 0f61 2C       		.uleb128 0x2c
 3148 0f62 0C000000 		.4byte	.LASF203
 3149 0f66 01       		.byte	0x1
 3150 0f67 7B02     		.2byte	0x27b
 3151 0f69 C7000000 		.4byte	0xc7
 3152 0f6d 38050000 		.4byte	.LLST8
 3153 0f71 2D       		.uleb128 0x2d
 3154 0f72 F0010000 		.4byte	.LASF198
 3155 0f76 01       		.byte	0x1
 3156 0f77 7D02     		.2byte	0x27d
 3157 0f79 C7000000 		.4byte	0xc7
 3158 0f7d 59050000 		.4byte	.LLST9
 3159 0f81 00       		.byte	0
 3160 0f82 29       		.uleb128 0x29
 3161 0f83 67020000 		.4byte	.LASF205
 3162 0f87 01       		.byte	0x1
 3163 0f88 6102     		.2byte	0x261
 3164 0f8a E0000000 		.4byte	.LFB73
 3165 0f8e 14000000 		.4byte	.LFE73-.LFB73
 3166 0f92 01       		.uleb128 0x1
 3167 0f93 9C       		.byte	0x9c
 3168 0f94 B90F0000 		.4byte	0xfb9
 3169 0f98 2C       		.uleb128 0x2c
 3170 0f99 FE030000 		.4byte	.LASF206
 3171 0f9d 01       		.byte	0x1
 3172 0f9e 6102     		.2byte	0x261
 3173 0fa0 C7000000 		.4byte	0xc7
 3174 0fa4 83050000 		.4byte	.LLST6
 3175 0fa8 2D       		.uleb128 0x2d
 3176 0fa9 F0010000 		.4byte	.LASF198
 3177 0fad 01       		.byte	0x1
 3178 0fae 6302     		.2byte	0x263
 3179 0fb0 C7000000 		.4byte	0xc7
 3180 0fb4 A4050000 		.4byte	.LLST7
 3181 0fb8 00       		.byte	0
 3182 0fb9 30       		.uleb128 0x30
 3183 0fba 55030000 		.4byte	.LASF228
 3184 0fbe 01       		.byte	0x1
 3185 0fbf 4C02     		.2byte	0x24c
 3186 0fc1 97000000 		.4byte	0x97
 3187 0fc5 D0000000 		.4byte	.LFB72
 3188 0fc9 10000000 		.4byte	.LFE72-.LFB72
 3189 0fcd 01       		.uleb128 0x1
 3190 0fce 9C       		.byte	0x9c
 3191 0fcf 29       		.uleb128 0x29
ARM GAS  /tmp/ccZsv2Jc.s 			page 83


 3192 0fd0 84020000 		.4byte	.LASF207
 3193 0fd4 01       		.byte	0x1
 3194 0fd5 3502     		.2byte	0x235
 3195 0fd7 BC000000 		.4byte	.LFB71
 3196 0fdb 14000000 		.4byte	.LFE71-.LFB71
 3197 0fdf 01       		.uleb128 0x1
 3198 0fe0 9C       		.byte	0x9c
 3199 0fe1 06100000 		.4byte	0x1006
 3200 0fe5 2C       		.uleb128 0x2c
 3201 0fe6 37070000 		.4byte	.LASF208
 3202 0fea 01       		.byte	0x1
 3203 0feb 3502     		.2byte	0x235
 3204 0fed C7000000 		.4byte	0xc7
 3205 0ff1 CE050000 		.4byte	.LLST4
 3206 0ff5 2D       		.uleb128 0x2d
 3207 0ff6 F0010000 		.4byte	.LASF198
 3208 0ffa 01       		.byte	0x1
 3209 0ffb 3702     		.2byte	0x237
 3210 0ffd C7000000 		.4byte	0xc7
 3211 1001 EF050000 		.4byte	.LLST5
 3212 1005 00       		.byte	0
 3213 1006 29       		.uleb128 0x29
 3214 1007 03070000 		.4byte	.LASF209
 3215 100b 01       		.byte	0x1
 3216 100c 9201     		.2byte	0x192
 3217 100e B0000000 		.4byte	.LFB70
 3218 1012 0C000000 		.4byte	.LFE70-.LFB70
 3219 1016 01       		.uleb128 0x1
 3220 1017 9C       		.byte	0x9c
 3221 1018 2B100000 		.4byte	0x102b
 3222 101c 2A       		.uleb128 0x2a
 3223 101d D2020000 		.4byte	.LASF175
 3224 1021 01       		.byte	0x1
 3225 1022 9201     		.2byte	0x192
 3226 1024 41010000 		.4byte	0x141
 3227 1028 01       		.uleb128 0x1
 3228 1029 50       		.byte	0x50
 3229 102a 00       		.byte	0
 3230 102b 29       		.uleb128 0x29
 3231 102c 47090000 		.4byte	.LASF210
 3232 1030 01       		.byte	0x1
 3233 1031 7B01     		.2byte	0x17b
 3234 1033 9C000000 		.4byte	.LFB69
 3235 1037 14000000 		.4byte	.LFE69-.LFB69
 3236 103b 01       		.uleb128 0x1
 3237 103c 9C       		.byte	0x9c
 3238 103d 70100000 		.4byte	0x1070
 3239 1041 2A       		.uleb128 0x2a
 3240 1042 47030000 		.4byte	.LASF211
 3241 1046 01       		.byte	0x1
 3242 1047 7B01     		.2byte	0x17b
 3243 1049 C7000000 		.4byte	0xc7
 3244 104d 01       		.uleb128 0x1
 3245 104e 50       		.byte	0x50
 3246 104f 2C       		.uleb128 0x2c
 3247 1050 75090000 		.4byte	.LASF212
 3248 1054 01       		.byte	0x1
ARM GAS  /tmp/ccZsv2Jc.s 			page 84


 3249 1055 7B01     		.2byte	0x17b
 3250 1057 C7000000 		.4byte	0xc7
 3251 105b 19060000 		.4byte	.LLST2
 3252 105f 2D       		.uleb128 0x2d
 3253 1060 F0010000 		.4byte	.LASF198
 3254 1064 01       		.byte	0x1
 3255 1065 7D01     		.2byte	0x17d
 3256 1067 C7000000 		.4byte	0xc7
 3257 106b 3A060000 		.4byte	.LLST3
 3258 106f 00       		.byte	0
 3259 1070 29       		.uleb128 0x29
 3260 1071 75080000 		.4byte	.LASF213
 3261 1075 01       		.byte	0x1
 3262 1076 6301     		.2byte	0x163
 3263 1078 90000000 		.4byte	.LFB68
 3264 107c 0C000000 		.4byte	.LFE68-.LFB68
 3265 1080 01       		.uleb128 0x1
 3266 1081 9C       		.byte	0x9c
 3267 1082 95100000 		.4byte	0x1095
 3268 1086 2A       		.uleb128 0x2a
 3269 1087 D2020000 		.4byte	.LASF175
 3270 108b 01       		.byte	0x1
 3271 108c 6301     		.2byte	0x163
 3272 108e 41010000 		.4byte	0x141
 3273 1092 01       		.uleb128 0x1
 3274 1093 50       		.byte	0x50
 3275 1094 00       		.byte	0
 3276 1095 29       		.uleb128 0x29
 3277 1096 95070000 		.4byte	.LASF214
 3278 109a 01       		.byte	0x1
 3279 109b 4F01     		.2byte	0x14f
 3280 109d 7C000000 		.4byte	.LFB67
 3281 10a1 14000000 		.4byte	.LFE67-.LFB67
 3282 10a5 01       		.uleb128 0x1
 3283 10a6 9C       		.byte	0x9c
 3284 10a7 CC100000 		.4byte	0x10cc
 3285 10ab 2C       		.uleb128 0x2c
 3286 10ac EF060000 		.4byte	.LASF215
 3287 10b0 01       		.byte	0x1
 3288 10b1 4F01     		.2byte	0x14f
 3289 10b3 97000000 		.4byte	0x97
 3290 10b7 77060000 		.4byte	.LLST0
 3291 10bb 2D       		.uleb128 0x2d
 3292 10bc F0010000 		.4byte	.LASF198
 3293 10c0 01       		.byte	0x1
 3294 10c1 5101     		.2byte	0x151
 3295 10c3 C7000000 		.4byte	0xc7
 3296 10c7 98060000 		.4byte	.LLST1
 3297 10cb 00       		.byte	0
 3298 10cc 2B       		.uleb128 0x2b
 3299 10cd 85030000 		.4byte	.LASF216
 3300 10d1 01       		.byte	0x1
 3301 10d2 3101     		.2byte	0x131
 3302 10d4 67010000 		.4byte	0x167
 3303 10d8 30030000 		.4byte	.LFB66
 3304 10dc 32000000 		.4byte	.LFE66-.LFB66
 3305 10e0 01       		.uleb128 0x1
ARM GAS  /tmp/ccZsv2Jc.s 			page 85


 3306 10e1 9C       		.byte	0x9c
 3307 10e2 3A110000 		.4byte	0x113a
 3308 10e6 31       		.uleb128 0x31
 3309 10e7 B0060000 		.4byte	.LASF217
 3310 10eb 01       		.byte	0x1
 3311 10ec 3301     		.2byte	0x133
 3312 10ee D2000000 		.4byte	0xd2
 3313 10f2 02       		.uleb128 0x2
 3314 10f3 91       		.byte	0x91
 3315 10f4 74       		.sleb128 -12
 3316 10f5 2D       		.uleb128 0x2d
 3317 10f6 FD080000 		.4byte	.LASF218
 3318 10fa 01       		.byte	0x1
 3319 10fb 3401     		.2byte	0x134
 3320 10fd 67010000 		.4byte	0x167
 3321 1101 C2060000 		.4byte	.LLST29
 3322 1105 2D       		.uleb128 0x2d
 3323 1106 80080000 		.4byte	.LASF219
 3324 110a 01       		.byte	0x1
 3325 110b 3501     		.2byte	0x135
 3326 110d 0F010000 		.4byte	0x10f
 3327 1111 E7060000 		.4byte	.LLST30
 3328 1115 32       		.uleb128 0x32
 3329 1116 40030000 		.4byte	.LVL112
 3330 111a AF0B0000 		.4byte	0xbaf
 3331 111e 29110000 		.4byte	0x1129
 3332 1122 33       		.uleb128 0x33
 3333 1123 01       		.uleb128 0x1
 3334 1124 50       		.byte	0x50
 3335 1125 02       		.uleb128 0x2
 3336 1126 74       		.byte	0x74
 3337 1127 00       		.sleb128 0
 3338 1128 00       		.byte	0
 3339 1129 34       		.uleb128 0x34
 3340 112a 58030000 		.4byte	.LVL114
 3341 112e AF0B0000 		.4byte	0xbaf
 3342 1132 33       		.uleb128 0x33
 3343 1133 01       		.uleb128 0x1
 3344 1134 50       		.byte	0x50
 3345 1135 02       		.uleb128 0x2
 3346 1136 74       		.byte	0x74
 3347 1137 00       		.sleb128 0
 3348 1138 00       		.byte	0
 3349 1139 00       		.byte	0
 3350 113a 29       		.uleb128 0x29
 3351 113b FA050000 		.4byte	.LASF220
 3352 113f 01       		.byte	0x1
 3353 1140 0F01     		.2byte	0x10f
 3354 1142 40000000 		.4byte	.LFB65
 3355 1146 3C000000 		.4byte	.LFE65-.LFB65
 3356 114a 01       		.uleb128 0x1
 3357 114b 9C       		.byte	0x9c
 3358 114c 5F110000 		.4byte	0x115f
 3359 1150 2A       		.uleb128 0x2a
 3360 1151 48070000 		.4byte	.LASF221
 3361 1155 01       		.byte	0x1
 3362 1156 0F01     		.2byte	0x10f
ARM GAS  /tmp/ccZsv2Jc.s 			page 86


 3363 1158 C7000000 		.4byte	0xc7
 3364 115c 01       		.uleb128 0x1
 3365 115d 50       		.byte	0x50
 3366 115e 00       		.byte	0
 3367 115f 35       		.uleb128 0x35
 3368 1160 FE070000 		.4byte	.LASF223
 3369 1164 01       		.byte	0x1
 3370 1165 DA       		.byte	0xda
 3371 1166 00000000 		.4byte	.LFB64
 3372 116a 40000000 		.4byte	.LFE64-.LFB64
 3373 116e 01       		.uleb128 0x1
 3374 116f 9C       		.byte	0x9c
 3375 1170 00       		.byte	0
 3376              		.section	.debug_abbrev,"",%progbits
 3377              	.Ldebug_abbrev0:
 3378 0000 01       		.uleb128 0x1
 3379 0001 11       		.uleb128 0x11
 3380 0002 01       		.byte	0x1
 3381 0003 25       		.uleb128 0x25
 3382 0004 0E       		.uleb128 0xe
 3383 0005 13       		.uleb128 0x13
 3384 0006 0B       		.uleb128 0xb
 3385 0007 03       		.uleb128 0x3
 3386 0008 0E       		.uleb128 0xe
 3387 0009 1B       		.uleb128 0x1b
 3388 000a 0E       		.uleb128 0xe
 3389 000b 11       		.uleb128 0x11
 3390 000c 01       		.uleb128 0x1
 3391 000d 12       		.uleb128 0x12
 3392 000e 06       		.uleb128 0x6
 3393 000f 10       		.uleb128 0x10
 3394 0010 17       		.uleb128 0x17
 3395 0011 00       		.byte	0
 3396 0012 00       		.byte	0
 3397 0013 02       		.uleb128 0x2
 3398 0014 24       		.uleb128 0x24
 3399 0015 00       		.byte	0
 3400 0016 0B       		.uleb128 0xb
 3401 0017 0B       		.uleb128 0xb
 3402 0018 3E       		.uleb128 0x3e
 3403 0019 0B       		.uleb128 0xb
 3404 001a 03       		.uleb128 0x3
 3405 001b 0E       		.uleb128 0xe
 3406 001c 00       		.byte	0
 3407 001d 00       		.byte	0
 3408 001e 03       		.uleb128 0x3
 3409 001f 16       		.uleb128 0x16
 3410 0020 00       		.byte	0
 3411 0021 03       		.uleb128 0x3
 3412 0022 0E       		.uleb128 0xe
 3413 0023 3A       		.uleb128 0x3a
 3414 0024 0B       		.uleb128 0xb
 3415 0025 3B       		.uleb128 0x3b
 3416 0026 0B       		.uleb128 0xb
 3417 0027 49       		.uleb128 0x49
 3418 0028 13       		.uleb128 0x13
 3419 0029 00       		.byte	0
ARM GAS  /tmp/ccZsv2Jc.s 			page 87


 3420 002a 00       		.byte	0
 3421 002b 04       		.uleb128 0x4
 3422 002c 24       		.uleb128 0x24
 3423 002d 00       		.byte	0
 3424 002e 0B       		.uleb128 0xb
 3425 002f 0B       		.uleb128 0xb
 3426 0030 3E       		.uleb128 0x3e
 3427 0031 0B       		.uleb128 0xb
 3428 0032 03       		.uleb128 0x3
 3429 0033 08       		.uleb128 0x8
 3430 0034 00       		.byte	0
 3431 0035 00       		.byte	0
 3432 0036 05       		.uleb128 0x5
 3433 0037 26       		.uleb128 0x26
 3434 0038 00       		.byte	0
 3435 0039 49       		.uleb128 0x49
 3436 003a 13       		.uleb128 0x13
 3437 003b 00       		.byte	0
 3438 003c 00       		.byte	0
 3439 003d 06       		.uleb128 0x6
 3440 003e 35       		.uleb128 0x35
 3441 003f 00       		.byte	0
 3442 0040 49       		.uleb128 0x49
 3443 0041 13       		.uleb128 0x13
 3444 0042 00       		.byte	0
 3445 0043 00       		.byte	0
 3446 0044 07       		.uleb128 0x7
 3447 0045 34       		.uleb128 0x34
 3448 0046 00       		.byte	0
 3449 0047 03       		.uleb128 0x3
 3450 0048 0E       		.uleb128 0xe
 3451 0049 3A       		.uleb128 0x3a
 3452 004a 0B       		.uleb128 0xb
 3453 004b 3B       		.uleb128 0x3b
 3454 004c 05       		.uleb128 0x5
 3455 004d 49       		.uleb128 0x49
 3456 004e 13       		.uleb128 0x13
 3457 004f 3F       		.uleb128 0x3f
 3458 0050 19       		.uleb128 0x19
 3459 0051 3C       		.uleb128 0x3c
 3460 0052 19       		.uleb128 0x19
 3461 0053 00       		.byte	0
 3462 0054 00       		.byte	0
 3463 0055 08       		.uleb128 0x8
 3464 0056 34       		.uleb128 0x34
 3465 0057 00       		.byte	0
 3466 0058 03       		.uleb128 0x3
 3467 0059 0E       		.uleb128 0xe
 3468 005a 3A       		.uleb128 0x3a
 3469 005b 0B       		.uleb128 0xb
 3470 005c 3B       		.uleb128 0x3b
 3471 005d 0B       		.uleb128 0xb
 3472 005e 49       		.uleb128 0x49
 3473 005f 13       		.uleb128 0x13
 3474 0060 3F       		.uleb128 0x3f
 3475 0061 19       		.uleb128 0x19
 3476 0062 3C       		.uleb128 0x3c
ARM GAS  /tmp/ccZsv2Jc.s 			page 88


 3477 0063 19       		.uleb128 0x19
 3478 0064 00       		.byte	0
 3479 0065 00       		.byte	0
 3480 0066 09       		.uleb128 0x9
 3481 0067 04       		.uleb128 0x4
 3482 0068 01       		.byte	0x1
 3483 0069 0B       		.uleb128 0xb
 3484 006a 0B       		.uleb128 0xb
 3485 006b 49       		.uleb128 0x49
 3486 006c 13       		.uleb128 0x13
 3487 006d 3A       		.uleb128 0x3a
 3488 006e 0B       		.uleb128 0xb
 3489 006f 3B       		.uleb128 0x3b
 3490 0070 05       		.uleb128 0x5
 3491 0071 01       		.uleb128 0x1
 3492 0072 13       		.uleb128 0x13
 3493 0073 00       		.byte	0
 3494 0074 00       		.byte	0
 3495 0075 0A       		.uleb128 0xa
 3496 0076 28       		.uleb128 0x28
 3497 0077 00       		.byte	0
 3498 0078 03       		.uleb128 0x3
 3499 0079 0E       		.uleb128 0xe
 3500 007a 1C       		.uleb128 0x1c
 3501 007b 0B       		.uleb128 0xb
 3502 007c 00       		.byte	0
 3503 007d 00       		.byte	0
 3504 007e 0B       		.uleb128 0xb
 3505 007f 28       		.uleb128 0x28
 3506 0080 00       		.byte	0
 3507 0081 03       		.uleb128 0x3
 3508 0082 08       		.uleb128 0x8
 3509 0083 1C       		.uleb128 0x1c
 3510 0084 0B       		.uleb128 0xb
 3511 0085 00       		.byte	0
 3512 0086 00       		.byte	0
 3513 0087 0C       		.uleb128 0xc
 3514 0088 16       		.uleb128 0x16
 3515 0089 00       		.byte	0
 3516 008a 03       		.uleb128 0x3
 3517 008b 0E       		.uleb128 0xe
 3518 008c 3A       		.uleb128 0x3a
 3519 008d 0B       		.uleb128 0xb
 3520 008e 3B       		.uleb128 0x3b
 3521 008f 05       		.uleb128 0x5
 3522 0090 49       		.uleb128 0x49
 3523 0091 13       		.uleb128 0x13
 3524 0092 00       		.byte	0
 3525 0093 00       		.byte	0
 3526 0094 0D       		.uleb128 0xd
 3527 0095 13       		.uleb128 0x13
 3528 0096 01       		.byte	0x1
 3529 0097 0B       		.uleb128 0xb
 3530 0098 0B       		.uleb128 0xb
 3531 0099 3A       		.uleb128 0x3a
 3532 009a 0B       		.uleb128 0xb
 3533 009b 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccZsv2Jc.s 			page 89


 3534 009c 05       		.uleb128 0x5
 3535 009d 01       		.uleb128 0x1
 3536 009e 13       		.uleb128 0x13
 3537 009f 00       		.byte	0
 3538 00a0 00       		.byte	0
 3539 00a1 0E       		.uleb128 0xe
 3540 00a2 0D       		.uleb128 0xd
 3541 00a3 00       		.byte	0
 3542 00a4 03       		.uleb128 0x3
 3543 00a5 08       		.uleb128 0x8
 3544 00a6 3A       		.uleb128 0x3a
 3545 00a7 0B       		.uleb128 0xb
 3546 00a8 3B       		.uleb128 0x3b
 3547 00a9 05       		.uleb128 0x5
 3548 00aa 49       		.uleb128 0x49
 3549 00ab 13       		.uleb128 0x13
 3550 00ac 38       		.uleb128 0x38
 3551 00ad 0B       		.uleb128 0xb
 3552 00ae 00       		.byte	0
 3553 00af 00       		.byte	0
 3554 00b0 0F       		.uleb128 0xf
 3555 00b1 0D       		.uleb128 0xd
 3556 00b2 00       		.byte	0
 3557 00b3 03       		.uleb128 0x3
 3558 00b4 0E       		.uleb128 0xe
 3559 00b5 3A       		.uleb128 0x3a
 3560 00b6 0B       		.uleb128 0xb
 3561 00b7 3B       		.uleb128 0x3b
 3562 00b8 05       		.uleb128 0x5
 3563 00b9 49       		.uleb128 0x49
 3564 00ba 13       		.uleb128 0x13
 3565 00bb 38       		.uleb128 0x38
 3566 00bc 0B       		.uleb128 0xb
 3567 00bd 00       		.byte	0
 3568 00be 00       		.byte	0
 3569 00bf 10       		.uleb128 0x10
 3570 00c0 13       		.uleb128 0x13
 3571 00c1 01       		.byte	0x1
 3572 00c2 0B       		.uleb128 0xb
 3573 00c3 0B       		.uleb128 0xb
 3574 00c4 3A       		.uleb128 0x3a
 3575 00c5 0B       		.uleb128 0xb
 3576 00c6 3B       		.uleb128 0x3b
 3577 00c7 0B       		.uleb128 0xb
 3578 00c8 01       		.uleb128 0x1
 3579 00c9 13       		.uleb128 0x13
 3580 00ca 00       		.byte	0
 3581 00cb 00       		.byte	0
 3582 00cc 11       		.uleb128 0x11
 3583 00cd 0D       		.uleb128 0xd
 3584 00ce 00       		.byte	0
 3585 00cf 03       		.uleb128 0x3
 3586 00d0 0E       		.uleb128 0xe
 3587 00d1 3A       		.uleb128 0x3a
 3588 00d2 0B       		.uleb128 0xb
 3589 00d3 3B       		.uleb128 0x3b
 3590 00d4 0B       		.uleb128 0xb
ARM GAS  /tmp/ccZsv2Jc.s 			page 90


 3591 00d5 49       		.uleb128 0x49
 3592 00d6 13       		.uleb128 0x13
 3593 00d7 38       		.uleb128 0x38
 3594 00d8 0B       		.uleb128 0xb
 3595 00d9 00       		.byte	0
 3596 00da 00       		.byte	0
 3597 00db 12       		.uleb128 0x12
 3598 00dc 0F       		.uleb128 0xf
 3599 00dd 00       		.byte	0
 3600 00de 0B       		.uleb128 0xb
 3601 00df 0B       		.uleb128 0xb
 3602 00e0 00       		.byte	0
 3603 00e1 00       		.byte	0
 3604 00e2 13       		.uleb128 0x13
 3605 00e3 17       		.uleb128 0x17
 3606 00e4 01       		.byte	0x1
 3607 00e5 0B       		.uleb128 0xb
 3608 00e6 0B       		.uleb128 0xb
 3609 00e7 3A       		.uleb128 0x3a
 3610 00e8 0B       		.uleb128 0xb
 3611 00e9 3B       		.uleb128 0x3b
 3612 00ea 0B       		.uleb128 0xb
 3613 00eb 01       		.uleb128 0x1
 3614 00ec 13       		.uleb128 0x13
 3615 00ed 00       		.byte	0
 3616 00ee 00       		.byte	0
 3617 00ef 14       		.uleb128 0x14
 3618 00f0 0D       		.uleb128 0xd
 3619 00f1 00       		.byte	0
 3620 00f2 03       		.uleb128 0x3
 3621 00f3 0E       		.uleb128 0xe
 3622 00f4 3A       		.uleb128 0x3a
 3623 00f5 0B       		.uleb128 0xb
 3624 00f6 3B       		.uleb128 0x3b
 3625 00f7 0B       		.uleb128 0xb
 3626 00f8 49       		.uleb128 0x49
 3627 00f9 13       		.uleb128 0x13
 3628 00fa 00       		.byte	0
 3629 00fb 00       		.byte	0
 3630 00fc 15       		.uleb128 0x15
 3631 00fd 01       		.uleb128 0x1
 3632 00fe 01       		.byte	0x1
 3633 00ff 49       		.uleb128 0x49
 3634 0100 13       		.uleb128 0x13
 3635 0101 01       		.uleb128 0x1
 3636 0102 13       		.uleb128 0x13
 3637 0103 00       		.byte	0
 3638 0104 00       		.byte	0
 3639 0105 16       		.uleb128 0x16
 3640 0106 21       		.uleb128 0x21
 3641 0107 00       		.byte	0
 3642 0108 49       		.uleb128 0x49
 3643 0109 13       		.uleb128 0x13
 3644 010a 2F       		.uleb128 0x2f
 3645 010b 0B       		.uleb128 0xb
 3646 010c 00       		.byte	0
 3647 010d 00       		.byte	0
ARM GAS  /tmp/ccZsv2Jc.s 			page 91


 3648 010e 17       		.uleb128 0x17
 3649 010f 13       		.uleb128 0x13
 3650 0110 01       		.byte	0x1
 3651 0111 03       		.uleb128 0x3
 3652 0112 0E       		.uleb128 0xe
 3653 0113 0B       		.uleb128 0xb
 3654 0114 0B       		.uleb128 0xb
 3655 0115 3A       		.uleb128 0x3a
 3656 0116 0B       		.uleb128 0xb
 3657 0117 3B       		.uleb128 0x3b
 3658 0118 0B       		.uleb128 0xb
 3659 0119 01       		.uleb128 0x1
 3660 011a 13       		.uleb128 0x13
 3661 011b 00       		.byte	0
 3662 011c 00       		.byte	0
 3663 011d 18       		.uleb128 0x18
 3664 011e 0D       		.uleb128 0xd
 3665 011f 00       		.byte	0
 3666 0120 03       		.uleb128 0x3
 3667 0121 08       		.uleb128 0x8
 3668 0122 3A       		.uleb128 0x3a
 3669 0123 0B       		.uleb128 0xb
 3670 0124 3B       		.uleb128 0x3b
 3671 0125 0B       		.uleb128 0xb
 3672 0126 49       		.uleb128 0x49
 3673 0127 13       		.uleb128 0x13
 3674 0128 38       		.uleb128 0x38
 3675 0129 0B       		.uleb128 0xb
 3676 012a 00       		.byte	0
 3677 012b 00       		.byte	0
 3678 012c 19       		.uleb128 0x19
 3679 012d 0F       		.uleb128 0xf
 3680 012e 00       		.byte	0
 3681 012f 0B       		.uleb128 0xb
 3682 0130 0B       		.uleb128 0xb
 3683 0131 49       		.uleb128 0x49
 3684 0132 13       		.uleb128 0x13
 3685 0133 00       		.byte	0
 3686 0134 00       		.byte	0
 3687 0135 1A       		.uleb128 0x1a
 3688 0136 13       		.uleb128 0x13
 3689 0137 01       		.byte	0x1
 3690 0138 03       		.uleb128 0x3
 3691 0139 0E       		.uleb128 0xe
 3692 013a 0B       		.uleb128 0xb
 3693 013b 05       		.uleb128 0x5
 3694 013c 3A       		.uleb128 0x3a
 3695 013d 0B       		.uleb128 0xb
 3696 013e 3B       		.uleb128 0x3b
 3697 013f 0B       		.uleb128 0xb
 3698 0140 01       		.uleb128 0x1
 3699 0141 13       		.uleb128 0x13
 3700 0142 00       		.byte	0
 3701 0143 00       		.byte	0
 3702 0144 1B       		.uleb128 0x1b
 3703 0145 0D       		.uleb128 0xd
 3704 0146 00       		.byte	0
ARM GAS  /tmp/ccZsv2Jc.s 			page 92


 3705 0147 03       		.uleb128 0x3
 3706 0148 0E       		.uleb128 0xe
 3707 0149 3A       		.uleb128 0x3a
 3708 014a 0B       		.uleb128 0xb
 3709 014b 3B       		.uleb128 0x3b
 3710 014c 0B       		.uleb128 0xb
 3711 014d 49       		.uleb128 0x49
 3712 014e 13       		.uleb128 0x13
 3713 014f 38       		.uleb128 0x38
 3714 0150 05       		.uleb128 0x5
 3715 0151 00       		.byte	0
 3716 0152 00       		.byte	0
 3717 0153 1C       		.uleb128 0x1c
 3718 0154 15       		.uleb128 0x15
 3719 0155 00       		.byte	0
 3720 0156 27       		.uleb128 0x27
 3721 0157 19       		.uleb128 0x19
 3722 0158 00       		.byte	0
 3723 0159 00       		.byte	0
 3724 015a 1D       		.uleb128 0x1d
 3725 015b 15       		.uleb128 0x15
 3726 015c 01       		.byte	0x1
 3727 015d 27       		.uleb128 0x27
 3728 015e 19       		.uleb128 0x19
 3729 015f 49       		.uleb128 0x49
 3730 0160 13       		.uleb128 0x13
 3731 0161 01       		.uleb128 0x1
 3732 0162 13       		.uleb128 0x13
 3733 0163 00       		.byte	0
 3734 0164 00       		.byte	0
 3735 0165 1E       		.uleb128 0x1e
 3736 0166 05       		.uleb128 0x5
 3737 0167 00       		.byte	0
 3738 0168 49       		.uleb128 0x49
 3739 0169 13       		.uleb128 0x13
 3740 016a 00       		.byte	0
 3741 016b 00       		.byte	0
 3742 016c 1F       		.uleb128 0x1f
 3743 016d 13       		.uleb128 0x13
 3744 016e 01       		.byte	0x1
 3745 016f 03       		.uleb128 0x3
 3746 0170 0E       		.uleb128 0xe
 3747 0171 0B       		.uleb128 0xb
 3748 0172 05       		.uleb128 0x5
 3749 0173 3A       		.uleb128 0x3a
 3750 0174 0B       		.uleb128 0xb
 3751 0175 3B       		.uleb128 0x3b
 3752 0176 05       		.uleb128 0x5
 3753 0177 01       		.uleb128 0x1
 3754 0178 13       		.uleb128 0x13
 3755 0179 00       		.byte	0
 3756 017a 00       		.byte	0
 3757 017b 20       		.uleb128 0x20
 3758 017c 0D       		.uleb128 0xd
 3759 017d 00       		.byte	0
 3760 017e 03       		.uleb128 0x3
 3761 017f 0E       		.uleb128 0xe
ARM GAS  /tmp/ccZsv2Jc.s 			page 93


 3762 0180 3A       		.uleb128 0x3a
 3763 0181 0B       		.uleb128 0xb
 3764 0182 3B       		.uleb128 0x3b
 3765 0183 05       		.uleb128 0x5
 3766 0184 49       		.uleb128 0x49
 3767 0185 13       		.uleb128 0x13
 3768 0186 38       		.uleb128 0x38
 3769 0187 05       		.uleb128 0x5
 3770 0188 00       		.byte	0
 3771 0189 00       		.byte	0
 3772 018a 21       		.uleb128 0x21
 3773 018b 13       		.uleb128 0x13
 3774 018c 01       		.byte	0x1
 3775 018d 03       		.uleb128 0x3
 3776 018e 0E       		.uleb128 0xe
 3777 018f 0B       		.uleb128 0xb
 3778 0190 0B       		.uleb128 0xb
 3779 0191 3A       		.uleb128 0x3a
 3780 0192 0B       		.uleb128 0xb
 3781 0193 3B       		.uleb128 0x3b
 3782 0194 05       		.uleb128 0x5
 3783 0195 01       		.uleb128 0x1
 3784 0196 13       		.uleb128 0x13
 3785 0197 00       		.byte	0
 3786 0198 00       		.byte	0
 3787 0199 22       		.uleb128 0x22
 3788 019a 17       		.uleb128 0x17
 3789 019b 01       		.byte	0x1
 3790 019c 0B       		.uleb128 0xb
 3791 019d 0B       		.uleb128 0xb
 3792 019e 3A       		.uleb128 0x3a
 3793 019f 0B       		.uleb128 0xb
 3794 01a0 3B       		.uleb128 0x3b
 3795 01a1 05       		.uleb128 0x5
 3796 01a2 01       		.uleb128 0x1
 3797 01a3 13       		.uleb128 0x13
 3798 01a4 00       		.byte	0
 3799 01a5 00       		.byte	0
 3800 01a6 23       		.uleb128 0x23
 3801 01a7 0D       		.uleb128 0xd
 3802 01a8 00       		.byte	0
 3803 01a9 03       		.uleb128 0x3
 3804 01aa 0E       		.uleb128 0xe
 3805 01ab 3A       		.uleb128 0x3a
 3806 01ac 0B       		.uleb128 0xb
 3807 01ad 3B       		.uleb128 0x3b
 3808 01ae 05       		.uleb128 0x5
 3809 01af 49       		.uleb128 0x49
 3810 01b0 13       		.uleb128 0x13
 3811 01b1 00       		.byte	0
 3812 01b2 00       		.byte	0
 3813 01b3 24       		.uleb128 0x24
 3814 01b4 15       		.uleb128 0x15
 3815 01b5 01       		.byte	0x1
 3816 01b6 27       		.uleb128 0x27
 3817 01b7 19       		.uleb128 0x19
 3818 01b8 01       		.uleb128 0x1
ARM GAS  /tmp/ccZsv2Jc.s 			page 94


 3819 01b9 13       		.uleb128 0x13
 3820 01ba 00       		.byte	0
 3821 01bb 00       		.byte	0
 3822 01bc 25       		.uleb128 0x25
 3823 01bd 04       		.uleb128 0x4
 3824 01be 01       		.byte	0x1
 3825 01bf 03       		.uleb128 0x3
 3826 01c0 0E       		.uleb128 0xe
 3827 01c1 0B       		.uleb128 0xb
 3828 01c2 0B       		.uleb128 0xb
 3829 01c3 49       		.uleb128 0x49
 3830 01c4 13       		.uleb128 0x13
 3831 01c5 3A       		.uleb128 0x3a
 3832 01c6 0B       		.uleb128 0xb
 3833 01c7 3B       		.uleb128 0x3b
 3834 01c8 05       		.uleb128 0x5
 3835 01c9 01       		.uleb128 0x1
 3836 01ca 13       		.uleb128 0x13
 3837 01cb 00       		.byte	0
 3838 01cc 00       		.byte	0
 3839 01cd 26       		.uleb128 0x26
 3840 01ce 28       		.uleb128 0x28
 3841 01cf 00       		.byte	0
 3842 01d0 03       		.uleb128 0x3
 3843 01d1 0E       		.uleb128 0xe
 3844 01d2 1C       		.uleb128 0x1c
 3845 01d3 0D       		.uleb128 0xd
 3846 01d4 00       		.byte	0
 3847 01d5 00       		.byte	0
 3848 01d6 27       		.uleb128 0x27
 3849 01d7 21       		.uleb128 0x21
 3850 01d8 00       		.byte	0
 3851 01d9 00       		.byte	0
 3852 01da 00       		.byte	0
 3853 01db 28       		.uleb128 0x28
 3854 01dc 34       		.uleb128 0x34
 3855 01dd 00       		.byte	0
 3856 01de 03       		.uleb128 0x3
 3857 01df 0E       		.uleb128 0xe
 3858 01e0 3A       		.uleb128 0x3a
 3859 01e1 0B       		.uleb128 0xb
 3860 01e2 3B       		.uleb128 0x3b
 3861 01e3 0B       		.uleb128 0xb
 3862 01e4 49       		.uleb128 0x49
 3863 01e5 13       		.uleb128 0x13
 3864 01e6 02       		.uleb128 0x2
 3865 01e7 18       		.uleb128 0x18
 3866 01e8 00       		.byte	0
 3867 01e9 00       		.byte	0
 3868 01ea 29       		.uleb128 0x29
 3869 01eb 2E       		.uleb128 0x2e
 3870 01ec 01       		.byte	0x1
 3871 01ed 3F       		.uleb128 0x3f
 3872 01ee 19       		.uleb128 0x19
 3873 01ef 03       		.uleb128 0x3
 3874 01f0 0E       		.uleb128 0xe
 3875 01f1 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccZsv2Jc.s 			page 95


 3876 01f2 0B       		.uleb128 0xb
 3877 01f3 3B       		.uleb128 0x3b
 3878 01f4 05       		.uleb128 0x5
 3879 01f5 27       		.uleb128 0x27
 3880 01f6 19       		.uleb128 0x19
 3881 01f7 11       		.uleb128 0x11
 3882 01f8 01       		.uleb128 0x1
 3883 01f9 12       		.uleb128 0x12
 3884 01fa 06       		.uleb128 0x6
 3885 01fb 40       		.uleb128 0x40
 3886 01fc 18       		.uleb128 0x18
 3887 01fd 9742     		.uleb128 0x2117
 3888 01ff 19       		.uleb128 0x19
 3889 0200 01       		.uleb128 0x1
 3890 0201 13       		.uleb128 0x13
 3891 0202 00       		.byte	0
 3892 0203 00       		.byte	0
 3893 0204 2A       		.uleb128 0x2a
 3894 0205 05       		.uleb128 0x5
 3895 0206 00       		.byte	0
 3896 0207 03       		.uleb128 0x3
 3897 0208 0E       		.uleb128 0xe
 3898 0209 3A       		.uleb128 0x3a
 3899 020a 0B       		.uleb128 0xb
 3900 020b 3B       		.uleb128 0x3b
 3901 020c 05       		.uleb128 0x5
 3902 020d 49       		.uleb128 0x49
 3903 020e 13       		.uleb128 0x13
 3904 020f 02       		.uleb128 0x2
 3905 0210 18       		.uleb128 0x18
 3906 0211 00       		.byte	0
 3907 0212 00       		.byte	0
 3908 0213 2B       		.uleb128 0x2b
 3909 0214 2E       		.uleb128 0x2e
 3910 0215 01       		.byte	0x1
 3911 0216 3F       		.uleb128 0x3f
 3912 0217 19       		.uleb128 0x19
 3913 0218 03       		.uleb128 0x3
 3914 0219 0E       		.uleb128 0xe
 3915 021a 3A       		.uleb128 0x3a
 3916 021b 0B       		.uleb128 0xb
 3917 021c 3B       		.uleb128 0x3b
 3918 021d 05       		.uleb128 0x5
 3919 021e 27       		.uleb128 0x27
 3920 021f 19       		.uleb128 0x19
 3921 0220 49       		.uleb128 0x49
 3922 0221 13       		.uleb128 0x13
 3923 0222 11       		.uleb128 0x11
 3924 0223 01       		.uleb128 0x1
 3925 0224 12       		.uleb128 0x12
 3926 0225 06       		.uleb128 0x6
 3927 0226 40       		.uleb128 0x40
 3928 0227 18       		.uleb128 0x18
 3929 0228 9742     		.uleb128 0x2117
 3930 022a 19       		.uleb128 0x19
 3931 022b 01       		.uleb128 0x1
 3932 022c 13       		.uleb128 0x13
ARM GAS  /tmp/ccZsv2Jc.s 			page 96


 3933 022d 00       		.byte	0
 3934 022e 00       		.byte	0
 3935 022f 2C       		.uleb128 0x2c
 3936 0230 05       		.uleb128 0x5
 3937 0231 00       		.byte	0
 3938 0232 03       		.uleb128 0x3
 3939 0233 0E       		.uleb128 0xe
 3940 0234 3A       		.uleb128 0x3a
 3941 0235 0B       		.uleb128 0xb
 3942 0236 3B       		.uleb128 0x3b
 3943 0237 05       		.uleb128 0x5
 3944 0238 49       		.uleb128 0x49
 3945 0239 13       		.uleb128 0x13
 3946 023a 02       		.uleb128 0x2
 3947 023b 17       		.uleb128 0x17
 3948 023c 00       		.byte	0
 3949 023d 00       		.byte	0
 3950 023e 2D       		.uleb128 0x2d
 3951 023f 34       		.uleb128 0x34
 3952 0240 00       		.byte	0
 3953 0241 03       		.uleb128 0x3
 3954 0242 0E       		.uleb128 0xe
 3955 0243 3A       		.uleb128 0x3a
 3956 0244 0B       		.uleb128 0xb
 3957 0245 3B       		.uleb128 0x3b
 3958 0246 05       		.uleb128 0x5
 3959 0247 49       		.uleb128 0x49
 3960 0248 13       		.uleb128 0x13
 3961 0249 02       		.uleb128 0x2
 3962 024a 17       		.uleb128 0x17
 3963 024b 00       		.byte	0
 3964 024c 00       		.byte	0
 3965 024d 2E       		.uleb128 0x2e
 3966 024e 2E       		.uleb128 0x2e
 3967 024f 00       		.byte	0
 3968 0250 3F       		.uleb128 0x3f
 3969 0251 19       		.uleb128 0x19
 3970 0252 03       		.uleb128 0x3
 3971 0253 0E       		.uleb128 0xe
 3972 0254 3A       		.uleb128 0x3a
 3973 0255 0B       		.uleb128 0xb
 3974 0256 3B       		.uleb128 0x3b
 3975 0257 05       		.uleb128 0x5
 3976 0258 27       		.uleb128 0x27
 3977 0259 19       		.uleb128 0x19
 3978 025a 11       		.uleb128 0x11
 3979 025b 01       		.uleb128 0x1
 3980 025c 12       		.uleb128 0x12
 3981 025d 06       		.uleb128 0x6
 3982 025e 40       		.uleb128 0x40
 3983 025f 18       		.uleb128 0x18
 3984 0260 9742     		.uleb128 0x2117
 3985 0262 19       		.uleb128 0x19
 3986 0263 00       		.byte	0
 3987 0264 00       		.byte	0
 3988 0265 2F       		.uleb128 0x2f
 3989 0266 34       		.uleb128 0x34
ARM GAS  /tmp/ccZsv2Jc.s 			page 97


 3990 0267 00       		.byte	0
 3991 0268 03       		.uleb128 0x3
 3992 0269 08       		.uleb128 0x8
 3993 026a 3A       		.uleb128 0x3a
 3994 026b 0B       		.uleb128 0xb
 3995 026c 3B       		.uleb128 0x3b
 3996 026d 05       		.uleb128 0x5
 3997 026e 49       		.uleb128 0x49
 3998 026f 13       		.uleb128 0x13
 3999 0270 02       		.uleb128 0x2
 4000 0271 17       		.uleb128 0x17
 4001 0272 00       		.byte	0
 4002 0273 00       		.byte	0
 4003 0274 30       		.uleb128 0x30
 4004 0275 2E       		.uleb128 0x2e
 4005 0276 00       		.byte	0
 4006 0277 3F       		.uleb128 0x3f
 4007 0278 19       		.uleb128 0x19
 4008 0279 03       		.uleb128 0x3
 4009 027a 0E       		.uleb128 0xe
 4010 027b 3A       		.uleb128 0x3a
 4011 027c 0B       		.uleb128 0xb
 4012 027d 3B       		.uleb128 0x3b
 4013 027e 05       		.uleb128 0x5
 4014 027f 27       		.uleb128 0x27
 4015 0280 19       		.uleb128 0x19
 4016 0281 49       		.uleb128 0x49
 4017 0282 13       		.uleb128 0x13
 4018 0283 11       		.uleb128 0x11
 4019 0284 01       		.uleb128 0x1
 4020 0285 12       		.uleb128 0x12
 4021 0286 06       		.uleb128 0x6
 4022 0287 40       		.uleb128 0x40
 4023 0288 18       		.uleb128 0x18
 4024 0289 9742     		.uleb128 0x2117
 4025 028b 19       		.uleb128 0x19
 4026 028c 00       		.byte	0
 4027 028d 00       		.byte	0
 4028 028e 31       		.uleb128 0x31
 4029 028f 34       		.uleb128 0x34
 4030 0290 00       		.byte	0
 4031 0291 03       		.uleb128 0x3
 4032 0292 0E       		.uleb128 0xe
 4033 0293 3A       		.uleb128 0x3a
 4034 0294 0B       		.uleb128 0xb
 4035 0295 3B       		.uleb128 0x3b
 4036 0296 05       		.uleb128 0x5
 4037 0297 49       		.uleb128 0x49
 4038 0298 13       		.uleb128 0x13
 4039 0299 02       		.uleb128 0x2
 4040 029a 18       		.uleb128 0x18
 4041 029b 00       		.byte	0
 4042 029c 00       		.byte	0
 4043 029d 32       		.uleb128 0x32
 4044 029e 898201   		.uleb128 0x4109
 4045 02a1 01       		.byte	0x1
 4046 02a2 11       		.uleb128 0x11
ARM GAS  /tmp/ccZsv2Jc.s 			page 98


 4047 02a3 01       		.uleb128 0x1
 4048 02a4 31       		.uleb128 0x31
 4049 02a5 13       		.uleb128 0x13
 4050 02a6 01       		.uleb128 0x1
 4051 02a7 13       		.uleb128 0x13
 4052 02a8 00       		.byte	0
 4053 02a9 00       		.byte	0
 4054 02aa 33       		.uleb128 0x33
 4055 02ab 8A8201   		.uleb128 0x410a
 4056 02ae 00       		.byte	0
 4057 02af 02       		.uleb128 0x2
 4058 02b0 18       		.uleb128 0x18
 4059 02b1 9142     		.uleb128 0x2111
 4060 02b3 18       		.uleb128 0x18
 4061 02b4 00       		.byte	0
 4062 02b5 00       		.byte	0
 4063 02b6 34       		.uleb128 0x34
 4064 02b7 898201   		.uleb128 0x4109
 4065 02ba 01       		.byte	0x1
 4066 02bb 11       		.uleb128 0x11
 4067 02bc 01       		.uleb128 0x1
 4068 02bd 31       		.uleb128 0x31
 4069 02be 13       		.uleb128 0x13
 4070 02bf 00       		.byte	0
 4071 02c0 00       		.byte	0
 4072 02c1 35       		.uleb128 0x35
 4073 02c2 2E       		.uleb128 0x2e
 4074 02c3 00       		.byte	0
 4075 02c4 3F       		.uleb128 0x3f
 4076 02c5 19       		.uleb128 0x19
 4077 02c6 03       		.uleb128 0x3
 4078 02c7 0E       		.uleb128 0xe
 4079 02c8 3A       		.uleb128 0x3a
 4080 02c9 0B       		.uleb128 0xb
 4081 02ca 3B       		.uleb128 0x3b
 4082 02cb 0B       		.uleb128 0xb
 4083 02cc 27       		.uleb128 0x27
 4084 02cd 19       		.uleb128 0x19
 4085 02ce 11       		.uleb128 0x11
 4086 02cf 01       		.uleb128 0x1
 4087 02d0 12       		.uleb128 0x12
 4088 02d1 06       		.uleb128 0x6
 4089 02d2 40       		.uleb128 0x40
 4090 02d3 18       		.uleb128 0x18
 4091 02d4 9742     		.uleb128 0x2117
 4092 02d6 19       		.uleb128 0x19
 4093 02d7 00       		.byte	0
 4094 02d8 00       		.byte	0
 4095 02d9 00       		.byte	0
 4096              		.section	.debug_loc,"",%progbits
 4097              	.Ldebug_loc0:
 4098              	.LLST31:
 4099 0000 74030000 		.4byte	.LVL116-.Ltext0
 4100 0004 7E030000 		.4byte	.LVL118-.Ltext0
 4101 0008 0100     		.2byte	0x1
 4102 000a 50       		.byte	0x50
 4103 000b 7E030000 		.4byte	.LVL118-.Ltext0
ARM GAS  /tmp/ccZsv2Jc.s 			page 99


 4104 000f 88030000 		.4byte	.LFE94-.Ltext0
 4105 0013 0400     		.2byte	0x4
 4106 0015 F3       		.byte	0xf3
 4107 0016 01       		.uleb128 0x1
 4108 0017 50       		.byte	0x50
 4109 0018 9F       		.byte	0x9f
 4110 0019 00000000 		.4byte	0
 4111 001d 00000000 		.4byte	0
 4112              	.LLST32:
 4113 0021 74030000 		.4byte	.LVL116-.Ltext0
 4114 0025 78030000 		.4byte	.LVL117-.Ltext0
 4115 0029 0200     		.2byte	0x2
 4116 002b 30       		.byte	0x30
 4117 002c 9F       		.byte	0x9f
 4118 002d 78030000 		.4byte	.LVL117-.Ltext0
 4119 0031 7E030000 		.4byte	.LVL118-.Ltext0
 4120 0035 0B00     		.2byte	0xb
 4121 0037 70       		.byte	0x70
 4122 0038 00       		.sleb128 0
 4123 0039 08       		.byte	0x8
 4124 003a FF       		.byte	0xff
 4125 003b 1A       		.byte	0x1a
 4126 003c 73       		.byte	0x73
 4127 003d 00       		.sleb128 0
 4128 003e 1A       		.byte	0x1a
 4129 003f 30       		.byte	0x30
 4130 0040 2E       		.byte	0x2e
 4131 0041 9F       		.byte	0x9f
 4132 0042 7E030000 		.4byte	.LVL118-.Ltext0
 4133 0046 88030000 		.4byte	.LFE94-.Ltext0
 4134 004a 0C00     		.2byte	0xc
 4135 004c F3       		.byte	0xf3
 4136 004d 01       		.uleb128 0x1
 4137 004e 50       		.byte	0x50
 4138 004f 08       		.byte	0x8
 4139 0050 FF       		.byte	0xff
 4140 0051 1A       		.byte	0x1a
 4141 0052 73       		.byte	0x73
 4142 0053 00       		.sleb128 0
 4143 0054 1A       		.byte	0x1a
 4144 0055 30       		.byte	0x30
 4145 0056 2E       		.byte	0x2e
 4146 0057 9F       		.byte	0x9f
 4147 0058 00000000 		.4byte	0
 4148 005c 00000000 		.4byte	0
 4149              	.LLST25:
 4150 0060 08030000 		.4byte	.LVL101-.Ltext0
 4151 0064 1C030000 		.4byte	.LVL106-.Ltext0
 4152 0068 0100     		.2byte	0x1
 4153 006a 50       		.byte	0x50
 4154 006b 1C030000 		.4byte	.LVL106-.Ltext0
 4155 006f 26030000 		.4byte	.LVL107-.Ltext0
 4156 0073 0400     		.2byte	0x4
 4157 0075 F3       		.byte	0xf3
 4158 0076 01       		.uleb128 0x1
 4159 0077 50       		.byte	0x50
 4160 0078 9F       		.byte	0x9f
ARM GAS  /tmp/ccZsv2Jc.s 			page 100


 4161 0079 26030000 		.4byte	.LVL107-.Ltext0
 4162 007d 30030000 		.4byte	.LFE92-.Ltext0
 4163 0081 0100     		.2byte	0x1
 4164 0083 50       		.byte	0x50
 4165 0084 00000000 		.4byte	0
 4166 0088 00000000 		.4byte	0
 4167              	.LLST26:
 4168 008c 08030000 		.4byte	.LVL101-.Ltext0
 4169 0090 0A030000 		.4byte	.LVL102-.Ltext0
 4170 0094 0200     		.2byte	0x2
 4171 0096 30       		.byte	0x30
 4172 0097 9F       		.byte	0x9f
 4173 0098 0A030000 		.4byte	.LVL102-.Ltext0
 4174 009c 12030000 		.4byte	.LVL103-.Ltext0
 4175 00a0 0100     		.2byte	0x1
 4176 00a2 53       		.byte	0x53
 4177 00a3 12030000 		.4byte	.LVL103-.Ltext0
 4178 00a7 18030000 		.4byte	.LVL105-.Ltext0
 4179 00ab 0500     		.2byte	0x5
 4180 00ad 70       		.byte	0x70
 4181 00ae 00       		.sleb128 0
 4182 00af 35       		.byte	0x35
 4183 00b0 25       		.byte	0x25
 4184 00b1 9F       		.byte	0x9f
 4185 00b2 18030000 		.4byte	.LVL105-.Ltext0
 4186 00b6 1C030000 		.4byte	.LVL106-.Ltext0
 4187 00ba 0800     		.2byte	0x8
 4188 00bc 70       		.byte	0x70
 4189 00bd 00       		.sleb128 0
 4190 00be 4F       		.byte	0x4f
 4191 00bf 1A       		.byte	0x1a
 4192 00c0 08       		.byte	0x8
 4193 00c1 FF       		.byte	0xff
 4194 00c2 1A       		.byte	0x1a
 4195 00c3 9F       		.byte	0x9f
 4196 00c4 1C030000 		.4byte	.LVL106-.Ltext0
 4197 00c8 26030000 		.4byte	.LVL107-.Ltext0
 4198 00cc 0900     		.2byte	0x9
 4199 00ce F3       		.byte	0xf3
 4200 00cf 01       		.uleb128 0x1
 4201 00d0 50       		.byte	0x50
 4202 00d1 4F       		.byte	0x4f
 4203 00d2 1A       		.byte	0x1a
 4204 00d3 08       		.byte	0x8
 4205 00d4 FF       		.byte	0xff
 4206 00d5 1A       		.byte	0x1a
 4207 00d6 9F       		.byte	0x9f
 4208 00d7 26030000 		.4byte	.LVL107-.Ltext0
 4209 00db 28030000 		.4byte	.LVL108-.Ltext0
 4210 00df 0100     		.2byte	0x1
 4211 00e1 53       		.byte	0x53
 4212 00e2 28030000 		.4byte	.LVL108-.Ltext0
 4213 00e6 30030000 		.4byte	.LFE92-.Ltext0
 4214 00ea 0500     		.2byte	0x5
 4215 00ec 70       		.byte	0x70
 4216 00ed 00       		.sleb128 0
 4217 00ee 35       		.byte	0x35
ARM GAS  /tmp/ccZsv2Jc.s 			page 101


 4218 00ef 25       		.byte	0x25
 4219 00f0 9F       		.byte	0x9f
 4220 00f1 00000000 		.4byte	0
 4221 00f5 00000000 		.4byte	0
 4222              	.LLST27:
 4223 00f9 08030000 		.4byte	.LVL101-.Ltext0
 4224 00fd 16030000 		.4byte	.LVL104-.Ltext0
 4225 0101 0200     		.2byte	0x2
 4226 0103 30       		.byte	0x30
 4227 0104 9F       		.byte	0x9f
 4228 0105 16030000 		.4byte	.LVL104-.Ltext0
 4229 0109 26030000 		.4byte	.LVL107-.Ltext0
 4230 010d 0100     		.2byte	0x1
 4231 010f 53       		.byte	0x53
 4232 0110 26030000 		.4byte	.LVL107-.Ltext0
 4233 0114 2A030000 		.4byte	.LVL109-.Ltext0
 4234 0118 0200     		.2byte	0x2
 4235 011a 30       		.byte	0x30
 4236 011b 9F       		.byte	0x9f
 4237 011c 2A030000 		.4byte	.LVL109-.Ltext0
 4238 0120 30030000 		.4byte	.LFE92-.Ltext0
 4239 0124 0100     		.2byte	0x1
 4240 0126 53       		.byte	0x53
 4241 0127 00000000 		.4byte	0
 4242 012b 00000000 		.4byte	0
 4243              	.LLST28:
 4244 012f 08030000 		.4byte	.LVL101-.Ltext0
 4245 0133 18030000 		.4byte	.LVL105-.Ltext0
 4246 0137 0200     		.2byte	0x2
 4247 0139 30       		.byte	0x30
 4248 013a 9F       		.byte	0x9f
 4249 013b 18030000 		.4byte	.LVL105-.Ltext0
 4250 013f 1C030000 		.4byte	.LVL106-.Ltext0
 4251 0143 0D00     		.2byte	0xd
 4252 0145 73       		.byte	0x73
 4253 0146 00       		.sleb128 0
 4254 0147 70       		.byte	0x70
 4255 0148 00       		.sleb128 0
 4256 0149 4F       		.byte	0x4f
 4257 014a 1A       		.byte	0x1a
 4258 014b 08       		.byte	0x8
 4259 014c FF       		.byte	0xff
 4260 014d 1A       		.byte	0x1a
 4261 014e 25       		.byte	0x25
 4262 014f 31       		.byte	0x31
 4263 0150 1A       		.byte	0x1a
 4264 0151 9F       		.byte	0x9f
 4265 0152 1C030000 		.4byte	.LVL106-.Ltext0
 4266 0156 26030000 		.4byte	.LVL107-.Ltext0
 4267 015a 0E00     		.2byte	0xe
 4268 015c 73       		.byte	0x73
 4269 015d 00       		.sleb128 0
 4270 015e F3       		.byte	0xf3
 4271 015f 01       		.uleb128 0x1
 4272 0160 50       		.byte	0x50
 4273 0161 4F       		.byte	0x4f
 4274 0162 1A       		.byte	0x1a
ARM GAS  /tmp/ccZsv2Jc.s 			page 102


 4275 0163 08       		.byte	0x8
 4276 0164 FF       		.byte	0xff
 4277 0165 1A       		.byte	0x1a
 4278 0166 25       		.byte	0x25
 4279 0167 31       		.byte	0x31
 4280 0168 1A       		.byte	0x1a
 4281 0169 9F       		.byte	0x9f
 4282 016a 26030000 		.4byte	.LVL107-.Ltext0
 4283 016e 30030000 		.4byte	.LFE92-.Ltext0
 4284 0172 0200     		.2byte	0x2
 4285 0174 30       		.byte	0x30
 4286 0175 9F       		.byte	0x9f
 4287 0176 00000000 		.4byte	0
 4288 017a 00000000 		.4byte	0
 4289              	.LLST24:
 4290 017e C8020000 		.4byte	.LVL94-.Ltext0
 4291 0182 D2020000 		.4byte	.LVL95-.Ltext0
 4292 0186 0100     		.2byte	0x1
 4293 0188 50       		.byte	0x50
 4294 0189 D2020000 		.4byte	.LVL95-.Ltext0
 4295 018d D6020000 		.4byte	.LVL96-.Ltext0
 4296 0191 0400     		.2byte	0x4
 4297 0193 F3       		.byte	0xf3
 4298 0194 01       		.uleb128 0x1
 4299 0195 50       		.byte	0x50
 4300 0196 9F       		.byte	0x9f
 4301 0197 D6020000 		.4byte	.LVL96-.Ltext0
 4302 019b DC020000 		.4byte	.LVL97-.Ltext0
 4303 019f 0100     		.2byte	0x1
 4304 01a1 50       		.byte	0x50
 4305 01a2 DC020000 		.4byte	.LVL97-.Ltext0
 4306 01a6 E4020000 		.4byte	.LFE88-.Ltext0
 4307 01aa 0400     		.2byte	0x4
 4308 01ac F3       		.byte	0xf3
 4309 01ad 01       		.uleb128 0x1
 4310 01ae 50       		.byte	0x50
 4311 01af 9F       		.byte	0x9f
 4312 01b0 00000000 		.4byte	0
 4313 01b4 00000000 		.4byte	0
 4314              	.LLST23:
 4315 01b8 AC020000 		.4byte	.LVL90-.Ltext0
 4316 01bc B6020000 		.4byte	.LVL91-.Ltext0
 4317 01c0 0100     		.2byte	0x1
 4318 01c2 50       		.byte	0x50
 4319 01c3 B6020000 		.4byte	.LVL91-.Ltext0
 4320 01c7 BA020000 		.4byte	.LVL92-.Ltext0
 4321 01cb 0400     		.2byte	0x4
 4322 01cd F3       		.byte	0xf3
 4323 01ce 01       		.uleb128 0x1
 4324 01cf 50       		.byte	0x50
 4325 01d0 9F       		.byte	0x9f
 4326 01d1 BA020000 		.4byte	.LVL92-.Ltext0
 4327 01d5 C0020000 		.4byte	.LVL93-.Ltext0
 4328 01d9 0100     		.2byte	0x1
 4329 01db 50       		.byte	0x50
 4330 01dc C0020000 		.4byte	.LVL93-.Ltext0
 4331 01e0 C8020000 		.4byte	.LFE87-.Ltext0
ARM GAS  /tmp/ccZsv2Jc.s 			page 103


 4332 01e4 0400     		.2byte	0x4
 4333 01e6 F3       		.byte	0xf3
 4334 01e7 01       		.uleb128 0x1
 4335 01e8 50       		.byte	0x50
 4336 01e9 9F       		.byte	0x9f
 4337 01ea 00000000 		.4byte	0
 4338 01ee 00000000 		.4byte	0
 4339              	.LLST22:
 4340 01f2 90020000 		.4byte	.LVL86-.Ltext0
 4341 01f6 9A020000 		.4byte	.LVL87-.Ltext0
 4342 01fa 0100     		.2byte	0x1
 4343 01fc 50       		.byte	0x50
 4344 01fd 9A020000 		.4byte	.LVL87-.Ltext0
 4345 0201 9E020000 		.4byte	.LVL88-.Ltext0
 4346 0205 0400     		.2byte	0x4
 4347 0207 F3       		.byte	0xf3
 4348 0208 01       		.uleb128 0x1
 4349 0209 50       		.byte	0x50
 4350 020a 9F       		.byte	0x9f
 4351 020b 9E020000 		.4byte	.LVL88-.Ltext0
 4352 020f A4020000 		.4byte	.LVL89-.Ltext0
 4353 0213 0100     		.2byte	0x1
 4354 0215 50       		.byte	0x50
 4355 0216 A4020000 		.4byte	.LVL89-.Ltext0
 4356 021a AC020000 		.4byte	.LFE86-.Ltext0
 4357 021e 0400     		.2byte	0x4
 4358 0220 F3       		.byte	0xf3
 4359 0221 01       		.uleb128 0x1
 4360 0222 50       		.byte	0x50
 4361 0223 9F       		.byte	0x9f
 4362 0224 00000000 		.4byte	0
 4363 0228 00000000 		.4byte	0
 4364              	.LLST21:
 4365 022c 74020000 		.4byte	.LVL82-.Ltext0
 4366 0230 7E020000 		.4byte	.LVL83-.Ltext0
 4367 0234 0100     		.2byte	0x1
 4368 0236 50       		.byte	0x50
 4369 0237 7E020000 		.4byte	.LVL83-.Ltext0
 4370 023b 82020000 		.4byte	.LVL84-.Ltext0
 4371 023f 0400     		.2byte	0x4
 4372 0241 F3       		.byte	0xf3
 4373 0242 01       		.uleb128 0x1
 4374 0243 50       		.byte	0x50
 4375 0244 9F       		.byte	0x9f
 4376 0245 82020000 		.4byte	.LVL84-.Ltext0
 4377 0249 88020000 		.4byte	.LVL85-.Ltext0
 4378 024d 0100     		.2byte	0x1
 4379 024f 50       		.byte	0x50
 4380 0250 88020000 		.4byte	.LVL85-.Ltext0
 4381 0254 90020000 		.4byte	.LFE85-.Ltext0
 4382 0258 0400     		.2byte	0x4
 4383 025a F3       		.byte	0xf3
 4384 025b 01       		.uleb128 0x1
 4385 025c 50       		.byte	0x50
 4386 025d 9F       		.byte	0x9f
 4387 025e 00000000 		.4byte	0
 4388 0262 00000000 		.4byte	0
ARM GAS  /tmp/ccZsv2Jc.s 			page 104


 4389              	.LLST20:
 4390 0266 58020000 		.4byte	.LVL78-.Ltext0
 4391 026a 62020000 		.4byte	.LVL79-.Ltext0
 4392 026e 0100     		.2byte	0x1
 4393 0270 50       		.byte	0x50
 4394 0271 62020000 		.4byte	.LVL79-.Ltext0
 4395 0275 66020000 		.4byte	.LVL80-.Ltext0
 4396 0279 0400     		.2byte	0x4
 4397 027b F3       		.byte	0xf3
 4398 027c 01       		.uleb128 0x1
 4399 027d 50       		.byte	0x50
 4400 027e 9F       		.byte	0x9f
 4401 027f 66020000 		.4byte	.LVL80-.Ltext0
 4402 0283 6C020000 		.4byte	.LVL81-.Ltext0
 4403 0287 0100     		.2byte	0x1
 4404 0289 50       		.byte	0x50
 4405 028a 6C020000 		.4byte	.LVL81-.Ltext0
 4406 028e 74020000 		.4byte	.LFE84-.Ltext0
 4407 0292 0400     		.2byte	0x4
 4408 0294 F3       		.byte	0xf3
 4409 0295 01       		.uleb128 0x1
 4410 0296 50       		.byte	0x50
 4411 0297 9F       		.byte	0x9f
 4412 0298 00000000 		.4byte	0
 4413 029c 00000000 		.4byte	0
 4414              	.LLST16:
 4415 02a0 AA010000 		.4byte	.LVL43-.Ltext0
 4416 02a4 AE010000 		.4byte	.LVL44-.Ltext0
 4417 02a8 0200     		.2byte	0x2
 4418 02aa 30       		.byte	0x30
 4419 02ab 9F       		.byte	0x9f
 4420 02ac AE010000 		.4byte	.LVL44-.Ltext0
 4421 02b0 B2010000 		.4byte	.LVL45-.Ltext0
 4422 02b4 0500     		.2byte	0x5
 4423 02b6 73       		.byte	0x73
 4424 02b7 00       		.sleb128 0
 4425 02b8 3C       		.byte	0x3c
 4426 02b9 1A       		.byte	0x1a
 4427 02ba 9F       		.byte	0x9f
 4428 02bb B2010000 		.4byte	.LVL45-.Ltext0
 4429 02bf BE010000 		.4byte	.LVL46-.Ltext0
 4430 02c3 0100     		.2byte	0x1
 4431 02c5 53       		.byte	0x53
 4432 02c6 C2010000 		.4byte	.LVL47-.Ltext0
 4433 02ca C4010000 		.4byte	.LVL48-.Ltext0
 4434 02ce 0100     		.2byte	0x1
 4435 02d0 53       		.byte	0x53
 4436 02d1 CA010000 		.4byte	.LVL50-.Ltext0
 4437 02d5 CE010000 		.4byte	.LVL51-.Ltext0
 4438 02d9 0600     		.2byte	0x6
 4439 02db 73       		.byte	0x73
 4440 02dc 00       		.sleb128 0
 4441 02dd 08       		.byte	0x8
 4442 02de F0       		.byte	0xf0
 4443 02df 1A       		.byte	0x1a
 4444 02e0 9F       		.byte	0x9f
 4445 02e1 CE010000 		.4byte	.LVL51-.Ltext0
ARM GAS  /tmp/ccZsv2Jc.s 			page 105


 4446 02e5 D2010000 		.4byte	.LVL52-.Ltext0
 4447 02e9 0100     		.2byte	0x1
 4448 02eb 53       		.byte	0x53
 4449 02ec DC010000 		.4byte	.LVL54-.Ltext0
 4450 02f0 E0010000 		.4byte	.LVL55-.Ltext0
 4451 02f4 0700     		.2byte	0x7
 4452 02f6 71       		.byte	0x71
 4453 02f7 00       		.sleb128 0
 4454 02f8 0A       		.byte	0xa
 4455 02f9 0007     		.2byte	0x700
 4456 02fb 1A       		.byte	0x1a
 4457 02fc 9F       		.byte	0x9f
 4458 02fd E0010000 		.4byte	.LVL55-.Ltext0
 4459 0301 E2010000 		.4byte	.LVL56-.Ltext0
 4460 0305 0100     		.2byte	0x1
 4461 0307 51       		.byte	0x51
 4462 0308 EC010000 		.4byte	.LVL59-.Ltext0
 4463 030c F0010000 		.4byte	.LVL60-.Ltext0
 4464 0310 0700     		.2byte	0x7
 4465 0312 71       		.byte	0x71
 4466 0313 00       		.sleb128 0
 4467 0314 0A       		.byte	0xa
 4468 0315 0038     		.2byte	0x3800
 4469 0317 1A       		.byte	0x1a
 4470 0318 9F       		.byte	0x9f
 4471 0319 F0010000 		.4byte	.LVL60-.Ltext0
 4472 031d F2010000 		.4byte	.LVL61-.Ltext0
 4473 0321 0100     		.2byte	0x1
 4474 0323 51       		.byte	0x51
 4475 0324 FA010000 		.4byte	.LVL63-.Ltext0
 4476 0328 FE010000 		.4byte	.LVL64-.Ltext0
 4477 032c 0700     		.2byte	0x7
 4478 032e 71       		.byte	0x71
 4479 032f 00       		.sleb128 0
 4480 0330 0A       		.byte	0xa
 4481 0331 00C0     		.2byte	0xc000
 4482 0333 1A       		.byte	0x1a
 4483 0334 9F       		.byte	0x9f
 4484 0335 FE010000 		.4byte	.LVL64-.Ltext0
 4485 0339 0E020000 		.4byte	.LVL66-.Ltext0
 4486 033d 0100     		.2byte	0x1
 4487 033f 51       		.byte	0x51
 4488 0340 0E020000 		.4byte	.LVL66-.Ltext0
 4489 0344 10020000 		.4byte	.LVL67-.Ltext0
 4490 0348 0100     		.2byte	0x1
 4491 034a 53       		.byte	0x53
 4492 034b 14020000 		.4byte	.LVL68-.Ltext0
 4493 034f 18020000 		.4byte	.LVL69-.Ltext0
 4494 0353 0100     		.2byte	0x1
 4495 0355 53       		.byte	0x53
 4496 0356 00000000 		.4byte	0
 4497 035a 00000000 		.4byte	0
 4498              	.LLST17:
 4499 035e AA010000 		.4byte	.LVL43-.Ltext0
 4500 0362 C6010000 		.4byte	.LVL49-.Ltext0
 4501 0366 0200     		.2byte	0x2
 4502 0368 30       		.byte	0x30
ARM GAS  /tmp/ccZsv2Jc.s 			page 106


 4503 0369 9F       		.byte	0x9f
 4504 036a 0E020000 		.4byte	.LVL66-.Ltext0
 4505 036e 18020000 		.4byte	.LVL69-.Ltext0
 4506 0372 0200     		.2byte	0x2
 4507 0374 30       		.byte	0x30
 4508 0375 9F       		.byte	0x9f
 4509 0376 18020000 		.4byte	.LVL69-.Ltext0
 4510 037a 1E020000 		.4byte	.LVL71-.Ltext0
 4511 037e 0700     		.2byte	0x7
 4512 0380 73       		.byte	0x73
 4513 0381 00       		.sleb128 0
 4514 0382 4E       		.byte	0x4e
 4515 0383 41       		.byte	0x41
 4516 0384 24       		.byte	0x24
 4517 0385 1A       		.byte	0x1a
 4518 0386 9F       		.byte	0x9f
 4519 0387 20020000 		.4byte	.LVL72-.Ltext0
 4520 038b 38020000 		.4byte	.LVL74-.Ltext0
 4521 038f 0100     		.2byte	0x1
 4522 0391 53       		.byte	0x53
 4523 0392 3C020000 		.4byte	.LVL75-.Ltext0
 4524 0396 42020000 		.4byte	.LVL77-.Ltext0
 4525 039a 0100     		.2byte	0x1
 4526 039c 53       		.byte	0x53
 4527 039d 00000000 		.4byte	0
 4528 03a1 00000000 		.4byte	0
 4529              	.LLST18:
 4530 03a5 AA010000 		.4byte	.LVL43-.Ltext0
 4531 03a9 C6010000 		.4byte	.LVL49-.Ltext0
 4532 03ad 0200     		.2byte	0x2
 4533 03af 30       		.byte	0x30
 4534 03b0 9F       		.byte	0x9f
 4535 03b1 0E020000 		.4byte	.LVL66-.Ltext0
 4536 03b5 1A020000 		.4byte	.LVL70-.Ltext0
 4537 03b9 0200     		.2byte	0x2
 4538 03bb 30       		.byte	0x30
 4539 03bc 9F       		.byte	0x9f
 4540 03bd 1A020000 		.4byte	.LVL70-.Ltext0
 4541 03c1 28020000 		.4byte	.LVL73-.Ltext0
 4542 03c5 0700     		.2byte	0x7
 4543 03c7 72       		.byte	0x72
 4544 03c8 00       		.sleb128 0
 4545 03c9 40       		.byte	0x40
 4546 03ca 3C       		.byte	0x3c
 4547 03cb 24       		.byte	0x24
 4548 03cc 1A       		.byte	0x1a
 4549 03cd 9F       		.byte	0x9f
 4550 03ce 3C020000 		.4byte	.LVL75-.Ltext0
 4551 03d2 3E020000 		.4byte	.LVL76-.Ltext0
 4552 03d6 0700     		.2byte	0x7
 4553 03d8 72       		.byte	0x72
 4554 03d9 00       		.sleb128 0
 4555 03da 40       		.byte	0x40
 4556 03db 3C       		.byte	0x3c
 4557 03dc 24       		.byte	0x24
 4558 03dd 1A       		.byte	0x1a
 4559 03de 9F       		.byte	0x9f
ARM GAS  /tmp/ccZsv2Jc.s 			page 107


 4560 03df 00000000 		.4byte	0
 4561 03e3 00000000 		.4byte	0
 4562              	.LLST19:
 4563 03e7 AA010000 		.4byte	.LVL43-.Ltext0
 4564 03eb D4010000 		.4byte	.LVL53-.Ltext0
 4565 03ef 0200     		.2byte	0x2
 4566 03f1 30       		.byte	0x30
 4567 03f2 9F       		.byte	0x9f
 4568 03f3 D4010000 		.4byte	.LVL53-.Ltext0
 4569 03f7 DC010000 		.4byte	.LVL54-.Ltext0
 4570 03fb 0600     		.2byte	0x6
 4571 03fd 71       		.byte	0x71
 4572 03fe 00       		.sleb128 0
 4573 03ff 08       		.byte	0x8
 4574 0400 FF       		.byte	0xff
 4575 0401 1A       		.byte	0x1a
 4576 0402 9F       		.byte	0x9f
 4577 0403 E4010000 		.4byte	.LVL57-.Ltext0
 4578 0407 E8010000 		.4byte	.LVL58-.Ltext0
 4579 040b 0600     		.2byte	0x6
 4580 040d 71       		.byte	0x71
 4581 040e 00       		.sleb128 0
 4582 040f 08       		.byte	0x8
 4583 0410 FF       		.byte	0xff
 4584 0411 1A       		.byte	0x1a
 4585 0412 9F       		.byte	0x9f
 4586 0413 F4010000 		.4byte	.LVL62-.Ltext0
 4587 0417 FA010000 		.4byte	.LVL63-.Ltext0
 4588 041b 0600     		.2byte	0x6
 4589 041d 71       		.byte	0x71
 4590 041e 00       		.sleb128 0
 4591 041f 08       		.byte	0x8
 4592 0420 FF       		.byte	0xff
 4593 0421 1A       		.byte	0x1a
 4594 0422 9F       		.byte	0x9f
 4595 0423 04020000 		.4byte	.LVL65-.Ltext0
 4596 0427 0E020000 		.4byte	.LVL66-.Ltext0
 4597 042b 0600     		.2byte	0x6
 4598 042d 72       		.byte	0x72
 4599 042e 00       		.sleb128 0
 4600 042f 08       		.byte	0x8
 4601 0430 FF       		.byte	0xff
 4602 0431 1A       		.byte	0x1a
 4603 0432 9F       		.byte	0x9f
 4604 0433 0E020000 		.4byte	.LVL66-.Ltext0
 4605 0437 58020000 		.4byte	.LFE83-.Ltext0
 4606 043b 0200     		.2byte	0x2
 4607 043d 30       		.byte	0x30
 4608 043e 9F       		.byte	0x9f
 4609 043f 00000000 		.4byte	0
 4610 0443 00000000 		.4byte	0
 4611              	.LLST15:
 4612 0447 8C010000 		.4byte	.LVL39-.Ltext0
 4613 044b 92010000 		.4byte	.LVL40-.Ltext0
 4614 044f 0100     		.2byte	0x1
 4615 0451 50       		.byte	0x50
 4616 0452 92010000 		.4byte	.LVL40-.Ltext0
ARM GAS  /tmp/ccZsv2Jc.s 			page 108


 4617 0456 9C010000 		.4byte	.LFE81-.Ltext0
 4618 045a 0400     		.2byte	0x4
 4619 045c F3       		.byte	0xf3
 4620 045d 01       		.uleb128 0x1
 4621 045e 50       		.byte	0x50
 4622 045f 9F       		.byte	0x9f
 4623 0460 00000000 		.4byte	0
 4624 0464 00000000 		.4byte	0
 4625              	.LLST13:
 4626 0468 44010000 		.4byte	.LVL33-.Ltext0
 4627 046c 4E010000 		.4byte	.LVL36-.Ltext0
 4628 0470 0100     		.2byte	0x1
 4629 0472 50       		.byte	0x50
 4630 0473 4E010000 		.4byte	.LVL36-.Ltext0
 4631 0477 58010000 		.4byte	.LFE78-.Ltext0
 4632 047b 0400     		.2byte	0x4
 4633 047d F3       		.byte	0xf3
 4634 047e 01       		.uleb128 0x1
 4635 047f 50       		.byte	0x50
 4636 0480 9F       		.byte	0x9f
 4637 0481 00000000 		.4byte	0
 4638 0485 00000000 		.4byte	0
 4639              	.LLST14:
 4640 0489 44010000 		.4byte	.LVL33-.Ltext0
 4641 048d 48010000 		.4byte	.LVL34-.Ltext0
 4642 0491 0200     		.2byte	0x2
 4643 0493 30       		.byte	0x30
 4644 0494 9F       		.byte	0x9f
 4645 0495 48010000 		.4byte	.LVL34-.Ltext0
 4646 0499 4E010000 		.4byte	.LVL36-.Ltext0
 4647 049d 0100     		.2byte	0x1
 4648 049f 53       		.byte	0x53
 4649 04a0 4E010000 		.4byte	.LVL36-.Ltext0
 4650 04a4 58010000 		.4byte	.LFE78-.Ltext0
 4651 04a8 0100     		.2byte	0x1
 4652 04aa 50       		.byte	0x50
 4653 04ab 00000000 		.4byte	0
 4654 04af 00000000 		.4byte	0
 4655              	.LLST12:
 4656 04b3 1C010000 		.4byte	.LVL28-.Ltext0
 4657 04b7 26010000 		.4byte	.LVL29-.Ltext0
 4658 04bb 0100     		.2byte	0x1
 4659 04bd 50       		.byte	0x50
 4660 04be 26010000 		.4byte	.LVL29-.Ltext0
 4661 04c2 2A010000 		.4byte	.LVL30-.Ltext0
 4662 04c6 0400     		.2byte	0x4
 4663 04c8 F3       		.byte	0xf3
 4664 04c9 01       		.uleb128 0x1
 4665 04ca 50       		.byte	0x50
 4666 04cb 9F       		.byte	0x9f
 4667 04cc 2A010000 		.4byte	.LVL30-.Ltext0
 4668 04d0 30010000 		.4byte	.LVL31-.Ltext0
 4669 04d4 0100     		.2byte	0x1
 4670 04d6 50       		.byte	0x50
 4671 04d7 30010000 		.4byte	.LVL31-.Ltext0
 4672 04db 38010000 		.4byte	.LFE76-.Ltext0
 4673 04df 0400     		.2byte	0x4
ARM GAS  /tmp/ccZsv2Jc.s 			page 109


 4674 04e1 F3       		.byte	0xf3
 4675 04e2 01       		.uleb128 0x1
 4676 04e3 50       		.byte	0x50
 4677 04e4 9F       		.byte	0x9f
 4678 04e5 00000000 		.4byte	0
 4679 04e9 00000000 		.4byte	0
 4680              	.LLST10:
 4681 04ed 08010000 		.4byte	.LVL24-.Ltext0
 4682 04f1 14010000 		.4byte	.LVL27-.Ltext0
 4683 04f5 0100     		.2byte	0x1
 4684 04f7 50       		.byte	0x50
 4685 04f8 14010000 		.4byte	.LVL27-.Ltext0
 4686 04fc 1C010000 		.4byte	.LFE75-.Ltext0
 4687 0500 0400     		.2byte	0x4
 4688 0502 F3       		.byte	0xf3
 4689 0503 01       		.uleb128 0x1
 4690 0504 50       		.byte	0x50
 4691 0505 9F       		.byte	0x9f
 4692 0506 00000000 		.4byte	0
 4693 050a 00000000 		.4byte	0
 4694              	.LLST11:
 4695 050e 08010000 		.4byte	.LVL24-.Ltext0
 4696 0512 0C010000 		.4byte	.LVL25-.Ltext0
 4697 0516 0200     		.2byte	0x2
 4698 0518 30       		.byte	0x30
 4699 0519 9F       		.byte	0x9f
 4700 051a 0C010000 		.4byte	.LVL25-.Ltext0
 4701 051e 14010000 		.4byte	.LVL27-.Ltext0
 4702 0522 0100     		.2byte	0x1
 4703 0524 53       		.byte	0x53
 4704 0525 14010000 		.4byte	.LVL27-.Ltext0
 4705 0529 1C010000 		.4byte	.LFE75-.Ltext0
 4706 052d 0100     		.2byte	0x1
 4707 052f 50       		.byte	0x50
 4708 0530 00000000 		.4byte	0
 4709 0534 00000000 		.4byte	0
 4710              	.LLST8:
 4711 0538 F4000000 		.4byte	.LVL20-.Ltext0
 4712 053c FE000000 		.4byte	.LVL23-.Ltext0
 4713 0540 0100     		.2byte	0x1
 4714 0542 50       		.byte	0x50
 4715 0543 FE000000 		.4byte	.LVL23-.Ltext0
 4716 0547 08010000 		.4byte	.LFE74-.Ltext0
 4717 054b 0400     		.2byte	0x4
 4718 054d F3       		.byte	0xf3
 4719 054e 01       		.uleb128 0x1
 4720 054f 50       		.byte	0x50
 4721 0550 9F       		.byte	0x9f
 4722 0551 00000000 		.4byte	0
 4723 0555 00000000 		.4byte	0
 4724              	.LLST9:
 4725 0559 F4000000 		.4byte	.LVL20-.Ltext0
 4726 055d F8000000 		.4byte	.LVL21-.Ltext0
 4727 0561 0200     		.2byte	0x2
 4728 0563 30       		.byte	0x30
 4729 0564 9F       		.byte	0x9f
 4730 0565 F8000000 		.4byte	.LVL21-.Ltext0
ARM GAS  /tmp/ccZsv2Jc.s 			page 110


 4731 0569 FE000000 		.4byte	.LVL23-.Ltext0
 4732 056d 0100     		.2byte	0x1
 4733 056f 53       		.byte	0x53
 4734 0570 FE000000 		.4byte	.LVL23-.Ltext0
 4735 0574 08010000 		.4byte	.LFE74-.Ltext0
 4736 0578 0100     		.2byte	0x1
 4737 057a 50       		.byte	0x50
 4738 057b 00000000 		.4byte	0
 4739 057f 00000000 		.4byte	0
 4740              	.LLST6:
 4741 0583 E0000000 		.4byte	.LVL16-.Ltext0
 4742 0587 EA000000 		.4byte	.LVL19-.Ltext0
 4743 058b 0100     		.2byte	0x1
 4744 058d 50       		.byte	0x50
 4745 058e EA000000 		.4byte	.LVL19-.Ltext0
 4746 0592 F4000000 		.4byte	.LFE73-.Ltext0
 4747 0596 0400     		.2byte	0x4
 4748 0598 F3       		.byte	0xf3
 4749 0599 01       		.uleb128 0x1
 4750 059a 50       		.byte	0x50
 4751 059b 9F       		.byte	0x9f
 4752 059c 00000000 		.4byte	0
 4753 05a0 00000000 		.4byte	0
 4754              	.LLST7:
 4755 05a4 E0000000 		.4byte	.LVL16-.Ltext0
 4756 05a8 E4000000 		.4byte	.LVL17-.Ltext0
 4757 05ac 0200     		.2byte	0x2
 4758 05ae 30       		.byte	0x30
 4759 05af 9F       		.byte	0x9f
 4760 05b0 E4000000 		.4byte	.LVL17-.Ltext0
 4761 05b4 EA000000 		.4byte	.LVL19-.Ltext0
 4762 05b8 0100     		.2byte	0x1
 4763 05ba 53       		.byte	0x53
 4764 05bb EA000000 		.4byte	.LVL19-.Ltext0
 4765 05bf F4000000 		.4byte	.LFE73-.Ltext0
 4766 05c3 0100     		.2byte	0x1
 4767 05c5 50       		.byte	0x50
 4768 05c6 00000000 		.4byte	0
 4769 05ca 00000000 		.4byte	0
 4770              	.LLST4:
 4771 05ce BC000000 		.4byte	.LVL12-.Ltext0
 4772 05d2 C6000000 		.4byte	.LVL15-.Ltext0
 4773 05d6 0100     		.2byte	0x1
 4774 05d8 50       		.byte	0x50
 4775 05d9 C6000000 		.4byte	.LVL15-.Ltext0
 4776 05dd D0000000 		.4byte	.LFE71-.Ltext0
 4777 05e1 0400     		.2byte	0x4
 4778 05e3 F3       		.byte	0xf3
 4779 05e4 01       		.uleb128 0x1
 4780 05e5 50       		.byte	0x50
 4781 05e6 9F       		.byte	0x9f
 4782 05e7 00000000 		.4byte	0
 4783 05eb 00000000 		.4byte	0
 4784              	.LLST5:
 4785 05ef BC000000 		.4byte	.LVL12-.Ltext0
 4786 05f3 C0000000 		.4byte	.LVL13-.Ltext0
 4787 05f7 0200     		.2byte	0x2
ARM GAS  /tmp/ccZsv2Jc.s 			page 111


 4788 05f9 30       		.byte	0x30
 4789 05fa 9F       		.byte	0x9f
 4790 05fb C0000000 		.4byte	.LVL13-.Ltext0
 4791 05ff C6000000 		.4byte	.LVL15-.Ltext0
 4792 0603 0100     		.2byte	0x1
 4793 0605 53       		.byte	0x53
 4794 0606 C6000000 		.4byte	.LVL15-.Ltext0
 4795 060a D0000000 		.4byte	.LFE71-.Ltext0
 4796 060e 0100     		.2byte	0x1
 4797 0610 50       		.byte	0x50
 4798 0611 00000000 		.4byte	0
 4799 0615 00000000 		.4byte	0
 4800              	.LLST2:
 4801 0619 9C000000 		.4byte	.LVL6-.Ltext0
 4802 061d A6000000 		.4byte	.LVL9-.Ltext0
 4803 0621 0100     		.2byte	0x1
 4804 0623 51       		.byte	0x51
 4805 0624 A6000000 		.4byte	.LVL9-.Ltext0
 4806 0628 B0000000 		.4byte	.LFE69-.Ltext0
 4807 062c 0400     		.2byte	0x4
 4808 062e F3       		.byte	0xf3
 4809 062f 01       		.uleb128 0x1
 4810 0630 51       		.byte	0x51
 4811 0631 9F       		.byte	0x9f
 4812 0632 00000000 		.4byte	0
 4813 0636 00000000 		.4byte	0
 4814              	.LLST3:
 4815 063a 9C000000 		.4byte	.LVL6-.Ltext0
 4816 063e A0000000 		.4byte	.LVL7-.Ltext0
 4817 0642 0200     		.2byte	0x2
 4818 0644 30       		.byte	0x30
 4819 0645 9F       		.byte	0x9f
 4820 0646 A0000000 		.4byte	.LVL7-.Ltext0
 4821 064a A4000000 		.4byte	.LVL8-.Ltext0
 4822 064e 0900     		.2byte	0x9
 4823 0650 73       		.byte	0x73
 4824 0651 00       		.sleb128 0
 4825 0652 11       		.byte	0x11
 4826 0653 FFFF837E 		.sleb128 -4128769
 4827 0657 1A       		.byte	0x1a
 4828 0658 9F       		.byte	0x9f
 4829 0659 A4000000 		.4byte	.LVL8-.Ltext0
 4830 065d A8000000 		.4byte	.LVL10-.Ltext0
 4831 0661 0100     		.2byte	0x1
 4832 0663 53       		.byte	0x53
 4833 0664 A8000000 		.4byte	.LVL10-.Ltext0
 4834 0668 B0000000 		.4byte	.LFE69-.Ltext0
 4835 066c 0100     		.2byte	0x1
 4836 066e 51       		.byte	0x51
 4837 066f 00000000 		.4byte	0
 4838 0673 00000000 		.4byte	0
 4839              	.LLST0:
 4840 0677 7C000000 		.4byte	.LVL1-.Ltext0
 4841 067b 88000000 		.4byte	.LVL4-.Ltext0
 4842 067f 0100     		.2byte	0x1
 4843 0681 50       		.byte	0x50
 4844 0682 88000000 		.4byte	.LVL4-.Ltext0
ARM GAS  /tmp/ccZsv2Jc.s 			page 112


 4845 0686 90000000 		.4byte	.LFE67-.Ltext0
 4846 068a 0400     		.2byte	0x4
 4847 068c F3       		.byte	0xf3
 4848 068d 01       		.uleb128 0x1
 4849 068e 50       		.byte	0x50
 4850 068f 9F       		.byte	0x9f
 4851 0690 00000000 		.4byte	0
 4852 0694 00000000 		.4byte	0
 4853              	.LLST1:
 4854 0698 7C000000 		.4byte	.LVL1-.Ltext0
 4855 069c 80000000 		.4byte	.LVL2-.Ltext0
 4856 06a0 0200     		.2byte	0x2
 4857 06a2 30       		.byte	0x30
 4858 06a3 9F       		.byte	0x9f
 4859 06a4 80000000 		.4byte	.LVL2-.Ltext0
 4860 06a8 88000000 		.4byte	.LVL4-.Ltext0
 4861 06ac 0100     		.2byte	0x1
 4862 06ae 53       		.byte	0x53
 4863 06af 88000000 		.4byte	.LVL4-.Ltext0
 4864 06b3 90000000 		.4byte	.LFE67-.Ltext0
 4865 06b7 0100     		.2byte	0x1
 4866 06b9 50       		.byte	0x50
 4867 06ba 00000000 		.4byte	0
 4868 06be 00000000 		.4byte	0
 4869              	.LLST29:
 4870 06c2 38030000 		.4byte	.LVL110-.Ltext0
 4871 06c6 58030000 		.4byte	.LVL114-.Ltext0
 4872 06ca 0200     		.2byte	0x2
 4873 06cc 30       		.byte	0x30
 4874 06cd 9F       		.byte	0x9f
 4875 06ce 58030000 		.4byte	.LVL114-.Ltext0
 4876 06d2 5A030000 		.4byte	.LVL115-.Ltext0
 4877 06d6 0700     		.2byte	0x7
 4878 06d8 70       		.byte	0x70
 4879 06d9 00       		.sleb128 0
 4880 06da 48       		.byte	0x48
 4881 06db 24       		.byte	0x24
 4882 06dc 30       		.byte	0x30
 4883 06dd 2E       		.byte	0x2e
 4884 06de 9F       		.byte	0x9f
 4885 06df 00000000 		.4byte	0
 4886 06e3 00000000 		.4byte	0
 4887              	.LLST30:
 4888 06e7 38030000 		.4byte	.LVL110-.Ltext0
 4889 06eb 3A030000 		.4byte	.LVL111-.Ltext0
 4890 06ef 0200     		.2byte	0x2
 4891 06f1 30       		.byte	0x30
 4892 06f2 9F       		.byte	0x9f
 4893 06f3 40030000 		.4byte	.LVL112-.Ltext0
 4894 06f7 54030000 		.4byte	.LVL113-.Ltext0
 4895 06fb 0100     		.2byte	0x1
 4896 06fd 50       		.byte	0x50
 4897 06fe 00000000 		.4byte	0
 4898 0702 00000000 		.4byte	0
 4899              		.section	.debug_aranges,"",%progbits
 4900 0000 1C000000 		.4byte	0x1c
 4901 0004 0200     		.2byte	0x2
ARM GAS  /tmp/ccZsv2Jc.s 			page 113


 4902 0006 00000000 		.4byte	.Ldebug_info0
 4903 000a 04       		.byte	0x4
 4904 000b 00       		.byte	0
 4905 000c 0000     		.2byte	0
 4906 000e 0000     		.2byte	0
 4907 0010 00000000 		.4byte	.Ltext0
 4908 0014 94030000 		.4byte	.Letext0-.Ltext0
 4909 0018 00000000 		.4byte	0
 4910 001c 00000000 		.4byte	0
 4911              		.section	.debug_line,"",%progbits
 4912              	.Ldebug_line0:
 4913 0000 9E020000 		.section	.debug_str,"MS",%progbits,1
 4913      02007701 
 4913      00000201 
 4913      FB0E0D00 
 4913      01010101 
 4914              	.LASF72:
 4915 0000 5F64736F 		.ascii	"_dso_handle\000"
 4915      5F68616E 
 4915      646C6500 
 4916              	.LASF203:
 4917 000c 5243435F 		.ascii	"RCC_HCLK\000"
 4917      48434C4B 
 4917      00
 4918              	.LASF46:
 4919 0015 5F66706F 		.ascii	"_fpos_t\000"
 4919      735F7400 
 4920              	.LASF195:
 4921 001d 5243435F 		.ascii	"RCC_LSE\000"
 4921      4C534500 
 4922              	.LASF81:
 4923 0025 5F5F7346 		.ascii	"__sFILE\000"
 4923      494C4500 
 4924              	.LASF71:
 4925 002d 5F666E61 		.ascii	"_fnargs\000"
 4925      72677300 
 4926              	.LASF43:
 4927 0035 6C6F6E67 		.ascii	"long double\000"
 4927      20646F75 
 4927      626C6500 
 4928              	.LASF125:
 4929 0041 5F72616E 		.ascii	"_rand48\000"
 4929      64343800 
 4930              	.LASF170:
 4931 0049 73746174 		.ascii	"statusreg\000"
 4931      75737265 
 4931      6700
 4932              	.LASF158:
 4933 0053 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 4933      6C69626D 
 4933      5F786F70 
 4933      656E00
 4934              	.LASF21:
 4935 0062 466C6167 		.ascii	"FlagStatus\000"
 4935      53746174 
 4935      757300
 4936              	.LASF104:
ARM GAS  /tmp/ccZsv2Jc.s 			page 114


 4937 006d 5F656D65 		.ascii	"_emergency\000"
 4937      7267656E 
 4937      637900
 4938              	.LASF182:
 4939 0078 5243435F 		.ascii	"RCC_APB2PeriphClockCmd\000"
 4939      41504232 
 4939      50657269 
 4939      7068436C 
 4939      6F636B43 
 4940              	.LASF3:
 4941 008f 5F5F7569 		.ascii	"__uint8_t\000"
 4941      6E74385F 
 4941      7400
 4942              	.LASF141:
 4943 0099 5F676574 		.ascii	"_getdate_err\000"
 4943      64617465 
 4943      5F657272 
 4943      00
 4944              	.LASF116:
 4945 00a6 5F617465 		.ascii	"_atexit0\000"
 4945      78697430 
 4945      00
 4946              	.LASF172:
 4947 00af 5243435F 		.ascii	"RCC_MCOConfig\000"
 4947      4D434F43 
 4947      6F6E6669 
 4947      6700
 4948              	.LASF177:
 4949 00bd 5243435F 		.ascii	"RCC_APB1PeriphResetCmd\000"
 4949      41504231 
 4949      50657269 
 4949      70685265 
 4949      73657443 
 4950              	.LASF145:
 4951 00d4 5F776372 		.ascii	"_wcrtomb_state\000"
 4951      746F6D62 
 4951      5F737461 
 4951      746500
 4952              	.LASF146:
 4953 00e3 5F776373 		.ascii	"_wcsrtombs_state\000"
 4953      72746F6D 
 4953      62735F73 
 4953      74617465 
 4953      00
 4954              	.LASF171:
 4955 00f4 5243435F 		.ascii	"RCC_ClearITPendingBit\000"
 4955      436C6561 
 4955      72495450 
 4955      656E6469 
 4955      6E674269 
 4956              	.LASF11:
 4957 010a 6C6F6E67 		.ascii	"long long unsigned int\000"
 4957      206C6F6E 
 4957      6720756E 
 4957      7369676E 
 4957      65642069 
 4958              	.LASF159:
ARM GAS  /tmp/ccZsv2Jc.s 			page 115


 4959 0121 5F5F6664 		.ascii	"__fdlibm_posix\000"
 4959      6C69626D 
 4959      5F706F73 
 4959      697800
 4960              	.LASF84:
 4961 0130 5F6C6266 		.ascii	"_lbfsize\000"
 4961      73697A65 
 4961      00
 4962              	.LASF16:
 4963 0139 75696E74 		.ascii	"uint32_t\000"
 4963      33325F74 
 4963      00
 4964              	.LASF18:
 4965 0142 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4965      52784275 
 4965      66666572 
 4965      00
 4966              	.LASF160:
 4967 014f 5F5F6664 		.ascii	"__fdlib_version\000"
 4967      6C69625F 
 4967      76657273 
 4967      696F6E00 
 4968              	.LASF143:
 4969 015f 5F6D6272 		.ascii	"_mbrtowc_state\000"
 4969      746F7763 
 4969      5F737461 
 4969      746500
 4970              	.LASF186:
 4971 016e 5243435F 		.ascii	"RCC_Clocks\000"
 4971      436C6F63 
 4971      6B7300
 4972              	.LASF138:
 4973 0179 5F776374 		.ascii	"_wctomb_state\000"
 4973      6F6D625F 
 4973      73746174 
 4973      6500
 4974              	.LASF61:
 4975 0187 5F5F746D 		.ascii	"__tm_sec\000"
 4975      5F736563 
 4975      00
 4976              	.LASF45:
 4977 0190 5F6F6666 		.ascii	"_off_t\000"
 4977      5F7400
 4978              	.LASF89:
 4979 0197 5F636C6F 		.ascii	"_close\000"
 4979      736500
 4980              	.LASF0:
 4981 019e 7369676E 		.ascii	"signed char\000"
 4981      65642063 
 4981      68617200 
 4982              	.LASF165:
 4983 01aa 5243435F 		.ascii	"RCC_IT\000"
 4983      495400
 4984              	.LASF90:
 4985 01b1 5F756275 		.ascii	"_ubuf\000"
 4985      6600
 4986              	.LASF178:
ARM GAS  /tmp/ccZsv2Jc.s 			page 116


 4987 01b7 5243435F 		.ascii	"RCC_APB1Periph\000"
 4987      41504231 
 4987      50657269 
 4987      706800
 4988              	.LASF79:
 4989 01c6 5F626173 		.ascii	"_base\000"
 4989      6500
 4990              	.LASF31:
 4991 01cc 41504231 		.ascii	"APB1RSTR\000"
 4991      52535452 
 4991      00
 4992              	.LASF119:
 4993 01d5 5F5F7366 		.ascii	"__sf\000"
 4993      00
 4994              	.LASF70:
 4995 01da 5F6F6E5F 		.ascii	"_on_exit_args\000"
 4995      65786974 
 4995      5F617267 
 4995      7300
 4996              	.LASF187:
 4997 01e8 706C6C6D 		.ascii	"pllmull\000"
 4997      756C6C00 
 4998              	.LASF198:
 4999 01f0 746D7072 		.ascii	"tmpreg\000"
 4999      656700
 5000              	.LASF85:
 5001 01f7 5F636F6F 		.ascii	"_cookie\000"
 5001      6B696500 
 5002              	.LASF40:
 5003 01ff 50434C4B 		.ascii	"PCLK2_Frequency\000"
 5003      325F4672 
 5003      65717565 
 5003      6E637900 
 5004              	.LASF118:
 5005 020f 5F5F7367 		.ascii	"__sglue\000"
 5005      6C756500 
 5006              	.LASF7:
 5007 0217 6C6F6E67 		.ascii	"long int\000"
 5007      20696E74 
 5007      00
 5008              	.LASF24:
 5009 0220 454E4142 		.ascii	"ENABLE\000"
 5009      4C4500
 5010              	.LASF30:
 5011 0227 41504232 		.ascii	"APB2RSTR\000"
 5011      52535452 
 5011      00
 5012              	.LASF82:
 5013 0230 5F666C61 		.ascii	"_flags\000"
 5013      677300
 5014              	.LASF74:
 5015 0237 5F69735F 		.ascii	"_is_cxa\000"
 5015      63786100 
 5016              	.LASF204:
 5017 023f 5243435F 		.ascii	"RCC_PCLK1Config\000"
 5017      50434C4B 
 5017      31436F6E 
ARM GAS  /tmp/ccZsv2Jc.s 			page 117


 5017      66696700 
 5018              	.LASF157:
 5019 024f 5F5F6664 		.ascii	"__fdlibm_svid\000"
 5019      6C69626D 
 5019      5F737669 
 5019      6400
 5020              	.LASF110:
 5021 025d 5F726573 		.ascii	"_result_k\000"
 5021      756C745F 
 5021      6B00
 5022              	.LASF205:
 5023 0267 5243435F 		.ascii	"RCC_HCLKConfig\000"
 5023      48434C4B 
 5023      436F6E66 
 5023      696700
 5024              	.LASF10:
 5025 0276 6C6F6E67 		.ascii	"long long int\000"
 5025      206C6F6E 
 5025      6720696E 
 5025      7400
 5026              	.LASF207:
 5027 0284 5243435F 		.ascii	"RCC_SYSCLKConfig\000"
 5027      53595343 
 5027      4C4B436F 
 5027      6E666967 
 5027      00
 5028              	.LASF14:
 5029 0295 75696E74 		.ascii	"uint16_t\000"
 5029      31365F74 
 5029      00
 5030              	.LASF161:
 5031 029e 5F737973 		.ascii	"_sys_errlist\000"
 5031      5F657272 
 5031      6C697374 
 5031      00
 5032              	.LASF194:
 5033 02ab 5243435F 		.ascii	"RCC_LSEConfig\000"
 5033      4C534543 
 5033      6F6E6669 
 5033      6700
 5034              	.LASF169:
 5035 02b9 5243435F 		.ascii	"RCC_FLAG\000"
 5035      464C4147 
 5035      00
 5036              	.LASF114:
 5037 02c2 5F637674 		.ascii	"_cvtbuf\000"
 5037      62756600 
 5038              	.LASF93:
 5039 02ca 5F6F6666 		.ascii	"_offset\000"
 5039      73657400 
 5040              	.LASF175:
 5041 02d2 4E657753 		.ascii	"NewState\000"
 5041      74617465 
 5041      00
 5042              	.LASF176:
 5043 02db 5243435F 		.ascii	"RCC_BackupResetCmd\000"
 5043      4261636B 
ARM GAS  /tmp/ccZsv2Jc.s 			page 118


 5043      75705265 
 5043      73657443 
 5043      6D6400
 5044              	.LASF130:
 5045 02ee 5F737472 		.ascii	"_strtok_last\000"
 5045      746F6B5F 
 5045      6C617374 
 5045      00
 5046              	.LASF142:
 5047 02fb 5F6D6272 		.ascii	"_mbrlen_state\000"
 5047      6C656E5F 
 5047      73746174 
 5047      6500
 5048              	.LASF144:
 5049 0309 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5049      72746F77 
 5049      63735F73 
 5049      74617465 
 5049      00
 5050              	.LASF41:
 5051 031a 41444343 		.ascii	"ADCCLK_Frequency\000"
 5051      4C4B5F46 
 5051      72657175 
 5051      656E6379 
 5051      00
 5052              	.LASF77:
 5053 032b 5F666E73 		.ascii	"_fns\000"
 5053      00
 5054              	.LASF8:
 5055 0330 5F5F7569 		.ascii	"__uint32_t\000"
 5055      6E743332 
 5055      5F7400
 5056              	.LASF28:
 5057 033b 4572726F 		.ascii	"ErrorStatus\000"
 5057      72537461 
 5057      74757300 
 5058              	.LASF211:
 5059 0347 5243435F 		.ascii	"RCC_PLLSource\000"
 5059      504C4C53 
 5059      6F757263 
 5059      6500
 5060              	.LASF228:
 5061 0355 5243435F 		.ascii	"RCC_GetSYSCLKSource\000"
 5061      47657453 
 5061      5953434C 
 5061      4B536F75 
 5061      72636500 
 5062              	.LASF151:
 5063 0369 5F696D70 		.ascii	"_impure_ptr\000"
 5063      7572655F 
 5063      70747200 
 5064              	.LASF102:
 5065 0375 5F737464 		.ascii	"_stderr\000"
 5065      65727200 
 5066              	.LASF59:
 5067 037d 5F426967 		.ascii	"_Bigint\000"
 5067      696E7400 
ARM GAS  /tmp/ccZsv2Jc.s 			page 119


 5068              	.LASF216:
 5069 0385 5243435F 		.ascii	"RCC_WaitForHSEStartUp\000"
 5069      57616974 
 5069      466F7248 
 5069      53455374 
 5069      61727455 
 5070              	.LASF166:
 5071 039b 62697473 		.ascii	"bitstatus\000"
 5071      74617475 
 5071      7300
 5072              	.LASF38:
 5073 03a5 48434C4B 		.ascii	"HCLK_Frequency\000"
 5073      5F467265 
 5073      7175656E 
 5073      637900
 5074              	.LASF86:
 5075 03b4 5F726561 		.ascii	"_read\000"
 5075      6400
 5076              	.LASF22:
 5077 03ba 49545374 		.ascii	"ITStatus\000"
 5077      61747573 
 5077      00
 5078              	.LASF60:
 5079 03c3 5F5F746D 		.ascii	"__tm\000"
 5079      00
 5080              	.LASF23:
 5081 03c8 44495341 		.ascii	"DISABLE\000"
 5081      424C4500 
 5082              	.LASF49:
 5083 03d0 5F5F7763 		.ascii	"__wchb\000"
 5083      686200
 5084              	.LASF29:
 5085 03d7 43464752 		.ascii	"CFGR\000"
 5085      00
 5086              	.LASF101:
 5087 03dc 5F737464 		.ascii	"_stdout\000"
 5087      6F757400 
 5088              	.LASF113:
 5089 03e4 5F637674 		.ascii	"_cvtlen\000"
 5089      6C656E00 
 5090              	.LASF9:
 5091 03ec 6C6F6E67 		.ascii	"long unsigned int\000"
 5091      20756E73 
 5091      69676E65 
 5091      6420696E 
 5091      7400
 5092              	.LASF206:
 5093 03fe 5243435F 		.ascii	"RCC_SYSCLK\000"
 5093      53595343 
 5093      4C4B00
 5094              	.LASF83:
 5095 0409 5F66696C 		.ascii	"_file\000"
 5095      6500
 5096              	.LASF37:
 5097 040f 53595343 		.ascii	"SYSCLK_Frequency\000"
 5097      4C4B5F46 
 5097      72657175 
ARM GAS  /tmp/ccZsv2Jc.s 			page 120


 5097      656E6379 
 5097      00
 5098              	.LASF36:
 5099 0420 5243435F 		.ascii	"RCC_TypeDef\000"
 5099      54797065 
 5099      44656600 
 5100              	.LASF189:
 5101 042c 70726573 		.ascii	"presc\000"
 5101      6300
 5102              	.LASF192:
 5103 0432 5243435F 		.ascii	"RCC_RTCCLKSource\000"
 5103      52544343 
 5103      4C4B536F 
 5103      75726365 
 5103      00
 5104              	.LASF94:
 5105 0443 5F646174 		.ascii	"_data\000"
 5105      6100
 5106              	.LASF225:
 5107 0449 6C69622F 		.ascii	"lib/src/stm32f10x_rcc.c\000"
 5107      7372632F 
 5107      73746D33 
 5107      32663130 
 5107      785F7263 
 5108              	.LASF123:
 5109 0461 5F6E696F 		.ascii	"_niobs\000"
 5109      627300
 5110              	.LASF134:
 5111 0468 5F72616E 		.ascii	"_rand_next\000"
 5111      645F6E65 
 5111      787400
 5112              	.LASF140:
 5113 0473 5F736967 		.ascii	"_signal_buf\000"
 5113      6E616C5F 
 5113      62756600 
 5114              	.LASF131:
 5115 047f 5F617363 		.ascii	"_asctime_buf\000"
 5115      74696D65 
 5115      5F627566 
 5115      00
 5116              	.LASF109:
 5117 048c 5F726573 		.ascii	"_result\000"
 5117      756C7400 
 5118              	.LASF48:
 5119 0494 5F5F7763 		.ascii	"__wch\000"
 5119      6800
 5120              	.LASF148:
 5121 049a 5F6E6578 		.ascii	"_nextf\000"
 5121      746600
 5122              	.LASF115:
 5123 04a1 5F6E6577 		.ascii	"_new\000"
 5123      00
 5124              	.LASF95:
 5125 04a6 5F6C6F63 		.ascii	"_lock\000"
 5125      6B00
 5126              	.LASF127:
 5127 04ac 5F6D756C 		.ascii	"_mult\000"
ARM GAS  /tmp/ccZsv2Jc.s 			page 121


 5127      7400
 5128              	.LASF164:
 5129 04b2 41444350 		.ascii	"ADCPrescTable\000"
 5129      72657363 
 5129      5461626C 
 5129      6500
 5130              	.LASF87:
 5131 04c0 5F777269 		.ascii	"_write\000"
 5131      746500
 5132              	.LASF66:
 5133 04c7 5F5F746D 		.ascii	"__tm_year\000"
 5133      5F796561 
 5133      7200
 5134              	.LASF50:
 5135 04d1 5F5F636F 		.ascii	"__count\000"
 5135      756E7400 
 5136              	.LASF149:
 5137 04d9 5F6E6D61 		.ascii	"_nmalloc\000"
 5137      6C6C6F63 
 5137      00
 5138              	.LASF190:
 5139 04e2 5243435F 		.ascii	"RCC_RTCCLKCmd\000"
 5139      52544343 
 5139      4C4B436D 
 5139      6400
 5140              	.LASF17:
 5141 04f0 73697A65 		.ascii	"sizetype\000"
 5141      74797065 
 5141      00
 5142              	.LASF26:
 5143 04f9 4552524F 		.ascii	"ERROR\000"
 5143      5200
 5144              	.LASF174:
 5145 04ff 5243435F 		.ascii	"RCC_ClockSecuritySystemCmd\000"
 5145      436C6F63 
 5145      6B536563 
 5145      75726974 
 5145      79537973 
 5146              	.LASF184:
 5147 051a 5243435F 		.ascii	"RCC_AHBPeriph\000"
 5147      41484250 
 5147      65726970 
 5147      6800
 5148              	.LASF58:
 5149 0528 5F776473 		.ascii	"_wds\000"
 5149      00
 5150              	.LASF135:
 5151 052d 5F723438 		.ascii	"_r48\000"
 5151      00
 5152              	.LASF181:
 5153 0532 5243435F 		.ascii	"RCC_APB1PeriphClockCmd\000"
 5153      41504231 
 5153      50657269 
 5153      7068436C 
 5153      6F636B43 
 5154              	.LASF25:
 5155 0549 46756E63 		.ascii	"FunctionalState\000"
ARM GAS  /tmp/ccZsv2Jc.s 			page 122


 5155      74696F6E 
 5155      616C5374 
 5155      61746500 
 5156              	.LASF65:
 5157 0559 5F5F746D 		.ascii	"__tm_mon\000"
 5157      5F6D6F6E 
 5157      00
 5158              	.LASF75:
 5159 0562 5F617465 		.ascii	"_atexit\000"
 5159      78697400 
 5160              	.LASF153:
 5161 056a 7375626F 		.ascii	"suboptarg\000"
 5161      70746172 
 5161      6700
 5162              	.LASF107:
 5163 0574 5F5F7364 		.ascii	"__sdidinit\000"
 5163      6964696E 
 5163      697400
 5164              	.LASF133:
 5165 057f 5F67616D 		.ascii	"_gamma_signgam\000"
 5165      6D615F73 
 5165      69676E67 
 5165      616D00
 5166              	.LASF179:
 5167 058e 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 5167      41504232 
 5167      50657269 
 5167      70685265 
 5167      73657443 
 5168              	.LASF196:
 5169 05a5 5243435F 		.ascii	"RCC_ADCCLKConfig\000"
 5169      41444343 
 5169      4C4B436F 
 5169      6E666967 
 5169      00
 5170              	.LASF47:
 5171 05b6 77696E74 		.ascii	"wint_t\000"
 5171      5F7400
 5172              	.LASF19:
 5173 05bd 53797374 		.ascii	"SystemCoreClock\000"
 5173      656D436F 
 5173      7265436C 
 5173      6F636B00 
 5174              	.LASF112:
 5175 05cd 5F667265 		.ascii	"_freelist\000"
 5175      656C6973 
 5175      7400
 5176              	.LASF44:
 5177 05d7 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5177      4B5F5245 
 5177      43555253 
 5177      4956455F 
 5177      5400
 5178              	.LASF193:
 5179 05e9 5243435F 		.ascii	"RCC_LSICmd\000"
 5179      4C534943 
 5179      6D6400
ARM GAS  /tmp/ccZsv2Jc.s 			page 123


 5180              	.LASF20:
 5181 05f4 52455345 		.ascii	"RESET\000"
 5181      5400
 5182              	.LASF220:
 5183 05fa 5243435F 		.ascii	"RCC_HSEConfig\000"
 5183      48534543 
 5183      6F6E6669 
 5183      6700
 5184              	.LASF15:
 5185 0608 696E7433 		.ascii	"int32_t\000"
 5185      325F7400 
 5186              	.LASF1:
 5187 0610 756E7369 		.ascii	"unsigned char\000"
 5187      676E6564 
 5187      20636861 
 5187      7200
 5188              	.LASF226:
 5189 061e 2F686F6D 		.ascii	"/home/faker/Documents/code/STM/stm32-quadrocopter\000"
 5189      652F6661 
 5189      6B65722F 
 5189      446F6375 
 5189      6D656E74 
 5190              	.LASF197:
 5191 0650 5243435F 		.ascii	"RCC_PCLK2\000"
 5191      50434C4B 
 5191      3200
 5192              	.LASF147:
 5193 065a 5F685F65 		.ascii	"_h_errno\000"
 5193      72726E6F 
 5193      00
 5194              	.LASF53:
 5195 0663 5F666C6F 		.ascii	"_flock_t\000"
 5195      636B5F74 
 5195      00
 5196              	.LASF68:
 5197 066c 5F5F746D 		.ascii	"__tm_yday\000"
 5197      5F796461 
 5197      7900
 5198              	.LASF78:
 5199 0676 5F5F7362 		.ascii	"__sbuf\000"
 5199      756600
 5200              	.LASF97:
 5201 067d 5F666C61 		.ascii	"_flags2\000"
 5201      67733200 
 5202              	.LASF124:
 5203 0685 5F696F62 		.ascii	"_iobs\000"
 5203      7300
 5204              	.LASF121:
 5205 068b 5F5F4649 		.ascii	"__FILE\000"
 5205      4C4500
 5206              	.LASF52:
 5207 0692 5F6D6273 		.ascii	"_mbstate_t\000"
 5207      74617465 
 5207      5F7400
 5208              	.LASF162:
 5209 069d 5F737973 		.ascii	"_sys_nerr\000"
 5209      5F6E6572 
ARM GAS  /tmp/ccZsv2Jc.s 			page 124


 5209      7200
 5210              	.LASF96:
 5211 06a7 5F6D6273 		.ascii	"_mbstate\000"
 5211      74617465 
 5211      00
 5212              	.LASF217:
 5213 06b0 53746172 		.ascii	"StartUpCounter\000"
 5213      74557043 
 5213      6F756E74 
 5213      657200
 5214              	.LASF136:
 5215 06bf 5F6D626C 		.ascii	"_mblen_state\000"
 5215      656E5F73 
 5215      74617465 
 5215      00
 5216              	.LASF103:
 5217 06cc 5F696E63 		.ascii	"_inc\000"
 5217      00
 5218              	.LASF76:
 5219 06d1 5F696E64 		.ascii	"_ind\000"
 5219      00
 5220              	.LASF33:
 5221 06d6 41504232 		.ascii	"APB2ENR\000"
 5221      454E5200 
 5222              	.LASF200:
 5223 06de 5243435F 		.ascii	"RCC_USBCLKSource\000"
 5223      55534243 
 5223      4C4B536F 
 5223      75726365 
 5223      00
 5224              	.LASF215:
 5225 06ef 48534943 		.ascii	"HSICalibrationValue\000"
 5225      616C6962 
 5225      72617469 
 5225      6F6E5661 
 5225      6C756500 
 5226              	.LASF209:
 5227 0703 5243435F 		.ascii	"RCC_PLLCmd\000"
 5227      504C4C43 
 5227      6D6400
 5228              	.LASF108:
 5229 070e 5F5F636C 		.ascii	"__cleanup\000"
 5229      65616E75 
 5229      7000
 5230              	.LASF56:
 5231 0718 5F6D6178 		.ascii	"_maxwds\000"
 5231      77647300 
 5232              	.LASF98:
 5233 0720 5F726565 		.ascii	"_reent\000"
 5233      6E7400
 5234              	.LASF202:
 5235 0727 5243435F 		.ascii	"RCC_PCLK2Config\000"
 5235      50434C4B 
 5235      32436F6E 
 5235      66696700 
 5236              	.LASF208:
 5237 0737 5243435F 		.ascii	"RCC_SYSCLKSource\000"
ARM GAS  /tmp/ccZsv2Jc.s 			page 125


 5237      53595343 
 5237      4C4B536F 
 5237      75726365 
 5237      00
 5238              	.LASF221:
 5239 0748 5243435F 		.ascii	"RCC_HSE\000"
 5239      48534500 
 5240              	.LASF51:
 5241 0750 5F5F7661 		.ascii	"__value\000"
 5241      6C756500 
 5242              	.LASF63:
 5243 0758 5F5F746D 		.ascii	"__tm_hour\000"
 5243      5F686F75 
 5243      7200
 5244              	.LASF39:
 5245 0762 50434C4B 		.ascii	"PCLK1_Frequency\000"
 5245      315F4672 
 5245      65717565 
 5245      6E637900 
 5246              	.LASF173:
 5247 0772 5243435F 		.ascii	"RCC_MCO\000"
 5247      4D434F00 
 5248              	.LASF67:
 5249 077a 5F5F746D 		.ascii	"__tm_wday\000"
 5249      5F776461 
 5249      7900
 5250              	.LASF163:
 5251 0784 41504241 		.ascii	"APBAHBPrescTable\000"
 5251      48425072 
 5251      65736354 
 5251      61626C65 
 5251      00
 5252              	.LASF214:
 5253 0795 5243435F 		.ascii	"RCC_AdjustHSICalibrationValue\000"
 5253      41646A75 
 5253      73744853 
 5253      4943616C 
 5253      69627261 
 5254              	.LASF155:
 5255 07b3 666C6F61 		.ascii	"float\000"
 5255      7400
 5256              	.LASF185:
 5257 07b9 5243435F 		.ascii	"RCC_GetClocksFreq\000"
 5257      47657443 
 5257      6C6F636B 
 5257      73467265 
 5257      7100
 5258              	.LASF99:
 5259 07cb 5F657272 		.ascii	"_errno\000"
 5259      6E6F00
 5260              	.LASF120:
 5261 07d2 63686172 		.ascii	"char\000"
 5261      00
 5262              	.LASF92:
 5263 07d7 5F626C6B 		.ascii	"_blksize\000"
 5263      73697A65 
 5263      00
ARM GAS  /tmp/ccZsv2Jc.s 			page 126


 5264              	.LASF80:
 5265 07e0 5F73697A 		.ascii	"_size\000"
 5265      6500
 5266              	.LASF12:
 5267 07e6 756E7369 		.ascii	"unsigned int\000"
 5267      676E6564 
 5267      20696E74 
 5267      00
 5268              	.LASF4:
 5269 07f3 5F5F7569 		.ascii	"__uint16_t\000"
 5269      6E743136 
 5269      5F7400
 5270              	.LASF223:
 5271 07fe 5243435F 		.ascii	"RCC_DeInit\000"
 5271      4465496E 
 5271      697400
 5272              	.LASF2:
 5273 0809 73686F72 		.ascii	"short int\000"
 5273      7420696E 
 5273      7400
 5274              	.LASF6:
 5275 0813 5F5F696E 		.ascii	"__int32_t\000"
 5275      7433325F 
 5275      7400
 5276              	.LASF57:
 5277 081d 5F736967 		.ascii	"_sign\000"
 5277      6E00
 5278              	.LASF167:
 5279 0823 5243435F 		.ascii	"RCC_GetITStatus\000"
 5279      47657449 
 5279      54537461 
 5279      74757300 
 5280              	.LASF55:
 5281 0833 5F6E6578 		.ascii	"_next\000"
 5281      7400
 5282              	.LASF88:
 5283 0839 5F736565 		.ascii	"_seek\000"
 5283      6B00
 5284              	.LASF34:
 5285 083f 41504231 		.ascii	"APB1ENR\000"
 5285      454E5200 
 5286              	.LASF73:
 5287 0847 5F666E74 		.ascii	"_fntypes\000"
 5287      79706573 
 5287      00
 5288              	.LASF168:
 5289 0850 5243435F 		.ascii	"RCC_GetFlagStatus\000"
 5289      47657446 
 5289      6C616753 
 5289      74617475 
 5289      7300
 5290              	.LASF5:
 5291 0862 73686F72 		.ascii	"short unsigned int\000"
 5291      7420756E 
 5291      7369676E 
 5291      65642069 
 5291      6E7400
ARM GAS  /tmp/ccZsv2Jc.s 			page 127


 5292              	.LASF213:
 5293 0875 5243435F 		.ascii	"RCC_HSICmd\000"
 5293      48534943 
 5293      6D6400
 5294              	.LASF219:
 5295 0880 48534553 		.ascii	"HSEStatus\000"
 5295      74617475 
 5295      7300
 5296              	.LASF180:
 5297 088a 5243435F 		.ascii	"RCC_APB2Periph\000"
 5297      41504232 
 5297      50657269 
 5297      706800
 5298              	.LASF128:
 5299 0899 5F616464 		.ascii	"_add\000"
 5299      00
 5300              	.LASF54:
 5301 089e 5F5F554C 		.ascii	"__ULong\000"
 5301      6F6E6700 
 5302              	.LASF126:
 5303 08a6 5F736565 		.ascii	"_seed\000"
 5303      6400
 5304              	.LASF227:
 5305 08ac 5F5F6664 		.ascii	"__fdlibm_version\000"
 5305      6C69626D 
 5305      5F766572 
 5305      73696F6E 
 5305      00
 5306              	.LASF152:
 5307 08bd 5F676C6F 		.ascii	"_global_impure_ptr\000"
 5307      62616C5F 
 5307      696D7075 
 5307      72655F70 
 5307      747200
 5308              	.LASF105:
 5309 08d0 5F637572 		.ascii	"_current_category\000"
 5309      72656E74 
 5309      5F636174 
 5309      65676F72 
 5309      7900
 5310              	.LASF156:
 5311 08e2 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 5311      6C69626D 
 5311      5F696565 
 5311      6500
 5312              	.LASF129:
 5313 08f0 5F756E75 		.ascii	"_unused_rand\000"
 5313      7365645F 
 5313      72616E64 
 5313      00
 5314              	.LASF218:
 5315 08fd 73746174 		.ascii	"status\000"
 5315      757300
 5316              	.LASF35:
 5317 0904 42444352 		.ascii	"BDCR\000"
 5317      00
 5318              	.LASF122:
ARM GAS  /tmp/ccZsv2Jc.s 			page 128


 5319 0909 5F676C75 		.ascii	"_glue\000"
 5319      6500
 5320              	.LASF201:
 5321 090f 5243435F 		.ascii	"RCC_ITConfig\000"
 5321      4954436F 
 5321      6E666967 
 5321      00
 5322              	.LASF100:
 5323 091c 5F737464 		.ascii	"_stdin\000"
 5323      696E00
 5324              	.LASF13:
 5325 0923 75696E74 		.ascii	"uint8_t\000"
 5325      385F7400 
 5326              	.LASF139:
 5327 092b 5F6C3634 		.ascii	"_l64a_buf\000"
 5327      615F6275 
 5327      6600
 5328              	.LASF27:
 5329 0935 53554343 		.ascii	"SUCCESS\000"
 5329      45535300 
 5330              	.LASF117:
 5331 093d 5F736967 		.ascii	"_sig_func\000"
 5331      5F66756E 
 5331      6300
 5332              	.LASF210:
 5333 0947 5243435F 		.ascii	"RCC_PLLConfig\000"
 5333      504C4C43 
 5333      6F6E6669 
 5333      6700
 5334              	.LASF42:
 5335 0955 5243435F 		.ascii	"RCC_ClocksTypeDef\000"
 5335      436C6F63 
 5335      6B735479 
 5335      70654465 
 5335      6600
 5336              	.LASF91:
 5337 0967 5F6E6275 		.ascii	"_nbuf\000"
 5337      6600
 5338              	.LASF150:
 5339 096d 5F756E75 		.ascii	"_unused\000"
 5339      73656400 
 5340              	.LASF212:
 5341 0975 5243435F 		.ascii	"RCC_PLLMul\000"
 5341      504C4C4D 
 5341      756C00
 5342              	.LASF69:
 5343 0980 5F5F746D 		.ascii	"__tm_isdst\000"
 5343      5F697364 
 5343      737400
 5344              	.LASF132:
 5345 098b 5F6C6F63 		.ascii	"_localtime_buf\000"
 5345      616C7469 
 5345      6D655F62 
 5345      756600
 5346              	.LASF62:
 5347 099a 5F5F746D 		.ascii	"__tm_min\000"
 5347      5F6D696E 
ARM GAS  /tmp/ccZsv2Jc.s 			page 129


 5347      00
 5348              	.LASF224:
 5349 09a3 474E5520 		.ascii	"GNU C11 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -g -"
 5349      43313120 
 5349      362E312E 
 5349      31203230 
 5349      31363035 
 5350 09d6 4F31202D 		.ascii	"O1 -fno-common\000"
 5350      666E6F2D 
 5350      636F6D6D 
 5350      6F6E00
 5351              	.LASF191:
 5352 09e5 5243435F 		.ascii	"RCC_RTCCLKConfig\000"
 5352      52544343 
 5352      4C4B436F 
 5352      6E666967 
 5352      00
 5353              	.LASF106:
 5354 09f6 5F637572 		.ascii	"_current_locale\000"
 5354      72656E74 
 5354      5F6C6F63 
 5354      616C6500 
 5355              	.LASF137:
 5356 0a06 5F6D6274 		.ascii	"_mbtowc_state\000"
 5356      6F77635F 
 5356      73746174 
 5356      6500
 5357              	.LASF111:
 5358 0a14 5F703573 		.ascii	"_p5s\000"
 5358      00
 5359              	.LASF183:
 5360 0a19 5243435F 		.ascii	"RCC_AHBPeriphClockCmd\000"
 5360      41484250 
 5360      65726970 
 5360      68436C6F 
 5360      636B436D 
 5361              	.LASF222:
 5362 0a2f 5243435F 		.ascii	"RCC_ClearFlag\000"
 5362      436C6561 
 5362      72466C61 
 5362      6700
 5363              	.LASF199:
 5364 0a3d 5243435F 		.ascii	"RCC_USBCLKConfig\000"
 5364      55534243 
 5364      4C4B436F 
 5364      6E666967 
 5364      00
 5365              	.LASF154:
 5366 0a4e 646F7562 		.ascii	"double\000"
 5366      6C6500
 5367              	.LASF188:
 5368 0a55 706C6C73 		.ascii	"pllsource\000"
 5368      6F757263 
 5368      6500
 5369              	.LASF64:
 5370 0a5f 5F5F746D 		.ascii	"__tm_mday\000"
 5370      5F6D6461 
ARM GAS  /tmp/ccZsv2Jc.s 			page 130


 5370      7900
 5371              	.LASF32:
 5372 0a69 41484245 		.ascii	"AHBENR\000"
 5372      4E5200
 5373              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/ccZsv2Jc.s 			page 131


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
     /tmp/ccZsv2Jc.s:15     .text:0000000000000000 $t
     /tmp/ccZsv2Jc.s:22     .text:0000000000000000 RCC_DeInit
     /tmp/ccZsv2Jc.s:60     .text:0000000000000038 $d
     /tmp/ccZsv2Jc.s:65     .text:0000000000000040 $t
     /tmp/ccZsv2Jc.s:72     .text:0000000000000040 RCC_HSEConfig
     /tmp/ccZsv2Jc.s:113    .text:0000000000000078 $d
     /tmp/ccZsv2Jc.s:117    .text:000000000000007c $t
     /tmp/ccZsv2Jc.s:124    .text:000000000000007c RCC_AdjustHSICalibrationValue
     /tmp/ccZsv2Jc.s:148    .text:000000000000008c $d
     /tmp/ccZsv2Jc.s:152    .text:0000000000000090 $t
     /tmp/ccZsv2Jc.s:159    .text:0000000000000090 RCC_HSICmd
     /tmp/ccZsv2Jc.s:174    .text:0000000000000098 $d
     /tmp/ccZsv2Jc.s:178    .text:000000000000009c $t
     /tmp/ccZsv2Jc.s:185    .text:000000000000009c RCC_PLLConfig
     /tmp/ccZsv2Jc.s:211    .text:00000000000000ac $d
     /tmp/ccZsv2Jc.s:215    .text:00000000000000b0 $t
     /tmp/ccZsv2Jc.s:222    .text:00000000000000b0 RCC_PLLCmd
     /tmp/ccZsv2Jc.s:237    .text:00000000000000b8 $d
     /tmp/ccZsv2Jc.s:241    .text:00000000000000bc $t
     /tmp/ccZsv2Jc.s:248    .text:00000000000000bc RCC_SYSCLKConfig
     /tmp/ccZsv2Jc.s:272    .text:00000000000000cc $d
     /tmp/ccZsv2Jc.s:276    .text:00000000000000d0 $t
     /tmp/ccZsv2Jc.s:283    .text:00000000000000d0 RCC_GetSYSCLKSource
     /tmp/ccZsv2Jc.s:299    .text:00000000000000dc $d
     /tmp/ccZsv2Jc.s:303    .text:00000000000000e0 $t
     /tmp/ccZsv2Jc.s:310    .text:00000000000000e0 RCC_HCLKConfig
     /tmp/ccZsv2Jc.s:334    .text:00000000000000f0 $d
     /tmp/ccZsv2Jc.s:338    .text:00000000000000f4 $t
     /tmp/ccZsv2Jc.s:345    .text:00000000000000f4 RCC_PCLK1Config
     /tmp/ccZsv2Jc.s:369    .text:0000000000000104 $d
     /tmp/ccZsv2Jc.s:373    .text:0000000000000108 $t
     /tmp/ccZsv2Jc.s:380    .text:0000000000000108 RCC_PCLK2Config
     /tmp/ccZsv2Jc.s:404    .text:0000000000000118 $d
     /tmp/ccZsv2Jc.s:408    .text:000000000000011c $t
     /tmp/ccZsv2Jc.s:415    .text:000000000000011c RCC_ITConfig
     /tmp/ccZsv2Jc.s:444    .text:0000000000000134 $d
     /tmp/ccZsv2Jc.s:448    .text:0000000000000138 $t
     /tmp/ccZsv2Jc.s:455    .text:0000000000000138 RCC_USBCLKConfig
     /tmp/ccZsv2Jc.s:470    .text:0000000000000140 $d
     /tmp/ccZsv2Jc.s:474    .text:0000000000000144 $t
     /tmp/ccZsv2Jc.s:481    .text:0000000000000144 RCC_ADCCLKConfig
     /tmp/ccZsv2Jc.s:505    .text:0000000000000154 $d
     /tmp/ccZsv2Jc.s:509    .text:0000000000000158 $t
     /tmp/ccZsv2Jc.s:516    .text:0000000000000158 RCC_LSEConfig
     /tmp/ccZsv2Jc.s:552    .text:000000000000017c $d
     /tmp/ccZsv2Jc.s:556    .text:0000000000000180 $t
     /tmp/ccZsv2Jc.s:563    .text:0000000000000180 RCC_LSICmd
     /tmp/ccZsv2Jc.s:578    .text:0000000000000188 $d
     /tmp/ccZsv2Jc.s:582    .text:000000000000018c $t
     /tmp/ccZsv2Jc.s:589    .text:000000000000018c RCC_RTCCLKConfig
     /tmp/ccZsv2Jc.s:607    .text:0000000000000198 $d
     /tmp/ccZsv2Jc.s:611    .text:000000000000019c $t
     /tmp/ccZsv2Jc.s:618    .text:000000000000019c RCC_RTCCLKCmd
     /tmp/ccZsv2Jc.s:633    .text:00000000000001a4 $d
     /tmp/ccZsv2Jc.s:637    .text:00000000000001a8 $t
ARM GAS  /tmp/ccZsv2Jc.s 			page 132


     /tmp/ccZsv2Jc.s:644    .text:00000000000001a8 RCC_GetClocksFreq
     /tmp/ccZsv2Jc.s:800    .text:0000000000000248 $d
     /tmp/ccZsv2Jc.s:807    .text:0000000000000258 $t
     /tmp/ccZsv2Jc.s:814    .text:0000000000000258 RCC_AHBPeriphClockCmd
     /tmp/ccZsv2Jc.s:843    .text:0000000000000270 $d
     /tmp/ccZsv2Jc.s:847    .text:0000000000000274 $t
     /tmp/ccZsv2Jc.s:854    .text:0000000000000274 RCC_APB2PeriphClockCmd
     /tmp/ccZsv2Jc.s:883    .text:000000000000028c $d
     /tmp/ccZsv2Jc.s:887    .text:0000000000000290 $t
     /tmp/ccZsv2Jc.s:894    .text:0000000000000290 RCC_APB1PeriphClockCmd
     /tmp/ccZsv2Jc.s:923    .text:00000000000002a8 $d
     /tmp/ccZsv2Jc.s:927    .text:00000000000002ac $t
     /tmp/ccZsv2Jc.s:934    .text:00000000000002ac RCC_APB2PeriphResetCmd
     /tmp/ccZsv2Jc.s:963    .text:00000000000002c4 $d
     /tmp/ccZsv2Jc.s:967    .text:00000000000002c8 $t
     /tmp/ccZsv2Jc.s:974    .text:00000000000002c8 RCC_APB1PeriphResetCmd
     /tmp/ccZsv2Jc.s:1003   .text:00000000000002e0 $d
     /tmp/ccZsv2Jc.s:1007   .text:00000000000002e4 $t
     /tmp/ccZsv2Jc.s:1014   .text:00000000000002e4 RCC_BackupResetCmd
     /tmp/ccZsv2Jc.s:1029   .text:00000000000002ec $d
     /tmp/ccZsv2Jc.s:1033   .text:00000000000002f0 $t
     /tmp/ccZsv2Jc.s:1040   .text:00000000000002f0 RCC_ClockSecuritySystemCmd
     /tmp/ccZsv2Jc.s:1055   .text:00000000000002f8 $d
     /tmp/ccZsv2Jc.s:1059   .text:00000000000002fc $t
     /tmp/ccZsv2Jc.s:1066   .text:00000000000002fc RCC_MCOConfig
     /tmp/ccZsv2Jc.s:1081   .text:0000000000000304 $d
     /tmp/ccZsv2Jc.s:1085   .text:0000000000000308 $t
     /tmp/ccZsv2Jc.s:1092   .text:0000000000000308 RCC_GetFlagStatus
     /tmp/ccZsv2Jc.s:1137   .text:000000000000032c $d
     /tmp/ccZsv2Jc.s:1141   .text:0000000000000330 $t
     /tmp/ccZsv2Jc.s:1148   .text:0000000000000330 RCC_WaitForHSEStartUp
     /tmp/ccZsv2Jc.s:1208   .text:0000000000000362 RCC_ClearFlag
     /tmp/ccZsv2Jc.s:1224   .text:0000000000000370 $d
     /tmp/ccZsv2Jc.s:1228   .text:0000000000000374 $t
     /tmp/ccZsv2Jc.s:1235   .text:0000000000000374 RCC_GetITStatus
     /tmp/ccZsv2Jc.s:1257   .text:0000000000000384 $d
     /tmp/ccZsv2Jc.s:1261   .text:0000000000000388 $t
     /tmp/ccZsv2Jc.s:1268   .text:0000000000000388 RCC_ClearITPendingBit
     /tmp/ccZsv2Jc.s:1283   .text:0000000000000390 $d
     /tmp/ccZsv2Jc.s:1288   .data:0000000000000000 $d
     /tmp/ccZsv2Jc.s:1292   .data:0000000000000000 APBAHBPrescTable
     /tmp/ccZsv2Jc.s:1311   .data:0000000000000010 ADCPrescTable
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
