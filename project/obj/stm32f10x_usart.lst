ARM GAS  /tmp/ccLKhEJ6.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	USART_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	USART_DeInit, %function
  22              	USART_DeInit:
  23              	.LFB63:
  24              		.file 1 "common/stm32f10x_usart.c"
   1:common/stm32f10x_usart.c **** /* Includes ------------------------------------------------------------------*/
   2:common/stm32f10x_usart.c **** #include "../include/STM32/usart.h"
   3:common/stm32f10x_usart.c **** #include "../include/STM32/rcc.h"
   4:common/stm32f10x_usart.c **** #include "../src/conf.h"
   5:common/stm32f10x_usart.c **** 
   6:common/stm32f10x_usart.c **** #define CR1_UE_Set                ((uint16_t)0x2000)  /*!< USART Enable Mask */
   7:common/stm32f10x_usart.c **** #define CR1_UE_Reset              ((uint16_t)0xDFFF)  /*!< USART Disable Mask */
   8:common/stm32f10x_usart.c **** 
   9:common/stm32f10x_usart.c **** #define CR1_WAKE_Mask             ((uint16_t)0xF7FF)  /*!< USART WakeUp Method Mask */
  10:common/stm32f10x_usart.c **** 
  11:common/stm32f10x_usart.c **** #define CR1_RWU_Set               ((uint16_t)0x0002)  /*!< USART mute mode Enable Mask */
  12:common/stm32f10x_usart.c **** #define CR1_RWU_Reset             ((uint16_t)0xFFFD)  /*!< USART mute mode Enable Mask */
  13:common/stm32f10x_usart.c **** #define CR1_SBK_Set               ((uint16_t)0x0001)  /*!< USART Break Character send Mask */
  14:common/stm32f10x_usart.c **** #define CR1_CLEAR_Mask            ((uint16_t)0xE9F3)  /*!< USART CR1 Mask */
  15:common/stm32f10x_usart.c **** #define CR2_Address_Mask          ((uint16_t)0xFFF0)  /*!< USART address Mask */
  16:common/stm32f10x_usart.c **** 
  17:common/stm32f10x_usart.c **** #define CR2_LINEN_Set              ((uint16_t)0x4000)  /*!< USART LIN Enable Mask */
  18:common/stm32f10x_usart.c **** #define CR2_LINEN_Reset            ((uint16_t)0xBFFF)  /*!< USART LIN Disable Mask */
  19:common/stm32f10x_usart.c **** 
  20:common/stm32f10x_usart.c **** #define CR2_LBDL_Mask             ((uint16_t)0xFFDF)  /*!< USART LIN Break detection Mask */
  21:common/stm32f10x_usart.c **** #define CR2_STOP_CLEAR_Mask       ((uint16_t)0xCFFF)  /*!< USART CR2 STOP Bits Mask */
  22:common/stm32f10x_usart.c **** #define CR2_CLOCK_CLEAR_Mask      ((uint16_t)0xF0FF)  /*!< USART CR2 Clock Mask */
  23:common/stm32f10x_usart.c **** 
  24:common/stm32f10x_usart.c **** #define CR3_SCEN_Set              ((uint16_t)0x0020)  /*!< USART SC Enable Mask */
  25:common/stm32f10x_usart.c **** #define CR3_SCEN_Reset            ((uint16_t)0xFFDF)  /*!< USART SC Disable Mask */
  26:common/stm32f10x_usart.c **** 
  27:common/stm32f10x_usart.c **** #define CR3_NACK_Set              ((uint16_t)0x0010)  /*!< USART SC NACK Enable Mask */
  28:common/stm32f10x_usart.c **** #define CR3_NACK_Reset            ((uint16_t)0xFFEF)  /*!< USART SC NACK Disable Mask */
  29:common/stm32f10x_usart.c **** 
  30:common/stm32f10x_usart.c **** #define CR3_HDSEL_Set             ((uint16_t)0x0008)  /*!< USART Half-Duplex Enable Mask */
  31:common/stm32f10x_usart.c **** #define CR3_HDSEL_Reset           ((uint16_t)0xFFF7)  /*!< USART Half-Duplex Disable Mask */
  32:common/stm32f10x_usart.c **** 
  33:common/stm32f10x_usart.c **** #define CR3_IRLP_Mask             ((uint16_t)0xFFFB)  /*!< USART IrDA LowPower mode Mask */
ARM GAS  /tmp/ccLKhEJ6.s 			page 2


  34:common/stm32f10x_usart.c **** #define CR3_CLEAR_Mask            ((uint16_t)0xFCFF)  /*!< USART CR3 Mask */
  35:common/stm32f10x_usart.c **** 
  36:common/stm32f10x_usart.c **** #define CR3_IREN_Set              ((uint16_t)0x0002)  /*!< USART IrDA Enable Mask */
  37:common/stm32f10x_usart.c **** #define CR3_IREN_Reset            ((uint16_t)0xFFFD)  /*!< USART IrDA Disable Mask */
  38:common/stm32f10x_usart.c **** #define GTPR_LSB_Mask             ((uint16_t)0x00FF)  /*!< Guard Time Register LSB Mask */
  39:common/stm32f10x_usart.c **** #define GTPR_MSB_Mask             ((uint16_t)0xFF00)  /*!< Guard Time Register MSB Mask */
  40:common/stm32f10x_usart.c **** #define IT_Mask                   ((uint16_t)0x001F)  /*!< USART Interrupt Mask */
  41:common/stm32f10x_usart.c **** 
  42:common/stm32f10x_usart.c **** /* USART OverSampling-8 Mask */
  43:common/stm32f10x_usart.c **** #define CR1_OVER8_Set             ((u16)0x8000)  /* USART OVER8 mode Enable Mask */
  44:common/stm32f10x_usart.c **** #define CR1_OVER8_Reset           ((u16)0x7FFF)  /* USART OVER8 mode Disable Mask */
  45:common/stm32f10x_usart.c **** 
  46:common/stm32f10x_usart.c **** /* USART One Bit Sampling Mask */
  47:common/stm32f10x_usart.c **** #define CR3_ONEBITE_Set           ((u16)0x0800)  /* USART ONEBITE mode Enable Mask */
  48:common/stm32f10x_usart.c **** #define CR3_ONEBITE_Reset         ((u16)0xF7FF)  /* USART ONEBITE mode Disable Mask */
  49:common/stm32f10x_usart.c **** 
  50:common/stm32f10x_usart.c **** /**
  51:common/stm32f10x_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
  52:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
  53:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values: 
  54:common/stm32f10x_usart.c ****   *      USART1, USART2, USART3, UART4 or UART5.
  55:common/stm32f10x_usart.c ****   * @retval None
  56:common/stm32f10x_usart.c ****   */
  57:common/stm32f10x_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
  58:common/stm32f10x_usart.c **** {
  25              		.loc 1 58 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 16
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 7860     		str	r0, [r7, #4]
  59:common/stm32f10x_usart.c ****   /* Check the parameters */
  60:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
  61:common/stm32f10x_usart.c **** 
  62:common/stm32f10x_usart.c ****   if (USARTx == USART1)
  38              		.loc 1 62 0
  39 0008 7B68     		ldr	r3, [r7, #4]
  40 000a 264A     		ldr	r2, .L8
  41 000c 9342     		cmp	r3, r2
  42 000e 0AD1     		bne	.L2
  63:common/stm32f10x_usart.c ****   {
  64:common/stm32f10x_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
  43              		.loc 1 64 0
  44 0010 0121     		movs	r1, #1
  45 0012 4FF48040 		mov	r0, #16384
  46 0016 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  65:common/stm32f10x_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  47              		.loc 1 65 0
  48 001a 0021     		movs	r1, #0
  49 001c 4FF48040 		mov	r0, #16384
ARM GAS  /tmp/ccLKhEJ6.s 			page 3


  50 0020 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  66:common/stm32f10x_usart.c ****   }
  67:common/stm32f10x_usart.c ****   else if (USARTx == USART2)
  68:common/stm32f10x_usart.c ****   {
  69:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
  70:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  71:common/stm32f10x_usart.c ****   }
  72:common/stm32f10x_usart.c ****   else if (USARTx == USART3)
  73:common/stm32f10x_usart.c ****   {
  74:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
  75:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  76:common/stm32f10x_usart.c ****   }    
  77:common/stm32f10x_usart.c ****   else if (USARTx == UART4)
  78:common/stm32f10x_usart.c ****   {
  79:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
  80:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
  81:common/stm32f10x_usart.c ****   }    
  82:common/stm32f10x_usart.c ****   else
  83:common/stm32f10x_usart.c ****   {
  84:common/stm32f10x_usart.c ****     if (USARTx == UART5)
  85:common/stm32f10x_usart.c ****     { 
  86:common/stm32f10x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
  87:common/stm32f10x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
  88:common/stm32f10x_usart.c ****     }
  89:common/stm32f10x_usart.c ****   }
  90:common/stm32f10x_usart.c **** }
  51              		.loc 1 90 0
  52 0024 3AE0     		b	.L7
  53              	.L2:
  67:common/stm32f10x_usart.c ****   {
  54              		.loc 1 67 0
  55 0026 7B68     		ldr	r3, [r7, #4]
  56 0028 1F4A     		ldr	r2, .L8+4
  57 002a 9342     		cmp	r3, r2
  58 002c 0AD1     		bne	.L4
  69:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  59              		.loc 1 69 0
  60 002e 0121     		movs	r1, #1
  61 0030 4FF40030 		mov	r0, #131072
  62 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  70:common/stm32f10x_usart.c ****   }
  63              		.loc 1 70 0
  64 0038 0021     		movs	r1, #0
  65 003a 4FF40030 		mov	r0, #131072
  66 003e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  67              		.loc 1 90 0
  68 0042 2BE0     		b	.L7
  69              	.L4:
  72:common/stm32f10x_usart.c ****   {
  70              		.loc 1 72 0
  71 0044 7B68     		ldr	r3, [r7, #4]
  72 0046 194A     		ldr	r2, .L8+8
  73 0048 9342     		cmp	r3, r2
  74 004a 0AD1     		bne	.L5
  74:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  75              		.loc 1 74 0
  76 004c 0121     		movs	r1, #1
ARM GAS  /tmp/ccLKhEJ6.s 			page 4


  77 004e 4FF48020 		mov	r0, #262144
  78 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  75:common/stm32f10x_usart.c ****   }    
  79              		.loc 1 75 0
  80 0056 0021     		movs	r1, #0
  81 0058 4FF48020 		mov	r0, #262144
  82 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  83              		.loc 1 90 0
  84 0060 1CE0     		b	.L7
  85              	.L5:
  77:common/stm32f10x_usart.c ****   {
  86              		.loc 1 77 0
  87 0062 7B68     		ldr	r3, [r7, #4]
  88 0064 124A     		ldr	r2, .L8+12
  89 0066 9342     		cmp	r3, r2
  90 0068 0AD1     		bne	.L6
  79:common/stm32f10x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
  91              		.loc 1 79 0
  92 006a 0121     		movs	r1, #1
  93 006c 4FF40020 		mov	r0, #524288
  94 0070 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  80:common/stm32f10x_usart.c ****   }    
  95              		.loc 1 80 0
  96 0074 0021     		movs	r1, #0
  97 0076 4FF40020 		mov	r0, #524288
  98 007a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  99              		.loc 1 90 0
 100 007e 0DE0     		b	.L7
 101              	.L6:
  84:common/stm32f10x_usart.c ****     { 
 102              		.loc 1 84 0
 103 0080 7B68     		ldr	r3, [r7, #4]
 104 0082 0C4A     		ldr	r2, .L8+16
 105 0084 9342     		cmp	r3, r2
 106 0086 09D1     		bne	.L7
  86:common/stm32f10x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 107              		.loc 1 86 0
 108 0088 0121     		movs	r1, #1
 109 008a 4FF48010 		mov	r0, #1048576
 110 008e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87:common/stm32f10x_usart.c ****     }
 111              		.loc 1 87 0
 112 0092 0021     		movs	r1, #0
 113 0094 4FF48010 		mov	r0, #1048576
 114 0098 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 115              	.L7:
 116              		.loc 1 90 0
 117 009c 00BF     		nop
 118 009e 0837     		adds	r7, r7, #8
 119              		.cfi_def_cfa_offset 8
 120 00a0 BD46     		mov	sp, r7
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 00a2 80BD     		pop	{r7, pc}
 124              	.L9:
 125              		.align	2
 126              	.L8:
ARM GAS  /tmp/ccLKhEJ6.s 			page 5


 127 00a4 00380140 		.word	1073821696
 128 00a8 00440040 		.word	1073759232
 129 00ac 00480040 		.word	1073760256
 130 00b0 004C0040 		.word	1073761280
 131 00b4 00500040 		.word	1073762304
 132              		.cfi_endproc
 133              	.LFE63:
 134              		.size	USART_DeInit, .-USART_DeInit
 135              		.align	1
 136              		.global	USART_Init
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu softvfp
 141              		.type	USART_Init, %function
 142              	USART_Init:
 143              	.LFB64:
  91:common/stm32f10x_usart.c **** 
  92:common/stm32f10x_usart.c **** /**
  93:common/stm32f10x_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
  94:common/stm32f10x_usart.c ****   *         parameters in the USART_InitStruct .
  95:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
  96:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
  97:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
  98:common/stm32f10x_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
  99:common/stm32f10x_usart.c ****   *         that contains the configuration information for the specified USART 
 100:common/stm32f10x_usart.c ****   *         peripheral.
 101:common/stm32f10x_usart.c ****   * @retval None
 102:common/stm32f10x_usart.c ****   */
 103:common/stm32f10x_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 104:common/stm32f10x_usart.c **** {
 144              		.loc 1 104 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 48
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 00b8 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 00ba 8CB0     		sub	sp, sp, #48
 153              		.cfi_def_cfa_offset 56
 154 00bc 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 156 00be 7860     		str	r0, [r7, #4]
 157 00c0 3960     		str	r1, [r7]
 105:common/stm32f10x_usart.c ****   uint32_t tmpreg = 0x00, apbclock = 0x00;
 158              		.loc 1 105 0
 159 00c2 0023     		movs	r3, #0
 160 00c4 FB62     		str	r3, [r7, #44]
 161 00c6 0023     		movs	r3, #0
 162 00c8 BB62     		str	r3, [r7, #40]
 106:common/stm32f10x_usart.c ****   uint32_t integerdivider = 0x00;
 163              		.loc 1 106 0
 164 00ca 0023     		movs	r3, #0
 165 00cc 7B62     		str	r3, [r7, #36]
 107:common/stm32f10x_usart.c ****   uint32_t fractionaldivider = 0x00;
 166              		.loc 1 107 0
ARM GAS  /tmp/ccLKhEJ6.s 			page 6


 167 00ce 0023     		movs	r3, #0
 168 00d0 3B62     		str	r3, [r7, #32]
 108:common/stm32f10x_usart.c ****   uint32_t usartxbase = 0;
 169              		.loc 1 108 0
 170 00d2 0023     		movs	r3, #0
 171 00d4 FB61     		str	r3, [r7, #28]
 109:common/stm32f10x_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 110:common/stm32f10x_usart.c ****   /* Check the parameters */
 111:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 112:common/stm32f10x_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 113:common/stm32f10x_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 114:common/stm32f10x_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 115:common/stm32f10x_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 116:common/stm32f10x_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 117:common/stm32f10x_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 118:common/stm32f10x_usart.c ****   /* The hardware flow control is available only for USART1, USART2 and USART3 */
 119:common/stm32f10x_usart.c ****   if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 120:common/stm32f10x_usart.c ****   {
 121:common/stm32f10x_usart.c ****     assert_param(IS_USART_123_PERIPH(USARTx));
 122:common/stm32f10x_usart.c ****   }
 123:common/stm32f10x_usart.c **** 
 124:common/stm32f10x_usart.c ****   usartxbase = (uint32_t)USARTx;
 172              		.loc 1 124 0
 173 00d6 7B68     		ldr	r3, [r7, #4]
 174 00d8 FB61     		str	r3, [r7, #28]
 125:common/stm32f10x_usart.c **** 
 126:common/stm32f10x_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 127:common/stm32f10x_usart.c ****   tmpreg = USARTx->CR2;
 175              		.loc 1 127 0
 176 00da 7B68     		ldr	r3, [r7, #4]
 177 00dc 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 178 00de 9BB2     		uxth	r3, r3
 179 00e0 FB62     		str	r3, [r7, #44]
 128:common/stm32f10x_usart.c ****   /* Clear STOP[13:12] bits */
 129:common/stm32f10x_usart.c ****   tmpreg &= CR2_STOP_CLEAR_Mask;
 180              		.loc 1 129 0
 181 00e2 FA6A     		ldr	r2, [r7, #44]
 182 00e4 4CF6FF73 		movw	r3, #53247
 183 00e8 1340     		ands	r3, r3, r2
 184 00ea FB62     		str	r3, [r7, #44]
 130:common/stm32f10x_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
 131:common/stm32f10x_usart.c ****   /* Set STOP[13:12] bits according to USART_StopBits value */
 132:common/stm32f10x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 185              		.loc 1 132 0
 186 00ec 3B68     		ldr	r3, [r7]
 187 00ee DB88     		ldrh	r3, [r3, #6]
 188 00f0 1A46     		mov	r2, r3
 189 00f2 FB6A     		ldr	r3, [r7, #44]
 190 00f4 1343     		orrs	r3, r3, r2
 191 00f6 FB62     		str	r3, [r7, #44]
 133:common/stm32f10x_usart.c ****   
 134:common/stm32f10x_usart.c ****   /* Write to USART CR2 */
 135:common/stm32f10x_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 192              		.loc 1 135 0
 193 00f8 FB6A     		ldr	r3, [r7, #44]
 194 00fa 9AB2     		uxth	r2, r3
 195 00fc 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccLKhEJ6.s 			page 7


 196 00fe 1A82     		strh	r2, [r3, #16]	@ movhi
 136:common/stm32f10x_usart.c **** 
 137:common/stm32f10x_usart.c **** /*---------------------------- USART CR1 Configuration -----------------------*/
 138:common/stm32f10x_usart.c ****   tmpreg = USARTx->CR1;
 197              		.loc 1 138 0
 198 0100 7B68     		ldr	r3, [r7, #4]
 199 0102 9B89     		ldrh	r3, [r3, #12]	@ movhi
 200 0104 9BB2     		uxth	r3, r3
 201 0106 FB62     		str	r3, [r7, #44]
 139:common/stm32f10x_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 140:common/stm32f10x_usart.c ****   tmpreg &= CR1_CLEAR_Mask;
 202              		.loc 1 140 0
 203 0108 FA6A     		ldr	r2, [r7, #44]
 204 010a 4EF6F313 		movw	r3, #59891
 205 010e 1340     		ands	r3, r3, r2
 206 0110 FB62     		str	r3, [r7, #44]
 141:common/stm32f10x_usart.c ****   /* Configure the USART Word Length, Parity and mode ----------------------- */
 142:common/stm32f10x_usart.c ****   /* Set the M bits according to USART_WordLength value */
 143:common/stm32f10x_usart.c ****   /* Set PCE and PS bits according to USART_Parity value */
 144:common/stm32f10x_usart.c ****   /* Set TE and RE bits according to USART_Mode value */
 145:common/stm32f10x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 207              		.loc 1 145 0
 208 0112 3B68     		ldr	r3, [r7]
 209 0114 9A88     		ldrh	r2, [r3, #4]
 210 0116 3B68     		ldr	r3, [r7]
 211 0118 1B89     		ldrh	r3, [r3, #8]
 212 011a 1343     		orrs	r3, r3, r2
 213 011c 9AB2     		uxth	r2, r3
 146:common/stm32f10x_usart.c ****             USART_InitStruct->USART_Mode;
 214              		.loc 1 146 0
 215 011e 3B68     		ldr	r3, [r7]
 216 0120 5B89     		ldrh	r3, [r3, #10]
 145:common/stm32f10x_usart.c ****             USART_InitStruct->USART_Mode;
 217              		.loc 1 145 0
 218 0122 1343     		orrs	r3, r3, r2
 219 0124 9BB2     		uxth	r3, r3
 220 0126 1A46     		mov	r2, r3
 221 0128 FB6A     		ldr	r3, [r7, #44]
 222 012a 1343     		orrs	r3, r3, r2
 223 012c FB62     		str	r3, [r7, #44]
 147:common/stm32f10x_usart.c ****   /* Write to USART CR1 */
 148:common/stm32f10x_usart.c ****   USARTx->CR1 = (uint16_t)tmpreg;
 224              		.loc 1 148 0
 225 012e FB6A     		ldr	r3, [r7, #44]
 226 0130 9AB2     		uxth	r2, r3
 227 0132 7B68     		ldr	r3, [r7, #4]
 228 0134 9A81     		strh	r2, [r3, #12]	@ movhi
 149:common/stm32f10x_usart.c **** 
 150:common/stm32f10x_usart.c **** /*---------------------------- USART CR3 Configuration -----------------------*/  
 151:common/stm32f10x_usart.c ****   tmpreg = USARTx->CR3;
 229              		.loc 1 151 0
 230 0136 7B68     		ldr	r3, [r7, #4]
 231 0138 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 232 013a 9BB2     		uxth	r3, r3
 233 013c FB62     		str	r3, [r7, #44]
 152:common/stm32f10x_usart.c ****   /* Clear CTSE and RTSE bits */
 153:common/stm32f10x_usart.c ****   tmpreg &= CR3_CLEAR_Mask;
ARM GAS  /tmp/ccLKhEJ6.s 			page 8


 234              		.loc 1 153 0
 235 013e FA6A     		ldr	r2, [r7, #44]
 236 0140 4FF6FF43 		movw	r3, #64767
 237 0144 1340     		ands	r3, r3, r2
 238 0146 FB62     		str	r3, [r7, #44]
 154:common/stm32f10x_usart.c ****   /* Configure the USART HFC -------------------------------------------------*/
 155:common/stm32f10x_usart.c ****   /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 156:common/stm32f10x_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 239              		.loc 1 156 0
 240 0148 3B68     		ldr	r3, [r7]
 241 014a 9B89     		ldrh	r3, [r3, #12]
 242 014c 1A46     		mov	r2, r3
 243 014e FB6A     		ldr	r3, [r7, #44]
 244 0150 1343     		orrs	r3, r3, r2
 245 0152 FB62     		str	r3, [r7, #44]
 157:common/stm32f10x_usart.c ****   /* Write to USART CR3 */
 158:common/stm32f10x_usart.c ****   USARTx->CR3 = (uint16_t)tmpreg;
 246              		.loc 1 158 0
 247 0154 FB6A     		ldr	r3, [r7, #44]
 248 0156 9AB2     		uxth	r2, r3
 249 0158 7B68     		ldr	r3, [r7, #4]
 250 015a 9A82     		strh	r2, [r3, #20]	@ movhi
 159:common/stm32f10x_usart.c **** 
 160:common/stm32f10x_usart.c **** /*---------------------------- USART BRR Configuration -----------------------*/
 161:common/stm32f10x_usart.c ****   /* Configure the USART Baud Rate -------------------------------------------*/
 162:common/stm32f10x_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 251              		.loc 1 162 0
 252 015c 07F10803 		add	r3, r7, #8
 253 0160 1846     		mov	r0, r3
 254 0162 FFF7FEFF 		bl	RCC_GetClocksFreq
 163:common/stm32f10x_usart.c ****   if (usartxbase == USART1_BASE)
 255              		.loc 1 163 0
 256 0166 FB69     		ldr	r3, [r7, #28]
 257 0168 2E4A     		ldr	r2, .L17
 258 016a 9342     		cmp	r3, r2
 259 016c 02D1     		bne	.L11
 164:common/stm32f10x_usart.c ****   {
 165:common/stm32f10x_usart.c ****     apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 260              		.loc 1 165 0
 261 016e 7B69     		ldr	r3, [r7, #20]
 262 0170 BB62     		str	r3, [r7, #40]
 263 0172 01E0     		b	.L12
 264              	.L11:
 166:common/stm32f10x_usart.c ****   }
 167:common/stm32f10x_usart.c ****   else
 168:common/stm32f10x_usart.c ****   {
 169:common/stm32f10x_usart.c ****     apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 265              		.loc 1 169 0
 266 0174 3B69     		ldr	r3, [r7, #16]
 267 0176 BB62     		str	r3, [r7, #40]
 268              	.L12:
 170:common/stm32f10x_usart.c ****   }
 171:common/stm32f10x_usart.c ****   
 172:common/stm32f10x_usart.c ****   /* Determine the integer part */
 173:common/stm32f10x_usart.c ****   if ((USARTx->CR1 & CR1_OVER8_Set) != 0)
 269              		.loc 1 173 0
 270 0178 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccLKhEJ6.s 			page 9


 271 017a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 272 017c 9BB2     		uxth	r3, r3
 273 017e 1BB2     		sxth	r3, r3
 274 0180 002B     		cmp	r3, #0
 275 0182 0CDA     		bge	.L13
 174:common/stm32f10x_usart.c ****   {
 175:common/stm32f10x_usart.c ****     /* Integer part computing in case Oversampling mode is 8 Samples */
 176:common/stm32f10x_usart.c ****     integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 276              		.loc 1 176 0
 277 0184 BA6A     		ldr	r2, [r7, #40]
 278 0186 1346     		mov	r3, r2
 279 0188 9B00     		lsls	r3, r3, #2
 280 018a 1344     		add	r3, r3, r2
 281 018c 9A00     		lsls	r2, r3, #2
 282 018e 1A44     		add	r2, r2, r3
 283 0190 3B68     		ldr	r3, [r7]
 284 0192 1B68     		ldr	r3, [r3]
 285 0194 5B00     		lsls	r3, r3, #1
 286 0196 B2FBF3F3 		udiv	r3, r2, r3
 287 019a 7B62     		str	r3, [r7, #36]
 288 019c 0BE0     		b	.L14
 289              	.L13:
 177:common/stm32f10x_usart.c ****   }
 178:common/stm32f10x_usart.c ****   else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
 179:common/stm32f10x_usart.c ****   {
 180:common/stm32f10x_usart.c ****     /* Integer part computing in case Oversampling mode is 16 Samples */
 181:common/stm32f10x_usart.c ****     integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 290              		.loc 1 181 0
 291 019e BA6A     		ldr	r2, [r7, #40]
 292 01a0 1346     		mov	r3, r2
 293 01a2 9B00     		lsls	r3, r3, #2
 294 01a4 1344     		add	r3, r3, r2
 295 01a6 9A00     		lsls	r2, r3, #2
 296 01a8 1A44     		add	r2, r2, r3
 297 01aa 3B68     		ldr	r3, [r7]
 298 01ac 1B68     		ldr	r3, [r3]
 299 01ae 9B00     		lsls	r3, r3, #2
 300 01b0 B2FBF3F3 		udiv	r3, r2, r3
 301 01b4 7B62     		str	r3, [r7, #36]
 302              	.L14:
 182:common/stm32f10x_usart.c ****   }
 183:common/stm32f10x_usart.c ****   tmpreg = (integerdivider / 100) << 4;
 303              		.loc 1 183 0
 304 01b6 7B6A     		ldr	r3, [r7, #36]
 305 01b8 1B4A     		ldr	r2, .L17+4
 306 01ba A2FB0323 		umull	r2, r3, r2, r3
 307 01be 5B09     		lsrs	r3, r3, #5
 308 01c0 1B01     		lsls	r3, r3, #4
 309 01c2 FB62     		str	r3, [r7, #44]
 184:common/stm32f10x_usart.c **** 
 185:common/stm32f10x_usart.c ****   /* Determine the fractional part */
 186:common/stm32f10x_usart.c ****   fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 310              		.loc 1 186 0
 311 01c4 FB6A     		ldr	r3, [r7, #44]
 312 01c6 1B09     		lsrs	r3, r3, #4
 313 01c8 6422     		movs	r2, #100
 314 01ca 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/ccLKhEJ6.s 			page 10


 315 01ce 7A6A     		ldr	r2, [r7, #36]
 316 01d0 D31A     		subs	r3, r2, r3
 317 01d2 3B62     		str	r3, [r7, #32]
 187:common/stm32f10x_usart.c **** 
 188:common/stm32f10x_usart.c ****   /* Implement the fractional part in the register */
 189:common/stm32f10x_usart.c ****   if ((USARTx->CR1 & CR1_OVER8_Set) != 0)
 318              		.loc 1 189 0
 319 01d4 7B68     		ldr	r3, [r7, #4]
 320 01d6 9B89     		ldrh	r3, [r3, #12]	@ movhi
 321 01d8 9BB2     		uxth	r3, r3
 322 01da 1BB2     		sxth	r3, r3
 323 01dc 002B     		cmp	r3, #0
 324 01de 0CDA     		bge	.L15
 190:common/stm32f10x_usart.c ****   {
 191:common/stm32f10x_usart.c ****     tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 325              		.loc 1 191 0
 326 01e0 3B6A     		ldr	r3, [r7, #32]
 327 01e2 DB00     		lsls	r3, r3, #3
 328 01e4 3233     		adds	r3, r3, #50
 329 01e6 104A     		ldr	r2, .L17+4
 330 01e8 A2FB0323 		umull	r2, r3, r2, r3
 331 01ec 5B09     		lsrs	r3, r3, #5
 332 01ee 03F00703 		and	r3, r3, #7
 333 01f2 FA6A     		ldr	r2, [r7, #44]
 334 01f4 1343     		orrs	r3, r3, r2
 335 01f6 FB62     		str	r3, [r7, #44]
 336 01f8 0BE0     		b	.L16
 337              	.L15:
 192:common/stm32f10x_usart.c ****   }
 193:common/stm32f10x_usart.c ****   else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
 194:common/stm32f10x_usart.c ****   {
 195:common/stm32f10x_usart.c ****     tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 338              		.loc 1 195 0
 339 01fa 3B6A     		ldr	r3, [r7, #32]
 340 01fc 1B01     		lsls	r3, r3, #4
 341 01fe 3233     		adds	r3, r3, #50
 342 0200 094A     		ldr	r2, .L17+4
 343 0202 A2FB0323 		umull	r2, r3, r2, r3
 344 0206 5B09     		lsrs	r3, r3, #5
 345 0208 03F00F03 		and	r3, r3, #15
 346 020c FA6A     		ldr	r2, [r7, #44]
 347 020e 1343     		orrs	r3, r3, r2
 348 0210 FB62     		str	r3, [r7, #44]
 349              	.L16:
 196:common/stm32f10x_usart.c ****   }
 197:common/stm32f10x_usart.c ****   
 198:common/stm32f10x_usart.c ****   /* Write to USART BRR */
 199:common/stm32f10x_usart.c ****   USARTx->BRR = (uint16_t)tmpreg;
 350              		.loc 1 199 0
 351 0212 FB6A     		ldr	r3, [r7, #44]
 352 0214 9AB2     		uxth	r2, r3
 353 0216 7B68     		ldr	r3, [r7, #4]
 354 0218 1A81     		strh	r2, [r3, #8]	@ movhi
 200:common/stm32f10x_usart.c **** }
 355              		.loc 1 200 0
 356 021a 00BF     		nop
 357 021c 3037     		adds	r7, r7, #48
ARM GAS  /tmp/ccLKhEJ6.s 			page 11


 358              		.cfi_def_cfa_offset 8
 359 021e BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 0220 80BD     		pop	{r7, pc}
 363              	.L18:
 364 0222 00BF     		.align	2
 365              	.L17:
 366 0224 00380140 		.word	1073821696
 367 0228 1F85EB51 		.word	1374389535
 368              		.cfi_endproc
 369              	.LFE64:
 370              		.size	USART_Init, .-USART_Init
 371              		.align	1
 372              		.global	USART_StructInit
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu softvfp
 377              		.type	USART_StructInit, %function
 378              	USART_StructInit:
 379              	.LFB65:
 201:common/stm32f10x_usart.c **** 
 202:common/stm32f10x_usart.c **** /**
 203:common/stm32f10x_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 204:common/stm32f10x_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
 205:common/stm32f10x_usart.c ****   *         which will be initialized.
 206:common/stm32f10x_usart.c ****   * @retval None
 207:common/stm32f10x_usart.c ****   */
 208:common/stm32f10x_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 209:common/stm32f10x_usart.c **** {
 380              		.loc 1 209 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 022c 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 022e 83B0     		sub	sp, sp, #12
 389              		.cfi_def_cfa_offset 16
 390 0230 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0232 7860     		str	r0, [r7, #4]
 210:common/stm32f10x_usart.c ****   /* USART_InitStruct members default value */
 211:common/stm32f10x_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 393              		.loc 1 211 0
 394 0234 7B68     		ldr	r3, [r7, #4]
 395 0236 4FF41652 		mov	r2, #9600
 396 023a 1A60     		str	r2, [r3]
 212:common/stm32f10x_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 397              		.loc 1 212 0
 398 023c 7B68     		ldr	r3, [r7, #4]
 399 023e 0022     		movs	r2, #0
 400 0240 9A80     		strh	r2, [r3, #4]	@ movhi
 213:common/stm32f10x_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 401              		.loc 1 213 0
ARM GAS  /tmp/ccLKhEJ6.s 			page 12


 402 0242 7B68     		ldr	r3, [r7, #4]
 403 0244 0022     		movs	r2, #0
 404 0246 DA80     		strh	r2, [r3, #6]	@ movhi
 214:common/stm32f10x_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 405              		.loc 1 214 0
 406 0248 7B68     		ldr	r3, [r7, #4]
 407 024a 0022     		movs	r2, #0
 408 024c 1A81     		strh	r2, [r3, #8]	@ movhi
 215:common/stm32f10x_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 409              		.loc 1 215 0
 410 024e 7B68     		ldr	r3, [r7, #4]
 411 0250 0C22     		movs	r2, #12
 412 0252 5A81     		strh	r2, [r3, #10]	@ movhi
 216:common/stm32f10x_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 413              		.loc 1 216 0
 414 0254 7B68     		ldr	r3, [r7, #4]
 415 0256 0022     		movs	r2, #0
 416 0258 9A81     		strh	r2, [r3, #12]	@ movhi
 217:common/stm32f10x_usart.c **** }
 417              		.loc 1 217 0
 418 025a 00BF     		nop
 419 025c 0C37     		adds	r7, r7, #12
 420              		.cfi_def_cfa_offset 4
 421 025e BD46     		mov	sp, r7
 422              		.cfi_def_cfa_register 13
 423              		@ sp needed
 424 0260 80BC     		pop	{r7}
 425              		.cfi_restore 7
 426              		.cfi_def_cfa_offset 0
 427 0262 7047     		bx	lr
 428              		.cfi_endproc
 429              	.LFE65:
 430              		.size	USART_StructInit, .-USART_StructInit
 431              		.align	1
 432              		.global	USART_ClockInit
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu softvfp
 437              		.type	USART_ClockInit, %function
 438              	USART_ClockInit:
 439              	.LFB66:
 218:common/stm32f10x_usart.c **** 
 219:common/stm32f10x_usart.c **** /**
 220:common/stm32f10x_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the 
 221:common/stm32f10x_usart.c ****   *          specified parameters in the USART_ClockInitStruct .
 222:common/stm32f10x_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 to select the USART peripheral.
 223:common/stm32f10x_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef
 224:common/stm32f10x_usart.c ****   *         structure that contains the configuration information for the specified 
 225:common/stm32f10x_usart.c ****   *         USART peripheral.  
 226:common/stm32f10x_usart.c ****   * @note The Smart Card and Synchronous modes are not available for UART4 and UART5.
 227:common/stm32f10x_usart.c ****   * @retval None
 228:common/stm32f10x_usart.c ****   */
 229:common/stm32f10x_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 230:common/stm32f10x_usart.c **** {
 440              		.loc 1 230 0
 441              		.cfi_startproc
ARM GAS  /tmp/ccLKhEJ6.s 			page 13


 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0264 80B4     		push	{r7}
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 7, -4
 448 0266 85B0     		sub	sp, sp, #20
 449              		.cfi_def_cfa_offset 24
 450 0268 00AF     		add	r7, sp, #0
 451              		.cfi_def_cfa_register 7
 452 026a 7860     		str	r0, [r7, #4]
 453 026c 3960     		str	r1, [r7]
 231:common/stm32f10x_usart.c ****   uint32_t tmpreg = 0x00;
 454              		.loc 1 231 0
 455 026e 0023     		movs	r3, #0
 456 0270 FB60     		str	r3, [r7, #12]
 232:common/stm32f10x_usart.c ****   /* Check the parameters */
 233:common/stm32f10x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 234:common/stm32f10x_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 235:common/stm32f10x_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
 236:common/stm32f10x_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 237:common/stm32f10x_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 238:common/stm32f10x_usart.c ****   
 239:common/stm32f10x_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 240:common/stm32f10x_usart.c ****   tmpreg = USARTx->CR2;
 457              		.loc 1 240 0
 458 0272 7B68     		ldr	r3, [r7, #4]
 459 0274 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 460 0276 9BB2     		uxth	r3, r3
 461 0278 FB60     		str	r3, [r7, #12]
 241:common/stm32f10x_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
 242:common/stm32f10x_usart.c ****   tmpreg &= CR2_CLOCK_CLEAR_Mask;
 462              		.loc 1 242 0
 463 027a FA68     		ldr	r2, [r7, #12]
 464 027c 4FF2FF03 		movw	r3, #61695
 465 0280 1340     		ands	r3, r3, r2
 466 0282 FB60     		str	r3, [r7, #12]
 243:common/stm32f10x_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit ------------*/
 244:common/stm32f10x_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 245:common/stm32f10x_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 246:common/stm32f10x_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 247:common/stm32f10x_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 248:common/stm32f10x_usart.c ****   tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 467              		.loc 1 248 0
 468 0284 3B68     		ldr	r3, [r7]
 469 0286 1A88     		ldrh	r2, [r3]
 470 0288 3B68     		ldr	r3, [r7]
 471 028a 5B88     		ldrh	r3, [r3, #2]
 249:common/stm32f10x_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 472              		.loc 1 249 0
 473 028c 1343     		orrs	r3, r3, r2
 474 028e 9AB2     		uxth	r2, r3
 475 0290 3B68     		ldr	r3, [r7]
 476 0292 9B88     		ldrh	r3, [r3, #4]
 477 0294 1343     		orrs	r3, r3, r2
 478 0296 9AB2     		uxth	r2, r3
 479 0298 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccLKhEJ6.s 			page 14


 480 029a DB88     		ldrh	r3, [r3, #6]
 481 029c 1343     		orrs	r3, r3, r2
 482 029e 9BB2     		uxth	r3, r3
 483 02a0 1A46     		mov	r2, r3
 248:common/stm32f10x_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 484              		.loc 1 248 0
 485 02a2 FB68     		ldr	r3, [r7, #12]
 486 02a4 1343     		orrs	r3, r3, r2
 487 02a6 FB60     		str	r3, [r7, #12]
 250:common/stm32f10x_usart.c ****   /* Write to USART CR2 */
 251:common/stm32f10x_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 488              		.loc 1 251 0
 489 02a8 FB68     		ldr	r3, [r7, #12]
 490 02aa 9AB2     		uxth	r2, r3
 491 02ac 7B68     		ldr	r3, [r7, #4]
 492 02ae 1A82     		strh	r2, [r3, #16]	@ movhi
 252:common/stm32f10x_usart.c **** }
 493              		.loc 1 252 0
 494 02b0 00BF     		nop
 495 02b2 1437     		adds	r7, r7, #20
 496              		.cfi_def_cfa_offset 4
 497 02b4 BD46     		mov	sp, r7
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 02b6 80BC     		pop	{r7}
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 02b8 7047     		bx	lr
 504              		.cfi_endproc
 505              	.LFE66:
 506              		.size	USART_ClockInit, .-USART_ClockInit
 507              		.align	1
 508              		.global	USART_ClockStructInit
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu softvfp
 513              		.type	USART_ClockStructInit, %function
 514              	USART_ClockStructInit:
 515              	.LFB67:
 253:common/stm32f10x_usart.c **** 
 254:common/stm32f10x_usart.c **** /**
 255:common/stm32f10x_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 256:common/stm32f10x_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef
 257:common/stm32f10x_usart.c ****   *         structure which will be initialized.
 258:common/stm32f10x_usart.c ****   * @retval None
 259:common/stm32f10x_usart.c ****   */
 260:common/stm32f10x_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 261:common/stm32f10x_usart.c **** {
 516              		.loc 1 261 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 02ba 80B4     		push	{r7}
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
ARM GAS  /tmp/ccLKhEJ6.s 			page 15


 524 02bc 83B0     		sub	sp, sp, #12
 525              		.cfi_def_cfa_offset 16
 526 02be 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 02c0 7860     		str	r0, [r7, #4]
 262:common/stm32f10x_usart.c ****   /* USART_ClockInitStruct members default value */
 263:common/stm32f10x_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 529              		.loc 1 263 0
 530 02c2 7B68     		ldr	r3, [r7, #4]
 531 02c4 0022     		movs	r2, #0
 532 02c6 1A80     		strh	r2, [r3]	@ movhi
 264:common/stm32f10x_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 533              		.loc 1 264 0
 534 02c8 7B68     		ldr	r3, [r7, #4]
 535 02ca 0022     		movs	r2, #0
 536 02cc 5A80     		strh	r2, [r3, #2]	@ movhi
 265:common/stm32f10x_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 537              		.loc 1 265 0
 538 02ce 7B68     		ldr	r3, [r7, #4]
 539 02d0 0022     		movs	r2, #0
 540 02d2 9A80     		strh	r2, [r3, #4]	@ movhi
 266:common/stm32f10x_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 541              		.loc 1 266 0
 542 02d4 7B68     		ldr	r3, [r7, #4]
 543 02d6 0022     		movs	r2, #0
 544 02d8 DA80     		strh	r2, [r3, #6]	@ movhi
 267:common/stm32f10x_usart.c **** }
 545              		.loc 1 267 0
 546 02da 00BF     		nop
 547 02dc 0C37     		adds	r7, r7, #12
 548              		.cfi_def_cfa_offset 4
 549 02de BD46     		mov	sp, r7
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 02e0 80BC     		pop	{r7}
 553              		.cfi_restore 7
 554              		.cfi_def_cfa_offset 0
 555 02e2 7047     		bx	lr
 556              		.cfi_endproc
 557              	.LFE67:
 558              		.size	USART_ClockStructInit, .-USART_ClockStructInit
 559              		.align	1
 560              		.global	USART_Cmd
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 565              		.type	USART_Cmd, %function
 566              	USART_Cmd:
 567              	.LFB68:
 268:common/stm32f10x_usart.c **** 
 269:common/stm32f10x_usart.c **** /**
 270:common/stm32f10x_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 271:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 272:common/stm32f10x_usart.c ****   *         This parameter can be one of the following values:
 273:common/stm32f10x_usart.c ****   *           USART1, USART2, USART3, UART4 or UART5.
 274:common/stm32f10x_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
ARM GAS  /tmp/ccLKhEJ6.s 			page 16


 275:common/stm32f10x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 276:common/stm32f10x_usart.c ****   * @retval None
 277:common/stm32f10x_usart.c ****   */
 278:common/stm32f10x_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 279:common/stm32f10x_usart.c **** {
 568              		.loc 1 279 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573 02e4 80B4     		push	{r7}
 574              		.cfi_def_cfa_offset 4
 575              		.cfi_offset 7, -4
 576 02e6 83B0     		sub	sp, sp, #12
 577              		.cfi_def_cfa_offset 16
 578 02e8 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 580 02ea 7860     		str	r0, [r7, #4]
 581 02ec 0B46     		mov	r3, r1
 582 02ee FB70     		strb	r3, [r7, #3]
 280:common/stm32f10x_usart.c ****   /* Check the parameters */
 281:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 282:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 283:common/stm32f10x_usart.c ****   
 284:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 583              		.loc 1 284 0
 584 02f0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 585 02f2 002B     		cmp	r3, #0
 586 02f4 08D0     		beq	.L23
 285:common/stm32f10x_usart.c ****   {
 286:common/stm32f10x_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 287:common/stm32f10x_usart.c ****     USARTx->CR1 |= CR1_UE_Set;
 587              		.loc 1 287 0
 588 02f6 7B68     		ldr	r3, [r7, #4]
 589 02f8 9B89     		ldrh	r3, [r3, #12]	@ movhi
 590 02fa 9BB2     		uxth	r3, r3
 591 02fc 43F40053 		orr	r3, r3, #8192
 592 0300 9AB2     		uxth	r2, r3
 593 0302 7B68     		ldr	r3, [r7, #4]
 594 0304 9A81     		strh	r2, [r3, #12]	@ movhi
 288:common/stm32f10x_usart.c ****   }
 289:common/stm32f10x_usart.c ****   else
 290:common/stm32f10x_usart.c ****   {
 291:common/stm32f10x_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 292:common/stm32f10x_usart.c ****     USARTx->CR1 &= CR1_UE_Reset;
 293:common/stm32f10x_usart.c ****   }
 294:common/stm32f10x_usart.c **** }
 595              		.loc 1 294 0
 596 0306 07E0     		b	.L25
 597              	.L23:
 292:common/stm32f10x_usart.c ****   }
 598              		.loc 1 292 0
 599 0308 7B68     		ldr	r3, [r7, #4]
 600 030a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 601 030c 9BB2     		uxth	r3, r3
 602 030e 23F40053 		bic	r3, r3, #8192
 603 0312 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccLKhEJ6.s 			page 17


 604 0314 7B68     		ldr	r3, [r7, #4]
 605 0316 9A81     		strh	r2, [r3, #12]	@ movhi
 606              	.L25:
 607              		.loc 1 294 0
 608 0318 00BF     		nop
 609 031a 0C37     		adds	r7, r7, #12
 610              		.cfi_def_cfa_offset 4
 611 031c BD46     		mov	sp, r7
 612              		.cfi_def_cfa_register 13
 613              		@ sp needed
 614 031e 80BC     		pop	{r7}
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 0320 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE68:
 620              		.size	USART_Cmd, .-USART_Cmd
 621              		.align	1
 622              		.global	USART_ITConfig
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu softvfp
 627              		.type	USART_ITConfig, %function
 628              	USART_ITConfig:
 629              	.LFB69:
 295:common/stm32f10x_usart.c **** 
 296:common/stm32f10x_usart.c **** /**
 297:common/stm32f10x_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
 298:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 299:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 300:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 301:common/stm32f10x_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
 302:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 303:common/stm32f10x_usart.c ****   *     @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
 304:common/stm32f10x_usart.c ****   *     @arg USART_IT_LBD:  LIN Break detection interrupt
 305:common/stm32f10x_usart.c ****   *     @arg USART_IT_TXE:  Transmit Data Register empty interrupt
 306:common/stm32f10x_usart.c ****   *     @arg USART_IT_TC:   Transmission complete interrupt
 307:common/stm32f10x_usart.c ****   *     @arg USART_IT_RXNE: Receive Data register not empty interrupt
 308:common/stm32f10x_usart.c ****   *     @arg USART_IT_IDLE: Idle line detection interrupt
 309:common/stm32f10x_usart.c ****   *     @arg USART_IT_PE:   Parity Error interrupt
 310:common/stm32f10x_usart.c ****   *     @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
 311:common/stm32f10x_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
 312:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 313:common/stm32f10x_usart.c ****   * @retval None
 314:common/stm32f10x_usart.c ****   */
 315:common/stm32f10x_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
 316:common/stm32f10x_usart.c **** {
 630              		.loc 1 316 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 24
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635 0322 80B4     		push	{r7}
 636              		.cfi_def_cfa_offset 4
 637              		.cfi_offset 7, -4
 638 0324 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccLKhEJ6.s 			page 18


 639              		.cfi_def_cfa_offset 32
 640 0326 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 642 0328 7860     		str	r0, [r7, #4]
 643 032a 0B46     		mov	r3, r1
 644 032c 7B80     		strh	r3, [r7, #2]	@ movhi
 645 032e 1346     		mov	r3, r2
 646 0330 7B70     		strb	r3, [r7, #1]
 317:common/stm32f10x_usart.c ****   uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
 647              		.loc 1 317 0
 648 0332 0023     		movs	r3, #0
 649 0334 3B61     		str	r3, [r7, #16]
 650 0336 0023     		movs	r3, #0
 651 0338 FB60     		str	r3, [r7, #12]
 652 033a 0023     		movs	r3, #0
 653 033c BB60     		str	r3, [r7, #8]
 318:common/stm32f10x_usart.c ****   uint32_t usartxbase = 0x00;
 654              		.loc 1 318 0
 655 033e 0023     		movs	r3, #0
 656 0340 7B61     		str	r3, [r7, #20]
 319:common/stm32f10x_usart.c ****   /* Check the parameters */
 320:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 321:common/stm32f10x_usart.c ****   assert_param(IS_USART_CONFIG_IT(USART_IT));
 322:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 323:common/stm32f10x_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
 324:common/stm32f10x_usart.c ****   if (USART_IT == USART_IT_CTS)
 325:common/stm32f10x_usart.c ****   {
 326:common/stm32f10x_usart.c ****     assert_param(IS_USART_123_PERIPH(USARTx));
 327:common/stm32f10x_usart.c ****   }   
 328:common/stm32f10x_usart.c ****   
 329:common/stm32f10x_usart.c ****   usartxbase = (uint32_t)USARTx;
 657              		.loc 1 329 0
 658 0342 7B68     		ldr	r3, [r7, #4]
 659 0344 7B61     		str	r3, [r7, #20]
 330:common/stm32f10x_usart.c **** 
 331:common/stm32f10x_usart.c ****   /* Get the USART register index */
 332:common/stm32f10x_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 660              		.loc 1 332 0
 661 0346 7B88     		ldrh	r3, [r7, #2]	@ movhi
 662 0348 DBB2     		uxtb	r3, r3
 663 034a 5B09     		lsrs	r3, r3, #5
 664 034c DBB2     		uxtb	r3, r3
 665 034e 3B61     		str	r3, [r7, #16]
 333:common/stm32f10x_usart.c **** 
 334:common/stm32f10x_usart.c ****   /* Get the interrupt position */
 335:common/stm32f10x_usart.c ****   itpos = USART_IT & IT_Mask;
 666              		.loc 1 335 0
 667 0350 7B88     		ldrh	r3, [r7, #2]
 668 0352 03F01F03 		and	r3, r3, #31
 669 0356 FB60     		str	r3, [r7, #12]
 336:common/stm32f10x_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 670              		.loc 1 336 0
 671 0358 0122     		movs	r2, #1
 672 035a FB68     		ldr	r3, [r7, #12]
 673 035c 02FA03F3 		lsl	r3, r2, r3
 674 0360 BB60     		str	r3, [r7, #8]
 337:common/stm32f10x_usart.c ****     
ARM GAS  /tmp/ccLKhEJ6.s 			page 19


 338:common/stm32f10x_usart.c ****   if (usartreg == 0x01) /* The IT is in CR1 register */
 675              		.loc 1 338 0
 676 0362 3B69     		ldr	r3, [r7, #16]
 677 0364 012B     		cmp	r3, #1
 678 0366 03D1     		bne	.L27
 339:common/stm32f10x_usart.c ****   {
 340:common/stm32f10x_usart.c ****     usartxbase += 0x0C;
 679              		.loc 1 340 0
 680 0368 7B69     		ldr	r3, [r7, #20]
 681 036a 0C33     		adds	r3, r3, #12
 682 036c 7B61     		str	r3, [r7, #20]
 683 036e 09E0     		b	.L28
 684              	.L27:
 341:common/stm32f10x_usart.c ****   }
 342:common/stm32f10x_usart.c ****   else if (usartreg == 0x02) /* The IT is in CR2 register */
 685              		.loc 1 342 0
 686 0370 3B69     		ldr	r3, [r7, #16]
 687 0372 022B     		cmp	r3, #2
 688 0374 03D1     		bne	.L29
 343:common/stm32f10x_usart.c ****   {
 344:common/stm32f10x_usart.c ****     usartxbase += 0x10;
 689              		.loc 1 344 0
 690 0376 7B69     		ldr	r3, [r7, #20]
 691 0378 1033     		adds	r3, r3, #16
 692 037a 7B61     		str	r3, [r7, #20]
 693 037c 02E0     		b	.L28
 694              	.L29:
 345:common/stm32f10x_usart.c ****   }
 346:common/stm32f10x_usart.c ****   else /* The IT is in CR3 register */
 347:common/stm32f10x_usart.c ****   {
 348:common/stm32f10x_usart.c ****     usartxbase += 0x14; 
 695              		.loc 1 348 0
 696 037e 7B69     		ldr	r3, [r7, #20]
 697 0380 1433     		adds	r3, r3, #20
 698 0382 7B61     		str	r3, [r7, #20]
 699              	.L28:
 349:common/stm32f10x_usart.c ****   }
 350:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 700              		.loc 1 350 0
 701 0384 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 702 0386 002B     		cmp	r3, #0
 703 0388 06D0     		beq	.L30
 351:common/stm32f10x_usart.c ****   {
 352:common/stm32f10x_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 704              		.loc 1 352 0
 705 038a 7B69     		ldr	r3, [r7, #20]
 706 038c 7A69     		ldr	r2, [r7, #20]
 707 038e 1168     		ldr	r1, [r2]
 708 0390 BA68     		ldr	r2, [r7, #8]
 709 0392 0A43     		orrs	r2, r2, r1
 710 0394 1A60     		str	r2, [r3]
 353:common/stm32f10x_usart.c ****   }
 354:common/stm32f10x_usart.c ****   else
 355:common/stm32f10x_usart.c ****   {
 356:common/stm32f10x_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
 357:common/stm32f10x_usart.c ****   }
 358:common/stm32f10x_usart.c **** }
ARM GAS  /tmp/ccLKhEJ6.s 			page 20


 711              		.loc 1 358 0
 712 0396 06E0     		b	.L32
 713              	.L30:
 356:common/stm32f10x_usart.c ****   }
 714              		.loc 1 356 0
 715 0398 7B69     		ldr	r3, [r7, #20]
 716 039a 7A69     		ldr	r2, [r7, #20]
 717 039c 1168     		ldr	r1, [r2]
 718 039e BA68     		ldr	r2, [r7, #8]
 719 03a0 D243     		mvns	r2, r2
 720 03a2 0A40     		ands	r2, r2, r1
 721 03a4 1A60     		str	r2, [r3]
 722              	.L32:
 723              		.loc 1 358 0
 724 03a6 00BF     		nop
 725 03a8 1C37     		adds	r7, r7, #28
 726              		.cfi_def_cfa_offset 4
 727 03aa BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 03ac 80BC     		pop	{r7}
 731              		.cfi_restore 7
 732              		.cfi_def_cfa_offset 0
 733 03ae 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE69:
 736              		.size	USART_ITConfig, .-USART_ITConfig
 737              		.align	1
 738              		.global	USART_DMACmd
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 742              		.fpu softvfp
 743              		.type	USART_DMACmd, %function
 744              	USART_DMACmd:
 745              	.LFB70:
 359:common/stm32f10x_usart.c **** 
 360:common/stm32f10x_usart.c **** /**
 361:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART\92s DMA interface.
 362:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 363:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 364:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 365:common/stm32f10x_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
 366:common/stm32f10x_usart.c ****   *   This parameter can be any combination of the following values:
 367:common/stm32f10x_usart.c ****   *     @arg USART_DMAReq_Tx: USART DMA transmit request
 368:common/stm32f10x_usart.c ****   *     @arg USART_DMAReq_Rx: USART DMA receive request
 369:common/stm32f10x_usart.c ****   * @param  NewState: new state of the DMA Request sources.
 370:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 371:common/stm32f10x_usart.c ****   * @note The DMA mode is not available for UART5 except in the STM32
 372:common/stm32f10x_usart.c ****   *       High density value line devices(STM32F10X_HD_VL).  
 373:common/stm32f10x_usart.c ****   * @retval None
 374:common/stm32f10x_usart.c ****   */
 375:common/stm32f10x_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
 376:common/stm32f10x_usart.c **** {
 746              		.loc 1 376 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccLKhEJ6.s 			page 21


 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 03b0 80B4     		push	{r7}
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 7, -4
 754 03b2 83B0     		sub	sp, sp, #12
 755              		.cfi_def_cfa_offset 16
 756 03b4 00AF     		add	r7, sp, #0
 757              		.cfi_def_cfa_register 7
 758 03b6 7860     		str	r0, [r7, #4]
 759 03b8 0B46     		mov	r3, r1
 760 03ba 7B80     		strh	r3, [r7, #2]	@ movhi
 761 03bc 1346     		mov	r3, r2
 762 03be 7B70     		strb	r3, [r7, #1]
 377:common/stm32f10x_usart.c ****   /* Check the parameters */
 378:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 379:common/stm32f10x_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
 380:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 381:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 763              		.loc 1 381 0
 764 03c0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 765 03c2 002B     		cmp	r3, #0
 766 03c4 08D0     		beq	.L34
 382:common/stm32f10x_usart.c ****   {
 383:common/stm32f10x_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
 384:common/stm32f10x_usart.c ****        DMAR bits in the USART CR3 register */
 385:common/stm32f10x_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 767              		.loc 1 385 0
 768 03c6 7B68     		ldr	r3, [r7, #4]
 769 03c8 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 770 03ca 9AB2     		uxth	r2, r3
 771 03cc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 772 03ce 1343     		orrs	r3, r3, r2
 773 03d0 9AB2     		uxth	r2, r3
 774 03d2 7B68     		ldr	r3, [r7, #4]
 775 03d4 9A82     		strh	r2, [r3, #20]	@ movhi
 386:common/stm32f10x_usart.c ****   }
 387:common/stm32f10x_usart.c ****   else
 388:common/stm32f10x_usart.c ****   {
 389:common/stm32f10x_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
 390:common/stm32f10x_usart.c ****        DMAR bits in the USART CR3 register */
 391:common/stm32f10x_usart.c ****     USARTx->CR3 &= (uint16_t)~USART_DMAReq;
 392:common/stm32f10x_usart.c ****   }
 393:common/stm32f10x_usart.c **** }
 776              		.loc 1 393 0
 777 03d6 09E0     		b	.L36
 778              	.L34:
 391:common/stm32f10x_usart.c ****   }
 779              		.loc 1 391 0
 780 03d8 7B68     		ldr	r3, [r7, #4]
 781 03da 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 782 03dc 9AB2     		uxth	r2, r3
 783 03de 7B88     		ldrh	r3, [r7, #2]	@ movhi
 784 03e0 DB43     		mvns	r3, r3
 785 03e2 9BB2     		uxth	r3, r3
 786 03e4 1340     		ands	r3, r3, r2
 787 03e6 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccLKhEJ6.s 			page 22


 788 03e8 7B68     		ldr	r3, [r7, #4]
 789 03ea 9A82     		strh	r2, [r3, #20]	@ movhi
 790              	.L36:
 791              		.loc 1 393 0
 792 03ec 00BF     		nop
 793 03ee 0C37     		adds	r7, r7, #12
 794              		.cfi_def_cfa_offset 4
 795 03f0 BD46     		mov	sp, r7
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 03f2 80BC     		pop	{r7}
 799              		.cfi_restore 7
 800              		.cfi_def_cfa_offset 0
 801 03f4 7047     		bx	lr
 802              		.cfi_endproc
 803              	.LFE70:
 804              		.size	USART_DMACmd, .-USART_DMACmd
 805              		.align	1
 806              		.global	USART_SetAddress
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu softvfp
 811              		.type	USART_SetAddress, %function
 812              	USART_SetAddress:
 813              	.LFB71:
 394:common/stm32f10x_usart.c **** 
 395:common/stm32f10x_usart.c **** /**
 396:common/stm32f10x_usart.c ****   * @brief  Sets the address of the USART node.
 397:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 398:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 399:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 400:common/stm32f10x_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 401:common/stm32f10x_usart.c ****   * @retval None
 402:common/stm32f10x_usart.c ****   */
 403:common/stm32f10x_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 404:common/stm32f10x_usart.c **** {
 814              		.loc 1 404 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 03f6 80B4     		push	{r7}
 820              		.cfi_def_cfa_offset 4
 821              		.cfi_offset 7, -4
 822 03f8 83B0     		sub	sp, sp, #12
 823              		.cfi_def_cfa_offset 16
 824 03fa 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 826 03fc 7860     		str	r0, [r7, #4]
 827 03fe 0B46     		mov	r3, r1
 828 0400 FB70     		strb	r3, [r7, #3]
 405:common/stm32f10x_usart.c ****   /* Check the parameters */
 406:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 407:common/stm32f10x_usart.c ****   assert_param(IS_USART_ADDRESS(USART_Address)); 
 408:common/stm32f10x_usart.c ****     
 409:common/stm32f10x_usart.c ****   /* Clear the USART address */
ARM GAS  /tmp/ccLKhEJ6.s 			page 23


 410:common/stm32f10x_usart.c ****   USARTx->CR2 &= CR2_Address_Mask;
 829              		.loc 1 410 0
 830 0402 7B68     		ldr	r3, [r7, #4]
 831 0404 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 832 0406 9BB2     		uxth	r3, r3
 833 0408 23F00F03 		bic	r3, r3, #15
 834 040c 9AB2     		uxth	r2, r3
 835 040e 7B68     		ldr	r3, [r7, #4]
 836 0410 1A82     		strh	r2, [r3, #16]	@ movhi
 411:common/stm32f10x_usart.c ****   /* Set the USART address node */
 412:common/stm32f10x_usart.c ****   USARTx->CR2 |= USART_Address;
 837              		.loc 1 412 0
 838 0412 7B68     		ldr	r3, [r7, #4]
 839 0414 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 840 0416 9AB2     		uxth	r2, r3
 841 0418 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 842 041a 9BB2     		uxth	r3, r3
 843 041c 1343     		orrs	r3, r3, r2
 844 041e 9AB2     		uxth	r2, r3
 845 0420 7B68     		ldr	r3, [r7, #4]
 846 0422 1A82     		strh	r2, [r3, #16]	@ movhi
 413:common/stm32f10x_usart.c **** }
 847              		.loc 1 413 0
 848 0424 00BF     		nop
 849 0426 0C37     		adds	r7, r7, #12
 850              		.cfi_def_cfa_offset 4
 851 0428 BD46     		mov	sp, r7
 852              		.cfi_def_cfa_register 13
 853              		@ sp needed
 854 042a 80BC     		pop	{r7}
 855              		.cfi_restore 7
 856              		.cfi_def_cfa_offset 0
 857 042c 7047     		bx	lr
 858              		.cfi_endproc
 859              	.LFE71:
 860              		.size	USART_SetAddress, .-USART_SetAddress
 861              		.align	1
 862              		.global	USART_WakeUpConfig
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu softvfp
 867              		.type	USART_WakeUpConfig, %function
 868              	USART_WakeUpConfig:
 869              	.LFB72:
 414:common/stm32f10x_usart.c **** 
 415:common/stm32f10x_usart.c **** /**
 416:common/stm32f10x_usart.c ****   * @brief  Selects the USART WakeUp method.
 417:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 418:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 419:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 420:common/stm32f10x_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
 421:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 422:common/stm32f10x_usart.c ****   *     @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
 423:common/stm32f10x_usart.c ****   *     @arg USART_WakeUp_AddressMark: WakeUp by an address mark
 424:common/stm32f10x_usart.c ****   * @retval None
 425:common/stm32f10x_usart.c ****   */
ARM GAS  /tmp/ccLKhEJ6.s 			page 24


 426:common/stm32f10x_usart.c **** void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
 427:common/stm32f10x_usart.c **** {
 870              		.loc 1 427 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 8
 873              		@ frame_needed = 1, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875 042e 80B4     		push	{r7}
 876              		.cfi_def_cfa_offset 4
 877              		.cfi_offset 7, -4
 878 0430 83B0     		sub	sp, sp, #12
 879              		.cfi_def_cfa_offset 16
 880 0432 00AF     		add	r7, sp, #0
 881              		.cfi_def_cfa_register 7
 882 0434 7860     		str	r0, [r7, #4]
 883 0436 0B46     		mov	r3, r1
 884 0438 7B80     		strh	r3, [r7, #2]	@ movhi
 428:common/stm32f10x_usart.c ****   /* Check the parameters */
 429:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 430:common/stm32f10x_usart.c ****   assert_param(IS_USART_WAKEUP(USART_WakeUp));
 431:common/stm32f10x_usart.c ****   
 432:common/stm32f10x_usart.c ****   USARTx->CR1 &= CR1_WAKE_Mask;
 885              		.loc 1 432 0
 886 043a 7B68     		ldr	r3, [r7, #4]
 887 043c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 888 043e 9BB2     		uxth	r3, r3
 889 0440 23F40063 		bic	r3, r3, #2048
 890 0444 9AB2     		uxth	r2, r3
 891 0446 7B68     		ldr	r3, [r7, #4]
 892 0448 9A81     		strh	r2, [r3, #12]	@ movhi
 433:common/stm32f10x_usart.c ****   USARTx->CR1 |= USART_WakeUp;
 893              		.loc 1 433 0
 894 044a 7B68     		ldr	r3, [r7, #4]
 895 044c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 896 044e 9AB2     		uxth	r2, r3
 897 0450 7B88     		ldrh	r3, [r7, #2]	@ movhi
 898 0452 1343     		orrs	r3, r3, r2
 899 0454 9AB2     		uxth	r2, r3
 900 0456 7B68     		ldr	r3, [r7, #4]
 901 0458 9A81     		strh	r2, [r3, #12]	@ movhi
 434:common/stm32f10x_usart.c **** }
 902              		.loc 1 434 0
 903 045a 00BF     		nop
 904 045c 0C37     		adds	r7, r7, #12
 905              		.cfi_def_cfa_offset 4
 906 045e BD46     		mov	sp, r7
 907              		.cfi_def_cfa_register 13
 908              		@ sp needed
 909 0460 80BC     		pop	{r7}
 910              		.cfi_restore 7
 911              		.cfi_def_cfa_offset 0
 912 0462 7047     		bx	lr
 913              		.cfi_endproc
 914              	.LFE72:
 915              		.size	USART_WakeUpConfig, .-USART_WakeUpConfig
 916              		.align	1
 917              		.global	USART_ReceiverWakeUpCmd
ARM GAS  /tmp/ccLKhEJ6.s 			page 25


 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu softvfp
 922              		.type	USART_ReceiverWakeUpCmd, %function
 923              	USART_ReceiverWakeUpCmd:
 924              	.LFB73:
 435:common/stm32f10x_usart.c **** 
 436:common/stm32f10x_usart.c **** /**
 437:common/stm32f10x_usart.c ****   * @brief  Determines if the USART is in mute mode or not.
 438:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 439:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 440:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 441:common/stm32f10x_usart.c ****   * @param  NewState: new state of the USART mute mode.
 442:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 443:common/stm32f10x_usart.c ****   * @retval None
 444:common/stm32f10x_usart.c ****   */
 445:common/stm32f10x_usart.c **** void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 446:common/stm32f10x_usart.c **** {
 925              		.loc 1 446 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 8
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930 0464 80B4     		push	{r7}
 931              		.cfi_def_cfa_offset 4
 932              		.cfi_offset 7, -4
 933 0466 83B0     		sub	sp, sp, #12
 934              		.cfi_def_cfa_offset 16
 935 0468 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 937 046a 7860     		str	r0, [r7, #4]
 938 046c 0B46     		mov	r3, r1
 939 046e FB70     		strb	r3, [r7, #3]
 447:common/stm32f10x_usart.c ****   /* Check the parameters */
 448:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 449:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 450:common/stm32f10x_usart.c ****   
 451:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 940              		.loc 1 451 0
 941 0470 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 942 0472 002B     		cmp	r3, #0
 943 0474 08D0     		beq	.L40
 452:common/stm32f10x_usart.c ****   {
 453:common/stm32f10x_usart.c ****     /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
 454:common/stm32f10x_usart.c ****     USARTx->CR1 |= CR1_RWU_Set;
 944              		.loc 1 454 0
 945 0476 7B68     		ldr	r3, [r7, #4]
 946 0478 9B89     		ldrh	r3, [r3, #12]	@ movhi
 947 047a 9BB2     		uxth	r3, r3
 948 047c 43F00203 		orr	r3, r3, #2
 949 0480 9AB2     		uxth	r2, r3
 950 0482 7B68     		ldr	r3, [r7, #4]
 951 0484 9A81     		strh	r2, [r3, #12]	@ movhi
 455:common/stm32f10x_usart.c ****   }
 456:common/stm32f10x_usart.c ****   else
 457:common/stm32f10x_usart.c ****   {
ARM GAS  /tmp/ccLKhEJ6.s 			page 26


 458:common/stm32f10x_usart.c ****     /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
 459:common/stm32f10x_usart.c ****     USARTx->CR1 &= CR1_RWU_Reset;
 460:common/stm32f10x_usart.c ****   }
 461:common/stm32f10x_usart.c **** }
 952              		.loc 1 461 0
 953 0486 07E0     		b	.L42
 954              	.L40:
 459:common/stm32f10x_usart.c ****   }
 955              		.loc 1 459 0
 956 0488 7B68     		ldr	r3, [r7, #4]
 957 048a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 958 048c 9BB2     		uxth	r3, r3
 959 048e 23F00203 		bic	r3, r3, #2
 960 0492 9AB2     		uxth	r2, r3
 961 0494 7B68     		ldr	r3, [r7, #4]
 962 0496 9A81     		strh	r2, [r3, #12]	@ movhi
 963              	.L42:
 964              		.loc 1 461 0
 965 0498 00BF     		nop
 966 049a 0C37     		adds	r7, r7, #12
 967              		.cfi_def_cfa_offset 4
 968 049c BD46     		mov	sp, r7
 969              		.cfi_def_cfa_register 13
 970              		@ sp needed
 971 049e 80BC     		pop	{r7}
 972              		.cfi_restore 7
 973              		.cfi_def_cfa_offset 0
 974 04a0 7047     		bx	lr
 975              		.cfi_endproc
 976              	.LFE73:
 977              		.size	USART_ReceiverWakeUpCmd, .-USART_ReceiverWakeUpCmd
 978              		.align	1
 979              		.global	USART_LINBreakDetectLengthConfig
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu softvfp
 984              		.type	USART_LINBreakDetectLengthConfig, %function
 985              	USART_LINBreakDetectLengthConfig:
 986              	.LFB74:
 462:common/stm32f10x_usart.c **** 
 463:common/stm32f10x_usart.c **** /**
 464:common/stm32f10x_usart.c ****   * @brief  Sets the USART LIN Break detection length.
 465:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 466:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 467:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 468:common/stm32f10x_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
 469:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 470:common/stm32f10x_usart.c ****   *     @arg USART_LINBreakDetectLength_10b: 10-bit break detection
 471:common/stm32f10x_usart.c ****   *     @arg USART_LINBreakDetectLength_11b: 11-bit break detection
 472:common/stm32f10x_usart.c ****   * @retval None
 473:common/stm32f10x_usart.c ****   */
 474:common/stm32f10x_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
 475:common/stm32f10x_usart.c **** {
 987              		.loc 1 475 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccLKhEJ6.s 			page 27


 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 04a2 80B4     		push	{r7}
 993              		.cfi_def_cfa_offset 4
 994              		.cfi_offset 7, -4
 995 04a4 83B0     		sub	sp, sp, #12
 996              		.cfi_def_cfa_offset 16
 997 04a6 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 04a8 7860     		str	r0, [r7, #4]
 1000 04aa 0B46     		mov	r3, r1
 1001 04ac 7B80     		strh	r3, [r7, #2]	@ movhi
 476:common/stm32f10x_usart.c ****   /* Check the parameters */
 477:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 478:common/stm32f10x_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
 479:common/stm32f10x_usart.c ****   
 480:common/stm32f10x_usart.c ****   USARTx->CR2 &= CR2_LBDL_Mask;
 1002              		.loc 1 480 0
 1003 04ae 7B68     		ldr	r3, [r7, #4]
 1004 04b0 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1005 04b2 9BB2     		uxth	r3, r3
 1006 04b4 23F02003 		bic	r3, r3, #32
 1007 04b8 9AB2     		uxth	r2, r3
 1008 04ba 7B68     		ldr	r3, [r7, #4]
 1009 04bc 1A82     		strh	r2, [r3, #16]	@ movhi
 481:common/stm32f10x_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 1010              		.loc 1 481 0
 1011 04be 7B68     		ldr	r3, [r7, #4]
 1012 04c0 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1013 04c2 9AB2     		uxth	r2, r3
 1014 04c4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1015 04c6 1343     		orrs	r3, r3, r2
 1016 04c8 9AB2     		uxth	r2, r3
 1017 04ca 7B68     		ldr	r3, [r7, #4]
 1018 04cc 1A82     		strh	r2, [r3, #16]	@ movhi
 482:common/stm32f10x_usart.c **** }
 1019              		.loc 1 482 0
 1020 04ce 00BF     		nop
 1021 04d0 0C37     		adds	r7, r7, #12
 1022              		.cfi_def_cfa_offset 4
 1023 04d2 BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 04d4 80BC     		pop	{r7}
 1027              		.cfi_restore 7
 1028              		.cfi_def_cfa_offset 0
 1029 04d6 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE74:
 1032              		.size	USART_LINBreakDetectLengthConfig, .-USART_LINBreakDetectLengthConfig
 1033              		.align	1
 1034              		.global	USART_LINCmd
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1039              		.type	USART_LINCmd, %function
ARM GAS  /tmp/ccLKhEJ6.s 			page 28


 1040              	USART_LINCmd:
 1041              	.LFB75:
 483:common/stm32f10x_usart.c **** 
 484:common/stm32f10x_usart.c **** /**
 485:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART\92s LIN mode.
 486:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 487:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 488:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 489:common/stm32f10x_usart.c ****   * @param  NewState: new state of the USART LIN mode.
 490:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 491:common/stm32f10x_usart.c ****   * @retval None
 492:common/stm32f10x_usart.c ****   */
 493:common/stm32f10x_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 494:common/stm32f10x_usart.c **** {
 1042              		.loc 1 494 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 04d8 80B4     		push	{r7}
 1048              		.cfi_def_cfa_offset 4
 1049              		.cfi_offset 7, -4
 1050 04da 83B0     		sub	sp, sp, #12
 1051              		.cfi_def_cfa_offset 16
 1052 04dc 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 04de 7860     		str	r0, [r7, #4]
 1055 04e0 0B46     		mov	r3, r1
 1056 04e2 FB70     		strb	r3, [r7, #3]
 495:common/stm32f10x_usart.c ****   /* Check the parameters */
 496:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 497:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 498:common/stm32f10x_usart.c ****   
 499:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1057              		.loc 1 499 0
 1058 04e4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1059 04e6 002B     		cmp	r3, #0
 1060 04e8 08D0     		beq	.L45
 500:common/stm32f10x_usart.c ****   {
 501:common/stm32f10x_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 502:common/stm32f10x_usart.c ****     USARTx->CR2 |= CR2_LINEN_Set;
 1061              		.loc 1 502 0
 1062 04ea 7B68     		ldr	r3, [r7, #4]
 1063 04ec 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1064 04ee 9BB2     		uxth	r3, r3
 1065 04f0 43F48043 		orr	r3, r3, #16384
 1066 04f4 9AB2     		uxth	r2, r3
 1067 04f6 7B68     		ldr	r3, [r7, #4]
 1068 04f8 1A82     		strh	r2, [r3, #16]	@ movhi
 503:common/stm32f10x_usart.c ****   }
 504:common/stm32f10x_usart.c ****   else
 505:common/stm32f10x_usart.c ****   {
 506:common/stm32f10x_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
 507:common/stm32f10x_usart.c ****     USARTx->CR2 &= CR2_LINEN_Reset;
 508:common/stm32f10x_usart.c ****   }
 509:common/stm32f10x_usart.c **** }
 1069              		.loc 1 509 0
ARM GAS  /tmp/ccLKhEJ6.s 			page 29


 1070 04fa 07E0     		b	.L47
 1071              	.L45:
 507:common/stm32f10x_usart.c ****   }
 1072              		.loc 1 507 0
 1073 04fc 7B68     		ldr	r3, [r7, #4]
 1074 04fe 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1075 0500 9BB2     		uxth	r3, r3
 1076 0502 23F48043 		bic	r3, r3, #16384
 1077 0506 9AB2     		uxth	r2, r3
 1078 0508 7B68     		ldr	r3, [r7, #4]
 1079 050a 1A82     		strh	r2, [r3, #16]	@ movhi
 1080              	.L47:
 1081              		.loc 1 509 0
 1082 050c 00BF     		nop
 1083 050e 0C37     		adds	r7, r7, #12
 1084              		.cfi_def_cfa_offset 4
 1085 0510 BD46     		mov	sp, r7
 1086              		.cfi_def_cfa_register 13
 1087              		@ sp needed
 1088 0512 80BC     		pop	{r7}
 1089              		.cfi_restore 7
 1090              		.cfi_def_cfa_offset 0
 1091 0514 7047     		bx	lr
 1092              		.cfi_endproc
 1093              	.LFE75:
 1094              		.size	USART_LINCmd, .-USART_LINCmd
 1095              		.align	1
 1096              		.global	USART_SendData
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1100              		.fpu softvfp
 1101              		.type	USART_SendData, %function
 1102              	USART_SendData:
 1103              	.LFB76:
 510:common/stm32f10x_usart.c **** 
 511:common/stm32f10x_usart.c **** /**
 512:common/stm32f10x_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 513:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 514:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 515:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 516:common/stm32f10x_usart.c ****   * @param  Data: the data to transmit.
 517:common/stm32f10x_usart.c ****   * @retval None
 518:common/stm32f10x_usart.c ****   */
 519:common/stm32f10x_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 520:common/stm32f10x_usart.c **** {
 1104              		.loc 1 520 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 8
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 1109 0516 80B4     		push	{r7}
 1110              		.cfi_def_cfa_offset 4
 1111              		.cfi_offset 7, -4
 1112 0518 83B0     		sub	sp, sp, #12
 1113              		.cfi_def_cfa_offset 16
 1114 051a 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccLKhEJ6.s 			page 30


 1115              		.cfi_def_cfa_register 7
 1116 051c 7860     		str	r0, [r7, #4]
 1117 051e 0B46     		mov	r3, r1
 1118 0520 7B80     		strh	r3, [r7, #2]	@ movhi
 521:common/stm32f10x_usart.c ****   /* Check the parameters */
 522:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 523:common/stm32f10x_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 524:common/stm32f10x_usart.c ****     
 525:common/stm32f10x_usart.c ****   /* Transmit Data */
 526:common/stm32f10x_usart.c ****   USARTx->DR = (Data & (uint16_t)0x01FF);
 1119              		.loc 1 526 0
 1120 0522 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1121 0524 C3F30803 		ubfx	r3, r3, #0, #9
 1122 0528 9AB2     		uxth	r2, r3
 1123 052a 7B68     		ldr	r3, [r7, #4]
 1124 052c 9A80     		strh	r2, [r3, #4]	@ movhi
 527:common/stm32f10x_usart.c **** }
 1125              		.loc 1 527 0
 1126 052e 00BF     		nop
 1127 0530 0C37     		adds	r7, r7, #12
 1128              		.cfi_def_cfa_offset 4
 1129 0532 BD46     		mov	sp, r7
 1130              		.cfi_def_cfa_register 13
 1131              		@ sp needed
 1132 0534 80BC     		pop	{r7}
 1133              		.cfi_restore 7
 1134              		.cfi_def_cfa_offset 0
 1135 0536 7047     		bx	lr
 1136              		.cfi_endproc
 1137              	.LFE76:
 1138              		.size	USART_SendData, .-USART_SendData
 1139              		.align	1
 1140              		.global	USART_ReceiveData
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1144              		.fpu softvfp
 1145              		.type	USART_ReceiveData, %function
 1146              	USART_ReceiveData:
 1147              	.LFB77:
 528:common/stm32f10x_usart.c **** 
 529:common/stm32f10x_usart.c **** /**
 530:common/stm32f10x_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 531:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 532:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 533:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 534:common/stm32f10x_usart.c ****   * @retval The received data.
 535:common/stm32f10x_usart.c ****   */
 536:common/stm32f10x_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 537:common/stm32f10x_usart.c **** {
 1148              		.loc 1 537 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 8
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
 1152              		@ link register save eliminated.
 1153 0538 80B4     		push	{r7}
 1154              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccLKhEJ6.s 			page 31


 1155              		.cfi_offset 7, -4
 1156 053a 83B0     		sub	sp, sp, #12
 1157              		.cfi_def_cfa_offset 16
 1158 053c 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 1160 053e 7860     		str	r0, [r7, #4]
 538:common/stm32f10x_usart.c ****   /* Check the parameters */
 539:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 540:common/stm32f10x_usart.c ****   
 541:common/stm32f10x_usart.c ****   /* Receive Data */
 542:common/stm32f10x_usart.c ****   return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 1161              		.loc 1 542 0
 1162 0540 7B68     		ldr	r3, [r7, #4]
 1163 0542 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1164 0544 9BB2     		uxth	r3, r3
 1165 0546 C3F30803 		ubfx	r3, r3, #0, #9
 1166 054a 9BB2     		uxth	r3, r3
 543:common/stm32f10x_usart.c **** }
 1167              		.loc 1 543 0
 1168 054c 1846     		mov	r0, r3
 1169 054e 0C37     		adds	r7, r7, #12
 1170              		.cfi_def_cfa_offset 4
 1171 0550 BD46     		mov	sp, r7
 1172              		.cfi_def_cfa_register 13
 1173              		@ sp needed
 1174 0552 80BC     		pop	{r7}
 1175              		.cfi_restore 7
 1176              		.cfi_def_cfa_offset 0
 1177 0554 7047     		bx	lr
 1178              		.cfi_endproc
 1179              	.LFE77:
 1180              		.size	USART_ReceiveData, .-USART_ReceiveData
 1181              		.align	1
 1182              		.global	USART_SendBreak
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1186              		.fpu softvfp
 1187              		.type	USART_SendBreak, %function
 1188              	USART_SendBreak:
 1189              	.LFB78:
 544:common/stm32f10x_usart.c **** 
 545:common/stm32f10x_usart.c **** /**
 546:common/stm32f10x_usart.c ****   * @brief  Transmits break characters.
 547:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 548:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 549:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 550:common/stm32f10x_usart.c ****   * @retval None
 551:common/stm32f10x_usart.c ****   */
 552:common/stm32f10x_usart.c **** void USART_SendBreak(USART_TypeDef* USARTx)
 553:common/stm32f10x_usart.c **** {
 1190              		.loc 1 553 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 8
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 1195 0556 80B4     		push	{r7}
ARM GAS  /tmp/ccLKhEJ6.s 			page 32


 1196              		.cfi_def_cfa_offset 4
 1197              		.cfi_offset 7, -4
 1198 0558 83B0     		sub	sp, sp, #12
 1199              		.cfi_def_cfa_offset 16
 1200 055a 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 1202 055c 7860     		str	r0, [r7, #4]
 554:common/stm32f10x_usart.c ****   /* Check the parameters */
 555:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 556:common/stm32f10x_usart.c ****   
 557:common/stm32f10x_usart.c ****   /* Send break characters */
 558:common/stm32f10x_usart.c ****   USARTx->CR1 |= CR1_SBK_Set;
 1203              		.loc 1 558 0
 1204 055e 7B68     		ldr	r3, [r7, #4]
 1205 0560 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1206 0562 9BB2     		uxth	r3, r3
 1207 0564 43F00103 		orr	r3, r3, #1
 1208 0568 9AB2     		uxth	r2, r3
 1209 056a 7B68     		ldr	r3, [r7, #4]
 1210 056c 9A81     		strh	r2, [r3, #12]	@ movhi
 559:common/stm32f10x_usart.c **** }
 1211              		.loc 1 559 0
 1212 056e 00BF     		nop
 1213 0570 0C37     		adds	r7, r7, #12
 1214              		.cfi_def_cfa_offset 4
 1215 0572 BD46     		mov	sp, r7
 1216              		.cfi_def_cfa_register 13
 1217              		@ sp needed
 1218 0574 80BC     		pop	{r7}
 1219              		.cfi_restore 7
 1220              		.cfi_def_cfa_offset 0
 1221 0576 7047     		bx	lr
 1222              		.cfi_endproc
 1223              	.LFE78:
 1224              		.size	USART_SendBreak, .-USART_SendBreak
 1225              		.align	1
 1226              		.global	USART_SetGuardTime
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu softvfp
 1231              		.type	USART_SetGuardTime, %function
 1232              	USART_SetGuardTime:
 1233              	.LFB79:
 560:common/stm32f10x_usart.c **** 
 561:common/stm32f10x_usart.c **** /**
 562:common/stm32f10x_usart.c ****   * @brief  Sets the specified USART guard time.
 563:common/stm32f10x_usart.c ****   * @param  USARTx: where x can be 1, 2 or 3 to select the USART peripheral.
 564:common/stm32f10x_usart.c ****   * @param  USART_GuardTime: specifies the guard time.
 565:common/stm32f10x_usart.c ****   * @note The guard time bits are not available for UART4 and UART5.   
 566:common/stm32f10x_usart.c ****   * @retval None
 567:common/stm32f10x_usart.c ****   */
 568:common/stm32f10x_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
 569:common/stm32f10x_usart.c **** {    
 1234              		.loc 1 569 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccLKhEJ6.s 			page 33


 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 1239 0578 80B4     		push	{r7}
 1240              		.cfi_def_cfa_offset 4
 1241              		.cfi_offset 7, -4
 1242 057a 83B0     		sub	sp, sp, #12
 1243              		.cfi_def_cfa_offset 16
 1244 057c 00AF     		add	r7, sp, #0
 1245              		.cfi_def_cfa_register 7
 1246 057e 7860     		str	r0, [r7, #4]
 1247 0580 0B46     		mov	r3, r1
 1248 0582 FB70     		strb	r3, [r7, #3]
 570:common/stm32f10x_usart.c ****   /* Check the parameters */
 571:common/stm32f10x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 572:common/stm32f10x_usart.c ****   
 573:common/stm32f10x_usart.c ****   /* Clear the USART Guard time */
 574:common/stm32f10x_usart.c ****   USARTx->GTPR &= GTPR_LSB_Mask;
 1249              		.loc 1 574 0
 1250 0584 7B68     		ldr	r3, [r7, #4]
 1251 0586 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1252 0588 9BB2     		uxth	r3, r3
 1253 058a DBB2     		uxtb	r3, r3
 1254 058c 9AB2     		uxth	r2, r3
 1255 058e 7B68     		ldr	r3, [r7, #4]
 1256 0590 1A83     		strh	r2, [r3, #24]	@ movhi
 575:common/stm32f10x_usart.c ****   /* Set the USART guard time */
 576:common/stm32f10x_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 1257              		.loc 1 576 0
 1258 0592 7B68     		ldr	r3, [r7, #4]
 1259 0594 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1260 0596 9AB2     		uxth	r2, r3
 1261 0598 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1262 059a 9BB2     		uxth	r3, r3
 1263 059c 1B02     		lsls	r3, r3, #8
 1264 059e 9BB2     		uxth	r3, r3
 1265 05a0 1343     		orrs	r3, r3, r2
 1266 05a2 9AB2     		uxth	r2, r3
 1267 05a4 7B68     		ldr	r3, [r7, #4]
 1268 05a6 1A83     		strh	r2, [r3, #24]	@ movhi
 577:common/stm32f10x_usart.c **** }
 1269              		.loc 1 577 0
 1270 05a8 00BF     		nop
 1271 05aa 0C37     		adds	r7, r7, #12
 1272              		.cfi_def_cfa_offset 4
 1273 05ac BD46     		mov	sp, r7
 1274              		.cfi_def_cfa_register 13
 1275              		@ sp needed
 1276 05ae 80BC     		pop	{r7}
 1277              		.cfi_restore 7
 1278              		.cfi_def_cfa_offset 0
 1279 05b0 7047     		bx	lr
 1280              		.cfi_endproc
 1281              	.LFE79:
 1282              		.size	USART_SetGuardTime, .-USART_SetGuardTime
 1283              		.align	1
 1284              		.global	USART_SetPrescaler
 1285              		.syntax unified
ARM GAS  /tmp/ccLKhEJ6.s 			page 34


 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu softvfp
 1289              		.type	USART_SetPrescaler, %function
 1290              	USART_SetPrescaler:
 1291              	.LFB80:
 578:common/stm32f10x_usart.c **** 
 579:common/stm32f10x_usart.c **** /**
 580:common/stm32f10x_usart.c ****   * @brief  Sets the system clock prescaler.
 581:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 582:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 583:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 584:common/stm32f10x_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock.  
 585:common/stm32f10x_usart.c ****   * @note   The function is used for IrDA mode with UART4 and UART5.
 586:common/stm32f10x_usart.c ****   * @retval None
 587:common/stm32f10x_usart.c ****   */
 588:common/stm32f10x_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 589:common/stm32f10x_usart.c **** { 
 1292              		.loc 1 589 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 8
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297 05b2 80B4     		push	{r7}
 1298              		.cfi_def_cfa_offset 4
 1299              		.cfi_offset 7, -4
 1300 05b4 83B0     		sub	sp, sp, #12
 1301              		.cfi_def_cfa_offset 16
 1302 05b6 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 1304 05b8 7860     		str	r0, [r7, #4]
 1305 05ba 0B46     		mov	r3, r1
 1306 05bc FB70     		strb	r3, [r7, #3]
 590:common/stm32f10x_usart.c ****   /* Check the parameters */
 591:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 592:common/stm32f10x_usart.c ****   
 593:common/stm32f10x_usart.c ****   /* Clear the USART prescaler */
 594:common/stm32f10x_usart.c ****   USARTx->GTPR &= GTPR_MSB_Mask;
 1307              		.loc 1 594 0
 1308 05be 7B68     		ldr	r3, [r7, #4]
 1309 05c0 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1310 05c2 9BB2     		uxth	r3, r3
 1311 05c4 23F0FF03 		bic	r3, r3, #255
 1312 05c8 9AB2     		uxth	r2, r3
 1313 05ca 7B68     		ldr	r3, [r7, #4]
 1314 05cc 1A83     		strh	r2, [r3, #24]	@ movhi
 595:common/stm32f10x_usart.c ****   /* Set the USART prescaler */
 596:common/stm32f10x_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 1315              		.loc 1 596 0
 1316 05ce 7B68     		ldr	r3, [r7, #4]
 1317 05d0 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1318 05d2 9AB2     		uxth	r2, r3
 1319 05d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1320 05d6 9BB2     		uxth	r3, r3
 1321 05d8 1343     		orrs	r3, r3, r2
 1322 05da 9AB2     		uxth	r2, r3
 1323 05dc 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccLKhEJ6.s 			page 35


 1324 05de 1A83     		strh	r2, [r3, #24]	@ movhi
 597:common/stm32f10x_usart.c **** }
 1325              		.loc 1 597 0
 1326 05e0 00BF     		nop
 1327 05e2 0C37     		adds	r7, r7, #12
 1328              		.cfi_def_cfa_offset 4
 1329 05e4 BD46     		mov	sp, r7
 1330              		.cfi_def_cfa_register 13
 1331              		@ sp needed
 1332 05e6 80BC     		pop	{r7}
 1333              		.cfi_restore 7
 1334              		.cfi_def_cfa_offset 0
 1335 05e8 7047     		bx	lr
 1336              		.cfi_endproc
 1337              	.LFE80:
 1338              		.size	USART_SetPrescaler, .-USART_SetPrescaler
 1339              		.align	1
 1340              		.global	USART_SmartCardCmd
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1344              		.fpu softvfp
 1345              		.type	USART_SmartCardCmd, %function
 1346              	USART_SmartCardCmd:
 1347              	.LFB81:
 598:common/stm32f10x_usart.c **** 
 599:common/stm32f10x_usart.c **** /**
 600:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART\92s Smart Card mode.
 601:common/stm32f10x_usart.c ****   * @param  USARTx: where x can be 1, 2 or 3 to select the USART peripheral.
 602:common/stm32f10x_usart.c ****   * @param  NewState: new state of the Smart Card mode.
 603:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.     
 604:common/stm32f10x_usart.c ****   * @note The Smart Card mode is not available for UART4 and UART5. 
 605:common/stm32f10x_usart.c ****   * @retval None
 606:common/stm32f10x_usart.c ****   */
 607:common/stm32f10x_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 608:common/stm32f10x_usart.c **** {
 1348              		.loc 1 608 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 8
 1351              		@ frame_needed = 1, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
 1353 05ea 80B4     		push	{r7}
 1354              		.cfi_def_cfa_offset 4
 1355              		.cfi_offset 7, -4
 1356 05ec 83B0     		sub	sp, sp, #12
 1357              		.cfi_def_cfa_offset 16
 1358 05ee 00AF     		add	r7, sp, #0
 1359              		.cfi_def_cfa_register 7
 1360 05f0 7860     		str	r0, [r7, #4]
 1361 05f2 0B46     		mov	r3, r1
 1362 05f4 FB70     		strb	r3, [r7, #3]
 609:common/stm32f10x_usart.c ****   /* Check the parameters */
 610:common/stm32f10x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 611:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 612:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1363              		.loc 1 612 0
 1364 05f6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  /tmp/ccLKhEJ6.s 			page 36


 1365 05f8 002B     		cmp	r3, #0
 1366 05fa 08D0     		beq	.L55
 613:common/stm32f10x_usart.c ****   {
 614:common/stm32f10x_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
 615:common/stm32f10x_usart.c ****     USARTx->CR3 |= CR3_SCEN_Set;
 1367              		.loc 1 615 0
 1368 05fc 7B68     		ldr	r3, [r7, #4]
 1369 05fe 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1370 0600 9BB2     		uxth	r3, r3
 1371 0602 43F02003 		orr	r3, r3, #32
 1372 0606 9AB2     		uxth	r2, r3
 1373 0608 7B68     		ldr	r3, [r7, #4]
 1374 060a 9A82     		strh	r2, [r3, #20]	@ movhi
 616:common/stm32f10x_usart.c ****   }
 617:common/stm32f10x_usart.c ****   else
 618:common/stm32f10x_usart.c ****   {
 619:common/stm32f10x_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
 620:common/stm32f10x_usart.c ****     USARTx->CR3 &= CR3_SCEN_Reset;
 621:common/stm32f10x_usart.c ****   }
 622:common/stm32f10x_usart.c **** }
 1375              		.loc 1 622 0
 1376 060c 07E0     		b	.L57
 1377              	.L55:
 620:common/stm32f10x_usart.c ****   }
 1378              		.loc 1 620 0
 1379 060e 7B68     		ldr	r3, [r7, #4]
 1380 0610 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1381 0612 9BB2     		uxth	r3, r3
 1382 0614 23F02003 		bic	r3, r3, #32
 1383 0618 9AB2     		uxth	r2, r3
 1384 061a 7B68     		ldr	r3, [r7, #4]
 1385 061c 9A82     		strh	r2, [r3, #20]	@ movhi
 1386              	.L57:
 1387              		.loc 1 622 0
 1388 061e 00BF     		nop
 1389 0620 0C37     		adds	r7, r7, #12
 1390              		.cfi_def_cfa_offset 4
 1391 0622 BD46     		mov	sp, r7
 1392              		.cfi_def_cfa_register 13
 1393              		@ sp needed
 1394 0624 80BC     		pop	{r7}
 1395              		.cfi_restore 7
 1396              		.cfi_def_cfa_offset 0
 1397 0626 7047     		bx	lr
 1398              		.cfi_endproc
 1399              	.LFE81:
 1400              		.size	USART_SmartCardCmd, .-USART_SmartCardCmd
 1401              		.align	1
 1402              		.global	USART_SmartCardNACKCmd
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1406              		.fpu softvfp
 1407              		.type	USART_SmartCardNACKCmd, %function
 1408              	USART_SmartCardNACKCmd:
 1409              	.LFB82:
 623:common/stm32f10x_usart.c **** 
ARM GAS  /tmp/ccLKhEJ6.s 			page 37


 624:common/stm32f10x_usart.c **** /**
 625:common/stm32f10x_usart.c ****   * @brief  Enables or disables NACK transmission.
 626:common/stm32f10x_usart.c ****   * @param  USARTx: where x can be 1, 2 or 3 to select the USART peripheral. 
 627:common/stm32f10x_usart.c ****   * @param  NewState: new state of the NACK transmission.
 628:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.  
 629:common/stm32f10x_usart.c ****   * @note The Smart Card mode is not available for UART4 and UART5.
 630:common/stm32f10x_usart.c ****   * @retval None
 631:common/stm32f10x_usart.c ****   */
 632:common/stm32f10x_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 633:common/stm32f10x_usart.c **** {
 1410              		.loc 1 633 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 8
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
 1415 0628 80B4     		push	{r7}
 1416              		.cfi_def_cfa_offset 4
 1417              		.cfi_offset 7, -4
 1418 062a 83B0     		sub	sp, sp, #12
 1419              		.cfi_def_cfa_offset 16
 1420 062c 00AF     		add	r7, sp, #0
 1421              		.cfi_def_cfa_register 7
 1422 062e 7860     		str	r0, [r7, #4]
 1423 0630 0B46     		mov	r3, r1
 1424 0632 FB70     		strb	r3, [r7, #3]
 634:common/stm32f10x_usart.c ****   /* Check the parameters */
 635:common/stm32f10x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));  
 636:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 637:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1425              		.loc 1 637 0
 1426 0634 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1427 0636 002B     		cmp	r3, #0
 1428 0638 08D0     		beq	.L59
 638:common/stm32f10x_usart.c ****   {
 639:common/stm32f10x_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
 640:common/stm32f10x_usart.c ****     USARTx->CR3 |= CR3_NACK_Set;
 1429              		.loc 1 640 0
 1430 063a 7B68     		ldr	r3, [r7, #4]
 1431 063c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1432 063e 9BB2     		uxth	r3, r3
 1433 0640 43F01003 		orr	r3, r3, #16
 1434 0644 9AB2     		uxth	r2, r3
 1435 0646 7B68     		ldr	r3, [r7, #4]
 1436 0648 9A82     		strh	r2, [r3, #20]	@ movhi
 641:common/stm32f10x_usart.c ****   }
 642:common/stm32f10x_usart.c ****   else
 643:common/stm32f10x_usart.c ****   {
 644:common/stm32f10x_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
 645:common/stm32f10x_usart.c ****     USARTx->CR3 &= CR3_NACK_Reset;
 646:common/stm32f10x_usart.c ****   }
 647:common/stm32f10x_usart.c **** }
 1437              		.loc 1 647 0
 1438 064a 07E0     		b	.L61
 1439              	.L59:
 645:common/stm32f10x_usart.c ****   }
 1440              		.loc 1 645 0
 1441 064c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccLKhEJ6.s 			page 38


 1442 064e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1443 0650 9BB2     		uxth	r3, r3
 1444 0652 23F01003 		bic	r3, r3, #16
 1445 0656 9AB2     		uxth	r2, r3
 1446 0658 7B68     		ldr	r3, [r7, #4]
 1447 065a 9A82     		strh	r2, [r3, #20]	@ movhi
 1448              	.L61:
 1449              		.loc 1 647 0
 1450 065c 00BF     		nop
 1451 065e 0C37     		adds	r7, r7, #12
 1452              		.cfi_def_cfa_offset 4
 1453 0660 BD46     		mov	sp, r7
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 0662 80BC     		pop	{r7}
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 0664 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE82:
 1462              		.size	USART_SmartCardNACKCmd, .-USART_SmartCardNACKCmd
 1463              		.align	1
 1464              		.global	USART_HalfDuplexCmd
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu softvfp
 1469              		.type	USART_HalfDuplexCmd, %function
 1470              	USART_HalfDuplexCmd:
 1471              	.LFB83:
 648:common/stm32f10x_usart.c **** 
 649:common/stm32f10x_usart.c **** /**
 650:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART\92s Half Duplex communication.
 651:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 652:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 653:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 654:common/stm32f10x_usart.c ****   * @param  NewState: new state of the USART Communication.
 655:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 656:common/stm32f10x_usart.c ****   * @retval None
 657:common/stm32f10x_usart.c ****   */
 658:common/stm32f10x_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 659:common/stm32f10x_usart.c **** {
 1472              		.loc 1 659 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 8
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477 0666 80B4     		push	{r7}
 1478              		.cfi_def_cfa_offset 4
 1479              		.cfi_offset 7, -4
 1480 0668 83B0     		sub	sp, sp, #12
 1481              		.cfi_def_cfa_offset 16
 1482 066a 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 066c 7860     		str	r0, [r7, #4]
 1485 066e 0B46     		mov	r3, r1
 1486 0670 FB70     		strb	r3, [r7, #3]
ARM GAS  /tmp/ccLKhEJ6.s 			page 39


 660:common/stm32f10x_usart.c ****   /* Check the parameters */
 661:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 662:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 663:common/stm32f10x_usart.c ****   
 664:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1487              		.loc 1 664 0
 1488 0672 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1489 0674 002B     		cmp	r3, #0
 1490 0676 08D0     		beq	.L63
 665:common/stm32f10x_usart.c ****   {
 666:common/stm32f10x_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 667:common/stm32f10x_usart.c ****     USARTx->CR3 |= CR3_HDSEL_Set;
 1491              		.loc 1 667 0
 1492 0678 7B68     		ldr	r3, [r7, #4]
 1493 067a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1494 067c 9BB2     		uxth	r3, r3
 1495 067e 43F00803 		orr	r3, r3, #8
 1496 0682 9AB2     		uxth	r2, r3
 1497 0684 7B68     		ldr	r3, [r7, #4]
 1498 0686 9A82     		strh	r2, [r3, #20]	@ movhi
 668:common/stm32f10x_usart.c ****   }
 669:common/stm32f10x_usart.c ****   else
 670:common/stm32f10x_usart.c ****   {
 671:common/stm32f10x_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
 672:common/stm32f10x_usart.c ****     USARTx->CR3 &= CR3_HDSEL_Reset;
 673:common/stm32f10x_usart.c ****   }
 674:common/stm32f10x_usart.c **** }
 1499              		.loc 1 674 0
 1500 0688 07E0     		b	.L65
 1501              	.L63:
 672:common/stm32f10x_usart.c ****   }
 1502              		.loc 1 672 0
 1503 068a 7B68     		ldr	r3, [r7, #4]
 1504 068c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1505 068e 9BB2     		uxth	r3, r3
 1506 0690 23F00803 		bic	r3, r3, #8
 1507 0694 9AB2     		uxth	r2, r3
 1508 0696 7B68     		ldr	r3, [r7, #4]
 1509 0698 9A82     		strh	r2, [r3, #20]	@ movhi
 1510              	.L65:
 1511              		.loc 1 674 0
 1512 069a 00BF     		nop
 1513 069c 0C37     		adds	r7, r7, #12
 1514              		.cfi_def_cfa_offset 4
 1515 069e BD46     		mov	sp, r7
 1516              		.cfi_def_cfa_register 13
 1517              		@ sp needed
 1518 06a0 80BC     		pop	{r7}
 1519              		.cfi_restore 7
 1520              		.cfi_def_cfa_offset 0
 1521 06a2 7047     		bx	lr
 1522              		.cfi_endproc
 1523              	.LFE83:
 1524              		.size	USART_HalfDuplexCmd, .-USART_HalfDuplexCmd
 1525              		.align	1
 1526              		.global	USART_OverSampling8Cmd
 1527              		.syntax unified
ARM GAS  /tmp/ccLKhEJ6.s 			page 40


 1528              		.thumb
 1529              		.thumb_func
 1530              		.fpu softvfp
 1531              		.type	USART_OverSampling8Cmd, %function
 1532              	USART_OverSampling8Cmd:
 1533              	.LFB84:
 675:common/stm32f10x_usart.c **** 
 676:common/stm32f10x_usart.c **** 
 677:common/stm32f10x_usart.c **** /**
 678:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 679:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral.
 680:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 681:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 682:common/stm32f10x_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 683:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:common/stm32f10x_usart.c ****   * @note
 685:common/stm32f10x_usart.c ****   *     This function has to be called before calling USART_Init()
 686:common/stm32f10x_usart.c ****   *     function in order to have correct baudrate Divider value.   
 687:common/stm32f10x_usart.c ****   * @retval None
 688:common/stm32f10x_usart.c ****   */
 689:common/stm32f10x_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 690:common/stm32f10x_usart.c **** {
 1534              		.loc 1 690 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 8
 1537              		@ frame_needed = 1, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 1539 06a4 80B4     		push	{r7}
 1540              		.cfi_def_cfa_offset 4
 1541              		.cfi_offset 7, -4
 1542 06a6 83B0     		sub	sp, sp, #12
 1543              		.cfi_def_cfa_offset 16
 1544 06a8 00AF     		add	r7, sp, #0
 1545              		.cfi_def_cfa_register 7
 1546 06aa 7860     		str	r0, [r7, #4]
 1547 06ac 0B46     		mov	r3, r1
 1548 06ae FB70     		strb	r3, [r7, #3]
 691:common/stm32f10x_usart.c ****   /* Check the parameters */
 692:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 693:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 694:common/stm32f10x_usart.c ****   
 695:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1549              		.loc 1 695 0
 1550 06b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1551 06b2 002B     		cmp	r3, #0
 1552 06b4 0AD0     		beq	.L67
 696:common/stm32f10x_usart.c ****   {
 697:common/stm32f10x_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 698:common/stm32f10x_usart.c ****     USARTx->CR1 |= CR1_OVER8_Set;
 1553              		.loc 1 698 0
 1554 06b6 7B68     		ldr	r3, [r7, #4]
 1555 06b8 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1556 06ba 9BB2     		uxth	r3, r3
 1557 06bc 6FEA4343 		mvn	r3, r3, lsl #17
 1558 06c0 6FEA5343 		mvn	r3, r3, lsr #17
 1559 06c4 9AB2     		uxth	r2, r3
 1560 06c6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccLKhEJ6.s 			page 41


 1561 06c8 9A81     		strh	r2, [r3, #12]	@ movhi
 699:common/stm32f10x_usart.c ****   }
 700:common/stm32f10x_usart.c ****   else
 701:common/stm32f10x_usart.c ****   {
 702:common/stm32f10x_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 703:common/stm32f10x_usart.c ****     USARTx->CR1 &= CR1_OVER8_Reset;
 704:common/stm32f10x_usart.c ****   }
 705:common/stm32f10x_usart.c **** }
 1562              		.loc 1 705 0
 1563 06ca 07E0     		b	.L69
 1564              	.L67:
 703:common/stm32f10x_usart.c ****   }
 1565              		.loc 1 703 0
 1566 06cc 7B68     		ldr	r3, [r7, #4]
 1567 06ce 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1568 06d0 9BB2     		uxth	r3, r3
 1569 06d2 C3F30E03 		ubfx	r3, r3, #0, #15
 1570 06d6 9AB2     		uxth	r2, r3
 1571 06d8 7B68     		ldr	r3, [r7, #4]
 1572 06da 9A81     		strh	r2, [r3, #12]	@ movhi
 1573              	.L69:
 1574              		.loc 1 705 0
 1575 06dc 00BF     		nop
 1576 06de 0C37     		adds	r7, r7, #12
 1577              		.cfi_def_cfa_offset 4
 1578 06e0 BD46     		mov	sp, r7
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 06e2 80BC     		pop	{r7}
 1582              		.cfi_restore 7
 1583              		.cfi_def_cfa_offset 0
 1584 06e4 7047     		bx	lr
 1585              		.cfi_endproc
 1586              	.LFE84:
 1587              		.size	USART_OverSampling8Cmd, .-USART_OverSampling8Cmd
 1588              		.align	1
 1589              		.global	USART_OneBitMethodCmd
 1590              		.syntax unified
 1591              		.thumb
 1592              		.thumb_func
 1593              		.fpu softvfp
 1594              		.type	USART_OneBitMethodCmd, %function
 1595              	USART_OneBitMethodCmd:
 1596              	.LFB85:
 706:common/stm32f10x_usart.c **** 
 707:common/stm32f10x_usart.c **** /**
 708:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 709:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral.
 710:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 711:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 712:common/stm32f10x_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 713:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 714:common/stm32f10x_usart.c ****   * @retval None
 715:common/stm32f10x_usart.c ****   */
 716:common/stm32f10x_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 717:common/stm32f10x_usart.c **** {
 1597              		.loc 1 717 0
ARM GAS  /tmp/ccLKhEJ6.s 			page 42


 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 8
 1600              		@ frame_needed = 1, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602 06e6 80B4     		push	{r7}
 1603              		.cfi_def_cfa_offset 4
 1604              		.cfi_offset 7, -4
 1605 06e8 83B0     		sub	sp, sp, #12
 1606              		.cfi_def_cfa_offset 16
 1607 06ea 00AF     		add	r7, sp, #0
 1608              		.cfi_def_cfa_register 7
 1609 06ec 7860     		str	r0, [r7, #4]
 1610 06ee 0B46     		mov	r3, r1
 1611 06f0 FB70     		strb	r3, [r7, #3]
 718:common/stm32f10x_usart.c ****   /* Check the parameters */
 719:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 720:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 721:common/stm32f10x_usart.c ****   
 722:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1612              		.loc 1 722 0
 1613 06f2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1614 06f4 002B     		cmp	r3, #0
 1615 06f6 08D0     		beq	.L71
 723:common/stm32f10x_usart.c ****   {
 724:common/stm32f10x_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 725:common/stm32f10x_usart.c ****     USARTx->CR3 |= CR3_ONEBITE_Set;
 1616              		.loc 1 725 0
 1617 06f8 7B68     		ldr	r3, [r7, #4]
 1618 06fa 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1619 06fc 9BB2     		uxth	r3, r3
 1620 06fe 43F40063 		orr	r3, r3, #2048
 1621 0702 9AB2     		uxth	r2, r3
 1622 0704 7B68     		ldr	r3, [r7, #4]
 1623 0706 9A82     		strh	r2, [r3, #20]	@ movhi
 726:common/stm32f10x_usart.c ****   }
 727:common/stm32f10x_usart.c ****   else
 728:common/stm32f10x_usart.c ****   {
 729:common/stm32f10x_usart.c ****     /* Disable tthe one bit method by clearing the ONEBITE bit in the CR3 register */
 730:common/stm32f10x_usart.c ****     USARTx->CR3 &= CR3_ONEBITE_Reset;
 731:common/stm32f10x_usart.c ****   }
 732:common/stm32f10x_usart.c **** }
 1624              		.loc 1 732 0
 1625 0708 07E0     		b	.L73
 1626              	.L71:
 730:common/stm32f10x_usart.c ****   }
 1627              		.loc 1 730 0
 1628 070a 7B68     		ldr	r3, [r7, #4]
 1629 070c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1630 070e 9BB2     		uxth	r3, r3
 1631 0710 23F40063 		bic	r3, r3, #2048
 1632 0714 9AB2     		uxth	r2, r3
 1633 0716 7B68     		ldr	r3, [r7, #4]
 1634 0718 9A82     		strh	r2, [r3, #20]	@ movhi
 1635              	.L73:
 1636              		.loc 1 732 0
 1637 071a 00BF     		nop
 1638 071c 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccLKhEJ6.s 			page 43


 1639              		.cfi_def_cfa_offset 4
 1640 071e BD46     		mov	sp, r7
 1641              		.cfi_def_cfa_register 13
 1642              		@ sp needed
 1643 0720 80BC     		pop	{r7}
 1644              		.cfi_restore 7
 1645              		.cfi_def_cfa_offset 0
 1646 0722 7047     		bx	lr
 1647              		.cfi_endproc
 1648              	.LFE85:
 1649              		.size	USART_OneBitMethodCmd, .-USART_OneBitMethodCmd
 1650              		.align	1
 1651              		.global	USART_IrDAConfig
 1652              		.syntax unified
 1653              		.thumb
 1654              		.thumb_func
 1655              		.fpu softvfp
 1656              		.type	USART_IrDAConfig, %function
 1657              	USART_IrDAConfig:
 1658              	.LFB86:
 733:common/stm32f10x_usart.c **** 
 734:common/stm32f10x_usart.c **** /**
 735:common/stm32f10x_usart.c ****   * @brief  Configures the USART's IrDA interface.
 736:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 737:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 738:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 739:common/stm32f10x_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
 740:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 741:common/stm32f10x_usart.c ****   *     @arg USART_IrDAMode_LowPower
 742:common/stm32f10x_usart.c ****   *     @arg USART_IrDAMode_Normal
 743:common/stm32f10x_usart.c ****   * @retval None
 744:common/stm32f10x_usart.c ****   */
 745:common/stm32f10x_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
 746:common/stm32f10x_usart.c **** {
 1659              		.loc 1 746 0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 8
 1662              		@ frame_needed = 1, uses_anonymous_args = 0
 1663              		@ link register save eliminated.
 1664 0724 80B4     		push	{r7}
 1665              		.cfi_def_cfa_offset 4
 1666              		.cfi_offset 7, -4
 1667 0726 83B0     		sub	sp, sp, #12
 1668              		.cfi_def_cfa_offset 16
 1669 0728 00AF     		add	r7, sp, #0
 1670              		.cfi_def_cfa_register 7
 1671 072a 7860     		str	r0, [r7, #4]
 1672 072c 0B46     		mov	r3, r1
 1673 072e 7B80     		strh	r3, [r7, #2]	@ movhi
 747:common/stm32f10x_usart.c ****   /* Check the parameters */
 748:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 749:common/stm32f10x_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
 750:common/stm32f10x_usart.c ****     
 751:common/stm32f10x_usart.c ****   USARTx->CR3 &= CR3_IRLP_Mask;
 1674              		.loc 1 751 0
 1675 0730 7B68     		ldr	r3, [r7, #4]
 1676 0732 9B8A     		ldrh	r3, [r3, #20]	@ movhi
ARM GAS  /tmp/ccLKhEJ6.s 			page 44


 1677 0734 9BB2     		uxth	r3, r3
 1678 0736 23F00403 		bic	r3, r3, #4
 1679 073a 9AB2     		uxth	r2, r3
 1680 073c 7B68     		ldr	r3, [r7, #4]
 1681 073e 9A82     		strh	r2, [r3, #20]	@ movhi
 752:common/stm32f10x_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
 1682              		.loc 1 752 0
 1683 0740 7B68     		ldr	r3, [r7, #4]
 1684 0742 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1685 0744 9AB2     		uxth	r2, r3
 1686 0746 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1687 0748 1343     		orrs	r3, r3, r2
 1688 074a 9AB2     		uxth	r2, r3
 1689 074c 7B68     		ldr	r3, [r7, #4]
 1690 074e 9A82     		strh	r2, [r3, #20]	@ movhi
 753:common/stm32f10x_usart.c **** }
 1691              		.loc 1 753 0
 1692 0750 00BF     		nop
 1693 0752 0C37     		adds	r7, r7, #12
 1694              		.cfi_def_cfa_offset 4
 1695 0754 BD46     		mov	sp, r7
 1696              		.cfi_def_cfa_register 13
 1697              		@ sp needed
 1698 0756 80BC     		pop	{r7}
 1699              		.cfi_restore 7
 1700              		.cfi_def_cfa_offset 0
 1701 0758 7047     		bx	lr
 1702              		.cfi_endproc
 1703              	.LFE86:
 1704              		.size	USART_IrDAConfig, .-USART_IrDAConfig
 1705              		.align	1
 1706              		.global	USART_IrDACmd
 1707              		.syntax unified
 1708              		.thumb
 1709              		.thumb_func
 1710              		.fpu softvfp
 1711              		.type	USART_IrDACmd, %function
 1712              	USART_IrDACmd:
 1713              	.LFB87:
 754:common/stm32f10x_usart.c **** 
 755:common/stm32f10x_usart.c **** /**
 756:common/stm32f10x_usart.c ****   * @brief  Enables or disables the USART's IrDA interface.
 757:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 758:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 759:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 760:common/stm32f10x_usart.c ****   * @param  NewState: new state of the IrDA mode.
 761:common/stm32f10x_usart.c ****   *   This parameter can be: ENABLE or DISABLE.
 762:common/stm32f10x_usart.c ****   * @retval None
 763:common/stm32f10x_usart.c ****   */
 764:common/stm32f10x_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
 765:common/stm32f10x_usart.c **** {
 1714              		.loc 1 765 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 8
 1717              		@ frame_needed = 1, uses_anonymous_args = 0
 1718              		@ link register save eliminated.
 1719 075a 80B4     		push	{r7}
ARM GAS  /tmp/ccLKhEJ6.s 			page 45


 1720              		.cfi_def_cfa_offset 4
 1721              		.cfi_offset 7, -4
 1722 075c 83B0     		sub	sp, sp, #12
 1723              		.cfi_def_cfa_offset 16
 1724 075e 00AF     		add	r7, sp, #0
 1725              		.cfi_def_cfa_register 7
 1726 0760 7860     		str	r0, [r7, #4]
 1727 0762 0B46     		mov	r3, r1
 1728 0764 FB70     		strb	r3, [r7, #3]
 766:common/stm32f10x_usart.c ****   /* Check the parameters */
 767:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 768:common/stm32f10x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 769:common/stm32f10x_usart.c ****     
 770:common/stm32f10x_usart.c ****   if (NewState != DISABLE)
 1729              		.loc 1 770 0
 1730 0766 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1731 0768 002B     		cmp	r3, #0
 1732 076a 08D0     		beq	.L76
 771:common/stm32f10x_usart.c ****   {
 772:common/stm32f10x_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
 773:common/stm32f10x_usart.c ****     USARTx->CR3 |= CR3_IREN_Set;
 1733              		.loc 1 773 0
 1734 076c 7B68     		ldr	r3, [r7, #4]
 1735 076e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1736 0770 9BB2     		uxth	r3, r3
 1737 0772 43F00203 		orr	r3, r3, #2
 1738 0776 9AB2     		uxth	r2, r3
 1739 0778 7B68     		ldr	r3, [r7, #4]
 1740 077a 9A82     		strh	r2, [r3, #20]	@ movhi
 774:common/stm32f10x_usart.c ****   }
 775:common/stm32f10x_usart.c ****   else
 776:common/stm32f10x_usart.c ****   {
 777:common/stm32f10x_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
 778:common/stm32f10x_usart.c ****     USARTx->CR3 &= CR3_IREN_Reset;
 779:common/stm32f10x_usart.c ****   }
 780:common/stm32f10x_usart.c **** }
 1741              		.loc 1 780 0
 1742 077c 07E0     		b	.L78
 1743              	.L76:
 778:common/stm32f10x_usart.c ****   }
 1744              		.loc 1 778 0
 1745 077e 7B68     		ldr	r3, [r7, #4]
 1746 0780 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1747 0782 9BB2     		uxth	r3, r3
 1748 0784 23F00203 		bic	r3, r3, #2
 1749 0788 9AB2     		uxth	r2, r3
 1750 078a 7B68     		ldr	r3, [r7, #4]
 1751 078c 9A82     		strh	r2, [r3, #20]	@ movhi
 1752              	.L78:
 1753              		.loc 1 780 0
 1754 078e 00BF     		nop
 1755 0790 0C37     		adds	r7, r7, #12
 1756              		.cfi_def_cfa_offset 4
 1757 0792 BD46     		mov	sp, r7
 1758              		.cfi_def_cfa_register 13
 1759              		@ sp needed
 1760 0794 80BC     		pop	{r7}
ARM GAS  /tmp/ccLKhEJ6.s 			page 46


 1761              		.cfi_restore 7
 1762              		.cfi_def_cfa_offset 0
 1763 0796 7047     		bx	lr
 1764              		.cfi_endproc
 1765              	.LFE87:
 1766              		.size	USART_IrDACmd, .-USART_IrDACmd
 1767              		.align	1
 1768              		.global	USART_GetFlagStatus
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu softvfp
 1773              		.type	USART_GetFlagStatus, %function
 1774              	USART_GetFlagStatus:
 1775              	.LFB88:
 781:common/stm32f10x_usart.c **** 
 782:common/stm32f10x_usart.c **** /**
 783:common/stm32f10x_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
 784:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 785:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 786:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 787:common/stm32f10x_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
 788:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 789:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5)
 790:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_LBD:  LIN Break detection flag
 791:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_TXE:  Transmit data register empty flag
 792:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_TC:   Transmission Complete flag
 793:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_RXNE: Receive data register not empty flag
 794:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_IDLE: Idle Line detection flag
 795:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_ORE:  OverRun Error flag
 796:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_NE:   Noise Error flag
 797:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_FE:   Framing Error flag
 798:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_PE:   Parity Error flag
 799:common/stm32f10x_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
 800:common/stm32f10x_usart.c ****   */
 801:common/stm32f10x_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
 802:common/stm32f10x_usart.c **** {
 1776              		.loc 1 802 0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 16
 1779              		@ frame_needed = 1, uses_anonymous_args = 0
 1780              		@ link register save eliminated.
 1781 0798 80B4     		push	{r7}
 1782              		.cfi_def_cfa_offset 4
 1783              		.cfi_offset 7, -4
 1784 079a 85B0     		sub	sp, sp, #20
 1785              		.cfi_def_cfa_offset 24
 1786 079c 00AF     		add	r7, sp, #0
 1787              		.cfi_def_cfa_register 7
 1788 079e 7860     		str	r0, [r7, #4]
 1789 07a0 0B46     		mov	r3, r1
 1790 07a2 7B80     		strh	r3, [r7, #2]	@ movhi
 803:common/stm32f10x_usart.c ****   FlagStatus bitstatus = RESET;
 1791              		.loc 1 803 0
 1792 07a4 0023     		movs	r3, #0
 1793 07a6 FB73     		strb	r3, [r7, #15]
 804:common/stm32f10x_usart.c ****   /* Check the parameters */
ARM GAS  /tmp/ccLKhEJ6.s 			page 47


 805:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 806:common/stm32f10x_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
 807:common/stm32f10x_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
 808:common/stm32f10x_usart.c ****   if (USART_FLAG == USART_FLAG_CTS)
 809:common/stm32f10x_usart.c ****   {
 810:common/stm32f10x_usart.c ****     assert_param(IS_USART_123_PERIPH(USARTx));
 811:common/stm32f10x_usart.c ****   }  
 812:common/stm32f10x_usart.c ****   
 813:common/stm32f10x_usart.c ****   if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 1794              		.loc 1 813 0
 1795 07a8 7B68     		ldr	r3, [r7, #4]
 1796 07aa 1B88     		ldrh	r3, [r3]	@ movhi
 1797 07ac 9AB2     		uxth	r2, r3
 1798 07ae 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1799 07b0 1340     		ands	r3, r3, r2
 1800 07b2 9BB2     		uxth	r3, r3
 1801 07b4 002B     		cmp	r3, #0
 1802 07b6 02D0     		beq	.L80
 814:common/stm32f10x_usart.c ****   {
 815:common/stm32f10x_usart.c ****     bitstatus = SET;
 1803              		.loc 1 815 0
 1804 07b8 0123     		movs	r3, #1
 1805 07ba FB73     		strb	r3, [r7, #15]
 1806 07bc 01E0     		b	.L81
 1807              	.L80:
 816:common/stm32f10x_usart.c ****   }
 817:common/stm32f10x_usart.c ****   else
 818:common/stm32f10x_usart.c ****   {
 819:common/stm32f10x_usart.c ****     bitstatus = RESET;
 1808              		.loc 1 819 0
 1809 07be 0023     		movs	r3, #0
 1810 07c0 FB73     		strb	r3, [r7, #15]
 1811              	.L81:
 820:common/stm32f10x_usart.c ****   }
 821:common/stm32f10x_usart.c ****   return bitstatus;
 1812              		.loc 1 821 0
 1813 07c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 822:common/stm32f10x_usart.c **** }
 1814              		.loc 1 822 0
 1815 07c4 1846     		mov	r0, r3
 1816 07c6 1437     		adds	r7, r7, #20
 1817              		.cfi_def_cfa_offset 4
 1818 07c8 BD46     		mov	sp, r7
 1819              		.cfi_def_cfa_register 13
 1820              		@ sp needed
 1821 07ca 80BC     		pop	{r7}
 1822              		.cfi_restore 7
 1823              		.cfi_def_cfa_offset 0
 1824 07cc 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE88:
 1827              		.size	USART_GetFlagStatus, .-USART_GetFlagStatus
 1828              		.align	1
 1829              		.global	USART_ClearFlag
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
ARM GAS  /tmp/ccLKhEJ6.s 			page 48


 1833              		.fpu softvfp
 1834              		.type	USART_ClearFlag, %function
 1835              	USART_ClearFlag:
 1836              	.LFB89:
 823:common/stm32f10x_usart.c **** 
 824:common/stm32f10x_usart.c **** /**
 825:common/stm32f10x_usart.c ****   * @brief  Clears the USARTx's pending flags.
 826:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 827:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 828:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 829:common/stm32f10x_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
 830:common/stm32f10x_usart.c ****   *   This parameter can be any combination of the following values:
 831:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5).
 832:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_LBD:  LIN Break detection flag.
 833:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_TC:   Transmission Complete flag.
 834:common/stm32f10x_usart.c ****   *     @arg USART_FLAG_RXNE: Receive data register not empty flag.
 835:common/stm32f10x_usart.c ****   *   
 836:common/stm32f10x_usart.c ****   * @note
 837:common/stm32f10x_usart.c ****   *   - PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
 838:common/stm32f10x_usart.c ****   *     error) and IDLE (Idle line detected) flags are cleared by software 
 839:common/stm32f10x_usart.c ****   *     sequence: a read operation to USART_SR register (USART_GetFlagStatus()) 
 840:common/stm32f10x_usart.c ****   *     followed by a read operation to USART_DR register (USART_ReceiveData()).
 841:common/stm32f10x_usart.c ****   *   - RXNE flag can be also cleared by a read to the USART_DR register 
 842:common/stm32f10x_usart.c ****   *     (USART_ReceiveData()).
 843:common/stm32f10x_usart.c ****   *   - TC flag can be also cleared by software sequence: a read operation to 
 844:common/stm32f10x_usart.c ****   *     USART_SR register (USART_GetFlagStatus()) followed by a write operation
 845:common/stm32f10x_usart.c ****   *     to USART_DR register (USART_SendData()).
 846:common/stm32f10x_usart.c ****   *   - TXE flag is cleared only by a write to the USART_DR register 
 847:common/stm32f10x_usart.c ****   *     (USART_SendData()).
 848:common/stm32f10x_usart.c ****   * @retval None
 849:common/stm32f10x_usart.c ****   */
 850:common/stm32f10x_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
 851:common/stm32f10x_usart.c **** {
 1837              		.loc 1 851 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 8
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841              		@ link register save eliminated.
 1842 07ce 80B4     		push	{r7}
 1843              		.cfi_def_cfa_offset 4
 1844              		.cfi_offset 7, -4
 1845 07d0 83B0     		sub	sp, sp, #12
 1846              		.cfi_def_cfa_offset 16
 1847 07d2 00AF     		add	r7, sp, #0
 1848              		.cfi_def_cfa_register 7
 1849 07d4 7860     		str	r0, [r7, #4]
 1850 07d6 0B46     		mov	r3, r1
 1851 07d8 7B80     		strh	r3, [r7, #2]	@ movhi
 852:common/stm32f10x_usart.c ****   /* Check the parameters */
 853:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 854:common/stm32f10x_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
 855:common/stm32f10x_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
 856:common/stm32f10x_usart.c ****   if ((USART_FLAG & USART_FLAG_CTS) == USART_FLAG_CTS)
 857:common/stm32f10x_usart.c ****   {
 858:common/stm32f10x_usart.c ****     assert_param(IS_USART_123_PERIPH(USARTx));
 859:common/stm32f10x_usart.c ****   } 
 860:common/stm32f10x_usart.c ****    
ARM GAS  /tmp/ccLKhEJ6.s 			page 49


 861:common/stm32f10x_usart.c ****   USARTx->SR = (uint16_t)~USART_FLAG;
 1852              		.loc 1 861 0
 1853 07da 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1854 07dc DB43     		mvns	r3, r3
 1855 07de 9AB2     		uxth	r2, r3
 1856 07e0 7B68     		ldr	r3, [r7, #4]
 1857 07e2 1A80     		strh	r2, [r3]	@ movhi
 862:common/stm32f10x_usart.c **** }
 1858              		.loc 1 862 0
 1859 07e4 00BF     		nop
 1860 07e6 0C37     		adds	r7, r7, #12
 1861              		.cfi_def_cfa_offset 4
 1862 07e8 BD46     		mov	sp, r7
 1863              		.cfi_def_cfa_register 13
 1864              		@ sp needed
 1865 07ea 80BC     		pop	{r7}
 1866              		.cfi_restore 7
 1867              		.cfi_def_cfa_offset 0
 1868 07ec 7047     		bx	lr
 1869              		.cfi_endproc
 1870              	.LFE89:
 1871              		.size	USART_ClearFlag, .-USART_ClearFlag
 1872              		.align	1
 1873              		.global	USART_GetITStatus
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu softvfp
 1878              		.type	USART_GetITStatus, %function
 1879              	USART_GetITStatus:
 1880              	.LFB90:
 863:common/stm32f10x_usart.c **** 
 864:common/stm32f10x_usart.c **** /**
 865:common/stm32f10x_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
 866:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 867:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 868:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 869:common/stm32f10x_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
 870:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 871:common/stm32f10x_usart.c ****   *     @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
 872:common/stm32f10x_usart.c ****   *     @arg USART_IT_LBD:  LIN Break detection interrupt
 873:common/stm32f10x_usart.c ****   *     @arg USART_IT_TXE:  Tansmit Data Register empty interrupt
 874:common/stm32f10x_usart.c ****   *     @arg USART_IT_TC:   Transmission complete interrupt
 875:common/stm32f10x_usart.c ****   *     @arg USART_IT_RXNE: Receive Data register not empty interrupt
 876:common/stm32f10x_usart.c ****   *     @arg USART_IT_IDLE: Idle line detection interrupt
 877:common/stm32f10x_usart.c ****   *     @arg USART_IT_ORE:  OverRun Error interrupt
 878:common/stm32f10x_usart.c ****   *     @arg USART_IT_NE:   Noise Error interrupt
 879:common/stm32f10x_usart.c ****   *     @arg USART_IT_FE:   Framing Error interrupt
 880:common/stm32f10x_usart.c ****   *     @arg USART_IT_PE:   Parity Error interrupt
 881:common/stm32f10x_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
 882:common/stm32f10x_usart.c ****   */
 883:common/stm32f10x_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
 884:common/stm32f10x_usart.c **** {
 1881              		.loc 1 884 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 24
 1884              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccLKhEJ6.s 			page 50


 1885              		@ link register save eliminated.
 1886 07ee 80B4     		push	{r7}
 1887              		.cfi_def_cfa_offset 4
 1888              		.cfi_offset 7, -4
 1889 07f0 87B0     		sub	sp, sp, #28
 1890              		.cfi_def_cfa_offset 32
 1891 07f2 00AF     		add	r7, sp, #0
 1892              		.cfi_def_cfa_register 7
 1893 07f4 7860     		str	r0, [r7, #4]
 1894 07f6 0B46     		mov	r3, r1
 1895 07f8 7B80     		strh	r3, [r7, #2]	@ movhi
 885:common/stm32f10x_usart.c ****   uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
 1896              		.loc 1 885 0
 1897 07fa 0023     		movs	r3, #0
 1898 07fc FB60     		str	r3, [r7, #12]
 1899 07fe 0023     		movs	r3, #0
 1900 0800 7B61     		str	r3, [r7, #20]
 1901 0802 0023     		movs	r3, #0
 1902 0804 BB60     		str	r3, [r7, #8]
 886:common/stm32f10x_usart.c ****   ITStatus bitstatus = RESET;
 1903              		.loc 1 886 0
 1904 0806 0023     		movs	r3, #0
 1905 0808 FB74     		strb	r3, [r7, #19]
 887:common/stm32f10x_usart.c ****   /* Check the parameters */
 888:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 889:common/stm32f10x_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT));
 890:common/stm32f10x_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */ 
 891:common/stm32f10x_usart.c ****   if (USART_IT == USART_IT_CTS)
 892:common/stm32f10x_usart.c ****   {
 893:common/stm32f10x_usart.c ****     assert_param(IS_USART_123_PERIPH(USARTx));
 894:common/stm32f10x_usart.c ****   }   
 895:common/stm32f10x_usart.c ****   
 896:common/stm32f10x_usart.c ****   /* Get the USART register index */
 897:common/stm32f10x_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1906              		.loc 1 897 0
 1907 080a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1908 080c DBB2     		uxtb	r3, r3
 1909 080e 5B09     		lsrs	r3, r3, #5
 1910 0810 DBB2     		uxtb	r3, r3
 1911 0812 BB60     		str	r3, [r7, #8]
 898:common/stm32f10x_usart.c ****   /* Get the interrupt position */
 899:common/stm32f10x_usart.c ****   itmask = USART_IT & IT_Mask;
 1912              		.loc 1 899 0
 1913 0814 7B88     		ldrh	r3, [r7, #2]
 1914 0816 03F01F03 		and	r3, r3, #31
 1915 081a 7B61     		str	r3, [r7, #20]
 900:common/stm32f10x_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 1916              		.loc 1 900 0
 1917 081c 0122     		movs	r2, #1
 1918 081e 7B69     		ldr	r3, [r7, #20]
 1919 0820 02FA03F3 		lsl	r3, r2, r3
 1920 0824 7B61     		str	r3, [r7, #20]
 901:common/stm32f10x_usart.c ****   
 902:common/stm32f10x_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 1921              		.loc 1 902 0
 1922 0826 BB68     		ldr	r3, [r7, #8]
 1923 0828 012B     		cmp	r3, #1
ARM GAS  /tmp/ccLKhEJ6.s 			page 51


 1924 082a 07D1     		bne	.L85
 903:common/stm32f10x_usart.c ****   {
 904:common/stm32f10x_usart.c ****     itmask &= USARTx->CR1;
 1925              		.loc 1 904 0
 1926 082c 7B68     		ldr	r3, [r7, #4]
 1927 082e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1928 0830 9BB2     		uxth	r3, r3
 1929 0832 1A46     		mov	r2, r3
 1930 0834 7B69     		ldr	r3, [r7, #20]
 1931 0836 1340     		ands	r3, r3, r2
 1932 0838 7B61     		str	r3, [r7, #20]
 1933 083a 11E0     		b	.L86
 1934              	.L85:
 905:common/stm32f10x_usart.c ****   }
 906:common/stm32f10x_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 1935              		.loc 1 906 0
 1936 083c BB68     		ldr	r3, [r7, #8]
 1937 083e 022B     		cmp	r3, #2
 1938 0840 07D1     		bne	.L87
 907:common/stm32f10x_usart.c ****   {
 908:common/stm32f10x_usart.c ****     itmask &= USARTx->CR2;
 1939              		.loc 1 908 0
 1940 0842 7B68     		ldr	r3, [r7, #4]
 1941 0844 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1942 0846 9BB2     		uxth	r3, r3
 1943 0848 1A46     		mov	r2, r3
 1944 084a 7B69     		ldr	r3, [r7, #20]
 1945 084c 1340     		ands	r3, r3, r2
 1946 084e 7B61     		str	r3, [r7, #20]
 1947 0850 06E0     		b	.L86
 1948              	.L87:
 909:common/stm32f10x_usart.c ****   }
 910:common/stm32f10x_usart.c ****   else /* The IT  is in CR3 register */
 911:common/stm32f10x_usart.c ****   {
 912:common/stm32f10x_usart.c ****     itmask &= USARTx->CR3;
 1949              		.loc 1 912 0
 1950 0852 7B68     		ldr	r3, [r7, #4]
 1951 0854 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1952 0856 9BB2     		uxth	r3, r3
 1953 0858 1A46     		mov	r2, r3
 1954 085a 7B69     		ldr	r3, [r7, #20]
 1955 085c 1340     		ands	r3, r3, r2
 1956 085e 7B61     		str	r3, [r7, #20]
 1957              	.L86:
 913:common/stm32f10x_usart.c ****   }
 914:common/stm32f10x_usart.c ****   
 915:common/stm32f10x_usart.c ****   bitpos = USART_IT >> 0x08;
 1958              		.loc 1 915 0
 1959 0860 7B88     		ldrh	r3, [r7, #2]
 1960 0862 1B0A     		lsrs	r3, r3, #8
 1961 0864 9BB2     		uxth	r3, r3
 1962 0866 FB60     		str	r3, [r7, #12]
 916:common/stm32f10x_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 1963              		.loc 1 916 0
 1964 0868 0122     		movs	r2, #1
 1965 086a FB68     		ldr	r3, [r7, #12]
 1966 086c 02FA03F3 		lsl	r3, r2, r3
ARM GAS  /tmp/ccLKhEJ6.s 			page 52


 1967 0870 FB60     		str	r3, [r7, #12]
 917:common/stm32f10x_usart.c ****   bitpos &= USARTx->SR;
 1968              		.loc 1 917 0
 1969 0872 7B68     		ldr	r3, [r7, #4]
 1970 0874 1B88     		ldrh	r3, [r3]	@ movhi
 1971 0876 9BB2     		uxth	r3, r3
 1972 0878 1A46     		mov	r2, r3
 1973 087a FB68     		ldr	r3, [r7, #12]
 1974 087c 1340     		ands	r3, r3, r2
 1975 087e FB60     		str	r3, [r7, #12]
 918:common/stm32f10x_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 1976              		.loc 1 918 0
 1977 0880 7B69     		ldr	r3, [r7, #20]
 1978 0882 002B     		cmp	r3, #0
 1979 0884 05D0     		beq	.L88
 1980              		.loc 1 918 0 is_stmt 0 discriminator 1
 1981 0886 FB68     		ldr	r3, [r7, #12]
 1982 0888 002B     		cmp	r3, #0
 1983 088a 02D0     		beq	.L88
 919:common/stm32f10x_usart.c ****   {
 920:common/stm32f10x_usart.c ****     bitstatus = SET;
 1984              		.loc 1 920 0 is_stmt 1
 1985 088c 0123     		movs	r3, #1
 1986 088e FB74     		strb	r3, [r7, #19]
 1987 0890 01E0     		b	.L89
 1988              	.L88:
 921:common/stm32f10x_usart.c ****   }
 922:common/stm32f10x_usart.c ****   else
 923:common/stm32f10x_usart.c ****   {
 924:common/stm32f10x_usart.c ****     bitstatus = RESET;
 1989              		.loc 1 924 0
 1990 0892 0023     		movs	r3, #0
 1991 0894 FB74     		strb	r3, [r7, #19]
 1992              	.L89:
 925:common/stm32f10x_usart.c ****   }
 926:common/stm32f10x_usart.c ****   
 927:common/stm32f10x_usart.c ****   return bitstatus;  
 1993              		.loc 1 927 0
 1994 0896 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 928:common/stm32f10x_usart.c **** }
 1995              		.loc 1 928 0
 1996 0898 1846     		mov	r0, r3
 1997 089a 1C37     		adds	r7, r7, #28
 1998              		.cfi_def_cfa_offset 4
 1999 089c BD46     		mov	sp, r7
 2000              		.cfi_def_cfa_register 13
 2001              		@ sp needed
 2002 089e 80BC     		pop	{r7}
 2003              		.cfi_restore 7
 2004              		.cfi_def_cfa_offset 0
 2005 08a0 7047     		bx	lr
 2006              		.cfi_endproc
 2007              	.LFE90:
 2008              		.size	USART_GetITStatus, .-USART_GetITStatus
 2009              		.align	1
 2010              		.global	USART_ClearITPendingBit
 2011              		.syntax unified
ARM GAS  /tmp/ccLKhEJ6.s 			page 53


 2012              		.thumb
 2013              		.thumb_func
 2014              		.fpu softvfp
 2015              		.type	USART_ClearITPendingBit, %function
 2016              	USART_ClearITPendingBit:
 2017              	.LFB91:
 929:common/stm32f10x_usart.c **** 
 930:common/stm32f10x_usart.c **** /**
 931:common/stm32f10x_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
 932:common/stm32f10x_usart.c ****   * @param  USARTx: Select the USART or the UART peripheral. 
 933:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 934:common/stm32f10x_usart.c ****   *   USART1, USART2, USART3, UART4 or UART5.
 935:common/stm32f10x_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
 936:common/stm32f10x_usart.c ****   *   This parameter can be one of the following values:
 937:common/stm32f10x_usart.c ****   *     @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
 938:common/stm32f10x_usart.c ****   *     @arg USART_IT_LBD:  LIN Break detection interrupt
 939:common/stm32f10x_usart.c ****   *     @arg USART_IT_TC:   Transmission complete interrupt. 
 940:common/stm32f10x_usart.c ****   *     @arg USART_IT_RXNE: Receive Data register not empty interrupt.
 941:common/stm32f10x_usart.c ****   *   
 942:common/stm32f10x_usart.c ****   * @note
 943:common/stm32f10x_usart.c ****   *   - PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
 944:common/stm32f10x_usart.c ****   *     error) and IDLE (Idle line detected) pending bits are cleared by 
 945:common/stm32f10x_usart.c ****   *     software sequence: a read operation to USART_SR register 
 946:common/stm32f10x_usart.c ****   *     (USART_GetITStatus()) followed by a read operation to USART_DR register 
 947:common/stm32f10x_usart.c ****   *     (USART_ReceiveData()).
 948:common/stm32f10x_usart.c ****   *   - RXNE pending bit can be also cleared by a read to the USART_DR register 
 949:common/stm32f10x_usart.c ****   *     (USART_ReceiveData()).
 950:common/stm32f10x_usart.c ****   *   - TC pending bit can be also cleared by software sequence: a read 
 951:common/stm32f10x_usart.c ****   *     operation to USART_SR register (USART_GetITStatus()) followed by a write 
 952:common/stm32f10x_usart.c ****   *     operation to USART_DR register (USART_SendData()).
 953:common/stm32f10x_usart.c ****   *   - TXE pending bit is cleared only by a write to the USART_DR register 
 954:common/stm32f10x_usart.c ****   *     (USART_SendData()).
 955:common/stm32f10x_usart.c ****   * @retval None
 956:common/stm32f10x_usart.c ****   */
 957:common/stm32f10x_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
 958:common/stm32f10x_usart.c **** {
 2018              		.loc 1 958 0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 16
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022              		@ link register save eliminated.
 2023 08a2 80B4     		push	{r7}
 2024              		.cfi_def_cfa_offset 4
 2025              		.cfi_offset 7, -4
 2026 08a4 85B0     		sub	sp, sp, #20
 2027              		.cfi_def_cfa_offset 24
 2028 08a6 00AF     		add	r7, sp, #0
 2029              		.cfi_def_cfa_register 7
 2030 08a8 7860     		str	r0, [r7, #4]
 2031 08aa 0B46     		mov	r3, r1
 2032 08ac 7B80     		strh	r3, [r7, #2]	@ movhi
 959:common/stm32f10x_usart.c ****   uint16_t bitpos = 0x00, itmask = 0x00;
 2033              		.loc 1 959 0
 2034 08ae 0023     		movs	r3, #0
 2035 08b0 FB81     		strh	r3, [r7, #14]	@ movhi
 2036 08b2 0023     		movs	r3, #0
 2037 08b4 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  /tmp/ccLKhEJ6.s 			page 54


 960:common/stm32f10x_usart.c ****   /* Check the parameters */
 961:common/stm32f10x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 962:common/stm32f10x_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT));
 963:common/stm32f10x_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
 964:common/stm32f10x_usart.c ****   if (USART_IT == USART_IT_CTS)
 965:common/stm32f10x_usart.c ****   {
 966:common/stm32f10x_usart.c ****     assert_param(IS_USART_123_PERIPH(USARTx));
 967:common/stm32f10x_usart.c ****   }   
 968:common/stm32f10x_usart.c ****   
 969:common/stm32f10x_usart.c ****   bitpos = USART_IT >> 0x08;
 2038              		.loc 1 969 0
 2039 08b6 7B88     		ldrh	r3, [r7, #2]
 2040 08b8 1B0A     		lsrs	r3, r3, #8
 2041 08ba FB81     		strh	r3, [r7, #14]	@ movhi
 970:common/stm32f10x_usart.c ****   itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 2042              		.loc 1 970 0
 2043 08bc FB89     		ldrh	r3, [r7, #14]
 2044 08be 0122     		movs	r2, #1
 2045 08c0 02FA03F3 		lsl	r3, r2, r3
 2046 08c4 BB81     		strh	r3, [r7, #12]	@ movhi
 971:common/stm32f10x_usart.c ****   USARTx->SR = (uint16_t)~itmask;
 2047              		.loc 1 971 0
 2048 08c6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2049 08c8 DB43     		mvns	r3, r3
 2050 08ca 9AB2     		uxth	r2, r3
 2051 08cc 7B68     		ldr	r3, [r7, #4]
 2052 08ce 1A80     		strh	r2, [r3]	@ movhi
 972:common/stm32f10x_usart.c **** }
 2053              		.loc 1 972 0
 2054 08d0 00BF     		nop
 2055 08d2 1437     		adds	r7, r7, #20
 2056              		.cfi_def_cfa_offset 4
 2057 08d4 BD46     		mov	sp, r7
 2058              		.cfi_def_cfa_register 13
 2059              		@ sp needed
 2060 08d6 80BC     		pop	{r7}
 2061              		.cfi_restore 7
 2062              		.cfi_def_cfa_offset 0
 2063 08d8 7047     		bx	lr
 2064              		.cfi_endproc
 2065              	.LFE91:
 2066              		.size	USART_ClearITPendingBit, .-USART_ClearITPendingBit
 2067              	.Letext0:
 2068              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2069              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2070              		.file 4 "common/../include/STM32/../STM32/../CMSIS/core_cm3.h"
 2071              		.file 5 "common/../include/STM32/../STM32/system_stm32f10x.h"
 2072              		.file 6 "common/../include/STM32/../STM32/stm32f10x.h"
 2073              		.file 7 "common/../include/STM32/usart.h"
 2074              		.file 8 "common/../include/STM32/rcc.h"
 2075              		.file 9 "common/../src/../include/MPU6050/mpu6050.h"
 2076              		.file 10 "/usr/arm-none-eabi/include/sys/lock.h"
 2077              		.file 11 "/usr/arm-none-eabi/include/sys/_types.h"
 2078              		.file 12 "/usr/lib/gcc/arm-none-eabi/6.1.1/include/stddef.h"
 2079              		.file 13 "/usr/arm-none-eabi/include/sys/reent.h"
 2080              		.file 14 "/usr/arm-none-eabi/include/math.h"
 2081 08da 00BF     		.section	.debug_info,"",%progbits
ARM GAS  /tmp/ccLKhEJ6.s 			page 55


 2082              	.Ldebug_info0:
 2083 0000 DA120000 		.4byte	0x12da
 2084 0004 0400     		.2byte	0x4
 2085 0006 00000000 		.4byte	.Ldebug_abbrev0
 2086 000a 04       		.byte	0x4
 2087 000b 01       		.uleb128 0x1
 2088 000c 300A0000 		.4byte	.LASF233
 2089 0010 0C       		.byte	0xc
 2090 0011 8E030000 		.4byte	.LASF234
 2091 0015 2B010000 		.4byte	.LASF235
 2092 0019 00000000 		.4byte	.Ltext0
 2093 001d DA080000 		.4byte	.Letext0-.Ltext0
 2094 0021 00000000 		.4byte	.Ldebug_line0
 2095 0025 02       		.uleb128 0x2
 2096 0026 01       		.byte	0x1
 2097 0027 06       		.byte	0x6
 2098 0028 6A020000 		.4byte	.LASF0
 2099 002c 03       		.uleb128 0x3
 2100 002d 76010000 		.4byte	.LASF2
 2101 0031 02       		.byte	0x2
 2102 0032 1D       		.byte	0x1d
 2103 0033 37000000 		.4byte	0x37
 2104 0037 02       		.uleb128 0x2
 2105 0038 01       		.byte	0x1
 2106 0039 08       		.byte	0x8
 2107 003a 9B020000 		.4byte	.LASF1
 2108 003e 03       		.uleb128 0x3
 2109 003f 29080000 		.4byte	.LASF3
 2110 0043 02       		.byte	0x2
 2111 0044 29       		.byte	0x29
 2112 0045 49000000 		.4byte	0x49
 2113 0049 02       		.uleb128 0x2
 2114 004a 02       		.byte	0x2
 2115 004b 05       		.byte	0x5
 2116 004c E7080000 		.4byte	.LASF4
 2117 0050 03       		.uleb128 0x3
 2118 0051 3F030000 		.4byte	.LASF5
 2119 0055 02       		.byte	0x2
 2120 0056 2B       		.byte	0x2b
 2121 0057 5B000000 		.4byte	0x5b
 2122 005b 02       		.uleb128 0x2
 2123 005c 02       		.byte	0x2
 2124 005d 07       		.byte	0x7
 2125 005e 730A0000 		.4byte	.LASF6
 2126 0062 03       		.uleb128 0x3
 2127 0063 C50A0000 		.4byte	.LASF7
 2128 0067 02       		.byte	0x2
 2129 0068 3F       		.byte	0x3f
 2130 0069 6D000000 		.4byte	0x6d
 2131 006d 02       		.uleb128 0x2
 2132 006e 04       		.byte	0x4
 2133 006f 05       		.byte	0x5
 2134 0070 C8010000 		.4byte	.LASF8
 2135 0074 03       		.uleb128 0x3
 2136 0075 6C050000 		.4byte	.LASF9
 2137 0079 02       		.byte	0x2
 2138 007a 41       		.byte	0x41
ARM GAS  /tmp/ccLKhEJ6.s 			page 56


 2139 007b 7F000000 		.4byte	0x7f
 2140 007f 02       		.uleb128 0x2
 2141 0080 04       		.byte	0x4
 2142 0081 07       		.byte	0x7
 2143 0082 90040000 		.4byte	.LASF10
 2144 0086 02       		.uleb128 0x2
 2145 0087 08       		.byte	0x8
 2146 0088 05       		.byte	0x5
 2147 0089 82050000 		.4byte	.LASF11
 2148 008d 02       		.uleb128 0x2
 2149 008e 08       		.byte	0x8
 2150 008f 07       		.byte	0x7
 2151 0090 86070000 		.4byte	.LASF12
 2152 0094 04       		.uleb128 0x4
 2153 0095 04       		.byte	0x4
 2154 0096 05       		.byte	0x5
 2155 0097 696E7400 		.ascii	"int\000"
 2156 009b 02       		.uleb128 0x2
 2157 009c 04       		.byte	0x4
 2158 009d 07       		.byte	0x7
 2159 009e 5E060000 		.4byte	.LASF13
 2160 00a2 03       		.uleb128 0x3
 2161 00a3 76020000 		.4byte	.LASF14
 2162 00a7 03       		.byte	0x3
 2163 00a8 18       		.byte	0x18
 2164 00a9 2C000000 		.4byte	0x2c
 2165 00ad 03       		.uleb128 0x3
 2166 00ae 00090000 		.4byte	.LASF15
 2167 00b2 03       		.byte	0x3
 2168 00b3 20       		.byte	0x20
 2169 00b4 3E000000 		.4byte	0x3e
 2170 00b8 03       		.uleb128 0x3
 2171 00b9 9D070000 		.4byte	.LASF16
 2172 00bd 03       		.byte	0x3
 2173 00be 24       		.byte	0x24
 2174 00bf 50000000 		.4byte	0x50
 2175 00c3 05       		.uleb128 0x5
 2176 00c4 B8000000 		.4byte	0xb8
 2177 00c8 03       		.uleb128 0x3
 2178 00c9 9B000000 		.4byte	.LASF17
 2179 00cd 03       		.byte	0x3
 2180 00ce 2C       		.byte	0x2c
 2181 00cf 62000000 		.4byte	0x62
 2182 00d3 05       		.uleb128 0x5
 2183 00d4 C8000000 		.4byte	0xc8
 2184 00d8 03       		.uleb128 0x3
 2185 00d9 D3090000 		.4byte	.LASF18
 2186 00dd 03       		.byte	0x3
 2187 00de 30       		.byte	0x30
 2188 00df 74000000 		.4byte	0x74
 2189 00e3 02       		.uleb128 0x2
 2190 00e4 04       		.byte	0x4
 2191 00e5 07       		.byte	0x7
 2192 00e6 38000000 		.4byte	.LASF19
 2193 00ea 06       		.uleb128 0x6
 2194 00eb 0E060000 		.4byte	.LASF20
 2195 00ef 04       		.byte	0x4
ARM GAS  /tmp/ccLKhEJ6.s 			page 57


 2196 00f0 9606     		.2byte	0x696
 2197 00f2 D3000000 		.4byte	0xd3
 2198 00f6 07       		.uleb128 0x7
 2199 00f7 BD040000 		.4byte	.LASF21
 2200 00fb 05       		.byte	0x5
 2201 00fc 35       		.byte	0x35
 2202 00fd D8000000 		.4byte	0xd8
 2203 0101 08       		.uleb128 0x8
 2204 0102 75313600 		.ascii	"u16\000"
 2205 0106 06       		.byte	0x6
 2206 0107 8101     		.2byte	0x181
 2207 0109 B8000000 		.4byte	0xb8
 2208 010d 09       		.uleb128 0x9
 2209 010e 01       		.byte	0x1
 2210 010f 37000000 		.4byte	0x37
 2211 0113 06       		.byte	0x6
 2212 0114 9001     		.2byte	0x190
 2213 0116 27010000 		.4byte	0x127
 2214 011a 0A       		.uleb128 0xa
 2215 011b 33080000 		.4byte	.LASF22
 2216 011f 00       		.byte	0
 2217 0120 0B       		.uleb128 0xb
 2218 0121 53455400 		.ascii	"SET\000"
 2219 0125 01       		.byte	0x1
 2220 0126 00       		.byte	0
 2221 0127 0C       		.uleb128 0xc
 2222 0128 8C080000 		.4byte	.LASF23
 2223 012c 06       		.byte	0x6
 2224 012d 9001     		.2byte	0x190
 2225 012f 0D010000 		.4byte	0x10d
 2226 0133 0C       		.uleb128 0xc
 2227 0134 16070000 		.4byte	.LASF24
 2228 0138 06       		.byte	0x6
 2229 0139 9001     		.2byte	0x190
 2230 013b 0D010000 		.4byte	0x10d
 2231 013f 09       		.uleb128 0x9
 2232 0140 01       		.byte	0x1
 2233 0141 37000000 		.4byte	0x37
 2234 0145 06       		.byte	0x6
 2235 0146 9201     		.2byte	0x192
 2236 0148 59010000 		.4byte	0x159
 2237 014c 0A       		.uleb128 0xa
 2238 014d 0E070000 		.4byte	.LASF25
 2239 0151 00       		.byte	0
 2240 0152 0A       		.uleb128 0xa
 2241 0153 1B090000 		.4byte	.LASF26
 2242 0157 01       		.byte	0x1
 2243 0158 00       		.byte	0
 2244 0159 0C       		.uleb128 0xc
 2245 015a 76070000 		.4byte	.LASF27
 2246 015e 06       		.byte	0x6
 2247 015f 9201     		.2byte	0x192
 2248 0161 3F010000 		.4byte	0x13f
 2249 0165 0D       		.uleb128 0xd
 2250 0166 1C       		.byte	0x1c
 2251 0167 06       		.byte	0x6
 2252 0168 5B04     		.2byte	0x45b
ARM GAS  /tmp/ccLKhEJ6.s 			page 58


 2253 016a 23020000 		.4byte	0x223
 2254 016e 0E       		.uleb128 0xe
 2255 016f 535200   		.ascii	"SR\000"
 2256 0172 06       		.byte	0x6
 2257 0173 5D04     		.2byte	0x45d
 2258 0175 C3000000 		.4byte	0xc3
 2259 0179 00       		.byte	0
 2260 017a 0F       		.uleb128 0xf
 2261 017b 87020000 		.4byte	.LASF28
 2262 017f 06       		.byte	0x6
 2263 0180 5E04     		.2byte	0x45e
 2264 0182 B8000000 		.4byte	0xb8
 2265 0186 02       		.byte	0x2
 2266 0187 0E       		.uleb128 0xe
 2267 0188 445200   		.ascii	"DR\000"
 2268 018b 06       		.byte	0x6
 2269 018c 5F04     		.2byte	0x45f
 2270 018e C3000000 		.4byte	0xc3
 2271 0192 04       		.byte	0x4
 2272 0193 0F       		.uleb128 0xf
 2273 0194 91020000 		.4byte	.LASF29
 2274 0198 06       		.byte	0x6
 2275 0199 6004     		.2byte	0x460
 2276 019b B8000000 		.4byte	0xb8
 2277 019f 06       		.byte	0x6
 2278 01a0 0E       		.uleb128 0xe
 2279 01a1 42525200 		.ascii	"BRR\000"
 2280 01a5 06       		.byte	0x6
 2281 01a6 6104     		.2byte	0x461
 2282 01a8 C3000000 		.4byte	0xc3
 2283 01ac 08       		.byte	0x8
 2284 01ad 0F       		.uleb128 0xf
 2285 01ae 12030000 		.4byte	.LASF30
 2286 01b2 06       		.byte	0x6
 2287 01b3 6204     		.2byte	0x462
 2288 01b5 B8000000 		.4byte	0xb8
 2289 01b9 0A       		.byte	0xa
 2290 01ba 0E       		.uleb128 0xe
 2291 01bb 43523100 		.ascii	"CR1\000"
 2292 01bf 06       		.byte	0x6
 2293 01c0 6304     		.2byte	0x463
 2294 01c2 C3000000 		.4byte	0xc3
 2295 01c6 0C       		.byte	0xc
 2296 01c7 0F       		.uleb128 0xf
 2297 01c8 A9020000 		.4byte	.LASF31
 2298 01cc 06       		.byte	0x6
 2299 01cd 6404     		.2byte	0x464
 2300 01cf B8000000 		.4byte	0xb8
 2301 01d3 0E       		.byte	0xe
 2302 01d4 0E       		.uleb128 0xe
 2303 01d5 43523200 		.ascii	"CR2\000"
 2304 01d9 06       		.byte	0x6
 2305 01da 6504     		.2byte	0x465
 2306 01dc C3000000 		.4byte	0xc3
 2307 01e0 10       		.byte	0x10
 2308 01e1 0F       		.uleb128 0xf
 2309 01e2 B3020000 		.4byte	.LASF32
ARM GAS  /tmp/ccLKhEJ6.s 			page 59


 2310 01e6 06       		.byte	0x6
 2311 01e7 6604     		.2byte	0x466
 2312 01e9 B8000000 		.4byte	0xb8
 2313 01ed 12       		.byte	0x12
 2314 01ee 0E       		.uleb128 0xe
 2315 01ef 43523300 		.ascii	"CR3\000"
 2316 01f3 06       		.byte	0x6
 2317 01f4 6704     		.2byte	0x467
 2318 01f6 C3000000 		.4byte	0xc3
 2319 01fa 14       		.byte	0x14
 2320 01fb 0F       		.uleb128 0xf
 2321 01fc BD020000 		.4byte	.LASF33
 2322 0200 06       		.byte	0x6
 2323 0201 6804     		.2byte	0x468
 2324 0203 B8000000 		.4byte	0xb8
 2325 0207 16       		.byte	0x16
 2326 0208 0F       		.uleb128 0xf
 2327 0209 D4050000 		.4byte	.LASF34
 2328 020d 06       		.byte	0x6
 2329 020e 6904     		.2byte	0x469
 2330 0210 C3000000 		.4byte	0xc3
 2331 0214 18       		.byte	0x18
 2332 0215 0F       		.uleb128 0xf
 2333 0216 C7020000 		.4byte	.LASF35
 2334 021a 06       		.byte	0x6
 2335 021b 6A04     		.2byte	0x46a
 2336 021d B8000000 		.4byte	0xb8
 2337 0221 1A       		.byte	0x1a
 2338 0222 00       		.byte	0
 2339 0223 0C       		.uleb128 0xc
 2340 0224 80030000 		.4byte	.LASF36
 2341 0228 06       		.byte	0x6
 2342 0229 6B04     		.2byte	0x46b
 2343 022b 65010000 		.4byte	0x165
 2344 022f 10       		.uleb128 0x10
 2345 0230 10       		.byte	0x10
 2346 0231 07       		.byte	0x7
 2347 0232 0C       		.byte	0xc
 2348 0233 80020000 		.4byte	0x280
 2349 0237 11       		.uleb128 0x11
 2350 0238 E9030000 		.4byte	.LASF37
 2351 023c 07       		.byte	0x7
 2352 023d 0E       		.byte	0xe
 2353 023e D8000000 		.4byte	0xd8
 2354 0242 00       		.byte	0
 2355 0243 11       		.uleb128 0x11
 2356 0244 E7020000 		.4byte	.LASF38
 2357 0248 07       		.byte	0x7
 2358 0249 13       		.byte	0x13
 2359 024a B8000000 		.4byte	0xb8
 2360 024e 04       		.byte	0x4
 2361 024f 11       		.uleb128 0x11
 2362 0250 19050000 		.4byte	.LASF39
 2363 0254 07       		.byte	0x7
 2364 0255 16       		.byte	0x16
 2365 0256 B8000000 		.4byte	0xb8
 2366 025a 06       		.byte	0x6
ARM GAS  /tmp/ccLKhEJ6.s 			page 60


 2367 025b 11       		.uleb128 0x11
 2368 025c 1C030000 		.4byte	.LASF40
 2369 0260 07       		.byte	0x7
 2370 0261 19       		.byte	0x19
 2371 0262 B8000000 		.4byte	0xb8
 2372 0266 08       		.byte	0x8
 2373 0267 11       		.uleb128 0x11
 2374 0268 03040000 		.4byte	.LASF41
 2375 026c 07       		.byte	0x7
 2376 026d 20       		.byte	0x20
 2377 026e B8000000 		.4byte	0xb8
 2378 0272 0A       		.byte	0xa
 2379 0273 11       		.uleb128 0x11
 2380 0274 F7090000 		.4byte	.LASF42
 2381 0278 07       		.byte	0x7
 2382 0279 23       		.byte	0x23
 2383 027a B8000000 		.4byte	0xb8
 2384 027e 0C       		.byte	0xc
 2385 027f 00       		.byte	0
 2386 0280 03       		.uleb128 0x3
 2387 0281 49080000 		.4byte	.LASF43
 2388 0285 07       		.byte	0x7
 2389 0286 26       		.byte	0x26
 2390 0287 2F020000 		.4byte	0x22f
 2391 028b 10       		.uleb128 0x10
 2392 028c 08       		.byte	0x8
 2393 028d 07       		.byte	0x7
 2394 028e 2C       		.byte	0x2c
 2395 028f C4020000 		.4byte	0x2c4
 2396 0293 11       		.uleb128 0x11
 2397 0294 4E000000 		.4byte	.LASF44
 2398 0298 07       		.byte	0x7
 2399 0299 2F       		.byte	0x2f
 2400 029a B8000000 		.4byte	0xb8
 2401 029e 00       		.byte	0
 2402 029f 11       		.uleb128 0x11
 2403 02a0 F8030000 		.4byte	.LASF45
 2404 02a4 07       		.byte	0x7
 2405 02a5 32       		.byte	0x32
 2406 02a6 B8000000 		.4byte	0xb8
 2407 02aa 02       		.byte	0x2
 2408 02ab 11       		.uleb128 0x11
 2409 02ac AF010000 		.4byte	.LASF46
 2410 02b0 07       		.byte	0x7
 2411 02b1 35       		.byte	0x35
 2412 02b2 B8000000 		.4byte	0xb8
 2413 02b6 04       		.byte	0x4
 2414 02b7 11       		.uleb128 0x11
 2415 02b8 34040000 		.4byte	.LASF47
 2416 02bc 07       		.byte	0x7
 2417 02bd 38       		.byte	0x38
 2418 02be B8000000 		.4byte	0xb8
 2419 02c2 06       		.byte	0x6
 2420 02c3 00       		.byte	0
 2421 02c4 03       		.uleb128 0x3
 2422 02c5 BB030000 		.4byte	.LASF48
 2423 02c9 07       		.byte	0x7
ARM GAS  /tmp/ccLKhEJ6.s 			page 61


 2424 02ca 3B       		.byte	0x3b
 2425 02cb 8B020000 		.4byte	0x28b
 2426 02cf 10       		.uleb128 0x10
 2427 02d0 14       		.byte	0x14
 2428 02d1 08       		.byte	0x8
 2429 02d2 2E       		.byte	0x2e
 2430 02d3 14030000 		.4byte	0x314
 2431 02d7 11       		.uleb128 0x11
 2432 02d8 900A0000 		.4byte	.LASF49
 2433 02dc 08       		.byte	0x8
 2434 02dd 30       		.byte	0x30
 2435 02de D8000000 		.4byte	0xd8
 2436 02e2 00       		.byte	0
 2437 02e3 11       		.uleb128 0x11
 2438 02e4 0C010000 		.4byte	.LASF50
 2439 02e8 08       		.byte	0x8
 2440 02e9 31       		.byte	0x31
 2441 02ea D8000000 		.4byte	0xd8
 2442 02ee 04       		.byte	0x4
 2443 02ef 11       		.uleb128 0x11
 2444 02f0 70030000 		.4byte	.LASF51
 2445 02f4 08       		.byte	0x8
 2446 02f5 32       		.byte	0x32
 2447 02f6 D8000000 		.4byte	0xd8
 2448 02fa 08       		.byte	0x8
 2449 02fb 11       		.uleb128 0x11
 2450 02fc 4A030000 		.4byte	.LASF52
 2451 0300 08       		.byte	0x8
 2452 0301 33       		.byte	0x33
 2453 0302 D8000000 		.4byte	0xd8
 2454 0306 0C       		.byte	0xc
 2455 0307 11       		.uleb128 0x11
 2456 0308 80010000 		.4byte	.LASF53
 2457 030c 08       		.byte	0x8
 2458 030d 34       		.byte	0x34
 2459 030e D8000000 		.4byte	0xd8
 2460 0312 10       		.byte	0x10
 2461 0313 00       		.byte	0
 2462 0314 03       		.uleb128 0x3
 2463 0315 B3080000 		.4byte	.LASF54
 2464 0319 08       		.byte	0x8
 2465 031a 35       		.byte	0x35
 2466 031b CF020000 		.4byte	0x2cf
 2467 031f 12       		.uleb128 0x12
 2468 0320 13       		.uleb128 0x13
 2469 0321 04       		.byte	0x4
 2470 0322 1F030000 		.4byte	0x31f
 2471 0326 14       		.uleb128 0x14
 2472 0327 49000000 		.4byte	0x49
 2473 032b 36030000 		.4byte	0x336
 2474 032f 15       		.uleb128 0x15
 2475 0330 E3000000 		.4byte	0xe3
 2476 0334 02       		.byte	0x2
 2477 0335 00       		.byte	0
 2478 0336 06       		.uleb128 0x6
 2479 0337 33030000 		.4byte	.LASF55
 2480 033b 09       		.byte	0x9
ARM GAS  /tmp/ccLKhEJ6.s 			page 62


 2481 033c 6301     		.2byte	0x163
 2482 033e 26030000 		.4byte	0x326
 2483 0342 06       		.uleb128 0x6
 2484 0343 53090000 		.4byte	.LASF56
 2485 0347 09       		.byte	0x9
 2486 0348 6301     		.2byte	0x163
 2487 034a 26030000 		.4byte	0x326
 2488 034e 06       		.uleb128 0x6
 2489 034f 63090000 		.4byte	.LASF57
 2490 0353 09       		.byte	0x9
 2491 0354 6401     		.2byte	0x164
 2492 0356 AD000000 		.4byte	0xad
 2493 035a 06       		.uleb128 0x6
 2494 035b B2050000 		.4byte	.LASF58
 2495 035f 09       		.byte	0x9
 2496 0360 6401     		.2byte	0x164
 2497 0362 AD000000 		.4byte	0xad
 2498 0366 06       		.uleb128 0x6
 2499 0367 A5010000 		.4byte	.LASF59
 2500 036b 09       		.byte	0x9
 2501 036c 6401     		.2byte	0x164
 2502 036e AD000000 		.4byte	0xad
 2503 0372 06       		.uleb128 0x6
 2504 0373 E6040000 		.4byte	.LASF60
 2505 0377 09       		.byte	0x9
 2506 0378 6501     		.2byte	0x165
 2507 037a 7E030000 		.4byte	0x37e
 2508 037e 02       		.uleb128 0x2
 2509 037f 04       		.byte	0x4
 2510 0380 04       		.byte	0x4
 2511 0381 46060000 		.4byte	.LASF61
 2512 0385 06       		.uleb128 0x6
 2513 0386 C5090000 		.4byte	.LASF62
 2514 038a 09       		.byte	0x9
 2515 038b 6601     		.2byte	0x166
 2516 038d 7E030000 		.4byte	0x37e
 2517 0391 06       		.uleb128 0x6
 2518 0392 14050000 		.4byte	.LASF63
 2519 0396 09       		.byte	0x9
 2520 0397 6601     		.2byte	0x166
 2521 0399 7E030000 		.4byte	0x37e
 2522 039d 16       		.uleb128 0x16
 2523 039e 59617700 		.ascii	"Yaw\000"
 2524 03a2 09       		.byte	0x9
 2525 03a3 6601     		.2byte	0x166
 2526 03a5 7E030000 		.4byte	0x37e
 2527 03a9 02       		.uleb128 0x2
 2528 03aa 08       		.byte	0x8
 2529 03ab 04       		.byte	0x4
 2530 03ac 1F070000 		.4byte	.LASF64
 2531 03b0 03       		.uleb128 0x3
 2532 03b1 CD040000 		.4byte	.LASF65
 2533 03b5 0A       		.byte	0xa
 2534 03b6 07       		.byte	0x7
 2535 03b7 94000000 		.4byte	0x94
 2536 03bb 03       		.uleb128 0x3
 2537 03bc 290A0000 		.4byte	.LASF66
ARM GAS  /tmp/ccLKhEJ6.s 			page 63


 2538 03c0 0B       		.byte	0xb
 2539 03c1 2C       		.byte	0x2c
 2540 03c2 6D000000 		.4byte	0x6d
 2541 03c6 03       		.uleb128 0x3
 2542 03c7 59070000 		.4byte	.LASF67
 2543 03cb 0B       		.byte	0xb
 2544 03cc 72       		.byte	0x72
 2545 03cd 6D000000 		.4byte	0x6d
 2546 03d1 0C       		.uleb128 0xc
 2547 03d2 5B080000 		.4byte	.LASF68
 2548 03d6 0C       		.byte	0xc
 2549 03d7 6501     		.2byte	0x165
 2550 03d9 9B000000 		.4byte	0x9b
 2551 03dd 17       		.uleb128 0x17
 2552 03de 04       		.byte	0x4
 2553 03df 0B       		.byte	0xb
 2554 03e0 A6       		.byte	0xa6
 2555 03e1 FC030000 		.4byte	0x3fc
 2556 03e5 18       		.uleb128 0x18
 2557 03e6 70010000 		.4byte	.LASF69
 2558 03ea 0B       		.byte	0xb
 2559 03eb A8       		.byte	0xa8
 2560 03ec D1030000 		.4byte	0x3d1
 2561 03f0 18       		.uleb128 0x18
 2562 03f1 61070000 		.4byte	.LASF70
 2563 03f5 0B       		.byte	0xb
 2564 03f6 A9       		.byte	0xa9
 2565 03f7 FC030000 		.4byte	0x3fc
 2566 03fb 00       		.byte	0
 2567 03fc 14       		.uleb128 0x14
 2568 03fd 37000000 		.4byte	0x37
 2569 0401 0C040000 		.4byte	0x40c
 2570 0405 15       		.uleb128 0x15
 2571 0406 E3000000 		.4byte	0xe3
 2572 040a 03       		.byte	0x3
 2573 040b 00       		.byte	0
 2574 040c 10       		.uleb128 0x10
 2575 040d 08       		.byte	0x8
 2576 040e 0B       		.byte	0xb
 2577 040f A3       		.byte	0xa3
 2578 0410 2D040000 		.4byte	0x42d
 2579 0414 11       		.uleb128 0x11
 2580 0415 DA060000 		.4byte	.LASF71
 2581 0419 0B       		.byte	0xb
 2582 041a A5       		.byte	0xa5
 2583 041b 94000000 		.4byte	0x94
 2584 041f 00       		.byte	0
 2585 0420 11       		.uleb128 0x11
 2586 0421 41000000 		.4byte	.LASF72
 2587 0425 0B       		.byte	0xb
 2588 0426 AA       		.byte	0xaa
 2589 0427 DD030000 		.4byte	0x3dd
 2590 042b 04       		.byte	0x4
 2591 042c 00       		.byte	0
 2592 042d 03       		.uleb128 0x3
 2593 042e 39080000 		.4byte	.LASF73
 2594 0432 0B       		.byte	0xb
ARM GAS  /tmp/ccLKhEJ6.s 			page 64


 2595 0433 AB       		.byte	0xab
 2596 0434 0C040000 		.4byte	0x40c
 2597 0438 03       		.uleb128 0x3
 2598 0439 08080000 		.4byte	.LASF74
 2599 043d 0B       		.byte	0xb
 2600 043e AF       		.byte	0xaf
 2601 043f B0030000 		.4byte	0x3b0
 2602 0443 19       		.uleb128 0x19
 2603 0444 04       		.byte	0x4
 2604 0445 13       		.uleb128 0x13
 2605 0446 04       		.byte	0x4
 2606 0447 4B040000 		.4byte	0x44b
 2607 044b 02       		.uleb128 0x2
 2608 044c 01       		.byte	0x1
 2609 044d 08       		.byte	0x8
 2610 044e 29030000 		.4byte	.LASF75
 2611 0452 1A       		.uleb128 0x1a
 2612 0453 4B040000 		.4byte	0x44b
 2613 0457 03       		.uleb128 0x3
 2614 0458 CB090000 		.4byte	.LASF76
 2615 045c 0D       		.byte	0xd
 2616 045d 16       		.byte	0x16
 2617 045e 7F000000 		.4byte	0x7f
 2618 0462 1B       		.uleb128 0x1b
 2619 0463 3B050000 		.4byte	.LASF81
 2620 0467 18       		.byte	0x18
 2621 0468 0D       		.byte	0xd
 2622 0469 2D       		.byte	0x2d
 2623 046a B5040000 		.4byte	0x4b5
 2624 046e 11       		.uleb128 0x11
 2625 046f 79080000 		.4byte	.LASF77
 2626 0473 0D       		.byte	0xd
 2627 0474 2F       		.byte	0x2f
 2628 0475 B5040000 		.4byte	0x4b5
 2629 0479 00       		.byte	0
 2630 047a 1C       		.uleb128 0x1c
 2631 047b 5F6B00   		.ascii	"_k\000"
 2632 047e 0D       		.byte	0xd
 2633 047f 30       		.byte	0x30
 2634 0480 94000000 		.4byte	0x94
 2635 0484 04       		.byte	0x4
 2636 0485 11       		.uleb128 0x11
 2637 0486 43050000 		.4byte	.LASF78
 2638 048a 0D       		.byte	0xd
 2639 048b 30       		.byte	0x30
 2640 048c 94000000 		.4byte	0x94
 2641 0490 08       		.byte	0x8
 2642 0491 11       		.uleb128 0x11
 2643 0492 1B060000 		.4byte	.LASF79
 2644 0496 0D       		.byte	0xd
 2645 0497 30       		.byte	0x30
 2646 0498 94000000 		.4byte	0x94
 2647 049c 0C       		.byte	0xc
 2648 049d 11       		.uleb128 0x11
 2649 049e DA030000 		.4byte	.LASF80
 2650 04a2 0D       		.byte	0xd
 2651 04a3 30       		.byte	0x30
ARM GAS  /tmp/ccLKhEJ6.s 			page 65


 2652 04a4 94000000 		.4byte	0x94
 2653 04a8 10       		.byte	0x10
 2654 04a9 1C       		.uleb128 0x1c
 2655 04aa 5F7800   		.ascii	"_x\000"
 2656 04ad 0D       		.byte	0xd
 2657 04ae 31       		.byte	0x31
 2658 04af BB040000 		.4byte	0x4bb
 2659 04b3 14       		.byte	0x14
 2660 04b4 00       		.byte	0
 2661 04b5 13       		.uleb128 0x13
 2662 04b6 04       		.byte	0x4
 2663 04b7 62040000 		.4byte	0x462
 2664 04bb 14       		.uleb128 0x14
 2665 04bc 57040000 		.4byte	0x457
 2666 04c0 CB040000 		.4byte	0x4cb
 2667 04c4 15       		.uleb128 0x15
 2668 04c5 E3000000 		.4byte	0xe3
 2669 04c9 00       		.byte	0
 2670 04ca 00       		.byte	0
 2671 04cb 1B       		.uleb128 0x1b
 2672 04cc E7000000 		.4byte	.LASF82
 2673 04d0 24       		.byte	0x24
 2674 04d1 0D       		.byte	0xd
 2675 04d2 35       		.byte	0x35
 2676 04d3 44050000 		.4byte	0x544
 2677 04d7 11       		.uleb128 0x11
 2678 04d8 03010000 		.4byte	.LASF83
 2679 04dc 0D       		.byte	0xd
 2680 04dd 37       		.byte	0x37
 2681 04de 94000000 		.4byte	0x94
 2682 04e2 00       		.byte	0
 2683 04e3 11       		.uleb128 0x11
 2684 04e4 ED0A0000 		.4byte	.LASF84
 2685 04e8 0D       		.byte	0xd
 2686 04e9 38       		.byte	0x38
 2687 04ea 94000000 		.4byte	0x94
 2688 04ee 04       		.byte	0x4
 2689 04ef 11       		.uleb128 0x11
 2690 04f0 860A0000 		.4byte	.LASF85
 2691 04f4 0D       		.byte	0xd
 2692 04f5 39       		.byte	0x39
 2693 04f6 94000000 		.4byte	0x94
 2694 04fa 08       		.byte	0x8
 2695 04fb 11       		.uleb128 0x11
 2696 04fc 8C060000 		.4byte	.LASF86
 2697 0500 0D       		.byte	0xd
 2698 0501 3A       		.byte	0x3a
 2699 0502 94000000 		.4byte	0x94
 2700 0506 0C       		.byte	0xc
 2701 0507 11       		.uleb128 0x11
 2702 0508 31020000 		.4byte	.LASF87
 2703 050c 0D       		.byte	0xd
 2704 050d 3B       		.byte	0x3b
 2705 050e 94000000 		.4byte	0x94
 2706 0512 10       		.byte	0x10
 2707 0513 11       		.uleb128 0x11
 2708 0514 33090000 		.4byte	.LASF88
ARM GAS  /tmp/ccLKhEJ6.s 			page 66


 2709 0518 0D       		.byte	0xd
 2710 0519 3C       		.byte	0x3c
 2711 051a 94000000 		.4byte	0x94
 2712 051e 14       		.byte	0x14
 2713 051f 11       		.uleb128 0x11
 2714 0520 04070000 		.4byte	.LASF89
 2715 0524 0D       		.byte	0xd
 2716 0525 3D       		.byte	0x3d
 2717 0526 94000000 		.4byte	0x94
 2718 052a 18       		.byte	0x18
 2719 052b 11       		.uleb128 0x11
 2720 052c 2B070000 		.4byte	.LASF90
 2721 0530 0D       		.byte	0xd
 2722 0531 3E       		.byte	0x3e
 2723 0532 94000000 		.4byte	0x94
 2724 0536 1C       		.byte	0x1c
 2725 0537 11       		.uleb128 0x11
 2726 0538 E20A0000 		.4byte	.LASF91
 2727 053c 0D       		.byte	0xd
 2728 053d 3F       		.byte	0x3f
 2729 053e 94000000 		.4byte	0x94
 2730 0542 20       		.byte	0x20
 2731 0543 00       		.byte	0
 2732 0544 1D       		.uleb128 0x1d
 2733 0545 97010000 		.4byte	.LASF92
 2734 0549 0801     		.2byte	0x108
 2735 054b 0D       		.byte	0xd
 2736 054c 48       		.byte	0x48
 2737 054d 84050000 		.4byte	0x584
 2738 0551 11       		.uleb128 0x11
 2739 0552 DA0A0000 		.4byte	.LASF93
 2740 0556 0D       		.byte	0xd
 2741 0557 49       		.byte	0x49
 2742 0558 84050000 		.4byte	0x584
 2743 055c 00       		.byte	0
 2744 055d 11       		.uleb128 0x11
 2745 055e A6070000 		.4byte	.LASF94
 2746 0562 0D       		.byte	0xd
 2747 0563 4A       		.byte	0x4a
 2748 0564 84050000 		.4byte	0x584
 2749 0568 80       		.byte	0x80
 2750 0569 1E       		.uleb128 0x1e
 2751 056a 08090000 		.4byte	.LASF95
 2752 056e 0D       		.byte	0xd
 2753 056f 4C       		.byte	0x4c
 2754 0570 57040000 		.4byte	0x457
 2755 0574 0001     		.2byte	0x100
 2756 0576 1E       		.uleb128 0x1e
 2757 0577 9A090000 		.4byte	.LASF96
 2758 057b 0D       		.byte	0xd
 2759 057c 4F       		.byte	0x4f
 2760 057d 57040000 		.4byte	0x457
 2761 0581 0401     		.2byte	0x104
 2762 0583 00       		.byte	0
 2763 0584 14       		.uleb128 0x14
 2764 0585 43040000 		.4byte	0x443
 2765 0589 94050000 		.4byte	0x594
ARM GAS  /tmp/ccLKhEJ6.s 			page 67


 2766 058d 15       		.uleb128 0x15
 2767 058e E3000000 		.4byte	0xe3
 2768 0592 1F       		.byte	0x1f
 2769 0593 00       		.byte	0
 2770 0594 1D       		.uleb128 0x1d
 2771 0595 D2060000 		.4byte	.LASF97
 2772 0599 9001     		.2byte	0x190
 2773 059b 0D       		.byte	0xd
 2774 059c 5B       		.byte	0x5b
 2775 059d D2050000 		.4byte	0x5d2
 2776 05a1 11       		.uleb128 0x11
 2777 05a2 79080000 		.4byte	.LASF77
 2778 05a6 0D       		.byte	0xd
 2779 05a7 5C       		.byte	0x5c
 2780 05a8 D2050000 		.4byte	0x5d2
 2781 05ac 00       		.byte	0
 2782 05ad 11       		.uleb128 0x11
 2783 05ae 5E090000 		.4byte	.LASF98
 2784 05b2 0D       		.byte	0xd
 2785 05b3 5D       		.byte	0x5d
 2786 05b4 94000000 		.4byte	0x94
 2787 05b8 04       		.byte	0x4
 2788 05b9 11       		.uleb128 0x11
 2789 05ba 2E030000 		.4byte	.LASF99
 2790 05be 0D       		.byte	0xd
 2791 05bf 5F       		.byte	0x5f
 2792 05c0 D8050000 		.4byte	0x5d8
 2793 05c4 08       		.byte	0x8
 2794 05c5 11       		.uleb128 0x11
 2795 05c6 97010000 		.4byte	.LASF92
 2796 05ca 0D       		.byte	0xd
 2797 05cb 60       		.byte	0x60
 2798 05cc 44050000 		.4byte	0x544
 2799 05d0 88       		.byte	0x88
 2800 05d1 00       		.byte	0
 2801 05d2 13       		.uleb128 0x13
 2802 05d3 04       		.byte	0x4
 2803 05d4 94050000 		.4byte	0x594
 2804 05d8 14       		.uleb128 0x14
 2805 05d9 20030000 		.4byte	0x320
 2806 05dd E8050000 		.4byte	0x5e8
 2807 05e1 15       		.uleb128 0x15
 2808 05e2 E3000000 		.4byte	0xe3
 2809 05e6 1F       		.byte	0x1f
 2810 05e7 00       		.byte	0
 2811 05e8 1B       		.uleb128 0x1b
 2812 05e9 93090000 		.4byte	.LASF100
 2813 05ed 08       		.byte	0x8
 2814 05ee 0D       		.byte	0xd
 2815 05ef 73       		.byte	0x73
 2816 05f0 0D060000 		.4byte	0x60d
 2817 05f4 11       		.uleb128 0x11
 2818 05f5 DC070000 		.4byte	.LASF101
 2819 05f9 0D       		.byte	0xd
 2820 05fa 74       		.byte	0x74
 2821 05fb 0D060000 		.4byte	0x60d
 2822 05ff 00       		.byte	0
ARM GAS  /tmp/ccLKhEJ6.s 			page 68


 2823 0600 11       		.uleb128 0x11
 2824 0601 E7010000 		.4byte	.LASF102
 2825 0605 0D       		.byte	0xd
 2826 0606 75       		.byte	0x75
 2827 0607 94000000 		.4byte	0x94
 2828 060b 04       		.byte	0x4
 2829 060c 00       		.byte	0
 2830 060d 13       		.uleb128 0x13
 2831 060e 04       		.byte	0x4
 2832 060f 37000000 		.4byte	0x37
 2833 0613 1B       		.uleb128 0x1b
 2834 0614 A2040000 		.4byte	.LASF103
 2835 0618 68       		.byte	0x68
 2836 0619 0D       		.byte	0xd
 2837 061a B3       		.byte	0xb3
 2838 061b 3D070000 		.4byte	0x73d
 2839 061f 1C       		.uleb128 0x1c
 2840 0620 5F7000   		.ascii	"_p\000"
 2841 0623 0D       		.byte	0xd
 2842 0624 B4       		.byte	0xb4
 2843 0625 0D060000 		.4byte	0x60d
 2844 0629 00       		.byte	0
 2845 062a 1C       		.uleb128 0x1c
 2846 062b 5F7200   		.ascii	"_r\000"
 2847 062e 0D       		.byte	0xd
 2848 062f B5       		.byte	0xb5
 2849 0630 94000000 		.4byte	0x94
 2850 0634 04       		.byte	0x4
 2851 0635 1C       		.uleb128 0x1c
 2852 0636 5F7700   		.ascii	"_w\000"
 2853 0639 0D       		.byte	0xd
 2854 063a B6       		.byte	0xb6
 2855 063b 94000000 		.4byte	0x94
 2856 063f 08       		.byte	0x8
 2857 0640 11       		.uleb128 0x11
 2858 0641 CB060000 		.4byte	.LASF104
 2859 0645 0D       		.byte	0xd
 2860 0646 B7       		.byte	0xb7
 2861 0647 49000000 		.4byte	0x49
 2862 064b 0C       		.byte	0xc
 2863 064c 11       		.uleb128 0x11
 2864 064d 91010000 		.4byte	.LASF105
 2865 0651 0D       		.byte	0xd
 2866 0652 B8       		.byte	0xb8
 2867 0653 49000000 		.4byte	0x49
 2868 0657 0E       		.byte	0xe
 2869 0658 1C       		.uleb128 0x1c
 2870 0659 5F626600 		.ascii	"_bf\000"
 2871 065d 0D       		.byte	0xd
 2872 065e B9       		.byte	0xb9
 2873 065f E8050000 		.4byte	0x5e8
 2874 0663 10       		.byte	0x10
 2875 0664 11       		.uleb128 0x11
 2876 0665 4A090000 		.4byte	.LASF106
 2877 0669 0D       		.byte	0xd
 2878 066a BA       		.byte	0xba
 2879 066b 94000000 		.4byte	0x94
ARM GAS  /tmp/ccLKhEJ6.s 			page 69


 2880 066f 18       		.byte	0x18
 2881 0670 11       		.uleb128 0x11
 2882 0671 D2030000 		.4byte	.LASF107
 2883 0675 0D       		.byte	0xd
 2884 0676 C1       		.byte	0xc1
 2885 0677 43040000 		.4byte	0x443
 2886 067b 1C       		.byte	0x1c
 2887 067c 11       		.uleb128 0x11
 2888 067d 5A000000 		.4byte	.LASF108
 2889 0681 0D       		.byte	0xd
 2890 0682 C3       		.byte	0xc3
 2891 0683 98080000 		.4byte	0x898
 2892 0687 20       		.byte	0x20
 2893 0688 11       		.uleb128 0x11
 2894 0689 7E000000 		.4byte	.LASF109
 2895 068d 0D       		.byte	0xd
 2896 068e C5       		.byte	0xc5
 2897 068f C2080000 		.4byte	0x8c2
 2898 0693 24       		.byte	0x24
 2899 0694 11       		.uleb128 0x11
 2900 0695 4B070000 		.4byte	.LASF110
 2901 0699 0D       		.byte	0xd
 2902 069a C8       		.byte	0xc8
 2903 069b E6080000 		.4byte	0x8e6
 2904 069f 28       		.byte	0x28
 2905 06a0 11       		.uleb128 0x11
 2906 06a1 38030000 		.4byte	.LASF111
 2907 06a5 0D       		.byte	0xd
 2908 06a6 C9       		.byte	0xc9
 2909 06a7 00090000 		.4byte	0x900
 2910 06ab 2C       		.byte	0x2c
 2911 06ac 1C       		.uleb128 0x1c
 2912 06ad 5F756200 		.ascii	"_ub\000"
 2913 06b1 0D       		.byte	0xd
 2914 06b2 CC       		.byte	0xcc
 2915 06b3 E8050000 		.4byte	0x5e8
 2916 06b7 30       		.byte	0x30
 2917 06b8 1C       		.uleb128 0x1c
 2918 06b9 5F757000 		.ascii	"_up\000"
 2919 06bd 0D       		.byte	0xd
 2920 06be CD       		.byte	0xcd
 2921 06bf 0D060000 		.4byte	0x60d
 2922 06c3 38       		.byte	0x38
 2923 06c4 1C       		.uleb128 0x1c
 2924 06c5 5F757200 		.ascii	"_ur\000"
 2925 06c9 0D       		.byte	0xd
 2926 06ca CE       		.byte	0xce
 2927 06cb 94000000 		.4byte	0x94
 2928 06cf 3C       		.byte	0x3c
 2929 06d0 11       		.uleb128 0x11
 2930 06d1 9B060000 		.4byte	.LASF112
 2931 06d5 0D       		.byte	0xd
 2932 06d6 D1       		.byte	0xd1
 2933 06d7 06090000 		.4byte	0x906
 2934 06db 40       		.byte	0x40
 2935 06dc 11       		.uleb128 0x11
 2936 06dd FD000000 		.4byte	.LASF113
ARM GAS  /tmp/ccLKhEJ6.s 			page 70


 2937 06e1 0D       		.byte	0xd
 2938 06e2 D2       		.byte	0xd2
 2939 06e3 16090000 		.4byte	0x916
 2940 06e7 43       		.byte	0x43
 2941 06e8 1C       		.uleb128 0x1c
 2942 06e9 5F6C6200 		.ascii	"_lb\000"
 2943 06ed 0D       		.byte	0xd
 2944 06ee D5       		.byte	0xd5
 2945 06ef E8050000 		.4byte	0x5e8
 2946 06f3 44       		.byte	0x44
 2947 06f4 11       		.uleb128 0x11
 2948 06f5 D3070000 		.4byte	.LASF114
 2949 06f9 0D       		.byte	0xd
 2950 06fa D8       		.byte	0xd8
 2951 06fb 94000000 		.4byte	0x94
 2952 06ff 4C       		.byte	0x4c
 2953 0700 11       		.uleb128 0x11
 2954 0701 51070000 		.4byte	.LASF115
 2955 0705 0D       		.byte	0xd
 2956 0706 D9       		.byte	0xd9
 2957 0707 BB030000 		.4byte	0x3bb
 2958 070b 50       		.byte	0x50
 2959 070c 11       		.uleb128 0x11
 2960 070d 86080000 		.4byte	.LASF116
 2961 0711 0D       		.byte	0xd
 2962 0712 DC       		.byte	0xdc
 2963 0713 5B070000 		.4byte	0x75b
 2964 0717 54       		.byte	0x54
 2965 0718 11       		.uleb128 0x11
 2966 0719 25010000 		.4byte	.LASF117
 2967 071d 0D       		.byte	0xd
 2968 071e E0       		.byte	0xe0
 2969 071f 38040000 		.4byte	0x438
 2970 0723 58       		.byte	0x58
 2971 0724 11       		.uleb128 0x11
 2972 0725 B7060000 		.4byte	.LASF118
 2973 0729 0D       		.byte	0xd
 2974 072a E2       		.byte	0xe2
 2975 072b 2D040000 		.4byte	0x42d
 2976 072f 5C       		.byte	0x5c
 2977 0730 11       		.uleb128 0x11
 2978 0731 B5040000 		.4byte	.LASF119
 2979 0735 0D       		.byte	0xd
 2980 0736 E3       		.byte	0xe3
 2981 0737 94000000 		.4byte	0x94
 2982 073b 64       		.byte	0x64
 2983 073c 00       		.byte	0
 2984 073d 1F       		.uleb128 0x1f
 2985 073e 94000000 		.4byte	0x94
 2986 0742 5B070000 		.4byte	0x75b
 2987 0746 20       		.uleb128 0x20
 2988 0747 5B070000 		.4byte	0x75b
 2989 074b 20       		.uleb128 0x20
 2990 074c 43040000 		.4byte	0x443
 2991 0750 20       		.uleb128 0x20
 2992 0751 45040000 		.4byte	0x445
 2993 0755 20       		.uleb128 0x20
ARM GAS  /tmp/ccLKhEJ6.s 			page 71


 2994 0756 94000000 		.4byte	0x94
 2995 075a 00       		.byte	0
 2996 075b 13       		.uleb128 0x13
 2997 075c 04       		.byte	0x4
 2998 075d 66070000 		.4byte	0x766
 2999 0761 1A       		.uleb128 0x1a
 3000 0762 5B070000 		.4byte	0x75b
 3001 0766 21       		.uleb128 0x21
 3002 0767 F8020000 		.4byte	.LASF120
 3003 076b 2804     		.2byte	0x428
 3004 076d 0D       		.byte	0xd
 3005 076e 3802     		.2byte	0x238
 3006 0770 98080000 		.4byte	0x898
 3007 0774 0F       		.uleb128 0xf
 3008 0775 DF040000 		.4byte	.LASF121
 3009 0779 0D       		.byte	0xd
 3010 077a 3A02     		.2byte	0x23a
 3011 077c 94000000 		.4byte	0x94
 3012 0780 00       		.byte	0
 3013 0781 0F       		.uleb128 0xf
 3014 0782 5A030000 		.4byte	.LASF122
 3015 0786 0D       		.byte	0xd
 3016 0787 3F02     		.2byte	0x23f
 3017 0789 6D090000 		.4byte	0x96d
 3018 078d 04       		.byte	0x4
 3019 078e 0F       		.uleb128 0xf
 3020 078f BA070000 		.4byte	.LASF123
 3021 0793 0D       		.byte	0xd
 3022 0794 3F02     		.2byte	0x23f
 3023 0796 6D090000 		.4byte	0x96d
 3024 079a 08       		.byte	0x8
 3025 079b 0F       		.uleb128 0xf
 3026 079c A1060000 		.4byte	.LASF124
 3027 07a0 0D       		.byte	0xd
 3028 07a1 3F02     		.2byte	0x23f
 3029 07a3 6D090000 		.4byte	0x96d
 3030 07a7 0C       		.byte	0xc
 3031 07a8 0F       		.uleb128 0xf
 3032 07a9 59090000 		.4byte	.LASF125
 3033 07ad 0D       		.byte	0xd
 3034 07ae 4102     		.2byte	0x241
 3035 07b0 94000000 		.4byte	0x94
 3036 07b4 10       		.byte	0x10
 3037 07b5 0F       		.uleb128 0xf
 3038 07b6 77050000 		.4byte	.LASF126
 3039 07ba 0D       		.byte	0xd
 3040 07bb 4202     		.2byte	0x242
 3041 07bd 4F0B0000 		.4byte	0xb4f
 3042 07c1 14       		.byte	0x14
 3043 07c2 0F       		.uleb128 0xf
 3044 07c3 4B020000 		.4byte	.LASF127
 3045 07c7 0D       		.byte	0xd
 3046 07c8 4402     		.2byte	0x244
 3047 07ca 94000000 		.4byte	0x94
 3048 07ce 30       		.byte	0x30
 3049 07cf 0F       		.uleb128 0xf
 3050 07d0 E8050000 		.4byte	.LASF128
ARM GAS  /tmp/ccLKhEJ6.s 			page 72


 3051 07d4 0D       		.byte	0xd
 3052 07d5 4502     		.2byte	0x245
 3053 07d7 BC080000 		.4byte	0x8bc
 3054 07db 34       		.byte	0x34
 3055 07dc 0F       		.uleb128 0xf
 3056 07dd AA040000 		.4byte	.LASF129
 3057 07e1 0D       		.byte	0xd
 3058 07e2 4702     		.2byte	0x247
 3059 07e4 94000000 		.4byte	0x94
 3060 07e8 38       		.byte	0x38
 3061 07e9 0F       		.uleb128 0xf
 3062 07ea 4B050000 		.4byte	.LASF130
 3063 07ee 0D       		.byte	0xd
 3064 07ef 4902     		.2byte	0x249
 3065 07f1 6A0B0000 		.4byte	0xb6a
 3066 07f5 3C       		.byte	0x3c
 3067 07f6 0F       		.uleb128 0xf
 3068 07f7 DC090000 		.4byte	.LASF131
 3069 07fb 0D       		.byte	0xd
 3070 07fc 4C02     		.2byte	0x24c
 3071 07fe B5040000 		.4byte	0x4b5
 3072 0802 40       		.byte	0x40
 3073 0803 0F       		.uleb128 0xf
 3074 0804 DD010000 		.4byte	.LASF132
 3075 0808 0D       		.byte	0xd
 3076 0809 4D02     		.2byte	0x24d
 3077 080b 94000000 		.4byte	0x94
 3078 080f 44       		.byte	0x44
 3079 0810 0F       		.uleb128 0xf
 3080 0811 8B040000 		.4byte	.LASF133
 3081 0815 0D       		.byte	0xd
 3082 0816 4E02     		.2byte	0x24e
 3083 0818 B5040000 		.4byte	0x4b5
 3084 081c 48       		.byte	0x48
 3085 081d 0F       		.uleb128 0xf
 3086 081e F8050000 		.4byte	.LASF134
 3087 0822 0D       		.byte	0xd
 3088 0823 4F02     		.2byte	0x24f
 3089 0825 700B0000 		.4byte	0xb70
 3090 0829 4C       		.byte	0x4c
 3091 082a 0F       		.uleb128 0xf
 3092 082b B0000000 		.4byte	.LASF135
 3093 082f 0D       		.byte	0xd
 3094 0830 5202     		.2byte	0x252
 3095 0832 94000000 		.4byte	0x94
 3096 0836 50       		.byte	0x50
 3097 0837 0F       		.uleb128 0xf
 3098 0838 0E040000 		.4byte	.LASF136
 3099 083c 0D       		.byte	0xd
 3100 083d 5302     		.2byte	0x253
 3101 083f 45040000 		.4byte	0x445
 3102 0843 54       		.byte	0x54
 3103 0844 0F       		.uleb128 0xf
 3104 0845 96060000 		.4byte	.LASF137
 3105 0849 0D       		.byte	0xd
 3106 084a 7602     		.2byte	0x276
 3107 084c 2D0B0000 		.4byte	0xb2d
ARM GAS  /tmp/ccLKhEJ6.s 			page 73


 3108 0850 58       		.byte	0x58
 3109 0851 22       		.uleb128 0x22
 3110 0852 D2060000 		.4byte	.LASF97
 3111 0856 0D       		.byte	0xd
 3112 0857 7A02     		.2byte	0x27a
 3113 0859 D2050000 		.4byte	0x5d2
 3114 085d 4801     		.2byte	0x148
 3115 085f 22       		.uleb128 0x22
 3116 0860 55050000 		.4byte	.LASF138
 3117 0864 0D       		.byte	0xd
 3118 0865 7B02     		.2byte	0x27b
 3119 0867 94050000 		.4byte	0x594
 3120 086b 4C01     		.2byte	0x14c
 3121 086d 22       		.uleb128 0x22
 3122 086e DF030000 		.4byte	.LASF139
 3123 0872 0D       		.byte	0xd
 3124 0873 7F02     		.2byte	0x27f
 3125 0875 810B0000 		.4byte	0xb81
 3126 0879 DC02     		.2byte	0x2dc
 3127 087b 22       		.uleb128 0x22
 3128 087c BC050000 		.4byte	.LASF140
 3129 0880 0D       		.byte	0xd
 3130 0881 8402     		.2byte	0x284
 3131 0883 32090000 		.4byte	0x932
 3132 0887 E002     		.2byte	0x2e0
 3133 0889 22       		.uleb128 0x22
 3134 088a 49000000 		.4byte	.LASF141
 3135 088e 0D       		.byte	0xd
 3136 088f 8502     		.2byte	0x285
 3137 0891 8D0B0000 		.4byte	0xb8d
 3138 0895 EC02     		.2byte	0x2ec
 3139 0897 00       		.byte	0
 3140 0898 13       		.uleb128 0x13
 3141 0899 04       		.byte	0x4
 3142 089a 3D070000 		.4byte	0x73d
 3143 089e 1F       		.uleb128 0x1f
 3144 089f 94000000 		.4byte	0x94
 3145 08a3 BC080000 		.4byte	0x8bc
 3146 08a7 20       		.uleb128 0x20
 3147 08a8 5B070000 		.4byte	0x75b
 3148 08ac 20       		.uleb128 0x20
 3149 08ad 43040000 		.4byte	0x443
 3150 08b1 20       		.uleb128 0x20
 3151 08b2 BC080000 		.4byte	0x8bc
 3152 08b6 20       		.uleb128 0x20
 3153 08b7 94000000 		.4byte	0x94
 3154 08bb 00       		.byte	0
 3155 08bc 13       		.uleb128 0x13
 3156 08bd 04       		.byte	0x4
 3157 08be 52040000 		.4byte	0x452
 3158 08c2 13       		.uleb128 0x13
 3159 08c3 04       		.byte	0x4
 3160 08c4 9E080000 		.4byte	0x89e
 3161 08c8 1F       		.uleb128 0x1f
 3162 08c9 C6030000 		.4byte	0x3c6
 3163 08cd E6080000 		.4byte	0x8e6
 3164 08d1 20       		.uleb128 0x20
ARM GAS  /tmp/ccLKhEJ6.s 			page 74


 3165 08d2 5B070000 		.4byte	0x75b
 3166 08d6 20       		.uleb128 0x20
 3167 08d7 43040000 		.4byte	0x443
 3168 08db 20       		.uleb128 0x20
 3169 08dc C6030000 		.4byte	0x3c6
 3170 08e0 20       		.uleb128 0x20
 3171 08e1 94000000 		.4byte	0x94
 3172 08e5 00       		.byte	0
 3173 08e6 13       		.uleb128 0x13
 3174 08e7 04       		.byte	0x4
 3175 08e8 C8080000 		.4byte	0x8c8
 3176 08ec 1F       		.uleb128 0x1f
 3177 08ed 94000000 		.4byte	0x94
 3178 08f1 00090000 		.4byte	0x900
 3179 08f5 20       		.uleb128 0x20
 3180 08f6 5B070000 		.4byte	0x75b
 3181 08fa 20       		.uleb128 0x20
 3182 08fb 43040000 		.4byte	0x443
 3183 08ff 00       		.byte	0
 3184 0900 13       		.uleb128 0x13
 3185 0901 04       		.byte	0x4
 3186 0902 EC080000 		.4byte	0x8ec
 3187 0906 14       		.uleb128 0x14
 3188 0907 37000000 		.4byte	0x37
 3189 090b 16090000 		.4byte	0x916
 3190 090f 15       		.uleb128 0x15
 3191 0910 E3000000 		.4byte	0xe3
 3192 0914 02       		.byte	0x2
 3193 0915 00       		.byte	0
 3194 0916 14       		.uleb128 0x14
 3195 0917 37000000 		.4byte	0x37
 3196 091b 26090000 		.4byte	0x926
 3197 091f 15       		.uleb128 0x15
 3198 0920 E3000000 		.4byte	0xe3
 3199 0924 00       		.byte	0
 3200 0925 00       		.byte	0
 3201 0926 0C       		.uleb128 0xc
 3202 0927 22080000 		.4byte	.LASF142
 3203 092b 0D       		.byte	0xd
 3204 092c 1D01     		.2byte	0x11d
 3205 092e 13060000 		.4byte	0x613
 3206 0932 23       		.uleb128 0x23
 3207 0933 08060000 		.4byte	.LASF143
 3208 0937 0C       		.byte	0xc
 3209 0938 0D       		.byte	0xd
 3210 0939 2101     		.2byte	0x121
 3211 093b 67090000 		.4byte	0x967
 3212 093f 0F       		.uleb128 0xf
 3213 0940 79080000 		.4byte	.LASF77
 3214 0944 0D       		.byte	0xd
 3215 0945 2301     		.2byte	0x123
 3216 0947 67090000 		.4byte	0x967
 3217 094b 00       		.byte	0
 3218 094c 0F       		.uleb128 0xf
 3219 094d AB050000 		.4byte	.LASF144
 3220 0951 0D       		.byte	0xd
 3221 0952 2401     		.2byte	0x124
ARM GAS  /tmp/ccLKhEJ6.s 			page 75


 3222 0954 94000000 		.4byte	0x94
 3223 0958 04       		.byte	0x4
 3224 0959 0F       		.uleb128 0xf
 3225 095a 02060000 		.4byte	.LASF145
 3226 095e 0D       		.byte	0xd
 3227 095f 2501     		.2byte	0x125
 3228 0961 6D090000 		.4byte	0x96d
 3229 0965 08       		.byte	0x8
 3230 0966 00       		.byte	0
 3231 0967 13       		.uleb128 0x13
 3232 0968 04       		.byte	0x4
 3233 0969 32090000 		.4byte	0x932
 3234 096d 13       		.uleb128 0x13
 3235 096e 04       		.byte	0x4
 3236 096f 26090000 		.4byte	0x926
 3237 0973 23       		.uleb128 0x23
 3238 0974 B2070000 		.4byte	.LASF146
 3239 0978 0E       		.byte	0xe
 3240 0979 0D       		.byte	0xd
 3241 097a 3D01     		.2byte	0x13d
 3242 097c A8090000 		.4byte	0x9a8
 3243 0980 0F       		.uleb128 0xf
 3244 0981 35070000 		.4byte	.LASF147
 3245 0985 0D       		.byte	0xd
 3246 0986 3E01     		.2byte	0x13e
 3247 0988 A8090000 		.4byte	0x9a8
 3248 098c 00       		.byte	0
 3249 098d 0F       		.uleb128 0xf
 3250 098e 5D010000 		.4byte	.LASF148
 3251 0992 0D       		.byte	0xd
 3252 0993 3F01     		.2byte	0x13f
 3253 0995 A8090000 		.4byte	0x9a8
 3254 0999 06       		.byte	0x6
 3255 099a 0F       		.uleb128 0xf
 3256 099b 6E0A0000 		.4byte	.LASF149
 3257 099f 0D       		.byte	0xd
 3258 09a0 4001     		.2byte	0x140
 3259 09a2 5B000000 		.4byte	0x5b
 3260 09a6 0C       		.byte	0xc
 3261 09a7 00       		.byte	0
 3262 09a8 14       		.uleb128 0x14
 3263 09a9 5B000000 		.4byte	0x5b
 3264 09ad B8090000 		.4byte	0x9b8
 3265 09b1 15       		.uleb128 0x15
 3266 09b2 E3000000 		.4byte	0xe3
 3267 09b6 02       		.byte	0x2
 3268 09b7 00       		.byte	0
 3269 09b8 0D       		.uleb128 0xd
 3270 09b9 D0       		.byte	0xd0
 3271 09ba 0D       		.byte	0xd
 3272 09bb 5702     		.2byte	0x257
 3273 09bd B90A0000 		.4byte	0xab9
 3274 09c1 0F       		.uleb128 0xf
 3275 09c2 5D020000 		.4byte	.LASF150
 3276 09c6 0D       		.byte	0xd
 3277 09c7 5902     		.2byte	0x259
 3278 09c9 9B000000 		.4byte	0x9b
ARM GAS  /tmp/ccLKhEJ6.s 			page 76


 3279 09cd 00       		.byte	0
 3280 09ce 0F       		.uleb128 0xf
 3281 09cf EC070000 		.4byte	.LASF151
 3282 09d3 0D       		.byte	0xd
 3283 09d4 5A02     		.2byte	0x25a
 3284 09d6 45040000 		.4byte	0x445
 3285 09da 04       		.byte	0x4
 3286 09db 0F       		.uleb128 0xf
 3287 09dc A3000000 		.4byte	.LASF152
 3288 09e0 0D       		.byte	0xd
 3289 09e1 5B02     		.2byte	0x25b
 3290 09e3 B90A0000 		.4byte	0xab9
 3291 09e7 08       		.byte	0x8
 3292 09e8 0F       		.uleb128 0xf
 3293 09e9 FF010000 		.4byte	.LASF153
 3294 09ed 0D       		.byte	0xd
 3295 09ee 5C02     		.2byte	0x25c
 3296 09f0 CB040000 		.4byte	0x4cb
 3297 09f4 24       		.byte	0x24
 3298 09f5 0F       		.uleb128 0xf
 3299 09f6 D9050000 		.4byte	.LASF154
 3300 09fa 0D       		.byte	0xd
 3301 09fb 5D02     		.2byte	0x25d
 3302 09fd 94000000 		.4byte	0x94
 3303 0a01 48       		.byte	0x48
 3304 0a02 0F       		.uleb128 0xf
 3305 0a03 C0060000 		.4byte	.LASF155
 3306 0a07 0D       		.byte	0xd
 3307 0a08 5E02     		.2byte	0x25e
 3308 0a0a 8D000000 		.4byte	0x8d
 3309 0a0e 50       		.byte	0x50
 3310 0a0f 0F       		.uleb128 0xf
 3311 0a10 44080000 		.4byte	.LASF156
 3312 0a14 0D       		.byte	0xd
 3313 0a15 5F02     		.2byte	0x25f
 3314 0a17 73090000 		.4byte	0x973
 3315 0a1b 58       		.byte	0x58
 3316 0a1c 0F       		.uleb128 0xf
 3317 0a1d DA080000 		.4byte	.LASF157
 3318 0a21 0D       		.byte	0xd
 3319 0a22 6002     		.2byte	0x260
 3320 0a24 2D040000 		.4byte	0x42d
 3321 0a28 68       		.byte	0x68
 3322 0a29 0F       		.uleb128 0xf
 3323 0a2a 68070000 		.4byte	.LASF158
 3324 0a2e 0D       		.byte	0xd
 3325 0a2f 6102     		.2byte	0x261
 3326 0a31 2D040000 		.4byte	0x42d
 3327 0a35 70       		.byte	0x70
 3328 0a36 0F       		.uleb128 0xf
 3329 0a37 A9060000 		.4byte	.LASF159
 3330 0a3b 0D       		.byte	0xd
 3331 0a3c 6202     		.2byte	0x262
 3332 0a3e 2D040000 		.4byte	0x42d
 3333 0a42 78       		.byte	0x78
 3334 0a43 0F       		.uleb128 0xf
 3335 0a44 1B010000 		.4byte	.LASF160
ARM GAS  /tmp/ccLKhEJ6.s 			page 77


 3336 0a48 0D       		.byte	0xd
 3337 0a49 6302     		.2byte	0x263
 3338 0a4b C90A0000 		.4byte	0xac9
 3339 0a4f 80       		.byte	0x80
 3340 0a50 0F       		.uleb128 0xf
 3341 0a51 28050000 		.4byte	.LASF161
 3342 0a55 0D       		.byte	0xd
 3343 0a56 6402     		.2byte	0x264
 3344 0a58 D90A0000 		.4byte	0xad9
 3345 0a5c 88       		.byte	0x88
 3346 0a5d 0F       		.uleb128 0xf
 3347 0a5e F60A0000 		.4byte	.LASF162
 3348 0a62 0D       		.byte	0xd
 3349 0a63 6502     		.2byte	0x265
 3350 0a65 94000000 		.4byte	0x94
 3351 0a69 A0       		.byte	0xa0
 3352 0a6a 0F       		.uleb128 0xf
 3353 0a6b BA010000 		.4byte	.LASF163
 3354 0a6f 0D       		.byte	0xd
 3355 0a70 6602     		.2byte	0x266
 3356 0a72 2D040000 		.4byte	0x42d
 3357 0a76 A4       		.byte	0xa4
 3358 0a77 0F       		.uleb128 0xf
 3359 0a78 F9070000 		.4byte	.LASF164
 3360 0a7c 0D       		.byte	0xd
 3361 0a7d 6702     		.2byte	0x267
 3362 0a7f 2D040000 		.4byte	0x42d
 3363 0a83 AC       		.byte	0xac
 3364 0a84 0F       		.uleb128 0xf
 3365 0a85 B40A0000 		.4byte	.LASF165
 3366 0a89 0D       		.byte	0xd
 3367 0a8a 6802     		.2byte	0x268
 3368 0a8c 2D040000 		.4byte	0x42d
 3369 0a90 B4       		.byte	0xb4
 3370 0a91 0F       		.uleb128 0xf
 3371 0a92 7D060000 		.4byte	.LASF166
 3372 0a96 0D       		.byte	0xd
 3373 0a97 6902     		.2byte	0x269
 3374 0a99 2D040000 		.4byte	0x42d
 3375 0a9d BC       		.byte	0xbc
 3376 0a9e 0F       		.uleb128 0xf
 3377 0a9f EC000000 		.4byte	.LASF167
 3378 0aa3 0D       		.byte	0xd
 3379 0aa4 6A02     		.2byte	0x26a
 3380 0aa6 2D040000 		.4byte	0x42d
 3381 0aaa C4       		.byte	0xc4
 3382 0aab 0F       		.uleb128 0xf
 3383 0aac 74060000 		.4byte	.LASF168
 3384 0ab0 0D       		.byte	0xd
 3385 0ab1 6B02     		.2byte	0x26b
 3386 0ab3 94000000 		.4byte	0x94
 3387 0ab7 CC       		.byte	0xcc
 3388 0ab8 00       		.byte	0
 3389 0ab9 14       		.uleb128 0x14
 3390 0aba 4B040000 		.4byte	0x44b
 3391 0abe C90A0000 		.4byte	0xac9
 3392 0ac2 15       		.uleb128 0x15
ARM GAS  /tmp/ccLKhEJ6.s 			page 78


 3393 0ac3 E3000000 		.4byte	0xe3
 3394 0ac7 19       		.byte	0x19
 3395 0ac8 00       		.byte	0
 3396 0ac9 14       		.uleb128 0x14
 3397 0aca 4B040000 		.4byte	0x44b
 3398 0ace D90A0000 		.4byte	0xad9
 3399 0ad2 15       		.uleb128 0x15
 3400 0ad3 E3000000 		.4byte	0xe3
 3401 0ad7 07       		.byte	0x7
 3402 0ad8 00       		.byte	0
 3403 0ad9 14       		.uleb128 0x14
 3404 0ada 4B040000 		.4byte	0x44b
 3405 0ade E90A0000 		.4byte	0xae9
 3406 0ae2 15       		.uleb128 0x15
 3407 0ae3 E3000000 		.4byte	0xe3
 3408 0ae7 17       		.byte	0x17
 3409 0ae8 00       		.byte	0
 3410 0ae9 0D       		.uleb128 0xd
 3411 0aea F0       		.byte	0xf0
 3412 0aeb 0D       		.byte	0xd
 3413 0aec 7002     		.2byte	0x270
 3414 0aee 0D0B0000 		.4byte	0xb0d
 3415 0af2 0F       		.uleb128 0xf
 3416 0af3 A2090000 		.4byte	.LASF169
 3417 0af7 0D       		.byte	0xd
 3418 0af8 7302     		.2byte	0x273
 3419 0afa 0D0B0000 		.4byte	0xb0d
 3420 0afe 00       		.byte	0
 3421 0aff 0F       		.uleb128 0xf
 3422 0b00 C4050000 		.4byte	.LASF170
 3423 0b04 0D       		.byte	0xd
 3424 0b05 7402     		.2byte	0x274
 3425 0b07 1D0B0000 		.4byte	0xb1d
 3426 0b0b 78       		.byte	0x78
 3427 0b0c 00       		.byte	0
 3428 0b0d 14       		.uleb128 0x14
 3429 0b0e 0D060000 		.4byte	0x60d
 3430 0b12 1D0B0000 		.4byte	0xb1d
 3431 0b16 15       		.uleb128 0x15
 3432 0b17 E3000000 		.4byte	0xe3
 3433 0b1b 1D       		.byte	0x1d
 3434 0b1c 00       		.byte	0
 3435 0b1d 14       		.uleb128 0x14
 3436 0b1e 9B000000 		.4byte	0x9b
 3437 0b22 2D0B0000 		.4byte	0xb2d
 3438 0b26 15       		.uleb128 0x15
 3439 0b27 E3000000 		.4byte	0xe3
 3440 0b2b 1D       		.byte	0x1d
 3441 0b2c 00       		.byte	0
 3442 0b2d 24       		.uleb128 0x24
 3443 0b2e F0       		.byte	0xf0
 3444 0b2f 0D       		.byte	0xd
 3445 0b30 5502     		.2byte	0x255
 3446 0b32 4F0B0000 		.4byte	0xb4f
 3447 0b36 25       		.uleb128 0x25
 3448 0b37 F8020000 		.4byte	.LASF120
 3449 0b3b 0D       		.byte	0xd
ARM GAS  /tmp/ccLKhEJ6.s 			page 79


 3450 0b3c 6C02     		.2byte	0x26c
 3451 0b3e B8090000 		.4byte	0x9b8
 3452 0b42 25       		.uleb128 0x25
 3453 0b43 DF000000 		.4byte	.LASF171
 3454 0b47 0D       		.byte	0xd
 3455 0b48 7502     		.2byte	0x275
 3456 0b4a E90A0000 		.4byte	0xae9
 3457 0b4e 00       		.byte	0
 3458 0b4f 14       		.uleb128 0x14
 3459 0b50 4B040000 		.4byte	0x44b
 3460 0b54 5F0B0000 		.4byte	0xb5f
 3461 0b58 15       		.uleb128 0x15
 3462 0b59 E3000000 		.4byte	0xe3
 3463 0b5d 18       		.byte	0x18
 3464 0b5e 00       		.byte	0
 3465 0b5f 26       		.uleb128 0x26
 3466 0b60 6A0B0000 		.4byte	0xb6a
 3467 0b64 20       		.uleb128 0x20
 3468 0b65 5B070000 		.4byte	0x75b
 3469 0b69 00       		.byte	0
 3470 0b6a 13       		.uleb128 0x13
 3471 0b6b 04       		.byte	0x4
 3472 0b6c 5F0B0000 		.4byte	0xb5f
 3473 0b70 13       		.uleb128 0x13
 3474 0b71 04       		.byte	0x4
 3475 0b72 B5040000 		.4byte	0x4b5
 3476 0b76 26       		.uleb128 0x26
 3477 0b77 810B0000 		.4byte	0xb81
 3478 0b7b 20       		.uleb128 0x20
 3479 0b7c 94000000 		.4byte	0x94
 3480 0b80 00       		.byte	0
 3481 0b81 13       		.uleb128 0x13
 3482 0b82 04       		.byte	0x4
 3483 0b83 870B0000 		.4byte	0xb87
 3484 0b87 13       		.uleb128 0x13
 3485 0b88 04       		.byte	0x4
 3486 0b89 760B0000 		.4byte	0xb76
 3487 0b8d 14       		.uleb128 0x14
 3488 0b8e 26090000 		.4byte	0x926
 3489 0b92 9D0B0000 		.4byte	0xb9d
 3490 0b96 15       		.uleb128 0x15
 3491 0b97 E3000000 		.4byte	0xe3
 3492 0b9b 02       		.byte	0x2
 3493 0b9c 00       		.byte	0
 3494 0b9d 06       		.uleb128 0x6
 3495 0b9e D1010000 		.4byte	.LASF172
 3496 0ba2 0D       		.byte	0xd
 3497 0ba3 FD02     		.2byte	0x2fd
 3498 0ba5 5B070000 		.4byte	0x75b
 3499 0ba9 06       		.uleb128 0x6
 3500 0baa FF020000 		.4byte	.LASF173
 3501 0bae 0D       		.byte	0xd
 3502 0baf FE02     		.2byte	0x2fe
 3503 0bb1 61070000 		.4byte	0x761
 3504 0bb5 02       		.uleb128 0x2
 3505 0bb6 08       		.byte	0x8
 3506 0bb7 04       		.byte	0x4
ARM GAS  /tmp/ccLKhEJ6.s 			page 80


 3507 0bb8 CD050000 		.4byte	.LASF174
 3508 0bbc 27       		.uleb128 0x27
 3509 0bbd C2070000 		.4byte	.LASF236
 3510 0bc1 01       		.byte	0x1
 3511 0bc2 25000000 		.4byte	0x25
 3512 0bc6 0E       		.byte	0xe
 3513 0bc7 9902     		.2byte	0x299
 3514 0bc9 E60B0000 		.4byte	0xbe6
 3515 0bcd 28       		.uleb128 0x28
 3516 0bce 85090000 		.4byte	.LASF175
 3517 0bd2 7F       		.sleb128 -1
 3518 0bd3 0A       		.uleb128 0xa
 3519 0bd4 5E050000 		.4byte	.LASF176
 3520 0bd8 00       		.byte	0
 3521 0bd9 0A       		.uleb128 0xa
 3522 0bda F1080000 		.4byte	.LASF177
 3523 0bde 01       		.byte	0x1
 3524 0bdf 0A       		.uleb128 0xa
 3525 0be0 A4080000 		.4byte	.LASF178
 3526 0be4 02       		.byte	0x2
 3527 0be5 00       		.byte	0
 3528 0be6 06       		.uleb128 0x6
 3529 0be7 7B040000 		.4byte	.LASF179
 3530 0beb 0E       		.byte	0xe
 3531 0bec A402     		.2byte	0x2a4
 3532 0bee BC0B0000 		.4byte	0xbbc
 3533 0bf2 29       		.uleb128 0x29
 3534 0bf3 6D090000 		.4byte	.LASF186
 3535 0bf7 01       		.byte	0x1
 3536 0bf8 BD03     		.2byte	0x3bd
 3537 0bfa A2080000 		.4byte	.LFB91
 3538 0bfe 38000000 		.4byte	.LFE91-.LFB91
 3539 0c02 01       		.uleb128 0x1
 3540 0c03 9C       		.byte	0x9c
 3541 0c04 450C0000 		.4byte	0xc45
 3542 0c08 2A       		.uleb128 0x2a
 3543 0c09 D8000000 		.4byte	.LASF180
 3544 0c0d 01       		.byte	0x1
 3545 0c0e BD03     		.2byte	0x3bd
 3546 0c10 450C0000 		.4byte	0xc45
 3547 0c14 02       		.uleb128 0x2
 3548 0c15 91       		.byte	0x91
 3549 0c16 6C       		.sleb128 -20
 3550 0c17 2A       		.uleb128 0x2a
 3551 0c18 7E020000 		.4byte	.LASF181
 3552 0c1c 01       		.byte	0x1
 3553 0c1d BD03     		.2byte	0x3bd
 3554 0c1f B8000000 		.4byte	0xb8
 3555 0c23 02       		.uleb128 0x2
 3556 0c24 91       		.byte	0x91
 3557 0c25 6A       		.sleb128 -22
 3558 0c26 2B       		.uleb128 0x2b
 3559 0c27 FD060000 		.4byte	.LASF182
 3560 0c2b 01       		.byte	0x1
 3561 0c2c BF03     		.2byte	0x3bf
 3562 0c2e B8000000 		.4byte	0xb8
 3563 0c32 02       		.uleb128 0x2
ARM GAS  /tmp/ccLKhEJ6.s 			page 81


 3564 0c33 91       		.byte	0x91
 3565 0c34 76       		.sleb128 -10
 3566 0c35 2B       		.uleb128 0x2b
 3567 0c36 34050000 		.4byte	.LASF183
 3568 0c3a 01       		.byte	0x1
 3569 0c3b BF03     		.2byte	0x3bf
 3570 0c3d B8000000 		.4byte	0xb8
 3571 0c41 02       		.uleb128 0x2
 3572 0c42 91       		.byte	0x91
 3573 0c43 74       		.sleb128 -12
 3574 0c44 00       		.byte	0
 3575 0c45 13       		.uleb128 0x13
 3576 0c46 04       		.byte	0x4
 3577 0c47 23020000 		.4byte	0x223
 3578 0c4b 2C       		.uleb128 0x2c
 3579 0c4c ED010000 		.4byte	.LASF189
 3580 0c50 01       		.byte	0x1
 3581 0c51 7303     		.2byte	0x373
 3582 0c53 33010000 		.4byte	0x133
 3583 0c57 EE070000 		.4byte	.LFB90
 3584 0c5b B4000000 		.4byte	.LFE90-.LFB90
 3585 0c5f 01       		.uleb128 0x1
 3586 0c60 9C       		.byte	0x9c
 3587 0c61 C00C0000 		.4byte	0xcc0
 3588 0c65 2A       		.uleb128 0x2a
 3589 0c66 D8000000 		.4byte	.LASF180
 3590 0c6a 01       		.byte	0x1
 3591 0c6b 7303     		.2byte	0x373
 3592 0c6d 450C0000 		.4byte	0xc45
 3593 0c71 02       		.uleb128 0x2
 3594 0c72 91       		.byte	0x91
 3595 0c73 64       		.sleb128 -28
 3596 0c74 2A       		.uleb128 0x2a
 3597 0c75 7E020000 		.4byte	.LASF181
 3598 0c79 01       		.byte	0x1
 3599 0c7a 7303     		.2byte	0x373
 3600 0c7c B8000000 		.4byte	0xb8
 3601 0c80 02       		.uleb128 0x2
 3602 0c81 91       		.byte	0x91
 3603 0c82 62       		.sleb128 -30
 3604 0c83 2B       		.uleb128 0x2b
 3605 0c84 FD060000 		.4byte	.LASF182
 3606 0c88 01       		.byte	0x1
 3607 0c89 7503     		.2byte	0x375
 3608 0c8b D8000000 		.4byte	0xd8
 3609 0c8f 02       		.uleb128 0x2
 3610 0c90 91       		.byte	0x91
 3611 0c91 6C       		.sleb128 -20
 3612 0c92 2B       		.uleb128 0x2b
 3613 0c93 34050000 		.4byte	.LASF183
 3614 0c97 01       		.byte	0x1
 3615 0c98 7503     		.2byte	0x375
 3616 0c9a D8000000 		.4byte	0xd8
 3617 0c9e 02       		.uleb128 0x2
 3618 0c9f 91       		.byte	0x91
 3619 0ca0 74       		.sleb128 -12
 3620 0ca1 2B       		.uleb128 0x2b
ARM GAS  /tmp/ccLKhEJ6.s 			page 82


 3621 0ca2 B2030000 		.4byte	.LASF184
 3622 0ca6 01       		.byte	0x1
 3623 0ca7 7503     		.2byte	0x375
 3624 0ca9 D8000000 		.4byte	0xd8
 3625 0cad 02       		.uleb128 0x2
 3626 0cae 91       		.byte	0x91
 3627 0caf 68       		.sleb128 -24
 3628 0cb0 2B       		.uleb128 0x2b
 3629 0cb1 11090000 		.4byte	.LASF185
 3630 0cb5 01       		.byte	0x1
 3631 0cb6 7603     		.2byte	0x376
 3632 0cb8 33010000 		.4byte	0x133
 3633 0cbc 02       		.uleb128 0x2
 3634 0cbd 91       		.byte	0x91
 3635 0cbe 73       		.sleb128 -13
 3636 0cbf 00       		.byte	0
 3637 0cc0 29       		.uleb128 0x29
 3638 0cc1 030B0000 		.4byte	.LASF187
 3639 0cc5 01       		.byte	0x1
 3640 0cc6 5203     		.2byte	0x352
 3641 0cc8 CE070000 		.4byte	.LFB89
 3642 0ccc 20000000 		.4byte	.LFE89-.LFB89
 3643 0cd0 01       		.uleb128 0x1
 3644 0cd1 9C       		.byte	0x9c
 3645 0cd2 F50C0000 		.4byte	0xcf5
 3646 0cd6 2A       		.uleb128 0x2a
 3647 0cd7 D8000000 		.4byte	.LASF180
 3648 0cdb 01       		.byte	0x1
 3649 0cdc 5203     		.2byte	0x352
 3650 0cde 450C0000 		.4byte	0xc45
 3651 0ce2 02       		.uleb128 0x2
 3652 0ce3 91       		.byte	0x91
 3653 0ce4 74       		.sleb128 -12
 3654 0ce5 2A       		.uleb128 0x2a
 3655 0ce6 E2060000 		.4byte	.LASF188
 3656 0cea 01       		.byte	0x1
 3657 0ceb 5203     		.2byte	0x352
 3658 0ced B8000000 		.4byte	0xb8
 3659 0cf1 02       		.uleb128 0x2
 3660 0cf2 91       		.byte	0x91
 3661 0cf3 72       		.sleb128 -14
 3662 0cf4 00       		.byte	0
 3663 0cf5 2C       		.uleb128 0x2c
 3664 0cf6 32060000 		.4byte	.LASF190
 3665 0cfa 01       		.byte	0x1
 3666 0cfb 2103     		.2byte	0x321
 3667 0cfd 27010000 		.4byte	0x127
 3668 0d01 98070000 		.4byte	.LFB88
 3669 0d05 36000000 		.4byte	.LFE88-.LFB88
 3670 0d09 01       		.uleb128 0x1
 3671 0d0a 9C       		.byte	0x9c
 3672 0d0b 3D0D0000 		.4byte	0xd3d
 3673 0d0f 2A       		.uleb128 0x2a
 3674 0d10 D8000000 		.4byte	.LASF180
 3675 0d14 01       		.byte	0x1
 3676 0d15 2103     		.2byte	0x321
 3677 0d17 450C0000 		.4byte	0xc45
ARM GAS  /tmp/ccLKhEJ6.s 			page 83


 3678 0d1b 02       		.uleb128 0x2
 3679 0d1c 91       		.byte	0x91
 3680 0d1d 6C       		.sleb128 -20
 3681 0d1e 2A       		.uleb128 0x2a
 3682 0d1f E2060000 		.4byte	.LASF188
 3683 0d23 01       		.byte	0x1
 3684 0d24 2103     		.2byte	0x321
 3685 0d26 B8000000 		.4byte	0xb8
 3686 0d2a 02       		.uleb128 0x2
 3687 0d2b 91       		.byte	0x91
 3688 0d2c 6A       		.sleb128 -22
 3689 0d2d 2B       		.uleb128 0x2b
 3690 0d2e 11090000 		.4byte	.LASF185
 3691 0d32 01       		.byte	0x1
 3692 0d33 2303     		.2byte	0x323
 3693 0d35 27010000 		.4byte	0x127
 3694 0d39 02       		.uleb128 0x2
 3695 0d3a 91       		.byte	0x91
 3696 0d3b 77       		.sleb128 -9
 3697 0d3c 00       		.byte	0
 3698 0d3d 29       		.uleb128 0x29
 3699 0d3e 23020000 		.4byte	.LASF191
 3700 0d42 01       		.byte	0x1
 3701 0d43 FC02     		.2byte	0x2fc
 3702 0d45 5A070000 		.4byte	.LFB87
 3703 0d49 3E000000 		.4byte	.LFE87-.LFB87
 3704 0d4d 01       		.uleb128 0x1
 3705 0d4e 9C       		.byte	0x9c
 3706 0d4f 720D0000 		.4byte	0xd72
 3707 0d53 2A       		.uleb128 0x2a
 3708 0d54 D8000000 		.4byte	.LASF180
 3709 0d58 01       		.byte	0x1
 3710 0d59 FC02     		.2byte	0x2fc
 3711 0d5b 450C0000 		.4byte	0xc45
 3712 0d5f 02       		.uleb128 0x2
 3713 0d60 91       		.byte	0x91
 3714 0d61 74       		.sleb128 -12
 3715 0d62 2A       		.uleb128 0x2a
 3716 0d63 6B060000 		.4byte	.LASF192
 3717 0d67 01       		.byte	0x1
 3718 0d68 FC02     		.2byte	0x2fc
 3719 0d6a 59010000 		.4byte	0x159
 3720 0d6e 02       		.uleb128 0x2
 3721 0d6f 91       		.byte	0x91
 3722 0d70 73       		.sleb128 -13
 3723 0d71 00       		.byte	0
 3724 0d72 29       		.uleb128 0x29
 3725 0d73 22090000 		.4byte	.LASF193
 3726 0d77 01       		.byte	0x1
 3727 0d78 E902     		.2byte	0x2e9
 3728 0d7a 24070000 		.4byte	.LFB86
 3729 0d7e 36000000 		.4byte	.LFE86-.LFB86
 3730 0d82 01       		.uleb128 0x1
 3731 0d83 9C       		.byte	0x9c
 3732 0d84 A70D0000 		.4byte	0xda7
 3733 0d88 2A       		.uleb128 0x2a
 3734 0d89 D8000000 		.4byte	.LASF180
ARM GAS  /tmp/ccLKhEJ6.s 			page 84


 3735 0d8d 01       		.byte	0x1
 3736 0d8e E902     		.2byte	0x2e9
 3737 0d90 450C0000 		.4byte	0xc45
 3738 0d94 02       		.uleb128 0x2
 3739 0d95 91       		.byte	0x91
 3740 0d96 74       		.sleb128 -12
 3741 0d97 2A       		.uleb128 0x2a
 3742 0d98 14020000 		.4byte	.LASF194
 3743 0d9c 01       		.byte	0x1
 3744 0d9d E902     		.2byte	0x2e9
 3745 0d9f B8000000 		.4byte	0xb8
 3746 0da3 02       		.uleb128 0x2
 3747 0da4 91       		.byte	0x91
 3748 0da5 72       		.sleb128 -14
 3749 0da6 00       		.byte	0
 3750 0da7 29       		.uleb128 0x29
 3751 0da8 00000000 		.4byte	.LASF195
 3752 0dac 01       		.byte	0x1
 3753 0dad CC02     		.2byte	0x2cc
 3754 0daf E6060000 		.4byte	.LFB85
 3755 0db3 3E000000 		.4byte	.LFE85-.LFB85
 3756 0db7 01       		.uleb128 0x1
 3757 0db8 9C       		.byte	0x9c
 3758 0db9 DC0D0000 		.4byte	0xddc
 3759 0dbd 2A       		.uleb128 0x2a
 3760 0dbe D8000000 		.4byte	.LASF180
 3761 0dc2 01       		.byte	0x1
 3762 0dc3 CC02     		.2byte	0x2cc
 3763 0dc5 450C0000 		.4byte	0xc45
 3764 0dc9 02       		.uleb128 0x2
 3765 0dca 91       		.byte	0x91
 3766 0dcb 74       		.sleb128 -12
 3767 0dcc 2A       		.uleb128 0x2a
 3768 0dcd 6B060000 		.4byte	.LASF192
 3769 0dd1 01       		.byte	0x1
 3770 0dd2 CC02     		.2byte	0x2cc
 3771 0dd4 59010000 		.4byte	0x159
 3772 0dd8 02       		.uleb128 0x2
 3773 0dd9 91       		.byte	0x91
 3774 0dda 73       		.sleb128 -13
 3775 0ddb 00       		.byte	0
 3776 0ddc 29       		.uleb128 0x29
 3777 0ddd B8000000 		.4byte	.LASF196
 3778 0de1 01       		.byte	0x1
 3779 0de2 B102     		.2byte	0x2b1
 3780 0de4 A4060000 		.4byte	.LFB84
 3781 0de8 42000000 		.4byte	.LFE84-.LFB84
 3782 0dec 01       		.uleb128 0x1
 3783 0ded 9C       		.byte	0x9c
 3784 0dee 110E0000 		.4byte	0xe11
 3785 0df2 2A       		.uleb128 0x2a
 3786 0df3 D8000000 		.4byte	.LASF180
 3787 0df7 01       		.byte	0x1
 3788 0df8 B102     		.2byte	0x2b1
 3789 0dfa 450C0000 		.4byte	0xc45
 3790 0dfe 02       		.uleb128 0x2
 3791 0dff 91       		.byte	0x91
ARM GAS  /tmp/ccLKhEJ6.s 			page 85


 3792 0e00 74       		.sleb128 -12
 3793 0e01 2A       		.uleb128 0x2a
 3794 0e02 6B060000 		.4byte	.LASF192
 3795 0e06 01       		.byte	0x1
 3796 0e07 B102     		.2byte	0x2b1
 3797 0e09 59010000 		.4byte	0x159
 3798 0e0d 02       		.uleb128 0x2
 3799 0e0e 91       		.byte	0x91
 3800 0e0f 73       		.sleb128 -13
 3801 0e10 00       		.byte	0
 3802 0e11 29       		.uleb128 0x29
 3803 0e12 67040000 		.4byte	.LASF197
 3804 0e16 01       		.byte	0x1
 3805 0e17 9202     		.2byte	0x292
 3806 0e19 66060000 		.4byte	.LFB83
 3807 0e1d 3E000000 		.4byte	.LFE83-.LFB83
 3808 0e21 01       		.uleb128 0x1
 3809 0e22 9C       		.byte	0x9c
 3810 0e23 460E0000 		.4byte	0xe46
 3811 0e27 2A       		.uleb128 0x2a
 3812 0e28 D8000000 		.4byte	.LASF180
 3813 0e2c 01       		.byte	0x1
 3814 0e2d 9202     		.2byte	0x292
 3815 0e2f 450C0000 		.4byte	0xc45
 3816 0e33 02       		.uleb128 0x2
 3817 0e34 91       		.byte	0x91
 3818 0e35 74       		.sleb128 -12
 3819 0e36 2A       		.uleb128 0x2a
 3820 0e37 6B060000 		.4byte	.LASF192
 3821 0e3b 01       		.byte	0x1
 3822 0e3c 9202     		.2byte	0x292
 3823 0e3e 59010000 		.4byte	0x159
 3824 0e42 02       		.uleb128 0x2
 3825 0e43 91       		.byte	0x91
 3826 0e44 73       		.sleb128 -13
 3827 0e45 00       		.byte	0
 3828 0e46 29       		.uleb128 0x29
 3829 0e47 62080000 		.4byte	.LASF198
 3830 0e4b 01       		.byte	0x1
 3831 0e4c 7802     		.2byte	0x278
 3832 0e4e 28060000 		.4byte	.LFB82
 3833 0e52 3E000000 		.4byte	.LFE82-.LFB82
 3834 0e56 01       		.uleb128 0x1
 3835 0e57 9C       		.byte	0x9c
 3836 0e58 7B0E0000 		.4byte	0xe7b
 3837 0e5c 2A       		.uleb128 0x2a
 3838 0e5d D8000000 		.4byte	.LASF180
 3839 0e61 01       		.byte	0x1
 3840 0e62 7802     		.2byte	0x278
 3841 0e64 450C0000 		.4byte	0xc45
 3842 0e68 02       		.uleb128 0x2
 3843 0e69 91       		.byte	0x91
 3844 0e6a 74       		.sleb128 -12
 3845 0e6b 2A       		.uleb128 0x2a
 3846 0e6c 6B060000 		.4byte	.LASF192
 3847 0e70 01       		.byte	0x1
 3848 0e71 7802     		.2byte	0x278
ARM GAS  /tmp/ccLKhEJ6.s 			page 86


 3849 0e73 59010000 		.4byte	0x159
 3850 0e77 02       		.uleb128 0x2
 3851 0e78 91       		.byte	0x91
 3852 0e79 73       		.sleb128 -13
 3853 0e7a 00       		.byte	0
 3854 0e7b 29       		.uleb128 0x29
 3855 0e7c 54040000 		.4byte	.LASF199
 3856 0e80 01       		.byte	0x1
 3857 0e81 5F02     		.2byte	0x25f
 3858 0e83 EA050000 		.4byte	.LFB81
 3859 0e87 3E000000 		.4byte	.LFE81-.LFB81
 3860 0e8b 01       		.uleb128 0x1
 3861 0e8c 9C       		.byte	0x9c
 3862 0e8d B00E0000 		.4byte	0xeb0
 3863 0e91 2A       		.uleb128 0x2a
 3864 0e92 D8000000 		.4byte	.LASF180
 3865 0e96 01       		.byte	0x1
 3866 0e97 5F02     		.2byte	0x25f
 3867 0e99 450C0000 		.4byte	0xc45
 3868 0e9d 02       		.uleb128 0x2
 3869 0e9e 91       		.byte	0x91
 3870 0e9f 74       		.sleb128 -12
 3871 0ea0 2A       		.uleb128 0x2a
 3872 0ea1 6B060000 		.4byte	.LASF192
 3873 0ea5 01       		.byte	0x1
 3874 0ea6 5F02     		.2byte	0x25f
 3875 0ea8 59010000 		.4byte	0x159
 3876 0eac 02       		.uleb128 0x2
 3877 0ead 91       		.byte	0x91
 3878 0eae 73       		.sleb128 -13
 3879 0eaf 00       		.byte	0
 3880 0eb0 29       		.uleb128 0x29
 3881 0eb1 E4090000 		.4byte	.LASF200
 3882 0eb5 01       		.byte	0x1
 3883 0eb6 4C02     		.2byte	0x24c
 3884 0eb8 B2050000 		.4byte	.LFB80
 3885 0ebc 38000000 		.4byte	.LFE80-.LFB80
 3886 0ec0 01       		.uleb128 0x1
 3887 0ec1 9C       		.byte	0x9c
 3888 0ec2 E50E0000 		.4byte	0xee5
 3889 0ec6 2A       		.uleb128 0x2a
 3890 0ec7 D8000000 		.4byte	.LASF180
 3891 0ecb 01       		.byte	0x1
 3892 0ecc 4C02     		.2byte	0x24c
 3893 0ece 450C0000 		.4byte	0xc45
 3894 0ed2 02       		.uleb128 0x2
 3895 0ed3 91       		.byte	0x91
 3896 0ed4 74       		.sleb128 -12
 3897 0ed5 2A       		.uleb128 0x2a
 3898 0ed6 C5080000 		.4byte	.LASF201
 3899 0eda 01       		.byte	0x1
 3900 0edb 4C02     		.2byte	0x24c
 3901 0edd A2000000 		.4byte	0xa2
 3902 0ee1 02       		.uleb128 0x2
 3903 0ee2 91       		.byte	0x91
 3904 0ee3 73       		.sleb128 -13
 3905 0ee4 00       		.byte	0
ARM GAS  /tmp/ccLKhEJ6.s 			page 87


 3906 0ee5 29       		.uleb128 0x29
 3907 0ee6 A10A0000 		.4byte	.LASF202
 3908 0eea 01       		.byte	0x1
 3909 0eeb 3802     		.2byte	0x238
 3910 0eed 78050000 		.4byte	.LFB79
 3911 0ef1 3A000000 		.4byte	.LFE79-.LFB79
 3912 0ef5 01       		.uleb128 0x1
 3913 0ef6 9C       		.byte	0x9c
 3914 0ef7 1A0F0000 		.4byte	0xf1a
 3915 0efb 2A       		.uleb128 0x2a
 3916 0efc D8000000 		.4byte	.LASF180
 3917 0f00 01       		.byte	0x1
 3918 0f01 3802     		.2byte	0x238
 3919 0f03 450C0000 		.4byte	0xc45
 3920 0f07 02       		.uleb128 0x2
 3921 0f08 91       		.byte	0x91
 3922 0f09 74       		.sleb128 -12
 3923 0f0a 2A       		.uleb128 0x2a
 3924 0f0b 3B070000 		.4byte	.LASF203
 3925 0f0f 01       		.byte	0x1
 3926 0f10 3802     		.2byte	0x238
 3927 0f12 A2000000 		.4byte	0xa2
 3928 0f16 02       		.uleb128 0x2
 3929 0f17 91       		.byte	0x91
 3930 0f18 73       		.sleb128 -13
 3931 0f19 00       		.byte	0
 3932 0f1a 29       		.uleb128 0x29
 3933 0f1b ED060000 		.4byte	.LASF204
 3934 0f1f 01       		.byte	0x1
 3935 0f20 2802     		.2byte	0x228
 3936 0f22 56050000 		.4byte	.LFB78
 3937 0f26 22000000 		.4byte	.LFE78-.LFB78
 3938 0f2a 01       		.uleb128 0x1
 3939 0f2b 9C       		.byte	0x9c
 3940 0f2c 400F0000 		.4byte	0xf40
 3941 0f30 2A       		.uleb128 0x2a
 3942 0f31 D8000000 		.4byte	.LASF180
 3943 0f35 01       		.byte	0x1
 3944 0f36 2802     		.2byte	0x228
 3945 0f38 450C0000 		.4byte	0xc45
 3946 0f3c 02       		.uleb128 0x2
 3947 0f3d 91       		.byte	0x91
 3948 0f3e 74       		.sleb128 -12
 3949 0f3f 00       		.byte	0
 3950 0f40 2C       		.uleb128 0x2c
 3951 0f41 4C060000 		.4byte	.LASF205
 3952 0f45 01       		.byte	0x1
 3953 0f46 1802     		.2byte	0x218
 3954 0f48 B8000000 		.4byte	0xb8
 3955 0f4c 38050000 		.4byte	.LFB77
 3956 0f50 1E000000 		.4byte	.LFE77-.LFB77
 3957 0f54 01       		.uleb128 0x1
 3958 0f55 9C       		.byte	0x9c
 3959 0f56 6A0F0000 		.4byte	0xf6a
 3960 0f5a 2A       		.uleb128 0x2a
 3961 0f5b D8000000 		.4byte	.LASF180
 3962 0f5f 01       		.byte	0x1
ARM GAS  /tmp/ccLKhEJ6.s 			page 88


 3963 0f60 1802     		.2byte	0x218
 3964 0f62 450C0000 		.4byte	0xc45
 3965 0f66 02       		.uleb128 0x2
 3966 0f67 91       		.byte	0x91
 3967 0f68 74       		.sleb128 -12
 3968 0f69 00       		.byte	0
 3969 0f6a 29       		.uleb128 0x29
 3970 0f6b 29000000 		.4byte	.LASF206
 3971 0f6f 01       		.byte	0x1
 3972 0f70 0702     		.2byte	0x207
 3973 0f72 16050000 		.4byte	.LFB76
 3974 0f76 22000000 		.4byte	.LFE76-.LFB76
 3975 0f7a 01       		.uleb128 0x1
 3976 0f7b 9C       		.byte	0x9c
 3977 0f7c 9F0F0000 		.4byte	0xf9f
 3978 0f80 2A       		.uleb128 0x2a
 3979 0f81 D8000000 		.4byte	.LASF180
 3980 0f85 01       		.byte	0x1
 3981 0f86 0702     		.2byte	0x207
 3982 0f88 450C0000 		.4byte	0xc45
 3983 0f8c 02       		.uleb128 0x2
 3984 0f8d 91       		.byte	0x91
 3985 0f8e 74       		.sleb128 -12
 3986 0f8f 2A       		.uleb128 0x2a
 3987 0f90 D5080000 		.4byte	.LASF207
 3988 0f94 01       		.byte	0x1
 3989 0f95 0702     		.2byte	0x207
 3990 0f97 B8000000 		.4byte	0xb8
 3991 0f9b 02       		.uleb128 0x2
 3992 0f9c 91       		.byte	0x91
 3993 0f9d 72       		.sleb128 -14
 3994 0f9e 00       		.byte	0
 3995 0f9f 29       		.uleb128 0x29
 3996 0fa0 63010000 		.4byte	.LASF208
 3997 0fa4 01       		.byte	0x1
 3998 0fa5 ED01     		.2byte	0x1ed
 3999 0fa7 D8040000 		.4byte	.LFB75
 4000 0fab 3E000000 		.4byte	.LFE75-.LFB75
 4001 0faf 01       		.uleb128 0x1
 4002 0fb0 9C       		.byte	0x9c
 4003 0fb1 D40F0000 		.4byte	0xfd4
 4004 0fb5 2A       		.uleb128 0x2a
 4005 0fb6 D8000000 		.4byte	.LASF180
 4006 0fba 01       		.byte	0x1
 4007 0fbb ED01     		.2byte	0x1ed
 4008 0fbd 450C0000 		.4byte	0xc45
 4009 0fc1 02       		.uleb128 0x2
 4010 0fc2 91       		.byte	0x91
 4011 0fc3 74       		.sleb128 -12
 4012 0fc4 2A       		.uleb128 0x2a
 4013 0fc5 6B060000 		.4byte	.LASF192
 4014 0fc9 01       		.byte	0x1
 4015 0fca ED01     		.2byte	0x1ed
 4016 0fcc 59010000 		.4byte	0x159
 4017 0fd0 02       		.uleb128 0x2
 4018 0fd1 91       		.byte	0x91
 4019 0fd2 73       		.sleb128 -13
ARM GAS  /tmp/ccLKhEJ6.s 			page 89


 4020 0fd3 00       		.byte	0
 4021 0fd4 29       		.uleb128 0x29
 4022 0fd5 F3040000 		.4byte	.LASF209
 4023 0fd9 01       		.byte	0x1
 4024 0fda DA01     		.2byte	0x1da
 4025 0fdc A2040000 		.4byte	.LFB74
 4026 0fe0 36000000 		.4byte	.LFE74-.LFB74
 4027 0fe4 01       		.uleb128 0x1
 4028 0fe5 9C       		.byte	0x9c
 4029 0fe6 09100000 		.4byte	0x1009
 4030 0fea 2A       		.uleb128 0x2a
 4031 0feb D8000000 		.4byte	.LASF180
 4032 0fef 01       		.byte	0x1
 4033 0ff0 DA01     		.2byte	0x1da
 4034 0ff2 450C0000 		.4byte	0xc45
 4035 0ff6 02       		.uleb128 0x2
 4036 0ff7 91       		.byte	0x91
 4037 0ff8 74       		.sleb128 -12
 4038 0ff9 2A       		.uleb128 0x2a
 4039 0ffa 90050000 		.4byte	.LASF210
 4040 0ffe 01       		.byte	0x1
 4041 0fff DA01     		.2byte	0x1da
 4042 1001 B8000000 		.4byte	0xb8
 4043 1005 02       		.uleb128 0x2
 4044 1006 91       		.byte	0x91
 4045 1007 72       		.sleb128 -14
 4046 1008 00       		.byte	0
 4047 1009 29       		.uleb128 0x29
 4048 100a 110A0000 		.4byte	.LASF211
 4049 100e 01       		.byte	0x1
 4050 100f BD01     		.2byte	0x1bd
 4051 1011 64040000 		.4byte	.LFB73
 4052 1015 3E000000 		.4byte	.LFE73-.LFB73
 4053 1019 01       		.uleb128 0x1
 4054 101a 9C       		.byte	0x9c
 4055 101b 3E100000 		.4byte	0x103e
 4056 101f 2A       		.uleb128 0x2a
 4057 1020 D8000000 		.4byte	.LASF180
 4058 1024 01       		.byte	0x1
 4059 1025 BD01     		.2byte	0x1bd
 4060 1027 450C0000 		.4byte	0xc45
 4061 102b 02       		.uleb128 0x2
 4062 102c 91       		.byte	0x91
 4063 102d 74       		.sleb128 -12
 4064 102e 2A       		.uleb128 0x2a
 4065 102f 6B060000 		.4byte	.LASF192
 4066 1033 01       		.byte	0x1
 4067 1034 BD01     		.2byte	0x1bd
 4068 1036 59010000 		.4byte	0x159
 4069 103a 02       		.uleb128 0x2
 4070 103b 91       		.byte	0x91
 4071 103c 73       		.sleb128 -13
 4072 103d 00       		.byte	0
 4073 103e 29       		.uleb128 0x29
 4074 103f 16000000 		.4byte	.LASF212
 4075 1043 01       		.byte	0x1
 4076 1044 AA01     		.2byte	0x1aa
ARM GAS  /tmp/ccLKhEJ6.s 			page 90


 4077 1046 2E040000 		.4byte	.LFB72
 4078 104a 36000000 		.4byte	.LFE72-.LFB72
 4079 104e 01       		.uleb128 0x1
 4080 104f 9C       		.byte	0x9c
 4081 1050 73100000 		.4byte	0x1073
 4082 1054 2A       		.uleb128 0x2a
 4083 1055 D8000000 		.4byte	.LASF180
 4084 1059 01       		.byte	0x1
 4085 105a AA01     		.2byte	0x1aa
 4086 105c 450C0000 		.4byte	0xc45
 4087 1060 02       		.uleb128 0x2
 4088 1061 91       		.byte	0x91
 4089 1062 74       		.sleb128 -12
 4090 1063 2A       		.uleb128 0x2a
 4091 1064 3D090000 		.4byte	.LASF213
 4092 1068 01       		.byte	0x1
 4093 1069 AA01     		.2byte	0x1aa
 4094 106b B8000000 		.4byte	0xb8
 4095 106f 02       		.uleb128 0x2
 4096 1070 91       		.byte	0x91
 4097 1071 72       		.sleb128 -14
 4098 1072 00       		.byte	0
 4099 1073 29       		.uleb128 0x29
 4100 1074 11080000 		.4byte	.LASF214
 4101 1078 01       		.byte	0x1
 4102 1079 9301     		.2byte	0x193
 4103 107b F6030000 		.4byte	.LFB71
 4104 107f 38000000 		.4byte	.LFE71-.LFB71
 4105 1083 01       		.uleb128 0x1
 4106 1084 9C       		.byte	0x9c
 4107 1085 A8100000 		.4byte	0x10a8
 4108 1089 2A       		.uleb128 0x2a
 4109 108a D8000000 		.4byte	.LASF180
 4110 108e 01       		.byte	0x1
 4111 108f 9301     		.2byte	0x193
 4112 1091 450C0000 		.4byte	0xc45
 4113 1095 02       		.uleb128 0x2
 4114 1096 91       		.byte	0x91
 4115 1097 74       		.sleb128 -12
 4116 1098 2A       		.uleb128 0x2a
 4117 1099 26040000 		.4byte	.LASF215
 4118 109d 01       		.byte	0x1
 4119 109e 9301     		.2byte	0x193
 4120 10a0 A2000000 		.4byte	0xa2
 4121 10a4 02       		.uleb128 0x2
 4122 10a5 91       		.byte	0x91
 4123 10a6 73       		.sleb128 -13
 4124 10a7 00       		.byte	0
 4125 10a8 29       		.uleb128 0x29
 4126 10a9 60000000 		.4byte	.LASF216
 4127 10ad 01       		.byte	0x1
 4128 10ae 7701     		.2byte	0x177
 4129 10b0 B0030000 		.4byte	.LFB70
 4130 10b4 46000000 		.4byte	.LFE70-.LFB70
 4131 10b8 01       		.uleb128 0x1
 4132 10b9 9C       		.byte	0x9c
 4133 10ba EC100000 		.4byte	0x10ec
ARM GAS  /tmp/ccLKhEJ6.s 			page 91


 4134 10be 2A       		.uleb128 0x2a
 4135 10bf D8000000 		.4byte	.LASF180
 4136 10c3 01       		.byte	0x1
 4137 10c4 7701     		.2byte	0x177
 4138 10c6 450C0000 		.4byte	0xc45
 4139 10ca 02       		.uleb128 0x2
 4140 10cb 91       		.byte	0x91
 4141 10cc 74       		.sleb128 -12
 4142 10cd 2A       		.uleb128 0x2a
 4143 10ce 97080000 		.4byte	.LASF217
 4144 10d2 01       		.byte	0x1
 4145 10d3 7701     		.2byte	0x177
 4146 10d5 B8000000 		.4byte	0xb8
 4147 10d9 02       		.uleb128 0x2
 4148 10da 91       		.byte	0x91
 4149 10db 72       		.sleb128 -14
 4150 10dc 2A       		.uleb128 0x2a
 4151 10dd 6B060000 		.4byte	.LASF192
 4152 10e1 01       		.byte	0x1
 4153 10e2 7701     		.2byte	0x177
 4154 10e4 59010000 		.4byte	0x159
 4155 10e8 02       		.uleb128 0x2
 4156 10e9 91       		.byte	0x91
 4157 10ea 71       		.sleb128 -15
 4158 10eb 00       		.byte	0
 4159 10ec 29       		.uleb128 0x29
 4160 10ed 61030000 		.4byte	.LASF218
 4161 10f1 01       		.byte	0x1
 4162 10f2 3B01     		.2byte	0x13b
 4163 10f4 22030000 		.4byte	.LFB69
 4164 10f8 8E000000 		.4byte	.LFE69-.LFB69
 4165 10fc 01       		.uleb128 0x1
 4166 10fd 9C       		.byte	0x9c
 4167 10fe 6C110000 		.4byte	0x116c
 4168 1102 2A       		.uleb128 0x2a
 4169 1103 D8000000 		.4byte	.LASF180
 4170 1107 01       		.byte	0x1
 4171 1108 3B01     		.2byte	0x13b
 4172 110a 450C0000 		.4byte	0xc45
 4173 110e 02       		.uleb128 0x2
 4174 110f 91       		.byte	0x91
 4175 1110 64       		.sleb128 -28
 4176 1111 2A       		.uleb128 0x2a
 4177 1112 7E020000 		.4byte	.LASF181
 4178 1116 01       		.byte	0x1
 4179 1117 3B01     		.2byte	0x13b
 4180 1119 B8000000 		.4byte	0xb8
 4181 111d 02       		.uleb128 0x2
 4182 111e 91       		.byte	0x91
 4183 111f 62       		.sleb128 -30
 4184 1120 2A       		.uleb128 0x2a
 4185 1121 6B060000 		.4byte	.LASF192
 4186 1125 01       		.byte	0x1
 4187 1126 3B01     		.2byte	0x13b
 4188 1128 59010000 		.4byte	0x159
 4189 112c 02       		.uleb128 0x2
 4190 112d 91       		.byte	0x91
ARM GAS  /tmp/ccLKhEJ6.s 			page 92


 4191 112e 61       		.sleb128 -31
 4192 112f 2B       		.uleb128 0x2b
 4193 1130 B2030000 		.4byte	.LASF184
 4194 1134 01       		.byte	0x1
 4195 1135 3D01     		.2byte	0x13d
 4196 1137 D8000000 		.4byte	0xd8
 4197 113b 02       		.uleb128 0x2
 4198 113c 91       		.byte	0x91
 4199 113d 70       		.sleb128 -16
 4200 113e 2B       		.uleb128 0x2b
 4201 113f 0E020000 		.4byte	.LASF219
 4202 1143 01       		.byte	0x1
 4203 1144 3D01     		.2byte	0x13d
 4204 1146 D8000000 		.4byte	0xd8
 4205 114a 02       		.uleb128 0x2
 4206 114b 91       		.byte	0x91
 4207 114c 6C       		.sleb128 -20
 4208 114d 2B       		.uleb128 0x2b
 4209 114e 34050000 		.4byte	.LASF183
 4210 1152 01       		.byte	0x1
 4211 1153 3D01     		.2byte	0x13d
 4212 1155 D8000000 		.4byte	0xd8
 4213 1159 02       		.uleb128 0x2
 4214 115a 91       		.byte	0x91
 4215 115b 68       		.sleb128 -24
 4216 115c 2B       		.uleb128 0x2b
 4217 115d CF0A0000 		.4byte	.LASF220
 4218 1161 01       		.byte	0x1
 4219 1162 3E01     		.2byte	0x13e
 4220 1164 D8000000 		.4byte	0xd8
 4221 1168 02       		.uleb128 0x2
 4222 1169 91       		.byte	0x91
 4223 116a 74       		.sleb128 -12
 4224 116b 00       		.byte	0
 4225 116c 29       		.uleb128 0x29
 4226 116d E2070000 		.4byte	.LASF221
 4227 1171 01       		.byte	0x1
 4228 1172 1601     		.2byte	0x116
 4229 1174 E4020000 		.4byte	.LFB68
 4230 1178 3E000000 		.4byte	.LFE68-.LFB68
 4231 117c 01       		.uleb128 0x1
 4232 117d 9C       		.byte	0x9c
 4233 117e A1110000 		.4byte	0x11a1
 4234 1182 2A       		.uleb128 0x2a
 4235 1183 D8000000 		.4byte	.LASF180
 4236 1187 01       		.byte	0x1
 4237 1188 1601     		.2byte	0x116
 4238 118a 450C0000 		.4byte	0xc45
 4239 118e 02       		.uleb128 0x2
 4240 118f 91       		.byte	0x91
 4241 1190 74       		.sleb128 -12
 4242 1191 2A       		.uleb128 0x2a
 4243 1192 6B060000 		.4byte	.LASF192
 4244 1196 01       		.byte	0x1
 4245 1197 1601     		.2byte	0x116
 4246 1199 59010000 		.4byte	0x159
 4247 119d 02       		.uleb128 0x2
ARM GAS  /tmp/ccLKhEJ6.s 			page 93


 4248 119e 91       		.byte	0x91
 4249 119f 73       		.sleb128 -13
 4250 11a0 00       		.byte	0
 4251 11a1 29       		.uleb128 0x29
 4252 11a2 D1020000 		.4byte	.LASF222
 4253 11a6 01       		.byte	0x1
 4254 11a7 0401     		.2byte	0x104
 4255 11a9 BA020000 		.4byte	.LFB67
 4256 11ad 2A000000 		.4byte	.LFE67-.LFB67
 4257 11b1 01       		.uleb128 0x1
 4258 11b2 9C       		.byte	0x9c
 4259 11b3 C7110000 		.4byte	0x11c7
 4260 11b7 2A       		.uleb128 0x2a
 4261 11b8 85000000 		.4byte	.LASF223
 4262 11bc 01       		.byte	0x1
 4263 11bd 0401     		.2byte	0x104
 4264 11bf C7110000 		.4byte	0x11c7
 4265 11c3 02       		.uleb128 0x2
 4266 11c4 91       		.byte	0x91
 4267 11c5 74       		.sleb128 -12
 4268 11c6 00       		.byte	0
 4269 11c7 13       		.uleb128 0x13
 4270 11c8 04       		.byte	0x4
 4271 11c9 C4020000 		.4byte	0x2c4
 4272 11cd 2D       		.uleb128 0x2d
 4273 11ce 16040000 		.4byte	.LASF224
 4274 11d2 01       		.byte	0x1
 4275 11d3 E5       		.byte	0xe5
 4276 11d4 64020000 		.4byte	.LFB66
 4277 11d8 56000000 		.4byte	.LFE66-.LFB66
 4278 11dc 01       		.uleb128 0x1
 4279 11dd 9C       		.byte	0x9c
 4280 11de 0D120000 		.4byte	0x120d
 4281 11e2 2E       		.uleb128 0x2e
 4282 11e3 D8000000 		.4byte	.LASF180
 4283 11e7 01       		.byte	0x1
 4284 11e8 E5       		.byte	0xe5
 4285 11e9 450C0000 		.4byte	0xc45
 4286 11ed 02       		.uleb128 0x2
 4287 11ee 91       		.byte	0x91
 4288 11ef 6C       		.sleb128 -20
 4289 11f0 2E       		.uleb128 0x2e
 4290 11f1 85000000 		.4byte	.LASF223
 4291 11f5 01       		.byte	0x1
 4292 11f6 E5       		.byte	0xe5
 4293 11f7 C7110000 		.4byte	0x11c7
 4294 11fb 02       		.uleb128 0x2
 4295 11fc 91       		.byte	0x91
 4296 11fd 68       		.sleb128 -24
 4297 11fe 2F       		.uleb128 0x2f
 4298 11ff 7F080000 		.4byte	.LASF225
 4299 1203 01       		.byte	0x1
 4300 1204 E7       		.byte	0xe7
 4301 1205 D8000000 		.4byte	0xd8
 4302 1209 02       		.uleb128 0x2
 4303 120a 91       		.byte	0x91
 4304 120b 74       		.sleb128 -12
ARM GAS  /tmp/ccLKhEJ6.s 			page 94


 4305 120c 00       		.byte	0
 4306 120d 2D       		.uleb128 0x2d
 4307 120e 6D000000 		.4byte	.LASF226
 4308 1212 01       		.byte	0x1
 4309 1213 D0       		.byte	0xd0
 4310 1214 2C020000 		.4byte	.LFB65
 4311 1218 38000000 		.4byte	.LFE65-.LFB65
 4312 121c 01       		.uleb128 0x1
 4313 121d 9C       		.byte	0x9c
 4314 121e 31120000 		.4byte	0x1231
 4315 1222 2E       		.uleb128 0x2e
 4316 1223 3A020000 		.4byte	.LASF227
 4317 1227 01       		.byte	0x1
 4318 1228 D0       		.byte	0xd0
 4319 1229 31120000 		.4byte	0x1231
 4320 122d 02       		.uleb128 0x2
 4321 122e 91       		.byte	0x91
 4322 122f 74       		.sleb128 -12
 4323 1230 00       		.byte	0
 4324 1231 13       		.uleb128 0x13
 4325 1232 04       		.byte	0x4
 4326 1233 80020000 		.4byte	0x280
 4327 1237 30       		.uleb128 0x30
 4328 1238 A7030000 		.4byte	.LASF228
 4329 123c 01       		.byte	0x1
 4330 123d 67       		.byte	0x67
 4331 123e B8000000 		.4byte	.LFB64
 4332 1242 74010000 		.4byte	.LFE64-.LFB64
 4333 1246 01       		.uleb128 0x1
 4334 1247 9C       		.byte	0x9c
 4335 1248 BD120000 		.4byte	0x12bd
 4336 124c 2E       		.uleb128 0x2e
 4337 124d D8000000 		.4byte	.LASF180
 4338 1251 01       		.byte	0x1
 4339 1252 67       		.byte	0x67
 4340 1253 450C0000 		.4byte	0xc45
 4341 1257 02       		.uleb128 0x2
 4342 1258 91       		.byte	0x91
 4343 1259 4C       		.sleb128 -52
 4344 125a 2E       		.uleb128 0x2e
 4345 125b 3A020000 		.4byte	.LASF227
 4346 125f 01       		.byte	0x1
 4347 1260 67       		.byte	0x67
 4348 1261 31120000 		.4byte	0x1231
 4349 1265 02       		.uleb128 0x2
 4350 1266 91       		.byte	0x91
 4351 1267 48       		.sleb128 -56
 4352 1268 2F       		.uleb128 0x2f
 4353 1269 7F080000 		.4byte	.LASF225
 4354 126d 01       		.byte	0x1
 4355 126e 69       		.byte	0x69
 4356 126f D8000000 		.4byte	0xd8
 4357 1273 02       		.uleb128 0x2
 4358 1274 91       		.byte	0x91
 4359 1275 74       		.sleb128 -12
 4360 1276 2F       		.uleb128 0x2f
 4361 1277 CF000000 		.4byte	.LASF229
ARM GAS  /tmp/ccLKhEJ6.s 			page 95


 4362 127b 01       		.byte	0x1
 4363 127c 69       		.byte	0x69
 4364 127d D8000000 		.4byte	0xd8
 4365 1281 02       		.uleb128 0x2
 4366 1282 91       		.byte	0x91
 4367 1283 70       		.sleb128 -16
 4368 1284 2F       		.uleb128 0x2f
 4369 1285 A9090000 		.4byte	.LASF230
 4370 1289 01       		.byte	0x1
 4371 128a 6A       		.byte	0x6a
 4372 128b D8000000 		.4byte	0xd8
 4373 128f 02       		.uleb128 0x2
 4374 1290 91       		.byte	0x91
 4375 1291 6C       		.sleb128 -20
 4376 1292 2F       		.uleb128 0x2f
 4377 1293 42040000 		.4byte	.LASF231
 4378 1297 01       		.byte	0x1
 4379 1298 6B       		.byte	0x6b
 4380 1299 D8000000 		.4byte	0xd8
 4381 129d 02       		.uleb128 0x2
 4382 129e 91       		.byte	0x91
 4383 129f 68       		.sleb128 -24
 4384 12a0 2F       		.uleb128 0x2f
 4385 12a1 CF0A0000 		.4byte	.LASF220
 4386 12a5 01       		.byte	0x1
 4387 12a6 6C       		.byte	0x6c
 4388 12a7 D8000000 		.4byte	0xd8
 4389 12ab 02       		.uleb128 0x2
 4390 12ac 91       		.byte	0x91
 4391 12ad 64       		.sleb128 -28
 4392 12ae 2F       		.uleb128 0x2f
 4393 12af 21060000 		.4byte	.LASF232
 4394 12b3 01       		.byte	0x1
 4395 12b4 6D       		.byte	0x6d
 4396 12b5 14030000 		.4byte	0x314
 4397 12b9 02       		.uleb128 0x2
 4398 12ba 91       		.byte	0x91
 4399 12bb 50       		.sleb128 -48
 4400 12bc 00       		.byte	0
 4401 12bd 31       		.uleb128 0x31
 4402 12be B8090000 		.4byte	.LASF237
 4403 12c2 01       		.byte	0x1
 4404 12c3 39       		.byte	0x39
 4405 12c4 00000000 		.4byte	.LFB63
 4406 12c8 B8000000 		.4byte	.LFE63-.LFB63
 4407 12cc 01       		.uleb128 0x1
 4408 12cd 9C       		.byte	0x9c
 4409 12ce 2E       		.uleb128 0x2e
 4410 12cf D8000000 		.4byte	.LASF180
 4411 12d3 01       		.byte	0x1
 4412 12d4 39       		.byte	0x39
 4413 12d5 450C0000 		.4byte	0xc45
 4414 12d9 02       		.uleb128 0x2
 4415 12da 91       		.byte	0x91
 4416 12db 74       		.sleb128 -12
 4417 12dc 00       		.byte	0
 4418 12dd 00       		.byte	0
ARM GAS  /tmp/ccLKhEJ6.s 			page 96


 4419              		.section	.debug_abbrev,"",%progbits
 4420              	.Ldebug_abbrev0:
 4421 0000 01       		.uleb128 0x1
 4422 0001 11       		.uleb128 0x11
 4423 0002 01       		.byte	0x1
 4424 0003 25       		.uleb128 0x25
 4425 0004 0E       		.uleb128 0xe
 4426 0005 13       		.uleb128 0x13
 4427 0006 0B       		.uleb128 0xb
 4428 0007 03       		.uleb128 0x3
 4429 0008 0E       		.uleb128 0xe
 4430 0009 1B       		.uleb128 0x1b
 4431 000a 0E       		.uleb128 0xe
 4432 000b 11       		.uleb128 0x11
 4433 000c 01       		.uleb128 0x1
 4434 000d 12       		.uleb128 0x12
 4435 000e 06       		.uleb128 0x6
 4436 000f 10       		.uleb128 0x10
 4437 0010 17       		.uleb128 0x17
 4438 0011 00       		.byte	0
 4439 0012 00       		.byte	0
 4440 0013 02       		.uleb128 0x2
 4441 0014 24       		.uleb128 0x24
 4442 0015 00       		.byte	0
 4443 0016 0B       		.uleb128 0xb
 4444 0017 0B       		.uleb128 0xb
 4445 0018 3E       		.uleb128 0x3e
 4446 0019 0B       		.uleb128 0xb
 4447 001a 03       		.uleb128 0x3
 4448 001b 0E       		.uleb128 0xe
 4449 001c 00       		.byte	0
 4450 001d 00       		.byte	0
 4451 001e 03       		.uleb128 0x3
 4452 001f 16       		.uleb128 0x16
 4453 0020 00       		.byte	0
 4454 0021 03       		.uleb128 0x3
 4455 0022 0E       		.uleb128 0xe
 4456 0023 3A       		.uleb128 0x3a
 4457 0024 0B       		.uleb128 0xb
 4458 0025 3B       		.uleb128 0x3b
 4459 0026 0B       		.uleb128 0xb
 4460 0027 49       		.uleb128 0x49
 4461 0028 13       		.uleb128 0x13
 4462 0029 00       		.byte	0
 4463 002a 00       		.byte	0
 4464 002b 04       		.uleb128 0x4
 4465 002c 24       		.uleb128 0x24
 4466 002d 00       		.byte	0
 4467 002e 0B       		.uleb128 0xb
 4468 002f 0B       		.uleb128 0xb
 4469 0030 3E       		.uleb128 0x3e
 4470 0031 0B       		.uleb128 0xb
 4471 0032 03       		.uleb128 0x3
 4472 0033 08       		.uleb128 0x8
 4473 0034 00       		.byte	0
 4474 0035 00       		.byte	0
 4475 0036 05       		.uleb128 0x5
ARM GAS  /tmp/ccLKhEJ6.s 			page 97


 4476 0037 35       		.uleb128 0x35
 4477 0038 00       		.byte	0
 4478 0039 49       		.uleb128 0x49
 4479 003a 13       		.uleb128 0x13
 4480 003b 00       		.byte	0
 4481 003c 00       		.byte	0
 4482 003d 06       		.uleb128 0x6
 4483 003e 34       		.uleb128 0x34
 4484 003f 00       		.byte	0
 4485 0040 03       		.uleb128 0x3
 4486 0041 0E       		.uleb128 0xe
 4487 0042 3A       		.uleb128 0x3a
 4488 0043 0B       		.uleb128 0xb
 4489 0044 3B       		.uleb128 0x3b
 4490 0045 05       		.uleb128 0x5
 4491 0046 49       		.uleb128 0x49
 4492 0047 13       		.uleb128 0x13
 4493 0048 3F       		.uleb128 0x3f
 4494 0049 19       		.uleb128 0x19
 4495 004a 3C       		.uleb128 0x3c
 4496 004b 19       		.uleb128 0x19
 4497 004c 00       		.byte	0
 4498 004d 00       		.byte	0
 4499 004e 07       		.uleb128 0x7
 4500 004f 34       		.uleb128 0x34
 4501 0050 00       		.byte	0
 4502 0051 03       		.uleb128 0x3
 4503 0052 0E       		.uleb128 0xe
 4504 0053 3A       		.uleb128 0x3a
 4505 0054 0B       		.uleb128 0xb
 4506 0055 3B       		.uleb128 0x3b
 4507 0056 0B       		.uleb128 0xb
 4508 0057 49       		.uleb128 0x49
 4509 0058 13       		.uleb128 0x13
 4510 0059 3F       		.uleb128 0x3f
 4511 005a 19       		.uleb128 0x19
 4512 005b 3C       		.uleb128 0x3c
 4513 005c 19       		.uleb128 0x19
 4514 005d 00       		.byte	0
 4515 005e 00       		.byte	0
 4516 005f 08       		.uleb128 0x8
 4517 0060 16       		.uleb128 0x16
 4518 0061 00       		.byte	0
 4519 0062 03       		.uleb128 0x3
 4520 0063 08       		.uleb128 0x8
 4521 0064 3A       		.uleb128 0x3a
 4522 0065 0B       		.uleb128 0xb
 4523 0066 3B       		.uleb128 0x3b
 4524 0067 05       		.uleb128 0x5
 4525 0068 49       		.uleb128 0x49
 4526 0069 13       		.uleb128 0x13
 4527 006a 00       		.byte	0
 4528 006b 00       		.byte	0
 4529 006c 09       		.uleb128 0x9
 4530 006d 04       		.uleb128 0x4
 4531 006e 01       		.byte	0x1
 4532 006f 0B       		.uleb128 0xb
ARM GAS  /tmp/ccLKhEJ6.s 			page 98


 4533 0070 0B       		.uleb128 0xb
 4534 0071 49       		.uleb128 0x49
 4535 0072 13       		.uleb128 0x13
 4536 0073 3A       		.uleb128 0x3a
 4537 0074 0B       		.uleb128 0xb
 4538 0075 3B       		.uleb128 0x3b
 4539 0076 05       		.uleb128 0x5
 4540 0077 01       		.uleb128 0x1
 4541 0078 13       		.uleb128 0x13
 4542 0079 00       		.byte	0
 4543 007a 00       		.byte	0
 4544 007b 0A       		.uleb128 0xa
 4545 007c 28       		.uleb128 0x28
 4546 007d 00       		.byte	0
 4547 007e 03       		.uleb128 0x3
 4548 007f 0E       		.uleb128 0xe
 4549 0080 1C       		.uleb128 0x1c
 4550 0081 0B       		.uleb128 0xb
 4551 0082 00       		.byte	0
 4552 0083 00       		.byte	0
 4553 0084 0B       		.uleb128 0xb
 4554 0085 28       		.uleb128 0x28
 4555 0086 00       		.byte	0
 4556 0087 03       		.uleb128 0x3
 4557 0088 08       		.uleb128 0x8
 4558 0089 1C       		.uleb128 0x1c
 4559 008a 0B       		.uleb128 0xb
 4560 008b 00       		.byte	0
 4561 008c 00       		.byte	0
 4562 008d 0C       		.uleb128 0xc
 4563 008e 16       		.uleb128 0x16
 4564 008f 00       		.byte	0
 4565 0090 03       		.uleb128 0x3
 4566 0091 0E       		.uleb128 0xe
 4567 0092 3A       		.uleb128 0x3a
 4568 0093 0B       		.uleb128 0xb
 4569 0094 3B       		.uleb128 0x3b
 4570 0095 05       		.uleb128 0x5
 4571 0096 49       		.uleb128 0x49
 4572 0097 13       		.uleb128 0x13
 4573 0098 00       		.byte	0
 4574 0099 00       		.byte	0
 4575 009a 0D       		.uleb128 0xd
 4576 009b 13       		.uleb128 0x13
 4577 009c 01       		.byte	0x1
 4578 009d 0B       		.uleb128 0xb
 4579 009e 0B       		.uleb128 0xb
 4580 009f 3A       		.uleb128 0x3a
 4581 00a0 0B       		.uleb128 0xb
 4582 00a1 3B       		.uleb128 0x3b
 4583 00a2 05       		.uleb128 0x5
 4584 00a3 01       		.uleb128 0x1
 4585 00a4 13       		.uleb128 0x13
 4586 00a5 00       		.byte	0
 4587 00a6 00       		.byte	0
 4588 00a7 0E       		.uleb128 0xe
 4589 00a8 0D       		.uleb128 0xd
ARM GAS  /tmp/ccLKhEJ6.s 			page 99


 4590 00a9 00       		.byte	0
 4591 00aa 03       		.uleb128 0x3
 4592 00ab 08       		.uleb128 0x8
 4593 00ac 3A       		.uleb128 0x3a
 4594 00ad 0B       		.uleb128 0xb
 4595 00ae 3B       		.uleb128 0x3b
 4596 00af 05       		.uleb128 0x5
 4597 00b0 49       		.uleb128 0x49
 4598 00b1 13       		.uleb128 0x13
 4599 00b2 38       		.uleb128 0x38
 4600 00b3 0B       		.uleb128 0xb
 4601 00b4 00       		.byte	0
 4602 00b5 00       		.byte	0
 4603 00b6 0F       		.uleb128 0xf
 4604 00b7 0D       		.uleb128 0xd
 4605 00b8 00       		.byte	0
 4606 00b9 03       		.uleb128 0x3
 4607 00ba 0E       		.uleb128 0xe
 4608 00bb 3A       		.uleb128 0x3a
 4609 00bc 0B       		.uleb128 0xb
 4610 00bd 3B       		.uleb128 0x3b
 4611 00be 05       		.uleb128 0x5
 4612 00bf 49       		.uleb128 0x49
 4613 00c0 13       		.uleb128 0x13
 4614 00c1 38       		.uleb128 0x38
 4615 00c2 0B       		.uleb128 0xb
 4616 00c3 00       		.byte	0
 4617 00c4 00       		.byte	0
 4618 00c5 10       		.uleb128 0x10
 4619 00c6 13       		.uleb128 0x13
 4620 00c7 01       		.byte	0x1
 4621 00c8 0B       		.uleb128 0xb
 4622 00c9 0B       		.uleb128 0xb
 4623 00ca 3A       		.uleb128 0x3a
 4624 00cb 0B       		.uleb128 0xb
 4625 00cc 3B       		.uleb128 0x3b
 4626 00cd 0B       		.uleb128 0xb
 4627 00ce 01       		.uleb128 0x1
 4628 00cf 13       		.uleb128 0x13
 4629 00d0 00       		.byte	0
 4630 00d1 00       		.byte	0
 4631 00d2 11       		.uleb128 0x11
 4632 00d3 0D       		.uleb128 0xd
 4633 00d4 00       		.byte	0
 4634 00d5 03       		.uleb128 0x3
 4635 00d6 0E       		.uleb128 0xe
 4636 00d7 3A       		.uleb128 0x3a
 4637 00d8 0B       		.uleb128 0xb
 4638 00d9 3B       		.uleb128 0x3b
 4639 00da 0B       		.uleb128 0xb
 4640 00db 49       		.uleb128 0x49
 4641 00dc 13       		.uleb128 0x13
 4642 00dd 38       		.uleb128 0x38
 4643 00de 0B       		.uleb128 0xb
 4644 00df 00       		.byte	0
 4645 00e0 00       		.byte	0
 4646 00e1 12       		.uleb128 0x12
ARM GAS  /tmp/ccLKhEJ6.s 			page 100


 4647 00e2 15       		.uleb128 0x15
 4648 00e3 00       		.byte	0
 4649 00e4 27       		.uleb128 0x27
 4650 00e5 19       		.uleb128 0x19
 4651 00e6 00       		.byte	0
 4652 00e7 00       		.byte	0
 4653 00e8 13       		.uleb128 0x13
 4654 00e9 0F       		.uleb128 0xf
 4655 00ea 00       		.byte	0
 4656 00eb 0B       		.uleb128 0xb
 4657 00ec 0B       		.uleb128 0xb
 4658 00ed 49       		.uleb128 0x49
 4659 00ee 13       		.uleb128 0x13
 4660 00ef 00       		.byte	0
 4661 00f0 00       		.byte	0
 4662 00f1 14       		.uleb128 0x14
 4663 00f2 01       		.uleb128 0x1
 4664 00f3 01       		.byte	0x1
 4665 00f4 49       		.uleb128 0x49
 4666 00f5 13       		.uleb128 0x13
 4667 00f6 01       		.uleb128 0x1
 4668 00f7 13       		.uleb128 0x13
 4669 00f8 00       		.byte	0
 4670 00f9 00       		.byte	0
 4671 00fa 15       		.uleb128 0x15
 4672 00fb 21       		.uleb128 0x21
 4673 00fc 00       		.byte	0
 4674 00fd 49       		.uleb128 0x49
 4675 00fe 13       		.uleb128 0x13
 4676 00ff 2F       		.uleb128 0x2f
 4677 0100 0B       		.uleb128 0xb
 4678 0101 00       		.byte	0
 4679 0102 00       		.byte	0
 4680 0103 16       		.uleb128 0x16
 4681 0104 34       		.uleb128 0x34
 4682 0105 00       		.byte	0
 4683 0106 03       		.uleb128 0x3
 4684 0107 08       		.uleb128 0x8
 4685 0108 3A       		.uleb128 0x3a
 4686 0109 0B       		.uleb128 0xb
 4687 010a 3B       		.uleb128 0x3b
 4688 010b 05       		.uleb128 0x5
 4689 010c 49       		.uleb128 0x49
 4690 010d 13       		.uleb128 0x13
 4691 010e 3F       		.uleb128 0x3f
 4692 010f 19       		.uleb128 0x19
 4693 0110 3C       		.uleb128 0x3c
 4694 0111 19       		.uleb128 0x19
 4695 0112 00       		.byte	0
 4696 0113 00       		.byte	0
 4697 0114 17       		.uleb128 0x17
 4698 0115 17       		.uleb128 0x17
 4699 0116 01       		.byte	0x1
 4700 0117 0B       		.uleb128 0xb
 4701 0118 0B       		.uleb128 0xb
 4702 0119 3A       		.uleb128 0x3a
 4703 011a 0B       		.uleb128 0xb
ARM GAS  /tmp/ccLKhEJ6.s 			page 101


 4704 011b 3B       		.uleb128 0x3b
 4705 011c 0B       		.uleb128 0xb
 4706 011d 01       		.uleb128 0x1
 4707 011e 13       		.uleb128 0x13
 4708 011f 00       		.byte	0
 4709 0120 00       		.byte	0
 4710 0121 18       		.uleb128 0x18
 4711 0122 0D       		.uleb128 0xd
 4712 0123 00       		.byte	0
 4713 0124 03       		.uleb128 0x3
 4714 0125 0E       		.uleb128 0xe
 4715 0126 3A       		.uleb128 0x3a
 4716 0127 0B       		.uleb128 0xb
 4717 0128 3B       		.uleb128 0x3b
 4718 0129 0B       		.uleb128 0xb
 4719 012a 49       		.uleb128 0x49
 4720 012b 13       		.uleb128 0x13
 4721 012c 00       		.byte	0
 4722 012d 00       		.byte	0
 4723 012e 19       		.uleb128 0x19
 4724 012f 0F       		.uleb128 0xf
 4725 0130 00       		.byte	0
 4726 0131 0B       		.uleb128 0xb
 4727 0132 0B       		.uleb128 0xb
 4728 0133 00       		.byte	0
 4729 0134 00       		.byte	0
 4730 0135 1A       		.uleb128 0x1a
 4731 0136 26       		.uleb128 0x26
 4732 0137 00       		.byte	0
 4733 0138 49       		.uleb128 0x49
 4734 0139 13       		.uleb128 0x13
 4735 013a 00       		.byte	0
 4736 013b 00       		.byte	0
 4737 013c 1B       		.uleb128 0x1b
 4738 013d 13       		.uleb128 0x13
 4739 013e 01       		.byte	0x1
 4740 013f 03       		.uleb128 0x3
 4741 0140 0E       		.uleb128 0xe
 4742 0141 0B       		.uleb128 0xb
 4743 0142 0B       		.uleb128 0xb
 4744 0143 3A       		.uleb128 0x3a
 4745 0144 0B       		.uleb128 0xb
 4746 0145 3B       		.uleb128 0x3b
 4747 0146 0B       		.uleb128 0xb
 4748 0147 01       		.uleb128 0x1
 4749 0148 13       		.uleb128 0x13
 4750 0149 00       		.byte	0
 4751 014a 00       		.byte	0
 4752 014b 1C       		.uleb128 0x1c
 4753 014c 0D       		.uleb128 0xd
 4754 014d 00       		.byte	0
 4755 014e 03       		.uleb128 0x3
 4756 014f 08       		.uleb128 0x8
 4757 0150 3A       		.uleb128 0x3a
 4758 0151 0B       		.uleb128 0xb
 4759 0152 3B       		.uleb128 0x3b
 4760 0153 0B       		.uleb128 0xb
ARM GAS  /tmp/ccLKhEJ6.s 			page 102


 4761 0154 49       		.uleb128 0x49
 4762 0155 13       		.uleb128 0x13
 4763 0156 38       		.uleb128 0x38
 4764 0157 0B       		.uleb128 0xb
 4765 0158 00       		.byte	0
 4766 0159 00       		.byte	0
 4767 015a 1D       		.uleb128 0x1d
 4768 015b 13       		.uleb128 0x13
 4769 015c 01       		.byte	0x1
 4770 015d 03       		.uleb128 0x3
 4771 015e 0E       		.uleb128 0xe
 4772 015f 0B       		.uleb128 0xb
 4773 0160 05       		.uleb128 0x5
 4774 0161 3A       		.uleb128 0x3a
 4775 0162 0B       		.uleb128 0xb
 4776 0163 3B       		.uleb128 0x3b
 4777 0164 0B       		.uleb128 0xb
 4778 0165 01       		.uleb128 0x1
 4779 0166 13       		.uleb128 0x13
 4780 0167 00       		.byte	0
 4781 0168 00       		.byte	0
 4782 0169 1E       		.uleb128 0x1e
 4783 016a 0D       		.uleb128 0xd
 4784 016b 00       		.byte	0
 4785 016c 03       		.uleb128 0x3
 4786 016d 0E       		.uleb128 0xe
 4787 016e 3A       		.uleb128 0x3a
 4788 016f 0B       		.uleb128 0xb
 4789 0170 3B       		.uleb128 0x3b
 4790 0171 0B       		.uleb128 0xb
 4791 0172 49       		.uleb128 0x49
 4792 0173 13       		.uleb128 0x13
 4793 0174 38       		.uleb128 0x38
 4794 0175 05       		.uleb128 0x5
 4795 0176 00       		.byte	0
 4796 0177 00       		.byte	0
 4797 0178 1F       		.uleb128 0x1f
 4798 0179 15       		.uleb128 0x15
 4799 017a 01       		.byte	0x1
 4800 017b 27       		.uleb128 0x27
 4801 017c 19       		.uleb128 0x19
 4802 017d 49       		.uleb128 0x49
 4803 017e 13       		.uleb128 0x13
 4804 017f 01       		.uleb128 0x1
 4805 0180 13       		.uleb128 0x13
 4806 0181 00       		.byte	0
 4807 0182 00       		.byte	0
 4808 0183 20       		.uleb128 0x20
 4809 0184 05       		.uleb128 0x5
 4810 0185 00       		.byte	0
 4811 0186 49       		.uleb128 0x49
 4812 0187 13       		.uleb128 0x13
 4813 0188 00       		.byte	0
 4814 0189 00       		.byte	0
 4815 018a 21       		.uleb128 0x21
 4816 018b 13       		.uleb128 0x13
 4817 018c 01       		.byte	0x1
ARM GAS  /tmp/ccLKhEJ6.s 			page 103


 4818 018d 03       		.uleb128 0x3
 4819 018e 0E       		.uleb128 0xe
 4820 018f 0B       		.uleb128 0xb
 4821 0190 05       		.uleb128 0x5
 4822 0191 3A       		.uleb128 0x3a
 4823 0192 0B       		.uleb128 0xb
 4824 0193 3B       		.uleb128 0x3b
 4825 0194 05       		.uleb128 0x5
 4826 0195 01       		.uleb128 0x1
 4827 0196 13       		.uleb128 0x13
 4828 0197 00       		.byte	0
 4829 0198 00       		.byte	0
 4830 0199 22       		.uleb128 0x22
 4831 019a 0D       		.uleb128 0xd
 4832 019b 00       		.byte	0
 4833 019c 03       		.uleb128 0x3
 4834 019d 0E       		.uleb128 0xe
 4835 019e 3A       		.uleb128 0x3a
 4836 019f 0B       		.uleb128 0xb
 4837 01a0 3B       		.uleb128 0x3b
 4838 01a1 05       		.uleb128 0x5
 4839 01a2 49       		.uleb128 0x49
 4840 01a3 13       		.uleb128 0x13
 4841 01a4 38       		.uleb128 0x38
 4842 01a5 05       		.uleb128 0x5
 4843 01a6 00       		.byte	0
 4844 01a7 00       		.byte	0
 4845 01a8 23       		.uleb128 0x23
 4846 01a9 13       		.uleb128 0x13
 4847 01aa 01       		.byte	0x1
 4848 01ab 03       		.uleb128 0x3
 4849 01ac 0E       		.uleb128 0xe
 4850 01ad 0B       		.uleb128 0xb
 4851 01ae 0B       		.uleb128 0xb
 4852 01af 3A       		.uleb128 0x3a
 4853 01b0 0B       		.uleb128 0xb
 4854 01b1 3B       		.uleb128 0x3b
 4855 01b2 05       		.uleb128 0x5
 4856 01b3 01       		.uleb128 0x1
 4857 01b4 13       		.uleb128 0x13
 4858 01b5 00       		.byte	0
 4859 01b6 00       		.byte	0
 4860 01b7 24       		.uleb128 0x24
 4861 01b8 17       		.uleb128 0x17
 4862 01b9 01       		.byte	0x1
 4863 01ba 0B       		.uleb128 0xb
 4864 01bb 0B       		.uleb128 0xb
 4865 01bc 3A       		.uleb128 0x3a
 4866 01bd 0B       		.uleb128 0xb
 4867 01be 3B       		.uleb128 0x3b
 4868 01bf 05       		.uleb128 0x5
 4869 01c0 01       		.uleb128 0x1
 4870 01c1 13       		.uleb128 0x13
 4871 01c2 00       		.byte	0
 4872 01c3 00       		.byte	0
 4873 01c4 25       		.uleb128 0x25
 4874 01c5 0D       		.uleb128 0xd
ARM GAS  /tmp/ccLKhEJ6.s 			page 104


 4875 01c6 00       		.byte	0
 4876 01c7 03       		.uleb128 0x3
 4877 01c8 0E       		.uleb128 0xe
 4878 01c9 3A       		.uleb128 0x3a
 4879 01ca 0B       		.uleb128 0xb
 4880 01cb 3B       		.uleb128 0x3b
 4881 01cc 05       		.uleb128 0x5
 4882 01cd 49       		.uleb128 0x49
 4883 01ce 13       		.uleb128 0x13
 4884 01cf 00       		.byte	0
 4885 01d0 00       		.byte	0
 4886 01d1 26       		.uleb128 0x26
 4887 01d2 15       		.uleb128 0x15
 4888 01d3 01       		.byte	0x1
 4889 01d4 27       		.uleb128 0x27
 4890 01d5 19       		.uleb128 0x19
 4891 01d6 01       		.uleb128 0x1
 4892 01d7 13       		.uleb128 0x13
 4893 01d8 00       		.byte	0
 4894 01d9 00       		.byte	0
 4895 01da 27       		.uleb128 0x27
 4896 01db 04       		.uleb128 0x4
 4897 01dc 01       		.byte	0x1
 4898 01dd 03       		.uleb128 0x3
 4899 01de 0E       		.uleb128 0xe
 4900 01df 0B       		.uleb128 0xb
 4901 01e0 0B       		.uleb128 0xb
 4902 01e1 49       		.uleb128 0x49
 4903 01e2 13       		.uleb128 0x13
 4904 01e3 3A       		.uleb128 0x3a
 4905 01e4 0B       		.uleb128 0xb
 4906 01e5 3B       		.uleb128 0x3b
 4907 01e6 05       		.uleb128 0x5
 4908 01e7 01       		.uleb128 0x1
 4909 01e8 13       		.uleb128 0x13
 4910 01e9 00       		.byte	0
 4911 01ea 00       		.byte	0
 4912 01eb 28       		.uleb128 0x28
 4913 01ec 28       		.uleb128 0x28
 4914 01ed 00       		.byte	0
 4915 01ee 03       		.uleb128 0x3
 4916 01ef 0E       		.uleb128 0xe
 4917 01f0 1C       		.uleb128 0x1c
 4918 01f1 0D       		.uleb128 0xd
 4919 01f2 00       		.byte	0
 4920 01f3 00       		.byte	0
 4921 01f4 29       		.uleb128 0x29
 4922 01f5 2E       		.uleb128 0x2e
 4923 01f6 01       		.byte	0x1
 4924 01f7 3F       		.uleb128 0x3f
 4925 01f8 19       		.uleb128 0x19
 4926 01f9 03       		.uleb128 0x3
 4927 01fa 0E       		.uleb128 0xe
 4928 01fb 3A       		.uleb128 0x3a
 4929 01fc 0B       		.uleb128 0xb
 4930 01fd 3B       		.uleb128 0x3b
 4931 01fe 05       		.uleb128 0x5
ARM GAS  /tmp/ccLKhEJ6.s 			page 105


 4932 01ff 27       		.uleb128 0x27
 4933 0200 19       		.uleb128 0x19
 4934 0201 11       		.uleb128 0x11
 4935 0202 01       		.uleb128 0x1
 4936 0203 12       		.uleb128 0x12
 4937 0204 06       		.uleb128 0x6
 4938 0205 40       		.uleb128 0x40
 4939 0206 18       		.uleb128 0x18
 4940 0207 9742     		.uleb128 0x2117
 4941 0209 19       		.uleb128 0x19
 4942 020a 01       		.uleb128 0x1
 4943 020b 13       		.uleb128 0x13
 4944 020c 00       		.byte	0
 4945 020d 00       		.byte	0
 4946 020e 2A       		.uleb128 0x2a
 4947 020f 05       		.uleb128 0x5
 4948 0210 00       		.byte	0
 4949 0211 03       		.uleb128 0x3
 4950 0212 0E       		.uleb128 0xe
 4951 0213 3A       		.uleb128 0x3a
 4952 0214 0B       		.uleb128 0xb
 4953 0215 3B       		.uleb128 0x3b
 4954 0216 05       		.uleb128 0x5
 4955 0217 49       		.uleb128 0x49
 4956 0218 13       		.uleb128 0x13
 4957 0219 02       		.uleb128 0x2
 4958 021a 18       		.uleb128 0x18
 4959 021b 00       		.byte	0
 4960 021c 00       		.byte	0
 4961 021d 2B       		.uleb128 0x2b
 4962 021e 34       		.uleb128 0x34
 4963 021f 00       		.byte	0
 4964 0220 03       		.uleb128 0x3
 4965 0221 0E       		.uleb128 0xe
 4966 0222 3A       		.uleb128 0x3a
 4967 0223 0B       		.uleb128 0xb
 4968 0224 3B       		.uleb128 0x3b
 4969 0225 05       		.uleb128 0x5
 4970 0226 49       		.uleb128 0x49
 4971 0227 13       		.uleb128 0x13
 4972 0228 02       		.uleb128 0x2
 4973 0229 18       		.uleb128 0x18
 4974 022a 00       		.byte	0
 4975 022b 00       		.byte	0
 4976 022c 2C       		.uleb128 0x2c
 4977 022d 2E       		.uleb128 0x2e
 4978 022e 01       		.byte	0x1
 4979 022f 3F       		.uleb128 0x3f
 4980 0230 19       		.uleb128 0x19
 4981 0231 03       		.uleb128 0x3
 4982 0232 0E       		.uleb128 0xe
 4983 0233 3A       		.uleb128 0x3a
 4984 0234 0B       		.uleb128 0xb
 4985 0235 3B       		.uleb128 0x3b
 4986 0236 05       		.uleb128 0x5
 4987 0237 27       		.uleb128 0x27
 4988 0238 19       		.uleb128 0x19
ARM GAS  /tmp/ccLKhEJ6.s 			page 106


 4989 0239 49       		.uleb128 0x49
 4990 023a 13       		.uleb128 0x13
 4991 023b 11       		.uleb128 0x11
 4992 023c 01       		.uleb128 0x1
 4993 023d 12       		.uleb128 0x12
 4994 023e 06       		.uleb128 0x6
 4995 023f 40       		.uleb128 0x40
 4996 0240 18       		.uleb128 0x18
 4997 0241 9742     		.uleb128 0x2117
 4998 0243 19       		.uleb128 0x19
 4999 0244 01       		.uleb128 0x1
 5000 0245 13       		.uleb128 0x13
 5001 0246 00       		.byte	0
 5002 0247 00       		.byte	0
 5003 0248 2D       		.uleb128 0x2d
 5004 0249 2E       		.uleb128 0x2e
 5005 024a 01       		.byte	0x1
 5006 024b 3F       		.uleb128 0x3f
 5007 024c 19       		.uleb128 0x19
 5008 024d 03       		.uleb128 0x3
 5009 024e 0E       		.uleb128 0xe
 5010 024f 3A       		.uleb128 0x3a
 5011 0250 0B       		.uleb128 0xb
 5012 0251 3B       		.uleb128 0x3b
 5013 0252 0B       		.uleb128 0xb
 5014 0253 27       		.uleb128 0x27
 5015 0254 19       		.uleb128 0x19
 5016 0255 11       		.uleb128 0x11
 5017 0256 01       		.uleb128 0x1
 5018 0257 12       		.uleb128 0x12
 5019 0258 06       		.uleb128 0x6
 5020 0259 40       		.uleb128 0x40
 5021 025a 18       		.uleb128 0x18
 5022 025b 9742     		.uleb128 0x2117
 5023 025d 19       		.uleb128 0x19
 5024 025e 01       		.uleb128 0x1
 5025 025f 13       		.uleb128 0x13
 5026 0260 00       		.byte	0
 5027 0261 00       		.byte	0
 5028 0262 2E       		.uleb128 0x2e
 5029 0263 05       		.uleb128 0x5
 5030 0264 00       		.byte	0
 5031 0265 03       		.uleb128 0x3
 5032 0266 0E       		.uleb128 0xe
 5033 0267 3A       		.uleb128 0x3a
 5034 0268 0B       		.uleb128 0xb
 5035 0269 3B       		.uleb128 0x3b
 5036 026a 0B       		.uleb128 0xb
 5037 026b 49       		.uleb128 0x49
 5038 026c 13       		.uleb128 0x13
 5039 026d 02       		.uleb128 0x2
 5040 026e 18       		.uleb128 0x18
 5041 026f 00       		.byte	0
 5042 0270 00       		.byte	0
 5043 0271 2F       		.uleb128 0x2f
 5044 0272 34       		.uleb128 0x34
 5045 0273 00       		.byte	0
ARM GAS  /tmp/ccLKhEJ6.s 			page 107


 5046 0274 03       		.uleb128 0x3
 5047 0275 0E       		.uleb128 0xe
 5048 0276 3A       		.uleb128 0x3a
 5049 0277 0B       		.uleb128 0xb
 5050 0278 3B       		.uleb128 0x3b
 5051 0279 0B       		.uleb128 0xb
 5052 027a 49       		.uleb128 0x49
 5053 027b 13       		.uleb128 0x13
 5054 027c 02       		.uleb128 0x2
 5055 027d 18       		.uleb128 0x18
 5056 027e 00       		.byte	0
 5057 027f 00       		.byte	0
 5058 0280 30       		.uleb128 0x30
 5059 0281 2E       		.uleb128 0x2e
 5060 0282 01       		.byte	0x1
 5061 0283 3F       		.uleb128 0x3f
 5062 0284 19       		.uleb128 0x19
 5063 0285 03       		.uleb128 0x3
 5064 0286 0E       		.uleb128 0xe
 5065 0287 3A       		.uleb128 0x3a
 5066 0288 0B       		.uleb128 0xb
 5067 0289 3B       		.uleb128 0x3b
 5068 028a 0B       		.uleb128 0xb
 5069 028b 27       		.uleb128 0x27
 5070 028c 19       		.uleb128 0x19
 5071 028d 11       		.uleb128 0x11
 5072 028e 01       		.uleb128 0x1
 5073 028f 12       		.uleb128 0x12
 5074 0290 06       		.uleb128 0x6
 5075 0291 40       		.uleb128 0x40
 5076 0292 18       		.uleb128 0x18
 5077 0293 9642     		.uleb128 0x2116
 5078 0295 19       		.uleb128 0x19
 5079 0296 01       		.uleb128 0x1
 5080 0297 13       		.uleb128 0x13
 5081 0298 00       		.byte	0
 5082 0299 00       		.byte	0
 5083 029a 31       		.uleb128 0x31
 5084 029b 2E       		.uleb128 0x2e
 5085 029c 01       		.byte	0x1
 5086 029d 3F       		.uleb128 0x3f
 5087 029e 19       		.uleb128 0x19
 5088 029f 03       		.uleb128 0x3
 5089 02a0 0E       		.uleb128 0xe
 5090 02a1 3A       		.uleb128 0x3a
 5091 02a2 0B       		.uleb128 0xb
 5092 02a3 3B       		.uleb128 0x3b
 5093 02a4 0B       		.uleb128 0xb
 5094 02a5 27       		.uleb128 0x27
 5095 02a6 19       		.uleb128 0x19
 5096 02a7 11       		.uleb128 0x11
 5097 02a8 01       		.uleb128 0x1
 5098 02a9 12       		.uleb128 0x12
 5099 02aa 06       		.uleb128 0x6
 5100 02ab 40       		.uleb128 0x40
 5101 02ac 18       		.uleb128 0x18
 5102 02ad 9642     		.uleb128 0x2116
ARM GAS  /tmp/ccLKhEJ6.s 			page 108


 5103 02af 19       		.uleb128 0x19
 5104 02b0 00       		.byte	0
 5105 02b1 00       		.byte	0
 5106 02b2 00       		.byte	0
 5107              		.section	.debug_aranges,"",%progbits
 5108 0000 1C000000 		.4byte	0x1c
 5109 0004 0200     		.2byte	0x2
 5110 0006 00000000 		.4byte	.Ldebug_info0
 5111 000a 04       		.byte	0x4
 5112 000b 00       		.byte	0
 5113 000c 0000     		.2byte	0
 5114 000e 0000     		.2byte	0
 5115 0010 00000000 		.4byte	.Ltext0
 5116 0014 DA080000 		.4byte	.Letext0-.Ltext0
 5117 0018 00000000 		.4byte	0
 5118 001c 00000000 		.4byte	0
 5119              		.section	.debug_line,"",%progbits
 5120              	.Ldebug_line0:
 5121 0000 35030000 		.section	.debug_str,"MS",%progbits,1
 5121      0200E501 
 5121      00000201 
 5121      FB0E0D00 
 5121      01010101 
 5122              	.LASF195:
 5123 0000 55534152 		.ascii	"USART_OneBitMethodCmd\000"
 5123      545F4F6E 
 5123      65426974 
 5123      4D657468 
 5123      6F64436D 
 5124              	.LASF212:
 5125 0016 55534152 		.ascii	"USART_WakeUpConfig\000"
 5125      545F5761 
 5125      6B655570 
 5125      436F6E66 
 5125      696700
 5126              	.LASF206:
 5127 0029 55534152 		.ascii	"USART_SendData\000"
 5127      545F5365 
 5127      6E644461 
 5127      746100
 5128              	.LASF19:
 5129 0038 73697A65 		.ascii	"sizetype\000"
 5129      74797065 
 5129      00
 5130              	.LASF72:
 5131 0041 5F5F7661 		.ascii	"__value\000"
 5131      6C756500 
 5132              	.LASF141:
 5133 0049 5F5F7366 		.ascii	"__sf\000"
 5133      00
 5134              	.LASF44:
 5135 004e 55534152 		.ascii	"USART_Clock\000"
 5135      545F436C 
 5135      6F636B00 
 5136              	.LASF108:
 5137 005a 5F726561 		.ascii	"_read\000"
 5137      6400
ARM GAS  /tmp/ccLKhEJ6.s 			page 109


 5138              	.LASF216:
 5139 0060 55534152 		.ascii	"USART_DMACmd\000"
 5139      545F444D 
 5139      41436D64 
 5139      00
 5140              	.LASF226:
 5141 006d 55534152 		.ascii	"USART_StructInit\000"
 5141      545F5374 
 5141      72756374 
 5141      496E6974 
 5141      00
 5142              	.LASF109:
 5143 007e 5F777269 		.ascii	"_write\000"
 5143      746500
 5144              	.LASF223:
 5145 0085 55534152 		.ascii	"USART_ClockInitStruct\000"
 5145      545F436C 
 5145      6F636B49 
 5145      6E697453 
 5145      74727563 
 5146              	.LASF17:
 5147 009b 696E7433 		.ascii	"int32_t\000"
 5147      325F7400 
 5148              	.LASF152:
 5149 00a3 5F617363 		.ascii	"_asctime_buf\000"
 5149      74696D65 
 5149      5F627566 
 5149      00
 5150              	.LASF135:
 5151 00b0 5F637674 		.ascii	"_cvtlen\000"
 5151      6C656E00 
 5152              	.LASF196:
 5153 00b8 55534152 		.ascii	"USART_OverSampling8Cmd\000"
 5153      545F4F76 
 5153      65725361 
 5153      6D706C69 
 5153      6E673843 
 5154              	.LASF229:
 5155 00cf 61706263 		.ascii	"apbclock\000"
 5155      6C6F636B 
 5155      00
 5156              	.LASF180:
 5157 00d8 55534152 		.ascii	"USARTx\000"
 5157      547800
 5158              	.LASF171:
 5159 00df 5F756E75 		.ascii	"_unused\000"
 5159      73656400 
 5160              	.LASF82:
 5161 00e7 5F5F746D 		.ascii	"__tm\000"
 5161      00
 5162              	.LASF167:
 5163 00ec 5F776373 		.ascii	"_wcsrtombs_state\000"
 5163      72746F6D 
 5163      62735F73 
 5163      74617465 
 5163      00
 5164              	.LASF113:
ARM GAS  /tmp/ccLKhEJ6.s 			page 110


 5165 00fd 5F6E6275 		.ascii	"_nbuf\000"
 5165      6600
 5166              	.LASF83:
 5167 0103 5F5F746D 		.ascii	"__tm_sec\000"
 5167      5F736563 
 5167      00
 5168              	.LASF50:
 5169 010c 48434C4B 		.ascii	"HCLK_Frequency\000"
 5169      5F467265 
 5169      7175656E 
 5169      637900
 5170              	.LASF160:
 5171 011b 5F6C3634 		.ascii	"_l64a_buf\000"
 5171      615F6275 
 5171      6600
 5172              	.LASF117:
 5173 0125 5F6C6F63 		.ascii	"_lock\000"
 5173      6B00
 5174              	.LASF235:
 5175 012b 2F686F6D 		.ascii	"/home/enbin/Documents/code/STM/stm32-quadrocopter\000"
 5175      652F656E 
 5175      62696E2F 
 5175      446F6375 
 5175      6D656E74 
 5176              	.LASF148:
 5177 015d 5F6D756C 		.ascii	"_mult\000"
 5177      7400
 5178              	.LASF208:
 5179 0163 55534152 		.ascii	"USART_LINCmd\000"
 5179      545F4C49 
 5179      4E436D64 
 5179      00
 5180              	.LASF69:
 5181 0170 5F5F7763 		.ascii	"__wch\000"
 5181      6800
 5182              	.LASF2:
 5183 0176 5F5F7569 		.ascii	"__uint8_t\000"
 5183      6E74385F 
 5183      7400
 5184              	.LASF53:
 5185 0180 41444343 		.ascii	"ADCCLK_Frequency\000"
 5185      4C4B5F46 
 5185      72657175 
 5185      656E6379 
 5185      00
 5186              	.LASF105:
 5187 0191 5F66696C 		.ascii	"_file\000"
 5187      6500
 5188              	.LASF92:
 5189 0197 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5189      65786974 
 5189      5F617267 
 5189      7300
 5190              	.LASF59:
 5191 01a5 477A5F6F 		.ascii	"Gz_offset\000"
 5191      66667365 
 5191      7400
ARM GAS  /tmp/ccLKhEJ6.s 			page 111


 5192              	.LASF46:
 5193 01af 55534152 		.ascii	"USART_CPHA\000"
 5193      545F4350 
 5193      484100
 5194              	.LASF163:
 5195 01ba 5F6D6272 		.ascii	"_mbrlen_state\000"
 5195      6C656E5F 
 5195      73746174 
 5195      6500
 5196              	.LASF8:
 5197 01c8 6C6F6E67 		.ascii	"long int\000"
 5197      20696E74 
 5197      00
 5198              	.LASF172:
 5199 01d1 5F696D70 		.ascii	"_impure_ptr\000"
 5199      7572655F 
 5199      70747200 
 5200              	.LASF132:
 5201 01dd 5F726573 		.ascii	"_result_k\000"
 5201      756C745F 
 5201      6B00
 5202              	.LASF102:
 5203 01e7 5F73697A 		.ascii	"_size\000"
 5203      6500
 5204              	.LASF189:
 5205 01ed 55534152 		.ascii	"USART_GetITStatus\000"
 5205      545F4765 
 5205      74495453 
 5205      74617475 
 5205      7300
 5206              	.LASF153:
 5207 01ff 5F6C6F63 		.ascii	"_localtime_buf\000"
 5207      616C7469 
 5207      6D655F62 
 5207      756600
 5208              	.LASF219:
 5209 020e 6974706F 		.ascii	"itpos\000"
 5209      7300
 5210              	.LASF194:
 5211 0214 55534152 		.ascii	"USART_IrDAMode\000"
 5211      545F4972 
 5211      44414D6F 
 5211      646500
 5212              	.LASF191:
 5213 0223 55534152 		.ascii	"USART_IrDACmd\000"
 5213      545F4972 
 5213      4441436D 
 5213      6400
 5214              	.LASF87:
 5215 0231 5F5F746D 		.ascii	"__tm_mon\000"
 5215      5F6D6F6E 
 5215      00
 5216              	.LASF227:
 5217 023a 55534152 		.ascii	"USART_InitStruct\000"
 5217      545F496E 
 5217      69745374 
 5217      72756374 
ARM GAS  /tmp/ccLKhEJ6.s 			page 112


 5217      00
 5218              	.LASF127:
 5219 024b 5F637572 		.ascii	"_current_category\000"
 5219      72656E74 
 5219      5F636174 
 5219      65676F72 
 5219      7900
 5220              	.LASF150:
 5221 025d 5F756E75 		.ascii	"_unused_rand\000"
 5221      7365645F 
 5221      72616E64 
 5221      00
 5222              	.LASF0:
 5223 026a 7369676E 		.ascii	"signed char\000"
 5223      65642063 
 5223      68617200 
 5224              	.LASF14:
 5225 0276 75696E74 		.ascii	"uint8_t\000"
 5225      385F7400 
 5226              	.LASF181:
 5227 027e 55534152 		.ascii	"USART_IT\000"
 5227      545F4954 
 5227      00
 5228              	.LASF28:
 5229 0287 52455345 		.ascii	"RESERVED0\000"
 5229      52564544 
 5229      3000
 5230              	.LASF29:
 5231 0291 52455345 		.ascii	"RESERVED1\000"
 5231      52564544 
 5231      3100
 5232              	.LASF1:
 5233 029b 756E7369 		.ascii	"unsigned char\000"
 5233      676E6564 
 5233      20636861 
 5233      7200
 5234              	.LASF31:
 5235 02a9 52455345 		.ascii	"RESERVED3\000"
 5235      52564544 
 5235      3300
 5236              	.LASF32:
 5237 02b3 52455345 		.ascii	"RESERVED4\000"
 5237      52564544 
 5237      3400
 5238              	.LASF33:
 5239 02bd 52455345 		.ascii	"RESERVED5\000"
 5239      52564544 
 5239      3500
 5240              	.LASF35:
 5241 02c7 52455345 		.ascii	"RESERVED6\000"
 5241      52564544 
 5241      3600
 5242              	.LASF222:
 5243 02d1 55534152 		.ascii	"USART_ClockStructInit\000"
 5243      545F436C 
 5243      6F636B53 
 5243      74727563 
ARM GAS  /tmp/ccLKhEJ6.s 			page 113


 5243      74496E69 
 5244              	.LASF38:
 5245 02e7 55534152 		.ascii	"USART_WordLength\000"
 5245      545F576F 
 5245      72644C65 
 5245      6E677468 
 5245      00
 5246              	.LASF120:
 5247 02f8 5F726565 		.ascii	"_reent\000"
 5247      6E7400
 5248              	.LASF173:
 5249 02ff 5F676C6F 		.ascii	"_global_impure_ptr\000"
 5249      62616C5F 
 5249      696D7075 
 5249      72655F70 
 5249      747200
 5250              	.LASF30:
 5251 0312 52455345 		.ascii	"RESERVED2\000"
 5251      52564544 
 5251      3200
 5252              	.LASF40:
 5253 031c 55534152 		.ascii	"USART_Parity\000"
 5253      545F5061 
 5253      72697479 
 5253      00
 5254              	.LASF75:
 5255 0329 63686172 		.ascii	"char\000"
 5255      00
 5256              	.LASF99:
 5257 032e 5F666E73 		.ascii	"_fns\000"
 5257      00
 5258              	.LASF55:
 5259 0333 6779726F 		.ascii	"gyro\000"
 5259      00
 5260              	.LASF111:
 5261 0338 5F636C6F 		.ascii	"_close\000"
 5261      736500
 5262              	.LASF5:
 5263 033f 5F5F7569 		.ascii	"__uint16_t\000"
 5263      6E743136 
 5263      5F7400
 5264              	.LASF52:
 5265 034a 50434C4B 		.ascii	"PCLK2_Frequency\000"
 5265      325F4672 
 5265      65717565 
 5265      6E637900 
 5266              	.LASF122:
 5267 035a 5F737464 		.ascii	"_stdin\000"
 5267      696E00
 5268              	.LASF218:
 5269 0361 55534152 		.ascii	"USART_ITConfig\000"
 5269      545F4954 
 5269      436F6E66 
 5269      696700
 5270              	.LASF51:
 5271 0370 50434C4B 		.ascii	"PCLK1_Frequency\000"
 5271      315F4672 
ARM GAS  /tmp/ccLKhEJ6.s 			page 114


 5271      65717565 
 5271      6E637900 
 5272              	.LASF36:
 5273 0380 55534152 		.ascii	"USART_TypeDef\000"
 5273      545F5479 
 5273      70654465 
 5273      6600
 5274              	.LASF234:
 5275 038e 636F6D6D 		.ascii	"common/stm32f10x_usart.c\000"
 5275      6F6E2F73 
 5275      746D3332 
 5275      66313078 
 5275      5F757361 
 5276              	.LASF228:
 5277 03a7 55534152 		.ascii	"USART_Init\000"
 5277      545F496E 
 5277      697400
 5278              	.LASF184:
 5279 03b2 75736172 		.ascii	"usartreg\000"
 5279      74726567 
 5279      00
 5280              	.LASF48:
 5281 03bb 55534152 		.ascii	"USART_ClockInitTypeDef\000"
 5281      545F436C 
 5281      6F636B49 
 5281      6E697454 
 5281      79706544 
 5282              	.LASF107:
 5283 03d2 5F636F6F 		.ascii	"_cookie\000"
 5283      6B696500 
 5284              	.LASF80:
 5285 03da 5F776473 		.ascii	"_wds\000"
 5285      00
 5286              	.LASF139:
 5287 03df 5F736967 		.ascii	"_sig_func\000"
 5287      5F66756E 
 5287      6300
 5288              	.LASF37:
 5289 03e9 55534152 		.ascii	"USART_BaudRate\000"
 5289      545F4261 
 5289      75645261 
 5289      746500
 5290              	.LASF45:
 5291 03f8 55534152 		.ascii	"USART_CPOL\000"
 5291      545F4350 
 5291      4F4C00
 5292              	.LASF41:
 5293 0403 55534152 		.ascii	"USART_Mode\000"
 5293      545F4D6F 
 5293      646500
 5294              	.LASF136:
 5295 040e 5F637674 		.ascii	"_cvtbuf\000"
 5295      62756600 
 5296              	.LASF224:
 5297 0416 55534152 		.ascii	"USART_ClockInit\000"
 5297      545F436C 
 5297      6F636B49 
ARM GAS  /tmp/ccLKhEJ6.s 			page 115


 5297      6E697400 
 5298              	.LASF215:
 5299 0426 55534152 		.ascii	"USART_Address\000"
 5299      545F4164 
 5299      64726573 
 5299      7300
 5300              	.LASF47:
 5301 0434 55534152 		.ascii	"USART_LastBit\000"
 5301      545F4C61 
 5301      73744269 
 5301      7400
 5302              	.LASF231:
 5303 0442 66726163 		.ascii	"fractionaldivider\000"
 5303      74696F6E 
 5303      616C6469 
 5303      76696465 
 5303      7200
 5304              	.LASF199:
 5305 0454 55534152 		.ascii	"USART_SmartCardCmd\000"
 5305      545F536D 
 5305      61727443 
 5305      61726443 
 5305      6D6400
 5306              	.LASF197:
 5307 0467 55534152 		.ascii	"USART_HalfDuplexCmd\000"
 5307      545F4861 
 5307      6C664475 
 5307      706C6578 
 5307      436D6400 
 5308              	.LASF179:
 5309 047b 5F5F6664 		.ascii	"__fdlib_version\000"
 5309      6C69625F 
 5309      76657273 
 5309      696F6E00 
 5310              	.LASF133:
 5311 048b 5F703573 		.ascii	"_p5s\000"
 5311      00
 5312              	.LASF10:
 5313 0490 6C6F6E67 		.ascii	"long unsigned int\000"
 5313      20756E73 
 5313      69676E65 
 5313      6420696E 
 5313      7400
 5314              	.LASF103:
 5315 04a2 5F5F7346 		.ascii	"__sFILE\000"
 5315      494C4500 
 5316              	.LASF129:
 5317 04aa 5F5F7364 		.ascii	"__sdidinit\000"
 5317      6964696E 
 5317      697400
 5318              	.LASF119:
 5319 04b5 5F666C61 		.ascii	"_flags2\000"
 5319      67733200 
 5320              	.LASF21:
 5321 04bd 53797374 		.ascii	"SystemCoreClock\000"
 5321      656D436F 
 5321      7265436C 
ARM GAS  /tmp/ccLKhEJ6.s 			page 116


 5321      6F636B00 
 5322              	.LASF65:
 5323 04cd 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5323      4B5F5245 
 5323      43555253 
 5323      4956455F 
 5323      5400
 5324              	.LASF121:
 5325 04df 5F657272 		.ascii	"_errno\000"
 5325      6E6F00
 5326              	.LASF60:
 5327 04e6 41636331 		.ascii	"Acc1G_Values\000"
 5327      475F5661 
 5327      6C756573 
 5327      00
 5328              	.LASF209:
 5329 04f3 55534152 		.ascii	"USART_LINBreakDetectLengthConfig\000"
 5329      545F4C49 
 5329      4E427265 
 5329      616B4465 
 5329      74656374 
 5330              	.LASF63:
 5331 0514 526F6C6C 		.ascii	"Roll\000"
 5331      00
 5332              	.LASF39:
 5333 0519 55534152 		.ascii	"USART_StopBits\000"
 5333      545F5374 
 5333      6F704269 
 5333      747300
 5334              	.LASF161:
 5335 0528 5F736967 		.ascii	"_signal_buf\000"
 5335      6E616C5F 
 5335      62756600 
 5336              	.LASF183:
 5337 0534 69746D61 		.ascii	"itmask\000"
 5337      736B00
 5338              	.LASF81:
 5339 053b 5F426967 		.ascii	"_Bigint\000"
 5339      696E7400 
 5340              	.LASF78:
 5341 0543 5F6D6178 		.ascii	"_maxwds\000"
 5341      77647300 
 5342              	.LASF130:
 5343 054b 5F5F636C 		.ascii	"__cleanup\000"
 5343      65616E75 
 5343      7000
 5344              	.LASF138:
 5345 0555 5F617465 		.ascii	"_atexit0\000"
 5345      78697430 
 5345      00
 5346              	.LASF176:
 5347 055e 5F5F6664 		.ascii	"__fdlibm_svid\000"
 5347      6C69626D 
 5347      5F737669 
 5347      6400
 5348              	.LASF9:
 5349 056c 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  /tmp/ccLKhEJ6.s 			page 117


 5349      6E743332 
 5349      5F7400
 5350              	.LASF126:
 5351 0577 5F656D65 		.ascii	"_emergency\000"
 5351      7267656E 
 5351      637900
 5352              	.LASF11:
 5353 0582 6C6F6E67 		.ascii	"long long int\000"
 5353      206C6F6E 
 5353      6720696E 
 5353      7400
 5354              	.LASF210:
 5355 0590 55534152 		.ascii	"USART_LINBreakDetectLength\000"
 5355      545F4C49 
 5355      4E427265 
 5355      616B4465 
 5355      74656374 
 5356              	.LASF144:
 5357 05ab 5F6E696F 		.ascii	"_niobs\000"
 5357      627300
 5358              	.LASF58:
 5359 05b2 47795F6F 		.ascii	"Gy_offset\000"
 5359      66667365 
 5359      7400
 5360              	.LASF140:
 5361 05bc 5F5F7367 		.ascii	"__sglue\000"
 5361      6C756500 
 5362              	.LASF170:
 5363 05c4 5F6E6D61 		.ascii	"_nmalloc\000"
 5363      6C6C6F63 
 5363      00
 5364              	.LASF174:
 5365 05cd 646F7562 		.ascii	"double\000"
 5365      6C6500
 5366              	.LASF34:
 5367 05d4 47545052 		.ascii	"GTPR\000"
 5367      00
 5368              	.LASF154:
 5369 05d9 5F67616D 		.ascii	"_gamma_signgam\000"
 5369      6D615F73 
 5369      69676E67 
 5369      616D00
 5370              	.LASF128:
 5371 05e8 5F637572 		.ascii	"_current_locale\000"
 5371      72656E74 
 5371      5F6C6F63 
 5371      616C6500 
 5372              	.LASF134:
 5373 05f8 5F667265 		.ascii	"_freelist\000"
 5373      656C6973 
 5373      7400
 5374              	.LASF145:
 5375 0602 5F696F62 		.ascii	"_iobs\000"
 5375      7300
 5376              	.LASF143:
 5377 0608 5F676C75 		.ascii	"_glue\000"
 5377      6500
ARM GAS  /tmp/ccLKhEJ6.s 			page 118


 5378              	.LASF20:
 5379 060e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5379      52784275 
 5379      66666572 
 5379      00
 5380              	.LASF79:
 5381 061b 5F736967 		.ascii	"_sign\000"
 5381      6E00
 5382              	.LASF232:
 5383 0621 5243435F 		.ascii	"RCC_ClocksStatus\000"
 5383      436C6F63 
 5383      6B735374 
 5383      61747573 
 5383      00
 5384              	.LASF190:
 5385 0632 55534152 		.ascii	"USART_GetFlagStatus\000"
 5385      545F4765 
 5385      74466C61 
 5385      67537461 
 5385      74757300 
 5386              	.LASF61:
 5387 0646 666C6F61 		.ascii	"float\000"
 5387      7400
 5388              	.LASF205:
 5389 064c 55534152 		.ascii	"USART_ReceiveData\000"
 5389      545F5265 
 5389      63656976 
 5389      65446174 
 5389      6100
 5390              	.LASF13:
 5391 065e 756E7369 		.ascii	"unsigned int\000"
 5391      676E6564 
 5391      20696E74 
 5391      00
 5392              	.LASF192:
 5393 066b 4E657753 		.ascii	"NewState\000"
 5393      74617465 
 5393      00
 5394              	.LASF168:
 5395 0674 5F685F65 		.ascii	"_h_errno\000"
 5395      72726E6F 
 5395      00
 5396              	.LASF166:
 5397 067d 5F776372 		.ascii	"_wcrtomb_state\000"
 5397      746F6D62 
 5397      5F737461 
 5397      746500
 5398              	.LASF86:
 5399 068c 5F5F746D 		.ascii	"__tm_mday\000"
 5399      5F6D6461 
 5399      7900
 5400              	.LASF137:
 5401 0696 5F6E6577 		.ascii	"_new\000"
 5401      00
 5402              	.LASF112:
 5403 069b 5F756275 		.ascii	"_ubuf\000"
 5403      6600
ARM GAS  /tmp/ccLKhEJ6.s 			page 119


 5404              	.LASF124:
 5405 06a1 5F737464 		.ascii	"_stderr\000"
 5405      65727200 
 5406              	.LASF159:
 5407 06a9 5F776374 		.ascii	"_wctomb_state\000"
 5407      6F6D625F 
 5407      73746174 
 5407      6500
 5408              	.LASF118:
 5409 06b7 5F6D6273 		.ascii	"_mbstate\000"
 5409      74617465 
 5409      00
 5410              	.LASF155:
 5411 06c0 5F72616E 		.ascii	"_rand_next\000"
 5411      645F6E65 
 5411      787400
 5412              	.LASF104:
 5413 06cb 5F666C61 		.ascii	"_flags\000"
 5413      677300
 5414              	.LASF97:
 5415 06d2 5F617465 		.ascii	"_atexit\000"
 5415      78697400 
 5416              	.LASF71:
 5417 06da 5F5F636F 		.ascii	"__count\000"
 5417      756E7400 
 5418              	.LASF188:
 5419 06e2 55534152 		.ascii	"USART_FLAG\000"
 5419      545F464C 
 5419      414700
 5420              	.LASF204:
 5421 06ed 55534152 		.ascii	"USART_SendBreak\000"
 5421      545F5365 
 5421      6E644272 
 5421      65616B00 
 5422              	.LASF182:
 5423 06fd 62697470 		.ascii	"bitpos\000"
 5423      6F7300
 5424              	.LASF89:
 5425 0704 5F5F746D 		.ascii	"__tm_wday\000"
 5425      5F776461 
 5425      7900
 5426              	.LASF25:
 5427 070e 44495341 		.ascii	"DISABLE\000"
 5427      424C4500 
 5428              	.LASF24:
 5429 0716 49545374 		.ascii	"ITStatus\000"
 5429      61747573 
 5429      00
 5430              	.LASF64:
 5431 071f 6C6F6E67 		.ascii	"long double\000"
 5431      20646F75 
 5431      626C6500 
 5432              	.LASF90:
 5433 072b 5F5F746D 		.ascii	"__tm_yday\000"
 5433      5F796461 
 5433      7900
 5434              	.LASF147:
ARM GAS  /tmp/ccLKhEJ6.s 			page 120


 5435 0735 5F736565 		.ascii	"_seed\000"
 5435      6400
 5436              	.LASF203:
 5437 073b 55534152 		.ascii	"USART_GuardTime\000"
 5437      545F4775 
 5437      61726454 
 5437      696D6500 
 5438              	.LASF110:
 5439 074b 5F736565 		.ascii	"_seek\000"
 5439      6B00
 5440              	.LASF115:
 5441 0751 5F6F6666 		.ascii	"_offset\000"
 5441      73657400 
 5442              	.LASF67:
 5443 0759 5F66706F 		.ascii	"_fpos_t\000"
 5443      735F7400 
 5444              	.LASF70:
 5445 0761 5F5F7763 		.ascii	"__wchb\000"
 5445      686200
 5446              	.LASF158:
 5447 0768 5F6D6274 		.ascii	"_mbtowc_state\000"
 5447      6F77635F 
 5447      73746174 
 5447      6500
 5448              	.LASF27:
 5449 0776 46756E63 		.ascii	"FunctionalState\000"
 5449      74696F6E 
 5449      616C5374 
 5449      61746500 
 5450              	.LASF12:
 5451 0786 6C6F6E67 		.ascii	"long long unsigned int\000"
 5451      206C6F6E 
 5451      6720756E 
 5451      7369676E 
 5451      65642069 
 5452              	.LASF16:
 5453 079d 75696E74 		.ascii	"uint16_t\000"
 5453      31365F74 
 5453      00
 5454              	.LASF94:
 5455 07a6 5F64736F 		.ascii	"_dso_handle\000"
 5455      5F68616E 
 5455      646C6500 
 5456              	.LASF146:
 5457 07b2 5F72616E 		.ascii	"_rand48\000"
 5457      64343800 
 5458              	.LASF123:
 5459 07ba 5F737464 		.ascii	"_stdout\000"
 5459      6F757400 
 5460              	.LASF236:
 5461 07c2 5F5F6664 		.ascii	"__fdlibm_version\000"
 5461      6C69626D 
 5461      5F766572 
 5461      73696F6E 
 5461      00
 5462              	.LASF114:
 5463 07d3 5F626C6B 		.ascii	"_blksize\000"
ARM GAS  /tmp/ccLKhEJ6.s 			page 121


 5463      73697A65 
 5463      00
 5464              	.LASF101:
 5465 07dc 5F626173 		.ascii	"_base\000"
 5465      6500
 5466              	.LASF221:
 5467 07e2 55534152 		.ascii	"USART_Cmd\000"
 5467      545F436D 
 5467      6400
 5468              	.LASF151:
 5469 07ec 5F737472 		.ascii	"_strtok_last\000"
 5469      746F6B5F 
 5469      6C617374 
 5469      00
 5470              	.LASF164:
 5471 07f9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5471      746F7763 
 5471      5F737461 
 5471      746500
 5472              	.LASF74:
 5473 0808 5F666C6F 		.ascii	"_flock_t\000"
 5473      636B5F74 
 5473      00
 5474              	.LASF214:
 5475 0811 55534152 		.ascii	"USART_SetAddress\000"
 5475      545F5365 
 5475      74416464 
 5475      72657373 
 5475      00
 5476              	.LASF142:
 5477 0822 5F5F4649 		.ascii	"__FILE\000"
 5477      4C4500
 5478              	.LASF3:
 5479 0829 5F5F696E 		.ascii	"__int16_t\000"
 5479      7431365F 
 5479      7400
 5480              	.LASF22:
 5481 0833 52455345 		.ascii	"RESET\000"
 5481      5400
 5482              	.LASF73:
 5483 0839 5F6D6273 		.ascii	"_mbstate_t\000"
 5483      74617465 
 5483      5F7400
 5484              	.LASF156:
 5485 0844 5F723438 		.ascii	"_r48\000"
 5485      00
 5486              	.LASF43:
 5487 0849 55534152 		.ascii	"USART_InitTypeDef\000"
 5487      545F496E 
 5487      69745479 
 5487      70654465 
 5487      6600
 5488              	.LASF68:
 5489 085b 77696E74 		.ascii	"wint_t\000"
 5489      5F7400
 5490              	.LASF198:
 5491 0862 55534152 		.ascii	"USART_SmartCardNACKCmd\000"
ARM GAS  /tmp/ccLKhEJ6.s 			page 122


 5491      545F536D 
 5491      61727443 
 5491      6172644E 
 5491      41434B43 
 5492              	.LASF77:
 5493 0879 5F6E6578 		.ascii	"_next\000"
 5493      7400
 5494              	.LASF225:
 5495 087f 746D7072 		.ascii	"tmpreg\000"
 5495      656700
 5496              	.LASF116:
 5497 0886 5F646174 		.ascii	"_data\000"
 5497      6100
 5498              	.LASF23:
 5499 088c 466C6167 		.ascii	"FlagStatus\000"
 5499      53746174 
 5499      757300
 5500              	.LASF217:
 5501 0897 55534152 		.ascii	"USART_DMAReq\000"
 5501      545F444D 
 5501      41526571 
 5501      00
 5502              	.LASF178:
 5503 08a4 5F5F6664 		.ascii	"__fdlibm_posix\000"
 5503      6C69626D 
 5503      5F706F73 
 5503      697800
 5504              	.LASF54:
 5505 08b3 5243435F 		.ascii	"RCC_ClocksTypeDef\000"
 5505      436C6F63 
 5505      6B735479 
 5505      70654465 
 5505      6600
 5506              	.LASF201:
 5507 08c5 55534152 		.ascii	"USART_Prescaler\000"
 5507      545F5072 
 5507      65736361 
 5507      6C657200 
 5508              	.LASF207:
 5509 08d5 44617461 		.ascii	"Data\000"
 5509      00
 5510              	.LASF157:
 5511 08da 5F6D626C 		.ascii	"_mblen_state\000"
 5511      656E5F73 
 5511      74617465 
 5511      00
 5512              	.LASF4:
 5513 08e7 73686F72 		.ascii	"short int\000"
 5513      7420696E 
 5513      7400
 5514              	.LASF177:
 5515 08f1 5F5F6664 		.ascii	"__fdlibm_xopen\000"
 5515      6C69626D 
 5515      5F786F70 
 5515      656E00
 5516              	.LASF15:
 5517 0900 696E7431 		.ascii	"int16_t\000"
ARM GAS  /tmp/ccLKhEJ6.s 			page 123


 5517      365F7400 
 5518              	.LASF95:
 5519 0908 5F666E74 		.ascii	"_fntypes\000"
 5519      79706573 
 5519      00
 5520              	.LASF185:
 5521 0911 62697473 		.ascii	"bitstatus\000"
 5521      74617475 
 5521      7300
 5522              	.LASF26:
 5523 091b 454E4142 		.ascii	"ENABLE\000"
 5523      4C4500
 5524              	.LASF193:
 5525 0922 55534152 		.ascii	"USART_IrDAConfig\000"
 5525      545F4972 
 5525      4441436F 
 5525      6E666967 
 5525      00
 5526              	.LASF88:
 5527 0933 5F5F746D 		.ascii	"__tm_year\000"
 5527      5F796561 
 5527      7200
 5528              	.LASF213:
 5529 093d 55534152 		.ascii	"USART_WakeUp\000"
 5529      545F5761 
 5529      6B655570 
 5529      00
 5530              	.LASF106:
 5531 094a 5F6C6266 		.ascii	"_lbfsize\000"
 5531      73697A65 
 5531      00
 5532              	.LASF56:
 5533 0953 61636365 		.ascii	"accel\000"
 5533      6C00
 5534              	.LASF125:
 5535 0959 5F696E63 		.ascii	"_inc\000"
 5535      00
 5536              	.LASF98:
 5537 095e 5F696E64 		.ascii	"_ind\000"
 5537      00
 5538              	.LASF57:
 5539 0963 47785F6F 		.ascii	"Gx_offset\000"
 5539      66667365 
 5539      7400
 5540              	.LASF186:
 5541 096d 55534152 		.ascii	"USART_ClearITPendingBit\000"
 5541      545F436C 
 5541      65617249 
 5541      5450656E 
 5541      64696E67 
 5542              	.LASF175:
 5543 0985 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 5543      6C69626D 
 5543      5F696565 
 5543      6500
 5544              	.LASF100:
 5545 0993 5F5F7362 		.ascii	"__sbuf\000"
ARM GAS  /tmp/ccLKhEJ6.s 			page 124


 5545      756600
 5546              	.LASF96:
 5547 099a 5F69735F 		.ascii	"_is_cxa\000"
 5547      63786100 
 5548              	.LASF169:
 5549 09a2 5F6E6578 		.ascii	"_nextf\000"
 5549      746600
 5550              	.LASF230:
 5551 09a9 696E7465 		.ascii	"integerdivider\000"
 5551      67657264 
 5551      69766964 
 5551      657200
 5552              	.LASF237:
 5553 09b8 55534152 		.ascii	"USART_DeInit\000"
 5553      545F4465 
 5553      496E6974 
 5553      00
 5554              	.LASF62:
 5555 09c5 50697463 		.ascii	"Pitch\000"
 5555      6800
 5556              	.LASF76:
 5557 09cb 5F5F554C 		.ascii	"__ULong\000"
 5557      6F6E6700 
 5558              	.LASF18:
 5559 09d3 75696E74 		.ascii	"uint32_t\000"
 5559      33325F74 
 5559      00
 5560              	.LASF131:
 5561 09dc 5F726573 		.ascii	"_result\000"
 5561      756C7400 
 5562              	.LASF200:
 5563 09e4 55534152 		.ascii	"USART_SetPrescaler\000"
 5563      545F5365 
 5563      74507265 
 5563      7363616C 
 5563      657200
 5564              	.LASF42:
 5565 09f7 55534152 		.ascii	"USART_HardwareFlowControl\000"
 5565      545F4861 
 5565      72647761 
 5565      7265466C 
 5565      6F77436F 
 5566              	.LASF211:
 5567 0a11 55534152 		.ascii	"USART_ReceiverWakeUpCmd\000"
 5567      545F5265 
 5567      63656976 
 5567      65725761 
 5567      6B655570 
 5568              	.LASF66:
 5569 0a29 5F6F6666 		.ascii	"_off_t\000"
 5569      5F7400
 5570              	.LASF233:
 5571 0a30 474E5520 		.ascii	"GNU C11 6.1.1 20160526 -mcpu=cortex-m3 -mthumb -g -"
 5571      43313120 
 5571      362E312E 
 5571      31203230 
 5571      31363035 
ARM GAS  /tmp/ccLKhEJ6.s 			page 125


 5572 0a63 666E6F2D 		.ascii	"fno-common\000"
 5572      636F6D6D 
 5572      6F6E00
 5573              	.LASF149:
 5574 0a6e 5F616464 		.ascii	"_add\000"
 5574      00
 5575              	.LASF6:
 5576 0a73 73686F72 		.ascii	"short unsigned int\000"
 5576      7420756E 
 5576      7369676E 
 5576      65642069 
 5576      6E7400
 5577              	.LASF85:
 5578 0a86 5F5F746D 		.ascii	"__tm_hour\000"
 5578      5F686F75 
 5578      7200
 5579              	.LASF49:
 5580 0a90 53595343 		.ascii	"SYSCLK_Frequency\000"
 5580      4C4B5F46 
 5580      72657175 
 5580      656E6379 
 5580      00
 5581              	.LASF202:
 5582 0aa1 55534152 		.ascii	"USART_SetGuardTime\000"
 5582      545F5365 
 5582      74477561 
 5582      72645469 
 5582      6D6500
 5583              	.LASF165:
 5584 0ab4 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5584      72746F77 
 5584      63735F73 
 5584      74617465 
 5584      00
 5585              	.LASF7:
 5586 0ac5 5F5F696E 		.ascii	"__int32_t\000"
 5586      7433325F 
 5586      7400
 5587              	.LASF220:
 5588 0acf 75736172 		.ascii	"usartxbase\000"
 5588      74786261 
 5588      736500
 5589              	.LASF93:
 5590 0ada 5F666E61 		.ascii	"_fnargs\000"
 5590      72677300 
 5591              	.LASF91:
 5592 0ae2 5F5F746D 		.ascii	"__tm_isdst\000"
 5592      5F697364 
 5592      737400
 5593              	.LASF84:
 5594 0aed 5F5F746D 		.ascii	"__tm_min\000"
 5594      5F6D696E 
 5594      00
 5595              	.LASF162:
 5596 0af6 5F676574 		.ascii	"_getdate_err\000"
 5596      64617465 
 5596      5F657272 
ARM GAS  /tmp/ccLKhEJ6.s 			page 126


 5596      00
 5597              	.LASF187:
 5598 0b03 55534152 		.ascii	"USART_ClearFlag\000"
 5598      545F436C 
 5598      65617246 
 5598      6C616700 
 5599              		.ident	"GCC: (Arch Repository) 6.1.1 20160526"
ARM GAS  /tmp/ccLKhEJ6.s 			page 127


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_usart.c
     /tmp/ccLKhEJ6.s:15     .text:0000000000000000 $t
     /tmp/ccLKhEJ6.s:22     .text:0000000000000000 USART_DeInit
     /tmp/ccLKhEJ6.s:127    .text:00000000000000a4 $d
     /tmp/ccLKhEJ6.s:135    .text:00000000000000b8 $t
     /tmp/ccLKhEJ6.s:142    .text:00000000000000b8 USART_Init
     /tmp/ccLKhEJ6.s:366    .text:0000000000000224 $d
     /tmp/ccLKhEJ6.s:371    .text:000000000000022c $t
     /tmp/ccLKhEJ6.s:378    .text:000000000000022c USART_StructInit
     /tmp/ccLKhEJ6.s:438    .text:0000000000000264 USART_ClockInit
     /tmp/ccLKhEJ6.s:514    .text:00000000000002ba USART_ClockStructInit
     /tmp/ccLKhEJ6.s:566    .text:00000000000002e4 USART_Cmd
     /tmp/ccLKhEJ6.s:628    .text:0000000000000322 USART_ITConfig
     /tmp/ccLKhEJ6.s:744    .text:00000000000003b0 USART_DMACmd
     /tmp/ccLKhEJ6.s:812    .text:00000000000003f6 USART_SetAddress
     /tmp/ccLKhEJ6.s:868    .text:000000000000042e USART_WakeUpConfig
     /tmp/ccLKhEJ6.s:923    .text:0000000000000464 USART_ReceiverWakeUpCmd
     /tmp/ccLKhEJ6.s:985    .text:00000000000004a2 USART_LINBreakDetectLengthConfig
     /tmp/ccLKhEJ6.s:1040   .text:00000000000004d8 USART_LINCmd
     /tmp/ccLKhEJ6.s:1102   .text:0000000000000516 USART_SendData
     /tmp/ccLKhEJ6.s:1146   .text:0000000000000538 USART_ReceiveData
     /tmp/ccLKhEJ6.s:1188   .text:0000000000000556 USART_SendBreak
     /tmp/ccLKhEJ6.s:1232   .text:0000000000000578 USART_SetGuardTime
     /tmp/ccLKhEJ6.s:1290   .text:00000000000005b2 USART_SetPrescaler
     /tmp/ccLKhEJ6.s:1346   .text:00000000000005ea USART_SmartCardCmd
     /tmp/ccLKhEJ6.s:1408   .text:0000000000000628 USART_SmartCardNACKCmd
     /tmp/ccLKhEJ6.s:1470   .text:0000000000000666 USART_HalfDuplexCmd
     /tmp/ccLKhEJ6.s:1532   .text:00000000000006a4 USART_OverSampling8Cmd
     /tmp/ccLKhEJ6.s:1595   .text:00000000000006e6 USART_OneBitMethodCmd
     /tmp/ccLKhEJ6.s:1657   .text:0000000000000724 USART_IrDAConfig
     /tmp/ccLKhEJ6.s:1712   .text:000000000000075a USART_IrDACmd
     /tmp/ccLKhEJ6.s:1774   .text:0000000000000798 USART_GetFlagStatus
     /tmp/ccLKhEJ6.s:1835   .text:00000000000007ce USART_ClearFlag
     /tmp/ccLKhEJ6.s:1879   .text:00000000000007ee USART_GetITStatus
     /tmp/ccLKhEJ6.s:2016   .text:00000000000008a2 USART_ClearITPendingBit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
